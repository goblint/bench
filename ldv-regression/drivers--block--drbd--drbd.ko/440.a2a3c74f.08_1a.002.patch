25a26,27
> #line 18 "include/asm-generic/int-ll64.h"
> typedef short s16;
148a151,152
> #line 157 "include/linux/init.h"
> typedef void (*ctor_fn_t)(void);
170,177c174,179
< #line 14 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/spinlock_types.h"
< typedef u16 __ticket_t;
< #line 15 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/spinlock_types.h"
< typedef u32 __ticketpair_t;
< #line 16 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/spinlock_types.h"
< struct __raw_tickets {
<    __ticket_t head ;
<    __ticket_t tail ;
---
> #line 710 "include/linux/kernel.h"
> struct bug_entry {
>    int bug_addr_disp ;
>    int file_disp ;
>    unsigned short line ;
>    unsigned short flags ;
179,182c181,192
< #line 26 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/spinlock_types.h"
< union __anonunion_ldv_2023_8 {
<    __ticketpair_t head_tail ;
<    struct __raw_tickets tickets ;
---
> #line 96 "include/linux/bug.h"
> struct timespec;
> #line 97
> struct compat_timespec;
> #line 98 "include/linux/bug.h"
> struct __anonstruct_futex_9 {
>    u32 *uaddr ;
>    u32 val ;
>    u32 flags ;
>    u32 bitset ;
>    u64 time ;
>    u32 *uaddr2 ;
184,186c194,199
< #line 26 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/spinlock_types.h"
< struct arch_spinlock {
<    union __anonunion_ldv_2023_8 ldv_2023 ;
---
> #line 98 "include/linux/bug.h"
> struct __anonstruct_nanosleep_10 {
>    clockid_t clockid ;
>    struct timespec *rmtp ;
>    struct compat_timespec *compat_rmtp ;
>    u64 expires ;
188,193c201,209
< #line 27 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/spinlock_types.h"
< typedef struct arch_spinlock arch_spinlock_t;
< #line 33 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/rwlock.h"
< struct __anonstruct_ldv_2030_10 {
<    u32 read ;
<    s32 write ;
---
> #line 98
> struct pollfd;
> #line 98 "include/linux/bug.h"
> struct __anonstruct_poll_11 {
>    struct pollfd *ufds ;
>    int nfds ;
>    int has_timeout ;
>    unsigned long tv_sec ;
>    unsigned long tv_nsec ;
195,198c211,215
< #line 33 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/rwlock.h"
< union __anonunion_arch_rwlock_t_9 {
<    s64 lock ;
<    struct __anonstruct_ldv_2030_10 ldv_2030 ;
---
> #line 98 "include/linux/bug.h"
> union __anonunion_ldv_2106_8 {
>    struct __anonstruct_futex_9 futex ;
>    struct __anonstruct_nanosleep_10 nanosleep ;
>    struct __anonstruct_poll_11 poll ;
200,202c217,224
< #line 33 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/rwlock.h"
< typedef union __anonunion_arch_rwlock_t_9 arch_rwlock_t;
< #line 34
---
> #line 98 "include/linux/bug.h"
> struct restart_block {
>    long (*fn)(struct restart_block * ) ;
>    union __anonunion_ldv_2106_8 ldv_2106 ;
> };
> #line 58 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/page_types.h"
> struct page;
> #line 26 "include/asm-generic/getorder.h"
204,206c226,228
< #line 35
< struct lockdep_map;
< #line 18 "include/linux/lockdep.h"
---
> #line 27
> struct exec_domain;
> #line 28
208c230
< #line 58 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/page_types.h"
---
> #line 270 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/segment.h"
233c255
< struct __anonstruct_ldv_2147_12 {
---
> struct __anonstruct_ldv_2240_13 {
238c260
< struct __anonstruct_ldv_2162_13 {
---
> struct __anonstruct_ldv_2255_14 {
254,256c276,278
< union __anonunion_ldv_2163_11 {
<    struct __anonstruct_ldv_2147_12 ldv_2147 ;
<    struct __anonstruct_ldv_2162_13 ldv_2162 ;
---
> union __anonunion_ldv_2256_12 {
>    struct __anonstruct_ldv_2240_13 ldv_2240 ;
>    struct __anonstruct_ldv_2255_14 ldv_2255 ;
260c282
<    union __anonunion_ldv_2163_11 ldv_2163 ;
---
>    union __anonunion_ldv_2256_12 ldv_2256 ;
273c295
< struct __anonstruct_pgd_t_15 {
---
> struct __anonstruct_pgd_t_16 {
277,279c299
< typedef struct __anonstruct_pgd_t_15 pgd_t;
< #line 282
< struct page;
---
> typedef struct __anonstruct_pgd_t_16 pgd_t;
289a310,311
> #line 326 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/paravirt_types.h"
> struct arch_spinlock;
303c325
< union __anonunion_ldv_2766_18 {
---
> union __anonunion_ldv_2859_19 {
310c332
<    union __anonunion_ldv_2766_18 ldv_2766 ;
---
>    union __anonunion_ldv_2859_19 ldv_2859 ;
312c334
< #line 96 "include/linux/bug.h"
---
> #line 306 "include/linux/bitmap.h"
320,321c342,343
< #line 233 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/special_insns.h"
< struct exec_domain;
---
> #line 195 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/paravirt.h"
> struct static_key;
354c376
< struct __anonstruct_ldv_5121_23 {
---
> struct __anonstruct_ldv_5167_24 {
359c381
< struct __anonstruct_ldv_5127_24 {
---
> struct __anonstruct_ldv_5173_25 {
366,368c388,390
< union __anonunion_ldv_5128_22 {
<    struct __anonstruct_ldv_5121_23 ldv_5121 ;
<    struct __anonstruct_ldv_5127_24 ldv_5127 ;
---
> union __anonunion_ldv_5174_23 {
>    struct __anonstruct_ldv_5167_24 ldv_5167 ;
>    struct __anonstruct_ldv_5173_25 ldv_5173 ;
371c393
< union __anonunion_ldv_5137_25 {
---
> union __anonunion_ldv_5183_26 {
381c403
<    union __anonunion_ldv_5128_22 ldv_5128 ;
---
>    union __anonunion_ldv_5174_23 ldv_5174 ;
387c409
<    union __anonunion_ldv_5137_25 ldv_5137 ;
---
>    union __anonunion_ldv_5183_26 ldv_5183 ;
465c487
< struct __anonstruct_mm_segment_t_27 {
---
> struct __anonstruct_mm_segment_t_28 {
469c491
< typedef struct __anonstruct_mm_segment_t_27 mm_segment_t;
---
> typedef struct __anonstruct_mm_segment_t_28 mm_segment_t;
471a494,541
> #line 131 "include/asm-generic/atomic-long.h"
> struct thread_info {
>    struct task_struct *task ;
>    struct exec_domain *exec_domain ;
>    __u32 flags ;
>    __u32 status ;
>    __u32 cpu ;
>    int preempt_count ;
>    mm_segment_t addr_limit ;
>    struct restart_block restart_block ;
>    void *sysenter_return ;
>    unsigned char sig_on_uaccess_error : 1 ;
>    unsigned char uaccess_err : 1 ;
> };
> #line 14 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/spinlock_types.h"
> typedef u16 __ticket_t;
> #line 15 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/spinlock_types.h"
> typedef u32 __ticketpair_t;
> #line 16 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/spinlock_types.h"
> struct __raw_tickets {
>    __ticket_t head ;
>    __ticket_t tail ;
> };
> #line 26 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/spinlock_types.h"
> union __anonunion_ldv_5911_29 {
>    __ticketpair_t head_tail ;
>    struct __raw_tickets tickets ;
> };
> #line 26 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/spinlock_types.h"
> struct arch_spinlock {
>    union __anonunion_ldv_5911_29 ldv_5911 ;
> };
> #line 27 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/spinlock_types.h"
> typedef struct arch_spinlock arch_spinlock_t;
> #line 33 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/rwlock.h"
> struct __anonstruct_ldv_5918_31 {
>    u32 read ;
>    s32 write ;
> };
> #line 33 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/rwlock.h"
> union __anonunion_arch_rwlock_t_30 {
>    s64 lock ;
>    struct __anonstruct_ldv_5918_31 ldv_5918 ;
> };
> #line 33 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/rwlock.h"
> typedef union __anonunion_arch_rwlock_t_30 arch_rwlock_t;
> #line 34
> struct lockdep_map;
482c552
< } __attribute__((__packed__)) ;
---
> };
540c610
< struct __anonstruct_ldv_5956_29 {
---
> struct __anonstruct_ldv_6134_33 {
545c615
< union __anonunion_ldv_5957_28 {
---
> union __anonunion_ldv_6135_32 {
547c617
<    struct __anonstruct_ldv_5956_29 ldv_5956 ;
---
>    struct __anonstruct_ldv_6134_33 ldv_6134 ;
551c621
<    union __anonunion_ldv_5957_28 ldv_5957 ;
---
>    union __anonunion_ldv_6135_32 ldv_6135 ;
556c626
< struct __anonstruct_rwlock_t_30 {
---
> struct __anonstruct_rwlock_t_34 {
564,637c634
< typedef struct __anonstruct_rwlock_t_30 rwlock_t;
< #line 23 "include/linux/rwlock_types.h"
< struct mutex {
<    atomic_t count ;
<    spinlock_t wait_lock ;
<    struct list_head wait_list ;
<    struct task_struct *owner ;
<    char const   *name ;
<    void *magic ;
<    struct lockdep_map dep_map ;
< };
< #line 63 "include/linux/mutex.h"
< struct mutex_waiter {
<    struct list_head list ;
<    struct task_struct *task ;
<    void *magic ;
< };
< #line 100 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
< struct timespec;
< #line 101
< struct compat_timespec;
< #line 102 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
< struct __anonstruct_futex_32 {
<    u32 *uaddr ;
<    u32 val ;
<    u32 flags ;
<    u32 bitset ;
<    u64 time ;
<    u32 *uaddr2 ;
< };
< #line 102 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
< struct __anonstruct_nanosleep_33 {
<    clockid_t clockid ;
<    struct timespec *rmtp ;
<    struct compat_timespec *compat_rmtp ;
<    u64 expires ;
< };
< #line 102
< struct pollfd;
< #line 102 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
< struct __anonstruct_poll_34 {
<    struct pollfd *ufds ;
<    int nfds ;
<    int has_timeout ;
<    unsigned long tv_sec ;
<    unsigned long tv_nsec ;
< };
< #line 102 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
< union __anonunion_ldv_6252_31 {
<    struct __anonstruct_futex_32 futex ;
<    struct __anonstruct_nanosleep_33 nanosleep ;
<    struct __anonstruct_poll_34 poll ;
< };
< #line 102 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
< struct restart_block {
<    long (*fn)(struct restart_block * ) ;
<    union __anonunion_ldv_6252_31 ldv_6252 ;
< };
< #line 52 "include/linux/thread_info.h"
< struct thread_info {
<    struct task_struct *task ;
<    struct exec_domain *exec_domain ;
<    __u32 flags ;
<    __u32 status ;
<    __u32 cpu ;
<    int preempt_count ;
<    mm_segment_t addr_limit ;
<    struct restart_block restart_block ;
<    void *sysenter_return ;
<    unsigned char sig_on_uaccess_error : 1 ;
<    unsigned char uaccess_err : 1 ;
< };
< #line 394 "include/linux/spinlock.h"
< struct vm_area_struct;
---
> typedef struct __anonstruct_rwlock_t_34 rwlock_t;
655a653,730
> #line 83 "include/linux/highuid.h"
> struct user_namespace;
> #line 46 "include/linux/uidgid.h"
> typedef uid_t kuid_t;
> #line 47 "include/linux/uidgid.h"
> typedef gid_t kgid_t;
> #line 197 "include/linux/uidgid.h"
> struct kstat {
>    u64 ino ;
>    dev_t dev ;
>    umode_t mode ;
>    unsigned int nlink ;
>    kuid_t uid ;
>    kgid_t gid ;
>    dev_t rdev ;
>    loff_t size ;
>    struct timespec atime ;
>    struct timespec mtime ;
>    struct timespec ctime ;
>    unsigned long blksize ;
>    unsigned long long blocks ;
> };
> #line 11 "include/linux/wait.h"
> struct __wait_queue;
> #line 11 "include/linux/wait.h"
> typedef struct __wait_queue wait_queue_t;
> #line 14 "include/linux/wait.h"
> struct __wait_queue {
>    unsigned int flags ;
>    void *private ;
>    int (*func)(wait_queue_t * , unsigned int  , int  , void * ) ;
>    struct list_head task_list ;
> };
> #line 32 "include/linux/wait.h"
> struct __wait_queue_head {
>    spinlock_t lock ;
>    struct list_head task_list ;
> };
> #line 37 "include/linux/wait.h"
> typedef struct __wait_queue_head wait_queue_head_t;
> #line 98 "include/linux/nodemask.h"
> struct __anonstruct_nodemask_t_36 {
>    unsigned long bits[16U] ;
> };
> #line 98 "include/linux/nodemask.h"
> typedef struct __anonstruct_nodemask_t_36 nodemask_t;
> #line 721 "include/linux/mmzone.h"
> struct mutex {
>    atomic_t count ;
>    spinlock_t wait_lock ;
>    struct list_head wait_list ;
>    struct task_struct *owner ;
>    char const   *name ;
>    void *magic ;
>    struct lockdep_map dep_map ;
> };
> #line 63 "include/linux/mutex.h"
> struct mutex_waiter {
>    struct list_head list ;
>    struct task_struct *task ;
>    void *magic ;
> };
> #line 171
> struct rw_semaphore;
> #line 172 "include/linux/mutex.h"
> struct rw_semaphore {
>    long count ;
>    raw_spinlock_t wait_lock ;
>    struct list_head wait_list ;
>    struct lockdep_map dep_map ;
> };
> #line 128 "include/linux/rwsem.h"
> struct completion {
>    unsigned int done ;
>    wait_queue_head_t wait ;
> };
> #line 189 "include/linux/rcupdate.h"
> struct notifier_block;
662c737
< #line 105 "include/linux/debugobjects.h"
---
> #line 334
664c739
< #line 106 "include/linux/debugobjects.h"
---
> #line 335 "include/linux/ktime.h"
696,718c771,775
< #line 18 "include/linux/smp.h"
< struct call_single_data {
<    struct list_head list ;
<    void (*func)(void * ) ;
<    void *info ;
<    u16 flags ;
<    u16 priv ;
< };
< #line 11 "include/linux/wait.h"
< struct __wait_queue;
< #line 11 "include/linux/wait.h"
< typedef struct __wait_queue wait_queue_t;
< #line 14 "include/linux/wait.h"
< struct __wait_queue {
<    unsigned int flags ;
<    void *private ;
<    int (*func)(wait_queue_t * , unsigned int  , int  , void * ) ;
<    struct list_head task_list ;
< };
< #line 32 "include/linux/wait.h"
< struct __wait_queue_head {
<    spinlock_t lock ;
<    struct list_head task_list ;
---
> #line 269 "include/linux/srcu.h"
> struct notifier_block {
>    int (*notifier_call)(struct notifier_block * , unsigned long  , void * ) ;
>    struct notifier_block *next ;
>    int priority ;
720,725c777,780
< #line 37 "include/linux/wait.h"
< typedef struct __wait_queue_head wait_queue_head_t;
< #line 649 "include/linux/wait.h"
< struct completion {
<    unsigned int done ;
<    wait_queue_head_t wait ;
---
> #line 60 "include/linux/notifier.h"
> struct blocking_notifier_head {
>    struct rw_semaphore rwsem ;
>    struct notifier_block *head ;
726a782,783
> #line 855 "include/linux/mmzone.h"
> struct ctl_table;
832,837d888
< #line 98 "include/linux/nodemask.h"
< struct __anonstruct_nodemask_t_100 {
<    unsigned long bits[16U] ;
< };
< #line 98 "include/linux/nodemask.h"
< typedef struct __anonstruct_nodemask_t_100 nodemask_t;
847a899,900
> #line 18 "include/asm-generic/pci_iomap.h"
> struct vm_area_struct;
850,857c903,909
< #line 721 "include/linux/mmzone.h"
< struct rw_semaphore;
< #line 722 "include/linux/mmzone.h"
< struct rw_semaphore {
<    long count ;
<    raw_spinlock_t wait_lock ;
<    struct list_head wait_list ;
<    struct lockdep_map dep_map ;
---
> #line 18 "include/linux/smp.h"
> struct call_single_data {
>    struct list_head list ;
>    void (*func)(void * ) ;
>    void *info ;
>    u16 flags ;
>    u16 priv ;
859,865c911,915
< #line 189 "include/linux/rcupdate.h"
< struct notifier_block;
< #line 269 "include/linux/srcu.h"
< struct notifier_block {
<    int (*notifier_call)(struct notifier_block * , unsigned long  , void * ) ;
<    struct notifier_block *next ;
<    int priority ;
---
> #line 389 "include/linux/gfp.h"
> struct rb_node {
>    unsigned long __rb_parent_color ;
>    struct rb_node *rb_right ;
>    struct rb_node *rb_left ;
867,870c917,919
< #line 60 "include/linux/notifier.h"
< struct blocking_notifier_head {
<    struct rw_semaphore rwsem ;
<    struct notifier_block *head ;
---
> #line 40 "include/linux/rbtree.h"
> struct rb_root {
>    struct rb_node *rb_node ;
872,880c921,934
< #line 855 "include/linux/mmzone.h"
< struct ctl_table;
< #line 345 "include/linux/irq.h"
< struct proc_dir_entry;
< #line 189 "include/linux/hardirq.h"
< struct hlist_nulls_node;
< #line 189 "include/linux/hardirq.h"
< struct hlist_nulls_head {
<    struct hlist_nulls_node *first ;
---
> #line 835 "include/uapi/linux/sysctl.h"
> struct nsproxy;
> #line 836
> struct ctl_table_root;
> #line 837
> struct ctl_table_header;
> #line 838
> struct ctl_dir;
> #line 39 "include/linux/sysctl.h"
> typedef int proc_handler(struct ctl_table * , int  , void * , size_t * , loff_t * );
> #line 59 "include/linux/sysctl.h"
> struct ctl_table_poll {
>    atomic_t event ;
>    wait_queue_head_t wait ;
882,885c936,946
< #line 20 "include/linux/list_nulls.h"
< struct hlist_nulls_node {
<    struct hlist_nulls_node *next ;
<    struct hlist_nulls_node **pprev ;
---
> #line 98 "include/linux/sysctl.h"
> struct ctl_table {
>    char const   *procname ;
>    void *data ;
>    int maxlen ;
>    umode_t mode ;
>    struct ctl_table *child ;
>    proc_handler *proc_handler ;
>    struct ctl_table_poll *poll ;
>    void *extra1 ;
>    void *extra2 ;
887,889c948,951
< #line 85 "include/linux/list_nulls.h"
< struct plist_head {
<    struct list_head node_list ;
---
> #line 119 "include/linux/sysctl.h"
> struct ctl_node {
>    struct rb_node node ;
>    struct ctl_table_header *header ;
891,895c953,958
< #line 84 "include/linux/plist.h"
< struct plist_node {
<    int prio ;
<    struct list_head prio_list ;
<    struct list_head node_list ;
---
> #line 124 "include/linux/sysctl.h"
> struct __anonstruct_ldv_12753_129 {
>    struct ctl_table *ctl_table ;
>    int used ;
>    int count ;
>    int nreg ;
897c960,1014
< #line 64 "include/linux/miscdevice.h"
---
> #line 124 "include/linux/sysctl.h"
> union __anonunion_ldv_12755_128 {
>    struct __anonstruct_ldv_12753_129 ldv_12753 ;
>    struct callback_head rcu ;
> };
> #line 124
> struct ctl_table_set;
> #line 124 "include/linux/sysctl.h"
> struct ctl_table_header {
>    union __anonunion_ldv_12755_128 ldv_12755 ;
>    struct completion *unregistering ;
>    struct ctl_table *ctl_table_arg ;
>    struct ctl_table_root *root ;
>    struct ctl_table_set *set ;
>    struct ctl_dir *parent ;
>    struct ctl_node *node ;
> };
> #line 145 "include/linux/sysctl.h"
> struct ctl_dir {
>    struct ctl_table_header header ;
>    struct rb_root root ;
> };
> #line 151 "include/linux/sysctl.h"
> struct ctl_table_set {
>    int (*is_seen)(struct ctl_table_set * ) ;
>    struct ctl_dir dir ;
> };
> #line 156 "include/linux/sysctl.h"
> struct ctl_table_root {
>    struct ctl_table_set default_set ;
>    struct ctl_table_set *(*lookup)(struct ctl_table_root * , struct nsproxy * ) ;
>    int (*permissions)(struct ctl_table_root * , struct nsproxy * , struct ctl_table * ) ;
> };
> #line 37 "include/linux/kmod.h"
> struct cred;
> #line 15 "include/uapi/linux/elf.h"
> typedef __u64 Elf64_Addr;
> #line 16 "include/uapi/linux/elf.h"
> typedef __u16 Elf64_Half;
> #line 20 "include/uapi/linux/elf.h"
> typedef __u32 Elf64_Word;
> #line 21 "include/uapi/linux/elf.h"
> typedef __u64 Elf64_Xword;
> #line 190 "include/uapi/linux/elf.h"
> struct elf64_sym {
>    Elf64_Word st_name ;
>    unsigned char st_info ;
>    unsigned char st_other ;
>    Elf64_Half st_shndx ;
>    Elf64_Addr st_value ;
>    Elf64_Xword st_size ;
> };
> #line 198 "include/uapi/linux/elf.h"
> typedef struct elf64_sym Elf64_Sym;
> #line 44 "include/linux/elf.h"
899c1016
< #line 65
---
> #line 45
901c1018
< #line 66
---
> #line 46
907c1024
< #line 72 "include/linux/miscdevice.h"
---
> #line 52 "include/linux/elf.h"
999a1117,1319
> struct kernel_param;
> #line 216 "include/linux/kobject.h"
> struct kernel_param_ops {
>    int (*set)(char const   * , struct kernel_param  const  * ) ;
>    int (*get)(char * , struct kernel_param  const  * ) ;
>    void (*free)(void * ) ;
> };
> #line 49 "include/linux/moduleparam.h"
> struct kparam_string;
> #line 49
> struct kparam_array;
> #line 49 "include/linux/moduleparam.h"
> union __anonunion_ldv_13535_134 {
>    void *arg ;
>    struct kparam_string  const  *str ;
>    struct kparam_array  const  *arr ;
> };
> #line 49 "include/linux/moduleparam.h"
> struct kernel_param {
>    char const   *name ;
>    struct kernel_param_ops  const  *ops ;
>    u16 perm ;
>    s16 level ;
>    union __anonunion_ldv_13535_134 ldv_13535 ;
> };
> #line 61 "include/linux/moduleparam.h"
> struct kparam_string {
>    unsigned int maxlen ;
>    char *string ;
> };
> #line 67 "include/linux/moduleparam.h"
> struct kparam_array {
>    unsigned int max ;
>    unsigned int elemsize ;
>    unsigned int *num ;
>    struct kernel_param_ops  const  *ops ;
>    void *elem ;
> };
> #line 459 "include/linux/moduleparam.h"
> struct static_key {
>    atomic_t enabled ;
> };
> #line 210 "include/linux/jump_label.h"
> struct tracepoint;
> #line 211 "include/linux/jump_label.h"
> struct tracepoint_func {
>    void *func ;
>    void *data ;
> };
> #line 29 "include/linux/tracepoint.h"
> struct tracepoint {
>    char const   *name ;
>    struct static_key key ;
>    void (*regfunc)(void) ;
>    void (*unregfunc)(void) ;
>    struct tracepoint_func *funcs ;
> };
> #line 86 "include/linux/tracepoint.h"
> struct kernel_symbol {
>    unsigned long value ;
>    char const   *name ;
> };
> #line 27 "include/linux/export.h"
> struct mod_arch_specific {
> 
> };
> #line 37 "include/linux/module.h"
> struct module_param_attrs;
> #line 37 "include/linux/module.h"
> struct module_kobject {
>    struct kobject kobj ;
>    struct module *mod ;
>    struct kobject *drivers_dir ;
>    struct module_param_attrs *mp ;
> };
> #line 46 "include/linux/module.h"
> struct module_attribute {
>    struct attribute attr ;
>    ssize_t (*show)(struct module_attribute * , struct module_kobject * , char * ) ;
>    ssize_t (*store)(struct module_attribute * , struct module_kobject * , char const   * ,
>                     size_t  ) ;
>    void (*setup)(struct module * , char const   * ) ;
>    int (*test)(struct module * ) ;
>    void (*free)(struct module * ) ;
> };
> #line 72
> struct exception_table_entry;
> #line 201
> enum module_state {
>     MODULE_STATE_LIVE = 0,
>     MODULE_STATE_COMING = 1,
>     MODULE_STATE_GOING = 2
> } ;
> #line 207 "include/linux/module.h"
> struct module_ref {
>    unsigned long incs ;
>    unsigned long decs ;
> };
> #line 222
> struct module_sect_attrs;
> #line 222
> struct module_notes_attrs;
> #line 222
> struct ftrace_event_call;
> #line 222 "include/linux/module.h"
> struct module {
>    enum module_state state ;
>    struct list_head list ;
>    char name[56U] ;
>    struct module_kobject mkobj ;
>    struct module_attribute *modinfo_attrs ;
>    char const   *version ;
>    char const   *srcversion ;
>    struct kobject *holders_dir ;
>    struct kernel_symbol  const  *syms ;
>    unsigned long const   *crcs ;
>    unsigned int num_syms ;
>    struct kernel_param *kp ;
>    unsigned int num_kp ;
>    unsigned int num_gpl_syms ;
>    struct kernel_symbol  const  *gpl_syms ;
>    unsigned long const   *gpl_crcs ;
>    struct kernel_symbol  const  *unused_syms ;
>    unsigned long const   *unused_crcs ;
>    unsigned int num_unused_syms ;
>    unsigned int num_unused_gpl_syms ;
>    struct kernel_symbol  const  *unused_gpl_syms ;
>    unsigned long const   *unused_gpl_crcs ;
>    struct kernel_symbol  const  *gpl_future_syms ;
>    unsigned long const   *gpl_future_crcs ;
>    unsigned int num_gpl_future_syms ;
>    unsigned int num_exentries ;
>    struct exception_table_entry *extable ;
>    int (*init)(void) ;
>    void *module_init ;
>    void *module_core ;
>    unsigned int init_size ;
>    unsigned int core_size ;
>    unsigned int init_text_size ;
>    unsigned int core_text_size ;
>    unsigned int init_ro_size ;
>    unsigned int core_ro_size ;
>    struct mod_arch_specific arch ;
>    unsigned int taints ;
>    unsigned int num_bugs ;
>    struct list_head bug_list ;
>    struct bug_entry *bug_table ;
>    Elf64_Sym *symtab ;
>    Elf64_Sym *core_symtab ;
>    unsigned int num_symtab ;
>    unsigned int core_num_syms ;
>    char *strtab ;
>    char *core_strtab ;
>    struct module_sect_attrs *sect_attrs ;
>    struct module_notes_attrs *notes_attrs ;
>    char *args ;
>    void *percpu ;
>    unsigned int percpu_size ;
>    unsigned int num_tracepoints ;
>    struct tracepoint * const  *tracepoints_ptrs ;
>    unsigned int num_trace_bprintk_fmt ;
>    char const   **trace_bprintk_fmt_start ;
>    struct ftrace_event_call **trace_events ;
>    unsigned int num_trace_events ;
>    unsigned int num_ftrace_callsites ;
>    unsigned long *ftrace_callsites ;
>    struct list_head source_list ;
>    struct list_head target_list ;
>    struct task_struct *waiter ;
>    void (*exit)(void) ;
>    struct module_ref *refptr ;
>    ctor_fn_t (**ctors)(void) ;
>    unsigned int num_ctors ;
> };
> #line 345 "include/linux/irq.h"
> struct proc_dir_entry;
> #line 72 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/smap.h"
> struct exception_table_entry {
>    int insn ;
>    int fixup ;
> };
> #line 189 "include/linux/hardirq.h"
> struct hlist_nulls_node;
> #line 189 "include/linux/hardirq.h"
> struct hlist_nulls_head {
>    struct hlist_nulls_node *first ;
> };
> #line 20 "include/linux/list_nulls.h"
> struct hlist_nulls_node {
>    struct hlist_nulls_node *next ;
>    struct hlist_nulls_node **pprev ;
> };
> #line 85 "include/linux/list_nulls.h"
> struct plist_head {
>    struct list_head node_list ;
> };
> #line 84 "include/linux/plist.h"
> struct plist_node {
>    int prio ;
>    struct list_head prio_list ;
>    struct list_head node_list ;
> };
> #line 64 "include/linux/miscdevice.h"
1230,1240c1550
< #line 38 "include/linux/uio.h"
< struct rb_node {
<    unsigned long __rb_parent_color ;
<    struct rb_node *rb_right ;
<    struct rb_node *rb_left ;
< };
< #line 40 "include/linux/rbtree.h"
< struct rb_root {
<    struct rb_node *rb_node ;
< };
< #line 88
---
> #line 43 "include/linux/uio.h"
1280c1590
< union __anonunion_ldv_14687_130 {
---
> union __anonunion_ldv_16313_137 {
1286c1596
< struct __anonstruct_ldv_14697_134 {
---
> struct __anonstruct_ldv_16323_141 {
1292c1602
< union __anonunion_ldv_14699_133 {
---
> union __anonunion_ldv_16325_140 {
1294c1604
<    struct __anonstruct_ldv_14697_134 ldv_14697 ;
---
>    struct __anonstruct_ldv_16323_141 ldv_16323 ;
1298,1299c1608,1609
< struct __anonstruct_ldv_14701_132 {
<    union __anonunion_ldv_14699_133 ldv_14699 ;
---
> struct __anonstruct_ldv_16327_139 {
>    union __anonunion_ldv_16325_140 ldv_16325 ;
1303c1613
< union __anonunion_ldv_14702_131 {
---
> union __anonunion_ldv_16328_138 {
1305c1615
<    struct __anonstruct_ldv_14701_132 ldv_14701 ;
---
>    struct __anonstruct_ldv_16327_139 ldv_16327 ;
1308,1310c1618,1620
< struct __anonstruct_ldv_14703_129 {
<    union __anonunion_ldv_14687_130 ldv_14687 ;
<    union __anonunion_ldv_14702_131 ldv_14702 ;
---
> struct __anonstruct_ldv_16329_136 {
>    union __anonunion_ldv_16313_137 ldv_16313 ;
>    union __anonunion_ldv_16328_138 ldv_16328 ;
1313c1623
< struct __anonstruct_ldv_14710_136 {
---
> struct __anonstruct_ldv_16336_143 {
1321c1631
< struct __anonstruct_ldv_14716_137 {
---
> struct __anonstruct_ldv_16342_144 {
1326c1636
< union __anonunion_ldv_14717_135 {
---
> union __anonunion_ldv_16343_142 {
1328c1638
<    struct __anonstruct_ldv_14710_136 ldv_14710 ;
---
>    struct __anonstruct_ldv_16336_143 ldv_16336 ;
1330c1640
<    struct __anonstruct_ldv_14716_137 ldv_14716 ;
---
>    struct __anonstruct_ldv_16342_144 ldv_16342 ;
1333c1643
< union __anonunion_ldv_14722_138 {
---
> union __anonunion_ldv_16348_145 {
1342,1344c1652,1654
<    struct __anonstruct_ldv_14703_129 ldv_14703 ;
<    union __anonunion_ldv_14717_135 ldv_14717 ;
<    union __anonunion_ldv_14722_138 ldv_14722 ;
---
>    struct __anonstruct_ldv_16329_136 ldv_16329 ;
>    union __anonunion_ldv_16343_142 ldv_16343 ;
>    union __anonunion_ldv_16348_145 ldv_16348 ;
1354c1664
< struct __anonstruct_linear_140 {
---
> struct __anonstruct_linear_147 {
1359,1360c1669,1670
< union __anonunion_shared_139 {
<    struct __anonstruct_linear_140 linear ;
---
> union __anonunion_shared_146 {
>    struct __anonstruct_linear_147 linear ;
1379c1689
<    union __anonunion_shared_139 shared ;
---
>    union __anonunion_shared_146 shared ;
1536,1557d1845
< #line 83 "include/linux/highuid.h"
< struct user_namespace;
< #line 46 "include/linux/uidgid.h"
< typedef uid_t kuid_t;
< #line 47 "include/linux/uidgid.h"
< typedef gid_t kgid_t;
< #line 197 "include/linux/uidgid.h"
< struct kstat {
<    u64 ino ;
<    dev_t dev ;
<    umode_t mode ;
<    unsigned int nlink ;
<    kuid_t uid ;
<    kgid_t gid ;
<    dev_t rdev ;
<    loff_t size ;
<    struct timespec atime ;
<    struct timespec mtime ;
<    struct timespec ctime ;
<    unsigned long blksize ;
<    unsigned long long blocks ;
< };
1566,1567c1854,1858
< #line 18
< struct cred;
---
> #line 12 "include/uapi/linux/socket.h"
> struct __kernel_sockaddr_storage {
>    __kernel_sa_family_t ss_family ;
>    char __data[126U] ;
> };
1586c1877
< struct __anonstruct_sync_serial_settings_142 {
---
> struct __anonstruct_sync_serial_settings_149 {
1592c1883
< typedef struct __anonstruct_sync_serial_settings_142 sync_serial_settings;
---
> typedef struct __anonstruct_sync_serial_settings_149 sync_serial_settings;
1594c1885
< struct __anonstruct_te1_settings_143 {
---
> struct __anonstruct_te1_settings_150 {
1601c1892
< typedef struct __anonstruct_te1_settings_143 te1_settings;
---
> typedef struct __anonstruct_te1_settings_150 te1_settings;
1603c1894
< struct __anonstruct_raw_hdlc_proto_144 {
---
> struct __anonstruct_raw_hdlc_proto_151 {
1608c1899
< typedef struct __anonstruct_raw_hdlc_proto_144 raw_hdlc_proto;
---
> typedef struct __anonstruct_raw_hdlc_proto_151 raw_hdlc_proto;
1610c1901
< struct __anonstruct_fr_proto_145 {
---
> struct __anonstruct_fr_proto_152 {
1620c1911
< typedef struct __anonstruct_fr_proto_145 fr_proto;
---
> typedef struct __anonstruct_fr_proto_152 fr_proto;
1622c1913
< struct __anonstruct_fr_proto_pvc_146 {
---
> struct __anonstruct_fr_proto_pvc_153 {
1626c1917
< typedef struct __anonstruct_fr_proto_pvc_146 fr_proto_pvc;
---
> typedef struct __anonstruct_fr_proto_pvc_153 fr_proto_pvc;
1628c1919
< struct __anonstruct_fr_proto_pvc_info_147 {
---
> struct __anonstruct_fr_proto_pvc_info_154 {
1633c1924
< typedef struct __anonstruct_fr_proto_pvc_info_147 fr_proto_pvc_info;
---
> typedef struct __anonstruct_fr_proto_pvc_info_154 fr_proto_pvc_info;
1635c1926
< struct __anonstruct_cisco_proto_148 {
---
> struct __anonstruct_cisco_proto_155 {
1640c1931
< typedef struct __anonstruct_cisco_proto_148 cisco_proto;
---
> typedef struct __anonstruct_cisco_proto_155 cisco_proto;
1651c1942
< union __anonunion_ifs_ifsu_149 {
---
> union __anonunion_ifs_ifsu_156 {
1664c1955
<    union __anonunion_ifs_ifsu_149 ifs_ifsu ;
---
>    union __anonunion_ifs_ifsu_156 ifs_ifsu ;
1667c1958
< union __anonunion_ifr_ifrn_150 {
---
> union __anonunion_ifr_ifrn_157 {
1671c1962
< union __anonunion_ifr_ifru_151 {
---
> union __anonunion_ifr_ifru_158 {
1688,1689c1979,1980
<    union __anonunion_ifr_ifrn_150 ifr_ifrn ;
<    union __anonunion_ifr_ifru_151 ifr_ifru ;
---
>    union __anonunion_ifr_ifrn_157 ifr_ifrn ;
>    union __anonunion_ifr_ifru_158 ifr_ifru ;
1709c2000
< struct __anonstruct_ldv_18528_154 {
---
> struct __anonstruct_ldv_20010_161 {
1714,1715c2005,2006
< union __anonunion_ldv_18530_153 {
<    struct __anonstruct_ldv_18528_154 ldv_18528 ;
---
> union __anonunion_ldv_20012_160 {
>    struct __anonstruct_ldv_20010_161 ldv_20010 ;
1720c2011
<    union __anonunion_ldv_18530_153 ldv_18530 ;
---
>    union __anonunion_ldv_20012_160 ldv_20012 ;
1728c2019
< union __anonunion_d_u_155 {
---
> union __anonunion_d_u_162 {
1748c2039
<    union __anonunion_d_u_155 d_u ;
---
>    union __anonunion_d_u_162 d_u ;
1813,1818d2103
< #line 217 "include/linux/capability.h"
< struct semaphore {
<    raw_spinlock_t lock ;
<    unsigned int count ;
<    struct list_head wait_list ;
< };
1986c2271
< union __anonunion_ldv_19689_157 {
---
> union __anonunion_ldv_21171_164 {
1993c2278
<    union __anonunion_ldv_19689_157 ldv_19689 ;
---
>    union __anonunion_ldv_21171_164 ldv_21171 ;
2089c2374
< union __anonunion_arg_159 {
---
> union __anonunion_arg_166 {
2094c2379
< struct __anonstruct_read_descriptor_t_158 {
---
> struct __anonstruct_read_descriptor_t_165 {
2097c2382
<    union __anonunion_arg_159 arg ;
---
>    union __anonunion_arg_166 arg ;
2101c2386
< typedef struct __anonstruct_read_descriptor_t_158 read_descriptor_t;
---
> typedef struct __anonstruct_read_descriptor_t_165 read_descriptor_t;
2185c2470
< union __anonunion_ldv_20124_160 {
---
> union __anonunion_ldv_21606_167 {
2190c2475
< union __anonunion_ldv_20144_161 {
---
> union __anonunion_ldv_21626_168 {
2199c2484
< union __anonunion_ldv_20160_162 {
---
> union __anonunion_ldv_21642_169 {
2218c2503
<    union __anonunion_ldv_20124_160 ldv_20124 ;
---
>    union __anonunion_ldv_21606_167 ldv_21606 ;
2235c2520
<    union __anonunion_ldv_20144_161 ldv_20144 ;
---
>    union __anonunion_ldv_21626_168 ldv_21626 ;
2245c2530
<    union __anonunion_ldv_20160_162 ldv_20160 ;
---
>    union __anonunion_ldv_21642_169 ldv_21642 ;
2271c2556
< union __anonunion_f_u_163 {
---
> union __anonunion_f_u_170 {
2277c2562
<    union __anonunion_f_u_163 f_u ;
---
>    union __anonunion_f_u_170 f_u ;
2333c2618
< struct __anonstruct_afs_165 {
---
> struct __anonstruct_afs_172 {
2338c2623
< union __anonunion_fl_u_164 {
---
> union __anonunion_fl_u_171 {
2341c2626
<    struct __anonstruct_afs_165 afs ;
---
>    struct __anonstruct_afs_172 afs ;
2362c2647
<    union __anonunion_fl_u_164 fl_u ;
---
>    union __anonunion_fl_u_171 fl_u ;
2567c2852
< struct __anonstruct_sigset_t_166 {
---
> struct __anonstruct_sigset_t_173 {
2571c2856
< typedef struct __anonstruct_sigset_t_166 sigset_t;
---
> typedef struct __anonstruct_sigset_t_173 sigset_t;
2599c2884
< struct __anonstruct__kill_168 {
---
> struct __anonstruct__kill_175 {
2604c2889
< struct __anonstruct__timer_169 {
---
> struct __anonstruct__timer_176 {
2612c2897
< struct __anonstruct__rt_170 {
---
> struct __anonstruct__rt_177 {
2618c2903
< struct __anonstruct__sigchld_171 {
---
> struct __anonstruct__sigchld_178 {
2626c2911
< struct __anonstruct__sigfault_172 {
---
> struct __anonstruct__sigfault_179 {
2631c2916
< struct __anonstruct__sigpoll_173 {
---
> struct __anonstruct__sigpoll_180 {
2636c2921
< struct __anonstruct__sigsys_174 {
---
> struct __anonstruct__sigsys_181 {
2642c2927
< union __anonunion__sifields_167 {
---
> union __anonunion__sifields_174 {
2644,2650c2929,2935
<    struct __anonstruct__kill_168 _kill ;
<    struct __anonstruct__timer_169 _timer ;
<    struct __anonstruct__rt_170 _rt ;
<    struct __anonstruct__sigchld_171 _sigchld ;
<    struct __anonstruct__sigfault_172 _sigfault ;
<    struct __anonstruct__sigpoll_173 _sigpoll ;
<    struct __anonstruct__sigsys_174 _sigsys ;
---
>    struct __anonstruct__kill_175 _kill ;
>    struct __anonstruct__timer_176 _timer ;
>    struct __anonstruct__rt_177 _rt ;
>    struct __anonstruct__sigchld_178 _sigchld ;
>    struct __anonstruct__sigfault_179 _sigfault ;
>    struct __anonstruct__sigpoll_180 _sigpoll ;
>    struct __anonstruct__sigsys_181 _sigsys ;
2657c2942
<    union __anonunion__sifields_167 _sifields ;
---
>    union __anonunion__sifields_174 _sifields ;
2752,2823d3036
< #line 835 "include/uapi/linux/sysctl.h"
< struct nsproxy;
< #line 836
< struct ctl_table_root;
< #line 837
< struct ctl_table_header;
< #line 838
< struct ctl_dir;
< #line 39 "include/linux/sysctl.h"
< typedef int proc_handler(struct ctl_table * , int  , void * , size_t * , loff_t * );
< #line 59 "include/linux/sysctl.h"
< struct ctl_table_poll {
<    atomic_t event ;
<    wait_queue_head_t wait ;
< };
< #line 98 "include/linux/sysctl.h"
< struct ctl_table {
<    char const   *procname ;
<    void *data ;
<    int maxlen ;
<    umode_t mode ;
<    struct ctl_table *child ;
<    proc_handler *proc_handler ;
<    struct ctl_table_poll *poll ;
<    void *extra1 ;
<    void *extra2 ;
< };
< #line 119 "include/linux/sysctl.h"
< struct ctl_node {
<    struct rb_node node ;
<    struct ctl_table_header *header ;
< };
< #line 124 "include/linux/sysctl.h"
< struct __anonstruct_ldv_23730_178 {
<    struct ctl_table *ctl_table ;
<    int used ;
<    int count ;
<    int nreg ;
< };
< #line 124 "include/linux/sysctl.h"
< union __anonunion_ldv_23732_177 {
<    struct __anonstruct_ldv_23730_178 ldv_23730 ;
<    struct callback_head rcu ;
< };
< #line 124
< struct ctl_table_set;
< #line 124 "include/linux/sysctl.h"
< struct ctl_table_header {
<    union __anonunion_ldv_23732_177 ldv_23732 ;
<    struct completion *unregistering ;
<    struct ctl_table *ctl_table_arg ;
<    struct ctl_table_root *root ;
<    struct ctl_table_set *set ;
<    struct ctl_dir *parent ;
<    struct ctl_node *node ;
< };
< #line 145 "include/linux/sysctl.h"
< struct ctl_dir {
<    struct ctl_table_header header ;
<    struct rb_root root ;
< };
< #line 151 "include/linux/sysctl.h"
< struct ctl_table_set {
<    int (*is_seen)(struct ctl_table_set * ) ;
<    struct ctl_dir dir ;
< };
< #line 156 "include/linux/sysctl.h"
< struct ctl_table_root {
<    struct ctl_table_set default_set ;
<    struct ctl_table_set *(*lookup)(struct ctl_table_root * , struct nsproxy * ) ;
<    int (*permissions)(struct ctl_table_root * , struct nsproxy * , struct ctl_table * ) ;
< };
2837c3050
< union __anonunion_ldv_23811_179 {
---
> union __anonunion_ldv_24458_184 {
2844c3057
< union __anonunion_ldv_23820_180 {
---
> union __anonunion_ldv_24467_185 {
2849c3062
< union __anonunion_type_data_181 {
---
> union __anonunion_type_data_186 {
2856c3069
< union __anonunion_payload_182 {
---
> union __anonunion_payload_187 {
2866c3079
<    union __anonunion_ldv_23811_179 ldv_23811 ;
---
>    union __anonunion_ldv_24458_184 ldv_24458 ;
2871c3084
<    union __anonunion_ldv_23820_180 ldv_23820 ;
---
>    union __anonunion_ldv_24467_185 ldv_24467 ;
2880,2881c3093,3094
<    union __anonunion_type_data_181 type_data ;
<    union __anonunion_payload_182 payload ;
---
>    union __anonunion_type_data_186 type_data ;
>    union __anonunion_payload_187 payload ;
2956c3169
< union __anonunion_ki_obj_183 {
---
> union __anonunion_ki_obj_188 {
2973c3186
<    union __anonunion_ki_obj_183 ki_obj ;
---
>    union __anonunion_ki_obj_188 ki_obj ;
3270a3484,3485
> #line 1544
> struct ftrace_ret_stack;
3290a3506
>    unsigned int btrace_seq ;
3433a3650,3654
>    int curr_ret_stack ;
>    struct ftrace_ret_stack *ret_stack ;
>    unsigned long long ftrace_timestamp ;
>    atomic_t trace_overrun ;
>    atomic_t tracing_graph_pause ;
3462c3683
< enum ldv_22048 {
---
> enum ldv_22313 {
3470c3691
< typedef enum ldv_22048 socket_state;
---
> typedef enum ldv_22313 socket_state;
3627c3848
< struct __anonstruct_ldv_28226_201 {
---
> struct __anonstruct_ldv_28879_206 {
3632c3853
< union __anonunion_ldv_28227_200 {
---
> union __anonunion_ldv_28880_205 {
3634c3855
<    struct __anonstruct_ldv_28226_201 ldv_28226 ;
---
>    struct __anonstruct_ldv_28879_206 ldv_28879 ;
3637c3858
< union __anonunion_ldv_28265_202 {
---
> union __anonunion_ldv_28918_207 {
3656c3877
<    union __anonunion_ldv_28227_200 ldv_28227 ;
---
>    union __anonunion_ldv_28880_205 ldv_28880 ;
3689c3910
<    union __anonunion_ldv_28265_202 ldv_28265 ;
---
>    union __anonunion_ldv_28918_207 ldv_28918 ;
4271c4492
< union __anonunion_in6_u_205 {
---
> union __anonunion_in6_u_210 {
4278c4499
<    union __anonunion_in6_u_205 in6_u ;
---
>    union __anonunion_in6_u_210 in6_u ;
5164c5385
< union __anonunion_ldv_35518_214 {
---
> union __anonunion_ldv_36122_219 {
5265c5486
<    union __anonunion_ldv_35518_214 ldv_35518 ;
---
>    union __anonunion_ldv_36122_219 ldv_36122 ;
5466c5687
< union __anonunion_ldv_38363_219 {
---
> union __anonunion_ldv_38967_224 {
5473c5694
< union __anonunion_ldv_38388_220 {
---
> union __anonunion_ldv_38992_225 {
5486c5707
<    union __anonunion_ldv_38363_219 ldv_38363 ;
---
>    union __anonunion_ldv_38967_224 ldv_38967 ;
5503c5724
<    union __anonunion_ldv_38388_220 ldv_38388 ;
---
>    union __anonunion_ldv_38992_225 ldv_38992 ;
5506c5727
< struct __anonstruct_socket_lock_t_221 {
---
> struct __anonstruct_socket_lock_t_226 {
5513c5734
< typedef struct __anonstruct_socket_lock_t_221 socket_lock_t;
---
> typedef struct __anonstruct_socket_lock_t_226 socket_lock_t;
5517c5738
< union __anonunion_ldv_38603_222 {
---
> union __anonunion_ldv_39207_227 {
5522c5743
< union __anonunion_ldv_38611_223 {
---
> union __anonunion_ldv_39215_228 {
5527c5748
< union __anonunion_ldv_38618_224 {
---
> union __anonunion_ldv_39222_229 {
5535c5756
<    union __anonunion_ldv_38603_222 ldv_38603 ;
---
>    union __anonunion_ldv_39207_227 ldv_39207 ;
5540c5761
<    union __anonunion_ldv_38611_223 ldv_38611 ;
---
>    union __anonunion_ldv_39215_228 ldv_39215 ;
5544c5765
<    union __anonunion_ldv_38618_224 ldv_38618 ;
---
>    union __anonunion_ldv_39222_229 ldv_39222 ;
5552c5773
< struct __anonstruct_sk_backlog_225 {
---
> struct __anonstruct_sk_backlog_230 {
5563c5784
<    struct __anonstruct_sk_backlog_225 sk_backlog ;
---
>    struct __anonstruct_sk_backlog_230 sk_backlog ;
5638c5859
< union __anonunion_h_226 {
---
> union __anonunion_h_231 {
5687c5908
<    union __anonunion_h_226 h ;
---
>    union __anonunion_h_231 h ;
5705c5926,5960
< #line 189 "include/linux/drbd.h"
---
> #line 55 "include/linux/drbd.h"
> enum drbd_io_error_p {
>     EP_PASS_ON = 0,
>     EP_CALL_HELPER = 1,
>     EP_DETACH = 2
> } ;
> #line 183
> enum drbd_conns {
>     C_STANDALONE = 0,
>     C_DISCONNECTING = 1,
>     C_UNCONNECTED = 2,
>     C_TIMEOUT = 3,
>     C_BROKEN_PIPE = 4,
>     C_NETWORK_FAILURE = 5,
>     C_PROTOCOL_ERROR = 6,
>     C_TEAR_DOWN = 7,
>     C_WF_CONNECTION = 8,
>     C_WF_REPORT_PARAMS = 9,
>     C_CONNECTED = 10,
>     C_STARTING_SYNC_S = 11,
>     C_STARTING_SYNC_T = 12,
>     C_WF_BITMAP_S = 13,
>     C_WF_BITMAP_T = 14,
>     C_WF_SYNC_UUID = 15,
>     C_SYNC_SOURCE = 16,
>     C_SYNC_TARGET = 17,
>     C_VERIFY_S = 18,
>     C_VERIFY_T = 19,
>     C_PAUSED_SYNC_S = 20,
>     C_PAUSED_SYNC_T = 21,
>     C_AHEAD = 22,
>     C_BEHIND = 23,
>     C_MASK = 31
> } ;
> #line 211
5718,5719c5973,5974
< #line 202 "include/linux/drbd.h"
< struct __anonstruct_ldv_39979_227 {
---
> #line 224 "include/linux/drbd.h"
> struct __anonstruct_ldv_40604_232 {
5733c5988
< #line 202 "include/linux/drbd.h"
---
> #line 224 "include/linux/drbd.h"
5735c5990
<    struct __anonstruct_ldv_39979_227 ldv_39979 ;
---
>    struct __anonstruct_ldv_40604_232 ldv_40604 ;
5738c5993
< #line 274
---
> #line 296
5763c6018,6019
<     SS_AFTER_LAST_ERROR = -20
---
>     SS_O_VOL_PEER_PRI = -20,
>     SS_AFTER_LAST_ERROR = -21
5765c6021
< #line 368
---
> #line 346
5767c6023
< #line 369
---
> #line 347
5769c6025
< #line 370
---
> #line 348
5771c6027
< #line 371
---
> #line 349
5773c6029
< #line 372
---
> #line 350
5775c6031
< #line 373
---
> #line 351
5777c6033
< #line 374
---
> #line 352
5779c6035
< #line 375
---
> #line 353
5781c6037
< #line 376
---
> #line 354
5783c6039
< #line 377
---
> #line 355
5882c6138
< union __anonunion_cra_u_228 {
---
> union __anonunion_cra_u_233 {
5903c6159
<    union __anonunion_cra_u_228 cra_u ;
---
>    union __anonunion_cra_u_233 cra_u ;
5969c6225
< union __anonunion_crt_u_229 {
---
> union __anonunion_crt_u_234 {
5981c6237
<    union __anonunion_crt_u_229 crt_u ;
---
>    union __anonunion_crt_u_234 crt_u ;
6203c6459
< union __anonunion_ldv_43418_236 {
---
> union __anonunion_ldv_44034_241 {
6208c6464
< union __anonunion_ldv_43422_237 {
---
> union __anonunion_ldv_44038_242 {
6216,6217c6472,6473
<    union __anonunion_ldv_43418_236 ldv_43418 ;
<    union __anonunion_ldv_43422_237 ldv_43422 ;
---
>    union __anonunion_ldv_44034_241 ldv_44034 ;
>    union __anonunion_ldv_44038_242 ldv_44038 ;
6270a6527,6528
> #line 24
> struct blk_trace;
6302c6560
< union __anonunion_ldv_43869_238 {
---
> union __anonunion_ldv_44485_243 {
6307c6565
< struct __anonstruct_elv_240 {
---
> struct __anonstruct_elv_245 {
6312c6570
< struct __anonstruct_flush_241 {
---
> struct __anonstruct_flush_246 {
6318,6320c6576,6578
< union __anonunion_ldv_43880_239 {
<    struct __anonstruct_elv_240 elv ;
<    struct __anonstruct_flush_241 flush ;
---
> union __anonunion_ldv_44496_244 {
>    struct __anonstruct_elv_245 elv ;
>    struct __anonstruct_flush_246 flush ;
6336,6337c6594,6595
<    union __anonunion_ldv_43869_238 ldv_43869 ;
<    union __anonunion_ldv_43880_239 ldv_43880 ;
---
>    union __anonunion_ldv_44485_243 ldv_44485 ;
>    union __anonunion_ldv_44496_244 ldv_44496 ;
6570a6829
>    struct blk_trace *blk_trace ;
6749c7008
< union __anonunion_ldv_46535_248 {
---
> union __anonunion_ldv_47152_253 {
6755c7014
<    union __anonunion_ldv_46535_248 ldv_46535 ;
---
>    union __anonunion_ldv_47152_253 ldv_47152 ;
6763c7022
< union __anonunion_ldv_46550_249 {
---
> union __anonunion_ldv_47167_254 {
6768c7027
< struct __anonstruct_ldv_46555_251 {
---
> struct __anonstruct_ldv_47172_256 {
6773,6774c7032,7033
< union __anonunion_ldv_46558_250 {
<    struct __anonstruct_ldv_46555_251 ldv_46555 ;
---
> union __anonunion_ldv_47175_255 {
>    struct __anonstruct_ldv_47172_256 ldv_47172 ;
6787,6788c7046,7047
<    union __anonunion_ldv_46550_249 ldv_46550 ;
<    union __anonunion_ldv_46558_250 ldv_46558 ;
---
>    union __anonunion_ldv_47167_254 ldv_47167 ;
>    union __anonunion_ldv_47175_255 ldv_47175 ;
6845a7105
>    unsigned int lc_new_number ;
6847c7107
< #line 170 "include/linux/lru_cache.h"
---
> #line 175 "include/linux/lru_cache.h"
6851a7112
>    struct list_head to_be_changed ;
6855a7117,7118
>    unsigned int max_pending_changes ;
>    unsigned int pending_changes ;
6860c7123
<    unsigned long dirty ;
---
>    unsigned long locked ;
6863,6864d7125
<    unsigned int new_number ;
<    struct lc_element *changing_element ;
6870,6941c7131,7162
< #line 73 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct drbd_conf;
< #line 315 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct p_header80 {
<    u32 magic ;
<    u16 command ;
<    u16 length ;
<    u8 payload[0U] ;
< };
< #line 342 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct p_header95 {
<    u16 magic ;
<    u16 command ;
<    u32 length ;
<    u8 payload[0U] ;
< };
< #line 350 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< union p_header {
<    struct p_header80 h80 ;
<    struct p_header95 h95 ;
< };
< #line 355 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct p_data {
<    union p_header head ;
<    u64 sector ;
<    u64 block_id ;
<    u32 seq_num ;
<    u32 dp_flags ;
< };
< #line 388 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct p_block_ack {
<    struct p_header80 head ;
<    u64 sector ;
<    u64 block_id ;
<    u32 blksize ;
<    u32 seq_num ;
< };
< #line 404 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct p_block_req {
<    struct p_header80 head ;
<    u64 sector ;
<    u64 block_id ;
<    u32 blksize ;
<    u32 pad ;
< };
< #line 413 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct p_handshake {
<    struct p_header80 head ;
<    u32 protocol_min ;
<    u32 feature_flags ;
<    u32 protocol_max ;
<    u32 _pad ;
<    u64 reserverd[7U] ;
< };
< #line 436 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct p_barrier {
<    struct p_header80 head ;
<    u32 barrier ;
<    u32 pad ;
< };
< #line 443 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct p_barrier_ack {
<    struct p_header80 head ;
<    u32 barrier ;
<    u32 set_size ;
< };
< #line 457 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct p_rs_param_89 {
<    struct p_header80 head ;
<    u32 rate ;
<    char verify_alg[64U] ;
<    char csums_alg[64U] ;
---
> #line 99 "include/linux/drbd_genl.h"
> struct disk_conf {
>    char backing_dev[128U] ;
>    __u32 backing_dev_len ;
>    char meta_dev[128U] ;
>    __u32 meta_dev_len ;
>    __s32 meta_dev_idx ;
>    __u64 disk_size ;
>    __u32 max_bio_bvecs ;
>    __u32 on_io_error ;
>    __u32 fencing ;
>    __u32 resync_rate ;
>    __s32 resync_after ;
>    __u32 al_extents ;
>    __u32 c_plan_ahead ;
>    __u32 c_delay_target ;
>    __u32 c_fill_target ;
>    __u32 c_max_rate ;
>    __u32 c_min_rate ;
>    char disk_barrier ;
>    char disk_flushes ;
>    char disk_drain ;
>    char md_flushes ;
>    __u32 disk_timeout ;
>    __u32 read_balancing ;
>    char al_updates ;
> };
> #line 106 "include/linux/drbd_genl.h"
> struct res_opts {
>    char cpu_mask[32U] ;
>    __u32 cpu_mask_len ;
>    __u32 on_no_data ;
6943,6946c7164,7171
< #line 465 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct p_rs_param_95 {
<    struct p_header80 head ;
<    u32 rate ;
---
> #line 139 "include/linux/drbd_genl.h"
> struct net_conf {
>    char shared_secret[64U] ;
>    __u32 shared_secret_len ;
>    char cram_hmac_alg[64U] ;
>    __u32 cram_hmac_alg_len ;
>    char integrity_alg[64U] ;
>    __u32 integrity_alg_len ;
6947a7173
>    __u32 verify_alg_len ;
6949,6973c7175,7199
<    u32 c_plan_ahead ;
<    u32 c_delay_target ;
<    u32 c_fill_target ;
<    u32 c_max_rate ;
< };
< #line 481 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct p_protocol {
<    struct p_header80 head ;
<    u32 protocol ;
<    u32 after_sb_0p ;
<    u32 after_sb_1p ;
<    u32 after_sb_2p ;
<    u32 conn_flags ;
<    u32 two_primaries ;
<    char integrity_alg[0U] ;
< };
< #line 494 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct p_uuids {
<    struct p_header80 head ;
<    u64 uuid[6U] ;
< };
< #line 500 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct p_rs_uuid {
<    struct p_header80 head ;
<    u64 uuid ;
---
>    __u32 csums_alg_len ;
>    __u32 wire_protocol ;
>    __u32 connect_int ;
>    __u32 timeout ;
>    __u32 ping_int ;
>    __u32 ping_timeo ;
>    __u32 sndbuf_size ;
>    __u32 rcvbuf_size ;
>    __u32 ko_count ;
>    __u32 max_buffers ;
>    __u32 max_epoch_size ;
>    __u32 unplug_watermark ;
>    __u32 after_sb_0p ;
>    __u32 after_sb_1p ;
>    __u32 after_sb_2p ;
>    __u32 rr_conflict ;
>    __u32 on_congestion ;
>    __u32 cong_fill ;
>    __u32 cong_extents ;
>    char two_primaries ;
>    char discard_my_data ;
>    char tcp_cork ;
>    char always_asbp ;
>    char tentative ;
>    char use_rle ;
6975,7012c7201,7233
< #line 505 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct p_sizes {
<    struct p_header80 head ;
<    u64 d_size ;
<    u64 u_size ;
<    u64 c_size ;
<    u32 max_bio_size ;
<    u16 queue_order_type ;
<    u16 dds_flags ;
< };
< #line 515 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct p_state {
<    struct p_header80 head ;
<    u32 state ;
< };
< #line 520 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct p_req_state {
<    struct p_header80 head ;
<    u32 mask ;
<    u32 val ;
< };
< #line 526 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct p_req_state_reply {
<    struct p_header80 head ;
<    u32 retcode ;
< };
< #line 548 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct p_block_desc {
<    struct p_header80 head ;
<    u64 sector ;
<    u32 blksize ;
<    u32 pad ;
< };
< #line 576 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct p_delay_probe93 {
<    struct p_header80 head ;
<    u32 seq_num ;
<    u32 offset ;
---
> #line 375
> struct drbd_conf;
> #line 376
> struct drbd_tconn;
> #line 377
> enum chg_state_flags {
>     CS_HARD = 1,
>     CS_VERBOSE = 2,
>     CS_WAIT_COMPLETE = 4,
>     CS_SERIALIZE = 8,
>     CS_ORDERED = 12,
>     CS_LOCAL_ONLY = 16,
>     CS_DC_ROLE = 32,
>     CS_DC_PEER = 64,
>     CS_DC_CONN = 128,
>     CS_DC_DISK = 256,
>     CS_DC_PDSK = 512,
>     CS_DC_SUSP = 1024,
>     CS_DC_MASK = 992,
>     CS_IGN_OUTD_FAIL = 2048
> } ;
> #line 394 "include/linux/drbd_genl.h"
> struct __anonstruct_ldv_50103_260 {
>    unsigned char role : 2 ;
>    unsigned char peer : 2 ;
>    unsigned char conn : 5 ;
>    unsigned char disk : 4 ;
>    unsigned char pdsk : 4 ;
>    unsigned char _unused : 1 ;
>    unsigned char aftr_isp : 1 ;
>    unsigned char peer_isp : 1 ;
>    unsigned char user_isp : 1 ;
>    unsigned short _pad : 11 ;
7014,7033c7235,7238
< #line 621 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< union p_polymorph {
<    union p_header header ;
<    struct p_handshake handshake ;
<    struct p_data data ;
<    struct p_block_ack block_ack ;
<    struct p_barrier barrier ;
<    struct p_barrier_ack barrier_ack ;
<    struct p_rs_param_89 rs_param_89 ;
<    struct p_rs_param_95 rs_param_95 ;
<    struct p_protocol protocol ;
<    struct p_sizes sizes ;
<    struct p_uuids uuids ;
<    struct p_state state ;
<    struct p_req_state req_state ;
<    struct p_req_state_reply req_state_reply ;
<    struct p_block_req block_req ;
<    struct p_delay_probe93 delay_probe93 ;
<    struct p_rs_uuid rs_uuid ;
<    struct p_block_desc block_desc ;
---
> #line 394 "include/linux/drbd_genl.h"
> union drbd_dev_state {
>    struct __anonstruct_ldv_50103_260 ldv_50103 ;
>    unsigned int i ;
7035c7240
< #line 655
---
> #line 499 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
7037,7040c7242,7245
<     None = 0,
<     Running = 1,
<     Exiting = 2,
<     Restarting = 3
---
>     NONE = 0,
>     RUNNING = 1,
>     EXITING = 2,
>     RESTARTING = 3
7042c7247
< #line 662 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 506 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
7049c7254
<    struct drbd_conf *mdev ;
---
>    struct drbd_tconn *tconn ;
7050a7256
>    char name[9U] ;
7052,7054c7258,7263
< #line 683
< struct drbd_work;
< #line 686 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 534 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> union __anonunion_ldv_50388_261 {
>    struct drbd_conf *mdev ;
>    struct drbd_tconn *tconn ;
> };
> #line 534 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
7057c7266,7267
<    int (*cb)(struct drbd_conf * , struct drbd_work * , int  ) ;
---
>    int (*cb)(struct drbd_work * , int  ) ;
>    union __anonunion_ldv_50388_261 ldv_50388 ;
7059,7069c7269
< #line 690
< struct drbd_tl_epoch;
< #line 717 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct drbd_tl_epoch {
<    struct drbd_work w ;
<    struct list_head requests ;
<    struct drbd_tl_epoch *next ;
<    unsigned int br_number ;
<    int n_writes ;
< };
< #line 725 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 580 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
7070a7271
>    struct drbd_tconn *tconn ;
7077,7137c7278
< #line 759 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct digest_info {
<    int digest_size ;
<    void *digest ;
< };
< #line 764 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< union __anonunion_ldv_49189_254 {
<    u64 block_id ;
<    struct digest_info *digest ;
< };
< #line 764 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct drbd_epoch_entry {
<    struct drbd_work w ;
<    struct hlist_node collision ;
<    struct drbd_epoch *epoch ;
<    struct drbd_conf *mdev ;
<    struct page *pages ;
<    atomic_t pending_bios ;
<    unsigned int size ;
<    unsigned long flags ;
<    sector_t sector ;
<    union __anonunion_ldv_49189_254 ldv_49189 ;
< };
< #line 789
< enum drbd_flag {
<     CREATE_BARRIER = 0,
<     SIGNAL_ASENDER = 1,
<     SEND_PING = 2,
<     UNPLUG_REMOTE = 3,
<     MD_DIRTY = 4,
<     DISCARD_CONCURRENT = 5,
<     USE_DEGR_WFC_T = 6,
<     CLUSTER_ST_CHANGE = 7,
<     CL_ST_CHG_SUCCESS = 8,
<     CL_ST_CHG_FAIL = 9,
<     CRASHED_PRIMARY = 10,
<     CONSIDER_RESYNC = 11,
<     MD_NO_FUA = 12,
<     SUSPEND_IO = 13,
<     BITMAP_IO = 14,
<     BITMAP_IO_QUEUED = 15,
<     GO_DISKLESS = 16,
<     WAS_IO_ERROR = 17,
<     WAS_READ_ERROR = 18,
<     FORCE_DETACH = 19,
<     RESYNC_AFTER_NEG = 20,
<     NET_CONGESTED = 21,
<     CONFIG_PENDING = 22,
<     DEVICE_DYING = 23,
<     RESIZE_PENDING = 24,
<     CONN_DRY_RUN = 25,
<     GOT_PING_ACK = 26,
<     NEW_CUR_UUID = 27,
<     AL_SUSPENDED = 28,
<     AHEAD_TO_SYNC_SOURCE = 29,
<     STATE_SENT = 30,
<     CALLBACK_PENDING = 31,
<     DISCONNECT_SENT = 32,
<     DRBD_N_FLAGS = 33
< } ;
< #line 826
---
> #line 662
7139c7280
< #line 827
---
> #line 663
7151c7292
< #line 839 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 675 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
7154d7294
<    struct semaphore s ;
7155a7296
>    wait_queue_head_t q_wait ;
7157c7298
< #line 905 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 736 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
7159d7299
<    struct drbd_work_queue work ;
7162,7163c7302,7303
<    union p_polymorph sbuf ;
<    union p_polymorph rbuf ;
---
>    void *sbuf ;
>    void *rbuf ;
7165c7305
< #line 915 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 745 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
7177,7252c7317
< #line 19 "include/linux/drbd_nl.h"
< struct disk_conf {
<    __u64 disk_size ;
<    unsigned char backing_dev[128U] ;
<    int backing_dev_len ;
<    unsigned char meta_dev[128U] ;
<    int meta_dev_len ;
<    int meta_dev_idx ;
<    int on_io_error ;
<    int fencing ;
<    unsigned char use_bmbv : 1 ;
<    unsigned char no_disk_flush : 1 ;
<    unsigned char no_md_flush : 1 ;
<    int max_bio_bvecs ;
<    unsigned char no_disk_barrier : 1 ;
<    unsigned char no_disk_drain : 1 ;
<    int disk_timeout ;
< };
< #line 39 "include/linux/drbd_nl.h"
< struct net_conf {
<    unsigned char my_addr[128U] ;
<    int my_addr_len ;
<    unsigned char peer_addr[128U] ;
<    int peer_addr_len ;
<    unsigned char shared_secret[64U] ;
<    int shared_secret_len ;
<    unsigned char cram_hmac_alg[64U] ;
<    int cram_hmac_alg_len ;
<    unsigned char integrity_alg[64U] ;
<    int integrity_alg_len ;
<    int timeout ;
<    int wire_protocol ;
<    int try_connect_int ;
<    int ping_int ;
<    int max_epoch_size ;
<    int max_buffers ;
<    int unplug_watermark ;
<    int sndbuf_size ;
<    int ko_count ;
<    int after_sb_0p ;
<    int after_sb_1p ;
<    int after_sb_2p ;
<    int rr_conflict ;
<    int ping_timeo ;
<    int rcvbuf_size ;
<    int on_congestion ;
<    int cong_fill ;
<    int cong_extents ;
<    unsigned char mind_af : 1 ;
<    unsigned char want_lose : 1 ;
<    unsigned char two_primaries : 1 ;
<    unsigned char always_asbp : 1 ;
<    unsigned char no_cork : 1 ;
<    unsigned char auto_sndbuf_size : 1 ;
<    unsigned char dry_run : 1 ;
< };
< #line 81 "include/linux/drbd_nl.h"
< struct syncer_conf {
<    int rate ;
<    int after ;
<    int al_extents ;
<    unsigned char verify_alg[64U] ;
<    int verify_alg_len ;
<    unsigned char cpu_mask[32U] ;
<    int cpu_mask_len ;
<    unsigned char csums_alg[64U] ;
<    int csums_alg_len ;
<    unsigned char use_rle : 1 ;
<    int on_no_data ;
<    int c_plan_ahead ;
<    int c_delay_target ;
<    int c_fill_target ;
<    int c_max_rate ;
<    int c_min_rate ;
< };
< #line 153 "include/linux/drbd_nl.h"
---
> #line 759 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
7257c7322
<    struct disk_conf dc ;
---
>    struct disk_conf *disk_conf ;
7260c7325
< #line 950 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 772 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
7265c7330
< #line 955 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 777 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
7273c7338
< #line 963
---
> #line 785
7279c7344
< #line 969 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 791 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
7281d7345
<    int *values ;
7283a7348,7349
>    int total ;
>    int values[0U] ;
7285,7287c7351,7368
< #line 975 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct drbd_conf {
<    unsigned long drbd_flags[1U] ;
---
> #line 815 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct __anonstruct_send_263 {
>    bool seen_any_write_yet ;
>    int current_epoch_nr ;
>    unsigned int current_epoch_writes ;
> };
> #line 815 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct drbd_tconn {
>    char *name ;
>    struct list_head all_tconn ;
>    struct kref kref ;
>    struct idr volumes ;
>    enum drbd_conns cstate ;
>    unsigned char susp : 1 ;
>    unsigned char susp_nod : 1 ;
>    unsigned char susp_fen : 1 ;
>    struct mutex cstate_mutex ;
>    unsigned long flags ;
7289,7294c7370,7376
<    struct syncer_conf sync_conf ;
<    struct drbd_backing_dev *ldev ;
<    sector_t p_size ;
<    struct request_queue *rq_queue ;
<    struct block_device *this_bdev ;
<    struct gendisk *vdisk ;
---
>    struct mutex conf_update ;
>    wait_queue_head_t ping_wait ;
>    struct res_opts res_opts ;
>    struct __kernel_sockaddr_storage my_addr ;
>    int my_addr_len ;
>    struct __kernel_sockaddr_storage peer_addr ;
>    int peer_addr_len ;
7299a7382,7416
>    spinlock_t req_lock ;
>    struct list_head transfer_log ;
>    struct crypto_hash *cram_hmac_tfm ;
>    struct crypto_hash *integrity_tfm ;
>    struct crypto_hash *peer_integrity_tfm ;
>    struct crypto_hash *csums_tfm ;
>    struct crypto_hash *verify_tfm ;
>    void *int_dig_in ;
>    void *int_dig_vv ;
>    struct drbd_epoch *current_epoch ;
>    spinlock_t epoch_lock ;
>    unsigned int epochs ;
>    enum write_ordering_e write_ordering ;
>    atomic_t current_tle_nr ;
>    unsigned int current_tle_writes ;
>    unsigned long last_reconnect_jif ;
>    struct drbd_thread receiver ;
>    struct drbd_thread worker ;
>    struct drbd_thread asender ;
>    cpumask_var_t cpu_mask ;
>    struct drbd_work_queue sender_work ;
>    struct __anonstruct_send_263 send ;
> };
> #line 893 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct drbd_conf {
>    struct drbd_tconn *tconn ;
>    int vnr ;
>    struct kref kref ;
>    unsigned long flags ;
>    struct drbd_backing_dev *ldev ;
>    sector_t p_size ;
>    struct request_queue *rq_queue ;
>    struct block_device *this_bdev ;
>    struct gendisk *vdisk ;
>    unsigned long last_reattach_jif ;
7310c7427
<    union drbd_state state ;
---
>    union drbd_dev_state state ;
7313d7429
<    wait_queue_head_t net_cnt_wait ;
7325,7333c7441,7442
<    atomic_t net_cnt ;
<    spinlock_t req_lock ;
<    struct drbd_tl_epoch *unused_spare_tle ;
<    struct drbd_tl_epoch *newest_tle ;
<    struct drbd_tl_epoch *oldest_tle ;
<    struct list_head out_of_sequence_requests ;
<    struct list_head barrier_acked_requests ;
<    struct hlist_head *tl_hash ;
<    unsigned int tl_hash_s ;
---
>    struct rb_root read_requests ;
>    struct rb_root write_requests ;
7341a7451
>    unsigned long rs_last_bcast ;
7348,7354d7457
<    struct crypto_hash *csums_tfm ;
<    struct crypto_hash *verify_tfm ;
<    unsigned long last_reattach_jif ;
<    unsigned long last_reconnect_jif ;
<    struct drbd_thread receiver ;
<    struct drbd_thread worker ;
<    struct drbd_thread asender ;
7362,7365d7464
<    struct drbd_epoch *current_epoch ;
<    spinlock_t epoch_lock ;
<    unsigned int epochs ;
<    enum write_ordering_e write_ordering ;
7371,7373d7469
<    struct hlist_head *ee_hash ;
<    unsigned int ee_hash_s ;
<    struct drbd_epoch_entry *last_write_w_barrier ;
7375d7470
<    struct hlist_head *app_reads_hash ;
7381d7475
<    struct page *md_io_tmpp ;
7390,7395d7483
<    struct crypto_hash *cram_hmac_tfm ;
<    struct crypto_hash *integrity_w_tfm ;
<    struct crypto_hash *integrity_r_tfm ;
<    void *int_dig_out ;
<    void *int_dig_in ;
<    void *int_dig_vv ;
7402d7489
<    cpumask_var_t cpu_mask ;
7405c7492,7493
<    struct mutex state_mutex ;
---
>    struct mutex own_state_mutex ;
>    struct mutex *state_mutex ;
7412c7500
<    struct fifo_buffer rs_plan_s ;
---
>    struct fifo_buffer *rs_plan_s ;
7414d7501
<    int rs_planed ;
7419,7427c7506
< #line 1212
< enum chg_state_flags {
<     CS_HARD = 1,
<     CS_VERBOSE = 2,
<     CS_WAIT_COMPLETE = 4,
<     CS_SERIALIZE = 8,
<     CS_ORDERED = 12
< } ;
< #line 1881
---
> #line 1666
7434c7513
< #line 2557 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 2335 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
7449c7528
< #line 958 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 925 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
7458,7474d7536
< #line 1783 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
< typedef int ldv_func_ret_type___2;
< #line 1895 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
< typedef int ldv_func_ret_type___13;
< #line 18 "include/asm-generic/int-ll64.h"
< typedef short s16;
< #line 157 "include/linux/init.h"
< typedef void (*ctor_fn_t)(void);
< #line 306 "include/linux/bitmap.h"
< struct bug_entry {
<    int bug_addr_disp ;
<    int file_disp ;
<    unsigned short line ;
<    unsigned short flags ;
< };
< #line 195 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/paravirt.h"
< struct static_key;
7477,7673d7538
< #line 15 "include/uapi/linux/elf.h"
< typedef __u64 Elf64_Addr;
< #line 16 "include/uapi/linux/elf.h"
< typedef __u16 Elf64_Half;
< #line 20 "include/uapi/linux/elf.h"
< typedef __u32 Elf64_Word;
< #line 21 "include/uapi/linux/elf.h"
< typedef __u64 Elf64_Xword;
< #line 190 "include/uapi/linux/elf.h"
< struct elf64_sym {
<    Elf64_Word st_name ;
<    unsigned char st_info ;
<    unsigned char st_other ;
<    Elf64_Half st_shndx ;
<    Elf64_Addr st_value ;
<    Elf64_Xword st_size ;
< };
< #line 198 "include/uapi/linux/elf.h"
< typedef struct elf64_sym Elf64_Sym;
< #line 215 "include/linux/kobject.h"
< struct kernel_param;
< #line 216 "include/linux/kobject.h"
< struct kernel_param_ops {
<    int (*set)(char const   * , struct kernel_param  const  * ) ;
<    int (*get)(char * , struct kernel_param  const  * ) ;
<    void (*free)(void * ) ;
< };
< #line 49 "include/linux/moduleparam.h"
< struct kparam_string;
< #line 49
< struct kparam_array;
< #line 49 "include/linux/moduleparam.h"
< union __anonunion_ldv_13726_134 {
<    void *arg ;
<    struct kparam_string  const  *str ;
<    struct kparam_array  const  *arr ;
< };
< #line 49 "include/linux/moduleparam.h"
< struct kernel_param {
<    char const   *name ;
<    struct kernel_param_ops  const  *ops ;
<    u16 perm ;
<    s16 level ;
<    union __anonunion_ldv_13726_134 ldv_13726 ;
< };
< #line 61 "include/linux/moduleparam.h"
< struct kparam_string {
<    unsigned int maxlen ;
<    char *string ;
< };
< #line 67 "include/linux/moduleparam.h"
< struct kparam_array {
<    unsigned int max ;
<    unsigned int elemsize ;
<    unsigned int *num ;
<    struct kernel_param_ops  const  *ops ;
<    void *elem ;
< };
< #line 459 "include/linux/moduleparam.h"
< struct static_key {
<    atomic_t enabled ;
< };
< #line 210 "include/linux/jump_label.h"
< struct tracepoint;
< #line 211 "include/linux/jump_label.h"
< struct tracepoint_func {
<    void *func ;
<    void *data ;
< };
< #line 29 "include/linux/tracepoint.h"
< struct tracepoint {
<    char const   *name ;
<    struct static_key key ;
<    void (*regfunc)(void) ;
<    void (*unregfunc)(void) ;
<    struct tracepoint_func *funcs ;
< };
< #line 86 "include/linux/tracepoint.h"
< struct kernel_symbol {
<    unsigned long value ;
<    char const   *name ;
< };
< #line 27 "include/linux/export.h"
< struct mod_arch_specific {
< 
< };
< #line 37 "include/linux/module.h"
< struct module_param_attrs;
< #line 37 "include/linux/module.h"
< struct module_kobject {
<    struct kobject kobj ;
<    struct module *mod ;
<    struct kobject *drivers_dir ;
<    struct module_param_attrs *mp ;
< };
< #line 46 "include/linux/module.h"
< struct module_attribute {
<    struct attribute attr ;
<    ssize_t (*show)(struct module_attribute * , struct module_kobject * , char * ) ;
<    ssize_t (*store)(struct module_attribute * , struct module_kobject * , char const   * ,
<                     size_t  ) ;
<    void (*setup)(struct module * , char const   * ) ;
<    int (*test)(struct module * ) ;
<    void (*free)(struct module * ) ;
< };
< #line 72
< struct exception_table_entry;
< #line 201
< enum module_state {
<     MODULE_STATE_LIVE = 0,
<     MODULE_STATE_COMING = 1,
<     MODULE_STATE_GOING = 2
< } ;
< #line 207 "include/linux/module.h"
< struct module_ref {
<    unsigned long incs ;
<    unsigned long decs ;
< };
< #line 222
< struct module_sect_attrs;
< #line 222
< struct module_notes_attrs;
< #line 222
< struct ftrace_event_call;
< #line 222 "include/linux/module.h"
< struct module {
<    enum module_state state ;
<    struct list_head list ;
<    char name[56U] ;
<    struct module_kobject mkobj ;
<    struct module_attribute *modinfo_attrs ;
<    char const   *version ;
<    char const   *srcversion ;
<    struct kobject *holders_dir ;
<    struct kernel_symbol  const  *syms ;
<    unsigned long const   *crcs ;
<    unsigned int num_syms ;
<    struct kernel_param *kp ;
<    unsigned int num_kp ;
<    unsigned int num_gpl_syms ;
<    struct kernel_symbol  const  *gpl_syms ;
<    unsigned long const   *gpl_crcs ;
<    struct kernel_symbol  const  *unused_syms ;
<    unsigned long const   *unused_crcs ;
<    unsigned int num_unused_syms ;
<    unsigned int num_unused_gpl_syms ;
<    struct kernel_symbol  const  *unused_gpl_syms ;
<    unsigned long const   *unused_gpl_crcs ;
<    struct kernel_symbol  const  *gpl_future_syms ;
<    unsigned long const   *gpl_future_crcs ;
<    unsigned int num_gpl_future_syms ;
<    unsigned int num_exentries ;
<    struct exception_table_entry *extable ;
<    int (*init)(void) ;
<    void *module_init ;
<    void *module_core ;
<    unsigned int init_size ;
<    unsigned int core_size ;
<    unsigned int init_text_size ;
<    unsigned int core_text_size ;
<    unsigned int init_ro_size ;
<    unsigned int core_ro_size ;
<    struct mod_arch_specific arch ;
<    unsigned int taints ;
<    unsigned int num_bugs ;
<    struct list_head bug_list ;
<    struct bug_entry *bug_table ;
<    Elf64_Sym *symtab ;
<    Elf64_Sym *core_symtab ;
<    unsigned int num_symtab ;
<    unsigned int core_num_syms ;
<    char *strtab ;
<    char *core_strtab ;
<    struct module_sect_attrs *sect_attrs ;
<    struct module_notes_attrs *notes_attrs ;
<    char *args ;
<    void *percpu ;
<    unsigned int percpu_size ;
<    unsigned int num_tracepoints ;
<    struct tracepoint * const  *tracepoints_ptrs ;
<    unsigned int num_trace_bprintk_fmt ;
<    char const   **trace_bprintk_fmt_start ;
<    struct ftrace_event_call **trace_events ;
<    unsigned int num_trace_events ;
<    struct list_head source_list ;
<    struct list_head target_list ;
<    struct task_struct *waiter ;
<    void (*exit)(void) ;
<    struct module_ref *refptr ;
<    ctor_fn_t (**ctors)(void) ;
<    unsigned int num_ctors ;
< };
< #line 72 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/smap.h"
< struct exception_table_entry {
<    int insn ;
<    int fixup ;
< };
7700c7565
< #line 154 "include/linux/drbd.h"
---
> #line 176 "include/linux/drbd.h"
7707,7735c7572
< #line 161
< enum drbd_conns {
<     C_STANDALONE = 0,
<     C_DISCONNECTING = 1,
<     C_UNCONNECTED = 2,
<     C_TIMEOUT = 3,
<     C_BROKEN_PIPE = 4,
<     C_NETWORK_FAILURE = 5,
<     C_PROTOCOL_ERROR = 6,
<     C_TEAR_DOWN = 7,
<     C_WF_CONNECTION = 8,
<     C_WF_REPORT_PARAMS = 9,
<     C_CONNECTED = 10,
<     C_STARTING_SYNC_S = 11,
<     C_STARTING_SYNC_T = 12,
<     C_WF_BITMAP_S = 13,
<     C_WF_BITMAP_T = 14,
<     C_WF_SYNC_UUID = 15,
<     C_SYNC_SOURCE = 16,
<     C_SYNC_TARGET = 17,
<     C_VERIFY_S = 18,
<     C_VERIFY_T = 19,
<     C_PAUSED_SYNC_S = 20,
<     C_PAUSED_SYNC_T = 21,
<     C_AHEAD = 22,
<     C_BEHIND = 23,
<     C_MASK = 31
< } ;
< #line 1341 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1153 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
7742,7743d7578
< #line 607 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
< typedef int ldv_func_ret_type___6;
7746,7747c7581,7645
< #line 159 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< enum drbd_packets {
---
> #line 113 "include/linux/drbd.h"
> enum drbd_ret_code {
>     ERR_CODE_BASE = 100,
>     NO_ERROR = 101,
>     ERR_LOCAL_ADDR = 102,
>     ERR_PEER_ADDR = 103,
>     ERR_OPEN_DISK = 104,
>     ERR_OPEN_MD_DISK = 105,
>     ERR_DISK_NOT_BDEV = 107,
>     ERR_MD_NOT_BDEV = 108,
>     ERR_DISK_TOO_SMALL = 111,
>     ERR_MD_DISK_TOO_SMALL = 112,
>     ERR_BDCLAIM_DISK = 114,
>     ERR_BDCLAIM_MD_DISK = 115,
>     ERR_MD_IDX_INVALID = 116,
>     ERR_IO_MD_DISK = 118,
>     ERR_MD_INVALID = 119,
>     ERR_AUTH_ALG = 120,
>     ERR_AUTH_ALG_ND = 121,
>     ERR_NOMEM = 122,
>     ERR_DISCARD_IMPOSSIBLE = 123,
>     ERR_DISK_CONFIGURED = 124,
>     ERR_NET_CONFIGURED = 125,
>     ERR_MANDATORY_TAG = 126,
>     ERR_MINOR_INVALID = 127,
>     ERR_INTR = 129,
>     ERR_RESIZE_RESYNC = 130,
>     ERR_NO_PRIMARY = 131,
>     ERR_RESYNC_AFTER = 132,
>     ERR_RESYNC_AFTER_CYCLE = 133,
>     ERR_PAUSE_IS_SET = 134,
>     ERR_PAUSE_IS_CLEAR = 135,
>     ERR_PACKET_NR = 137,
>     ERR_NO_DISK = 138,
>     ERR_NOT_PROTO_C = 139,
>     ERR_NOMEM_BITMAP = 140,
>     ERR_INTEGRITY_ALG = 141,
>     ERR_INTEGRITY_ALG_ND = 142,
>     ERR_CPU_MASK_PARSE = 143,
>     ERR_CSUMS_ALG = 144,
>     ERR_CSUMS_ALG_ND = 145,
>     ERR_VERIFY_ALG = 146,
>     ERR_VERIFY_ALG_ND = 147,
>     ERR_CSUMS_RESYNC_RUNNING = 148,
>     ERR_VERIFY_RUNNING = 149,
>     ERR_DATA_NOT_CURRENT = 150,
>     ERR_CONNECTED = 151,
>     ERR_PERM = 152,
>     ERR_NEED_APV_93 = 153,
>     ERR_STONITH_AND_PROT_A = 154,
>     ERR_CONG_NOT_PROTO_A = 155,
>     ERR_PIC_AFTER_DEP = 156,
>     ERR_PIC_PEER_DEP = 157,
>     ERR_RES_NOT_KNOWN = 158,
>     ERR_RES_IN_USE = 159,
>     ERR_MINOR_CONFIGURED = 160,
>     ERR_MINOR_EXISTS = 161,
>     ERR_INVALID_REQUEST = 162,
>     ERR_NEED_APV_100 = 163,
>     ERR_NEED_ALLOW_TWO_PRI = 164,
>     ERR_MD_UNCLEAN = 165,
>     AFTER_LAST_ERR_CODE = 166
> } ;
> #line 169 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> enum drbd_packet {
7772c7670
<     P_DISCARD_ACK = 24,
---
>     P_SUPERSEDED = 24,
7788c7686,7689
<     P_MAX_CMD = 42,
---
>     P_CONN_ST_CHG_REQ = 42,
>     P_CONN_ST_CHG_REPLY = 43,
>     P_RETRY_WRITE = 44,
>     P_PROTOCOL_UPDATE = 45,
7791,7793c7692,7694
<     P_HAND_SHAKE_M = 65521,
<     P_HAND_SHAKE_S = 65522,
<     P_HAND_SHAKE = 65534
---
>     P_INITIAL_META = 65521,
>     P_INITIAL_DATA = 65522,
>     P_CONNECTION_FEATURES = 65534
7795c7696,7710
< #line 691 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 376 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct p_barrier {
>    u32 barrier ;
>    u32 pad ;
> };
> #line 543 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct drbd_interval {
>    struct rb_node rb ;
>    sector_t sector ;
>    unsigned int size ;
>    sector_t end ;
>    signed char local : 1 ;
>    signed char waiting : 1 ;
> };
> #line 547 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
7798d7712
<    struct drbd_conf *mdev ;
7800,7802c7714
<    struct hlist_node collision ;
<    sector_t sector ;
<    unsigned int size ;
---
>    struct drbd_interval i ;
7806d7717
<    unsigned long rq_state ;
7807a7719,7721
>    atomic_t completion_ref ;
>    struct kref kref ;
>    unsigned int rq_state ;
7809c7723
< #line 753 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 600 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
7814c7728,7748
< #line 53 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_wrappers.h"
---
> #line 606 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct digest_info {
>    int digest_size ;
>    void *digest ;
> };
> #line 611 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> union __anonunion_ldv_50490_262 {
>    u64 block_id ;
>    struct digest_info *digest ;
> };
> #line 611 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct drbd_peer_request {
>    struct drbd_work w ;
>    struct drbd_epoch *epoch ;
>    struct page *pages ;
>    atomic_t pending_bios ;
>    struct drbd_interval i ;
>    unsigned long flags ;
>    union __anonunion_ldv_50490_262 ldv_50490 ;
> };
> #line 48 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_wrappers.h"
7816,7843c7750,7778
<     created = 0,
<     to_be_send = 1,
<     to_be_submitted = 2,
<     queue_for_net_write = 3,
<     queue_for_net_read = 4,
<     queue_for_send_oos = 5,
<     send_canceled = 6,
<     send_failed = 7,
<     handed_over_to_network = 8,
<     oos_handed_to_network = 9,
<     connection_lost_while_pending = 10,
<     read_retry_remote_canceled = 11,
<     recv_acked_by_peer = 12,
<     write_acked_by_peer = 13,
<     write_acked_by_peer_and_sis = 14,
<     conflict_discarded_by_peer = 15,
<     neg_acked = 16,
<     barrier_acked = 17,
<     data_received = 18,
<     read_completed_with_error = 19,
<     read_ahead_completed_with_error = 20,
<     write_completed_with_error = 21,
<     abort_disk_io = 22,
<     completed_ok = 23,
<     resend = 24,
<     fail_frozen_disk_io = 25,
<     restart_frozen_disk_io = 26,
<     nothing = 27
---
>     CREATED = 0,
>     TO_BE_SENT = 1,
>     TO_BE_SUBMITTED = 2,
>     QUEUE_FOR_NET_WRITE = 3,
>     QUEUE_FOR_NET_READ = 4,
>     QUEUE_FOR_SEND_OOS = 5,
>     SEND_CANCELED = 6,
>     SEND_FAILED = 7,
>     HANDED_OVER_TO_NETWORK = 8,
>     OOS_HANDED_TO_NETWORK = 9,
>     CONNECTION_LOST_WHILE_PENDING = 10,
>     READ_RETRY_REMOTE_CANCELED = 11,
>     RECV_ACKED_BY_PEER = 12,
>     WRITE_ACKED_BY_PEER = 13,
>     WRITE_ACKED_BY_PEER_AND_SIS = 14,
>     CONFLICT_RESOLVED = 15,
>     POSTPONE_WRITE = 16,
>     NEG_ACKED = 17,
>     BARRIER_ACKED = 18,
>     DATA_RECEIVED = 19,
>     READ_COMPLETED_WITH_ERROR = 20,
>     READ_AHEAD_COMPLETED_WITH_ERROR = 21,
>     WRITE_COMPLETED_WITH_ERROR = 22,
>     ABORT_DISK_IO = 23,
>     COMPLETED_OK = 24,
>     RESEND = 25,
>     FAIL_FROZEN_DISK_IO = 26,
>     RESTART_FROZEN_DISK_IO = 27,
>     NOTHING = 28
7845c7780
< #line 315 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"
---
> #line 261 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"
7876,7882c7811
< #line 62 "include/linux/drbd.h"
< enum drbd_fencing_p {
<     FP_DONT_CARE = 0,
<     FP_RESOURCE = 1,
<     FP_STONITH = 2
< } ;
< #line 74
---
> #line 74 "include/linux/drbd.h"
7896c7825
< #line 281 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 237 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
7905c7834,7944
< #line 555
---
> #line 271 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct p_header80 {
>    u32 magic ;
>    u16 command ;
>    u16 length ;
> };
> #line 297 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct p_header95 {
>    u16 magic ;
>    u16 command ;
>    u32 length ;
> };
> #line 304 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct p_header100 {
>    u32 magic ;
>    u16 volume ;
>    u16 command ;
>    u32 length ;
>    u32 pad ;
> };
> #line 314 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct p_data {
>    u64 sector ;
>    u64 block_id ;
>    u32 seq_num ;
>    u32 dp_flags ;
> };
> #line 332 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct p_block_ack {
>    u64 sector ;
>    u64 block_id ;
>    u32 blksize ;
>    u32 seq_num ;
> };
> #line 347 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct p_block_req {
>    u64 sector ;
>    u64 block_id ;
>    u32 blksize ;
>    u32 pad ;
> };
> #line 354 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct p_connection_features {
>    u32 protocol_min ;
>    u32 feature_flags ;
>    u32 protocol_max ;
>    u32 _pad ;
>    u64 reserved[7U] ;
> };
> #line 381 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct p_barrier_ack {
>    u32 barrier ;
>    u32 set_size ;
> };
> #line 400 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct p_rs_param_95 {
>    u32 resync_rate ;
>    char verify_alg[64U] ;
>    char csums_alg[64U] ;
>    u32 c_plan_ahead ;
>    u32 c_delay_target ;
>    u32 c_fill_target ;
>    u32 c_max_rate ;
> };
> #line 415 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct p_protocol {
>    u32 protocol ;
>    u32 after_sb_0p ;
>    u32 after_sb_1p ;
>    u32 after_sb_2p ;
>    u32 conn_flags ;
>    u32 two_primaries ;
>    char integrity_alg[0U] ;
> };
> #line 427 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct p_uuids {
>    u64 uuid[6U] ;
> };
> #line 432 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct p_rs_uuid {
>    u64 uuid ;
> };
> #line 436 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct p_sizes {
>    u64 d_size ;
>    u64 u_size ;
>    u64 c_size ;
>    u32 max_bio_size ;
>    u16 queue_order_type ;
>    u16 dds_flags ;
> };
> #line 445 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct p_state {
>    u32 state ;
> };
> #line 449 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct p_req_state {
>    u32 mask ;
>    u32 val ;
> };
> #line 454 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct p_req_state_reply {
>    u32 retcode ;
> };
> #line 468 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct p_block_desc {
>    u64 sector ;
>    u32 blksize ;
>    u32 pad ;
> };
> #line 474
7909c7948
< #line 559 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 478 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
7911d7949
<    struct p_header80 head ;
7915c7953
< #line 746
---
> #line 593
7922c7960
< #line 1220
---
> #line 1051
7927c7965
< #line 1589
---
> #line 1434
7946c7984,7991
< #line 350
---
> #line 350 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_vli.h"
> struct packet_info {
>    enum drbd_packet cmd ;
>    unsigned int size ;
>    unsigned int vnr ;
>    void *data ;
> };
> #line 65 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
7952c7997,8004
< #line 3767 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 661 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> struct accept_wait_data {
>    struct drbd_tconn *tconn ;
>    struct socket *s_listen ;
>    struct completion door_bell ;
>    void (*original_sk_state_change)(struct sock * ) ;
> };
> #line 4342 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
7956c8008
<    int (*function)(struct drbd_conf * , enum drbd_packets  , unsigned int  ) ;
---
>    int (*fn)(struct drbd_tconn * , struct packet_info * ) ;
7958,7960c8010
< #line 4416 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< typedef struct drbd_request *req_validator_fn(struct drbd_conf * , u64  , sector_t  );
< #line 4635 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 5219 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
7963c8013
<    int (*process)(struct drbd_conf * , struct p_header80 * ) ;
---
>    int (*fn)(struct drbd_tconn * , struct packet_info * ) ;
7967,7979c8017,8036
< #line 187 "include/linux/bio.h"
< struct bio_pair {
<    struct bio bio1 ;
<    struct bio bio2 ;
<    struct bio_vec bv1 ;
<    struct bio_vec bv2 ;
<    struct bio_integrity_payload bip1 ;
<    struct bio_integrity_payload bip2 ;
<    struct bio_vec iv1 ;
<    struct bio_vec iv2 ;
<    atomic_t cnt ;
<    int error ;
< };
---
> #line 93 "include/linux/drbd.h"
> enum drbd_on_congestion {
>     OC_BLOCK = 0,
>     OC_PULL_AHEAD = 1,
>     OC_DISCONNECT = 2
> } ;
> #line 99
> enum drbd_read_balancing {
>     RB_PREFER_LOCAL = 0,
>     RB_PREFER_REMOTE = 1,
>     RB_ROUND_ROBIN = 2,
>     RB_LEAST_PENDING = 3,
>     RB_CONGESTED_REMOTE = 4,
>     RB_32K_STRIPING = 5,
>     RB_64K_STRIPING = 6,
>     RB_128K_STRIPING = 7,
>     RB_256K_STRIPING = 8,
>     RB_512K_STRIPING = 9,
>     RB_1M_STRIPING = 10
> } ;
7982,7985c8039,8065
< #line 53 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_wrappers.h"
< struct __anonstruct_updates_255 {
<    u32 pos ;
<    u32 extent ;
---
> #line 34 "include/linux/drbd_genl_api.h"
> enum drbd_state_info_bcast_reason {
>     SIB_GET_STATUS_REPLY = 1,
>     SIB_STATE_CHANGE = 2,
>     SIB_HELPER_PRE = 3,
>     SIB_HELPER_POST = 4,
>     SIB_SYNC_PROGRESS = 5
> } ;
> #line 1598 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct __anonstruct_ldv_51330_265 {
>    char *helper_name ;
>    unsigned int helper_exit_code ;
> };
> #line 1598 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct __anonstruct_ldv_51334_266 {
>    union drbd_state os ;
>    union drbd_state ns ;
> };
> #line 1598 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> union __anonunion_ldv_51335_264 {
>    struct __anonstruct_ldv_51330_265 ldv_51330 ;
>    struct __anonstruct_ldv_51334_266 ldv_51334 ;
> };
> #line 1598 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct sib_info {
>    enum drbd_state_info_bcast_reason sib_reason ;
>    union __anonunion_ldv_51335_264 ldv_51335 ;
7988,7992c8068,8079
< struct al_transaction {
<    u32 magic ;
<    u32 tr_number ;
<    struct __anonstruct_updates_255 updates[62U] ;
<    u32 xor_sum ;
---
> struct al_transaction_on_disk {
>    __be32 magic ;
>    __be32 tr_number ;
>    __be32 crc32c ;
>    __be16 transaction_type ;
>    __be16 n_updates ;
>    __be16 context_size ;
>    __be16 context_start_slot_nr ;
>    __be32 __reserved[4U] ;
>    __be16 update_slot_nr[64U] ;
>    __be32 update_extent_nr[64U] ;
>    __be32 context[919U] ;
7994c8081
< #line 114 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
---
> #line 103 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared"
7999c8086
< #line 119 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
---
> #line 108 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared"
8002d8088
<    struct lc_element *al_ext ;
8004,8005c8090
<    unsigned int enr ;
<    unsigned int old_enr ;
---
>    int err ;
8008a8094,8095
> #line 266
> struct workqueue_struct;
8015,8027c8102,8107
< #line 56 "include/linux/drbd.h"
< enum drbd_io_error_p {
<     EP_PASS_ON = 0,
<     EP_CALL_HELPER = 1,
<     EP_DETACH = 2
< } ;
< #line 350 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_vli.h"
< struct after_state_chg_work {
<    struct drbd_work w ;
<    union drbd_state os ;
<    union drbd_state ns ;
<    enum chg_state_flags flags ;
<    struct completion *done ;
---
> #line 2204 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> struct retry_worker {
>    struct workqueue_struct *wq ;
>    struct work_struct worker ;
>    spinlock_t lock ;
>    struct list_head writes ;
8029,8038c8109
< #line 634 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< enum sanitize_state_warnings {
<     NO_WARNING = 0,
<     ABORTED_ONLINE_VERIFY = 1,
<     ABORTED_RESYNC = 2,
<     CONNECTION_LOST_NEGOTIATING = 3,
<     IMPLICITLY_UPGRADED_DISK = 4,
<     IMPLICITLY_UPGRADED_PDSK = 5
< } ;
< #line 3910 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 2847 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
8054c8125
< #line 4435 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 3488 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
8061,8068d8131
< #line 32 "include/uapi/linux/types.h"
< typedef __u16 __le16;
< #line 34 "include/uapi/linux/types.h"
< typedef __u32 __le32;
< #line 36 "include/uapi/linux/types.h"
< typedef __u64 __le64;
< #line 255 "include/linux/timer.h"
< enum hrtimer_restart;
8105,8172c8168,8173
< #line 2228 "include/net/sock.h"
< struct cb_id {
<    __u32 idx ;
<    __u32 val ;
< };
< #line 65 "include/uapi/linux/connector.h"
< struct cn_msg {
<    struct cb_id id ;
<    __u32 seq ;
<    __u32 ack ;
<    __u16 len ;
<    __u16 flags ;
<    __u8 data[0U] ;
< };
< #line 99 "include/linux/drbd.h"
< enum drbd_ret_code {
<     ERR_CODE_BASE = 100,
<     NO_ERROR = 101,
<     ERR_LOCAL_ADDR = 102,
<     ERR_PEER_ADDR = 103,
<     ERR_OPEN_DISK = 104,
<     ERR_OPEN_MD_DISK = 105,
<     ERR_DISK_NOT_BDEV = 107,
<     ERR_MD_NOT_BDEV = 108,
<     ERR_DISK_TOO_SMALL = 111,
<     ERR_MD_DISK_TOO_SMALL = 112,
<     ERR_BDCLAIM_DISK = 114,
<     ERR_BDCLAIM_MD_DISK = 115,
<     ERR_MD_IDX_INVALID = 116,
<     ERR_IO_MD_DISK = 118,
<     ERR_MD_INVALID = 119,
<     ERR_AUTH_ALG = 120,
<     ERR_AUTH_ALG_ND = 121,
<     ERR_NOMEM = 122,
<     ERR_DISCARD = 123,
<     ERR_DISK_CONFIGURED = 124,
<     ERR_NET_CONFIGURED = 125,
<     ERR_MANDATORY_TAG = 126,
<     ERR_MINOR_INVALID = 127,
<     ERR_INTR = 129,
<     ERR_RESIZE_RESYNC = 130,
<     ERR_NO_PRIMARY = 131,
<     ERR_SYNC_AFTER = 132,
<     ERR_SYNC_AFTER_CYCLE = 133,
<     ERR_PAUSE_IS_SET = 134,
<     ERR_PAUSE_IS_CLEAR = 135,
<     ERR_PACKET_NR = 137,
<     ERR_NO_DISK = 138,
<     ERR_NOT_PROTO_C = 139,
<     ERR_NOMEM_BITMAP = 140,
<     ERR_INTEGRITY_ALG = 141,
<     ERR_INTEGRITY_ALG_ND = 142,
<     ERR_CPU_MASK_PARSE = 143,
<     ERR_CSUMS_ALG = 144,
<     ERR_CSUMS_ALG_ND = 145,
<     ERR_VERIFY_ALG = 146,
<     ERR_VERIFY_ALG_ND = 147,
<     ERR_CSUMS_RESYNC_RUNNING = 148,
<     ERR_VERIFY_RUNNING = 149,
<     ERR_DATA_NOT_CURRENT = 150,
<     ERR_CONNECTED = 151,
<     ERR_PERM = 152,
<     ERR_NEED_APV_93 = 153,
<     ERR_STONITH_AND_PROT_A = 154,
<     ERR_CONG_NOT_PROTO_A = 155,
<     ERR_PIC_AFTER_DEP = 156,
<     ERR_PIC_PEER_DEP = 157,
<     AFTER_LAST_ERR_CODE = 158
---
> #line 61 "include/linux/drbd.h"
> enum drbd_fencing_p {
>     FP_NOT_AVAIL = -1,
>     FP_DONT_CARE = 0,
>     FP_RESOURCE = 1,
>     FP_STONITH = 2
8174,8179c8175,8308
< #line 323 "include/linux/drbd.h"
< struct drbd_nl_cfg_req {
<    int packet_type ;
<    unsigned int drbd_minor ;
<    int flags ;
<    unsigned short tag_list[] ;
---
> #line 56 "include/linux/prefetch.h"
> union __anonunion_ldv_49550_259 {
>    __u32 flags ;
>    __s32 ret_code ;
> };
> #line 56 "include/linux/prefetch.h"
> struct drbd_genlmsghdr {
>    __u32 minor ;
>    union __anonunion_ldv_49550_259 ldv_49550 ;
> };
> #line 42 "include/linux/drbd_genl_api.h"
> struct genlmsghdr {
>    __u8 cmd ;
>    __u8 version ;
>    __u16 reserved ;
> };
> #line 89 "include/linux/drbd_genl.h"
> struct drbd_cfg_context {
>    __u32 ctx_volume ;
>    char ctx_resource_name[128U] ;
>    __u32 ctx_resource_name_len ;
>    char ctx_my_addr[128U] ;
>    __u32 ctx_my_addr_len ;
>    char ctx_peer_addr[128U] ;
>    __u32 ctx_peer_addr_len ;
> };
> #line 144 "include/linux/drbd_genl.h"
> struct set_role_parms {
>    char assume_uptodate ;
> };
> #line 178 "include/linux/drbd_genl.h"
> struct resize_parms {
>    __u64 resize_size ;
>    char resize_force ;
>    char no_resync ;
> };
> #line 182 "include/linux/drbd_genl.h"
> struct state_info {
>    __u32 sib_reason ;
>    __u32 current_state ;
>    __u64 capacity ;
>    __u64 ed_uuid ;
>    __u32 prev_state ;
>    __u32 new_state ;
>    char uuids[32U] ;
>    __u32 uuids_len ;
>    __u32 disk_flags ;
>    __u64 bits_total ;
>    __u64 bits_oos ;
>    __u64 bits_rs_total ;
>    __u64 bits_rs_failed ;
>    char helper[32U] ;
>    __u32 helper_len ;
>    __u32 helper_exit_code ;
>    __u64 send_cnt ;
>    __u64 recv_cnt ;
>    __u64 read_cnt ;
>    __u64 writ_cnt ;
>    __u64 al_writ_cnt ;
>    __u64 bm_writ_cnt ;
>    __u32 ap_bio_cnt ;
>    __u32 ap_pending_cnt ;
>    __u32 rs_pending_cnt ;
> };
> #line 188 "include/linux/drbd_genl.h"
> struct start_ov_parms {
>    __u64 ov_start_sector ;
>    __u64 ov_stop_sector ;
> };
> #line 228 "include/linux/drbd_genl.h"
> struct new_c_uuid_parms {
>    char clear_bm ;
> };
> #line 233 "include/linux/drbd_genl.h"
> struct timeout_parms {
>    __u32 timeout_type ;
> };
> #line 237 "include/linux/drbd_genl.h"
> struct disconnect_parms {
>    char force_disconnect ;
> };
> #line 241 "include/linux/drbd_genl.h"
> struct detach_parms {
>    char force_detach ;
> };
> #line 138 "include/linux/kthread.h"
> struct genl_family;
> #line 138 "include/linux/kthread.h"
> struct genl_multicast_group {
>    struct genl_family *family ;
>    struct list_head list ;
>    char name[16U] ;
>    u32 id ;
> };
> #line 24 "include/net/genetlink.h"
> struct genl_ops;
> #line 25
> struct genl_info;
> #line 26 "include/net/genetlink.h"
> struct genl_family {
>    unsigned int id ;
>    unsigned int hdrsize ;
>    char name[16U] ;
>    unsigned int version ;
>    unsigned int maxattr ;
>    bool netnsok ;
>    int (*pre_doit)(struct genl_ops * , struct sk_buff * , struct genl_info * ) ;
>    void (*post_doit)(struct genl_ops * , struct sk_buff * , struct genl_info * ) ;
>    struct nlattr **attrbuf ;
>    struct list_head ops_list ;
>    struct list_head family_list ;
>    struct list_head mcast_groups ;
> };
> #line 64 "include/net/genetlink.h"
> struct genl_info {
>    u32 snd_seq ;
>    u32 snd_portid ;
>    struct nlmsghdr *nlhdr ;
>    struct genlmsghdr *genlhdr ;
>    void *userhdr ;
>    struct nlattr **attrs ;
>    struct net *_net ;
>    void *user_ptr[2U] ;
> };
> #line 98 "include/net/genetlink.h"
> struct genl_ops {
>    u8 cmd ;
>    u8 internal_flags ;
>    unsigned int flags ;
>    struct nla_policy  const  *policy ;
>    int (*doit)(struct sk_buff * , struct genl_info * ) ;
>    int (*dumpit)(struct sk_buff * , struct netlink_callback * ) ;
>    int (*done)(struct netlink_callback * ) ;
>    struct list_head ops_list ;
8181,8183c8310,8311
< #line 361 "include/linux/drbd.h"
< struct drbd_nl_cfg_reply {
<    int packet_type ;
---
> #line 90 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> struct drbd_config_context {
8185,8186c8313,8320
<    int ret_code ;
<    unsigned short tag_list[] ;
---
>    unsigned int volume ;
>    char *resource_name ;
>    struct nlattr *my_addr ;
>    struct nlattr *peer_addr ;
>    struct sk_buff *reply_skb ;
>    struct drbd_genlmsghdr *reply_dh ;
>    struct drbd_conf *mdev ;
>    struct drbd_tconn *tconn ;
8188,8198c8322,8327
< #line 929 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct primary {
<    unsigned char primary_force : 1 ;
< };
< #line 22 "include/linux/drbd_nl.h"
< struct detach {
<    unsigned char detach_force : 1 ;
< };
< #line 43 "include/linux/drbd_nl.h"
< struct disconnect {
<    unsigned char force : 1 ;
---
> #line 1856 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> struct crypto {
>    struct crypto_hash *verify_tfm ;
>    struct crypto_hash *csums_tfm ;
>    struct crypto_hash *cram_hmac_tfm ;
>    struct crypto_hash *integrity_tfm ;
8200,8204c8329,8333
< #line 77 "include/linux/drbd_nl.h"
< struct resize {
<    __u64 resize_size ;
<    unsigned char resize_force : 1 ;
<    unsigned char no_resync : 1 ;
---
> #line 8 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_interval.c.prepared"
> struct rb_augment_callbacks {
>    void (*propagate)(struct rb_node * , struct rb_node * ) ;
>    void (*copy)(struct rb_node * , struct rb_node * ) ;
>    void (*rotate)(struct rb_node * , struct rb_node * ) ;
8206,8303c8335,8343
< #line 111 "include/linux/drbd_nl.h"
< struct get_state {
<    int state_i ;
< };
< #line 139 "include/linux/drbd_nl.h"
< struct start_ov {
<    __u64 start_sector ;
<    __u64 stop_sector ;
< };
< #line 148 "include/linux/drbd_nl.h"
< struct new_c_uuid {
<    unsigned char clear_bm : 1 ;
< };
< #line 35 "include/linux/drbd_tag_magic.h"
< enum drbd_tags {
<     T_primary_force = 32769,
<     T_disk_size = 16386,
<     T_backing_dev = 57347,
<     T_meta_dev = 57348,
<     T_meta_dev_idx = 8197,
<     T_on_io_error = 6,
<     T_fencing = 7,
<     T_use_bmbv = 32805,
<     T_no_disk_flush = 32821,
<     T_no_md_flush = 32822,
<     T_max_bio_bvecs = 56,
<     T_no_disk_barrier = 32825,
<     T_no_disk_drain = 32826,
<     T_disk_timeout = 89,
<     T_detach_force = 41048,
<     T_my_addr = 57352,
<     T_peer_addr = 57353,
<     T_shared_secret = 49162,
<     T_cram_hmac_alg = 49163,
<     T_integrity_alg = 49196,
<     T_timeout = 14,
<     T_wire_protocol = 8207,
<     T_try_connect_int = 16,
<     T_ping_int = 17,
<     T_max_epoch_size = 18,
<     T_max_buffers = 19,
<     T_unplug_watermark = 20,
<     T_sndbuf_size = 21,
<     T_ko_count = 22,
<     T_after_sb_0p = 24,
<     T_after_sb_1p = 25,
<     T_after_sb_2p = 26,
<     T_rr_conflict = 39,
<     T_ping_timeo = 40,
<     T_rcvbuf_size = 67,
<     T_on_congestion = 81,
<     T_cong_fill = 82,
<     T_cong_extents = 83,
<     T_mind_af = 41020,
<     T_want_lose = 32795,
<     T_two_primaries = 32796,
<     T_always_asbp = 32809,
<     T_no_cork = 32829,
<     T_auto_sndbuf_size = 41022,
<     T_dry_run = 41030,
<     T_force = 32852,
<     T_resize_size = 16413,
<     T_resize_force = 32836,
<     T_no_resync = 41029,
<     T_rate = 30,
<     T_after = 31,
<     T_al_extents = 32,
<     T_verify_alg = 49204,
<     T_cpu_mask = 49203,
<     T_csums_alg = 49216,
<     T_use_rle = 32833,
<     T_on_no_data = 75,
<     T_c_plan_ahead = 76,
<     T_c_delay_target = 77,
<     T_c_fill_target = 78,
<     T_c_max_rate = 79,
<     T_c_min_rate = 80,
<     T_state_i = 33,
<     T_uuids = 49186,
<     T_uuids_flags = 35,
<     T_use_degraded = 32804,
<     T_helper = 49190,
<     T_sync_progress = 43,
<     T_dump_ee_reason = 49197,
<     T_seen_digest = 49198,
<     T_calc_digest = 49199,
<     T_ee_sector = 16432,
<     T_ee_block_id = 16433,
<     T_ee_data = 49202,
<     T_start_sector = 16450,
<     T_stop_sector = 24666,
<     T_clear_bm = 41023
< } ;
< #line 115 "include/linux/drbd_tag_magic.h"
< struct tag {
<    char const   *name ;
<    int type_n_flags ;
<    int max_len ;
---
> #line 255 "include/linux/timer.h"
> enum hrtimer_restart;
> #line 41 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared"
> struct after_state_chg_work {
>    struct drbd_work w ;
>    union drbd_state os ;
>    union drbd_state ns ;
>    enum chg_state_flags flags ;
>    struct completion *done ;
8305,8308c8345,8360
< #line 2374 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< struct cn_handler_struct {
<    int (*function)(struct drbd_conf * , struct drbd_nl_cfg_req * , struct drbd_nl_cfg_reply * ) ;
<    int reply_body_size ;
---
> #line 49
> enum sanitize_state_warnings {
>     NO_WARNING = 0,
>     ABORTED_ONLINE_VERIFY = 1,
>     ABORTED_RESYNC = 2,
>     CONNECTION_LOST_NEGOTIATING = 3,
>     IMPLICITLY_UPGRADED_DISK = 4,
>     IMPLICITLY_UPGRADED_PDSK = 5
> } ;
> #line 1512 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared"
> struct after_conn_state_chg_work {
>    struct drbd_work w ;
>    enum drbd_conns oc ;
>    union drbd_state ns_min ;
>    union drbd_state ns_max ;
>    enum chg_state_flags flags ;
8337a8390,8403
> #line 121 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/bitops.h"
> __inline static void clear_bit_unlock(unsigned int nr , unsigned long volatile   *addr ) 
> { 
> 
> 
>   {
> #line 123
>   __asm__  volatile   ("": : : "memory");
> #line 124
>   clear_bit((int )nr, addr);
> #line 125
>   return;
> }
> }
8362a8429,8441
> #line 248 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/bitops.h"
> __inline static int test_and_clear_bit(int nr , unsigned long volatile   *addr ) 
> { 
>   int oldbit ;
> 
>   {
> #line 252
>   __asm__  volatile   (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; btr %2,%1\n\tsbb %0,%0": "=r" (oldbit),
>                        "+m" (*((long volatile   *)addr)): "Ir" (nr): "memory");
> #line 256
>   return (oldbit);
> }
> }
8497a8577,8578
> #line 71 "include/asm-generic/bug.h"
> extern void warn_slowpath_null(char const   * , int const    ) ;
8514c8595
<   goto ldv_2860;
---
>   goto ldv_2953;
8519c8600
<   goto ldv_2860;
---
>   goto ldv_2953;
8524c8605
<   goto ldv_2860;
---
>   goto ldv_2953;
8529c8610
<   goto ldv_2860;
---
>   goto ldv_2953;
8534c8615
<   ldv_2860: ;
---
>   ldv_2953: ;
8543,8544d8623
< #line 71 "include/asm-generic/bug.h"
< extern void warn_slowpath_null(char const   * , int const    ) ;
8622c8701
<   goto ldv_5470;
---
>   goto ldv_5527;
8628c8707
<   goto ldv_5470;
---
>   goto ldv_5527;
8634c8713
<   goto ldv_5470;
---
>   goto ldv_5527;
8640c8719
<   goto ldv_5470;
---
>   goto ldv_5527;
8645c8724
<   ldv_5470: ;
---
>   ldv_5527: ;
8662,8731d8740
< #line 115 "include/linux/mutex.h"
< extern void __mutex_init(struct mutex * , char const   * , struct lock_class_key * ) ;
< #line 168
< extern int mutex_trylock(struct mutex * ) ;
< #line 171
< int ldv_mutex_trylock_4(struct mutex *ldv_func_arg1 ) ;
< #line 175
< int ldv_mutex_trylock_15(struct mutex *ldv_func_arg1 ) ;
< #line 177
< extern void mutex_unlock(struct mutex * ) ;
< #line 180
< void ldv_mutex_unlock_2(struct mutex *ldv_func_arg1 ) ;
< #line 184
< void ldv_mutex_unlock_5(struct mutex *ldv_func_arg1 ) ;
< #line 188
< void ldv_mutex_unlock_7(struct mutex *ldv_func_arg1 ) ;
< #line 192
< void ldv_mutex_unlock_9(struct mutex *ldv_func_arg1 ) ;
< #line 196
< void ldv_mutex_unlock_11(struct mutex *ldv_func_arg1 ) ;
< #line 200
< void ldv_mutex_unlock_13(struct mutex *ldv_func_arg1 ) ;
< #line 204
< void ldv_mutex_unlock_14(struct mutex *ldv_func_arg1 ) ;
< #line 208
< void ldv_mutex_unlock_17(struct mutex *ldv_func_arg1 ) ;
< #line 7 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
< extern void mutex_lock(struct mutex * ) ;
< #line 10
< void ldv_mutex_lock_1(struct mutex *ldv_func_arg1 ) ;
< #line 14
< void ldv_mutex_lock_3(struct mutex *ldv_func_arg1 ) ;
< #line 18
< void ldv_mutex_lock_6(struct mutex *ldv_func_arg1 ) ;
< #line 22
< void ldv_mutex_lock_8(struct mutex *ldv_func_arg1 ) ;
< #line 26
< void ldv_mutex_lock_10(struct mutex *ldv_func_arg1 ) ;
< #line 30
< void ldv_mutex_lock_12(struct mutex *ldv_func_arg1 ) ;
< #line 34
< void ldv_mutex_lock_16(struct mutex *ldv_func_arg1 ) ;
< #line 39
< void ldv_mutex_lock_bm_change_of_drbd_bitmap(struct mutex *lock ) ;
< #line 40
< int ldv_mutex_trylock_bm_change_of_drbd_bitmap(struct mutex *lock ) ;
< #line 43
< void ldv_mutex_unlock_bm_change_of_drbd_bitmap(struct mutex *lock ) ;
< #line 47
< void ldv_mutex_lock_cred_guard_mutex_of_signal_struct(struct mutex *lock ) ;
< #line 51
< void ldv_mutex_unlock_cred_guard_mutex_of_signal_struct(struct mutex *lock ) ;
< #line 63
< void ldv_mutex_lock_lock(struct mutex *lock ) ;
< #line 67
< void ldv_mutex_unlock_lock(struct mutex *lock ) ;
< #line 71
< void ldv_mutex_lock_mtx_of_percpu_rw_semaphore(struct mutex *lock ) ;
< #line 75
< void ldv_mutex_unlock_mtx_of_percpu_rw_semaphore(struct mutex *lock ) ;
< #line 79
< void ldv_mutex_lock_mutex_of_device(struct mutex *lock ) ;
< #line 80
< int ldv_mutex_trylock_mutex_of_device(struct mutex *lock ) ;
< #line 83
< void ldv_mutex_unlock_mutex_of_device(struct mutex *lock ) ;
< #line 87
< void ldv_mutex_lock_mutex_of_drbd_socket(struct mutex *lock ) ;
< #line 91
< void ldv_mutex_unlock_mutex_of_drbd_socket(struct mutex *lock ) ;
8747c8756
<   goto ldv_6275;
---
>   goto ldv_5822;
8752c8761
<   goto ldv_6275;
---
>   goto ldv_5822;
8757c8766
<   goto ldv_6275;
---
>   goto ldv_5822;
8762c8771
<   goto ldv_6275;
---
>   goto ldv_5822;
8767c8776
<   ldv_6275: 
---
>   ldv_5822: 
8773a8783,8791
> #line 333 "include/linux/lockdep.h"
> extern void lock_acquire(struct lockdep_map * , unsigned int  , int  , int  , int  ,
>                          struct lockdep_map * , unsigned long  ) ;
> #line 337
> extern void lock_release(struct lockdep_map * , int  , unsigned long  ) ;
> #line 342
> extern int lock_is_held(struct lockdep_map * ) ;
> #line 573
> extern void lockdep_rcu_suspicious(char const   * , int const    , char const   * ) ;
8795c8813
<   return (& lock->ldv_5957.rlock);
---
>   return (& lock->ldv_6135.rlock);
8805c8823
<   _raw_spin_lock_irq(& lock->ldv_5957.rlock);
---
>   _raw_spin_lock_irq(& lock->ldv_6135.rlock);
8817c8835
<   _raw_spin_unlock_irq(& lock->ldv_5957.rlock);
---
>   _raw_spin_unlock_irq(& lock->ldv_6135.rlock);
8829c8847
<   _raw_spin_unlock_irqrestore(& lock->ldv_5957.rlock, flags);
---
>   _raw_spin_unlock_irqrestore(& lock->ldv_6135.rlock, flags);
8834,8839d8851
< #line 62 "include/linux/vmalloc.h"
< extern void *__vmalloc(unsigned long  , gfp_t  , pgprot_t  ) ;
< #line 66
< extern void vfree(void const   * ) ;
< #line 77 "include/linux/jiffies.h"
< extern unsigned long volatile   jiffies ;
8849a8862,9060
> #line 115 "include/linux/mutex.h"
> extern void __mutex_init(struct mutex * , char const   * , struct lock_class_key * ) ;
> #line 134
> extern void mutex_lock_nested(struct mutex * , unsigned int  ) ;
> #line 168
> extern int mutex_trylock(struct mutex * ) ;
> #line 169
> extern void mutex_unlock(struct mutex * ) ;
> #line 163 "include/linux/rcupdate.h"
> __inline static void __rcu_read_lock(void) 
> { 
>   struct thread_info *tmp ;
> 
>   {
> #line 165
>   tmp = current_thread_info();
> #line 165
>   tmp->preempt_count = tmp->preempt_count + 1;
> #line 165
>   __asm__  volatile   ("": : : "memory");
> #line 166
>   return;
> }
> }
> #line 168 "include/linux/rcupdate.h"
> __inline static void __rcu_read_unlock(void) 
> { 
>   struct thread_info *tmp ;
> 
>   {
> #line 170
>   __asm__  volatile   ("": : : "memory");
> #line 170
>   tmp = current_thread_info();
> #line 170
>   tmp->preempt_count = tmp->preempt_count + -1;
> #line 170
>   __asm__  volatile   ("": : : "memory");
> #line 171
>   return;
> }
> }
> #line 273
> extern int rcu_is_cpu_idle(void) ;
> #line 277
> extern bool rcu_lockdep_current_cpu_online(void) ;
> #line 287 "include/linux/rcupdate.h"
> __inline static void rcu_lock_acquire(struct lockdep_map *map ) 
> { 
> 
> 
>   {
> #line 289
>   lock_acquire(map, 0U, 0, 2, 1, 0, (unsigned long )((void *)0));
> #line 291
>   return;
> }
> }
> #line 292 "include/linux/rcupdate.h"
> __inline static void rcu_lock_release(struct lockdep_map *map ) 
> { 
> 
> 
>   {
> #line 294
>   lock_release(map, 1, (unsigned long )((void *)0));
> #line 296
>   return;
> }
> }
> #line 297
> extern struct lockdep_map rcu_lock_map ;
> #line 300
> extern int debug_lockdep_rcu_enabled(void) ;
> #line 322 "include/linux/rcupdate.h"
> __inline static int rcu_read_lock_held(void) 
> { 
>   int tmp ;
>   int tmp___0 ;
>   bool tmp___1 ;
>   int tmp___2 ;
>   int tmp___3 ;
> 
>   {
> #line 324
>   tmp = debug_lockdep_rcu_enabled();
> #line 324
>   if (tmp == 0) {
> #line 325
>     return (1);
>   } else {
> 
>   }
> #line 326
>   tmp___0 = rcu_is_cpu_idle();
> #line 326
>   if (tmp___0 != 0) {
> #line 327
>     return (0);
>   } else {
> 
>   }
> #line 328
>   tmp___1 = rcu_lockdep_current_cpu_online();
> #line 328
>   if (tmp___1) {
> #line 328
>     tmp___2 = 0;
>   } else {
> #line 328
>     tmp___2 = 1;
>   }
> #line 328
>   if (tmp___2) {
> #line 329
>     return (0);
>   } else {
> 
>   }
> #line 330
>   tmp___3 = lock_is_held(& rcu_lock_map);
> #line 330
>   return (tmp___3);
> }
> }
> #line 732 "include/linux/rcupdate.h"
> __inline static void rcu_read_lock(void) 
> { 
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
> 
>   {
> #line 734
>   __rcu_read_lock();
> #line 736
>   rcu_lock_acquire(& rcu_lock_map);
> #line 737
>   tmp = debug_lockdep_rcu_enabled();
> #line 737
>   if (tmp != 0 && ! __warned) {
> #line 737
>     tmp___0 = rcu_is_cpu_idle();
> #line 737
>     if (tmp___0 != 0) {
> #line 737
>       __warned = 1;
> #line 737
>       lockdep_rcu_suspicious("include/linux/rcupdate.h", 738, "rcu_read_lock() used illegally while idle");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 740
>   return;
> }
> }
> #line 756 "include/linux/rcupdate.h"
> __inline static void rcu_read_unlock(void) 
> { 
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
> 
>   {
> #line 758
>   tmp = debug_lockdep_rcu_enabled();
> #line 758
>   if (tmp != 0 && ! __warned) {
> #line 758
>     tmp___0 = rcu_is_cpu_idle();
> #line 758
>     if (tmp___0 != 0) {
> #line 758
>       __warned = 1;
> #line 758
>       lockdep_rcu_suspicious("include/linux/rcupdate.h", 759, "rcu_read_unlock() used illegally while idle");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 760
>   rcu_lock_release(& rcu_lock_map);
> #line 762
>   __rcu_read_unlock();
> #line 763
>   return;
> }
> }
> #line 77 "include/linux/jiffies.h"
> extern unsigned long volatile   jiffies ;
> #line 62 "include/linux/vmalloc.h"
> extern void *__vmalloc(unsigned long  , gfp_t  , pgprot_t  ) ;
> #line 66
> extern void vfree(void const   * ) ;
8968,9001d9178
< #line 16 "include/linux/uaccess.h"
< __inline static void pagefault_disable(void) 
< { 
<   struct thread_info *tmp ;
< 
<   {
< #line 18
<   tmp = current_thread_info();
< #line 18
<   tmp->preempt_count = tmp->preempt_count + 1;
< #line 23
<   __asm__  volatile   ("": : : "memory");
< #line 24
<   return;
< }
< }
< #line 26 "include/linux/uaccess.h"
< __inline static void pagefault_enable(void) 
< { 
<   struct thread_info *tmp ;
< 
<   {
< #line 32
<   __asm__  volatile   ("": : : "memory");
< #line 33
<   tmp = current_thread_info();
< #line 33
<   tmp->preempt_count = tmp->preempt_count + -1;
< #line 37
<   __asm__  volatile   ("": : : "memory");
< #line 38
<   return;
< }
< }
9009c9186
<   pagefault_disable();
---
>   __rcu_read_lock();
9023c9200
<   pagefault_enable();
---
>   __rcu_read_unlock();
9040c9217,9220
< #line 67 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 120 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_state.h"
> enum drbd_state_rv __drbd_set_state(struct drbd_conf *mdev , union drbd_state ns ,
>                                     enum chg_state_flags flags , struct completion *done ) ;
> #line 70 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
9042c9222
< #line 68
---
> #line 71
9044c9224
< #line 135
---
> #line 148
9046c9226
< #line 138 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 151 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
9053c9233
< #line 140
---
> #line 153
9055c9235
< #line 140
---
> #line 153
9057c9237
< #line 140
---
> #line 153
9059c9239
< #line 140
---
> #line 153
9062c9242
< #line 140
---
> #line 153
9066c9246
< #line 140
---
> #line 153
9069c9249
< #line 140
---
> #line 153
9073c9253
< #line 158
---
> #line 166
9075,9080c9255,9256
< #line 1149 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static void drbd_set_flag(struct drbd_conf *mdev , enum drbd_flag f ) 
< { 
< 
< 
<   {
---
> #line 1066
> char *drbd_task_to_thread_name(struct drbd_tconn *tconn , struct task_struct *task ) ;
9082,9102d9257
<   set_bit((unsigned int )f, (unsigned long volatile   *)(& mdev->drbd_flags));
< #line 1152
<   return;
< }
< }
< #line 1159 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static int drbd_test_flag(struct drbd_conf *mdev , enum drbd_flag f ) 
< { 
<   int tmp ;
< 
<   {
< #line 1161
<   tmp = variable_test_bit((int )f, (unsigned long const volatile   *)(& mdev->drbd_flags));
< #line 1161
<   return (tmp);
< }
< }
< #line 1243
< enum drbd_state_rv __drbd_set_state(struct drbd_conf *mdev , union drbd_state ns ,
<                                     enum chg_state_flags flags , struct completion *done ) ;
< #line 1339
9104c9259
< #line 1340
---
> #line 1152
9106c9261
< #line 1483
---
> #line 1317
9108c9263
< #line 1484
---
> #line 1318
9110c9265
< #line 1485
---
> #line 1319
9112c9267
< #line 1486
---
> #line 1320
9114c9269
< #line 1487
---
> #line 1321
9116c9271
< #line 1489
---
> #line 1323
9118c9273
< #line 1491
---
> #line 1325
9120c9275
< #line 1493
---
> #line 1327
9122c9277
< #line 1497
---
> #line 1331
9124c9279
< #line 1499
---
> #line 1333
9126c9281
< #line 1500
---
> #line 1334
9128c9283
< #line 1501
---
> #line 1335
9130c9285
< #line 1502
---
> #line 1336
9132c9287,9289
< #line 1503
---
> #line 1337
> void drbd_bm_mark_for_writeout(struct drbd_conf *mdev , int page_nr ) ;
> #line 1338
9134c9291,9293
< #line 1504
---
> #line 1339
> int drbd_bm_write_hinted(struct drbd_conf *mdev ) ;
> #line 1340
9136c9295
< #line 1505
---
> #line 1341
9138,9140c9297
< #line 1506
< unsigned long drbd_bm_ALe_set_all(struct drbd_conf *mdev , unsigned long al_enr ) ;
< #line 1508
---
> #line 1342
9142c9299
< #line 1509
---
> #line 1343
9144c9301
< #line 1510
---
> #line 1344
9146c9303
< #line 1513
---
> #line 1347
9148c9305
< #line 1515
---
> #line 1349
9150c9307
< #line 1516
---
> #line 1350
9152c9309
< #line 1517
---
> #line 1351
9154c9311
< #line 1518
---
> #line 1352
9156c9313
< #line 1521
---
> #line 1355
9158c9315
< #line 1524
---
> #line 1358
9160c9317
< #line 1527
---
> #line 1361
9162c9319
< #line 1528
---
> #line 1362
9164c9321
< #line 1562
---
> #line 1396
9166c9323
< #line 1568
---
> #line 1402
9168c9325
< #line 1570
---
> #line 1404
9170c9327
< #line 1587
---
> #line 1432
9172c9329
< #line 1612
---
> #line 1459
9175c9332
< #line 1853 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1643 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
9182c9339
< #line 1858
---
> #line 1648
9184c9341
< #line 1859
---
> #line 1649
9186c9343
< #line 1860
---
> #line 1650
9188c9345,9363
< #line 1862
---
> #line 1652
>   return (rv);
> }
> }
> #line 1655 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static union drbd_state drbd_read_state(struct drbd_conf *mdev ) 
> { 
>   union drbd_state rv ;
> 
>   {
> #line 1659
>   rv.i = mdev->state.i;
> #line 1660
>   rv.ldv_40604.susp = (mdev->tconn)->susp;
> #line 1661
>   rv.ldv_40604.susp_nod = (mdev->tconn)->susp_nod;
> #line 1662
>   rv.ldv_40604.susp_fen = (mdev->tconn)->susp_fen;
> #line 1664
9192c9367
< #line 1890 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1675 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
9195a9371,9373
>   enum drbd_io_error_p ep ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
9196a9375,9376
>   int tmp___0 ;
>   int tmp___1 ;
9201,9204c9381,9411
< #line 1894
<   switch ((mdev->ldev)->dc.on_io_error) {
<   case 0: ;
< #line 1896
---
> #line 1681
>   rcu_read_lock();
> #line 1682
>   _________p1 = *((struct disk_conf * volatile  *)(& (mdev->ldev)->disk_conf));
> #line 1682
>   tmp = debug_lockdep_rcu_enabled();
> #line 1682
>   if (tmp != 0 && ! __warned) {
> #line 1682
>     tmp___0 = rcu_read_lock_held();
> #line 1682
>     if (tmp___0 == 0 && 1) {
> #line 1682
>       __warned = 1;
> #line 1682
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h",
>                              1682, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1682
>   ep = (enum drbd_io_error_p )_________p1->on_io_error;
> #line 1683
>   rcu_read_unlock();
> #line 1684
>   switch ((unsigned int )ep) {
>   case 0U: ;
> #line 1686
9206,9210c9413,9417
< #line 1897
<     tmp = ___ratelimit(& drbd_ratelimit_state, "__drbd_chk_io_error_");
< #line 1897
<     if (tmp != 0) {
< #line 1898
---
> #line 1687
>     tmp___1 = ___ratelimit(& drbd_ratelimit_state, "__drbd_chk_io_error_");
> #line 1687
>     if (tmp___1 != 0) {
> #line 1688
9216,9222c9423,9429
< #line 1899
<     if ((int )mdev->state.ldv_39979.disk > 4) {
< #line 1900
<       __ns.i = mdev->state.i;
< #line 1900
<       __ns.ldv_39979.disk = 4U;
< #line 1900
---
> #line 1689
>     if ((int )mdev->state.ldv_50103.disk > 4) {
> #line 1690
>       __ns = drbd_read_state(mdev);
> #line 1690
>       __ns.ldv_40604.disk = 4U;
> #line 1690
9227,9228c9434,9435
< #line 1901
<     goto ldv_50254;
---
> #line 1691
>     goto ldv_51375;
9232,9236c9439,9443
<   case 2: ;
<   case 1: 
< #line 1926
<   drbd_set_flag(mdev, WAS_IO_ERROR);
< #line 1927
---
>   case 2U: ;
>   case 1U: 
> #line 1716
>   set_bit(12U, (unsigned long volatile   *)(& mdev->flags));
> #line 1717
9238,9239c9445,9446
< #line 1928
<     drbd_set_flag(mdev, WAS_READ_ERROR);
---
> #line 1718
>     set_bit(13U, (unsigned long volatile   *)(& mdev->flags));
9243c9450
< #line 1929
---
> #line 1719
9245,9246c9452,9453
< #line 1930
<     drbd_set_flag(mdev, FORCE_DETACH);
---
> #line 1720
>     set_bit(14U, (unsigned long volatile   *)(& mdev->flags));
9250,9256c9457,9463
< #line 1931
<   if ((int )mdev->state.ldv_39979.disk > 2) {
< #line 1932
<     __ns___0.i = mdev->state.i;
< #line 1932
<     __ns___0.ldv_39979.disk = 2U;
< #line 1932
---
> #line 1721
>   if ((int )mdev->state.ldv_50103.disk > 2) {
> #line 1722
>     __ns___0 = drbd_read_state(mdev);
> #line 1722
>     __ns___0.ldv_40604.disk = 2U;
> #line 1722
9258c9465
< #line 1933
---
> #line 1723
9264,9265c9471,9472
< #line 1936
<   goto ldv_50254;
---
> #line 1726
>   goto ldv_51375;
9267,9268c9474,9475
<   ldv_50254: ;
< #line 1939
---
>   ldv_51375: ;
> #line 1729
9272c9479
< #line 1949 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1739 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
9280c9487
< #line 1952
---
> #line 1742
9282,9284c9489,9491
< #line 1954
<     tmp = spinlock_check(& mdev->req_lock);
< #line 1954
---
> #line 1744
>     tmp = spinlock_check(& (mdev->tconn)->req_lock);
> #line 1744
9286c9493
< #line 1955
---
> #line 1745
9288,9289c9495,9496
< #line 1956
<     spin_unlock_irqrestore(& mdev->req_lock, flags);
---
> #line 1746
>     spin_unlock_irqrestore(& (mdev->tconn)->req_lock, flags);
9293c9500
< #line 1958
---
> #line 1748
9297c9504
< #line 1984 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1785 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
9300c9507,9511
< 
---
>   int meta_dev_idx ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
9303,9304c9514,9542
< #line 1986
<   switch (bdev->dc.meta_dev_idx) {
---
> #line 1789
>   rcu_read_lock();
> #line 1790
>   _________p1 = *((struct disk_conf * volatile  *)(& bdev->disk_conf));
> #line 1790
>   tmp = debug_lockdep_rcu_enabled();
> #line 1790
>   if (tmp != 0 && ! __warned) {
> #line 1790
>     tmp___0 = rcu_read_lock_held();
> #line 1790
>     if (tmp___0 == 0 && 1) {
> #line 1790
>       __warned = 1;
> #line 1790
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h",
>                              1790, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1790
>   meta_dev_idx = _________p1->meta_dev_idx;
> #line 1791
>   rcu_read_unlock();
> #line 1793
>   switch (meta_dev_idx) {
9307c9545
< #line 1989
---
> #line 1796
9311c9549
< #line 1992
---
> #line 1799
9316c9554
< #line 2247 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 2043 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
9323c9561
< #line 2249
---
> #line 2045
9325c9563
< #line 2249
---
> #line 2045
9327c9565
< #line 2255
---
> #line 2051
9329c9567
< #line 2255
---
> #line 2051
9332c9570
<             2255);
---
>             2051);
9336c9574
< #line 2256
---
> #line 2052
9338,9340c9576,9578
< #line 2257
<     if ((unsigned int )*((unsigned char *)mdev + 2277UL) == 0U) {
< #line 2259
---
> #line 2053
>     if ((unsigned int )*((unsigned char *)mdev + 749UL) == 0U) {
> #line 2055
9345,9347c9583,9585
< #line 2260
<     if ((unsigned int )*((unsigned char *)mdev + 2277UL) == 4U) {
< #line 2262
---
> #line 2056
>     if ((unsigned int )*((unsigned char *)mdev + 749UL) == 4U) {
> #line 2058
9352c9590
< #line 2263
---
> #line 2059
9357c9595
< #line 2265
---
> #line 2061
9361c9599
< #line 2268 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 2064 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
9367,9369c9605,9607
< #line 2273
<   if ((unsigned int )*((unsigned char *)mdev + 2277UL) == 0U) {
< #line 2274
---
> #line 2069
>   if ((unsigned int )*((unsigned char *)mdev + 749UL) == 0U) {
> #line 2070
9374c9612
< #line 2276
---
> #line 2072
9376,9378c9614,9616
< #line 2277
<   io_allowed = (unsigned int )mdev->state.ldv_39979.disk >= (unsigned int )mins;
< #line 2278
---
> #line 2073
>   io_allowed = (unsigned int )mdev->state.ldv_50103.disk >= (unsigned int )mins;
> #line 2074
9380c9618
< #line 2279
---
> #line 2075
9385c9623
< #line 2280
---
> #line 2076
9389c9627
< #line 2544 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 2317 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
9396,9398c9634,9645
< #line 2548
<   tmp = drbd_test_flag(mdev, MD_NO_FUA);
< #line 2548
---
> #line 2321
>   if ((unsigned long )mdev->ldev == (unsigned long )((struct drbd_backing_dev *)0)) {
> #line 2322
>     dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "mdev->ldev == NULL in drbd_md_flush\n");
> #line 2323
>     return;
>   } else {
> 
>   }
> #line 2326
>   tmp = constant_test_bit(7U, (unsigned long const volatile   *)(& mdev->flags));
> #line 2326
9400c9647
< #line 2549
---
> #line 2327
9405c9652
< #line 2551
---
> #line 2329
9407c9654
< #line 2552
---
> #line 2330
9409,9411c9656,9658
< #line 2553
<     drbd_set_flag(mdev, MD_NO_FUA);
< #line 2554
---
> #line 2331
>     set_bit(7U, (unsigned long volatile   *)(& mdev->flags));
> #line 2332
9417c9664
< #line 2556
---
> #line 2334
9421c9668
< #line 187 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 123 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
9426,9432c9673,9675
<   struct task_struct *tmp___3 ;
<   char *tmp___4 ;
<   struct task_struct *tmp___5 ;
<   char *tmp___6 ;
<   struct task_struct *tmp___7 ;
<   char *tmp___8 ;
<   struct task_struct *tmp___9 ;
---
>   char *tmp___0 ;
>   struct task_struct *tmp___1 ;
>   char *tmp___2 ;
9435c9678
< #line 189
---
> #line 125
9437c9680
< #line 190
---
> #line 126
9439c9682
< #line 190
---
> #line 126
9441c9684
< #line 191
---
> #line 127
9446,9478c9689,9695
< #line 192
<   tmp___9 = get_current();
< #line 192
<   if ((unsigned long )tmp___9 != (unsigned long )mdev->receiver.task) {
< #line 192
<     tmp___7 = get_current();
< #line 192
<     if ((unsigned long )tmp___7 != (unsigned long )mdev->asender.task) {
< #line 192
<       tmp___5 = get_current();
< #line 192
<       if ((unsigned long )tmp___5 != (unsigned long )mdev->worker.task) {
< #line 192
<         tmp___3 = get_current();
< #line 192
<         tmp___4 = (char *)(& tmp___3->comm);
<       } else {
< #line 192
<         tmp___4 = (char *)"worker";
<       }
< #line 192
<       tmp___6 = tmp___4;
<     } else {
< #line 192
<       tmp___6 = (char *)"asender";
<     }
< #line 192
<     tmp___8 = tmp___6;
<   } else {
< #line 192
<     tmp___8 = (char *)"receiver";
<   }
< #line 192
---
> #line 128
>   tmp___0 = drbd_task_to_thread_name(mdev->tconn, b->bm_task);
> #line 128
>   tmp___1 = get_current();
> #line 128
>   tmp___2 = drbd_task_to_thread_name(mdev->tconn, tmp___1);
> #line 128
9480,9482c9697,9699
<           tmp___8, func, (unsigned long )b->bm_why != (unsigned long )((char *)0) ? b->bm_why : (char *)"?",
<           (unsigned long )b->bm_task != (unsigned long )mdev->receiver.task ? ((unsigned long )b->bm_task != (unsigned long )mdev->asender.task ? ((unsigned long )b->bm_task == (unsigned long )mdev->worker.task ? (char *)"worker" : (char *)"?") : (char *)"asender") : (char *)"receiver");
< #line 198
---
>           tmp___2, func, (unsigned long )b->bm_why != (unsigned long )((char *)0) ? b->bm_why : (char *)"?",
>           tmp___0);
> #line 132
9486c9703
< #line 202 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 134 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
9492,9498c9709,9711
<   struct task_struct *tmp___3 ;
<   char *tmp___4 ;
<   struct task_struct *tmp___5 ;
<   char *tmp___6 ;
<   struct task_struct *tmp___7 ;
<   char *tmp___8 ;
<   struct task_struct *tmp___9 ;
---
>   char *tmp___0 ;
>   struct task_struct *tmp___1 ;
>   char *tmp___2 ;
9501c9714
< #line 204
---
> #line 136
9503c9716
< #line 207
---
> #line 139
9505c9718
< #line 208
---
> #line 140
9507c9720
< #line 209
---
> #line 141
9512,9514c9725,9727
< #line 212
<   tmp = ldv_mutex_trylock_15(& b->bm_change);
< #line 212
---
> #line 144
>   tmp = mutex_trylock(& b->bm_change);
> #line 144
9516c9729
< #line 214
---
> #line 146
9518,9550c9731,9737
< #line 215
<     tmp___9 = get_current();
< #line 215
<     if ((unsigned long )tmp___9 != (unsigned long )mdev->receiver.task) {
< #line 215
<       tmp___7 = get_current();
< #line 215
<       if ((unsigned long )tmp___7 != (unsigned long )mdev->asender.task) {
< #line 215
<         tmp___5 = get_current();
< #line 215
<         if ((unsigned long )tmp___5 != (unsigned long )mdev->worker.task) {
< #line 215
<           tmp___3 = get_current();
< #line 215
<           tmp___4 = (char *)(& tmp___3->comm);
<         } else {
< #line 215
<           tmp___4 = (char *)"worker";
<         }
< #line 215
<         tmp___6 = tmp___4;
<       } else {
< #line 215
<         tmp___6 = (char *)"asender";
<       }
< #line 215
<       tmp___8 = tmp___6;
<     } else {
< #line 215
<       tmp___8 = (char *)"receiver";
<     }
< #line 215
---
> #line 147
>     tmp___0 = drbd_task_to_thread_name(mdev->tconn, b->bm_task);
> #line 147
>     tmp___1 = get_current();
> #line 147
>     tmp___2 = drbd_task_to_thread_name(mdev->tconn, tmp___1);
> #line 147
9552,9555c9739,9742
<              tmp___8, why, (unsigned long )b->bm_why != (unsigned long )((char *)0) ? b->bm_why : (char *)"?",
<              (unsigned long )b->bm_task != (unsigned long )mdev->receiver.task ? ((unsigned long )b->bm_task != (unsigned long )mdev->asender.task ? ((unsigned long )b->bm_task == (unsigned long )mdev->worker.task ? (char *)"worker" : (char *)"?") : (char *)"asender") : (char *)"receiver");
< #line 223
<     ldv_mutex_lock_16(& b->bm_change);
---
>              tmp___2, why, (unsigned long )b->bm_why != (unsigned long )((char *)0) ? b->bm_why : (char *)"?",
>              tmp___0);
> #line 151
>     mutex_lock_nested(& b->bm_change, 0U);
9559c9746
< #line 225
---
> #line 153
9561c9748
< #line 226
---
> #line 154
9566c9753
< #line 227
---
> #line 155
9568c9755
< #line 229
---
> #line 157
9570c9757
< #line 230
---
> #line 158
9572c9759
< #line 231
---
> #line 159
9576c9763
< #line 233 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 161 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
9582c9769
< #line 235
---
> #line 163
9584c9771
< #line 236
---
> #line 164
9586c9773
< #line 237
---
> #line 165
9588c9775
< #line 238
---
> #line 166
9593c9780
< #line 241
---
> #line 169
9595c9782
< #line 242
---
> #line 170
9600c9787
< #line 244
---
> #line 172
9602c9789
< #line 245
---
> #line 173
9604c9791
< #line 246
---
> #line 174
9606,9608c9793,9795
< #line 247
<   ldv_mutex_unlock_17(& b->bm_change);
< #line 248
---
> #line 175
>   mutex_unlock(& b->bm_change);
> #line 176
9612c9799
< #line 276 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 207 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
9618c9805
< #line 278
---
> #line 209
9620c9807
< #line 278
---
> #line 209
9622,9627c9809,9814
< #line 278
<     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"),
<                          "i" (278), "i" (12UL));
<     ldv_50525: ;
< #line 278
<     goto ldv_50525;
---
> #line 209
>     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"),
>                          "i" (209), "i" (12UL));
>     ldv_51692: ;
> #line 209
>     goto ldv_51692;
9631,9633c9818,9820
< #line 279
<   page->ldv_14722.private = idx;
< #line 280
---
> #line 210
>   page->ldv_16348.private = idx;
> #line 211
9637c9824
< #line 282 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 213 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
9643,9644c9830,9831
< #line 284
<   return (page->ldv_14722.private & 16777215UL);
---
> #line 215
>   return (page->ldv_16348.private & 16777215UL);
9647c9834
< #line 290 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 221 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
9658c9845
< #line 292
---
> #line 223
9660,9662c9847,9849
< #line 293
<   addr = (void *)(& (*(b->bm_pages + (unsigned long )page_nr))->ldv_14722.private);
< #line 294
---
> #line 224
>   addr = (void *)(& (*(b->bm_pages + (unsigned long )page_nr))->ldv_16348.private);
> #line 225
9664c9851
< #line 294
---
> #line 225
9666,9667c9853,9854
< #line 294
<     goto ldv_50535;
---
> #line 225
>     goto ldv_51702;
9671c9858
< #line 294
---
> #line 225
9673c9860
< #line 294
---
> #line 225
9675c9862
< #line 294
---
> #line 225
9677c9864
< #line 294
---
> #line 225
9679c9866
< #line 294
---
> #line 225
9681c9868
< #line 294
---
> #line 225
9683,9684c9870,9871
<   ldv_50538: 
< #line 294
---
>   ldv_51705: 
> #line 225
9686c9873
< #line 294
---
> #line 225
9688c9875
< #line 294
---
> #line 225
9690,9691c9877,9878
< #line 294
<     goto ldv_50537;
---
> #line 225
>     goto ldv_51704;
9695c9882
< #line 294
---
> #line 225
9697,9700c9884,9887
< #line 294
<   goto ldv_50538;
<   ldv_50537: 
< #line 294
---
> #line 225
>   goto ldv_51705;
>   ldv_51704: 
> #line 225
9702,9703c9889,9890
<   ldv_50535: ;
< #line 297
---
>   ldv_51702: ;
> #line 228
9707c9894
< #line 297 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 228 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
9714c9901
< #line 299
---
> #line 230
9716,9722c9903,9907
< #line 300
<   addr = (void *)(& (*(b->bm_pages + (unsigned long )page_nr))->ldv_14722.private);
< #line 301
<   clear_bit(31, (unsigned long volatile   *)addr);
< #line 302
<   __asm__  volatile   ("": : : "memory");
< #line 303
---
> #line 231
>   addr = (void *)(& (*(b->bm_pages + (unsigned long )page_nr))->ldv_16348.private);
> #line 232
>   clear_bit_unlock(31U, (unsigned long volatile   *)addr);
> #line 233
9724c9909
< #line 304
---
> #line 234
9728c9913
< #line 308 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 238 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
9734,9738c9919,9923
< #line 311
<   clear_bit(29, (unsigned long volatile   *)(& page->ldv_14722.private));
< #line 312
<   clear_bit(28, (unsigned long volatile   *)(& page->ldv_14722.private));
< #line 313
---
> #line 241
>   clear_bit(29, (unsigned long volatile   *)(& page->ldv_16348.private));
> #line 242
>   clear_bit(28, (unsigned long volatile   *)(& page->ldv_16348.private));
> #line 243
9742c9927
< #line 315 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 245 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
9748,9750c9933,9959
< #line 317
<   set_bit(29U, (unsigned long volatile   *)(& page->ldv_14722.private));
< #line 318
---
> #line 247
>   set_bit(29U, (unsigned long volatile   *)(& page->ldv_16348.private));
> #line 248
>   return;
> }
> }
> #line 259 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
> void drbd_bm_mark_for_writeout(struct drbd_conf *mdev , int page_nr ) 
> { 
>   struct page *page ;
> 
>   {
> #line 262
>   if ((size_t )page_nr >= (mdev->bitmap)->bm_number_of_pages) {
> #line 263
>     dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "BAD: page_nr: %u, number_of_pages: %u\n",
>              page_nr, (int )(mdev->bitmap)->bm_number_of_pages);
> #line 265
>     return;
>   } else {
> 
>   }
> #line 267
>   page = *((mdev->bitmap)->bm_pages + (unsigned long )page_nr);
> #line 268
>   set_bit(27U, (unsigned long volatile   *)(& page->ldv_16348.private));
> #line 269
9754c9963
< #line 320 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 271 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
9760,9762c9969,9971
< #line 322
<   addr = (unsigned long const volatile   *)(& page->ldv_14722.private);
< #line 323
---
> #line 273
>   addr = (unsigned long const volatile   *)(& page->ldv_16348.private);
> #line 274
9766c9975
< #line 326 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 277 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
9772,9774c9981,9983
< #line 328
<   set_bit(30U, (unsigned long volatile   *)(& page->ldv_14722.private));
< #line 329
---
> #line 279
>   set_bit(30U, (unsigned long volatile   *)(& page->ldv_16348.private));
> #line 280
9778c9987
< #line 331 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 282 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
9784,9786c9993,9995
< #line 333
<   clear_bit(30, (unsigned long volatile   *)(& page->ldv_14722.private));
< #line 334
---
> #line 284
>   clear_bit(30, (unsigned long volatile   *)(& page->ldv_16348.private));
> #line 285
9790c9999
< #line 336 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 287 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
9796,9798c10005,10007
< #line 338
<   set_bit(28U, (unsigned long volatile   *)(& page->ldv_14722.private));
< #line 339
---
> #line 289
>   set_bit(28U, (unsigned long volatile   *)(& page->ldv_16348.private));
> #line 290
9802c10011
< #line 341 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 292 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
9808,9810c10017,10019
< #line 343
<   tmp = constant_test_bit(28U, (unsigned long const volatile   *)(& page->ldv_14722.private));
< #line 343
---
> #line 294
>   tmp = constant_test_bit(28U, (unsigned long const volatile   *)(& page->ldv_16348.private));
> #line 294
9814c10023
< #line 347 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 298 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
9821c10030
< #line 350
---
> #line 301
9823c10032
< #line 351
---
> #line 302
9825c10034
< #line 351
---
> #line 302
9827,9832c10036,10041
< #line 351
<     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"),
<                          "i" (351), "i" (12UL));
<     ldv_50572: ;
< #line 351
<     goto ldv_50572;
---
> #line 302
>     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"),
>                          "i" (302), "i" (12UL));
>     ldv_51744: ;
> #line 302
>     goto ldv_51744;
9836c10045
< #line 352
---
> #line 303
9840c10049
< #line 355 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 306 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
9847c10056
< #line 358
---
> #line 309
9849c10058
< #line 359
---
> #line 310
9851c10060
< #line 359
---
> #line 310
9853,9858c10062,10067
< #line 359
<     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"),
<                          "i" (359), "i" (12UL));
<     ldv_50578: ;
< #line 359
<     goto ldv_50578;
---
> #line 310
>     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"),
>                          "i" (310), "i" (12UL));
>     ldv_51750: ;
> #line 310
>     goto ldv_51750;
9862c10071
< #line 360
---
> #line 311
9866c10075
< #line 363 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 314 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
9873c10082
< #line 365
---
> #line 316
9875c10084
< #line 366
---
> #line 317
9877c10086
< #line 366
---
> #line 317
9881c10090
< #line 369 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 320 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
9887c10096
< #line 371
---
> #line 322
9889c10098
< #line 371
---
> #line 322
9893c10102
< #line 374 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 325 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
9899c10108
< #line 376
---
> #line 327
9901c10110
< #line 377
---
> #line 328
9905c10114
< #line 379 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 330 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
9911c10120
< #line 381
---
> #line 332
9915c10124
< #line 404 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 355 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
9921c10130
< #line 407
---
> #line 358
9923c10132
< #line 408
---
> #line 359
9928c10137
< #line 410
---
> #line 361
9930,9933c10139,10142
< #line 410
<   goto ldv_50601;
<   ldv_50600: ;
< #line 411
---
> #line 361
>   goto ldv_51773;
>   ldv_51772: ;
> #line 362
9935c10144
< #line 412
---
> #line 363
9938,9939c10147,10148
< #line 415
<     goto ldv_50599;
---
> #line 366
>     goto ldv_51771;
9943c10152
< #line 417
---
> #line 368
9945c10154
< #line 418
---
> #line 369
9947,9948c10156,10157
<   ldv_50599: 
< #line 410
---
>   ldv_51771: 
> #line 361
9950,9951c10159,10160
<   ldv_50601: ;
< #line 410
---
>   ldv_51773: ;
> #line 361
9953,9954c10162,10163
< #line 411
<     goto ldv_50600;
---
> #line 362
>     goto ldv_51772;
9959c10168
< #line 415
---
> #line 366
9963c10172
< #line 422 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 373 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
9969c10178
< #line 424
---
> #line 375
9971c10180
< #line 425
---
> #line 376
9974c10183
< #line 427
---
> #line 378
9977c10186
< #line 428
---
> #line 379
9981c10190
< #line 433 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 384 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
10000c10209
< #line 435
---
> #line 386
10002c10211
< #line 437
---
> #line 388
10004c10213
< #line 438
---
> #line 389
10006c10215
< #line 440
---
> #line 391
10008c10217
< #line 440
---
> #line 391
10010c10219
< #line 440
---
> #line 391
10013c10222
< #line 440
---
> #line 391
10015,10020c10224,10229
< #line 440
<       __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"),
<                            "i" (440), "i" (12UL));
<       ldv_50618: ;
< #line 440
<       goto ldv_50618;
---
> #line 391
>       __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"),
>                            "i" (391), "i" (12UL));
>       ldv_51790: ;
> #line 391
>       goto ldv_51790;
10027c10236
< #line 441
---
> #line 392
10029c10238
< #line 441
---
> #line 392
10031c10240
< #line 441
---
> #line 392
10034c10243
< #line 441
---
> #line 392
10036,10041c10245,10250
< #line 441
<       __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"),
<                            "i" (441), "i" (12UL));
<       ldv_50619: ;
< #line 441
<       goto ldv_50619;
---
> #line 392
>       __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"),
>                            "i" (392), "i" (12UL));
>       ldv_51791: ;
> #line 392
>       goto ldv_51791;
10048c10257
< #line 443
---
> #line 394
10050c10259
< #line 444
---
> #line 395
10055c10264
< #line 451
---
> #line 402
10057c10266
< #line 452
---
> #line 403
10059c10268
< #line 452
---
> #line 403
10061c10270
< #line 453
---
> #line 404
10063c10272
< #line 454
---
> #line 405
10065c10274
< #line 454
---
> #line 405
10067c10276
< #line 454
---
> #line 405
10069c10278
< #line 457
---
> #line 408
10071c10280
< #line 458
---
> #line 409
10076c10285
< #line 459
---
> #line 410
10081c10290
< #line 462
---
> #line 413
10083c10292
< #line 463
---
> #line 414
10085,10088c10294,10297
< #line 463
<     goto ldv_50622;
<     ldv_50621: 
< #line 464
---
> #line 414
>     goto ldv_51794;
>     ldv_51793: 
> #line 415
10090c10299
< #line 463
---
> #line 414
10092,10093c10301,10302
<     ldv_50622: ;
< #line 463
---
>     ldv_51794: ;
> #line 414
10095,10096c10304,10305
< #line 464
<       goto ldv_50621;
---
> #line 415
>       goto ldv_51793;
10101,10104c10310,10313
< #line 465
<     goto ldv_50625;
<     ldv_50624: 
< #line 466
---
> #line 416
>     goto ldv_51797;
>     ldv_51796: 
> #line 417
10106c10315
< #line 467
---
> #line 418
10108c10317
< #line 468
---
> #line 419
10110c10319
< #line 469
---
> #line 420
10112c10321
< #line 470
---
> #line 421
10117c10326
< #line 474
---
> #line 425
10119c10328
< #line 475
---
> #line 426
10121c10330
< #line 465
---
> #line 416
10123,10124c10332,10333
<     ldv_50625: ;
< #line 465
---
>     ldv_51797: ;
> #line 416
10126,10127c10335,10336
< #line 466
<       goto ldv_50624;
---
> #line 417
>       goto ldv_51796;
10133c10342
< #line 478
---
> #line 429
10135,10138c10344,10347
< #line 478
<     goto ldv_50628;
<     ldv_50627: 
< #line 479
---
> #line 429
>     goto ldv_51800;
>     ldv_51799: 
> #line 430
10140c10349
< #line 478
---
> #line 429
10142,10143c10351,10352
<     ldv_50628: ;
< #line 478
---
>     ldv_51800: ;
> #line 429
10145,10146c10354,10355
< #line 479
<       goto ldv_50627;
---
> #line 430
>       goto ldv_51799;
10152c10361
< #line 485
---
> #line 436
10154c10363
< #line 486
---
> #line 437
10157c10366
< #line 488
---
> #line 439
10160c10369
< #line 490
---
> #line 441
10164c10373
< #line 497 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 448 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
10176c10385
< #line 499
---
> #line 450
10178c10387
< #line 500
---
> #line 451
10180c10389
< #line 500
---
> #line 451
10182c10391
< #line 500
---
> #line 451
10184,10186c10393,10395
< #line 500
<     warn_slowpath_null("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<                        500);
---
> #line 451
>     warn_slowpath_null("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared",
>                        451);
10190c10399
< #line 500
---
> #line 451
10192c10401
< #line 501
---
> #line 452
10194c10403
< #line 501
---
> #line 452
10196c10405
< #line 502
---
> #line 453
10198c10407
< #line 503
---
> #line 454
10203c10412
< #line 504
---
> #line 455
10205,10207c10414,10416
< #line 504
<   __raw_spin_lock_init(& b->bm_lock.ldv_5957.rlock, "&(&b->bm_lock)->rlock", & __key);
< #line 505
---
> #line 455
>   __raw_spin_lock_init(& b->bm_lock.ldv_6135.rlock, "&(&b->bm_lock)->rlock", & __key);
> #line 456
10209c10418
< #line 506
---
> #line 457
10211c10420
< #line 508
---
> #line 459
10213c10422
< #line 510
---
> #line 461
10217c10426
< #line 513 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 464 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
10220c10429,10430
<   int _b ;
---
>   bool _bool ;
>   int tmp ;
10223,10230c10433,10439
< #line 515
<   _b = (unsigned long )mdev->bitmap == (unsigned long )((struct drbd_bitmap *)0);
< #line 515
<   if (_b != 0) {
< #line 515
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_bm_capacity", (char *)"!mdev->bitmap", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             515);
---
> #line 466
>   _bool = (unsigned long )mdev->bitmap != (unsigned long )((struct drbd_bitmap *)0);
> #line 466
>   if (! _bool) {
> #line 466
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"mdev->bitmap", "drbd_bm_capacity");
10234,10236c10443,10453
< #line 515
<   if (_b != 0) {
< #line 515
---
> #line 466
>   if (_bool) {
> #line 466
>     tmp = 0;
>   } else {
> #line 466
>     tmp = 1;
>   }
> #line 466
>   if (tmp) {
> #line 467
10241c10458
< #line 516
---
> #line 468
10245c10462
< #line 521 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 473 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
10248c10465,10466
<   int _b ;
---
>   bool _bool ;
>   int tmp ;
10251,10258c10469,10475
< #line 523
<   _b = (unsigned long )mdev->bitmap == (unsigned long )((struct drbd_bitmap *)0);
< #line 523
<   if (_b != 0) {
< #line 523
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_bm_cleanup", (char *)"!mdev->bitmap", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             523);
---
> #line 475
>   _bool = (unsigned long )mdev->bitmap != (unsigned long )((struct drbd_bitmap *)0);
> #line 475
>   if (! _bool) {
> #line 475
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"mdev->bitmap", "drbd_bm_cleanup");
10262,10264c10479,10489
< #line 523
<   if (_b != 0) {
< #line 523
---
> #line 475
>   if (_bool) {
> #line 475
>     tmp = 0;
>   } else {
> #line 475
>     tmp = 1;
>   }
> #line 475
>   if (tmp) {
> #line 476
10269c10494
< #line 524
---
> #line 477
10271c10496
< #line 525
---
> #line 478
10273c10498
< #line 526
---
> #line 479
10275c10500
< #line 527
---
> #line 480
10277c10502
< #line 528
---
> #line 481
10281c10506
< #line 538 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 491 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
10292c10517
< #line 543
---
> #line 496
10294c10519
< #line 546
---
> #line 499
10296c10521
< #line 548
---
> #line 501
10298c10523
< #line 551
---
> #line 504
10300c10525
< #line 553
---
> #line 506
10302c10527
< #line 554
---
> #line 507
10304c10529
< #line 555
---
> #line 508
10306c10531
< #line 560
---
> #line 513
10308c10533
< #line 560
---
> #line 513
10310c10535
< #line 561
---
> #line 514
10312c10537
< #line 562
---
> #line 515
10317c10542
< #line 571
---
> #line 524
10319c10544
< #line 572
---
> #line 525
10323c10548
< #line 575 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 528 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
10332c10557
< #line 582
---
> #line 535
10334c10559
< #line 584
---
> #line 537
10336c10561
< #line 587
---
> #line 540
10338c10563
< #line 589
---
> #line 542
10340c10565
< #line 590
---
> #line 543
10342c10567
< #line 591
---
> #line 544
10344c10569
< #line 596
---
> #line 549
10346c10571
< #line 597
---
> #line 550
10351c10576
< #line 605
---
> #line 558
10353c10578
< #line 606
---
> #line 559
10357c10582
< #line 610 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 563 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
10371c10596
< #line 613
---
> #line 566
10373c10598
< #line 614
---
> #line 567
10375c10600
< #line 618
---
> #line 571
10377,10380c10602,10605
< #line 618
<   goto ldv_50680;
<   ldv_50679: 
< #line 619
---
> #line 571
>   goto ldv_51852;
>   ldv_51851: 
> #line 572
10382c10607
< #line 620
---
> #line 573
10384,10387c10609,10612
< #line 620
<   goto ldv_50676;
<   ldv_50675: 
< #line 621
---
> #line 573
>   goto ldv_51848;
>   ldv_51847: 
> #line 574
10389c10614
< #line 621
---
> #line 574
10391c10616
< #line 620
---
> #line 573
10393,10394c10618,10619
<   ldv_50676: ;
< #line 620
---
>   ldv_51848: ;
> #line 573
10396,10397c10621,10622
< #line 621
<     goto ldv_50675;
---
> #line 574
>     goto ldv_51847;
10401c10626
< #line 622
---
> #line 575
10403,10406c10628,10631
< #line 623
<   __might_sleep("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<                 623, 0);
< #line 623
---
> #line 576
>   __might_sleep("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared",
>                 576, 0);
> #line 576
10408c10633
< #line 618
---
> #line 571
10410,10411c10635,10636
<   ldv_50680: ;
< #line 618
---
>   ldv_51852: ;
> #line 571
10413,10414c10638,10639
< #line 619
<     goto ldv_50679;
---
> #line 572
>     goto ldv_51851;
10418c10643
< #line 626
---
> #line 579
10420c10645
< #line 627
---
> #line 580
10422c10647
< #line 628
---
> #line 581
10424,10427c10649,10652
< #line 628
<   goto ldv_50683;
<   ldv_50682: 
< #line 629
---
> #line 581
>   goto ldv_51855;
>   ldv_51854: 
> #line 582
10429c10654
< #line 629
---
> #line 582
10431c10656
< #line 628
---
> #line 581
10433,10434c10658,10659
<   ldv_50683: ;
< #line 628
---
>   ldv_51855: ;
> #line 581
10436,10437c10661,10662
< #line 629
<     goto ldv_50682;
---
> #line 582
>     goto ldv_51854;
10441c10666
< #line 630
---
> #line 583
10443c10668
< #line 631
---
> #line 584
10445c10670
< #line 631
---
> #line 584
10447c10672
< #line 635
---
> #line 588
10449c10674
< #line 636
---
> #line 589
10453c10678
< #line 640 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 593 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
10465c10690
< #line 646
---
> #line 599
10467c10692
< #line 648
---
> #line 601
10469c10694
< #line 649
---
> #line 602
10471c10696
< #line 650
---
> #line 603
10476,10479c10701,10704
< #line 653
<   goto ldv_50700;
<   ldv_50699: 
< #line 654
---
> #line 606
>   goto ldv_51872;
>   ldv_51871: 
> #line 607
10481c10706
< #line 654
---
> #line 607
10483c10708
< #line 654
---
> #line 607
10485c10710
< #line 655
---
> #line 608
10487c10712
< #line 656
---
> #line 609
10489c10714
< #line 657
---
> #line 610
10491c10716
< #line 658
---
> #line 611
10493c10718
< #line 659
---
> #line 612
10496c10721
< #line 662
---
> #line 615
10499c10724
< #line 663
---
> #line 616
10501c10726
< #line 664
---
> #line 617
10503c10728
< #line 665
---
> #line 618
10505,10506c10730,10731
<   ldv_50700: ;
< #line 653
---
>   ldv_51872: ;
> #line 606
10508,10509c10733,10734
< #line 654
<     goto ldv_50699;
---
> #line 607
>     goto ldv_51871;
10514c10739
< #line 658
---
> #line 611
10518c10743
< #line 677 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 630 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
10534,10535c10759,10760
<   int _b ;
<   unsigned long tmp ;
---
>   bool _bool ;
>   int tmp ;
10537,10538c10762,10764
<   size_t tmp___1 ;
<   sector_t tmp___2 ;
---
>   unsigned long tmp___1 ;
>   size_t tmp___2 ;
>   sector_t tmp___3 ;
10540d10765
<   int tmp___3 ;
10541a10767
>   int tmp___5 ;
10544c10770
< #line 679
---
> #line 632
10546c10772
< #line 682
---
> #line 635
10548c10774
< #line 683
---
> #line 636
10550,10557c10776,10782
< #line 686
<   _b = (unsigned long )b == (unsigned long )((struct drbd_bitmap *)0);
< #line 686
<   if (_b != 0) {
< #line 686
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_bm_resize", (char *)"!b", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             686);
---
> #line 639
>   _bool = (unsigned long )b != (unsigned long )((struct drbd_bitmap *)0);
> #line 639
>   if (! _bool) {
> #line 639
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"b", "drbd_bm_resize");
10561,10563c10786,10796
< #line 686
<   if (_b != 0) {
< #line 686
---
> #line 639
>   if (_bool) {
> #line 639
>     tmp = 0;
>   } else {
> #line 639
>     tmp = 1;
>   }
> #line 639
>   if (tmp) {
> #line 640
10568c10801
< #line 688
---
> #line 642
10570c10803
< #line 690
---
> #line 644
10573c10806
< #line 693
---
> #line 647
10575c10808
< #line 694
---
> #line 648
10580c10813
< #line 696
---
> #line 650
10582c10815
< #line 698
---
> #line 652
10584c10817
< #line 699
---
> #line 653
10586c10819
< #line 700
---
> #line 654
10588c10821
< #line 701
---
> #line 655
10590c10823
< #line 702
---
> #line 656
10592c10825
< #line 703
---
> #line 657
10594,10598c10827,10835
< #line 704
<     tmp___2 = 0UL;
< #line 704
<     b->bm_dev_capacity = tmp___2;
< #line 704
---
> #line 658
>     tmp___3 = 0UL;
> #line 658
>     b->bm_dev_capacity = tmp___3;
> #line 658
>     tmp___2 = tmp___3;
> #line 658
>     b->bm_words = tmp___2;
> #line 658
10600,10602c10837,10839
< #line 704
<     b->bm_words = tmp___1;
< #line 704
---
> #line 658
>     b->bm_bits = tmp___1;
> #line 658
10604,10612c10841,10845
< #line 704
<     b->bm_bits = tmp___0;
< #line 704
<     tmp = tmp___0;
< #line 704
<     b->bm_set = tmp;
< #line 704
<     b->bm_number_of_pages = tmp;
< #line 709
---
> #line 658
>     b->bm_set = tmp___0;
> #line 658
>     b->bm_number_of_pages = tmp___0;
> #line 663
10614c10847
< #line 710
---
> #line 664
10616c10849
< #line 711
---
> #line 665
10618c10851
< #line 712
---
> #line 666
10623c10856
< #line 714
---
> #line 668
10625c10858
< #line 721
---
> #line 675
10627,10631c10860,10864
< #line 723
<   tmp___3 = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 723
<   if (tmp___3 != 0) {
< #line 724
---
> #line 677
>   tmp___4 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 677
>   if (tmp___4 != 0) {
> #line 678
10633c10866
< #line 725
---
> #line 679
10635c10868
< #line 726
---
> #line 680
10637c10870
< #line 727
---
> #line 681
10640c10873
< #line 728
---
> #line 682
10643c10876
< #line 729
---
> #line 683
10645c10878
< #line 730
---
> #line 684
10653c10886
< #line 734
---
> #line 688
10655c10888
< #line 735
---
> #line 689
10657c10890
< #line 736
---
> #line 690
10659c10892
< #line 737
---
> #line 691
10661c10894
< #line 737
---
> #line 691
10663,10664c10896,10897
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<               737);
---
>               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared",
>               691);
10668c10901
< #line 738
---
> #line 692
10671,10675c10904,10908
< #line 740
<     tmp___4 = drbd_insert_fault(mdev, 7U);
< #line 740
<     if (tmp___4 != 0) {
< #line 741
---
> #line 694
>     tmp___5 = drbd_insert_fault(mdev, 7U);
> #line 694
>     if (tmp___5 != 0) {
> #line 695
10678c10911
< #line 743
---
> #line 697
10682c10915
< #line 746
---
> #line 700
10684c10917
< #line 747
---
> #line 701
10686c10919
< #line 748
---
> #line 702
10691c10924
< #line 751
---
> #line 705
10693c10926
< #line 752
---
> #line 706
10695c10928
< #line 753
---
> #line 707
10697c10930
< #line 754
---
> #line 708
10699c10932
< #line 756
---
> #line 710
10701c10934
< #line 757
---
> #line 711
10703c10936
< #line 758
---
> #line 712
10708c10941
< #line 760
---
> #line 714
10710c10943
< #line 761
---
> #line 715
10712c10945
< #line 762
---
> #line 716
10714c10947
< #line 763
---
> #line 717
10716c10949
< #line 764
---
> #line 718
10718c10951
< #line 766
---
> #line 720
10720c10953
< #line 767
---
> #line 721
10722c10955
< #line 768
---
> #line 722
10724c10957
< #line 769
---
> #line 723
10727c10960
< #line 771
---
> #line 725
10733c10966
< #line 775
---
> #line 729
10735c10968
< #line 777
---
> #line 731
10740c10973
< #line 780
---
> #line 734
10742c10975
< #line 782
---
> #line 736
10744c10977
< #line 783
---
> #line 737
10746c10979
< #line 784
---
> #line 738
10751c10984
< #line 785
---
> #line 739
10753c10986
< #line 786
---
> #line 740
10758c10991
< #line 787
---
> #line 741
10762c10995
< #line 790
---
> #line 744
10764c10997
< #line 791
---
> #line 745
10768c11001
< #line 802 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 756 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
10774,10776c11007,11011
<   int _b ;
<   int _b___0 ;
<   raw_spinlock_t *tmp ;
---
>   bool _bool ;
>   int tmp ;
>   bool _bool___0 ;
>   int tmp___0 ;
>   raw_spinlock_t *tmp___1 ;
10779c11014
< #line 804
---
> #line 758
10781,10788c11016,11022
< #line 808
<   _b = (unsigned long )b == (unsigned long )((struct drbd_bitmap *)0);
< #line 808
<   if (_b != 0) {
< #line 808
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "_drbd_bm_total_weight", (char *)"!b", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             808);
---
> #line 762
>   _bool = (unsigned long )b != (unsigned long )((struct drbd_bitmap *)0);
> #line 762
>   if (! _bool) {
> #line 762
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"b", "_drbd_bm_total_weight");
10792,10794c11026,11036
< #line 808
<   if (_b != 0) {
< #line 808
---
> #line 762
>   if (_bool) {
> #line 762
>     tmp = 0;
>   } else {
> #line 762
>     tmp = 1;
>   }
> #line 762
>   if (tmp) {
> #line 763
10799,10806c11041,11047
< #line 809
<   _b___0 = (unsigned long )b->bm_pages == (unsigned long )((struct page **)0);
< #line 809
<   if (_b___0 != 0) {
< #line 809
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "_drbd_bm_total_weight", (char *)"!b->bm_pages", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             809);
---
> #line 764
>   _bool___0 = (unsigned long )b->bm_pages != (unsigned long )((struct page **)0);
> #line 764
>   if (! _bool___0) {
> #line 764
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"b->bm_pages", "_drbd_bm_total_weight");
10810,10812c11051,11061
< #line 809
<   if (_b___0 != 0) {
< #line 809
---
> #line 764
>   if (_bool___0) {
> #line 764
>     tmp___0 = 0;
>   } else {
> #line 764
>     tmp___0 = 1;
>   }
> #line 764
>   if (tmp___0) {
> #line 765
10817,10821c11066,11070
< #line 811
<   tmp = spinlock_check(& b->bm_lock);
< #line 811
<   flags = _raw_spin_lock_irqsave(tmp);
< #line 812
---
> #line 767
>   tmp___1 = spinlock_check(& b->bm_lock);
> #line 767
>   flags = _raw_spin_lock_irqsave(tmp___1);
> #line 768
10823c11072
< #line 813
---
> #line 769
10825c11074
< #line 815
---
> #line 771
10829c11078
< #line 818 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 774 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
10836c11085
< #line 822
---
> #line 778
10838c11087
< #line 822
---
> #line 778
10840c11089
< #line 823
---
> #line 779
10845c11094
< #line 824
---
> #line 780
10847c11096
< #line 825
---
> #line 781
10849c11098
< #line 826
---
> #line 782
10853c11102
< #line 829 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 785 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
10857,10858c11106,11109
<   int _b ;
<   int _b___0 ;
---
>   bool _bool ;
>   int tmp ;
>   bool _bool___0 ;
>   int tmp___0 ;
10861c11112
< #line 831
---
> #line 787
10863,10870c11114,11120
< #line 832
<   _b = (unsigned long )b == (unsigned long )((struct drbd_bitmap *)0);
< #line 832
<   if (_b != 0) {
< #line 832
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_bm_words", (char *)"!b", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             832);
---
> #line 788
>   _bool = (unsigned long )b != (unsigned long )((struct drbd_bitmap *)0);
> #line 788
>   if (! _bool) {
> #line 788
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"b", "drbd_bm_words");
10874,10876c11124,11134
< #line 832
<   if (_b != 0) {
< #line 832
---
> #line 788
>   if (_bool) {
> #line 788
>     tmp = 0;
>   } else {
> #line 788
>     tmp = 1;
>   }
> #line 788
>   if (tmp) {
> #line 789
10881,10888c11139,11145
< #line 833
<   _b___0 = (unsigned long )b->bm_pages == (unsigned long )((struct page **)0);
< #line 833
<   if (_b___0 != 0) {
< #line 833
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_bm_words", (char *)"!b->bm_pages", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             833);
---
> #line 790
>   _bool___0 = (unsigned long )b->bm_pages != (unsigned long )((struct page **)0);
> #line 790
>   if (! _bool___0) {
> #line 790
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"b->bm_pages", "drbd_bm_words");
10892,10894c11149,11159
< #line 833
<   if (_b___0 != 0) {
< #line 833
---
> #line 790
>   if (_bool___0) {
> #line 790
>     tmp___0 = 0;
>   } else {
> #line 790
>     tmp___0 = 1;
>   }
> #line 790
>   if (tmp___0) {
> #line 791
10899c11164
< #line 835
---
> #line 793
10903c11168
< #line 838 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 796 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
10907c11172,11173
<   int _b ;
---
>   bool _bool ;
>   int tmp ;
10910c11176
< #line 840
---
> #line 798
10912,10919c11178,11184
< #line 841
<   _b = (unsigned long )b == (unsigned long )((struct drbd_bitmap *)0);
< #line 841
<   if (_b != 0) {
< #line 841
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_bm_bits", (char *)"!b", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             841);
---
> #line 799
>   _bool = (unsigned long )b != (unsigned long )((struct drbd_bitmap *)0);
> #line 799
>   if (! _bool) {
> #line 799
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"b", "drbd_bm_bits");
10923,10925c11188,11198
< #line 841
<   if (_b != 0) {
< #line 841
---
> #line 799
>   if (_bool) {
> #line 799
>     tmp = 0;
>   } else {
> #line 799
>     tmp = 1;
>   }
> #line 799
>   if (tmp) {
> #line 800
10930c11203
< #line 843
---
> #line 802
10934c11207
< #line 851 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 810 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
10945,10946c11218,11221
<   int _b ;
<   int _b___0 ;
---
>   bool _bool ;
>   int tmp ;
>   bool _bool___0 ;
>   int tmp___0 ;
10948c11223
<   long tmp ;
---
>   long tmp___1 ;
10950c11225
<   long tmp___0 ;
---
>   long tmp___2 ;
10953,10957c11228,11232
<   unsigned long *tmp___1 ;
<   unsigned long *tmp___2 ;
<   unsigned long tmp___3 ;
<   size_t tmp___4 ;
<   int tmp___5 ;
---
>   unsigned long *tmp___3 ;
>   unsigned long *tmp___4 ;
>   unsigned long tmp___5 ;
>   size_t tmp___6 ;
>   int tmp___7 ;
10960c11235
< #line 854
---
> #line 813
10962c11237
< #line 860
---
> #line 819
10964,10971c11239,11245
< #line 862
<   _b = (unsigned long )b == (unsigned long )((struct drbd_bitmap *)0);
< #line 862
<   if (_b != 0) {
< #line 862
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_bm_merge_lel", (char *)"!b", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             862);
---
> #line 821
>   _bool = (unsigned long )b != (unsigned long )((struct drbd_bitmap *)0);
> #line 821
>   if (! _bool) {
> #line 821
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"b", "drbd_bm_merge_lel");
10975,10977c11249,11259
< #line 862
<   if (_b != 0) {
< #line 862
---
> #line 821
>   if (_bool) {
> #line 821
>     tmp = 0;
>   } else {
> #line 821
>     tmp = 1;
>   }
> #line 821
>   if (tmp) {
> #line 822
10982,10989c11264,11270
< #line 863
<   _b___0 = (unsigned long )b->bm_pages == (unsigned long )((struct page **)0);
< #line 863
<   if (_b___0 != 0) {
< #line 863
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_bm_merge_lel", (char *)"!b->bm_pages", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             863);
---
> #line 823
>   _bool___0 = (unsigned long )b->bm_pages != (unsigned long )((struct page **)0);
> #line 823
>   if (! _bool___0) {
> #line 823
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"b->bm_pages", "drbd_bm_merge_lel");
10993,10995c11274,11284
< #line 863
<   if (_b___0 != 0) {
< #line 863
---
> #line 823
>   if (_bool___0) {
> #line 823
>     tmp___0 = 0;
>   } else {
> #line 823
>     tmp___0 = 1;
>   }
> #line 823
>   if (tmp___0) {
> #line 824
11000c11289
< #line 864
---
> #line 825
11002c11291
< #line 865
---
> #line 826
11007c11296
< #line 866
---
> #line 827
11009,11015c11298,11304
< #line 866
<   tmp = __builtin_expect(__ret_warn_on != 0, 0L);
< #line 866
<   if (tmp != 0L) {
< #line 866
<     warn_slowpath_null("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<                        866);
---
> #line 827
>   tmp___1 = __builtin_expect(__ret_warn_on != 0, 0L);
> #line 827
>   if (tmp___1 != 0L) {
> #line 827
>     warn_slowpath_null("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared",
>                        827);
11019c11308
< #line 866
---
> #line 827
11021c11310
< #line 867
---
> #line 828
11023,11029c11312,11318
< #line 867
<   tmp___0 = __builtin_expect(__ret_warn_on___0 != 0, 0L);
< #line 867
<   if (tmp___0 != 0L) {
< #line 867
<     warn_slowpath_null("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<                        867);
---
> #line 828
>   tmp___2 = __builtin_expect(__ret_warn_on___0 != 0, 0L);
> #line 828
>   if (tmp___2 != 0L) {
> #line 828
>     warn_slowpath_null("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared",
>                        828);
11033c11322
< #line 867
---
> #line 828
11035c11324
< #line 869
---
> #line 830
11037,11040c11326,11329
< #line 870
<   goto ldv_50789;
<   ldv_50788: 
< #line 871
---
> #line 831
>   goto ldv_51961;
>   ldv_51960: 
> #line 832
11042c11331
< #line 871
---
> #line 832
11044c11333
< #line 871
---
> #line 832
11046c11335
< #line 872
---
> #line 833
11048c11337
< #line 873
---
> #line 834
11050c11339
< #line 874
---
> #line 835
11052c11341
< #line 875
---
> #line 836
11054,11057c11343,11346
< #line 876
<   goto ldv_50786;
<   ldv_50785: 
< #line 877
---
> #line 837
>   goto ldv_51958;
>   ldv_51957: 
> #line 838
11059,11061c11348,11350
< #line 878
<   tmp___1 = buffer;
< #line 878
---
> #line 839
>   tmp___3 = buffer;
> #line 839
11063,11067c11352,11356
< #line 878
<   word = *bm | *tmp___1;
< #line 879
<   tmp___2 = bm;
< #line 879
---
> #line 839
>   word = *bm | *tmp___3;
> #line 840
>   tmp___4 = bm;
> #line 840
11069,11078c11358,11367
< #line 879
<   *tmp___2 = word;
< #line 880
<   tmp___3 = hweight_long(word);
< #line 880
<   b->bm_set = b->bm_set + (tmp___3 - bits);
<   ldv_50786: 
< #line 876
<   tmp___4 = do_now;
< #line 876
---
> #line 840
>   *tmp___4 = word;
> #line 841
>   tmp___5 = hweight_long(word);
> #line 841
>   b->bm_set = b->bm_set + (tmp___5 - bits);
>   ldv_51958: 
> #line 837
>   tmp___6 = do_now;
> #line 837
11080,11083c11369,11372
< #line 876
<   if (tmp___4 != 0UL) {
< #line 877
<     goto ldv_50785;
---
> #line 837
>   if (tmp___6 != 0UL) {
> #line 838
>     goto ldv_51957;
11087c11376
< #line 882
---
> #line 843
11089c11378
< #line 883
---
> #line 844
11091,11092c11380,11381
<   ldv_50789: ;
< #line 870
---
>   ldv_51961: ;
> #line 831
11094,11095c11383,11384
< #line 871
<     goto ldv_50788;
---
> #line 832
>     goto ldv_51960;
11100c11389
< #line 890
---
> #line 851
11102,11105c11391,11394
< #line 891
<     tmp___5 = bm_clear_surplus(b);
< #line 891
<     b->bm_set = b->bm_set - (unsigned long )tmp___5;
---
> #line 852
>     tmp___7 = bm_clear_surplus(b);
> #line 852
>     b->bm_set = b->bm_set - (unsigned long )tmp___7;
11109c11398
< #line 892
---
> #line 853
11111c11400
< #line 893
---
> #line 854
11115c11404
< #line 898 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 859 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
11123,11124c11412,11415
<   int _b ;
<   int _b___0 ;
---
>   bool _bool ;
>   int tmp ;
>   bool _bool___0 ;
>   int tmp___0 ;
11127,11130c11418,11421
<   unsigned int tmp ;
<   unsigned long *tmp___0 ;
<   unsigned long *tmp___1 ;
<   size_t tmp___2 ;
---
>   unsigned int tmp___1 ;
>   unsigned long *tmp___2 ;
>   unsigned long *tmp___3 ;
>   size_t tmp___4 ;
11133c11424
< #line 901
---
> #line 862
11135c11426
< #line 905
---
> #line 866
11137,11144c11428,11434
< #line 907
<   _b = (unsigned long )b == (unsigned long )((struct drbd_bitmap *)0);
< #line 907
<   if (_b != 0) {
< #line 907
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_bm_get_lel", (char *)"!b", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             907);
---
> #line 868
>   _bool = (unsigned long )b != (unsigned long )((struct drbd_bitmap *)0);
> #line 868
>   if (! _bool) {
> #line 868
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"b", "drbd_bm_get_lel");
11148,11150c11438,11448
< #line 907
<   if (_b != 0) {
< #line 907
---
> #line 868
>   if (_bool) {
> #line 868
>     tmp = 0;
>   } else {
> #line 868
>     tmp = 1;
>   }
> #line 868
>   if (tmp) {
> #line 869
11155,11162c11453,11459
< #line 908
<   _b___0 = (unsigned long )b->bm_pages == (unsigned long )((struct page **)0);
< #line 908
<   if (_b___0 != 0) {
< #line 908
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_bm_get_lel", (char *)"!b->bm_pages", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             908);
---
> #line 870
>   _bool___0 = (unsigned long )b->bm_pages != (unsigned long )((struct page **)0);
> #line 870
>   if (! _bool___0) {
> #line 870
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"b->bm_pages", "drbd_bm_get_lel");
11166,11168c11463,11473
< #line 908
<   if (_b___0 != 0) {
< #line 908
---
> #line 870
>   if (_bool___0) {
> #line 870
>     tmp___0 = 0;
>   } else {
> #line 870
>     tmp___0 = 1;
>   }
> #line 870
>   if (tmp___0) {
> #line 871
11173c11478
< #line 910
---
> #line 873
11175c11480
< #line 911
---
> #line 874
11177c11482
< #line 914
---
> #line 877
11181,11184c11486,11489
< #line 919
<     goto ldv_50814;
<     ldv_50813: 
< #line 920
---
> #line 882
>     goto ldv_51986;
>     ldv_51985: 
> #line 883
11186c11491
< #line 920
---
> #line 883
11188c11493
< #line 920
---
> #line 883
11190,11194c11495,11499
< #line 921
<     tmp = bm_word_to_page_idx(b, offset);
< #line 921
<     p_addr = bm_map_pidx(b, tmp);
< #line 922
---
> #line 884
>     tmp___1 = bm_word_to_page_idx(b, offset);
> #line 884
>     p_addr = bm_map_pidx(b, tmp___1);
> #line 885
11196c11501
< #line 923
---
> #line 886
11198,11203c11503,11508
< #line 924
<     goto ldv_50811;
<     ldv_50810: 
< #line 925
<     tmp___0 = buffer;
< #line 925
---
> #line 887
>     goto ldv_51983;
>     ldv_51982: 
> #line 888
>     tmp___2 = buffer;
> #line 888
11205,11207c11510,11512
< #line 925
<     tmp___1 = bm;
< #line 925
---
> #line 888
>     tmp___3 = bm;
> #line 888
11209,11214c11514,11519
< #line 925
<     *tmp___0 = *tmp___1;
<     ldv_50811: 
< #line 924
<     tmp___2 = do_now;
< #line 924
---
> #line 888
>     *tmp___2 = *tmp___3;
>     ldv_51983: 
> #line 887
>     tmp___4 = do_now;
> #line 887
11216,11219c11521,11524
< #line 924
<     if (tmp___2 != 0UL) {
< #line 925
<       goto ldv_50810;
---
> #line 887
>     if (tmp___4 != 0UL) {
> #line 888
>       goto ldv_51982;
11223c11528
< #line 926
---
> #line 889
11225,11226c11530,11531
<     ldv_50814: ;
< #line 919
---
>     ldv_51986: ;
> #line 882
11228,11229c11533,11534
< #line 920
<       goto ldv_50813;
---
> #line 883
>       goto ldv_51985;
11235c11540
< #line 929
---
> #line 892
11237c11542
< #line 930
---
> #line 893
11241c11546
< #line 933 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 896 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
11245,11246c11550,11553
<   int _b ;
<   int _b___0 ;
---
>   bool _bool ;
>   int tmp ;
>   bool _bool___0 ;
>   int tmp___0 ;
11249c11556
< #line 935
---
> #line 898
11251,11258c11558,11564
< #line 936
<   _b = (unsigned long )b == (unsigned long )((struct drbd_bitmap *)0);
< #line 936
<   if (_b != 0) {
< #line 936
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_bm_set_all", (char *)"!b", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             936);
---
> #line 899
>   _bool = (unsigned long )b != (unsigned long )((struct drbd_bitmap *)0);
> #line 899
>   if (! _bool) {
> #line 899
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"b", "drbd_bm_set_all");
11262,11264c11568,11578
< #line 936
<   if (_b != 0) {
< #line 936
---
> #line 899
>   if (_bool) {
> #line 899
>     tmp = 0;
>   } else {
> #line 899
>     tmp = 1;
>   }
> #line 899
>   if (tmp) {
> #line 900
11269,11276c11583,11589
< #line 937
<   _b___0 = (unsigned long )b->bm_pages == (unsigned long )((struct page **)0);
< #line 937
<   if (_b___0 != 0) {
< #line 937
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_bm_set_all", (char *)"!b->bm_pages", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             937);
---
> #line 901
>   _bool___0 = (unsigned long )b->bm_pages != (unsigned long )((struct page **)0);
> #line 901
>   if (! _bool___0) {
> #line 901
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"b->bm_pages", "drbd_bm_set_all");
11280,11282c11593,11603
< #line 937
<   if (_b___0 != 0) {
< #line 937
---
> #line 901
>   if (_bool___0) {
> #line 901
>     tmp___0 = 0;
>   } else {
> #line 901
>     tmp___0 = 1;
>   }
> #line 901
>   if (tmp___0) {
> #line 902
11287c11608
< #line 939
---
> #line 904
11289c11610
< #line 940
---
> #line 905
11291c11612
< #line 941
---
> #line 906
11293c11614
< #line 942
---
> #line 907
11295c11616
< #line 943
---
> #line 908
11297c11618
< #line 944
---
> #line 909
11301c11622
< #line 947 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 912 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
11305,11306c11626,11629
<   int _b ;
<   int _b___0 ;
---
>   bool _bool ;
>   int tmp ;
>   bool _bool___0 ;
>   int tmp___0 ;
11309c11632
< #line 949
---
> #line 914
11311,11318c11634,11640
< #line 950
<   _b = (unsigned long )b == (unsigned long )((struct drbd_bitmap *)0);
< #line 950
<   if (_b != 0) {
< #line 950
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_bm_clear_all", (char *)"!b", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             950);
---
> #line 915
>   _bool = (unsigned long )b != (unsigned long )((struct drbd_bitmap *)0);
> #line 915
>   if (! _bool) {
> #line 915
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"b", "drbd_bm_clear_all");
11322,11324c11644,11654
< #line 950
<   if (_b != 0) {
< #line 950
---
> #line 915
>   if (_bool) {
> #line 915
>     tmp = 0;
>   } else {
> #line 915
>     tmp = 1;
>   }
> #line 915
>   if (tmp) {
> #line 916
11329,11336c11659,11665
< #line 951
<   _b___0 = (unsigned long )b->bm_pages == (unsigned long )((struct page **)0);
< #line 951
<   if (_b___0 != 0) {
< #line 951
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_bm_clear_all", (char *)"!b->bm_pages", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             951);
---
> #line 917
>   _bool___0 = (unsigned long )b->bm_pages != (unsigned long )((struct page **)0);
> #line 917
>   if (! _bool___0) {
> #line 917
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"b->bm_pages", "drbd_bm_clear_all");
11340,11342c11669,11679
< #line 951
<   if (_b___0 != 0) {
< #line 951
---
> #line 917
>   if (_bool___0) {
> #line 917
>     tmp___0 = 0;
>   } else {
> #line 917
>     tmp___0 = 1;
>   }
> #line 917
>   if (tmp___0) {
> #line 918
11347c11684
< #line 953
---
> #line 920
11349c11686
< #line 954
---
> #line 921
11351c11688
< #line 955
---
> #line 922
11353c11690
< #line 956
---
> #line 923
11355c11692
< #line 957
---
> #line 924
11359c11696
< #line 970 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 938 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
11366c11703
< #line 972
---
> #line 940
11368c11705
< #line 972
---
> #line 940
11370c11707
< #line 974
---
> #line 942
11372c11709
< #line 975
---
> #line 943
11374c11711
< #line 976
---
> #line 944
11378c11715
< #line 979 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 947 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
11394c11731
< #line 981
---
> #line 949
11396c11733
< #line 982
---
> #line 950
11398c11735
< #line 983
---
> #line 951
11400c11737
< #line 984
---
> #line 952
11402c11739
< #line 984
---
> #line 952
11404c11741
< #line 985
---
> #line 953
11406c11743
< #line 992
---
> #line 960
11408c11745
< #line 993
---
> #line 961
11413c11750
< #line 995
---
> #line 963
11415c11752
< #line 995
---
> #line 963
11417c11754
< #line 995
---
> #line 963
11419c11756
< #line 997
---
> #line 965
11428c11765
< #line 999
---
> #line 967
11430c11767
< #line 1002
---
> #line 970
11432c11769
< #line 1003
---
> #line 971
11434c11771
< #line 1006
---
> #line 974
11436c11773
< #line 1006
---
> #line 974
11438c11775
< #line 1007
---
> #line 975
11445c11782
< #line 1010
---
> #line 978
11447c11784
< #line 1011
---
> #line 979
11449c11786
< #line 1011
---
> #line 979
11451,11453c11788,11790
< #line 1011
<     descriptor.filename = "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared";
< #line 1011
---
> #line 979
>     descriptor.filename = "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared";
> #line 979
11455,11457c11792,11794
< #line 1011
<     descriptor.lineno = 1011U;
< #line 1011
---
> #line 979
>     descriptor.lineno = 979U;
> #line 979
11459c11796
< #line 1011
---
> #line 979
11461c11798
< #line 1011
---
> #line 979
11463c11800
< #line 1011
---
> #line 979
11470c11807
< #line 1014
---
> #line 982
11472c11809
< #line 1016
---
> #line 984
11474c11811
< #line 1017
---
> #line 985
11479c11816
< #line 1019
---
> #line 987
11481c11818
< #line 1021
---
> #line 989
11483c11820
< #line 1021
---
> #line 989
11485c11822
< #line 1022
---
> #line 990
11487c11824
< #line 1023
---
> #line 991
11489c11826
< #line 1024
---
> #line 992
11494c11831
< #line 1026
---
> #line 994
11498c11835
< #line 1028 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 996 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
11519c11856
< #line 1030
---
> #line 998
11521c11858
< #line 1030
---
> #line 998
11523c11860
< #line 1031
---
> #line 999
11525c11862
< #line 1032
---
> #line 1000
11527c11864
< #line 1036
---
> #line 1004
11529c11866
< #line 1038
---
> #line 1006
11531c11868
< #line 1043
---
> #line 1011
11533c11870
< #line 1043
---
> #line 1011
11535c11872
< #line 1043
---
> #line 1011
11537c11874
< #line 1043
---
> #line 1011
11539c11876
< #line 1047
---
> #line 1015
11541c11878
< #line 1050
---
> #line 1018
11543c11880
< #line 1052
---
> #line 1020
11545c11882
< #line 1054
---
> #line 1022
11547c11884
< #line 1054
---
> #line 1022
11549c11886
< #line 1055
---
> #line 1023
11551c11888
< #line 1056
---
> #line 1024
11553c11890
< #line 1057
---
> #line 1025
11555c11892
< #line 1057
---
> #line 1025
11557c11894
< #line 1057
---
> #line 1025
11560c11897
< #line 1057
---
> #line 1025
11563c11900
< #line 1058
---
> #line 1026
11565c11902
< #line 1059
---
> #line 1027
11567c11904
< #line 1060
---
> #line 1028
11570c11907
< #line 1062
---
> #line 1030
11573c11910
< #line 1064
---
> #line 1032
11575c11912
< #line 1065
---
> #line 1033
11577c11914
< #line 1068
---
> #line 1036
11579c11916
< #line 1069
---
> #line 1037
11581c11918
< #line 1070
---
> #line 1038
11583c11920
< #line 1072
---
> #line 1040
11585c11922
< #line 1072
---
> #line 1040
11587c11924
< #line 1073
---
> #line 1041
11589c11926
< #line 1074
---
> #line 1042
11592c11929
< #line 1076
---
> #line 1044
11594c11931
< #line 1079
---
> #line 1047
11597c11934
< #line 1081
---
> #line 1049
11601c11938
< #line 1086 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1054 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
11616a11954
>   int tmp___2 ;
11618,11619c11956,11957
<   long tmp___2 ;
<   int tmp___3 ;
---
>   long tmp___3 ;
>   int tmp___4 ;
11621,11622c11959
<   long tmp___4 ;
<   int tmp___5 ;
---
>   long tmp___5 ;
11625c11962,11963
<   char *tmp___8 ;
---
>   int tmp___8 ;
>   char *tmp___9 ;
11628c11966
< #line 1089
---
> #line 1057
11630c11968
< #line 1090
---
> #line 1058
11632c11970
< #line 1093
---
> #line 1061
11634c11972
< #line 1104
---
> #line 1072
11636c11974
< #line 1104
---
> #line 1072
11638c11976
< #line 1105
---
> #line 1073
11640c11978
< #line 1106
---
> #line 1074
11645c11983
< #line 1108
---
> #line 1076
11647c11985
< #line 1108
---
> #line 1076
11649c11987
< #line 1108
---
> #line 1076
11651c11989
< #line 1108
---
> #line 1076
11653c11991
< #line 1108
---
> #line 1076
11655c11993
< #line 1108
---
> #line 1076
11657c11995
< #line 1108
---
> #line 1076
11659c11997
< #line 1117
---
> #line 1085
11661c11999
< #line 1117
---
> #line 1085
11663c12001
< #line 1118
---
> #line 1086
11665c12003
< #line 1119
---
> #line 1087
11667c12005
< #line 1120
---
> #line 1088
11672c12010
< #line 1123
---
> #line 1091
11674c12012
< #line 1124
---
> #line 1092
11676c12014
< #line 1124
---
> #line 1092
11678c12016
< #line 1124
---
> #line 1092
11680,11682c12018,12020
< #line 1124
<       warn_slowpath_null("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<                          1124);
---
> #line 1092
>       warn_slowpath_null("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared",
>                          1092);
11686c12024
< #line 1124
---
> #line 1092
11691c12029
< #line 1126
---
> #line 1094
11693c12031
< #line 1128
---
> #line 1096
11695c12033
< #line 1131
---
> #line 1099
11697,11700c12035,12038
< #line 1131
<   goto ldv_50901;
<   ldv_50900: ;
< #line 1133
---
> #line 1099
>   goto ldv_52073;
>   ldv_52072: ;
> #line 1101
11702,11703c12040,12041
< #line 1134
<     goto ldv_50894;
---
> #line 1102
>     goto ldv_52066;
11707c12045
< #line 1135
---
> #line 1103
11709,11715c12047,12067
< #line 1136
<     if ((flags & 2U) == 0U) {
< #line 1136
<       tmp___3 = bm_test_page_unchanged(*(b->bm_pages + (unsigned long )i));
< #line 1136
<       if (tmp___3 != 0) {
< #line 1138
---
> #line 1104
>     if ((flags & 2U) != 0U) {
> #line 1104
>       tmp___2 = test_and_clear_bit(27, (unsigned long volatile   *)(& (*(b->bm_pages + (unsigned long )i))->ldv_16348.private));
> #line 1104
>       if (tmp___2 == 0) {
> #line 1107
>         goto ldv_52067;
>       } else {
> 
>       }
>     } else {
> 
>     }
> #line 1109
>     if ((flags & 4U) == 0U) {
> #line 1109
>       tmp___4 = bm_test_page_unchanged(*(b->bm_pages + (unsigned long )i));
> #line 1109
>       if (tmp___4 != 0) {
> #line 1111
11717c12069
< #line 1138
---
> #line 1111
11719,11721c12071,12073
< #line 1138
<         descriptor.filename = "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared";
< #line 1138
---
> #line 1111
>         descriptor.filename = "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared";
> #line 1111
11723,11725c12075,12077
< #line 1138
<         descriptor.lineno = 1138U;
< #line 1138
---
> #line 1111
>         descriptor.lineno = 1111U;
> #line 1111
11727,11731c12079,12083
< #line 1138
<         tmp___2 = __builtin_expect((long )descriptor.flags & 1L, 0L);
< #line 1138
<         if (tmp___2 != 0L) {
< #line 1138
---
> #line 1111
>         tmp___3 = __builtin_expect((long )descriptor.flags & 1L, 0L);
> #line 1111
>         if (tmp___3 != 0L) {
> #line 1111
11737,11738c12089,12090
< #line 1139
<         goto ldv_50897;
---
> #line 1112
>         goto ldv_52067;
11745c12097
< #line 1143
---
> #line 1116
11747,11751c12099,12103
< #line 1143
<       tmp___5 = bm_test_page_lazy_writeout(*(b->bm_pages + (unsigned long )i));
< #line 1143
<       if (tmp___5 == 0) {
< #line 1145
---
> #line 1116
>       tmp___6 = bm_test_page_lazy_writeout(*(b->bm_pages + (unsigned long )i));
> #line 1116
>       if (tmp___6 == 0) {
> #line 1118
11753c12105
< #line 1145
---
> #line 1118
11755,11757c12107,12109
< #line 1145
<         descriptor___0.filename = "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared";
< #line 1145
---
> #line 1118
>         descriptor___0.filename = "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared";
> #line 1118
11759,11761c12111,12113
< #line 1145
<         descriptor___0.lineno = 1145U;
< #line 1145
---
> #line 1118
>         descriptor___0.lineno = 1118U;
> #line 1118
11763,11767c12115,12119
< #line 1145
<         tmp___4 = __builtin_expect((long )descriptor___0.flags & 1L, 0L);
< #line 1145
<         if (tmp___4 != 0L) {
< #line 1145
---
> #line 1118
>         tmp___5 = __builtin_expect((long )descriptor___0.flags & 1L, 0L);
> #line 1118
>         if (tmp___5 != 0L) {
> #line 1118
11773,11774c12125,12126
< #line 1146
<         goto ldv_50897;
---
> #line 1119
>         goto ldv_52067;
11784c12136
< #line 1149
---
> #line 1122
11786c12138
< #line 1150
---
> #line 1123
11788c12140
< #line 1151
---
> #line 1124
11790,11793c12142,12145
< #line 1152
<   __might_sleep("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<                 1152, 0);
< #line 1152
---
> #line 1125
>   __might_sleep("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared",
>                 1125, 0);
> #line 1125
11795,11796c12147,12148
<   ldv_50897: 
< #line 1131
---
>   ldv_52067: 
> #line 1099
11798,11799c12150,12151
<   ldv_50901: ;
< #line 1131
---
>   ldv_52073: ;
> #line 1099
11801,11802c12153,12154
< #line 1132
<     goto ldv_50900;
---
> #line 1100
>     goto ldv_52072;
11806,11811c12158,12163
<   ldv_50894: 
< #line 1163
<   tmp___6 = atomic_dec_and_test(& ctx->in_flight);
< #line 1163
<   if (tmp___6 == 0) {
< #line 1164
---
>   ldv_52066: 
> #line 1136
>   tmp___7 = atomic_dec_and_test(& ctx->in_flight);
> #line 1136
>   if (tmp___7 == 0) {
> #line 1137
11814c12166
< #line 1166
---
> #line 1139
11817,11820c12169,12177
< #line 1168
<   _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "bitmap %s of %u pages took %lu jiffies\n",
<             rw == 1 ? (char *)"WRITE" : (char *)"READ", count, (unsigned long )jiffies - now);
< #line 1172
---
> #line 1142
>   if (flags == 0U) {
> #line 1143
>     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "bitmap %s of %u pages took %lu jiffies\n",
>               rw == 1 ? (char *)"WRITE" : (char *)"READ", count, (unsigned long )jiffies - now);
>   } else {
> 
>   }
> #line 1147
11822c12179
< #line 1173
---
> #line 1148
11824c12181
< #line 1174
---
> #line 1149
11826c12183
< #line 1175
---
> #line 1150
11831,11835c12188,12192
< #line 1178
<   tmp___7 = atomic_read((atomic_t const   *)(& ctx->in_flight));
< #line 1178
<   if (tmp___7 != 0) {
< #line 1179
---
> #line 1153
>   tmp___8 = atomic_read((atomic_t const   *)(& ctx->in_flight));
> #line 1153
>   if (tmp___8 != 0) {
> #line 1154
11840c12197
< #line 1181
---
> #line 1156
11842c12199
< #line 1182
---
> #line 1157
11844c12201
< #line 1183
---
> #line 1158
11847c12204
< #line 1185
---
> #line 1160
11849c12206
< #line 1186
---
> #line 1161
11853c12210
< #line 1189
---
> #line 1164
11855,11860c12212,12222
< #line 1191
<   tmp___8 = ppsize((char *)(& ppb), (unsigned long long )(now << 2));
< #line 1191
<   _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "%s (%lu bits) marked out-of-sync by on disk bit-map.\n",
<             tmp___8, now);
< #line 1194
---
> #line 1166
>   if (flags == 0U) {
> #line 1167
>     tmp___9 = ppsize((char *)(& ppb), (unsigned long long )(now << 2));
> #line 1167
>     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "%s (%lu bits) marked out-of-sync by on disk bit-map.\n",
>               tmp___9, now);
>   } else {
> 
>   }
> #line 1170
11862c12224
< #line 1195
---
> #line 1171
11866c12228
< #line 1202 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1178 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
11872c12234
< #line 1204
---
> #line 1180
11874c12236
< #line 1204
---
> #line 1180
11878c12240
< #line 1213 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1189 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
11884c12246
< #line 1215
---
> #line 1191
11886c12248
< #line 1215
---
> #line 1191
11890c12252
< #line 1224 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1200 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
11896,11898c12258,12260
< #line 1226
<   tmp = bm_rw(mdev, 1, 2U, 0U);
< #line 1226
---
> #line 1202
>   tmp = bm_rw(mdev, 1, 4U, 0U);
> #line 1202
11902c12264
< #line 1234 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1210 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
11908c12270
< #line 1236
---
> #line 1212
11910c12272
< #line 1236
---
> #line 1212
11914c12276
< #line 1250 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1226 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
11920c12282
< #line 1252
---
> #line 1228
11922c12284,12296
< #line 1252
---
> #line 1228
>   return (tmp);
> }
> }
> #line 1235 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
> int drbd_bm_write_hinted(struct drbd_conf *mdev ) 
> { 
>   int tmp ;
> 
>   {
> #line 1237
>   tmp = bm_rw(mdev, 1, 3U, 0U);
> #line 1237
11926c12300
< #line 1268 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1252 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
11940c12314
< #line 1273
---
> #line 1257
11942c12316
< #line 1273
---
> #line 1257
11944c12318
< #line 1274
---
> #line 1258
11946c12320
< #line 1274
---
> #line 1258
11948,11950c12322,12324
< #line 1274
<     descriptor.filename = "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared";
< #line 1274
---
> #line 1258
>     descriptor.filename = "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared";
> #line 1258
11952,11954c12326,12328
< #line 1274
<     descriptor.lineno = 1274U;
< #line 1274
---
> #line 1258
>     descriptor.lineno = 1258U;
> #line 1258
11956c12330
< #line 1274
---
> #line 1258
11958c12332
< #line 1274
---
> #line 1258
11960c12334
< #line 1274
---
> #line 1258
11966c12340
< #line 1275
---
> #line 1259
11971c12345
< #line 1278
---
> #line 1262
11973c12347
< #line 1278
---
> #line 1262
11975c12349
< #line 1279
---
> #line 1263
11977c12351
< #line 1280
---
> #line 1264
11982c12356
< #line 1282
---
> #line 1266
11984c12358
< #line 1282
---
> #line 1266
11986c12360
< #line 1282
---
> #line 1266
11988c12362
< #line 1282
---
> #line 1266
11990c12364
< #line 1282
---
> #line 1266
11992c12366
< #line 1282
---
> #line 1266
11994c12368
< #line 1282
---
> #line 1266
11996c12370
< #line 1291
---
> #line 1275
11998c12372
< #line 1291
---
> #line 1275
12000c12374
< #line 1292
---
> #line 1276
12002c12376
< #line 1293
---
> #line 1277
12004c12378
< #line 1294
---
> #line 1278
12009c12383
< #line 1297
---
> #line 1281
12011c12385
< #line 1298
---
> #line 1282
12013c12387
< #line 1300
---
> #line 1284
12015c12389
< #line 1301
---
> #line 1285
12020c12394
< #line 1305
---
> #line 1289
12022c12396
< #line 1306
---
> #line 1290
12024c12398
< #line 1306
---
> #line 1290
12026c12400
< #line 1307
---
> #line 1291
12028c12402
< #line 1308
---
> #line 1292
12032c12406
< #line 1319 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1303 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
12045c12419
< #line 1322
---
> #line 1306
12047c12421
< #line 1328
---
> #line 1312
12049c12423
< #line 1329
---
> #line 1313
12052c12426
< #line 1330
---
> #line 1314
12055,12058c12429,12432
< #line 1332
<     goto ldv_50939;
<     ldv_50938: 
< #line 1334
---
> #line 1316
>     goto ldv_52114;
>     ldv_52113: 
> #line 1318
12060c12434
< #line 1335
---
> #line 1319
12062c12436
< #line 1335
---
> #line 1319
12064c12438
< #line 1337
---
> #line 1321
12066c12440
< #line 1338
---
> #line 1322
12068c12442
< #line 1338
---
> #line 1322
12071c12445
< #line 1341
---
> #line 1325
12073c12447
< #line 1341
---
> #line 1325
12076c12450
< #line 1344
---
> #line 1328
12078c12452
< #line 1345
---
> #line 1329
12080c12454
< #line 1346
---
> #line 1330
12082c12456
< #line 1347
---
> #line 1331
12084,12085c12458,12459
< #line 1348
<         goto ldv_50936;
---
> #line 1332
>         goto ldv_52111;
12089c12463
< #line 1349
---
> #line 1333
12094c12468
< #line 1351
---
> #line 1335
12096,12097c12470,12471
<     ldv_50939: ;
< #line 1332
---
>     ldv_52114: ;
> #line 1316
12099,12100c12473,12474
< #line 1333
<       goto ldv_50938;
---
> #line 1317
>       goto ldv_52113;
12104,12105c12478,12479
<     ldv_50936: 
< #line 1353
---
>     ldv_52111: 
> #line 1337
12109c12483
< #line 1356
---
> #line 1340
12113c12487
< #line 1359 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1343 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
12118,12119c12492,12495
<   int _b ;
<   int _b___0 ;
---
>   bool _bool ;
>   int tmp ;
>   bool _bool___0 ;
>   int tmp___0 ;
12122c12498
< #line 1362
---
> #line 1346
12124c12500
< #line 1363
---
> #line 1347
12126,12133c12502,12508
< #line 1365
<   _b = (unsigned long )b == (unsigned long )((struct drbd_bitmap *)0);
< #line 1365
<   if (_b != 0) {
< #line 1365
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "bm_find_next", (char *)"!b", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             1365);
---
> #line 1349
>   _bool = (unsigned long )b != (unsigned long )((struct drbd_bitmap *)0);
> #line 1349
>   if (! _bool) {
> #line 1349
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"b", "bm_find_next");
12137,12139c12512,12522
< #line 1365
<   if (_b != 0) {
< #line 1365
---
> #line 1349
>   if (_bool) {
> #line 1349
>     tmp = 0;
>   } else {
> #line 1349
>     tmp = 1;
>   }
> #line 1349
>   if (tmp) {
> #line 1350
12144,12151c12527,12533
< #line 1366
<   _b___0 = (unsigned long )b->bm_pages == (unsigned long )((struct page **)0);
< #line 1366
<   if (_b___0 != 0) {
< #line 1366
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "bm_find_next", (char *)"!b->bm_pages", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             1366);
---
> #line 1351
>   _bool___0 = (unsigned long )b->bm_pages != (unsigned long )((struct page **)0);
> #line 1351
>   if (! _bool___0) {
> #line 1351
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"b->bm_pages", "bm_find_next");
12155,12157c12537,12547
< #line 1366
<   if (_b___0 != 0) {
< #line 1366
---
> #line 1351
>   if (_bool___0) {
> #line 1351
>     tmp___0 = 0;
>   } else {
> #line 1351
>     tmp___0 = 1;
>   }
> #line 1351
>   if (tmp___0) {
> #line 1352
12162c12552
< #line 1368
---
> #line 1354
12164c12554
< #line 1369
---
> #line 1355
12166c12556
< #line 1370
---
> #line 1356
12171c12561
< #line 1372
---
> #line 1358
12173c12563
< #line 1374
---
> #line 1360
12175c12565
< #line 1375
---
> #line 1361
12179c12569
< #line 1378 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1364 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
12185c12575
< #line 1380
---
> #line 1366
12187c12577
< #line 1380
---
> #line 1366
12191c12581
< #line 1393 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1379 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
12197c12587
< #line 1396
---
> #line 1382
12199c12589
< #line 1396
---
> #line 1382
12203c12593
< #line 1399 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1385 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
12209c12599
< #line 1402
---
> #line 1388
12211c12601
< #line 1402
---
> #line 1388
12215c12605
< #line 1411 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1397 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
12231c12621
< #line 1414
---
> #line 1400
12233c12623
< #line 1415
---
> #line 1401
12235c12625
< #line 1417
---
> #line 1403
12237c12627
< #line 1418
---
> #line 1404
12239c12629
< #line 1419
---
> #line 1405
12241c12631
< #line 1421
---
> #line 1407
12243c12633
< #line 1422
---
> #line 1408
12246c12636
< #line 1424
---
> #line 1410
12251c12641
< #line 1426
---
> #line 1412
12253,12256c12643,12646
< #line 1426
<   goto ldv_50978;
<   ldv_50977: 
< #line 1427
---
> #line 1412
>   goto ldv_52153;
>   ldv_52152: 
> #line 1413
12258c12648
< #line 1427
---
> #line 1413
12260c12650
< #line 1428
---
> #line 1414
12262c12652
< #line 1429
---
> #line 1415
12264c12654
< #line 1430
---
> #line 1416
12269c12659
< #line 1431
---
> #line 1417
12271c12661
< #line 1432
---
> #line 1418
12274c12664
< #line 1433
---
> #line 1419
12276c12666
< #line 1434
---
> #line 1420
12281c12671
< #line 1435
---
> #line 1421
12283c12673
< #line 1436
---
> #line 1422
12285c12675
< #line 1437
---
> #line 1423
12287c12677
< #line 1438
---
> #line 1424
12292c12682
< #line 1440
---
> #line 1426
12294c12684
< #line 1441
---
> #line 1427
12296c12686
< #line 1441
---
> #line 1427
12299c12689
< #line 1443
---
> #line 1429
12301c12691
< #line 1443
---
> #line 1429
12304c12694
< #line 1426
---
> #line 1412
12306,12307c12696,12697
<   ldv_50978: ;
< #line 1426
---
>   ldv_52153: ;
> #line 1412
12309,12310c12699,12700
< #line 1427
<     goto ldv_50977;
---
> #line 1413
>     goto ldv_52152;
12315c12705
< #line 1445
---
> #line 1431
12317c12707
< #line 1446
---
> #line 1432
12322c12712
< #line 1447
---
> #line 1433
12324c12714
< #line 1448
---
> #line 1434
12327c12717
< #line 1449
---
> #line 1435
12329c12719
< #line 1450
---
> #line 1436
12334c12724
< #line 1451
---
> #line 1437
12336c12726
< #line 1452
---
> #line 1438
12338c12728
< #line 1453
---
> #line 1439
12342c12732
< #line 1460 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1446 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
12349,12351c12739,12743
<   int _b ;
<   int _b___0 ;
<   raw_spinlock_t *tmp ;
---
>   bool _bool ;
>   int tmp ;
>   bool _bool___0 ;
>   int tmp___0 ;
>   raw_spinlock_t *tmp___1 ;
12354c12746
< #line 1464
---
> #line 1450
12356c12748
< #line 1465
---
> #line 1451
12358,12365c12750,12756
< #line 1467
<   _b = (unsigned long )b == (unsigned long )((struct drbd_bitmap *)0);
< #line 1467
<   if (_b != 0) {
< #line 1467
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "bm_change_bits_to", (char *)"!b", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             1467);
---
> #line 1453
>   _bool = (unsigned long )b != (unsigned long )((struct drbd_bitmap *)0);
> #line 1453
>   if (! _bool) {
> #line 1453
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"b", "bm_change_bits_to");
12369,12371c12760,12770
< #line 1467
<   if (_b != 0) {
< #line 1467
---
> #line 1453
>   if (_bool) {
> #line 1453
>     tmp = 0;
>   } else {
> #line 1453
>     tmp = 1;
>   }
> #line 1453
>   if (tmp) {
> #line 1454
12376,12383c12775,12781
< #line 1468
<   _b___0 = (unsigned long )b->bm_pages == (unsigned long )((struct page **)0);
< #line 1468
<   if (_b___0 != 0) {
< #line 1468
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "bm_change_bits_to", (char *)"!b->bm_pages", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             1468);
---
> #line 1455
>   _bool___0 = (unsigned long )b->bm_pages != (unsigned long )((struct page **)0);
> #line 1455
>   if (! _bool___0) {
> #line 1455
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"b->bm_pages", "bm_change_bits_to");
12387,12389c12785,12795
< #line 1468
<   if (_b___0 != 0) {
< #line 1468
---
> #line 1455
>   if (_bool___0) {
> #line 1455
>     tmp___0 = 0;
>   } else {
> #line 1455
>     tmp___0 = 1;
>   }
> #line 1455
>   if (tmp___0) {
> #line 1456
12394,12398c12800,12804
< #line 1470
<   tmp = spinlock_check(& b->bm_lock);
< #line 1470
<   flags = _raw_spin_lock_irqsave(tmp);
< #line 1471
---
> #line 1458
>   tmp___1 = spinlock_check(& b->bm_lock);
> #line 1458
>   flags = _raw_spin_lock_irqsave(tmp___1);
> #line 1459
12400c12806
< #line 1472
---
> #line 1460
12405c12811
< #line 1474
---
> #line 1462
12407c12813
< #line 1476
---
> #line 1464
12409c12815
< #line 1477
---
> #line 1465
12413c12819
< #line 1481 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1469 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
12419c12825
< #line 1483
---
> #line 1471
12421c12827
< #line 1483
---
> #line 1471
12425c12831
< #line 1487 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1475 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
12431c12837
< #line 1489
---
> #line 1477
12433c12839
< #line 1489
---
> #line 1477
12437c12843
< #line 1494 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1482 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
12442a12849
>   int changed ;
12448c12855,12857
< #line 1499
---
> #line 1487
>   changed = 0;
> #line 1488
12450c12859
< #line 1499
---
> #line 1488
12452c12861
< #line 1500
---
> #line 1489
12454,12457c12863,12866
< #line 1500
<   goto ldv_51017;
<   ldv_51016: 
< #line 1501
---
> #line 1489
>   goto ldv_52193;
>   ldv_52192: 
> #line 1490
12459c12868
< #line 1501
---
> #line 1490
12461c12870
< #line 1502
---
> #line 1491
12463,12465c12872,12874
< #line 1503
<   b->bm_set = b->bm_set + (unsigned long )(64 - bits);
< #line 1500
---
> #line 1492
>   changed = (64 - bits) + changed;
> #line 1489
12467,12468c12876,12877
<   ldv_51017: ;
< #line 1500
---
>   ldv_52193: ;
> #line 1489
12470,12471c12879,12880
< #line 1501
<     goto ldv_51016;
---
> #line 1490
>     goto ldv_52192;
12475c12884
< #line 1505
---
> #line 1494
12477c12886,12895
< #line 1506
---
> #line 1495
>   if (changed != 0) {
> #line 1499
>     bm_set_page_lazy_writeout(*(b->bm_pages + (unsigned long )page_nr));
> #line 1500
>     b->bm_set = b->bm_set + (unsigned long )changed;
>   } else {
> 
>   }
> #line 1502
12481c12899
< #line 1513 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1509 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
12494c12912
< #line 1523
---
> #line 1519
12496c12914
< #line 1524
---
> #line 1520
12498c12916
< #line 1525
---
> #line 1521
12500c12918
< #line 1532
---
> #line 1528
12502c12920
< #line 1534
---
> #line 1530
12504c12922
< #line 1535
---
> #line 1531
12506c12924
< #line 1536
---
> #line 1532
12508c12926
< #line 1537
---
> #line 1533
12513c12931
< #line 1542
---
> #line 1538
12515c12933
< #line 1545
---
> #line 1541
12517c12935
< #line 1546
---
> #line 1542
12522c12940
< #line 1548
---
> #line 1544
12524c12942
< #line 1549
---
> #line 1545
12526c12944
< #line 1553
---
> #line 1549
12528c12946
< #line 1554
---
> #line 1550
12530c12948
< #line 1557
---
> #line 1553
12532,12535c12950,12953
< #line 1557
<   goto ldv_51034;
<   ldv_51033: 
< #line 1558
---
> #line 1553
>   goto ldv_52210;
>   ldv_52209: 
> #line 1554
12537c12955
< #line 1559
---
> #line 1555
12539,12542c12957,12960
< #line 1560
<   __might_sleep("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<                 1560, 0);
< #line 1560
---
> #line 1556
>   __might_sleep("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared",
>                 1556, 0);
> #line 1556
12544c12962
< #line 1561
---
> #line 1557
12546c12964
< #line 1562
---
> #line 1558
12548c12966
< #line 1557
---
> #line 1553
12550,12551c12968,12969
<   ldv_51034: ;
< #line 1557
---
>   ldv_52210: ;
> #line 1553
12553,12554c12971,12972
< #line 1558
<     goto ldv_51033;
---
> #line 1554
>     goto ldv_52209;
12558c12976
< #line 1565
---
> #line 1561
12560c12978
< #line 1573
---
> #line 1569
12562c12980
< #line 1574
---
> #line 1570
12567c12985
< #line 1581
---
> #line 1577
12569c12987
< #line 1582
---
> #line 1578
12574c12992
< #line 1583
---
> #line 1579
12576c12994
< #line 1584
---
> #line 1580
12580c12998
< #line 1593 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1589 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
12587,12591c13005,13011
<   int _b ;
<   int _b___0 ;
<   raw_spinlock_t *tmp ;
<   unsigned int tmp___0 ;
<   int tmp___1 ;
---
>   bool _bool ;
>   int tmp ;
>   bool _bool___0 ;
>   int tmp___0 ;
>   raw_spinlock_t *tmp___1 ;
>   unsigned int tmp___2 ;
>   int tmp___3 ;
12594c13014
< #line 1596
---
> #line 1592
12596,12603c13016,13022
< #line 1600
<   _b = (unsigned long )b == (unsigned long )((struct drbd_bitmap *)0);
< #line 1600
<   if (_b != 0) {
< #line 1600
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_bm_test_bit", (char *)"!b", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             1600);
---
> #line 1596
>   _bool = (unsigned long )b != (unsigned long )((struct drbd_bitmap *)0);
> #line 1596
>   if (! _bool) {
> #line 1596
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"b", "drbd_bm_test_bit");
12607,12609c13026,13036
< #line 1600
<   if (_b != 0) {
< #line 1600
---
> #line 1596
>   if (_bool) {
> #line 1596
>     tmp = 0;
>   } else {
> #line 1596
>     tmp = 1;
>   }
> #line 1596
>   if (tmp) {
> #line 1597
12614,12621c13041,13047
< #line 1601
<   _b___0 = (unsigned long )b->bm_pages == (unsigned long )((struct page **)0);
< #line 1601
<   if (_b___0 != 0) {
< #line 1601
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_bm_test_bit", (char *)"!b->bm_pages", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             1601);
---
> #line 1598
>   _bool___0 = (unsigned long )b->bm_pages != (unsigned long )((struct page **)0);
> #line 1598
>   if (! _bool___0) {
> #line 1598
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"b->bm_pages", "drbd_bm_test_bit");
12625,12627c13051,13061
< #line 1601
<   if (_b___0 != 0) {
< #line 1601
---
> #line 1598
>   if (_bool___0) {
> #line 1598
>     tmp___0 = 0;
>   } else {
> #line 1598
>     tmp___0 = 1;
>   }
> #line 1598
>   if (tmp___0) {
> #line 1599
12632,12636c13066,13070
< #line 1603
<   tmp = spinlock_check(& b->bm_lock);
< #line 1603
<   flags = _raw_spin_lock_irqsave(tmp);
< #line 1604
---
> #line 1601
>   tmp___1 = spinlock_check(& b->bm_lock);
> #line 1601
>   flags = _raw_spin_lock_irqsave(tmp___1);
> #line 1602
12638c13072
< #line 1605
---
> #line 1603
12643c13077
< #line 1606
---
> #line 1604
12644a13079,13086
> #line 1605
>     tmp___2 = bm_bit_to_page_idx(b, (u64 )bitnr);
> #line 1605
>     p_addr = bm_map_pidx(b, tmp___2);
> #line 1606
>     tmp___3 = test_bit_le((int )bitnr & 32767, (void const   *)p_addr);
> #line 1606
>     i = tmp___3 != 0;
12646,12653d13087
<     tmp___0 = bm_bit_to_page_idx(b, (u64 )bitnr);
< #line 1607
<     p_addr = bm_map_pidx(b, tmp___0);
< #line 1608
<     tmp___1 = test_bit_le((int )bitnr & 32767, (void const   *)p_addr);
< #line 1608
<     i = tmp___1 != 0;
< #line 1609
12656c13090
< #line 1610
---
> #line 1608
12658c13092
< #line 1611
---
> #line 1609
12661c13095
< #line 1613
---
> #line 1611
12664c13098
< #line 1614
---
> #line 1612
12667c13101
< #line 1617
---
> #line 1615
12669c13103
< #line 1618
---
> #line 1616
12673c13107
< #line 1622 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1620 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
12682,12684c13116,13120
<   int _b ;
<   int _b___0 ;
<   raw_spinlock_t *tmp ;
---
>   bool _bool ;
>   int tmp ;
>   bool _bool___0 ;
>   int tmp___0 ;
>   raw_spinlock_t *tmp___1 ;
12686,12688c13122,13124
<   unsigned int tmp___0 ;
<   int tmp___1 ;
<   int _b___1 ;
---
>   unsigned int tmp___2 ;
>   int tmp___3 ;
>   bool _bool___1 ;
12691c13127
< #line 1625
---
> #line 1623
12693c13129
< #line 1626
---
> #line 1624
12695c13131
< #line 1628
---
> #line 1626
12697c13133
< #line 1629
---
> #line 1627
12699,12706c13135,13141
< #line 1635
<   _b = (unsigned long )b == (unsigned long )((struct drbd_bitmap *)0);
< #line 1635
<   if (_b != 0) {
< #line 1635
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_bm_count_bits", (char *)"!b", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             1635);
---
> #line 1633
>   _bool = (unsigned long )b != (unsigned long )((struct drbd_bitmap *)0);
> #line 1633
>   if (! _bool) {
> #line 1633
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"b", "drbd_bm_count_bits");
12710,12712c13145,13155
< #line 1635
<   if (_b != 0) {
< #line 1635
---
> #line 1633
>   if (_bool) {
> #line 1633
>     tmp = 0;
>   } else {
> #line 1633
>     tmp = 1;
>   }
> #line 1633
>   if (tmp) {
> #line 1634
12717,12724c13160,13166
< #line 1636
<   _b___0 = (unsigned long )b->bm_pages == (unsigned long )((struct page **)0);
< #line 1636
<   if (_b___0 != 0) {
< #line 1636
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_bm_count_bits", (char *)"!b->bm_pages", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             1636);
---
> #line 1635
>   _bool___0 = (unsigned long )b->bm_pages != (unsigned long )((struct page **)0);
> #line 1635
>   if (! _bool___0) {
> #line 1635
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"b->bm_pages", "drbd_bm_count_bits");
12728,12729c13170,13179
< #line 1636
<   if (_b___0 != 0) {
---
> #line 1635
>   if (_bool___0) {
> #line 1635
>     tmp___0 = 0;
>   } else {
> #line 1635
>     tmp___0 = 1;
>   }
> #line 1635
>   if (tmp___0) {
12736c13186
<   tmp = spinlock_check(& b->bm_lock);
---
>   tmp___1 = spinlock_check(& b->bm_lock);
12738c13188
<   flags = _raw_spin_lock_irqsave(tmp);
---
>   flags = _raw_spin_lock_irqsave(tmp___1);
12749,12750c13199,13200
<   goto ldv_51075;
<   ldv_51074: 
---
>   goto ldv_52251;
>   ldv_52250: 
12752c13202
<   tmp___0 = bm_bit_to_page_idx(b, (u64 )bitnr);
---
>   tmp___2 = bm_bit_to_page_idx(b, (u64 )bitnr);
12754c13204
<   idx = tmp___0;
---
>   idx = tmp___2;
12772c13222
<   _b___1 = b->bm_bits <= bitnr;
---
>   _bool___1 = b->bm_bits > bitnr;
12774c13224
<   if (_b___1 != 0) {
---
>   if (! _bool___1) {
12776,12778c13226,13227
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_bm_count_bits", (char *)"bitnr >= b->bm_bits", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             1649);
---
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"bitnr < b->bm_bits", "drbd_bm_count_bits");
12783c13232
<   if (_b___1 != 0) {
---
>   if ((int )_bool___1) {
12785,12786c13234,13236
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "bitnr=%lu bm_bits=%lu\n",
<             bitnr, b->bm_bits);
---
>     tmp___3 = test_bit_le((int )((unsigned int )bitnr - (page_nr << 15)), (void const   *)p_addr);
> #line 1650
>     c = (tmp___3 != 0) + c;
12789,12791c13239,13240
<     tmp___1 = test_bit_le((int )((unsigned int )bitnr - (page_nr << 15)), (void const   *)p_addr);
< #line 1652
<     c = (tmp___1 != 0) + c;
---
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "bitnr=%lu bm_bits=%lu\n",
>             bitnr, b->bm_bits);
12795c13244
<   ldv_51075: ;
---
>   ldv_52251: ;
12799c13248
<     goto ldv_51074;
---
>     goto ldv_52250;
12804c13253
< #line 1655
---
> #line 1654
12806c13255
< #line 1656
---
> #line 1655
12811c13260
< #line 1657
---
> #line 1656
12813c13262
< #line 1658
---
> #line 1657
12817c13266
< #line 1676 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1675 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_bitmap.c.prepared"
12827,12829c13276,13280
<   int _b ;
<   int _b___0 ;
<   raw_spinlock_t *tmp ;
---
>   bool _bool ;
>   int tmp ;
>   bool _bool___0 ;
>   int tmp___0 ;
>   raw_spinlock_t *tmp___1 ;
12833,12836c13284,13287
<   unsigned int tmp___0 ;
<   unsigned long *tmp___1 ;
<   unsigned long tmp___2 ;
<   int tmp___3 ;
---
>   unsigned int tmp___2 ;
>   unsigned long *tmp___3 ;
>   unsigned long tmp___4 ;
>   int tmp___5 ;
12839c13290
< #line 1678
---
> #line 1677
12841,12848c13292,13298
< #line 1683
<   _b = (unsigned long )b == (unsigned long )((struct drbd_bitmap *)0);
< #line 1683
<   if (_b != 0) {
< #line 1683
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_bm_e_weight", (char *)"!b", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             1683);
---
> #line 1682
>   _bool = (unsigned long )b != (unsigned long )((struct drbd_bitmap *)0);
> #line 1682
>   if (! _bool) {
> #line 1682
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"b", "drbd_bm_e_weight");
12852,12853c13302,13311
< #line 1683
<   if (_b != 0) {
---
> #line 1682
>   if (_bool) {
> #line 1682
>     tmp = 0;
>   } else {
> #line 1682
>     tmp = 1;
>   }
> #line 1682
>   if (tmp) {
12860c13318
<   _b___0 = (unsigned long )b->bm_pages == (unsigned long )((struct page **)0);
---
>   _bool___0 = (unsigned long )b->bm_pages != (unsigned long )((struct page **)0);
12862c13320
<   if (_b___0 != 0) {
---
>   if (! _bool___0) {
12864,12866c13322,13323
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_bm_e_weight", (char *)"!b->bm_pages", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             1684);
---
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"b->bm_pages", "drbd_bm_e_weight");
12871c13328,13334
<   if (_b___0 != 0) {
---
>   if (_bool___0) {
> #line 1684
>     tmp___0 = 0;
>   } else {
> #line 1684
>     tmp___0 = 1;
>   }
12872a13336,13337
>   if (tmp___0) {
> #line 1685
12877,12880d13341
< #line 1686
<   tmp = spinlock_check(& b->bm_lock);
< #line 1686
<   flags = _raw_spin_lock_irqsave(tmp);
12882c13343,13345
<   if (((unsigned int )b->bm_flags & 4U) != 0U) {
---
>   tmp___1 = spinlock_check(& b->bm_lock);
> #line 1687
>   flags = _raw_spin_lock_irqsave(tmp___1);
12883a13347,13348
>   if (((unsigned int )b->bm_flags & 4U) != 0U) {
> #line 1689
12888,12889d13352
< #line 1690
<   s = (int )(enr << 6);
12890a13354,13355
>   s = (int )(enr << 6);
> #line 1692
12892c13357
< #line 1691
---
> #line 1692
12894,12895d13358
< #line 1691
<   e = (int )(_min1 < _min2 ? _min1 : _min2);
12897c13360
<   count = 0;
---
>   e = (int )(_min1 < _min2 ? _min1 : _min2);
12899c13362
<   if ((size_t )s < b->bm_words) {
---
>   count = 0;
12901,12903c13364
<     n = e - s;
< #line 1695
<     tmp___0 = bm_word_to_page_idx(b, (unsigned long )s);
---
>   if ((size_t )s < b->bm_words) {
12905c13366
<     p_addr = bm_map_pidx(b, tmp___0);
---
>     n = e - s;
12907c13368,13370
<     bm = p_addr + ((unsigned long )s & 511UL);
---
>     tmp___2 = bm_word_to_page_idx(b, (unsigned long )s);
> #line 1696
>     p_addr = bm_map_pidx(b, tmp___2);
12909,12912c13372
<     goto ldv_51101;
<     ldv_51100: 
< #line 1698
<     tmp___1 = bm;
---
>     bm = p_addr + ((unsigned long )s & 511UL);
12913a13374,13378
>     goto ldv_52277;
>     ldv_52276: 
> #line 1699
>     tmp___3 = bm;
> #line 1699
12914a13380,13384
> #line 1699
>     tmp___4 = hweight_long(*tmp___3);
> #line 1699
>     count = (int )((unsigned int )tmp___4 + (unsigned int )count);
>     ldv_52277: 
12916c13386
<     tmp___2 = hweight_long(*tmp___1);
---
>     tmp___5 = n;
12918,12922d13387
<     count = (int )((unsigned int )tmp___2 + (unsigned int )count);
<     ldv_51101: 
< #line 1697
<     tmp___3 = n;
< #line 1697
12924,12925d13388
< #line 1697
<     if (tmp___3 != 0) {
12927c13390,13392
<       goto ldv_51100;
---
>     if (tmp___5 != 0) {
> #line 1699
>       goto ldv_52276;
12931c13396
< #line 1699
---
> #line 1700
12934c13399
< #line 1701
---
> #line 1702
12938,12939d13402
< #line 1703
<   spin_unlock_irqrestore(& b->bm_lock, flags);
12940a13404,13405
>   spin_unlock_irqrestore(& b->bm_lock, flags);
> #line 1705
12944,13372d13408
< #line 1709 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
< unsigned long drbd_bm_ALe_set_all(struct drbd_conf *mdev , unsigned long al_enr ) 
< { 
<   struct drbd_bitmap *b ;
<   unsigned long *p_addr ;
<   unsigned long *bm ;
<   unsigned long weight ;
<   unsigned long s ;
<   unsigned long e ;
<   int count ;
<   int i ;
<   int do_now ;
<   int _b ;
<   int _b___0 ;
<   size_t __min1 ;
<   size_t __min2 ;
<   unsigned int tmp ;
<   unsigned long tmp___0 ;
<   int tmp___1 ;
<   int tmp___2 ;
< 
<   {
< #line 1711
<   b = mdev->bitmap;
< #line 1716
<   _b = (unsigned long )b == (unsigned long )((struct drbd_bitmap *)0);
< #line 1716
<   if (_b != 0) {
< #line 1716
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_bm_ALe_set_all", (char *)"!b", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             1716);
<   } else {
< 
<   }
< #line 1716
<   if (_b != 0) {
< #line 1716
<     return (0UL);
<   } else {
< 
<   }
< #line 1717
<   _b___0 = (unsigned long )b->bm_pages == (unsigned long )((struct page **)0);
< #line 1717
<   if (_b___0 != 0) {
< #line 1717
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_bm_ALe_set_all", (char *)"!b->bm_pages", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             1717);
<   } else {
< 
<   }
< #line 1717
<   if (_b___0 != 0) {
< #line 1717
<     return (0UL);
<   } else {
< 
<   }
< #line 1719
<   spin_lock_irq(& b->bm_lock);
< #line 1720
<   if (((unsigned int )b->bm_flags & 2U) != 0U) {
< #line 1721
<     __bm_print_lock_info(mdev, "drbd_bm_ALe_set_all");
<   } else {
< 
<   }
< #line 1722
<   weight = b->bm_set;
< #line 1724
<   s = al_enr * 16UL;
< #line 1725
<   __min1 = s + 16UL;
< #line 1725
<   __min2 = b->bm_words;
< #line 1725
<   e = __min1 < __min2 ? __min1 : __min2;
< #line 1727
<   if ((e - 1UL) >> 9 != s >> 9) {
< #line 1727
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( (e-1) >> (PAGE_SHIFT - LN2_BPL + 3) == s >> (PAGE_SHIFT - LN2_BPL + 3) ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             1728);
<   } else {
< 
<   }
< #line 1729
<   count = 0;
< #line 1730
<   if (b->bm_words > s) {
< #line 1731
<     do_now = (int )((unsigned int )e - (unsigned int )s);
< #line 1731
<     i = do_now;
< #line 1732
<     tmp = bm_word_to_page_idx(b, s);
< #line 1732
<     p_addr = bm_map_pidx(b, tmp);
< #line 1733
<     bm = p_addr + (s & 511UL);
< #line 1734
<     goto ldv_51125;
<     ldv_51124: 
< #line 1735
<     tmp___0 = hweight_long(*bm);
< #line 1735
<     count = (int )((unsigned int )tmp___0 + (unsigned int )count);
< #line 1736
<     *bm = 0xffffffffffffffffUL;
< #line 1737
<     bm = bm + 1;
<     ldv_51125: 
< #line 1734
<     tmp___1 = i;
< #line 1734
<     i = i - 1;
< #line 1734
<     if (tmp___1 != 0) {
< #line 1735
<       goto ldv_51124;
<     } else {
< 
<     }
< #line 1739
<     bm_unmap(p_addr);
< #line 1740
<     b->bm_set = b->bm_set + (unsigned long )(do_now * 64 - count);
< #line 1741
<     if (b->bm_words == e) {
< #line 1742
<       tmp___2 = bm_clear_surplus(b);
< #line 1742
<       b->bm_set = b->bm_set - (unsigned long )tmp___2;
<     } else {
< 
<     }
<   } else {
< #line 1744
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "start offset (%lu) too large in drbd_bm_ALe_set_all\n",
<             s);
<   }
< #line 1746
<   weight = b->bm_set - weight;
< #line 1747
<   spin_unlock_irq(& b->bm_lock);
< #line 1748
<   return (weight);
< }
< }
< #line 1751 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
< void ldv_mutex_lock_1(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1756
<   ldv_mutex_lock_lock(ldv_func_arg1);
< #line 1758
<   mutex_lock(ldv_func_arg1);
< #line 1759
<   return;
< }
< }
< #line 1761 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
< void ldv_mutex_unlock_2(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1766
<   ldv_mutex_unlock_lock(ldv_func_arg1);
< #line 1768
<   mutex_unlock(ldv_func_arg1);
< #line 1769
<   return;
< }
< }
< #line 1771 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
< void ldv_mutex_lock_3(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1776
<   ldv_mutex_lock_mutex_of_device(ldv_func_arg1);
< #line 1778
<   mutex_lock(ldv_func_arg1);
< #line 1779
<   return;
< }
< }
< #line 1781 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
< int ldv_mutex_trylock_4(struct mutex *ldv_func_arg1 ) 
< { 
<   ldv_func_ret_type___2 ldv_func_res ;
<   int tmp ;
<   int tmp___0 ;
< 
<   {
< #line 1786
<   tmp = mutex_trylock(ldv_func_arg1);
< #line 1786
<   ldv_func_res = tmp;
< #line 1788
<   tmp___0 = ldv_mutex_trylock_mutex_of_device(ldv_func_arg1);
< #line 1788
<   return (tmp___0);
< #line 1790
<   return (ldv_func_res);
< }
< }
< #line 1793 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
< void ldv_mutex_unlock_5(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1798
<   ldv_mutex_unlock_mutex_of_device(ldv_func_arg1);
< #line 1800
<   mutex_unlock(ldv_func_arg1);
< #line 1801
<   return;
< }
< }
< #line 1803 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
< void ldv_mutex_lock_6(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1808
<   ldv_mutex_lock_mtx_of_percpu_rw_semaphore(ldv_func_arg1);
< #line 1810
<   mutex_lock(ldv_func_arg1);
< #line 1811
<   return;
< }
< }
< #line 1813 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
< void ldv_mutex_unlock_7(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1818
<   ldv_mutex_unlock_mtx_of_percpu_rw_semaphore(ldv_func_arg1);
< #line 1820
<   mutex_unlock(ldv_func_arg1);
< #line 1821
<   return;
< }
< }
< #line 1823 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
< void ldv_mutex_lock_8(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1828
<   ldv_mutex_lock_mtx_of_percpu_rw_semaphore(ldv_func_arg1);
< #line 1830
<   mutex_lock(ldv_func_arg1);
< #line 1831
<   return;
< }
< }
< #line 1833 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
< void ldv_mutex_unlock_9(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1838
<   ldv_mutex_unlock_mtx_of_percpu_rw_semaphore(ldv_func_arg1);
< #line 1840
<   mutex_unlock(ldv_func_arg1);
< #line 1841
<   return;
< }
< }
< #line 1843 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
< void ldv_mutex_lock_10(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1848
<   ldv_mutex_lock_cred_guard_mutex_of_signal_struct(ldv_func_arg1);
< #line 1850
<   mutex_lock(ldv_func_arg1);
< #line 1851
<   return;
< }
< }
< #line 1853 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
< void ldv_mutex_unlock_11(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1858
<   ldv_mutex_unlock_cred_guard_mutex_of_signal_struct(ldv_func_arg1);
< #line 1860
<   mutex_unlock(ldv_func_arg1);
< #line 1861
<   return;
< }
< }
< #line 1863 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
< void ldv_mutex_lock_12(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1868
<   ldv_mutex_lock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 1870
<   mutex_lock(ldv_func_arg1);
< #line 1871
<   return;
< }
< }
< #line 1873 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
< void ldv_mutex_unlock_13(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1878
<   ldv_mutex_unlock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 1880
<   mutex_unlock(ldv_func_arg1);
< #line 1881
<   return;
< }
< }
< #line 1883 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
< void ldv_mutex_unlock_14(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1888
<   ldv_mutex_unlock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 1890
<   mutex_unlock(ldv_func_arg1);
< #line 1891
<   return;
< }
< }
< #line 1893 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
< int ldv_mutex_trylock_15(struct mutex *ldv_func_arg1 ) 
< { 
<   ldv_func_ret_type___13 ldv_func_res ;
<   int tmp ;
<   int tmp___0 ;
< 
<   {
< #line 1898
<   tmp = mutex_trylock(ldv_func_arg1);
< #line 1898
<   ldv_func_res = tmp;
< #line 1900
<   tmp___0 = ldv_mutex_trylock_bm_change_of_drbd_bitmap(ldv_func_arg1);
< #line 1900
<   return (tmp___0);
< #line 1902
<   return (ldv_func_res);
< }
< }
< #line 1905 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
< void ldv_mutex_lock_16(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1910
<   ldv_mutex_lock_bm_change_of_drbd_bitmap(ldv_func_arg1);
< #line 1912
<   mutex_lock(ldv_func_arg1);
< #line 1913
<   return;
< }
< }
< #line 1915 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
< void ldv_mutex_unlock_17(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1920
<   ldv_mutex_unlock_bm_change_of_drbd_bitmap(ldv_func_arg1);
< #line 1922
<   mutex_unlock(ldv_func_arg1);
< #line 1923
<   return;
< }
< }
< #line 171 "include/linux/mutex.h"
< int ldv_mutex_trylock_42(struct mutex *ldv_func_arg1 ) ;
< #line 176
< void ldv_mutex_unlock_36(struct mutex *ldv_func_arg1 ) ;
< #line 180
< void ldv_mutex_unlock_38(struct mutex *ldv_func_arg1 ) ;
< #line 184
< void ldv_mutex_unlock_40(struct mutex *ldv_func_arg1 ) ;
< #line 188
< void ldv_mutex_unlock_43(struct mutex *ldv_func_arg1 ) ;
< #line 192
< void ldv_mutex_unlock_45(struct mutex *ldv_func_arg1 ) ;
< #line 196
< void ldv_mutex_unlock_47(struct mutex *ldv_func_arg1 ) ;
< #line 200
< void ldv_mutex_unlock_48(struct mutex *ldv_func_arg1 ) ;
< #line 10 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
< void ldv_mutex_lock_35(struct mutex *ldv_func_arg1 ) ;
< #line 14
< void ldv_mutex_lock_37(struct mutex *ldv_func_arg1 ) ;
< #line 18
< void ldv_mutex_lock_39(struct mutex *ldv_func_arg1 ) ;
< #line 22
< void ldv_mutex_lock_41(struct mutex *ldv_func_arg1 ) ;
< #line 26
< void ldv_mutex_lock_44(struct mutex *ldv_func_arg1 ) ;
< #line 30
< void ldv_mutex_lock_46(struct mutex *ldv_func_arg1 ) ;
13375,13378c13411,13418
< #line 465 "include/linux/module.h"
< extern bool try_module_get(struct module * ) ;
< #line 467
< extern void module_put(struct module * ) ;
---
> #line 468 "include/linux/module.h"
> bool ldv_try_module_get_1(struct module *ldv_func_arg1 ) ;
> #line 474
> void ldv_module_put_2(struct module *ldv_func_arg1 ) ;
> #line 3 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_proc.c.prepared"
> int ldv_try_module_get(struct module *module ) ;
> #line 5
> void ldv_module_put(struct module *module ) ;
13413c13453,13455
< #line 55 "include/linux/drbd.h"
---
> #line 110 "include/linux/idr.h"
> extern void *idr_get_next(struct idr * , int * ) ;
> #line 54 "include/linux/drbd.h"
13415c13457
< #line 303
---
> #line 326
13417c13459
< #line 304
---
> #line 327
13419c13461
< #line 305
---
> #line 328
13452c13494
< #line 255 "include/linux/lru_cache.h"
---
> #line 266 "include/linux/lru_cache.h"
13454c13496
< #line 257
---
> #line 268
13457,13473c13499,13501
< #line 61 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< unsigned int minor_count ;
< #line 157
< struct drbd_conf **minor_table ;
< #line 1174 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static struct drbd_conf *minor_to_mdev(unsigned int minor ) 
< { 
<   struct drbd_conf *mdev ;
< 
<   {
< #line 1178
<   mdev = minor < minor_count ? *(minor_table + (unsigned long )minor) : 0;
< #line 1180
<   return (mdev);
< }
< }
< #line 1575
---
> #line 167 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct idr minors ;
> #line 1418
13475c13503
< #line 1722 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1573 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
13477c13505
< #line 1723
---
> #line 1574
13479c13507
< #line 2287 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 2083 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
13491,13493c13519,13521
< #line 2298
<   if ((unsigned int )*((unsigned short *)mdev + 1138UL) == 288U || (unsigned int )*((unsigned short *)mdev + 1138UL) == 304U) {
< #line 2299
---
> #line 2094
>   if ((unsigned int )*((unsigned short *)mdev + 374UL) == 288U || (unsigned int )*((unsigned short *)mdev + 374UL) == 304U) {
> #line 2095
13496c13524
< #line 2301
---
> #line 2097
13498c13526
< #line 2301
---
> #line 2097
13501c13529
< #line 2304
---
> #line 2100
13503c13531
< #line 2310
---
> #line 2106
13505,13507c13533,13535
< #line 2311
<     tmp___0 = drbd_conn_str((enum drbd_conns )mdev->state.ldv_39979.conn);
< #line 2311
---
> #line 2107
>     tmp___0 = drbd_conn_str((enum drbd_conns )mdev->state.ldv_50103.conn);
> #line 2107
13510c13538
< #line 2314
---
> #line 2110
13513c13541
< #line 2325
---
> #line 2121
13515c13543
< #line 2326
---
> #line 2122
13517c13545
< #line 2327
---
> #line 2123
13519c13547
< #line 2328
---
> #line 2124
13521c13549
< #line 2329
---
> #line 2125
13524c13552
< #line 2331
---
> #line 2127
13528,13529c13556,13569
< #line 2417 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static int is_susp(union drbd_state s ) 
---
> #line 2216 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static int drbd_suspended(struct drbd_conf *mdev ) 
> { 
>   struct drbd_tconn *tconn ;
> 
>   {
> #line 2218
>   tconn = mdev->tconn;
> #line 2220
>   return (((unsigned int )*((unsigned char *)tconn + 132UL) != 0U || (unsigned int )*((unsigned char *)tconn + 132UL) != 0U) || (unsigned int )*((unsigned char *)tconn + 132UL) != 0U);
> }
> }
> #line 2294 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static bool verify_can_do_stop_sector(struct drbd_conf *mdev ) 
13534,13535c13574,13575
< #line 2419
<   return (((unsigned int )*((unsigned char *)(& s) + 2UL) != 0U || (unsigned int )*((unsigned char *)(& s) + 2UL) != 0U) || (unsigned int )*((unsigned char *)(& s) + 2UL) != 0U);
---
> #line 2296
>   return ((bool )((mdev->tconn)->agreed_pro_version > 96 && (mdev->tconn)->agreed_pro_version != 100));
13538c13578
< #line 108 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
---
> #line 44 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_proc.c.prepared"
13540c13580
< #line 109
---
> #line 45
13542c13582
< #line 113 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
---
> #line 49 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_proc.c.prepared"
13544c13584
< #line 113
---
> #line 49
13547c13587
< #line 121 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
---
> #line 57 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_proc.c.prepared"
13554c13594
< #line 124
---
> #line 60
13556c13596
< #line 124
---
> #line 60
13558c13598
< #line 126
---
> #line 62
13560c13600
< #line 127
---
> #line 63
13562c13602
< #line 128
---
> #line 64
13565c13605
< #line 129
---
> #line 65
13567c13607
< #line 129
---
> #line 65
13569c13609
< #line 130
---
> #line 66
13572c13612
< #line 132
---
> #line 68
13576c13616
< #line 133
---
> #line 69
13580c13620
< #line 141 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
---
> #line 77 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_proc.c.prepared"
13596a13637
>   bool tmp___0 ;
13599c13640
< #line 146
---
> #line 82
13601c13642
< #line 148
---
> #line 84
13603c13644
< #line 150
---
> #line 86
13605c13646
< #line 151
---
> #line 87
13607c13648
< #line 152
---
> #line 88
13609c13650
< #line 153
---
> #line 89
13611,13614c13652,13655
< #line 153
<   goto ldv_51360;
<   ldv_51359: 
< #line 154
---
> #line 89
>   goto ldv_51758;
>   ldv_51757: 
> #line 90
13616c13657
< #line 153
---
> #line 89
13618,13619c13659,13660
<   ldv_51360: ;
< #line 153
---
>   ldv_51758: ;
> #line 89
13621,13622c13662,13663
< #line 154
<     goto ldv_51359;
---
> #line 90
>     goto ldv_51757;
13626c13667
< #line 155
---
> #line 91
13628c13669
< #line 156
---
> #line 92
13630,13633c13671,13674
< #line 156
<   goto ldv_51363;
<   ldv_51362: 
< #line 157
---
> #line 92
>   goto ldv_51761;
>   ldv_51760: 
> #line 93
13635c13676
< #line 156
---
> #line 92
13637,13638c13678,13679
<   ldv_51363: ;
< #line 156
---
>   ldv_51761: ;
> #line 92
13640,13641c13681,13682
< #line 157
<     goto ldv_51362;
---
> #line 93
>     goto ldv_51760;
13645c13686
< #line 158
---
> #line 94
13647,13649c13688,13690
< #line 160
<   if ((unsigned int )*((unsigned short *)mdev + 1138UL) == 288U || (unsigned int )*((unsigned short *)mdev + 1138UL) == 304U) {
< #line 161
---
> #line 96
>   if ((unsigned int )*((unsigned short *)mdev + 374UL) == 288U || (unsigned int )*((unsigned short *)mdev + 374UL) == 304U) {
> #line 97
13652c13693
< #line 163
---
> #line 99
13655c13696
< #line 164
---
> #line 100
13657c13698
< #line 167
---
> #line 103
13659c13700
< #line 168
---
> #line 104
13662c13703
< #line 172
---
> #line 108
13665c13706
< #line 189
---
> #line 125
13667c13708
< #line 190
---
> #line 126
13669c13710
< #line 191
---
> #line 127
13671c13712
< #line 192
---
> #line 128
13676c13717
< #line 194
---
> #line 130
13678c13719
< #line 195
---
> #line 131
13683c13724
< #line 196
---
> #line 132
13685c13726
< #line 197
---
> #line 133
13687c13728
< #line 199
---
> #line 135
13689c13730
< #line 202
---
> #line 138
13691c13732
< #line 203
---
> #line 139
13693c13734
< #line 204
---
> #line 140
13695c13736
< #line 205
---
> #line 141
13697c13738
< #line 207
---
> #line 143
13699c13740
< #line 209
---
> #line 145
13701c13742
< #line 210
---
> #line 146
13703c13744
< #line 211
---
> #line 147
13705c13746
< #line 212
---
> #line 148
13710c13751
< #line 213
---
> #line 149
13712c13753
< #line 214
---
> #line 150
13714c13755
< #line 215
---
> #line 151
13716c13757
< #line 216
---
> #line 152
13721c13762
< #line 222
---
> #line 158
13723c13764
< #line 223
---
> #line 159
13725c13766
< #line 224
---
> #line 160
13730c13771
< #line 225
---
> #line 161
13732c13773
< #line 226
---
> #line 162
13734c13775
< #line 227
---
> #line 163
13736c13777
< #line 228
---
> #line 164
13738,13740c13779,13781
< #line 230
<   if ((unsigned int )*((unsigned short *)mdev + 1138UL) == 272U || (unsigned int )*((unsigned short *)mdev + 1138UL) == 288U) {
< #line 232
---
> #line 166
>   if ((unsigned int )*((unsigned short *)mdev + 374UL) == 272U || (unsigned int )*((unsigned short *)mdev + 374UL) == 288U) {
> #line 168
13742c13783
< #line 233
---
> #line 169
13747c13788
< #line 235
---
> #line 171
13749c13790
< #line 237
---
> #line 173
13751c13792
< #line 240
---
> #line 176
13753c13794
< #line 240
---
> #line 176
13755c13796
< #line 242
---
> #line 178
13757,13759c13798,13800
< #line 243
<     if ((unsigned int )*((unsigned short *)mdev + 1138UL) == 288U || (unsigned int )*((unsigned short *)mdev + 1138UL) == 304U) {
< #line 245
---
> #line 179
>     if ((unsigned int )*((unsigned short *)mdev + 374UL) == 288U || (unsigned int )*((unsigned short *)mdev + 374UL) == 304U) {
> #line 181
13761,13763c13802,13806
< #line 246
<       if (mdev->agreed_pro_version > 96) {
< #line 247
---
> #line 182
>       tmp___0 = verify_can_do_stop_sector(mdev);
> #line 182
>       if ((int )tmp___0) {
> #line 183
13769c13812
< #line 249
---
> #line 185
13772c13815
< #line 252
---
> #line 188
13775c13818
< #line 257
---
> #line 193
13777c13820
< #line 258
---
> #line 194
13782c13825
< #line 259
---
> #line 195
13787c13830
< #line 261
---
> #line 197
13791c13834
< #line 263 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
---
> #line 199 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_proc.c.prepared"
13798c13841
< #line 265
---
> #line 201
13800c13843
< #line 265
---
> #line 201
13802c13845
< #line 267
---
> #line 203
13804c13847
< #line 270
---
> #line 206
13808c13851
< #line 273 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
---
> #line 209 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_proc.c.prepared"
13812c13855
<   int hole ;
---
>   int prev_i ;
13814a13858,13859
>   struct net_conf *nc ;
>   char wp ;
13817c13862,13864
<   int tmp___0 ;
---
>   void *tmp___0 ;
>   struct net_conf *_________p1 ;
>   bool __warned ;
13824,13826c13871,13873
<   char const   *tmp___7 ;
<   char const   *tmp___8 ;
<   char const   *tmp___9 ;
---
>   int tmp___7 ;
>   int tmp___8 ;
>   int tmp___9 ;
13828,13829c13875,13880
<   unsigned long tmp___11 ;
<   int tmp___12 ;
---
>   char const   *tmp___11 ;
>   char const   *tmp___12 ;
>   char const   *tmp___13 ;
>   unsigned long tmp___14 ;
>   int tmp___15 ;
>   void *tmp___16 ;
13832,13834c13883,13885
< #line 275
<   hole = 0;
< #line 279
---
> #line 211
>   prev_i = -1;
> #line 217
13836c13887
< #line 279
---
> #line 217
13838c13889
< #line 279
---
> #line 217
13840c13891
< #line 285
---
> #line 223
13842,13844c13893,13897
< #line 285
<   seq_printf(seq, "version: 8.3.13 (api:%d/proto:%d-%d)\n%s\n", 88, 86, 97, tmp);
< #line 308
---
> #line 223
>   seq_printf(seq, "version: 8.4.2 (api:%d/proto:%d-%d)\n%s\n", 1, 86, 101, tmp);
> #line 246
>   rcu_read_lock();
> #line 247
13846,13864c13899,13908
< #line 308
<   goto ldv_51386;
<   ldv_51385: 
< #line 309
<   mdev = minor_to_mdev((unsigned int )i);
< #line 310
<   if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
< #line 311
<     hole = 1;
< #line 312
<     goto ldv_51384;
<   } else {
< 
<   }
< #line 314
<   if (hole != 0) {
< #line 315
<     hole = 0;
< #line 316
---
> #line 247
>   tmp___0 = idr_get_next(& minors, & i);
> #line 247
>   mdev = (struct drbd_conf *)tmp___0;
> #line 247
>   goto ldv_51788;
>   ldv_51787: ;
> #line 248
>   if (i + -1 != prev_i) {
> #line 249
13869,13873c13913,13919
< #line 319
<   sn = drbd_conn_str((enum drbd_conns )mdev->state.ldv_39979.conn);
< #line 321
<   if (((unsigned int )*((unsigned short *)mdev + 1138UL) == 0U && (unsigned int )*((unsigned char *)mdev + 2277UL) == 0U) && (unsigned int )*((unsigned char *)mdev + 2276UL) == 2U) {
< #line 324
---
> #line 250
>   prev_i = i;
> #line 252
>   sn = drbd_conn_str((enum drbd_conns )mdev->state.ldv_50103.conn);
> #line 254
>   if (((unsigned int )*((unsigned short *)mdev + 374UL) == 0U && (unsigned int )*((unsigned char *)mdev + 749UL) == 0U) && (unsigned int )*((unsigned char *)mdev + 748UL) == 2U) {
> #line 257
13876c13922
< #line 327
---
> #line 260
13878,13900c13924,13971
< #line 329
<     tmp___0 = atomic_read((atomic_t const   *)(& mdev->ap_bio_cnt));
< #line 329
<     tmp___1 = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 329
<     tmp___2 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
< #line 329
<     tmp___3 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
< #line 329
<     tmp___4 = atomic_read((atomic_t const   *)(& mdev->local_cnt));
< #line 329
<     tmp___5 = drbd_test_flag(mdev, AL_SUSPENDED);
< #line 329
<     tmp___6 = is_susp(mdev->state);
< #line 329
<     tmp___7 = drbd_disk_str((enum drbd_disk_state )mdev->state.ldv_39979.pdsk);
< #line 329
<     tmp___8 = drbd_disk_str((enum drbd_disk_state )mdev->state.ldv_39979.disk);
< #line 329
<     tmp___9 = drbd_role_str((enum drbd_role )mdev->state.ldv_39979.peer);
< #line 329
<     tmp___10 = drbd_role_str((enum drbd_role )mdev->state.ldv_39979.role);
< #line 329
---
> #line 262
>     _________p1 = *((struct net_conf * volatile  *)(& (mdev->tconn)->net_conf));
> #line 262
>     tmp___1 = debug_lockdep_rcu_enabled();
> #line 262
>     if (tmp___1 != 0 && ! __warned) {
> #line 262
>       tmp___2 = rcu_read_lock_held();
> #line 262
>       if (tmp___2 == 0 && 1) {
> #line 262
>         __warned = 1;
> #line 262
>         lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_proc.c.prepared",
>                                262, "suspicious rcu_dereference_check() usage");
>       } else {
> 
>       }
>     } else {
> 
>     }
> #line 262
>     nc = _________p1;
> #line 263
>     wp = (unsigned long )nc != (unsigned long )((struct net_conf *)0) ? (char )((unsigned int )((unsigned char )nc->wire_protocol) + 64U) : 32;
> #line 264
>     tmp___3 = atomic_read((atomic_t const   *)(& mdev->ap_bio_cnt));
> #line 264
>     tmp___4 = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
> #line 264
>     tmp___5 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
> #line 264
>     tmp___6 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
> #line 264
>     tmp___7 = atomic_read((atomic_t const   *)(& mdev->local_cnt));
> #line 264
>     tmp___8 = constant_test_bit(18U, (unsigned long const volatile   *)(& mdev->flags));
> #line 264
>     tmp___9 = drbd_suspended(mdev);
> #line 264
>     tmp___10 = drbd_disk_str((enum drbd_disk_state )mdev->state.ldv_50103.pdsk);
> #line 264
>     tmp___11 = drbd_disk_str((enum drbd_disk_state )mdev->state.ldv_50103.disk);
> #line 264
>     tmp___12 = drbd_role_str((enum drbd_role )mdev->state.ldv_50103.peer);
> #line 264
>     tmp___13 = drbd_role_str((enum drbd_role )mdev->state.ldv_50103.role);
> #line 264
13902,13907c13973,13976
<                i, sn, tmp___10, tmp___9, tmp___8, tmp___7, (unsigned long )mdev->net_conf != (unsigned long )((struct net_conf *)0) ? (mdev->net_conf)->wire_protocol + 64 : 32,
<                tmp___6 != 0 ? 115 : 114, (unsigned int )*((unsigned char *)mdev + 2278UL) != 0U ? 97 : 45,
<                (unsigned int )*((unsigned char *)mdev + 2278UL) != 0U ? 112 : 45,
<                (unsigned int )*((unsigned char *)mdev + 2278UL) != 0U ? 117 : 45,
<                (int )mdev->congestion_reason != 0 ? (int )mdev->congestion_reason : 45,
<                tmp___5 != 0 ? 115 : 45, mdev->send_cnt / 2U, mdev->recv_cnt / 2U,
---
>                i, sn, tmp___13, tmp___12, tmp___11, tmp___10, (int )wp, tmp___9 != 0 ? 115 : 114,
>                (unsigned int )*((unsigned char *)mdev + 750UL) != 0U ? 97 : 45, (unsigned int )*((unsigned char *)mdev + 750UL) != 0U ? 112 : 45,
>                (unsigned int )*((unsigned char *)mdev + 750UL) != 0U ? 117 : 45, (int )mdev->congestion_reason != 0 ? (int )mdev->congestion_reason : 45,
>                tmp___8 != 0 ? 115 : 45, mdev->send_cnt / 2U, mdev->recv_cnt / 2U,
13909,13913c13978,13983
<                tmp___4, tmp___2 + tmp___3, tmp___1, tmp___0, mdev->epochs, (int )write_ordering_chars[(unsigned int )mdev->write_ordering]);
< #line 360
<     tmp___11 = drbd_bm_total_weight(mdev);
< #line 360
<     seq_printf(seq, " oos:%llu\n", (unsigned long long )tmp___11 << 2);
---
>                tmp___7, tmp___5 + tmp___6, tmp___4, tmp___3, (mdev->tconn)->epochs,
>                (int )write_ordering_chars[(unsigned int )(mdev->tconn)->write_ordering]);
> #line 294
>     tmp___14 = drbd_bm_total_weight(mdev);
> #line 294
>     seq_printf(seq, " oos:%llu\n", (unsigned long long )tmp___14 << 2);
13915,13917c13985,13987
< #line 364
<   if ((((unsigned int )*((unsigned short *)mdev + 1138UL) == 256U || (unsigned int )*((unsigned short *)mdev + 1138UL) == 272U) || (unsigned int )*((unsigned short *)mdev + 1138UL) == 288U) || (unsigned int )*((unsigned short *)mdev + 1138UL) == 304U) {
< #line 368
---
> #line 298
>   if ((((unsigned int )*((unsigned short *)mdev + 374UL) == 256U || (unsigned int )*((unsigned short *)mdev + 374UL) == 272U) || (unsigned int )*((unsigned short *)mdev + 374UL) == 288U) || (unsigned int )*((unsigned short *)mdev + 374UL) == 304U) {
> #line 302
13922c13992
< #line 370
---
> #line 304
13924,13928c13994,13998
< #line 370
<     tmp___12 = _get_ldev_if_state(mdev, D_FAILED);
< #line 370
<     if (tmp___12 != 0) {
< #line 371
---
> #line 304
>     tmp___15 = _get_ldev_if_state(mdev, D_FAILED);
> #line 304
>     if (tmp___15 != 0) {
> #line 305
13930c14000
< #line 372
---
> #line 306
13932c14002
< #line 373
---
> #line 307
13940c14010
< #line 376
---
> #line 310
13942c14012
< #line 377
---
> #line 311
13944c14014
< #line 378
---
> #line 312
13952,13953c14022
<   ldv_51384: 
< #line 308
---
> #line 247
13955,13959c14024,14032
<   ldv_51386: ;
< #line 308
<   if ((unsigned int )i < minor_count) {
< #line 309
<     goto ldv_51385;
---
> #line 247
>   tmp___16 = idr_get_next(& minors, & i);
> #line 247
>   mdev = (struct drbd_conf *)tmp___16;
>   ldv_51788: ;
> #line 247
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 248
>     goto ldv_51787;
13963,13964c14036,14038
< 
< #line 384
---
> #line 317
>   rcu_read_unlock();
> #line 319
13968c14042
< #line 387 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
---
> #line 322 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_proc.c.prepared"
13976,13978c14050,14052
< #line 389
<   tmp___1 = try_module_get(& __this_module);
< #line 389
---
> #line 324
>   tmp___1 = ldv_try_module_get_1(& __this_module);
> #line 324
13980c14054
< #line 390
---
> #line 325
13982c14056
< #line 390
---
> #line 325
13984c14058
< #line 390
---
> #line 325
13989c14063
< #line 391
---
> #line 326
13993c14067
< #line 394 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
---
> #line 329 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_proc.c.prepared"
13999,14001c14073,14075
< #line 396
<   module_put(& __this_module);
< #line 397
---
> #line 331
>   ldv_module_put_2(& __this_module);
> #line 332
14003c14077
< #line 397
---
> #line 332
14007c14081
< #line 418
---
> #line 353
14009c14083
< #line 421
---
> #line 356
14011,14013c14085,14087
< #line 427
< void ldv_initialize(void) ;
< #line 430
---
> #line 362
> extern void ldv_initialize(void) ;
> #line 365
14015c14089
< #line 433
---
> #line 368
14017c14091
< #line 436 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
---
> #line 371 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_proc.c.prepared"
14019c14093
< #line 439 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
---
> #line 374 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_proc.c.prepared"
14030c14104
< #line 473
---
> #line 408
14032c14106
< #line 463
---
> #line 398
14034c14108
< #line 472
---
> #line 407
14036,14039c14110,14113
< #line 476
<   goto ldv_51422;
<   ldv_51421: 
< #line 480
---
> #line 411
>   goto ldv_51824;
>   ldv_51823: 
> #line 415
14041c14115
< #line 480
---
> #line 415
14044c14118
< #line 485
---
> #line 420
14046c14120
< #line 490
---
> #line 425
14048c14122
< #line 491
---
> #line 426
14050c14124
< #line 492
---
> #line 427
14052c14126
< #line 493
---
> #line 428
14054c14128
< #line 494
---
> #line 429
14059c14133
< #line 495
---
> #line 430
14064,14065c14138,14139
< #line 501
<   goto ldv_51418;
---
> #line 436
>   goto ldv_51820;
14067c14141
< #line 505
---
> #line 440
14069c14143
< #line 510
---
> #line 445
14071c14145
< #line 511
---
> #line 446
14073c14147
< #line 512
---
> #line 447
14078,14079c14152,14153
< #line 518
<   goto ldv_51418;
---
> #line 453
>   goto ldv_51820;
14081,14082c14155,14156
< #line 519
<   goto ldv_51418;
---
> #line 454
>   goto ldv_51820;
14084,14086c14158,14160
<   ldv_51418: ;
<   ldv_51422: 
< #line 476
---
>   ldv_51820: ;
>   ldv_51824: 
> #line 411
14088c14162
< #line 476
---
> #line 411
14090,14091c14164,14165
< #line 478
<     goto ldv_51421;
---
> #line 413
>     goto ldv_51823;
14097c14171
< #line 528
---
> #line 463
14099,14197c14173
< #line 531
<   return;
< }
< }
< #line 535 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
< void ldv_mutex_lock_35(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 540
<   ldv_mutex_lock_lock(ldv_func_arg1);
< #line 542
<   mutex_lock(ldv_func_arg1);
< #line 543
<   return;
< }
< }
< #line 545 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
< void ldv_mutex_unlock_36(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 550
<   ldv_mutex_unlock_lock(ldv_func_arg1);
< #line 552
<   mutex_unlock(ldv_func_arg1);
< #line 553
<   return;
< }
< }
< #line 555 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
< void ldv_mutex_lock_37(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 560
<   ldv_mutex_lock_mtx_of_percpu_rw_semaphore(ldv_func_arg1);
< #line 562
<   mutex_lock(ldv_func_arg1);
< #line 563
<   return;
< }
< }
< #line 565 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
< void ldv_mutex_unlock_38(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 570
<   ldv_mutex_unlock_mtx_of_percpu_rw_semaphore(ldv_func_arg1);
< #line 572
<   mutex_unlock(ldv_func_arg1);
< #line 573
<   return;
< }
< }
< #line 575 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
< void ldv_mutex_lock_39(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 580
<   ldv_mutex_lock_mtx_of_percpu_rw_semaphore(ldv_func_arg1);
< #line 582
<   mutex_lock(ldv_func_arg1);
< #line 583
<   return;
< }
< }
< #line 585 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
< void ldv_mutex_unlock_40(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 590
<   ldv_mutex_unlock_mtx_of_percpu_rw_semaphore(ldv_func_arg1);
< #line 592
<   mutex_unlock(ldv_func_arg1);
< #line 593
<   return;
< }
< }
< #line 595 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
< void ldv_mutex_lock_41(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 600
<   ldv_mutex_lock_mutex_of_device(ldv_func_arg1);
< #line 602
<   mutex_lock(ldv_func_arg1);
< #line 603
---
> #line 466
14201,14202c14177,14178
< #line 605 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
< int ldv_mutex_trylock_42(struct mutex *ldv_func_arg1 ) 
---
> #line 470 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_proc.c.prepared"
> bool ldv_try_module_get_1(struct module *ldv_func_arg1 ) 
14204d14179
<   ldv_func_ret_type___6 ldv_func_res ;
14206,14280d14180
<   int tmp___0 ;
< 
<   {
< #line 610
<   tmp = mutex_trylock(ldv_func_arg1);
< #line 610
<   ldv_func_res = tmp;
< #line 612
<   tmp___0 = ldv_mutex_trylock_mutex_of_device(ldv_func_arg1);
< #line 612
<   return (tmp___0);
< #line 614
<   return (ldv_func_res);
< }
< }
< #line 617 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
< void ldv_mutex_unlock_43(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 622
<   ldv_mutex_unlock_mutex_of_device(ldv_func_arg1);
< #line 624
<   mutex_unlock(ldv_func_arg1);
< #line 625
<   return;
< }
< }
< #line 627 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
< void ldv_mutex_lock_44(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 632
<   ldv_mutex_lock_cred_guard_mutex_of_signal_struct(ldv_func_arg1);
< #line 634
<   mutex_lock(ldv_func_arg1);
< #line 635
<   return;
< }
< }
< #line 637 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
< void ldv_mutex_unlock_45(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 642
<   ldv_mutex_unlock_cred_guard_mutex_of_signal_struct(ldv_func_arg1);
< #line 644
<   mutex_unlock(ldv_func_arg1);
< #line 645
<   return;
< }
< }
< #line 647 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
< void ldv_mutex_lock_46(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 652
<   ldv_mutex_lock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 654
<   mutex_lock(ldv_func_arg1);
< #line 655
<   return;
< }
< }
< #line 657 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
< void ldv_mutex_unlock_47(struct mutex *ldv_func_arg1 ) 
< { 
< 
14283,14288c14183,14186
< #line 662
<   ldv_mutex_unlock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 664
<   mutex_unlock(ldv_func_arg1);
< #line 665
<   return;
---
> #line 475
>   tmp = ldv_try_module_get(ldv_func_arg1);
> #line 475
>   return (tmp != 0);
14291,14292c14189,14190
< #line 667 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
< void ldv_mutex_unlock_48(struct mutex *ldv_func_arg1 ) 
---
> #line 478 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_proc.c.prepared"
> void ldv_module_put_2(struct module *ldv_func_arg1 ) 
14297,14301c14195,14197
< #line 672
<   ldv_mutex_unlock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 674
<   mutex_unlock(ldv_func_arg1);
< #line 675
---
> #line 483
>   ldv_module_put(ldv_func_arg1);
> #line 484
14307,14310d14202
< #line 206 "include/linux/kernel.h"
< extern void panic(char const   *  , ...) ;
< #line 323
< extern int sprintf(char * , char const   *  , ...) ;
14368a14261,14288
> #line 153 "include/linux/list.h"
> __inline static void list_move(struct list_head *list , struct list_head *head ) 
> { 
> 
> 
>   {
> #line 155
>   __list_del_entry(list);
> #line 156
>   list_add(list, head);
> #line 157
>   return;
> }
> }
> #line 164 "include/linux/list.h"
> __inline static void list_move_tail(struct list_head *list , struct list_head *head ) 
> { 
> 
> 
>   {
> #line 167
>   __list_del_entry(list);
> #line 168
>   list_add_tail(list, head);
> #line 169
>   return;
> }
> }
14423a14344,14345
> #line 206 "include/linux/kernel.h"
> extern void panic(char const   *  , ...) ;
14489c14411
<   goto ldv_5505;
---
>   goto ldv_5562;
14495c14417
<   goto ldv_5505;
---
>   goto ldv_5562;
14501c14423
<   goto ldv_5505;
---
>   goto ldv_5562;
14507c14429
<   goto ldv_5505;
---
>   goto ldv_5562;
14512c14434
<   ldv_5505: ;
---
>   ldv_5562: ;
14517,14559c14439,14450
< #line 279 "include/linux/lockdep.h"
< extern void lockdep_init_map(struct lockdep_map * , char const   * , struct lock_class_key * ,
<                              int  ) ;
< #line 171 "include/linux/mutex.h"
< int ldv_mutex_trylock_66(struct mutex *ldv_func_arg1 ) ;
< #line 176
< void ldv_mutex_unlock_64(struct mutex *ldv_func_arg1 ) ;
< #line 180
< void ldv_mutex_unlock_67(struct mutex *ldv_func_arg1 ) ;
< #line 184
< void ldv_mutex_unlock_69(struct mutex *ldv_func_arg1 ) ;
< #line 188
< void ldv_mutex_unlock_71(struct mutex *ldv_func_arg1 ) ;
< #line 192
< void ldv_mutex_unlock_73(struct mutex *ldv_func_arg1 ) ;
< #line 196
< void ldv_mutex_unlock_75(struct mutex *ldv_func_arg1 ) ;
< #line 200
< void ldv_mutex_unlock_76(struct mutex *ldv_func_arg1 ) ;
< #line 204
< void ldv_mutex_unlock_78(struct mutex *ldv_func_arg1 ) ;
< #line 208
< void ldv_mutex_unlock_80(struct mutex *ldv_func_arg1 ) ;
< #line 212
< void ldv_mutex_unlock_82(struct mutex *ldv_func_arg1 ) ;
< #line 10 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void ldv_mutex_lock_63(struct mutex *ldv_func_arg1 ) ;
< #line 14
< void ldv_mutex_lock_65(struct mutex *ldv_func_arg1 ) ;
< #line 18
< void ldv_mutex_lock_68(struct mutex *ldv_func_arg1 ) ;
< #line 22
< void ldv_mutex_lock_70(struct mutex *ldv_func_arg1 ) ;
< #line 26
< void ldv_mutex_lock_72(struct mutex *ldv_func_arg1 ) ;
< #line 30
< void ldv_mutex_lock_74(struct mutex *ldv_func_arg1 ) ;
< #line 34
< void ldv_mutex_lock_77(struct mutex *ldv_func_arg1 ) ;
< #line 38
< void ldv_mutex_lock_79(struct mutex *ldv_func_arg1 ) ;
< #line 42
< void ldv_mutex_lock_81(struct mutex *ldv_func_arg1 ) ;
---
> #line 89 "include/linux/thread_info.h"
> __inline static int test_ti_thread_flag(struct thread_info *ti , int flag ) 
> { 
>   int tmp ;
> 
>   {
> #line 91
>   tmp = variable_test_bit(flag, (unsigned long const volatile   *)(& ti->flags));
> #line 91
>   return (tmp);
> }
> }
14575c14466
<   _raw_spin_lock(& lock->ldv_5957.rlock);
---
>   _raw_spin_lock(& lock->ldv_6135.rlock);
14587c14478
<   _raw_spin_unlock(& lock->ldv_5957.rlock);
---
>   _raw_spin_unlock(& lock->ldv_6135.rlock);
14597a14489,14517
> #line 40 "include/linux/kref.h"
> __inline static void kref_get(struct kref *kref ) 
> { 
>   int __ret_warn_on ;
>   int tmp ;
>   long tmp___0 ;
> 
>   {
> #line 42
>   tmp = atomic_read((atomic_t const   *)(& kref->refcount));
> #line 42
>   __ret_warn_on = tmp == 0;
> #line 42
>   tmp___0 = __builtin_expect(__ret_warn_on != 0, 0L);
> #line 42
>   if (tmp___0 != 0L) {
> #line 42
>     warn_slowpath_null("include/linux/kref.h", 42);
>   } else {
> 
>   }
> #line 42
>   __builtin_expect(__ret_warn_on != 0, 0L);
> #line 43
>   atomic_inc(& kref->refcount);
> #line 44
>   return;
> }
> }
14626c14546
<     return (page->ldv_14722.first_page);
---
>     return (page->ldv_16348.first_page);
14644c14564
<   tmp___0 = atomic_read((atomic_t const   *)(& tmp->ldv_14703.ldv_14702.ldv_14701._count));
---
>   tmp___0 = atomic_read((atomic_t const   *)(& tmp->ldv_16329.ldv_16328.ldv_16327._count));
14667c14587
<     ldv_19186: ;
---
>     ldv_18982: ;
14669c14589
<     goto ldv_19186;
---
>     goto ldv_18982;
14680c14600
<     ldv_19187: ;
---
>     ldv_18983: ;
14682c14602
<     goto ldv_19187;
---
>     goto ldv_18983;
14693c14613
<     ldv_19188: ;
---
>     ldv_18984: ;
14695c14615
<     goto ldv_19188;
---
>     goto ldv_18984;
14724,14770d14643
< #line 32 "include/linux/semaphore.h"
< __inline static void sema_init(struct semaphore *sem , int val ) 
< { 
<   struct lock_class_key __key ;
<   struct semaphore __constr_expr_0 ;
< 
<   {
< #line 35
<   __constr_expr_0.lock.raw_lock.ldv_2023.head_tail = 0U;
< #line 35
<   __constr_expr_0.lock.magic = 3735899821U;
< #line 35
<   __constr_expr_0.lock.owner_cpu = 4294967295U;
< #line 35
<   __constr_expr_0.lock.owner = 0xffffffffffffffffUL;
< #line 35
<   __constr_expr_0.lock.dep_map.key = 0;
< #line 35
<   __constr_expr_0.lock.dep_map.class_cache[0] = 0;
< #line 35
<   __constr_expr_0.lock.dep_map.class_cache[1] = 0;
< #line 35
<   __constr_expr_0.lock.dep_map.name = "(*sem).lock";
< #line 35
<   __constr_expr_0.lock.dep_map.cpu = 0;
< #line 35
<   __constr_expr_0.lock.dep_map.ip = 0UL;
< #line 35
<   __constr_expr_0.count = (unsigned int )val;
< #line 35
<   __constr_expr_0.wait_list.next = & sem->wait_list;
< #line 35
<   __constr_expr_0.wait_list.prev = & sem->wait_list;
< #line 35
<   *sem = __constr_expr_0;
< #line 36
<   lockdep_init_map(& sem->lock.dep_map, "semaphore->lock", & __key, 0);
< #line 37
<   return;
< }
< }
< #line 40
< extern int down_interruptible(struct semaphore * ) ;
< #line 42
< extern int down_trylock(struct semaphore * ) ;
< #line 44
< extern void up(struct semaphore * ) ;
14786a14660,14688
> #line 2533 "include/linux/sched.h"
> __inline static int test_tsk_thread_flag(struct task_struct *tsk , int flag ) 
> { 
>   int tmp ;
> 
>   {
> #line 2535
>   tmp = test_ti_thread_flag((struct thread_info *)tsk->stack, flag);
> #line 2535
>   return (tmp);
> }
> }
> #line 2559 "include/linux/sched.h"
> __inline static int signal_pending(struct task_struct *p ) 
> { 
>   int tmp ;
>   long tmp___0 ;
> 
>   {
> #line 2561
>   tmp = test_tsk_thread_flag(p, 2);
> #line 2561
>   tmp___0 = __builtin_expect(tmp != 0, 0L);
> #line 2561
>   return ((int )tmp___0);
> }
> }
> #line 104 "include/linux/idr.h"
> extern void *idr_find(struct idr * , int  ) ;
14897c14799,14802
< #line 674 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 131 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_state.h"
> enum drbd_state_rv conn_request_state(struct drbd_tconn *tconn , union drbd_state mask ,
>                                       union drbd_state val , enum chg_state_flags flags ) ;
> #line 525 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
14903c14808
< #line 680
---
> #line 531
14905c14810
< #line 681
---
> #line 532
14909,14968c14814,14817
< #line 1154 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static void drbd_clear_flag(struct drbd_conf *mdev , enum drbd_flag f ) 
< { 
< 
< 
<   {
< #line 1156
<   clear_bit((int )f, (unsigned long volatile   *)(& mdev->drbd_flags));
< #line 1157
<   return;
< }
< }
< #line 1164 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static int drbd_test_and_set_flag(struct drbd_conf *mdev , enum drbd_flag f ) 
< { 
<   int tmp ;
< 
<   {
< #line 1166
<   tmp = test_and_set_bit((int )f, (unsigned long volatile   *)(& mdev->drbd_flags));
< #line 1166
<   return (tmp);
< }
< }
< #line 1183 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static unsigned int mdev_to_minor(struct drbd_conf *mdev ) 
< { 
< 
< 
<   {
< #line 1185
<   return (mdev->minor);
< }
< }
< #line 1196 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static int drbd_get_data_sock(struct drbd_conf *mdev ) 
< { 
<   long tmp ;
< 
<   {
< #line 1198
<   ldv_mutex_lock_74(& mdev->data.mutex);
< #line 1201
<   tmp = __builtin_expect((unsigned long )mdev->data.socket == (unsigned long )((struct socket *)0),
<                          0L);
< #line 1201
<   if (tmp != 0L) {
< #line 1202
<     ldv_mutex_unlock_75(& mdev->data.mutex);
< #line 1203
<     return (0);
<   } else {
< 
<   }
< #line 1205
<   return (1);
< }
< }
< #line 1208 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static void drbd_put_data_sock(struct drbd_conf *mdev ) 
---
> #line 798
> struct fifo_buffer *fifo_alloc(int fifo_size ) ;
> #line 1037 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static struct drbd_conf *minor_to_mdev(unsigned int minor ) 
14970c14819
< 
---
>   void *tmp ;
14973,14976c14822,14825
< #line 1210
<   ldv_mutex_unlock_76(& mdev->data.mutex);
< #line 1211
<   return;
---
> #line 1039
>   tmp = idr_find(& minors, (int )minor);
> #line 1039
>   return ((struct drbd_conf *)tmp);
14979,14996c14828,14835
< #line 1237
< void drbd_force_state(struct drbd_conf *mdev , union drbd_state mask , union drbd_state val ) ;
< #line 1249
< void _drbd_thread_stop(struct drbd_thread *thi , int restart , int wait ) ;
< #line 1251
< void drbd_thread_current_set_cpu(struct drbd_conf *mdev ) ;
< #line 1268
< int drbd_gen_and_send_sync_uuid(struct drbd_conf *mdev ) ;
< #line 1272
< int _drbd_send_cmd(struct drbd_conf *mdev , struct socket *sock , enum drbd_packets cmd ,
<                    struct p_header80 *h , size_t size , unsigned int msg_flags ) ;
< #line 1277
< int drbd_send_cmd(struct drbd_conf *mdev , int use_data_socket , enum drbd_packets cmd ,
<                   struct p_header80 *h , size_t size ) ;
< #line 1285
< int drbd_send_ack(struct drbd_conf *mdev , enum drbd_packets cmd , struct drbd_epoch_entry *e ) ;
< #line 1291
< int drbd_send_ack_ex(struct drbd_conf *mdev , enum drbd_packets cmd , sector_t sector ,
---
> #line 1068
> void drbd_thread_current_set_cpu(struct drbd_thread *thi ) ;
> #line 1087
> void drbd_gen_and_send_sync_uuid(struct drbd_conf *mdev ) ;
> #line 1094
> int drbd_send_ack(struct drbd_conf *mdev , enum drbd_packet cmd , struct drbd_peer_request *peer_req ) ;
> #line 1100
> int drbd_send_ack_ex(struct drbd_conf *mdev , enum drbd_packet cmd , sector_t sector ,
14998,15002c14837,14841
< #line 1293
< int drbd_send_oos(struct drbd_conf *mdev , struct drbd_request *req ) ;
< #line 1294
< int drbd_send_block(struct drbd_conf *mdev , enum drbd_packets cmd , struct drbd_epoch_entry *e ) ;
< #line 1296
---
> #line 1102
> int drbd_send_out_of_sync(struct drbd_conf *mdev , struct drbd_request *req ) ;
> #line 1103
> int drbd_send_block(struct drbd_conf *mdev , enum drbd_packet cmd , struct drbd_peer_request *peer_req ) ;
> #line 1105
15004c14843
< #line 1297
---
> #line 1106
15007c14846
< #line 1299
---
> #line 1108
15009,15010c14848,14849
<                             void *digest , int digest_size , enum drbd_packets cmd ) ;
< #line 1303
---
>                             void *digest , int digest_size , enum drbd_packet cmd ) ;
> #line 1111
15012c14851
< #line 1309
---
> #line 1117
15014c14853
< #line 1310
---
> #line 1118
15016c14855
< #line 1312
---
> #line 1121
15018c14857
< #line 1314
---
> #line 1123
15020c14859
< #line 1315
---
> #line 1124
15022c14861
< #line 1317
---
> #line 1126
15024c14863
< #line 1554
---
> #line 1388
15026c14865
< #line 1570 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1404 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
15028c14867,14869
< #line 1598
---
> #line 1408
> void drbd_minor_destroy(struct kref *kref ) ;
> #line 1443
15030c14871
< #line 1601
---
> #line 1446
15032,15034c14873,14877
< #line 1602
< int drbd_alter_sa(struct drbd_conf *mdev , int na ) ;
< #line 1603
---
> #line 1447
> enum drbd_ret_code drbd_resync_after_valid(struct drbd_conf *mdev , int o_minor ) ;
> #line 1448
> void drbd_resync_after_changed(struct drbd_conf *mdev ) ;
> #line 1449
15036c14879
< #line 1604
---
> #line 1450
15038c14881
< #line 1605
---
> #line 1451
15040c14883
< #line 1606
---
> #line 1452
15042c14885
< #line 1609
---
> #line 1455
15044,15046c14887,14889
< #line 1614
< void drbd_ov_oos_found(struct drbd_conf *mdev , sector_t sector , int size ) ;
< #line 1615
---
> #line 1458
> void drbd_ov_out_of_sync_found(struct drbd_conf *mdev , sector_t sector , int size ) ;
> #line 1461
15048,15049c14891,14892
< #line 1617 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static void ov_oos_print(struct drbd_conf *mdev ) 
---
> #line 1463 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static void ov_out_of_sync_print(struct drbd_conf *mdev ) 
15054c14897
< #line 1619
---
> #line 1465
15056c14899
< #line 1620
---
> #line 1466
15062c14905
< #line 1624
---
> #line 1470
15064c14907
< #line 1625
---
> #line 1471
15068c14911
< #line 1628
---
> #line 1474
15071,15072c14914,14915
< #line 1629
< void drbd_csum_ee(struct drbd_conf *mdev , struct crypto_hash *tfm , struct drbd_epoch_entry *e ,
---
> #line 1475
> void drbd_csum_ee(struct drbd_conf *mdev , struct crypto_hash *tfm , struct drbd_peer_request *peer_req ,
15074,15106c14917,14947
< #line 1632
< int w_read_retry_remote(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) ;
< #line 1633
< int w_e_end_data_req(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) ;
< #line 1634
< int w_e_end_rsdata_req(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) ;
< #line 1635
< int w_e_end_csum_rs_req(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) ;
< #line 1636
< int w_e_end_ov_reply(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) ;
< #line 1637
< int w_e_end_ov_req(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) ;
< #line 1638
< int w_ov_finished(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) ;
< #line 1639
< int w_resync_timer(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) ;
< #line 1641
< int w_send_write_hint(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) ;
< #line 1642
< int w_send_dblock(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) ;
< #line 1643
< int w_send_barrier(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) ;
< #line 1644
< int w_send_read_req(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) ;
< #line 1645
< int w_prev_work_done(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) ;
< #line 1647
< int w_restart_disk_io(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) ;
< #line 1648
< int w_send_oos(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) ;
< #line 1649
< int w_start_resync(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) ;
< #line 1651
---
> #line 1478
> int w_e_end_data_req(struct drbd_work *w , int cancel ) ;
> #line 1479
> int w_e_end_rsdata_req(struct drbd_work *w , int cancel ) ;
> #line 1480
> int w_e_end_csum_rs_req(struct drbd_work *w , int cancel ) ;
> #line 1481
> int w_e_end_ov_reply(struct drbd_work *w , int cancel ) ;
> #line 1482
> int w_e_end_ov_req(struct drbd_work *w , int cancel ) ;
> #line 1483
> int w_ov_finished(struct drbd_work *w , int cancel ) ;
> #line 1484
> int w_resync_timer(struct drbd_work *w , int cancel ) ;
> #line 1485
> int w_send_write_hint(struct drbd_work *w , int cancel ) ;
> #line 1486
> int w_make_resync_request(struct drbd_work *w , int cancel ) ;
> #line 1487
> int w_send_dblock(struct drbd_work *w , int cancel ) ;
> #line 1488
> int w_send_read_req(struct drbd_work *w , int cancel ) ;
> #line 1489
> int w_prev_work_done(struct drbd_work *w , int cancel ) ;
> #line 1491
> int w_restart_disk_io(struct drbd_work *w , int cancel ) ;
> #line 1492
> int w_send_out_of_sync(struct drbd_work *w , int cancel ) ;
> #line 1493
> int w_start_resync(struct drbd_work *w , int cancel ) ;
> #line 1495
15108c14949
< #line 1652
---
> #line 1496
15110c14951
< #line 1655
---
> #line 1499
15112,15120c14953,14962
< #line 1656
< int drbd_submit_ee(struct drbd_conf *mdev , struct drbd_epoch_entry *e , unsigned int const   rw ,
<                    int const   fault_type ) ;
< #line 1659
< struct drbd_epoch_entry *drbd_alloc_ee(struct drbd_conf *mdev , u64 id , sector_t sector ,
<                                        unsigned int data_size , gfp_t gfp_mask ) ;
< #line 1664
< void drbd_free_some_ee(struct drbd_conf *mdev , struct drbd_epoch_entry *e , int is_net ) ;
< #line 1679 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1500
> int drbd_submit_peer_request(struct drbd_conf *mdev , struct drbd_peer_request *peer_req ,
>                              unsigned int const   rw , int const   fault_type ) ;
> #line 1504
> struct drbd_peer_request *drbd_alloc_peer_req(struct drbd_conf *mdev , u64 id , sector_t sector ,
>                                               unsigned int data_size , gfp_t gfp_mask ) ;
> #line 1507
> void __drbd_free_peer_req(struct drbd_conf *mdev , struct drbd_peer_request *peer_req ,
>                           int is_net ) ;
> #line 1523 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
15123a14966,14968
>   mm_segment_t oldfs ;
>   struct thread_info *tmp ;
>   char *uoptval ;
15124a14970,14972
>   struct thread_info *tmp___0 ;
>   mm_segment_t __constr_expr_0 ;
>   struct thread_info *tmp___1 ;
15127c14975,14987
< #line 1683
---
> #line 1526
>   tmp = current_thread_info();
> #line 1526
>   oldfs = tmp->addr_limit;
> #line 1530
>   uoptval = optval;
> #line 1532
>   tmp___0 = current_thread_info();
> #line 1532
>   __constr_expr_0.seg = 0xffffffffffffffffUL;
> #line 1532
>   tmp___0->addr_limit = __constr_expr_0;
> #line 1533
15129,15130c14989,14990
< #line 1684
<     err = sock_setsockopt(sock, level, optname, optval, (unsigned int )optlen);
---
> #line 1534
>     err = sock_setsockopt(sock, level, optname, uoptval, (unsigned int )optlen);
15132,15133c14992,14993
< #line 1686
<     err = (*((sock->ops)->setsockopt))(sock, level, optname, optval, (unsigned int )optlen);
---
> #line 1536
>     err = (*((sock->ops)->setsockopt))(sock, level, optname, uoptval, (unsigned int )optlen);
15135c14995,14999
< #line 1688
---
> #line 1538
>   tmp___1 = current_thread_info();
> #line 1538
>   tmp___1->addr_limit = oldfs;
> #line 1539
15139c15003
< #line 1691 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1542 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
15145c15009
< #line 1693
---
> #line 1544
15147c15011
< #line 1694
---
> #line 1545
15149c15013
< #line 1696
---
> #line 1547
15153c15017
< #line 1698 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1549 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
15159c15023
< #line 1700
---
> #line 1551
15161c15025
< #line 1701
---
> #line 1552
15163c15027
< #line 1703
---
> #line 1554
15167,15171c15031,15035
< #line 1728
< void drbd_al_begin_io(struct drbd_conf *mdev , sector_t sector ) ;
< #line 1729
< void drbd_al_complete_io(struct drbd_conf *mdev , sector_t sector ) ;
< #line 1730
---
> #line 1579
> void drbd_al_begin_io(struct drbd_conf *mdev , struct drbd_interval *i ) ;
> #line 1580
> void drbd_al_complete_io(struct drbd_conf *mdev , struct drbd_interval *i ) ;
> #line 1581
15173c15037
< #line 1732
---
> #line 1583
15175c15039
< #line 1734
---
> #line 1585
15177c15041
< #line 1735
---
> #line 1586
15179c15043
< #line 1738
---
> #line 1588
15181c15045
< #line 1739
---
> #line 1589
15184c15048
< #line 1743
---
> #line 1593
15187c15051
< #line 1820 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1621 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
15193,15194c15057,15058
< #line 1822
<   return ((struct page *)page->ldv_14722.private);
---
> #line 1623
>   return ((struct page *)page->ldv_16348.private);
15197,15198c15061,15062
< #line 1830 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static int drbd_ee_has_active_page(struct drbd_epoch_entry *e ) 
---
> #line 1632 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static int drbd_peer_req_has_active_page(struct drbd_peer_request *peer_req ) 
15205,15210c15069,15074
< #line 1832
<   page = e->pages;
< #line 1833
<   goto ldv_51043;
<   ldv_51042: 
< #line 1834
---
> #line 1634
>   page = peer_req->pages;
> #line 1635
>   goto ldv_51370;
>   ldv_51369: 
> #line 1636
15212c15076
< #line 1834
---
> #line 1636
15214c15078
< #line 1835
---
> #line 1637
15219c15083
< #line 1833
---
> #line 1635
15221,15222c15085,15086
<   ldv_51043: ;
< #line 1833
---
>   ldv_51370: ;
> #line 1635
15224c15088
< #line 1833
---
> #line 1635
15226c15090
< #line 1833
---
> #line 1635
15228c15092
< #line 1833
---
> #line 1635
15230,15231c15094,15095
< #line 1834
<       goto ldv_51042;
---
> #line 1636
>       goto ldv_51369;
15233,15234c15097,15098
< #line 1836
<       goto ldv_51044;
---
> #line 1638
>       goto ldv_51371;
15239,15240c15103,15104
<   ldv_51044: ;
< #line 1837
---
>   ldv_51371: ;
> #line 1639
15244,15245c15108,15110
< #line 1840 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static void drbd_state_lock(struct drbd_conf *mdev ) 
---
> #line 1675 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static void __drbd_chk_io_error____0(struct drbd_conf *mdev , enum drbd_force_detach_flags df ,
>                                               char const   *where ) 
15246a15112,15114
>   enum drbd_io_error_p ep ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
15248,15249c15116
<   wait_queue_t __wait ;
<   struct task_struct *tmp___0 ;
---
>   int tmp___0 ;
15250a15118,15119
>   union drbd_state __ns ;
>   union drbd_state __ns___0 ;
15253,15259c15122,15139
< #line 1842
<   tmp = drbd_test_and_set_flag(mdev, CLUSTER_ST_CHANGE);
< #line 1842
<   if (tmp == 0) {
< #line 1842
<     goto ldv_51048;
<   } else {
---
> #line 1681
>   rcu_read_lock();
> #line 1682
>   _________p1 = *((struct disk_conf * volatile  *)(& (mdev->ldev)->disk_conf));
> #line 1682
>   tmp = debug_lockdep_rcu_enabled();
> #line 1682
>   if (tmp != 0 && ! __warned) {
> #line 1682
>     tmp___0 = rcu_read_lock_held();
> #line 1682
>     if (tmp___0 == 0 && 1) {
> #line 1682
>       __warned = 1;
> #line 1682
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h",
>                              1682, "suspicious rcu_dereference_check() usage");
>     } else {
15261,15282c15141
<   }
< #line 1842
<   tmp___0 = get_current();
< #line 1842
<   __wait.flags = 0U;
< #line 1842
<   __wait.private = (void *)tmp___0;
< #line 1842
<   __wait.func = & autoremove_wake_function;
< #line 1842
<   __wait.task_list.next = & __wait.task_list;
< #line 1842
<   __wait.task_list.prev = & __wait.task_list;
<   ldv_51051: 
< #line 1842
<   prepare_to_wait(& mdev->misc_wait, & __wait, 2);
< #line 1842
<   tmp___1 = drbd_test_and_set_flag(mdev, CLUSTER_ST_CHANGE);
< #line 1842
<   if (tmp___1 == 0) {
< #line 1842
<     goto ldv_51050;
---
>     }
15286,15324c15145,15152
< #line 1842
<   schedule();
< #line 1842
<   goto ldv_51051;
<   ldv_51050: 
< #line 1842
<   finish_wait(& mdev->misc_wait, & __wait);
<   ldv_51048: ;
< #line 1845
<   return;
< }
< }
< #line 1846 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static void drbd_state_unlock(struct drbd_conf *mdev ) 
< { 
< 
< 
<   {
< #line 1848
<   drbd_clear_flag(mdev, CLUSTER_ST_CHANGE);
< #line 1849
<   __wake_up(& mdev->misc_wait, 3U, 1, 0);
< #line 1850
<   return;
< }
< }
< #line 1890 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static void __drbd_chk_io_error____0(struct drbd_conf *mdev , enum drbd_force_detach_flags df ,
<                                               char const   *where ) 
< { 
<   int tmp ;
<   union drbd_state __ns ;
<   union drbd_state __ns___0 ;
< 
<   {
< #line 1894
<   switch ((mdev->ldev)->dc.on_io_error) {
<   case 0: ;
< #line 1896
---
> #line 1682
>   ep = (enum drbd_io_error_p )_________p1->on_io_error;
> #line 1683
>   rcu_read_unlock();
> #line 1684
>   switch ((unsigned int )ep) {
>   case 0U: ;
> #line 1686
15326,15330c15154,15158
< #line 1897
<     tmp = ___ratelimit(& drbd_ratelimit_state, "__drbd_chk_io_error_");
< #line 1897
<     if (tmp != 0) {
< #line 1898
---
> #line 1687
>     tmp___1 = ___ratelimit(& drbd_ratelimit_state, "__drbd_chk_io_error_");
> #line 1687
>     if (tmp___1 != 0) {
> #line 1688
15336,15342c15164,15170
< #line 1899
<     if ((int )mdev->state.ldv_39979.disk > 4) {
< #line 1900
<       __ns.i = mdev->state.i;
< #line 1900
<       __ns.ldv_39979.disk = 4U;
< #line 1900
---
> #line 1689
>     if ((int )mdev->state.ldv_50103.disk > 4) {
> #line 1690
>       __ns = drbd_read_state(mdev);
> #line 1690
>       __ns.ldv_40604.disk = 4U;
> #line 1690
15347,15348c15175,15176
< #line 1901
<     goto ldv_51081;
---
> #line 1691
>     goto ldv_51401;
15352,15356c15180,15184
<   case 2: ;
<   case 1: 
< #line 1926
<   drbd_set_flag(mdev, WAS_IO_ERROR);
< #line 1927
---
>   case 2U: ;
>   case 1U: 
> #line 1716
>   set_bit(12U, (unsigned long volatile   *)(& mdev->flags));
> #line 1717
15358,15359c15186,15187
< #line 1928
<     drbd_set_flag(mdev, WAS_READ_ERROR);
---
> #line 1718
>     set_bit(13U, (unsigned long volatile   *)(& mdev->flags));
15363c15191
< #line 1929
---
> #line 1719
15365,15366c15193,15194
< #line 1930
<     drbd_set_flag(mdev, FORCE_DETACH);
---
> #line 1720
>     set_bit(14U, (unsigned long volatile   *)(& mdev->flags));
15370,15376c15198,15204
< #line 1931
<   if ((int )mdev->state.ldv_39979.disk > 2) {
< #line 1932
<     __ns___0.i = mdev->state.i;
< #line 1932
<     __ns___0.ldv_39979.disk = 2U;
< #line 1932
---
> #line 1721
>   if ((int )mdev->state.ldv_50103.disk > 2) {
> #line 1722
>     __ns___0 = drbd_read_state(mdev);
> #line 1722
>     __ns___0.ldv_40604.disk = 2U;
> #line 1722
15378c15206
< #line 1933
---
> #line 1723
15384,15385c15212,15213
< #line 1936
<   goto ldv_51081;
---
> #line 1726
>   goto ldv_51401;
15387,15388c15215,15216
<   ldv_51081: ;
< #line 1939
---
>   ldv_51401: ;
> #line 1729
15392c15220
< #line 1997 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1804 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
15399c15227
< #line 2000
---
> #line 1807
15401c15229
< #line 2000
---
> #line 1807
15403c15231
< #line 2000
---
> #line 1807
15406c15234
< #line 2000
---
> #line 1807
15409c15237
< #line 2000
---
> #line 1807
15413c15241
< #line 2079 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1897 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
15420c15248
< #line 2082
---
> #line 1900
15422c15250
< #line 2082
---
> #line 1900
15424c15252
< #line 2083
---
> #line 1901
15426,15428c15254
< #line 2084
<   up(& q->s);
< #line 2086
---
> #line 1902
15430c15256,15258
< #line 2087
---
> #line 1903
>   __wake_up(& q->q_wait, 3U, 1, 0);
> #line 1904
15434,15435c15262,15263
< #line 2089 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static void wake_asender(struct drbd_conf *mdev ) 
---
> #line 1906 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static void wake_asender(struct drbd_tconn *tconn ) 
15440,15442c15268,15270
< #line 2091
<   tmp = drbd_test_flag(mdev, SIGNAL_ASENDER);
< #line 2091
---
> #line 1908
>   tmp = constant_test_bit(3U, (unsigned long const volatile   *)(& tconn->flags));
> #line 1908
15444,15445c15272,15273
< #line 2092
<     force_sig(24, mdev->asender.task);
---
> #line 1909
>     force_sig(24, tconn->asender.task);
15449c15277
< #line 2093
---
> #line 1910
15453,15454c15281,15282
< #line 2095 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static void request_ping(struct drbd_conf *mdev ) 
---
> #line 1912 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static void request_ping(struct drbd_tconn *tconn ) 
15459,15463c15287,15291
< #line 2097
<   drbd_set_flag(mdev, SEND_PING);
< #line 2098
<   wake_asender(mdev);
< #line 2099
---
> #line 1914
>   set_bit(2U, (unsigned long volatile   *)(& tconn->flags));
> #line 1915
>   wake_asender(tconn);
> #line 1916
15467,15468c15295,15306
< #line 2101 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static int drbd_send_short_cmd(struct drbd_conf *mdev , enum drbd_packets cmd ) 
---
> #line 1918
> void *conn_prepare_command(struct drbd_tconn *tconn , struct drbd_socket *sock ) ;
> #line 1919
> void *drbd_prepare_command(struct drbd_conf *mdev , struct drbd_socket *sock ) ;
> #line 1920
> int conn_send_command(struct drbd_tconn *tconn , struct drbd_socket *sock , enum drbd_packet cmd ,
>                       unsigned int header_size , void *data , unsigned int size ) ;
> #line 1923
> int drbd_send_command(struct drbd_conf *mdev , struct drbd_socket *sock , enum drbd_packet cmd ,
>                       unsigned int header_size , void *data , unsigned int size ) ;
> #line 1994 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static void inc_rs_pending(struct drbd_conf *mdev ) 
15470,15471c15308
<   struct p_header80 h ;
<   int tmp ;
---
> 
15474,15477c15311,15314
< #line 2105
<   tmp = drbd_send_cmd(mdev, 1, cmd, & h, 8UL);
< #line 2105
<   return (tmp);
---
> #line 1996
>   atomic_inc(& mdev->rs_pending_cnt);
> #line 1997
>   return;
15480,15481c15317,15319
< #line 2120 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static void drbd_thread_stop(struct drbd_thread *thi ) 
---
> #line 2000 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static void _dec_rs_pending(struct drbd_conf *mdev , char const   *func ,
>                                      int line ) 
15483c15321,15322
< 
---
>   int tmp ;
>   int tmp___0 ;
15486,15488c15325,15339
< #line 2122
<   _drbd_thread_stop(thi, 0, 1);
< #line 2123
---
> #line 2002
>   atomic_dec(& mdev->rs_pending_cnt);
> #line 2003
>   tmp___0 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
> #line 2003
>   if (tmp___0 < 0) {
> #line 2003
>     tmp = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
> #line 2003
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: rs_pending_cnt = %d < 0 !\n",
>             func, line, tmp);
>   } else {
> 
>   }
> #line 2004
15492,15493c15343,15344
< #line 2180 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static void inc_rs_pending(struct drbd_conf *mdev ) 
---
> #line 2021 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static void _dec_unacked(struct drbd_conf *mdev , char const   *func , int line ) 
15495c15346,15347
< 
---
>   int tmp ;
>   int tmp___0 ;
15498,15500c15350,15364
< #line 2182
<   atomic_inc(& mdev->rs_pending_cnt);
< #line 2183
---
> #line 2023
>   atomic_dec(& mdev->unacked_cnt);
> #line 2024
>   tmp___0 = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
> #line 2024
>   if (tmp___0 < 0) {
> #line 2024
>     tmp = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
> #line 2024
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: unacked_cnt = %d < 0 !\n",
>             func, line, tmp);
>   } else {
> 
>   }
> #line 2025
15504c15368
< #line 22 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_wrappers.h"
---
> #line 23 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_wrappers.h"
15506,15507d15369
< #line 23
< void drbd_endio_sec(struct bio *bio , int error ) ;
15509,15510c15371,15374
< void drbd_endio_pri(struct bio *bio , int error ) ;
< #line 273 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"
---
> void drbd_peer_request_endio(struct bio *bio , int error ) ;
> #line 25
> void drbd_request_endio(struct bio *bio , int error ) ;
> #line 250 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"
15516c15380
< #line 276
---
> #line 253
15518c15382
< #line 278
---
> #line 255
15520c15384
< #line 280
---
> #line 257
15522,15524c15386,15388
< #line 281
<   bio->bi_end_io = & drbd_endio_pri;
< #line 282
---
> #line 258
>   bio->bi_end_io = & drbd_request_endio;
> #line 259
15526c15390
< #line 283
---
> #line 260
15530c15394
< #line 326
---
> #line 273
15532c15396
< #line 328
---
> #line 275
15534,15557c15398
< #line 335 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"
< __inline static int _req_mod(struct drbd_request *req , enum drbd_req_event what ) 
< { 
<   struct drbd_conf *mdev ;
<   struct bio_and_error m ;
<   int rv ;
< 
<   {
< #line 337
<   mdev = req->mdev;
< #line 342
<   rv = __req_mod(req, what, & m);
< #line 343
<   if ((unsigned long )m.bio != (unsigned long )((struct bio *)0)) {
< #line 344
<     complete_master_bio(mdev, & m);
<   } else {
< 
<   }
< #line 346
<   return (rv);
< }
< }
< #line 353 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"
---
> #line 304 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"
15567,15571c15408,15412
< #line 357
<   mdev = req->mdev;
< #line 361
<   tmp = spinlock_check(& mdev->req_lock);
< #line 361
---
> #line 308
>   mdev = req->w.ldv_50388.mdev;
> #line 312
>   tmp = spinlock_check(& (mdev->tconn)->req_lock);
> #line 312
15573c15414
< #line 362
---
> #line 313
15575,15577c15416,15418
< #line 363
<   spin_unlock_irqrestore(& mdev->req_lock, flags);
< #line 365
---
> #line 314
>   spin_unlock_irqrestore(& (mdev->tconn)->req_lock, flags);
> #line 316
15579c15420
< #line 366
---
> #line 317
15584c15425
< #line 368
---
> #line 319
15588,15592c15429,15431
< #line 112 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< static int w_make_ov_request(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) ;
< #line 113
< static int w_make_resync_request(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) ;
< #line 141 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
---
> #line 48 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
> static int w_make_ov_request(struct drbd_work *w , int cancel ) ;
> #line 74 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
15600c15439
< #line 146
---
> #line 79
15602c15441
< #line 147
---
> #line 80
15604,15606c15443,15445
< #line 147
<   mdev = (struct drbd_conf *)__mptr + 0xfffffffffffff060UL;
< #line 149
---
> #line 80
>   mdev = (struct drbd_conf *)__mptr + 0xfffffffffffffa38UL;
> #line 82
15608c15447
< #line 162
---
> #line 95
15610c15449
< #line 163
---
> #line 96
15612c15451
< #line 164
---
> #line 97
15614c15453
< #line 165
---
> #line 98
15616c15455
< #line 166
---
> #line 99
15618c15457
< #line 167
---
> #line 100
15622,15623c15461,15462
< #line 172 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void drbd_endio_read_sec_final(struct drbd_epoch_entry *e ) 
---
> #line 105 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
> void drbd_endio_read_sec_final(struct drbd_peer_request *peer_req ) 
15632c15471
< #line 174
---
> #line 107
15634,15647c15473,15477
< #line 175
<   mdev = e->mdev;
< #line 177
<   if (e->ldv_49189.block_id == 0ULL) {
< #line 177
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( e->block_id != ID_VACANT ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared",
<             177);
<   } else {
< 
<   }
< #line 179
<   tmp = spinlock_check(& mdev->req_lock);
< #line 179
---
> #line 108
>   mdev = peer_req->w.ldv_50388.mdev;
> #line 110
>   tmp = spinlock_check(& (mdev->tconn)->req_lock);
> #line 110
15649,15653c15479,15483
< #line 180
<   mdev->read_cnt = mdev->read_cnt + (e->size >> 9);
< #line 181
<   list_del(& e->w.list);
< #line 182
---
> #line 111
>   mdev->read_cnt = mdev->read_cnt + (peer_req->i.size >> 9);
> #line 112
>   list_del(& peer_req->w.list);
> #line 113
15655c15485
< #line 182
---
> #line 113
15657c15487
< #line 183
---
> #line 114
15662,15664c15492,15494
< #line 184
<   tmp___1 = constant_test_bit(3U, (unsigned long const volatile   *)(& e->flags));
< #line 184
---
> #line 115
>   tmp___1 = constant_test_bit(3U, (unsigned long const volatile   *)(& peer_req->flags));
> #line 115
15666c15496
< #line 185
---
> #line 116
15671,15675c15501,15505
< #line 186
<   spin_unlock_irqrestore(& mdev->req_lock, flags);
< #line 188
<   drbd_queue_work(& mdev->data.work, & e->w);
< #line 189
---
> #line 117
>   spin_unlock_irqrestore(& (mdev->tconn)->req_lock, flags);
> #line 119
>   drbd_queue_work(& (mdev->tconn)->sender_work, & peer_req->w);
> #line 120
15677c15507
< #line 190
---
> #line 121
15681,15682c15511,15512
< #line 194 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< static void drbd_endio_write_sec_final(struct drbd_epoch_entry *e ) 
---
> #line 125 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
> static void drbd_endio_write_sec_final(struct drbd_peer_request *peer_req ) 
15686c15516
<   sector_t e_sector ;
---
>   struct drbd_interval i ;
15688c15518
<   int is_syncer_req ;
---
>   u64 block_id ;
15692,15693d15521
<   int tmp___1 ;
<   int tmp___2 ;
15696c15524
< #line 196
---
> #line 127
15698,15717c15526,15536
< #line 197
<   mdev = e->mdev;
< #line 203
<   if (e->ldv_49189.block_id == 0ULL) {
< #line 203
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( e->block_id != ID_VACANT ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared",
<             203);
<   } else {
< 
<   }
< #line 209
<   e_sector = e->sector;
< #line 210
<   do_al_complete_io = (int )e->flags & 1;
< #line 211
<   is_syncer_req = e->ldv_49189.block_id == 0xffffffffffffffffULL;
< #line 213
<   tmp = spinlock_check(& mdev->req_lock);
< #line 213
---
> #line 128
>   mdev = peer_req->w.ldv_50388.mdev;
> #line 138
>   i = peer_req->i;
> #line 139
>   do_al_complete_io = (int )peer_req->flags & 1;
> #line 140
>   block_id = peer_req->ldv_50490.block_id;
> #line 142
>   tmp = spinlock_check(& (mdev->tconn)->req_lock);
> #line 142
15719,15741c15538,15548
< #line 214
<   mdev->writ_cnt = mdev->writ_cnt + (e->size >> 9);
< #line 215
<   list_del(& e->w.list);
< #line 216
<   list_add_tail(& e->w.list, & mdev->done_ee);
< #line 223
<   if (is_syncer_req != 0) {
< #line 223
<     tmp___0 = list_empty((struct list_head  const  *)(& mdev->sync_ee));
< #line 223
<     do_wake = tmp___0;
<   } else {
< #line 223
<     tmp___1 = list_empty((struct list_head  const  *)(& mdev->active_ee));
< #line 223
<     do_wake = tmp___1;
<   }
< #line 227
<   tmp___2 = constant_test_bit(3U, (unsigned long const volatile   *)(& e->flags));
< #line 227
<   if (tmp___2 != 0) {
< #line 228
---
> #line 143
>   mdev->writ_cnt = mdev->writ_cnt + (peer_req->i.size >> 9);
> #line 144
>   list_move_tail(& peer_req->w.list, & mdev->done_ee);
> #line 154
>   do_wake = list_empty((struct list_head  const  *)(block_id == 0xffffffffffffffffULL ? & mdev->sync_ee : & mdev->active_ee));
> #line 156
>   tmp___0 = constant_test_bit(3U, (unsigned long const volatile   *)(& peer_req->flags));
> #line 156
>   if (tmp___0 != 0) {
> #line 157
15746,15751c15553,15558
< #line 229
<   spin_unlock_irqrestore(& mdev->req_lock, flags);
< #line 231
<   if (is_syncer_req != 0) {
< #line 232
<     drbd_rs_complete_io(mdev, e_sector);
---
> #line 158
>   spin_unlock_irqrestore(& (mdev->tconn)->req_lock, flags);
> #line 160
>   if (block_id == 0xffffffffffffffffULL) {
> #line 161
>     drbd_rs_complete_io(mdev, i.sector);
15755c15562
< #line 234
---
> #line 163
15757c15564
< #line 235
---
> #line 164
15762c15569
< #line 237
---
> #line 166
15764,15765c15571,15572
< #line 238
<     drbd_al_complete_io(mdev, e_sector);
---
> #line 167
>     drbd_al_complete_io(mdev, & i);
15769,15771c15576,15578
< #line 240
<   wake_asender(mdev);
< #line 241
---
> #line 169
>   wake_asender(mdev->tconn);
> #line 170
15773c15580
< #line 242
---
> #line 171
15777,15778c15584,15585
< #line 247 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void drbd_endio_sec(struct bio *bio , int error ) 
---
> #line 176 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
> void drbd_peer_request_endio(struct bio *bio , int error ) 
15780c15587
<   struct drbd_epoch_entry *e ;
---
>   struct drbd_peer_request *peer_req ;
15789,15793c15596,15600
< #line 249
<   e = (struct drbd_epoch_entry *)bio->bi_private;
< #line 250
<   mdev = e->mdev;
< #line 251
---
> #line 178
>   peer_req = (struct drbd_peer_request *)bio->bi_private;
> #line 179
>   mdev = peer_req->w.ldv_50388.mdev;
> #line 180
15795c15602
< #line 252
---
> #line 181
15797c15604
< #line 254
---
> #line 183
15799,15801c15606,15608
< #line 254
<     tmp = ___ratelimit(& drbd_ratelimit_state, "drbd_endio_sec");
< #line 254
---
> #line 183
>     tmp = ___ratelimit(& drbd_ratelimit_state, "drbd_peer_request_endio");
> #line 183
15803c15610
< #line 255
---
> #line 184
15805c15612
<                is_write != 0 ? (char *)"write" : (char *)"read", error, (unsigned long long )e->sector);
---
>                is_write != 0 ? (char *)"write" : (char *)"read", error, (unsigned long long )peer_req->i.sector);
15812c15619
< #line 258
---
> #line 187
15814,15816c15621,15623
< #line 259
<     tmp___0 = ___ratelimit(& drbd_ratelimit_state, "drbd_endio_sec");
< #line 259
---
> #line 188
>     tmp___0 = ___ratelimit(& drbd_ratelimit_state, "drbd_peer_request_endio");
> #line 188
15818c15625
< #line 260
---
> #line 189
15820c15627
<                is_write != 0 ? (char *)"write" : (char *)"read", (unsigned long long )e->sector);
---
>                is_write != 0 ? (char *)"write" : (char *)"read", (unsigned long long )peer_req->i.sector);
15824c15631
< #line 266
---
> #line 195
15829c15636
< #line 269
---
> #line 198
15831,15832c15638,15639
< #line 270
<     set_bit(3U, (unsigned long volatile   *)(& e->flags));
---
> #line 199
>     set_bit(3U, (unsigned long volatile   *)(& peer_req->flags));
15836c15643
< #line 272
---
> #line 201
15838,15840c15645,15647
< #line 273
<   tmp___1 = atomic_dec_and_test(& e->pending_bios);
< #line 273
---
> #line 202
>   tmp___1 = atomic_dec_and_test(& peer_req->pending_bios);
> #line 202
15842c15649
< #line 274
---
> #line 203
15844,15845c15651,15652
< #line 275
<       drbd_endio_write_sec_final(e);
---
> #line 204
>       drbd_endio_write_sec_final(peer_req);
15847,15848c15654,15655
< #line 277
<       drbd_endio_read_sec_final(e);
---
> #line 206
>       drbd_endio_read_sec_final(peer_req);
15853c15660
< #line 278
---
> #line 207
15857,15858c15664,15665
< #line 283 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void drbd_endio_pri(struct bio *bio , int error ) 
---
> #line 212 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
> void drbd_request_endio(struct bio *bio , int error ) 
15873c15680
< #line 286
---
> #line 215
15875,15877c15682,15684
< #line 287
<   mdev = req->mdev;
< #line 290
---
> #line 216
>   mdev = req->w.ldv_50388.mdev;
> #line 219
15879c15686
< #line 292
---
> #line 221
15881c15688
< #line 293
---
> #line 222
15884c15691
< #line 298
---
> #line 227
15889,15891c15696,15698
< #line 329
<   tmp___0 = __builtin_expect((req->rq_state & 8UL) != 0UL, 0L);
< #line 329
---
> #line 259
>   tmp___0 = __builtin_expect(((unsigned long )req->rq_state & 8UL) != 0UL, 0L);
> #line 259
15893,15895c15700,15702
< #line 330
<     tmp = ___ratelimit(& drbd_ratelimit_state, "drbd_endio_pri");
< #line 330
---
> #line 260
>     tmp = ___ratelimit(& drbd_ratelimit_state, "drbd_request_endio");
> #line 260
15897c15704
< #line 331
---
> #line 261
15902c15709
< #line 333
---
> #line 263
15904c15711
< #line 334
---
> #line 264
15912c15719
< #line 338
---
> #line 268
15914c15721
< #line 338
---
> #line 268
15916,15917c15723,15724
< #line 339
<     what = (int )bio->bi_rw & 1 ? write_completed_with_error : ((bio->bi_rw & 8193UL) == 0UL ? read_completed_with_error : read_ahead_completed_with_error);
---
> #line 269
>     what = (int )bio->bi_rw & 1 ? WRITE_COMPLETED_WITH_ERROR : ((bio->bi_rw & 8193UL) == 0UL ? READ_COMPLETED_WITH_ERROR : READ_AHEAD_COMPLETED_WITH_ERROR);
15919,15920c15726,15727
< #line 345
<     what = completed_ok;
---
> #line 275
>     what = COMPLETED_OK;
15922c15729
< #line 347
---
> #line 277
15924c15731
< #line 348
---
> #line 278
15926c15733
< #line 348
---
> #line 278
15928,15930c15735,15737
< #line 351
<   tmp___3 = spinlock_check(& mdev->req_lock);
< #line 351
---
> #line 281
>   tmp___3 = spinlock_check(& (mdev->tconn)->req_lock);
> #line 281
15932c15739
< #line 352
---
> #line 282
15934,15936c15741,15743
< #line 353
<   spin_unlock_irqrestore(& mdev->req_lock, flags);
< #line 354
---
> #line 283
>   spin_unlock_irqrestore(& (mdev->tconn)->req_lock, flags);
> #line 284
15938c15745
< #line 356
---
> #line 286
15940c15747
< #line 357
---
> #line 287
15945c15752
< #line 358
---
> #line 288
15949,15983c15756,15757
< #line 360 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< int w_read_retry_remote(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) 
< { 
<   struct drbd_request *req ;
<   struct drbd_work  const  *__mptr ;
<   int tmp ;
< 
<   {
< #line 362
<   __mptr = (struct drbd_work  const  *)w;
< #line 362
<   req = (struct drbd_request *)__mptr;
< #line 368
<   spin_lock_irq(& mdev->req_lock);
< #line 369
<   if (cancel != 0 || *((unsigned int *)mdev + 569UL) != 65536U) {
< #line 370
<     _req_mod(req, read_retry_remote_canceled);
< #line 371
<     spin_unlock_irq(& mdev->req_lock);
< #line 372
<     return (1);
<   } else {
< 
<   }
< #line 374
<   spin_unlock_irq(& mdev->req_lock);
< #line 376
<   tmp = w_send_read_req(mdev, w, 0);
< #line 376
<   return (tmp);
< }
< }
< #line 379 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void drbd_csum_ee(struct drbd_conf *mdev , struct crypto_hash *tfm , struct drbd_epoch_entry *e ,
---
> #line 290 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
> void drbd_csum_ee(struct drbd_conf *mdev , struct crypto_hash *tfm , struct drbd_peer_request *peer_req ,
15993,15995c15767,15769
< #line 383
<   page = e->pages;
< #line 387
---
> #line 295
>   page = peer_req->pages;
> #line 299
15997c15771
< #line 388
---
> #line 300
15999c15773
< #line 390
---
> #line 302
16001c15775
< #line 391
---
> #line 303
16003,16006c15777,15780
< #line 393
<   goto ldv_51565;
<   ldv_51564: 
< #line 395
---
> #line 305
>   goto ldv_51886;
>   ldv_51885: 
> #line 307
16008c15782
< #line 396
---
> #line 308
16010c15784
< #line 397
---
> #line 309
16012,16013c15786,15787
<   ldv_51565: 
< #line 393
---
>   ldv_51886: 
> #line 305
16015c15789
< #line 393
---
> #line 305
16017,16018c15791,15792
< #line 394
<     goto ldv_51564;
---
> #line 306
>     goto ldv_51885;
16022,16024c15796,15798
< #line 400
<   len = e->size & 4095U;
< #line 401
---
> #line 312
>   len = peer_req->i.size & 4095U;
> #line 313
16026c15800
< #line 402
---
> #line 314
16028c15802
< #line 403
---
> #line 315
16030c15804
< #line 404
---
> #line 316
16034c15808
< #line 406 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
---
> #line 318 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
16044c15818
< #line 413
---
> #line 325
16046c15820
< #line 414
---
> #line 326
16048c15822
< #line 416
---
> #line 328
16050c15824
< #line 417
---
> #line 329
16052c15826
< #line 419
---
> #line 331
16054c15828
< #line 419
---
> #line 331
16056,16059c15830,15833
< #line 419
<   goto ldv_51578;
<   ldv_51577: 
< #line 420
---
> #line 331
>   goto ldv_51899;
>   ldv_51898: 
> #line 332
16061c15835
< #line 421
---
> #line 333
16063c15837
< #line 419
---
> #line 331
16065c15839
< #line 419
---
> #line 331
16067,16068c15841,15842
<   ldv_51578: ;
< #line 419
---
>   ldv_51899: ;
> #line 331
16070,16071c15844,15845
< #line 420
<     goto ldv_51577;
---
> #line 332
>     goto ldv_51898;
16075c15849
< #line 423
---
> #line 335
16077c15851
< #line 424
---
> #line 336
16081,16082c15855,15856
< #line 427 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< int w_e_send_csum(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) 
---
> #line 339 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
> static int w_e_send_csum(struct drbd_work *w , int cancel ) 
16084c15858
<   struct drbd_epoch_entry *e ;
---
>   struct drbd_peer_request *peer_req ;
16085a15860
>   struct drbd_conf *mdev ;
16088c15863
<   int ok ;
---
>   int err ;
16097c15872
< #line 429
---
> #line 341
16099,16112c15874,15880
< #line 429
<   e = (struct drbd_epoch_entry *)__mptr;
< #line 432
<   ok = 1;
< #line 434
<   if (e->ldv_49189.block_id != 2205466966ULL) {
< #line 434
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( e->block_id == DRBD_MAGIC + 0xbeef ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared",
<             434);
<   } else {
< 
<   }
< #line 436
---
> #line 341
>   peer_req = (struct drbd_peer_request *)__mptr;
> #line 342
>   mdev = w->ldv_50388.mdev;
> #line 345
>   err = 0;
> #line 347
16114c15882
< #line 436
---
> #line 347
16116c15884
< #line 437
---
> #line 348
16121,16123c15889,15891
< #line 439
<   tmp___0 = __builtin_expect((e->flags & 8UL) != 0UL, 1L);
< #line 439
---
> #line 350
>   tmp___0 = __builtin_expect((peer_req->flags & 8UL) != 0UL, 0L);
> #line 350
16125c15893
< #line 440
---
> #line 351
16130,16132c15898,15900
< #line 442
<   tmp___1 = crypto_hash_digestsize(mdev->csums_tfm);
< #line 442
---
> #line 353
>   tmp___1 = crypto_hash_digestsize((mdev->tconn)->csums_tfm);
> #line 353
16134c15902
< #line 443
---
> #line 354
16136c15904
< #line 444
---
> #line 355
16138,16148c15906,15916
< #line 445
<     sector = e->sector;
< #line 446
<     size = e->size;
< #line 447
<     drbd_csum_ee(mdev, mdev->csums_tfm, e, digest);
< #line 453
<     drbd_free_some_ee(mdev, e, 0);
< #line 454
<     e = 0;
< #line 455
---
> #line 356
>     sector = peer_req->i.sector;
> #line 357
>     size = peer_req->i.size;
> #line 358
>     drbd_csum_ee(mdev, (mdev->tconn)->csums_tfm, peer_req, digest);
> #line 364
>     __drbd_free_peer_req(mdev, peer_req, 0);
> #line 365
>     peer_req = 0;
> #line 366
16150,16152c15918,15920
< #line 456
<     ok = drbd_send_drequest_csum(mdev, sector, (int )size, digest, digest_size, P_CSUM_RS_REQUEST);
< #line 459
---
> #line 367
>     err = drbd_send_drequest_csum(mdev, sector, (int )size, digest, digest_size, P_CSUM_RS_REQUEST);
> #line 370
16155c15923
< #line 461
---
> #line 372
16157,16158c15925,15926
< #line 462
<     ok = 0;
---
> #line 373
>     err = -12;
16161,16164c15929,15932
< #line 466
<   if ((unsigned long )e != (unsigned long )((struct drbd_epoch_entry *)0)) {
< #line 467
<     drbd_free_some_ee(mdev, e, 0);
---
> #line 377
>   if ((unsigned long )peer_req != (unsigned long )((struct drbd_peer_request *)0)) {
> #line 378
>     __drbd_free_peer_req(mdev, peer_req, 0);
16168,16170c15936,15938
< #line 469
<   tmp___2 = __builtin_expect(ok == 0, 0L);
< #line 469
---
> #line 380
>   tmp___2 = __builtin_expect(err != 0, 0L);
> #line 380
16172c15940
< #line 470
---
> #line 381
16177,16178c15945,15946
< #line 471
<   return (ok);
---
> #line 382
>   return (err);
16181c15949
< #line 476 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
---
> #line 387 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
16184c15952
<   struct drbd_epoch_entry *e ;
---
>   struct drbd_peer_request *peer_req ;
16190c15958
< #line 480
---
> #line 391
16192c15960
< #line 480
---
> #line 391
16194c15962
< #line 481
---
> #line 392
16199c15967
< #line 483
---
> #line 394
16201c15969
< #line 483
---
> #line 394
16203c15971
< #line 484
---
> #line 395
16208,16212c15976,15981
< #line 488
<   e = drbd_alloc_ee(mdev, 2205466966ULL, sector, (unsigned int )size, 514U);
< #line 489
<   if ((unsigned long )e == (unsigned long )((struct drbd_epoch_entry *)0)) {
< #line 490
---
> #line 399
>   peer_req = drbd_alloc_peer_req(mdev, 0xffffffffffffffffULL, sector, (unsigned int )size,
>                                  514U);
> #line 401
>   if ((unsigned long )peer_req == (unsigned long )((struct drbd_peer_request *)0)) {
> #line 402
16217,16225c15986,15994
< #line 492
<   e->w.cb = & w_e_send_csum;
< #line 493
<   spin_lock_irq(& mdev->req_lock);
< #line 494
<   list_add(& e->w.list, & mdev->read_ee);
< #line 495
<   spin_unlock_irq(& mdev->req_lock);
< #line 497
---
> #line 404
>   peer_req->w.cb = & w_e_send_csum;
> #line 405
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 406
>   list_add(& peer_req->w.list, & mdev->read_ee);
> #line 407
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 409
16227,16229c15996,15998
< #line 498
<   tmp___1 = drbd_submit_ee(mdev, e, 0U, 3);
< #line 498
---
> #line 410
>   tmp___1 = drbd_submit_peer_request(mdev, peer_req, 0U, 3);
> #line 410
16231c16000
< #line 499
---
> #line 411
16236,16243c16005,16012
< #line 505
<   spin_lock_irq(& mdev->req_lock);
< #line 506
<   list_del(& e->w.list);
< #line 507
<   spin_unlock_irq(& mdev->req_lock);
< #line 509
<   drbd_free_some_ee(mdev, e, 0);
---
> #line 417
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 418
>   list_del(& peer_req->w.list);
> #line 419
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 421
>   __drbd_free_peer_req(mdev, peer_req, 0);
16245c16014
< #line 511
---
> #line 423
16247c16016
< #line 512
---
> #line 424
16251,16252c16020,16021
< #line 515 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< int w_resync_timer(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) 
---
> #line 427 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
> int w_resync_timer(struct drbd_work *w , int cancel ) 
16254c16023
< 
---
>   struct drbd_conf *mdev ;
16257,16258c16026,16029
< #line 517
<   switch ((int )mdev->state.ldv_39979.conn) {
---
> #line 429
>   mdev = w->ldv_50388.mdev;
> #line 430
>   switch ((int )mdev->state.ldv_50103.conn) {
16260,16263c16031,16034
< #line 519
<   w_make_ov_request(mdev, w, cancel);
< #line 520
<   goto ldv_51607;
---
> #line 432
>   w_make_ov_request(w, cancel);
> #line 433
>   goto ldv_51928;
16265,16268c16036,16039
< #line 522
<   w_make_resync_request(mdev, w, cancel);
< #line 523
<   goto ldv_51607;
---
> #line 435
>   w_make_resync_request(w, cancel);
> #line 436
>   goto ldv_51928;
16270,16272c16041,16043
<   ldv_51607: ;
< #line 526
<   return (1);
---
>   ldv_51928: ;
> #line 439
>   return (0);
16275c16046
< #line 529 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
---
> #line 442 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
16282c16053
< #line 531
---
> #line 444
16284c16055
< #line 533
---
> #line 446
16286c16057
< #line 533
---
> #line 446
16288,16289c16059,16060
< #line 534
<     drbd_queue_work(& mdev->data.work, & mdev->resync_work);
---
> #line 447
>     drbd_queue_work(& (mdev->tconn)->sender_work, & mdev->resync_work);
16293c16064
< #line 535
---
> #line 448
16297c16068
< #line 537 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
---
> #line 450 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
16303c16074
< #line 541
---
> #line 454
16305,16310c16076,16081
< #line 541
<   goto ldv_51619;
<   ldv_51618: 
< #line 542
<   *(fb->values + (unsigned long )i) = value;
< #line 541
---
> #line 454
>   goto ldv_51940;
>   ldv_51939: 
> #line 455
>   fb->values[i] = value;
> #line 454
16312,16313c16083,16084
<   ldv_51619: ;
< #line 541
---
>   ldv_51940: ;
> #line 454
16315,16316c16086,16087
< #line 542
<     goto ldv_51618;
---
> #line 455
>     goto ldv_51939;
16321c16092
< #line 546
---
> #line 459
16325c16096
< #line 545 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
---
> #line 458 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
16332,16334c16103,16105
< #line 549
<   ov = *(fb->values + (unsigned long )fb->head_index);
< #line 550
---
> #line 462
>   ov = fb->values[fb->head_index];
> #line 463
16336c16107
< #line 550
---
> #line 463
16338,16340c16109,16111
< #line 550
<   *(fb->values + (unsigned long )tmp) = value;
< #line 552
---
> #line 463
>   fb->values[tmp] = value;
> #line 465
16342c16113
< #line 553
---
> #line 466
16347c16118
< #line 555
---
> #line 468
16351c16122
< #line 558 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
---
> #line 471 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
16357c16128
< #line 562
---
> #line 475
16359,16364c16130,16135
< #line 562
<   goto ldv_51632;
<   ldv_51631: 
< #line 563
<   *(fb->values + (unsigned long )i) = *(fb->values + (unsigned long )i) + value;
< #line 562
---
> #line 475
>   goto ldv_51953;
>   ldv_51952: 
> #line 476
>   fb->values[i] = fb->values[i] + value;
> #line 475
16366,16367c16137,16138
<   ldv_51632: ;
< #line 562
---
>   ldv_51953: ;
> #line 475
16369,16370c16140,16141
< #line 563
<     goto ldv_51631;
---
> #line 476
>     goto ldv_51952;
16375c16146
< #line 567
---
> #line 480
16379c16150,16178
< #line 566 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
---
> #line 479 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
> struct fifo_buffer *fifo_alloc(int fifo_size ) 
> { 
>   struct fifo_buffer *fb ;
>   void *tmp ;
> 
>   {
> #line 483
>   tmp = kzalloc(((unsigned long )fifo_size + 3UL) * 4UL, 16U);
> #line 483
>   fb = (struct fifo_buffer *)tmp;
> #line 484
>   if ((unsigned long )fb == (unsigned long )((struct fifo_buffer *)0)) {
> #line 485
>     return (0);
>   } else {
> 
>   }
> #line 487
>   fb->head_index = 0U;
> #line 488
>   fb->size = (unsigned int )fifo_size;
> #line 489
>   fb->total = 0;
> #line 491
>   return (fb);
> }
> }
> #line 494 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
16381a16181
>   struct disk_conf *dc ;
16389a16190
>   struct fifo_buffer *plan ;
16390a16192,16199
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp___0 ;
>   int tmp___1 ;
>   struct fifo_buffer *_________p1___0 ;
>   bool __warned___0 ;
>   int tmp___2 ;
>   int tmp___3 ;
16393c16202
< #line 577
---
> #line 507
16395c16204
< #line 577
---
> #line 507
16397c16206
< #line 578
---
> #line 508
16399,16403c16208,16256
< #line 580
<   spin_lock(& mdev->peer_seq_lock);
< #line 582
<   steps = (int )mdev->rs_plan_s.size;
< #line 584
---
> #line 510
>   _________p1 = *((struct disk_conf * volatile  *)(& (mdev->ldev)->disk_conf));
> #line 510
>   tmp___0 = debug_lockdep_rcu_enabled();
> #line 510
>   if (tmp___0 != 0 && ! __warned) {
> #line 510
>     tmp___1 = rcu_read_lock_held();
> #line 510
>     if (tmp___1 == 0 && 1) {
> #line 510
>       __warned = 1;
> #line 510
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared",
>                              510, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 510
>   dc = _________p1;
> #line 511
>   _________p1___0 = *((struct fifo_buffer * volatile  *)(& mdev->rs_plan_s));
> #line 511
>   tmp___2 = debug_lockdep_rcu_enabled();
> #line 511
>   if (tmp___2 != 0 && ! __warned___0) {
> #line 511
>     tmp___3 = rcu_read_lock_held();
> #line 511
>     if (tmp___3 == 0 && 1) {
> #line 511
>       __warned___0 = 1;
> #line 511
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared",
>                              511, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 511
>   plan = _________p1___0;
> #line 513
>   steps = (int )plan->size;
> #line 515
16405,16406c16258,16259
< #line 585
<     want = (unsigned int )(((mdev->sync_conf.rate * 50) / 250) * steps);
---
> #line 516
>     want = ((dc->resync_rate * 50U) / 250U) * (__u32 )steps;
16408,16409c16261,16262
< #line 587
<     want = mdev->sync_conf.c_fill_target != 0 ? (unsigned int )mdev->sync_conf.c_fill_target : (((unsigned int )mdev->sync_conf.c_delay_target * sect_in) * 250U) / 250U;
---
> #line 518
>     want = dc->c_fill_target != 0U ? dc->c_fill_target : ((dc->c_delay_target * sect_in) * 250U) / 250U;
16411,16413c16264,16266
< #line 591
<   correction = (int )((want - (unsigned int )mdev->rs_in_flight) - (unsigned int )mdev->rs_planed);
< #line 594
---
> #line 522
>   correction = (int )((want - (unsigned int )mdev->rs_in_flight) - (unsigned int )plan->total);
> #line 525
16415,16425c16268,16276
< #line 595
<   fifo_add_val(& mdev->rs_plan_s, cps);
< #line 596
<   mdev->rs_planed = mdev->rs_planed + cps * steps;
< #line 599
<   curr_corr = fifo_push(& mdev->rs_plan_s, 0);
< #line 600
<   spin_unlock(& mdev->peer_seq_lock);
< #line 601
<   mdev->rs_planed = mdev->rs_planed - curr_corr;
< #line 603
---
> #line 526
>   fifo_add_val(plan, cps);
> #line 527
>   plan->total = plan->total + cps * steps;
> #line 530
>   curr_corr = fifo_push(plan, 0);
> #line 531
>   plan->total = plan->total - curr_corr;
> #line 533
16427c16278
< #line 604
---
> #line 534
16429c16280
< #line 605
---
> #line 535
16434,16436c16285,16287
< #line 607
<   max_sect = (mdev->sync_conf.c_max_rate * 50) / 250;
< #line 608
---
> #line 537
>   max_sect = (int )((dc->c_max_rate * 50U) / 250U);
> #line 538
16438c16289
< #line 609
---
> #line 539
16443c16294
< #line 617
---
> #line 547
16447c16298
< #line 620 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
---
> #line 550 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
16451a16303,16310
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp___0 ;
>   int tmp___1 ;
>   struct fifo_buffer *_________p1___0 ;
>   bool __warned___0 ;
>   int tmp___2 ;
>   int tmp___3 ;
16454,16456c16313,16338
< #line 623
<   if (mdev->rs_plan_s.size != 0U) {
< #line 624
---
> #line 554
>   rcu_read_lock();
> #line 555
>   _________p1___0 = *((struct fifo_buffer * volatile  *)(& mdev->rs_plan_s));
> #line 555
>   tmp___2 = debug_lockdep_rcu_enabled();
> #line 555
>   if (tmp___2 != 0 && ! __warned___0) {
> #line 555
>     tmp___3 = rcu_read_lock_held();
> #line 555
>     if (tmp___3 == 0 && 1) {
> #line 555
>       __warned___0 = 1;
> #line 555
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared",
>                              555, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 555
>   if (_________p1___0->size != 0U) {
> #line 556
16458c16340
< #line 624
---
> #line 556
16460c16342
< #line 625
---
> #line 557
16463,16465c16345,16368
< #line 627
<     mdev->c_sync_rate = mdev->sync_conf.rate;
< #line 628
---
> #line 559
>     _________p1 = *((struct disk_conf * volatile  *)(& (mdev->ldev)->disk_conf));
> #line 559
>     tmp___0 = debug_lockdep_rcu_enabled();
> #line 559
>     if (tmp___0 != 0 && ! __warned) {
> #line 559
>       tmp___1 = rcu_read_lock_held();
> #line 559
>       if (tmp___1 == 0 && 1) {
> #line 559
>         __warned = 1;
> #line 559
>         lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared",
>                                559, "suspicious rcu_dereference_check() usage");
>       } else {
> 
>       }
>     } else {
> 
>     }
> #line 559
>     mdev->c_sync_rate = (int )_________p1->resync_rate;
> #line 560
16468c16371,16373
< #line 633
---
> #line 562
>   rcu_read_unlock();
> #line 566
16472,16473c16377,16378
< #line 636 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< static int w_make_resync_request(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) 
---
> #line 569 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
> int w_make_resync_request(struct drbd_work *w , int cancel ) 
16474a16380
>   struct drbd_conf *mdev ;
16496,16499c16402,16403
<   int tmp___9 ;
<   int tmp___10 ;
<   int tmp___11 ;
<   unsigned long tmp___12 ;
---
>   int err ;
>   unsigned long tmp___9 ;
16502c16406,16408
< #line 641
---
> #line 571
>   mdev = w->ldv_50388.mdev;
> #line 574
16504c16410
< #line 641
---
> #line 574
16506c16412
< #line 645
---
> #line 578
16508c16414
< #line 647
---
> #line 580
16510c16416
< #line 647
---
> #line 580
16512,16513c16418,16419
< #line 648
<     return (1);
---
> #line 581
>     return (0);
16517c16423
< #line 650
---
> #line 583
16519c16425
< #line 652
---
> #line 585
16521,16522c16427,16428
< #line 653
<     return (1);
---
> #line 586
>     return (0);
16526c16432
< #line 656
---
> #line 589
16528c16434
< #line 656
---
> #line 589
16530c16436
< #line 661
---
> #line 594
16532,16533c16438,16439
< #line 662
<     return (1);
---
> #line 595
>     return (0);
16537c16443
< #line 665
---
> #line 598
16539c16445
< #line 665
---
> #line 598
16541c16447
< #line 666
---
> #line 599
16543c16449
< #line 667
---
> #line 600
16545c16451
< #line 668
---
> #line 601
16550c16456
< #line 670
---
> #line 603
16552,16562c16458,16468
< #line 670
<   goto ldv_51680;
<   ldv_51679: 
< #line 672
<   ldv_mutex_lock_77(& mdev->data.mutex);
< #line 673
<   if ((unsigned long )mdev->data.socket != (unsigned long )((struct socket *)0)) {
< #line 674
<     queued = ((mdev->data.socket)->sk)->sk_wmem_queued;
< #line 675
<     sndbuf = ((mdev->data.socket)->sk)->sk_sndbuf;
---
> #line 603
>   goto ldv_52017;
>   ldv_52016: 
> #line 605
>   mutex_lock_nested(& (mdev->tconn)->data.mutex, 0U);
> #line 606
>   if ((unsigned long )(mdev->tconn)->data.socket != (unsigned long )((struct socket *)0)) {
> #line 607
>     queued = (((mdev->tconn)->data.socket)->sk)->sk_wmem_queued;
> #line 608
>     sndbuf = (((mdev->tconn)->data.socket)->sk)->sk_sndbuf;
16564c16470
< #line 677
---
> #line 610
16566c16472
< #line 678
---
> #line 611
16569,16571c16475,16477
< #line 680
<   ldv_mutex_unlock_78(& mdev->data.mutex);
< #line 681
---
> #line 613
>   mutex_unlock(& (mdev->tconn)->data.mutex);
> #line 614
16573c16479
< #line 682
---
> #line 615
16579c16485
< #line 685
---
> #line 618
16581c16487
< #line 686
---
> #line 619
16583c16489
< #line 688
---
> #line 621
16585c16491
< #line 689
---
> #line 622
16587c16493
< #line 690
---
> #line 623
16589,16590c16495,16496
< #line 691
<     return (1);
---
> #line 624
>     return (0);
16594c16500
< #line 694
---
> #line 627
16596c16502
< #line 696
---
> #line 629
16598c16504
< #line 696
---
> #line 629
16600c16506
< #line 698
---
> #line 631
16602c16508
< #line 699
---
> #line 632
16605c16511
< #line 696
---
> #line 629
16607c16513
< #line 696
---
> #line 629
16609c16515
< #line 698
---
> #line 631
16611c16517
< #line 699
---
> #line 632
16617c16523
< #line 701
---
> #line 634
16619c16525
< #line 703
---
> #line 636
16621c16527
< #line 703
---
> #line 636
16623c16529
< #line 703
---
> #line 636
16625c16531
< #line 704
---
> #line 637
16627c16533
< #line 705
---
> #line 638
16632c16538
< #line 715
---
> #line 648
16634c16540
< #line 716
---
> #line 649
16636,16637c16542,16543
<   ldv_51668: ;
< #line 718
---
>   ldv_52007: ;
> #line 651
16639,16640c16545,16546
< #line 719
<     goto ldv_51667;
---
> #line 652
>     goto ldv_52006;
16644c16550
< #line 722
---
> #line 655
16646,16647c16552,16553
< #line 723
<     goto ldv_51667;
---
> #line 656
>     goto ldv_52006;
16651c16557
< #line 726
---
> #line 659
16653,16654c16559,16560
< #line 727
<     goto ldv_51667;
---
> #line 660
>     goto ldv_52006;
16658c16564
< #line 733
---
> #line 666
16660c16566
< #line 733
---
> #line 666
16662,16663c16568,16569
< #line 734
<     goto ldv_51667;
---
> #line 667
>     goto ldv_52006;
16667c16573
< #line 735
---
> #line 668
16669c16575
< #line 736
---
> #line 669
16671c16577
< #line 737
---
> #line 670
16673c16579
< #line 738
---
> #line 671
16678c16584
< #line 739
---
> #line 672
16680,16683c16586,16589
< #line 740
<   goto ldv_51668;
<   ldv_51667: ;
< #line 743
---
> #line 673
>   goto ldv_52007;
>   ldv_52006: ;
> #line 676
16685c16591
< #line 744
---
> #line 677
16690c16596
< #line 748
---
> #line 681
16692c16598
< #line 749
---
> #line 682
16697,16699c16603,16605
< #line 750
<   if (mdev->agreed_pro_version > 88 && (unsigned long )mdev->csums_tfm != (unsigned long )((struct crypto_hash *)0)) {
< #line 751
---
> #line 683
>   if ((mdev->tconn)->agreed_pro_version > 88 && (unsigned long )(mdev->tconn)->csums_tfm != (unsigned long )((struct crypto_hash *)0)) {
> #line 684
16701c16607
< #line 751
---
> #line 684
16704c16610
< #line 753
---
> #line 686
16706,16707c16612,16613
< #line 754
<     return (0);
---
> #line 687
>     return (-5);
16709c16615
< #line 756
---
> #line 689
16711c16617
< #line 757
---
> #line 690
16713c16619
< #line 758
---
> #line 691
16715c16621
< #line 759
---
> #line 692
16718,16719c16624,16625
< #line 762
<     goto ldv_51672;
---
> #line 695
>     goto ldv_52011;
16721,16726c16627,16632
< #line 764
<     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"),
<                          "i" (764), "i" (12UL));
<     ldv_51674: ;
< #line 764
<     goto ldv_51674;
---
> #line 697
>     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"),
>                          "i" (697), "i" (12UL));
>     ldv_52013: ;
> #line 697
>     goto ldv_52013;
16728c16634
<     ldv_51672: ;
---
>     ldv_52011: ;
16730c16636
< #line 767
---
> #line 702
16732,16736c16638,16642
< #line 768
<     tmp___11 = drbd_send_drequest(mdev, 9, sector, size, 0xffffffffffffffffULL);
< #line 768
<     if (tmp___11 == 0) {
< #line 770
---
> #line 703
>     err = drbd_send_drequest(mdev, 9, sector, size, 0xffffffffffffffffULL);
> #line 705
>     if (err != 0) {
> #line 706
16738,16752c16644,16646
< #line 771
<       atomic_dec(& mdev->rs_pending_cnt);
< #line 771
<       tmp___10 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
< #line 771
<       if (tmp___10 < 0) {
< #line 771
<         tmp___9 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
< #line 771
<         dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: rs_pending_cnt = %d < 0 !\n",
<                 "w_make_resync_request", 771, tmp___9);
<       } else {
< 
<       }
< #line 772
---
> #line 707
>       _dec_rs_pending(mdev, "w_make_resync_request", 707);
> #line 708
16754,16755c16648,16649
< #line 773
<       return (0);
---
> #line 709
>       return (err);
16760c16654
< #line 670
---
> #line 603
16762,16763c16656,16657
<   ldv_51680: ;
< #line 670
---
>   ldv_52017: ;
> #line 603
16765,16766c16659,16660
< #line 671
<     goto ldv_51679;
---
> #line 604
>     goto ldv_52016;
16770,16774c16664,16668
< #line 778
<   tmp___12 = drbd_bm_bits(mdev);
< #line 778
<   if (mdev->bm_resync_fo >= tmp___12) {
< #line 785
---
> #line 714
>   tmp___9 = drbd_bm_bits(mdev);
> #line 714
>   if (mdev->bm_resync_fo >= tmp___9) {
> #line 721
16776,16777c16670,16671
< #line 786
<     return (1);
---
> #line 722
>     return (0);
16782c16676
< #line 790
---
> #line 726
16784c16678
< #line 791
---
> #line 727
16786c16680
< #line 792
---
> #line 728
16788,16789c16682,16683
< #line 793
<   return (1);
---
> #line 729
>   return (0);
16792,16793c16686,16687
< #line 796 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< static int w_make_ov_request(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) 
---
> #line 732 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
> static int w_make_ov_request(struct drbd_work *w , int cancel ) 
16794a16689
>   struct drbd_conf *mdev ;
16803c16698
<   int tmp___1 ;
---
>   bool tmp___1 ;
16810c16705,16707
< #line 800
---
> #line 734
>   mdev = w->ldv_50388.mdev;
> #line 737
16812c16709
< #line 800
---
> #line 737
16814c16711
< #line 801
---
> #line 738
16816c16713
< #line 803
---
> #line 740
16818c16715
< #line 803
---
> #line 740
16820c16717
< #line 804
---
> #line 741
16825c16722
< #line 806
---
> #line 743
16827c16724
< #line 808
---
> #line 745
16829c16726
< #line 809
---
> #line 746
16831,16834c16728,16731
< #line 809
<   goto ldv_51700;
<   ldv_51699: ;
< #line 810
---
> #line 746
>   goto ldv_52034;
>   ldv_52033: ;
> #line 747
16836c16733
< #line 811
---
> #line 748
16841,16843c16738,16762
< #line 816
<   stop_sector_reached = (bool )((i > 0 && mdev->agreed_pro_version > 96) && mdev->ov_stop_sector <= sector);
< #line 819
---
> #line 753
>   if (i > 0) {
> #line 753
>     tmp___1 = verify_can_do_stop_sector(mdev);
> #line 753
>     if ((int )tmp___1) {
> #line 753
>       if (mdev->ov_stop_sector <= sector) {
> #line 753
>         tmp___2 = 1;
>       } else {
> #line 753
>         tmp___2 = 0;
>       }
>     } else {
> #line 753
>       tmp___2 = 0;
>     }
>   } else {
> #line 753
>     tmp___2 = 0;
>   }
> #line 753
>   stop_sector_reached = (bool )tmp___2;
> #line 756
16845,16846c16764,16765
< #line 820
<     goto ldv_51693;
---
> #line 757
>     goto ldv_52030;
16850c16769
< #line 822
---
> #line 759
16852,16856c16771,16775
< #line 824
<   tmp___1 = drbd_rs_should_slow_down(mdev, sector);
< #line 824
<   if (tmp___1 != 0) {
< #line 826
---
> #line 761
>   tmp___3 = drbd_rs_should_slow_down(mdev, sector);
> #line 761
>   if (tmp___3 != 0) {
> #line 763
16858c16777
< #line 827
---
> #line 764
16861,16865c16780,16784
< #line 824
<     tmp___2 = drbd_try_rs_begin_io(mdev, sector);
< #line 824
<     if (tmp___2 != 0) {
< #line 826
---
> #line 761
>     tmp___4 = drbd_try_rs_begin_io(mdev, sector);
> #line 761
>     if (tmp___4 != 0) {
> #line 763
16867c16786
< #line 827
---
> #line 764
16873c16792
< #line 830
---
> #line 767
16875c16794
< #line 831
---
> #line 768
16880c16799
< #line 833
---
> #line 770
16882c16801
< #line 834
---
> #line 771
16884,16900c16803,16807
< #line 834
<   if (tmp___5 == 0) {
< #line 835
<     atomic_dec(& mdev->rs_pending_cnt);
< #line 835
<     tmp___4 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
< #line 835
<     if (tmp___4 < 0) {
< #line 835
<       tmp___3 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
< #line 835
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: rs_pending_cnt = %d < 0 !\n",
<               "w_make_ov_request", 835, tmp___3);
<     } else {
< 
<     }
< #line 836
---
> #line 771
>   if (tmp___5 != 0) {
> #line 772
>     _dec_rs_pending(mdev, "w_make_ov_request", 772);
> #line 773
16905c16812
< #line 838
---
> #line 775
16907c16814
< #line 809
---
> #line 746
16909,16910c16816,16817
<   ldv_51700: ;
< #line 809
---
>   ldv_52034: ;
> #line 746
16912,16913c16819,16820
< #line 810
<     goto ldv_51699;
---
> #line 747
>     goto ldv_52033;
16917,16918c16824,16825
<   ldv_51693: 
< #line 840
---
>   ldv_52030: 
> #line 777
16921c16828
< #line 843
---
> #line 780
16923c16830
< #line 844
---
> #line 781
16925c16832
< #line 845
---
> #line 782
16930c16837
< #line 846
---
> #line 783
16934,16935c16841,16842
< #line 850 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void start_resync_timer_fn(unsigned long data ) 
---
> #line 786 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
> int w_ov_finished(struct drbd_work *w , int cancel ) 
16940,16998c16847,16849
< #line 852
<   mdev = (struct drbd_conf *)data;
< #line 854
<   drbd_queue_work(& mdev->data.work, & mdev->start_resync_work);
< #line 855
<   return;
< }
< }
< #line 857 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< int w_start_resync(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) 
< { 
<   int tmp ;
<   int tmp___0 ;
< 
<   {
< #line 859
<   tmp = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 859
<   if (tmp != 0) {
< #line 860
<     dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "w_start_resync later...\n");
< #line 861
<     mdev->start_resync_timer.expires = (unsigned long )jiffies + 25UL;
< #line 862
<     add_timer(& mdev->start_resync_timer);
< #line 863
<     return (1);
<   } else {
< #line 859
<     tmp___0 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
< #line 859
<     if (tmp___0 != 0) {
< #line 860
<       dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "w_start_resync later...\n");
< #line 861
<       mdev->start_resync_timer.expires = (unsigned long )jiffies + 25UL;
< #line 862
<       add_timer(& mdev->start_resync_timer);
< #line 863
<       return (1);
<     } else {
< 
<     }
<   }
< #line 866
<   drbd_start_resync(mdev, C_SYNC_SOURCE);
< #line 867
<   drbd_clear_flag(mdev, AHEAD_TO_SYNC_SOURCE);
< #line 868
<   return (1);
< }
< }
< #line 871 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< int w_ov_finished(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) 
< { 
< 
< 
<   {
< #line 873
---
> #line 788
>   mdev = w->ldv_50388.mdev;
> #line 789
17000,17002c16851,16853
< #line 874
<   ov_oos_print(mdev);
< #line 875
---
> #line 790
>   ov_out_of_sync_print(mdev);
> #line 791
17004,17005c16855,16856
< #line 877
<   return (1);
---
> #line 793
>   return (0);
17008,17009c16859,16860
< #line 880 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< static int w_resync_finished(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) 
---
> #line 796 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
> static int w_resync_finished(struct drbd_work *w , int cancel ) 
17011c16862
< 
---
>   struct drbd_conf *mdev ;
17014c16865,16867
< #line 882
---
> #line 798
>   mdev = w->ldv_50388.mdev;
> #line 799
17016c16869
< #line 884
---
> #line 801
17018,17019c16871,16872
< #line 886
<   return (1);
---
> #line 803
>   return (0);
17022c16875
< #line 889 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
---
> #line 806 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
17024a16878
>   struct drbd_tconn *tconn ;
17031,17040c16885,16896
< #line 891
<   drbd_clear_flag(mdev, GOT_PING_ACK);
< #line 892
<   request_ping(mdev);
< #line 893
<   tmp = drbd_test_flag(mdev, GOT_PING_ACK);
< #line 893
<   if (tmp != 0 || (int )mdev->state.ldv_39979.conn <= 9) {
< #line 893
<     goto ldv_51723;
---
> #line 808
>   tconn = mdev->tconn;
> #line 810
>   clear_bit(4, (unsigned long volatile   *)(& tconn->flags));
> #line 811
>   request_ping(tconn);
> #line 812
>   tmp = constant_test_bit(4U, (unsigned long const volatile   *)(& tconn->flags));
> #line 812
>   if (tmp != 0 || (int )mdev->state.ldv_50103.conn <= 9) {
> #line 812
>     goto ldv_52049;
17044c16900
< #line 893
---
> #line 812
17046c16902
< #line 893
---
> #line 812
17048c16904
< #line 893
---
> #line 812
17050c16906
< #line 893
---
> #line 812
17052c16908
< #line 893
---
> #line 812
17054c16910
< #line 893
---
> #line 812
17056,17064c16912,16920
<   ldv_51726: 
< #line 893
<   prepare_to_wait(& mdev->misc_wait, & __wait, 2);
< #line 893
<   tmp___1 = drbd_test_flag(mdev, GOT_PING_ACK);
< #line 893
<   if (tmp___1 != 0 || (int )mdev->state.ldv_39979.conn <= 9) {
< #line 893
<     goto ldv_51725;
---
>   ldv_52052: 
> #line 812
>   prepare_to_wait(& tconn->ping_wait, & __wait, 2);
> #line 812
>   tmp___1 = constant_test_bit(4U, (unsigned long const volatile   *)(& tconn->flags));
> #line 812
>   if (tmp___1 != 0 || (int )mdev->state.ldv_50103.conn <= 9) {
> #line 812
>     goto ldv_52051;
17068c16924
< #line 893
---
> #line 812
17070,17076c16926,16932
< #line 893
<   goto ldv_51726;
<   ldv_51725: 
< #line 893
<   finish_wait(& mdev->misc_wait, & __wait);
<   ldv_51723: ;
< #line 896
---
> #line 812
>   goto ldv_52052;
>   ldv_52051: 
> #line 812
>   finish_wait(& tconn->ping_wait, & __wait);
>   ldv_52049: ;
> #line 815
17080c16936
< #line 897 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
---
> #line 816 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
17102c16958
< #line 903
---
> #line 822
17104c16960
< #line 904
---
> #line 823
17106c16962
< #line 909
---
> #line 828
17108c16964
< #line 909
---
> #line 828
17110c16966
< #line 915
---
> #line 834
17112,17114c16968,16970
< #line 916
<     tmp = kmalloc(24UL, 32U);
< #line 916
---
> #line 835
>     tmp = kmalloc(32UL, 32U);
> #line 835
17116c16972
< #line 917
---
> #line 836
17118c16974
< #line 918
---
> #line 837
17120,17122c16976,16980
< #line 919
<       drbd_queue_work(& mdev->data.work, w);
< #line 920
---
> #line 838
>       w->ldv_50388.mdev = mdev;
> #line 839
>       drbd_queue_work(& (mdev->tconn)->sender_work, w);
> #line 840
17127c16985
< #line 922
---
> #line 842
17132c16990
< #line 925
---
> #line 845
17134c16992
< #line 926
---
> #line 846
17136c16994
< #line 927
---
> #line 847
17141c16999
< #line 929
---
> #line 849
17143,17145c17001,17003
< #line 931
<   if ((unsigned int )*((unsigned short *)mdev + 1138UL) == 288U || (unsigned int )*((unsigned short *)mdev + 1138UL) == 304U) {
< #line 932
---
> #line 851
>   if ((unsigned int )*((unsigned short *)mdev + 374UL) == 288U || (unsigned int )*((unsigned short *)mdev + 374UL) == 304U) {
> #line 852
17150c17008
< #line 934
---
> #line 854
17152c17010
< #line 935
---
> #line 855
17154c17012
< #line 937
---
> #line 857
17156c17014
< #line 937
---
> #line 857
17158c17016
< #line 938
---
> #line 858
17163c17021
< #line 940
---
> #line 860
17165,17169c17023,17027
< #line 942
<   spin_lock_irq(& mdev->req_lock);
< #line 943
<   os = mdev->state;
< #line 945
---
> #line 862
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 863
>   os = drbd_read_state(mdev);
> #line 865
17171,17173c17029,17031
< #line 949
<   if ((int )os.ldv_39979.conn <= 10) {
< #line 950
---
> #line 869
>   if ((int )os.ldv_40604.conn <= 10) {
> #line 870
17178c17036
< #line 952
---
> #line 872
17180,17182c17038,17040
< #line 953
<   ns.ldv_39979.conn = 10U;
< #line 955
---
> #line 873
>   ns.ldv_40604.conn = 10U;
> #line 875
17186c17044
< #line 959
---
> #line 879
17188c17046
< #line 961
---
> #line 881
17190c17048
< #line 962
---
> #line 882
17192c17050
< #line 963
---
> #line 883
17195c17053
< #line 965
---
> #line 885
17198c17056
< #line 968
---
> #line 888
17200c17058
< #line 968
---
> #line 888
17202,17203c17060,17061
<                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared",
<                 968);
---
>                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared",
>                 888);
17207c17065
< #line 970
---
> #line 890
17209c17067
< #line 971
---
> #line 891
17214,17216c17072,17074
< #line 973
<       if ((unsigned long )mdev->csums_tfm != (unsigned long )((struct crypto_hash *)0) && mdev->rs_total != 0UL) {
< #line 974
---
> #line 893
>       if ((unsigned long )(mdev->tconn)->csums_tfm != (unsigned long )((struct crypto_hash *)0) && mdev->rs_total != 0UL) {
> #line 894
17218c17076
< #line 975
---
> #line 895
17220c17078
< #line 976
---
> #line 896
17222c17080
< #line 979
---
> #line 899
17233c17091
< #line 988
---
> #line 908
17235c17093
< #line 989
---
> #line 909
17238c17096
< #line 991
---
> #line 911
17240,17243c17098,17101
< #line 992
<       ns.ldv_39979.disk = 4U;
< #line 993
<       ns.ldv_39979.pdsk = 8U;
---
> #line 912
>       ns.ldv_40604.disk = 4U;
> #line 913
>       ns.ldv_40604.pdsk = 8U;
17245,17248c17103,17106
< #line 995
<       ns.ldv_39979.disk = 8U;
< #line 996
<       ns.ldv_39979.pdsk = 4U;
---
> #line 915
>       ns.ldv_40604.disk = 8U;
> #line 916
>       ns.ldv_40604.pdsk = 4U;
17251,17255c17109,17113
< #line 999
<     ns.ldv_39979.disk = 8U;
< #line 1000
<     ns.ldv_39979.pdsk = 8U;
< #line 1002
---
> #line 919
>     ns.ldv_40604.disk = 8U;
> #line 920
>     ns.ldv_40604.pdsk = 8U;
> #line 922
17257c17115
< #line 1003
---
> #line 923
17259c17117
< #line 1005
---
> #line 925
17261,17264c17119,17122
< #line 1005
<         goto ldv_51746;
<         ldv_51745: 
< #line 1006
---
> #line 925
>         goto ldv_52072;
>         ldv_52071: 
> #line 926
17266c17124
< #line 1005
---
> #line 925
17268,17269c17126,17127
<         ldv_51746: ;
< #line 1005
---
>         ldv_52072: ;
> #line 925
17271,17272c17129,17130
< #line 1006
<           goto ldv_51745;
---
> #line 926
>           goto ldv_52071;
17276c17134
< #line 1007
---
> #line 927
17278c17136
< #line 1008
---
> #line 928
17281c17139
< #line 1010
---
> #line 930
17287c17145
< #line 1014
---
> #line 934
17289c17147
< #line 1017
---
> #line 937
17291c17149
< #line 1018
---
> #line 938
17293c17151
< #line 1019
---
> #line 939
17295c17153
< #line 1023
---
> #line 943
17297,17300c17155,17158
< #line 1023
<         goto ldv_51750;
<         ldv_51749: 
< #line 1024
---
> #line 943
>         goto ldv_52076;
>         ldv_52075: 
> #line 944
17302c17160
< #line 1023
---
> #line 943
17304,17305c17162,17163
<         ldv_51750: ;
< #line 1023
---
>         ldv_52076: ;
> #line 943
17307,17308c17165,17166
< #line 1024
<           goto ldv_51749;
---
> #line 944
>           goto ldv_52075;
17320c17178
< #line 1029
---
> #line 949
17323,17325c17181,17183
< #line 1031
<   spin_unlock_irq(& mdev->req_lock);
< #line 1032
---
> #line 951
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 952
17328c17186
< #line 1034
---
> #line 954
17330c17188
< #line 1035
---
> #line 955
17332c17190
< #line 1036
---
> #line 956
17334c17192
< #line 1039
---
> #line 959
17336c17194
< #line 1040
---
> #line 960
17341c17199
< #line 1042
---
> #line 962
17343c17201
< #line 1044
---
> #line 964
17345c17203
< #line 1045
---
> #line 965
17350c17208
< #line 1047
---
> #line 967
17354,17355c17212,17213
< #line 1051 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< static void move_to_net_ee_or_free(struct drbd_conf *mdev , struct drbd_epoch_entry *e ) 
---
> #line 971 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
> static void move_to_net_ee_or_free(struct drbd_conf *mdev , struct drbd_peer_request *peer_req ) 
17361,17363c17219,17221
< #line 1053
<   tmp = drbd_ee_has_active_page(e);
< #line 1053
---
> #line 973
>   tmp = drbd_peer_req_has_active_page(peer_req);
> #line 973
17365,17367c17223,17225
< #line 1055
<     i = (int )(((unsigned long )e->size + 4095UL) >> 12);
< #line 1056
---
> #line 975
>     i = (int )(((unsigned long )peer_req->i.size + 4095UL) >> 12);
> #line 976
17369c17227
< #line 1057
---
> #line 977
17371,17377c17229,17235
< #line 1058
<     spin_lock_irq(& mdev->req_lock);
< #line 1059
<     list_add_tail(& e->w.list, & mdev->net_ee);
< #line 1060
<     spin_unlock_irq(& mdev->req_lock);
< #line 1061
---
> #line 978
>     spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 979
>     list_add_tail(& peer_req->w.list, & mdev->net_ee);
> #line 980
>     spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 981
17380,17381c17238,17239
< #line 1063
<     drbd_free_some_ee(mdev, e, 0);
---
> #line 983
>     __drbd_free_peer_req(mdev, peer_req, 0);
17383c17241
< #line 1064
---
> #line 984
17387,17388c17245,17246
< #line 1072 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< int w_e_end_data_req(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) 
---
> #line 992 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
> int w_e_end_data_req(struct drbd_work *w , int cancel ) 
17390c17248
<   struct drbd_epoch_entry *e ;
---
>   struct drbd_peer_request *peer_req ;
17392,17393c17250,17252
<   int ok ;
<   int tmp ;
---
>   struct drbd_conf *mdev ;
>   int err ;
>   long tmp ;
17396,17400c17255
<   int tmp___2 ;
<   long tmp___3 ;
<   int tmp___4 ;
<   int tmp___5 ;
<   long tmp___6 ;
---
>   long tmp___2 ;
17403c17258
< #line 1074
---
> #line 994
17405,17428c17260,17273
< #line 1074
<   e = (struct drbd_epoch_entry *)__mptr;
< #line 1077
<   tmp___1 = __builtin_expect(cancel != 0, 0L);
< #line 1077
<   if (tmp___1 != 0L) {
< #line 1078
<     drbd_free_some_ee(mdev, e, 0);
< #line 1079
<     atomic_dec(& mdev->unacked_cnt);
< #line 1079
<     tmp___0 = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 1079
<     if (tmp___0 < 0) {
< #line 1079
<       tmp = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 1079
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: unacked_cnt = %d < 0 !\n",
<               "w_e_end_data_req", 1079, tmp);
<     } else {
< 
<     }
< #line 1080
<     return (1);
---
> #line 994
>   peer_req = (struct drbd_peer_request *)__mptr;
> #line 995
>   mdev = w->ldv_50388.mdev;
> #line 998
>   tmp = __builtin_expect(cancel != 0, 0L);
> #line 998
>   if (tmp != 0L) {
> #line 999
>     __drbd_free_peer_req(mdev, peer_req, 0);
> #line 1000
>     _dec_unacked(mdev, "w_e_end_data_req", 1000);
> #line 1001
>     return (0);
17432,17437c17277,17282
< #line 1083
<   tmp___3 = __builtin_expect((e->flags & 8UL) == 0UL, 1L);
< #line 1083
<   if (tmp___3 != 0L) {
< #line 1084
<     ok = drbd_send_block(mdev, P_DATA_REPLY, e);
---
> #line 1004
>   tmp___1 = __builtin_expect((peer_req->flags & 8UL) == 0UL, 1L);
> #line 1004
>   if (tmp___1 != 0L) {
> #line 1005
>     err = drbd_send_block(mdev, P_DATA_REPLY, peer_req);
17439,17443c17284,17288
< #line 1086
<     tmp___2 = ___ratelimit(& drbd_ratelimit_state, "w_e_end_data_req");
< #line 1086
<     if (tmp___2 != 0) {
< #line 1087
---
> #line 1007
>     tmp___0 = ___ratelimit(& drbd_ratelimit_state, "w_e_end_data_req");
> #line 1007
>     if (tmp___0 != 0) {
> #line 1008
17445c17290
<               (unsigned long long )e->sector);
---
>               (unsigned long long )peer_req->i.sector);
17449,17464c17294,17295
< #line 1090
<     ok = drbd_send_ack(mdev, P_NEG_DREPLY, e);
<   }
< #line 1093
<   atomic_dec(& mdev->unacked_cnt);
< #line 1093
<   tmp___5 = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 1093
<   if (tmp___5 < 0) {
< #line 1093
<     tmp___4 = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 1093
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: unacked_cnt = %d < 0 !\n",
<             "w_e_end_data_req", 1093, tmp___4);
<   } else {
< 
---
> #line 1011
>     err = drbd_send_ack(mdev, P_NEG_DREPLY, peer_req);
17466,17472c17297,17305
< #line 1095
<   move_to_net_ee_or_free(mdev, e);
< #line 1097
<   tmp___6 = __builtin_expect(ok == 0, 0L);
< #line 1097
<   if (tmp___6 != 0L) {
< #line 1098
---
> #line 1014
>   _dec_unacked(mdev, "w_e_end_data_req", 1014);
> #line 1016
>   move_to_net_ee_or_free(mdev, peer_req);
> #line 1018
>   tmp___2 = __builtin_expect(err != 0, 0L);
> #line 1018
>   if (tmp___2 != 0L) {
> #line 1019
17477,17478c17310,17311
< #line 1099
<   return (ok);
---
> #line 1020
>   return (err);
17481,17482c17314,17315
< #line 1108 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< int w_e_end_rsdata_req(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) 
---
> #line 1029 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
> int w_e_end_rsdata_req(struct drbd_work *w , int cancel ) 
17484c17317
<   struct drbd_epoch_entry *e ;
---
>   struct drbd_peer_request *peer_req ;
17486,17487c17319,17321
<   int ok ;
<   int tmp ;
---
>   struct drbd_conf *mdev ;
>   int err ;
>   long tmp ;
17489,17490c17323,17324
<   long tmp___1 ;
<   int tmp___2 ;
---
>   int tmp___1 ;
>   long tmp___2 ;
17493,17497c17327
<   int tmp___5 ;
<   long tmp___6 ;
<   int tmp___7 ;
<   int tmp___8 ;
<   long tmp___9 ;
---
>   long tmp___5 ;
17500c17330
< #line 1110
---
> #line 1031
17502,17525c17332,17345
< #line 1110
<   e = (struct drbd_epoch_entry *)__mptr;
< #line 1113
<   tmp___1 = __builtin_expect(cancel != 0, 0L);
< #line 1113
<   if (tmp___1 != 0L) {
< #line 1114
<     drbd_free_some_ee(mdev, e, 0);
< #line 1115
<     atomic_dec(& mdev->unacked_cnt);
< #line 1115
<     tmp___0 = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 1115
<     if (tmp___0 < 0) {
< #line 1115
<       tmp = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 1115
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: unacked_cnt = %d < 0 !\n",
<               "w_e_end_rsdata_req", 1115, tmp);
<     } else {
< 
<     }
< #line 1116
<     return (1);
---
> #line 1031
>   peer_req = (struct drbd_peer_request *)__mptr;
> #line 1032
>   mdev = w->ldv_50388.mdev;
> #line 1035
>   tmp = __builtin_expect(cancel != 0, 0L);
> #line 1035
>   if (tmp != 0L) {
> #line 1036
>     __drbd_free_peer_req(mdev, peer_req, 0);
> #line 1037
>     _dec_unacked(mdev, "w_e_end_rsdata_req", 1037);
> #line 1038
>     return (0);
17529,17535c17349,17355
< #line 1119
<   tmp___2 = _get_ldev_if_state(mdev, D_FAILED);
< #line 1119
<   if (tmp___2 != 0) {
< #line 1120
<     drbd_rs_complete_io(mdev, e->sector);
< #line 1121
---
> #line 1041
>   tmp___0 = _get_ldev_if_state(mdev, D_FAILED);
> #line 1041
>   if (tmp___0 != 0) {
> #line 1042
>     drbd_rs_complete_io(mdev, peer_req->i.sector);
> #line 1043
17540,17543c17360,17363
< #line 1124
<   if ((unsigned int )*((unsigned short *)mdev + 1138UL) == 352U) {
< #line 1125
<     ok = drbd_send_ack(mdev, P_RS_CANCEL, e);
---
> #line 1046
>   if ((unsigned int )*((unsigned short *)mdev + 374UL) == 352U) {
> #line 1047
>     err = drbd_send_ack(mdev, P_RS_CANCEL, peer_req);
17545,17553c17365,17373
< #line 1126
<     tmp___6 = __builtin_expect((e->flags & 8UL) == 0UL, 1L);
< #line 1126
<     if (tmp___6 != 0L) {
< #line 1127
<       tmp___4 = __builtin_expect((int )mdev->state.ldv_39979.pdsk > 3, 1L);
< #line 1127
<       if (tmp___4 != 0L) {
< #line 1128
---
> #line 1048
>     tmp___4 = __builtin_expect((peer_req->flags & 8UL) == 0UL, 1L);
> #line 1048
>     if (tmp___4 != 0L) {
> #line 1049
>       tmp___2 = __builtin_expect((int )mdev->state.ldv_50103.pdsk > 3, 1L);
> #line 1049
>       if (tmp___2 != 0L) {
> #line 1050
17555,17556c17375,17376
< #line 1129
<         ok = drbd_send_block(mdev, P_RS_DATA_REPLY, e);
---
> #line 1051
>         err = drbd_send_block(mdev, P_RS_DATA_REPLY, peer_req);
17558,17562c17378,17382
< #line 1131
<         tmp___3 = ___ratelimit(& drbd_ratelimit_state, "w_e_end_rsdata_req");
< #line 1131
<         if (tmp___3 != 0) {
< #line 1132
---
> #line 1053
>         tmp___1 = ___ratelimit(& drbd_ratelimit_state, "w_e_end_rsdata_req");
> #line 1053
>         if (tmp___1 != 0) {
> #line 1054
17567,17568c17387,17388
< #line 1134
<         ok = 1;
---
> #line 1056
>         err = 0;
17571,17575c17391,17395
< #line 1137
<       tmp___5 = ___ratelimit(& drbd_ratelimit_state, "w_e_end_rsdata_req");
< #line 1137
<       if (tmp___5 != 0) {
< #line 1138
---
> #line 1059
>       tmp___3 = ___ratelimit(& drbd_ratelimit_state, "w_e_end_rsdata_req");
> #line 1059
>       if (tmp___3 != 0) {
> #line 1060
17577c17397
<                 (unsigned long long )e->sector);
---
>                 (unsigned long long )peer_req->i.sector);
17581,17584c17401,17404
< #line 1141
<       ok = drbd_send_ack(mdev, P_NEG_RS_DREPLY, e);
< #line 1144
<       drbd_rs_failed_io(mdev, e->sector, (int )e->size);
---
> #line 1063
>       err = drbd_send_ack(mdev, P_NEG_RS_DREPLY, peer_req);
> #line 1066
>       drbd_rs_failed_io(mdev, peer_req->i.sector, (int )peer_req->i.size);
17587,17607c17407,17415
< #line 1147
<   atomic_dec(& mdev->unacked_cnt);
< #line 1147
<   tmp___8 = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 1147
<   if (tmp___8 < 0) {
< #line 1147
<     tmp___7 = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 1147
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: unacked_cnt = %d < 0 !\n",
<             "w_e_end_rsdata_req", 1147, tmp___7);
<   } else {
< 
<   }
< #line 1149
<   move_to_net_ee_or_free(mdev, e);
< #line 1151
<   tmp___9 = __builtin_expect(ok == 0, 0L);
< #line 1151
<   if (tmp___9 != 0L) {
< #line 1152
---
> #line 1069
>   _dec_unacked(mdev, "w_e_end_rsdata_req", 1069);
> #line 1071
>   move_to_net_ee_or_free(mdev, peer_req);
> #line 1073
>   tmp___5 = __builtin_expect(err != 0, 0L);
> #line 1073
>   if (tmp___5 != 0L) {
> #line 1074
17612,17613c17420,17421
< #line 1153
<   return (ok);
---
> #line 1075
>   return (err);
17616,17617c17424,17425
< #line 1156 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< int w_e_end_csum_rs_req(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) 
---
> #line 1078 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
> int w_e_end_csum_rs_req(struct drbd_work *w , int cancel ) 
17619c17427
<   struct drbd_epoch_entry *e ;
---
>   struct drbd_peer_request *peer_req ;
17620a17429
>   struct drbd_conf *mdev ;
17624c17433
<   int ok ;
---
>   int err ;
17626c17435
<   int tmp ;
---
>   long tmp ;
17628c17437
<   long tmp___1 ;
---
>   unsigned int tmp___1 ;
17630,17636c17439,17441
<   unsigned int tmp___3 ;
<   int tmp___4 ;
<   int tmp___5 ;
<   long tmp___6 ;
<   int tmp___7 ;
<   int tmp___8 ;
<   long tmp___9 ;
---
>   int tmp___3 ;
>   long tmp___4 ;
>   long tmp___5 ;
17639c17444
< #line 1158
---
> #line 1080
17641,17643c17446,17450
< #line 1158
<   e = (struct drbd_epoch_entry *)__mptr;
< #line 1161
---
> #line 1080
>   peer_req = (struct drbd_peer_request *)__mptr;
> #line 1081
>   mdev = w->ldv_50388.mdev;
> #line 1084
17645c17452
< #line 1162
---
> #line 1085
17647,17668c17454,17463
< #line 1164
<   tmp___1 = __builtin_expect(cancel != 0, 0L);
< #line 1164
<   if (tmp___1 != 0L) {
< #line 1165
<     drbd_free_some_ee(mdev, e, 0);
< #line 1166
<     atomic_dec(& mdev->unacked_cnt);
< #line 1166
<     tmp___0 = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 1166
<     if (tmp___0 < 0) {
< #line 1166
<       tmp = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 1166
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: unacked_cnt = %d < 0 !\n",
<               "w_e_end_csum_rs_req", 1166, tmp);
<     } else {
< 
<     }
< #line 1167
<     return (1);
---
> #line 1087
>   tmp = __builtin_expect(cancel != 0, 0L);
> #line 1087
>   if (tmp != 0L) {
> #line 1088
>     __drbd_free_peer_req(mdev, peer_req, 0);
> #line 1089
>     _dec_unacked(mdev, "w_e_end_csum_rs_req", 1089);
> #line 1090
>     return (0);
17672,17678c17467,17473
< #line 1170
<   tmp___2 = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 1170
<   if (tmp___2 != 0) {
< #line 1171
<     drbd_rs_complete_io(mdev, e->sector);
< #line 1172
---
> #line 1093
>   tmp___0 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 1093
>   if (tmp___0 != 0) {
> #line 1094
>     drbd_rs_complete_io(mdev, peer_req->i.sector);
> #line 1095
17683,17695c17478,17490
< #line 1175
<   di = e->ldv_49189.digest;
< #line 1177
<   tmp___6 = __builtin_expect((e->flags & 8UL) == 0UL, 1L);
< #line 1177
<   if (tmp___6 != 0L) {
< #line 1181
<     if ((unsigned long )mdev->csums_tfm != (unsigned long )((struct crypto_hash *)0)) {
< #line 1182
<       tmp___3 = crypto_hash_digestsize(mdev->csums_tfm);
< #line 1182
<       digest_size = (int )tmp___3;
< #line 1183
---
> #line 1098
>   di = peer_req->ldv_50490.digest;
> #line 1100
>   tmp___4 = __builtin_expect((peer_req->flags & 8UL) == 0UL, 1L);
> #line 1100
>   if (tmp___4 != 0L) {
> #line 1104
>     if ((unsigned long )(mdev->tconn)->csums_tfm != (unsigned long )((struct crypto_hash *)0)) {
> #line 1105
>       tmp___1 = crypto_hash_digestsize((mdev->tconn)->csums_tfm);
> #line 1105
>       digest_size = (int )tmp___1;
> #line 1106
17697c17492
< #line 1183
---
> #line 1106
17699,17700c17494,17495
<                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared",
<                 1183);
---
>                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared",
>                 1106);
17704c17499
< #line 1184
---
> #line 1107
17709c17504
< #line 1186
---
> #line 1109
17711,17717c17506,17512
< #line 1187
<       drbd_csum_ee(mdev, mdev->csums_tfm, e, digest);
< #line 1188
<       tmp___4 = memcmp((void const   *)digest, (void const   *)di->digest, (size_t )digest_size);
< #line 1188
<       eq = tmp___4 == 0;
< #line 1189
---
> #line 1110
>       drbd_csum_ee(mdev, (mdev->tconn)->csums_tfm, peer_req, digest);
> #line 1111
>       tmp___2 = memcmp((void const   *)digest, (void const   *)di->digest, (size_t )digest_size);
> #line 1111
>       eq = tmp___2 == 0;
> #line 1112
17722c17517
< #line 1192
---
> #line 1115
17724,17730c17519,17525
< #line 1193
<       __drbd_set_in_sync(mdev, e->sector, (int )e->size, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared",
<                          1193U);
< #line 1195
<       mdev->rs_same_csum = mdev->rs_same_csum + (unsigned long )(e->size >> 12);
< #line 1196
<       ok = drbd_send_ack(mdev, P_RS_IS_IN_SYNC, e);
---
> #line 1116
>       __drbd_set_in_sync(mdev, peer_req->i.sector, (int )peer_req->i.size, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared",
>                          1116U);
> #line 1118
>       mdev->rs_same_csum = mdev->rs_same_csum + (unsigned long )(peer_req->i.size >> 12);
> #line 1119
>       err = drbd_send_ack(mdev, P_RS_IS_IN_SYNC, peer_req);
17732c17527
< #line 1198
---
> #line 1121
17734,17738c17529,17533
< #line 1199
<       e->ldv_49189.block_id = 0xffffffffffffffffULL;
< #line 1200
<       e->flags = e->flags & 0xffffffffffffffefUL;
< #line 1201
---
> #line 1122
>       peer_req->ldv_50490.block_id = 0xffffffffffffffffULL;
> #line 1123
>       peer_req->flags = peer_req->flags & 0xffffffffffffffefUL;
> #line 1124
17740,17741c17535,17536
< #line 1202
<       ok = drbd_send_block(mdev, P_RS_DATA_REPLY, e);
---
> #line 1125
>       err = drbd_send_block(mdev, P_RS_DATA_REPLY, peer_req);
17744,17750c17539,17545
< #line 1205
<     ok = drbd_send_ack(mdev, P_NEG_RS_DREPLY, e);
< #line 1206
<     tmp___5 = ___ratelimit(& drbd_ratelimit_state, "w_e_end_csum_rs_req");
< #line 1206
<     if (tmp___5 != 0) {
< #line 1207
---
> #line 1128
>     err = drbd_send_ack(mdev, P_NEG_RS_DREPLY, peer_req);
> #line 1129
>     tmp___3 = ___ratelimit(& drbd_ratelimit_state, "w_e_end_csum_rs_req");
> #line 1129
>     if (tmp___3 != 0) {
> #line 1130
17756,17776c17551,17559
< #line 1210
<   atomic_dec(& mdev->unacked_cnt);
< #line 1210
<   tmp___8 = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 1210
<   if (tmp___8 < 0) {
< #line 1210
<     tmp___7 = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 1210
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: unacked_cnt = %d < 0 !\n",
<             "w_e_end_csum_rs_req", 1210, tmp___7);
<   } else {
< 
<   }
< #line 1211
<   move_to_net_ee_or_free(mdev, e);
< #line 1213
<   tmp___9 = __builtin_expect(ok == 0, 0L);
< #line 1213
<   if (tmp___9 != 0L) {
< #line 1214
---
> #line 1133
>   _dec_unacked(mdev, "w_e_end_csum_rs_req", 1133);
> #line 1134
>   move_to_net_ee_or_free(mdev, peer_req);
> #line 1136
>   tmp___5 = __builtin_expect(err != 0, 0L);
> #line 1136
>   if (tmp___5 != 0L) {
> #line 1137
17781,17782c17564,17565
< #line 1215
<   return (ok);
---
> #line 1138
>   return (err);
17785,17786c17568,17569
< #line 1219 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< int w_e_end_ov_req(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) 
---
> #line 1141 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
> int w_e_end_ov_req(struct drbd_work *w , int cancel ) 
17788c17571
<   struct drbd_epoch_entry *e ;
---
>   struct drbd_peer_request *peer_req ;
17789a17573
>   struct drbd_conf *mdev ;
17794c17578
<   int ok ;
---
>   int err ;
17798,17801d17581
<   int tmp___2 ;
<   int tmp___3 ;
<   int tmp___4 ;
<   int tmp___5 ;
17804c17584
< #line 1221
---
> #line 1143
17806,17814c17586,17596
< #line 1221
<   e = (struct drbd_epoch_entry *)__mptr;
< #line 1222
<   sector = e->sector;
< #line 1223
<   size = e->size;
< #line 1226
<   ok = 1;
< #line 1228
---
> #line 1143
>   peer_req = (struct drbd_peer_request *)__mptr;
> #line 1144
>   mdev = w->ldv_50388.mdev;
> #line 1145
>   sector = peer_req->i.sector;
> #line 1146
>   size = peer_req->i.size;
> #line 1149
>   err = 0;
> #line 1151
17816c17598
< #line 1228
---
> #line 1151
17818c17600
< #line 1229
---
> #line 1152
17823,17825c17605,17607
< #line 1231
<   tmp___0 = crypto_hash_digestsize(mdev->verify_tfm);
< #line 1231
---
> #line 1154
>   tmp___0 = crypto_hash_digestsize((mdev->tconn)->verify_tfm);
> #line 1154
17827c17609
< #line 1232
---
> #line 1155
17829c17611
< #line 1233
---
> #line 1156
17831,17833c17613,17615
< #line 1234
<     ok = 0;
< #line 1235
---
> #line 1157
>     err = 1;
> #line 1158
17838,17840c17620,17622
< #line 1238
<   tmp___1 = __builtin_expect((e->flags & 8UL) == 0UL, 1L);
< #line 1238
---
> #line 1161
>   tmp___1 = __builtin_expect((peer_req->flags & 8UL) == 0UL, 1L);
> #line 1161
17842,17843c17624,17625
< #line 1239
<     drbd_csum_ee(mdev, mdev->verify_tfm, e, digest);
---
> #line 1162
>     drbd_csum_ee(mdev, (mdev->tconn)->verify_tfm, peer_req, digest);
17845c17627
< #line 1241
---
> #line 1164
17848,17852c17630,17634
< #line 1248
<   drbd_free_some_ee(mdev, e, 0);
< #line 1249
<   e = 0;
< #line 1250
---
> #line 1171
>   __drbd_free_peer_req(mdev, peer_req, 0);
> #line 1172
>   peer_req = 0;
> #line 1173
17854,17871c17636,17641
< #line 1251
<   ok = drbd_send_drequest_csum(mdev, sector, (int )size, digest, digest_size, P_OV_REPLY);
< #line 1254
<   if (ok == 0) {
< #line 1255
<     atomic_dec(& mdev->rs_pending_cnt);
< #line 1255
<     tmp___3 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
< #line 1255
<     if (tmp___3 < 0) {
< #line 1255
<       tmp___2 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
< #line 1255
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: rs_pending_cnt = %d < 0 !\n",
<               "w_e_end_ov_req", 1255, tmp___2);
<     } else {
< 
<     }
---
> #line 1174
>   err = drbd_send_drequest_csum(mdev, sector, (int )size, digest, digest_size, P_OV_REPLY);
> #line 1175
>   if (err != 0) {
> #line 1176
>     _dec_rs_pending(mdev, "w_e_end_ov_req", 1176);
17875c17645
< #line 1256
---
> #line 1177
17878,17895c17648,17651
< #line 1259
<   if ((unsigned long )e != (unsigned long )((struct drbd_epoch_entry *)0)) {
< #line 1260
<     drbd_free_some_ee(mdev, e, 0);
<   } else {
< 
<   }
< #line 1261
<   atomic_dec(& mdev->unacked_cnt);
< #line 1261
<   tmp___5 = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 1261
<   if (tmp___5 < 0) {
< #line 1261
<     tmp___4 = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 1261
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: unacked_cnt = %d < 0 !\n",
<             "w_e_end_ov_req", 1261, tmp___4);
---
> #line 1180
>   if ((unsigned long )peer_req != (unsigned long )((struct drbd_peer_request *)0)) {
> #line 1181
>     __drbd_free_peer_req(mdev, peer_req, 0);
17899,17900c17655,17658
< #line 1262
<   return (ok);
---
> #line 1182
>   _dec_unacked(mdev, "w_e_end_ov_req", 1182);
> #line 1183
>   return (err);
17903,17904c17661,17662
< #line 1265 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void drbd_ov_oos_found(struct drbd_conf *mdev , sector_t sector , int size ) 
---
> #line 1186 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
> void drbd_ov_out_of_sync_found(struct drbd_conf *mdev , sector_t sector , int size ) 
17909c17667
< #line 1267
---
> #line 1188
17911c17669
< #line 1268
---
> #line 1189
17914c17672
< #line 1270
---
> #line 1191
17916c17674
< #line 1271
---
> #line 1192
17919,17922c17677,17680
< #line 1273
<   __drbd_set_out_of_sync(mdev, sector, size, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared",
<                          1273U);
< #line 1274
---
> #line 1194
>   __drbd_set_out_of_sync(mdev, sector, size, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared",
>                          1194U);
> #line 1195
17926,17927c17684,17685
< #line 1276 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< int w_e_end_ov_reply(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) 
---
> #line 1197 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
> int w_e_end_ov_reply(struct drbd_work *w , int cancel ) 
17929c17687
<   struct drbd_epoch_entry *e ;
---
>   struct drbd_peer_request *peer_req ;
17930a17689
>   struct drbd_conf *mdev ;
17936c17695
<   int ok ;
---
>   int err ;
17939c17698
<   int tmp ;
---
>   long tmp ;
17941c17700
<   long tmp___1 ;
---
>   unsigned int tmp___1 ;
17943,17947c17702,17703
<   unsigned int tmp___3 ;
<   int tmp___4 ;
<   long tmp___5 ;
<   int tmp___6 ;
<   int tmp___7 ;
---
>   long tmp___3 ;
>   bool tmp___4 ;
17950c17706
< #line 1278
---
> #line 1199
17952,17958c17708,17716
< #line 1278
<   e = (struct drbd_epoch_entry *)__mptr;
< #line 1281
<   sector = e->sector;
< #line 1282
<   size = e->size;
< #line 1284
---
> #line 1199
>   peer_req = (struct drbd_peer_request *)__mptr;
> #line 1200
>   mdev = w->ldv_50388.mdev;
> #line 1203
>   sector = peer_req->i.sector;
> #line 1204
>   size = peer_req->i.size;
> #line 1206
17960c17718
< #line 1285
---
> #line 1207
17962,17983c17720,17729
< #line 1287
<   tmp___1 = __builtin_expect(cancel != 0, 0L);
< #line 1287
<   if (tmp___1 != 0L) {
< #line 1288
<     drbd_free_some_ee(mdev, e, 0);
< #line 1289
<     atomic_dec(& mdev->unacked_cnt);
< #line 1289
<     tmp___0 = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 1289
<     if (tmp___0 < 0) {
< #line 1289
<       tmp = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 1289
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: unacked_cnt = %d < 0 !\n",
<               "w_e_end_ov_reply", 1289, tmp);
<     } else {
< 
<     }
< #line 1290
<     return (1);
---
> #line 1209
>   tmp = __builtin_expect(cancel != 0, 0L);
> #line 1209
>   if (tmp != 0L) {
> #line 1210
>     __drbd_free_peer_req(mdev, peer_req, 0);
> #line 1211
>     _dec_unacked(mdev, "w_e_end_ov_reply", 1211);
> #line 1212
>     return (0);
17987,17993c17733,17739
< #line 1295
<   tmp___2 = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 1295
<   if (tmp___2 != 0) {
< #line 1296
<     drbd_rs_complete_io(mdev, e->sector);
< #line 1297
---
> #line 1217
>   tmp___0 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 1217
>   if (tmp___0 != 0) {
> #line 1218
>     drbd_rs_complete_io(mdev, peer_req->i.sector);
> #line 1219
17998,18008c17744,17754
< #line 1300
<   di = e->ldv_49189.digest;
< #line 1302
<   tmp___5 = __builtin_expect((e->flags & 8UL) == 0UL, 1L);
< #line 1302
<   if (tmp___5 != 0L) {
< #line 1303
<     tmp___3 = crypto_hash_digestsize(mdev->verify_tfm);
< #line 1303
<     digest_size = (int )tmp___3;
< #line 1304
---
> #line 1222
>   di = peer_req->ldv_50490.digest;
> #line 1224
>   tmp___3 = __builtin_expect((peer_req->flags & 8UL) == 0UL, 1L);
> #line 1224
>   if (tmp___3 != 0L) {
> #line 1225
>     tmp___1 = crypto_hash_digestsize((mdev->tconn)->verify_tfm);
> #line 1225
>     digest_size = (int )tmp___1;
> #line 1226
18010c17756
< #line 1305
---
> #line 1227
18012,18014c17758,17760
< #line 1306
<       drbd_csum_ee(mdev, mdev->verify_tfm, e, digest);
< #line 1308
---
> #line 1228
>       drbd_csum_ee(mdev, (mdev->tconn)->verify_tfm, peer_req, digest);
> #line 1230
18016c17762
< #line 1308
---
> #line 1230
18018,18019c17764,17765
<                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared",
<                 1308);
---
>                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared",
>                 1230);
18023,18027c17769,17773
< #line 1309
<       tmp___4 = memcmp((void const   *)digest, (void const   *)di->digest, (size_t )digest_size);
< #line 1309
<       eq = tmp___4 == 0;
< #line 1310
---
> #line 1231
>       tmp___2 = memcmp((void const   *)digest, (void const   *)di->digest, (size_t )digest_size);
> #line 1231
>       eq = tmp___2 == 0;
> #line 1232
18035,18037c17781,17783
< #line 1319
<   drbd_free_some_ee(mdev, e, 0);
< #line 1320
---
> #line 1241
>   __drbd_free_peer_req(mdev, peer_req, 0);
> #line 1242
18039,18057c17785,17786
< #line 1321
<     drbd_ov_oos_found(mdev, sector, (int )size);
<   } else {
< #line 1323
<     ov_oos_print(mdev);
<   }
< #line 1325
<   ok = drbd_send_ack_ex(mdev, P_OV_RESULT, sector, (int )size, eq != 0 ? 4711ULL : 4712ULL);
< #line 1328
<   atomic_dec(& mdev->unacked_cnt);
< #line 1328
<   tmp___7 = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 1328
<   if (tmp___7 < 0) {
< #line 1328
<     tmp___6 = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 1328
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: unacked_cnt = %d < 0 !\n",
<             "w_e_end_ov_reply", 1328, tmp___6);
---
> #line 1243
>     drbd_ov_out_of_sync_found(mdev, sector, (int )size);
18059c17788,17789
< 
---
> #line 1245
>     ov_out_of_sync_print(mdev);
18061c17791,17795
< #line 1330
---
> #line 1247
>   err = drbd_send_ack_ex(mdev, P_OV_RESULT, sector, (int )size, eq != 0 ? 4711ULL : 4712ULL);
> #line 1250
>   _dec_unacked(mdev, "w_e_end_ov_reply", 1250);
> #line 1252
18063c17797
< #line 1333
---
> #line 1255
18065c17799
< #line 1334
---
> #line 1256
18070,18072c17804,17808
< #line 1336
<   stop_sector_reached = (bool )(mdev->agreed_pro_version > 96 && (sector_t )(size >> 9) + sector >= mdev->ov_stop_sector);
< #line 1339
---
> #line 1258
>   tmp___4 = verify_can_do_stop_sector(mdev);
> #line 1258
>   stop_sector_reached = (bool )((int )tmp___4 && (sector_t )(size >> 9) + sector >= mdev->ov_stop_sector);
> #line 1261
18074,18076c17810,17812
< #line 1340
<     ov_oos_print(mdev);
< #line 1341
---
> #line 1262
>     ov_out_of_sync_print(mdev);
> #line 1263
18081,18082c17817,17818
< #line 1344
<   return (ok);
---
> #line 1266
>   return (err);
18085,18086c17821,17822
< #line 1347 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< int w_prev_work_done(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) 
---
> #line 1269 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
> int w_prev_work_done(struct drbd_work *w , int cancel ) 
18092c17828
< #line 1349
---
> #line 1271
18094c17830
< #line 1349
---
> #line 1271
18096c17832
< #line 1350
---
> #line 1273
18098,18099c17834,17835
< #line 1351
<   return (1);
---
> #line 1274
>   return (0);
18102,18103c17838,17839
< #line 1354 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< int w_send_barrier(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) 
---
> #line 1282 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
> int drbd_send_barrier(struct drbd_tconn *tconn ) 
18105,18106d17840
<   struct drbd_tl_epoch *b ;
<   struct drbd_work  const  *__mptr ;
18108,18109c17842,17844
<   int ok ;
<   int tmp ;
---
>   struct drbd_socket *sock ;
>   void *tmp ;
>   int tmp___0 ;
18112,18125c17847,17856
< #line 1356
<   __mptr = (struct drbd_work  const  *)w;
< #line 1356
<   b = (struct drbd_tl_epoch *)__mptr;
< #line 1357
<   p = & mdev->data.sbuf.barrier;
< #line 1358
<   ok = 1;
< #line 1365
<   spin_lock_irq(& mdev->req_lock);
< #line 1366
<   if ((unsigned long )w->cb != (unsigned long )(& w_send_barrier) || (int )mdev->state.ldv_39979.conn <= 9) {
< #line 1367
<     cancel = 1;
---
> #line 1287
>   sock = & tconn->data;
> #line 1288
>   tmp = conn_prepare_command(tconn, sock);
> #line 1288
>   p = (struct p_barrier *)tmp;
> #line 1289
>   if ((unsigned long )p == (unsigned long )((struct p_barrier *)0)) {
> #line 1290
>     return (-5);
18129,18131c17860,17883
< #line 1368
<   spin_unlock_irq(& mdev->req_lock);
< #line 1369
---
> #line 1291
>   p->barrier = (u32 )tconn->send.current_epoch_nr;
> #line 1292
>   p->pad = 0U;
> #line 1293
>   tconn->send.current_epoch_writes = 0U;
> #line 1295
>   tmp___0 = conn_send_command(tconn, sock, P_BARRIER, 8U, 0, 0U);
> #line 1295
>   return (tmp___0);
> }
> }
> #line 1298 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
> int w_send_write_hint(struct drbd_work *w , int cancel ) 
> { 
>   struct drbd_conf *mdev ;
>   struct drbd_socket *sock ;
>   void *tmp ;
>   int tmp___0 ;
> 
>   {
> #line 1300
>   mdev = w->ldv_50388.mdev;
> #line 1303
18133,18134c17885,17886
< #line 1370
<     return (1);
---
> #line 1304
>     return (0);
18138,18143c17890,17897
< #line 1372
<   tmp = drbd_get_data_sock(mdev);
< #line 1372
<   if (tmp == 0) {
< #line 1373
<     return (0);
---
> #line 1305
>   sock = & (mdev->tconn)->data;
> #line 1306
>   tmp = drbd_prepare_command(mdev, sock);
> #line 1306
>   if ((unsigned long )tmp == (unsigned long )((void *)0)) {
> #line 1307
>     return (-5);
18147,18155c17901,17904
< #line 1374
<   p->barrier = b->br_number;
< #line 1378
<   ok = _drbd_send_cmd(mdev, mdev->data.socket, P_BARRIER, (struct p_header80 *)p,
<                       16UL, 0U);
< #line 1380
<   drbd_put_data_sock(mdev);
< #line 1382
<   return (ok);
---
> #line 1308
>   tmp___0 = drbd_send_command(mdev, sock, P_UNPLUG_REMOTE, 0U, 0, 0U);
> #line 1308
>   return (tmp___0);
18158,18159c17907,17908
< #line 1385 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< int w_send_write_hint(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) 
---
> #line 1311 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
> static void re_init_if_first_write(struct drbd_tconn *tconn , unsigned int epoch ) 
18161c17910
<   int tmp ;
---
> 
18164,18167c17913,17920
< #line 1387
<   if (cancel != 0) {
< #line 1388
<     return (1);
---
> #line 1313
>   if (! tconn->send.seen_any_write_yet) {
> #line 1314
>     tconn->send.seen_any_write_yet = 1;
> #line 1315
>     tconn->send.current_epoch_nr = (int )epoch;
> #line 1316
>     tconn->send.current_epoch_writes = 0U;
18171,18174c17924,17956
< #line 1389
<   tmp = drbd_send_short_cmd(mdev, P_UNPLUG_REMOTE);
< #line 1389
<   return (tmp);
---
> #line 1318
>   return;
> }
> }
> #line 1320 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
> static void maybe_send_barrier(struct drbd_tconn *tconn , unsigned int epoch ) 
> { 
> 
> 
>   {
> #line 1323
>   if (! tconn->send.seen_any_write_yet) {
> #line 1324
>     return;
>   } else {
> 
>   }
> #line 1325
>   if ((unsigned int )tconn->send.current_epoch_nr != epoch) {
> #line 1326
>     if (tconn->send.current_epoch_writes != 0U) {
> #line 1327
>       drbd_send_barrier(tconn);
>     } else {
> 
>     }
> #line 1328
>     tconn->send.current_epoch_nr = (int )epoch;
>   } else {
> 
>   }
> #line 1330
>   return;
18177,18178c17959,17960
< #line 1392 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< int w_send_oos(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) 
---
> #line 1332 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
> int w_send_out_of_sync(struct drbd_work *w , int cancel ) 
18182c17964,17966
<   int ok ;
---
>   struct drbd_conf *mdev ;
>   struct drbd_tconn *tconn ;
>   int err ;
18186c17970
< #line 1394
---
> #line 1334
18188c17972
< #line 1394
---
> #line 1334
18190c17974,17978
< #line 1397
---
> #line 1335
>   mdev = w->ldv_50388.mdev;
> #line 1336
>   tconn = mdev->tconn;
> #line 1339
18192c17980
< #line 1397
---
> #line 1339
18194,18197c17982,17985
< #line 1398
<     req_mod(req, send_canceled);
< #line 1399
<     return (1);
---
> #line 1340
>     req_mod(req, SEND_CANCELED);
> #line 1341
>     return (0);
18201,18206c17989,17996
< #line 1402
<   ok = drbd_send_oos(mdev, req);
< #line 1403
<   req_mod(req, oos_handed_to_network);
< #line 1405
<   return (ok);
---
> #line 1348
>   maybe_send_barrier(tconn, req->epoch);
> #line 1350
>   err = drbd_send_out_of_sync(mdev, req);
> #line 1351
>   req_mod(req, OOS_HANDED_TO_NETWORK);
> #line 1353
>   return (err);
18209,18210c17999,18000
< #line 1414 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< int w_send_dblock(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) 
---
> #line 1362 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
> int w_send_dblock(struct drbd_work *w , int cancel ) 
18214c18004,18006
<   int ok ;
---
>   struct drbd_conf *mdev ;
>   struct drbd_tconn *tconn ;
>   int err ;
18218c18010
< #line 1416
---
> #line 1364
18220c18012
< #line 1416
---
> #line 1364
18222c18014,18018
< #line 1419
---
> #line 1365
>   mdev = w->ldv_50388.mdev;
> #line 1366
>   tconn = mdev->tconn;
> #line 1369
18224c18020
< #line 1419
---
> #line 1369
18226,18229c18022,18025
< #line 1420
<     req_mod(req, send_canceled);
< #line 1421
<     return (1);
---
> #line 1370
>     req_mod(req, SEND_CANCELED);
> #line 1371
>     return (0);
18233,18238c18029,18040
< #line 1424
<   ok = drbd_send_dblock(mdev, req);
< #line 1425
<   req_mod(req, ok != 0 ? handed_over_to_network : send_failed);
< #line 1427
<   return (ok);
---
> #line 1374
>   re_init_if_first_write(tconn, req->epoch);
> #line 1375
>   maybe_send_barrier(tconn, req->epoch);
> #line 1376
>   tconn->send.current_epoch_writes = tconn->send.current_epoch_writes + 1U;
> #line 1378
>   err = drbd_send_dblock(mdev, req);
> #line 1379
>   req_mod(req, err != 0 ? SEND_FAILED : HANDED_OVER_TO_NETWORK);
> #line 1381
>   return (err);
18241,18242c18043,18044
< #line 1436 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< int w_send_read_req(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) 
---
> #line 1390 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
> int w_send_read_req(struct drbd_work *w , int cancel ) 
18246c18048,18050
<   int ok ;
---
>   struct drbd_conf *mdev ;
>   struct drbd_tconn *tconn ;
>   int err ;
18248,18249d18051
<   union drbd_state val ;
<   union drbd_state mask ;
18252c18054
< #line 1438
---
> #line 1392
18254c18056
< #line 1438
---
> #line 1392
18256c18058,18062
< #line 1441
---
> #line 1393
>   mdev = w->ldv_50388.mdev;
> #line 1394
>   tconn = mdev->tconn;
> #line 1397
18258c18064
< #line 1441
---
> #line 1397
18260,18285c18066,18069
< #line 1442
<     req_mod(req, send_canceled);
< #line 1443
<     return (1);
<   } else {
< 
<   }
< #line 1446
<   ok = drbd_send_drequest(mdev, 8, req->sector, (int )req->size, (u64 )req);
< #line 1449
<   if (ok == 0) {
< #line 1452
<     if ((int )mdev->state.ldv_39979.conn > 9) {
< #line 1453
<       val.i = 0U;
< #line 1453
<       val.ldv_39979.conn = 5U;
< #line 1453
<       mask.i = 0U;
< #line 1453
<       mask.ldv_39979.conn = 31U;
< #line 1453
<       drbd_force_state(mdev, mask, val);
<     } else {
< 
<     }
---
> #line 1398
>     req_mod(req, SEND_CANCELED);
> #line 1399
>     return (0);
18289,18292c18073,18080
< #line 1455
<   req_mod(req, ok != 0 ? handed_over_to_network : send_failed);
< #line 1457
<   return (ok);
---
> #line 1404
>   maybe_send_barrier(tconn, req->epoch);
> #line 1406
>   err = drbd_send_drequest(mdev, 8, req->i.sector, (int )req->i.size, (u64 )req);
> #line 1409
>   req_mod(req, err != 0 ? SEND_FAILED : HANDED_OVER_TO_NETWORK);
> #line 1411
>   return (err);
18295,18296c18083,18084
< #line 1460 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< int w_restart_disk_io(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) 
---
> #line 1414 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
> int w_restart_disk_io(struct drbd_work *w , int cancel ) 
18299a18088
>   struct drbd_conf *mdev ;
18302c18091
< #line 1462
---
> #line 1416
18304c18093
< #line 1462
---
> #line 1416
18306,18309c18095,18100
< #line 1464
<   if ((int )(req->master_bio)->bi_rw & 1 && (req->rq_state & 4096UL) != 0UL) {
< #line 1465
<     drbd_al_begin_io(mdev, req->sector);
---
> #line 1417
>   mdev = w->ldv_50388.mdev;
> #line 1419
>   if ((int )(req->master_bio)->bi_rw & 1 && ((unsigned long )req->rq_state & 4096UL) != 0UL) {
> #line 1420
>     drbd_al_begin_io(mdev, & req->i);
18313c18104
< #line 1471
---
> #line 1422
18315c18106
< #line 1472
---
> #line 1423
18317c18108
< #line 1473
---
> #line 1424
18319,18320c18110,18111
< #line 1475
<   return (1);
---
> #line 1426
>   return (0);
18323c18114
< #line 1478 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
---
> #line 1429 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
18327c18118,18124
<   int _b ;
---
>   int resync_after ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
>   bool _bool ;
>   int tmp___1 ;
18330c18127
< #line 1480
---
> #line 1431
18332,18335c18129,18132
<   ldv_51927: ;
< #line 1483
<   if (odev->sync_conf.after == -1) {
< #line 1484
---
>   ldv_52229: ;
> #line 1435
>   if ((unsigned long )odev->ldev == (unsigned long )((struct drbd_backing_dev *)0)) {
> #line 1436
18340,18349c18137,18156
< #line 1485
<   odev = minor_to_mdev((unsigned int )odev->sync_conf.after);
< #line 1486
<   _b = (unsigned long )odev == (unsigned long )((struct drbd_conf *)0);
< #line 1486
<   if (_b != 0) {
< #line 1486
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "_drbd_may_sync_now", (char *)"!odev", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared",
<             1486);
---
> #line 1437
>   rcu_read_lock();
> #line 1438
>   _________p1 = *((struct disk_conf * volatile  *)(& (odev->ldev)->disk_conf));
> #line 1438
>   tmp = debug_lockdep_rcu_enabled();
> #line 1438
>   if (tmp != 0 && ! __warned) {
> #line 1438
>     tmp___0 = rcu_read_lock_held();
> #line 1438
>     if (tmp___0 == 0 && 1) {
> #line 1438
>       __warned = 1;
> #line 1438
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared",
>                              1438, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
18353,18355c18160,18166
< #line 1486
<   if (_b != 0) {
< #line 1486
---
> #line 1438
>   resync_after = _________p1->resync_after;
> #line 1439
>   rcu_read_unlock();
> #line 1440
>   if (resync_after == -1) {
> #line 1441
18360,18363c18171,18179
< #line 1487
<   if (((((int )odev->state.ldv_39979.conn > 15 && (int )odev->state.ldv_39979.conn <= 21) || (unsigned int )*((unsigned char *)odev + 2278UL) != 0U) || (unsigned int )*((unsigned char *)odev + 2278UL) != 0U) || (unsigned int )*((unsigned char *)odev + 2278UL) != 0U) {
< #line 1491
<     return (0);
---
> #line 1442
>   odev = minor_to_mdev((unsigned int )resync_after);
> #line 1443
>   _bool = (unsigned long )odev != (unsigned long )((struct drbd_conf *)0);
> #line 1443
>   if (! _bool) {
> #line 1443
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"odev", "_drbd_may_sync_now");
18367,18374c18183,18212
< #line 1492
<   goto ldv_51927;
< }
< }
< #line 1501 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< static int _drbd_pause_after(struct drbd_conf *mdev ) 
< { 
<   struct drbd_conf *odev ;
---
> #line 1443
>   if (_bool) {
> #line 1443
>     tmp___1 = 0;
>   } else {
> #line 1443
>     tmp___1 = 1;
>   }
> #line 1443
>   if (tmp___1) {
> #line 1444
>     return (1);
>   } else {
> 
>   }
> #line 1445
>   if (((((int )odev->state.ldv_50103.conn > 15 && (int )odev->state.ldv_50103.conn <= 21) || (unsigned int )*((unsigned char *)odev + 750UL) != 0U) || (unsigned int )*((unsigned char *)odev + 750UL) != 0U) || (unsigned int )*((unsigned char *)odev + 750UL) != 0U) {
> #line 1449
>     return (0);
>   } else {
> 
>   }
> #line 1450
>   goto ldv_52229;
> }
> }
> #line 1459 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
> static int _drbd_pause_after(struct drbd_conf *mdev ) 
> { 
>   struct drbd_conf *odev ;
18376a18215
>   void *tmp ;
18378,18379c18217,18219
<   enum drbd_state_rv tmp ;
<   int tmp___0 ;
---
>   enum drbd_state_rv tmp___0 ;
>   int tmp___1 ;
>   void *tmp___2 ;
18382c18222
< #line 1504
---
> #line 1462
18384c18224,18226
< #line 1506
---
> #line 1464
>   rcu_read_lock();
> #line 1465
18386,18401c18228,18238
< #line 1506
<   goto ldv_51938;
<   ldv_51937: 
< #line 1507
<   odev = minor_to_mdev((unsigned int )i);
< #line 1508
<   if ((unsigned long )odev == (unsigned long )((struct drbd_conf *)0)) {
< #line 1509
<     goto ldv_51934;
<   } else {
< 
<   }
< #line 1510
<   if ((unsigned int )*((unsigned short *)odev + 1138UL) == 0U && (unsigned int )*((unsigned char *)odev + 2277UL) == 0U) {
< #line 1511
<     goto ldv_51934;
---
> #line 1465
>   tmp = idr_get_next(& minors, & i);
> #line 1465
>   odev = (struct drbd_conf *)tmp;
> #line 1465
>   goto ldv_52240;
>   ldv_52239: ;
> #line 1466
>   if ((unsigned int )*((unsigned short *)odev + 374UL) == 0U && (unsigned int )*((unsigned char *)odev + 749UL) == 0U) {
> #line 1467
>     goto ldv_52236;
18405,18416c18242,18253
< #line 1512
<   tmp___0 = _drbd_may_sync_now(odev);
< #line 1512
<   if (tmp___0 == 0) {
< #line 1513
<     __ns.i = odev->state.i;
< #line 1513
<     __ns.ldv_39979.aftr_isp = 1U;
< #line 1513
<     tmp = __drbd_set_state(odev, __ns, CS_HARD, 0);
< #line 1513
<     rv = ((int )tmp != 2) | rv;
---
> #line 1468
>   tmp___1 = _drbd_may_sync_now(odev);
> #line 1468
>   if (tmp___1 == 0) {
> #line 1469
>     __ns = drbd_read_state(odev);
> #line 1469
>     __ns.ldv_40604.aftr_isp = 1U;
> #line 1469
>     tmp___0 = __drbd_set_state(odev, __ns, CS_HARD, 0);
> #line 1469
>     rv = ((int )tmp___0 != 2) | rv;
18420,18421c18257,18258
<   ldv_51934: 
< #line 1506
---
>   ldv_52236: 
> #line 1465
18423,18427c18260,18268
<   ldv_51938: ;
< #line 1506
<   if ((unsigned int )i < minor_count) {
< #line 1507
<     goto ldv_51937;
---
> #line 1465
>   tmp___2 = idr_get_next(& minors, & i);
> #line 1465
>   odev = (struct drbd_conf *)tmp___2;
>   ldv_52240: ;
> #line 1465
>   if ((unsigned long )odev != (unsigned long )((struct drbd_conf *)0)) {
> #line 1466
>     goto ldv_52239;
18431,18432c18272,18274
< 
< #line 1517
---
> #line 1472
>   rcu_read_unlock();
> #line 1474
18436c18278
< #line 1526 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
---
> #line 1483 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
18441a18284
>   void *tmp ;
18443,18444c18286,18288
<   enum drbd_state_rv tmp ;
<   int tmp___0 ;
---
>   enum drbd_state_rv tmp___0 ;
>   int tmp___1 ;
>   void *tmp___2 ;
18447c18291
< #line 1529
---
> #line 1486
18449c18293,18295
< #line 1531
---
> #line 1488
>   rcu_read_lock();
> #line 1489
18451,18466c18297,18307
< #line 1531
<   goto ldv_51950;
<   ldv_51949: 
< #line 1532
<   odev = minor_to_mdev((unsigned int )i);
< #line 1533
<   if ((unsigned long )odev == (unsigned long )((struct drbd_conf *)0)) {
< #line 1534
<     goto ldv_51946;
<   } else {
< 
<   }
< #line 1535
<   if ((unsigned int )*((unsigned short *)odev + 1138UL) == 0U && (unsigned int )*((unsigned char *)odev + 2277UL) == 0U) {
< #line 1536
<     goto ldv_51946;
---
> #line 1489
>   tmp = idr_get_next(& minors, & i);
> #line 1489
>   odev = (struct drbd_conf *)tmp;
> #line 1489
>   goto ldv_52252;
>   ldv_52251: ;
> #line 1490
>   if ((unsigned int )*((unsigned short *)odev + 374UL) == 0U && (unsigned int )*((unsigned char *)odev + 749UL) == 0U) {
> #line 1491
>     goto ldv_52248;
18470,18483c18311,18324
< #line 1537
<   if ((unsigned int )*((unsigned char *)odev + 2278UL) != 0U) {
< #line 1538
<     tmp___0 = _drbd_may_sync_now(odev);
< #line 1538
<     if (tmp___0 != 0) {
< #line 1539
<       __ns.i = odev->state.i;
< #line 1539
<       __ns.ldv_39979.aftr_isp = 0U;
< #line 1539
<       tmp = __drbd_set_state(odev, __ns, CS_HARD, 0);
< #line 1539
<       rv = ((int )tmp != 2) | rv;
---
> #line 1492
>   if ((unsigned int )*((unsigned char *)odev + 750UL) != 0U) {
> #line 1493
>     tmp___1 = _drbd_may_sync_now(odev);
> #line 1493
>     if (tmp___1 != 0) {
> #line 1494
>       __ns = drbd_read_state(odev);
> #line 1494
>       __ns.ldv_40604.aftr_isp = 0U;
> #line 1494
>       tmp___0 = __drbd_set_state(odev, __ns, CS_HARD, 0);
> #line 1494
>       rv = ((int )tmp___0 != 2) | rv;
18490,18491c18331,18332
<   ldv_51946: 
< #line 1531
---
>   ldv_52248: 
> #line 1489
18493,18497c18334,18342
<   ldv_51950: ;
< #line 1531
<   if ((unsigned int )i < minor_count) {
< #line 1532
<     goto ldv_51949;
---
> #line 1489
>   tmp___2 = idr_get_next(& minors, & i);
> #line 1489
>   odev = (struct drbd_conf *)tmp___2;
>   ldv_52252: ;
> #line 1489
>   if ((unsigned long )odev != (unsigned long )((struct drbd_conf *)0)) {
> #line 1490
>     goto ldv_52251;
18501,18502c18346,18348
< 
< #line 1544
---
> #line 1499
>   rcu_read_unlock();
> #line 1500
18506c18352
< #line 1547 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
---
> #line 1503 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
18512c18358
< #line 1549
---
> #line 1505
18514c18360
< #line 1550
---
> #line 1506
18516c18362
< #line 1551
---
> #line 1507
18518c18364
< #line 1552
---
> #line 1508
18522c18368
< #line 1554 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
---
> #line 1510 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
18528c18374
< #line 1556
---
> #line 1512
18530c18376
< #line 1557
---
> #line 1513
18532c18378
< #line 1558
---
> #line 1514
18534c18380
< #line 1559
---
> #line 1515
18538,18539c18384,18385
< #line 1561 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< static int sync_after_error(struct drbd_conf *mdev , int o_minor ) 
---
> #line 1518 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
> enum drbd_ret_code drbd_resync_after_valid(struct drbd_conf *mdev , int o_minor ) 
18541a18388
>   int resync_after ;
18542a18390,18393
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp___0 ;
>   int tmp___1 ;
18545c18396
< #line 1565
---
> #line 1523
18547,18548c18398,18399
< #line 1566
<     return (101);
---
> #line 1524
>     return (NO_ERROR);
18552c18403
< #line 1567
---
> #line 1525
18554,18555c18405,18406
< #line 1568
<     return (132);
---
> #line 1526
>     return (ERR_RESYNC_AFTER);
18557c18408
< #line 1567
---
> #line 1525
18559c18410
< #line 1567
---
> #line 1525
18561,18562c18412,18413
< #line 1568
<       return (132);
---
> #line 1526
>       return (ERR_RESYNC_AFTER);
18567c18418
< #line 1571
---
> #line 1529
18569,18570c18420,18421
<   ldv_51963: ;
< #line 1573
---
>   ldv_52269: ;
> #line 1531
18572,18573c18423,18424
< #line 1574
<     return (133);
---
> #line 1532
>     return (ERR_RESYNC_AFTER_CYCLE);
18577,18580c18428,18447
< #line 1577
<   if (odev->sync_conf.after == -1) {
< #line 1578
<     return (101);
---
> #line 1534
>   rcu_read_lock();
> #line 1535
>   _________p1 = *((struct disk_conf * volatile  *)(& (odev->ldev)->disk_conf));
> #line 1535
>   tmp___0 = debug_lockdep_rcu_enabled();
> #line 1535
>   if (tmp___0 != 0 && ! __warned) {
> #line 1535
>     tmp___1 = rcu_read_lock_held();
> #line 1535
>     if (tmp___1 == 0 && 1) {
> #line 1535
>       __warned = 1;
> #line 1535
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared",
>                              1535, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
18584,18587c18451,18465
< #line 1581
<   odev = minor_to_mdev((unsigned int )odev->sync_conf.after);
< #line 1582
<   goto ldv_51963;
---
> #line 1535
>   resync_after = _________p1->resync_after;
> #line 1536
>   rcu_read_unlock();
> #line 1538
>   if (resync_after == -1) {
> #line 1539
>     return (NO_ERROR);
>   } else {
> 
>   }
> #line 1542
>   odev = minor_to_mdev((unsigned int )resync_after);
> #line 1543
>   goto ldv_52269;
18590,18591c18468,18469
< #line 1585 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< int drbd_alter_sa(struct drbd_conf *mdev , int na ) 
---
> #line 1547 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
> void drbd_resync_after_changed(struct drbd_conf *mdev ) 
18594d18471
<   int retcode ;
18598,18620c18475,18485
< #line 1590
<   _raw_write_lock_irq(& global_state_lock);
< #line 1591
<   retcode = sync_after_error(mdev, na);
< #line 1592
<   if (retcode == 101) {
< #line 1593
<     mdev->sync_conf.after = na;
<     ldv_51970: 
< #line 1595
<     changes = _drbd_pause_after(mdev);
< #line 1596
<     tmp = _drbd_resume_next(mdev);
< #line 1596
<     changes = tmp | changes;
< #line 1597
<     if (changes != 0) {
< #line 1598
<       goto ldv_51970;
<     } else {
< 
<     }
< 
---
>   ldv_52274: 
> #line 1552
>   changes = _drbd_pause_after(mdev);
> #line 1553
>   tmp = _drbd_resume_next(mdev);
> #line 1553
>   changes = tmp | changes;
> #line 1554
>   if (changes != 0) {
> #line 1555
>     goto ldv_52274;
18624,18627c18489,18491
< #line 1599
<   _raw_write_unlock_irq(& global_state_lock);
< #line 1600
<   return (retcode);
---
> 
> #line 1559
>   return;
18630c18494
< #line 1603 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
---
> #line 1557 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
18633c18497,18501
< 
---
>   struct fifo_buffer *plan ;
>   struct fifo_buffer *_________p1 ;
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
18636c18504
< #line 1605
---
> #line 1561
18638c18506
< #line 1606
---
> #line 1562
18640c18508
< #line 1607
---
> #line 1563
18642,18650c18510,18555
< #line 1608
<   mdev->rs_planed = 0;
< #line 1609
<   spin_lock(& mdev->peer_seq_lock);
< #line 1610
<   fifo_set(& mdev->rs_plan_s, 0);
< #line 1611
<   spin_unlock(& mdev->peer_seq_lock);
< #line 1612
---
> #line 1569
>   rcu_read_lock();
> #line 1570
>   _________p1 = *((struct fifo_buffer * volatile  *)(& mdev->rs_plan_s));
> #line 1570
>   tmp = debug_lockdep_rcu_enabled();
> #line 1570
>   if (tmp != 0 && ! __warned) {
> #line 1570
>     tmp___0 = rcu_read_lock_held();
> #line 1570
>     if (tmp___0 == 0 && 1) {
> #line 1570
>       __warned = 1;
> #line 1570
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared",
>                              1570, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1570
>   plan = _________p1;
> #line 1571
>   plan->total = 0;
> #line 1572
>   fifo_set(plan, 0);
> #line 1573
>   rcu_read_unlock();
> #line 1574
>   return;
> }
> }
> #line 1576 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
> void start_resync_timer_fn(unsigned long data ) 
> { 
>   struct drbd_conf *mdev ;
> 
>   {
> #line 1578
>   mdev = (struct drbd_conf *)data;
> #line 1580
>   drbd_queue_work(& (mdev->tconn)->sender_work, & mdev->start_resync_work);
> #line 1581
18654c18559,18606
< #line 1622 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
---
> #line 1583 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
> int w_start_resync(struct drbd_work *w , int cancel ) 
> { 
>   struct drbd_conf *mdev ;
>   int tmp ;
>   int tmp___0 ;
> 
>   {
> #line 1585
>   mdev = w->ldv_50388.mdev;
> #line 1587
>   tmp = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
> #line 1587
>   if (tmp != 0) {
> #line 1588
>     dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "w_start_resync later...\n");
> #line 1589
>     mdev->start_resync_timer.expires = (unsigned long )jiffies + 25UL;
> #line 1590
>     add_timer(& mdev->start_resync_timer);
> #line 1591
>     return (0);
>   } else {
> #line 1587
>     tmp___0 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
> #line 1587
>     if (tmp___0 != 0) {
> #line 1588
>       dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "w_start_resync later...\n");
> #line 1589
>       mdev->start_resync_timer.expires = (unsigned long )jiffies + 25UL;
> #line 1590
>       add_timer(& mdev->start_resync_timer);
> #line 1591
>       return (0);
>     } else {
> 
>     }
>   }
> #line 1594
>   drbd_start_resync(mdev, C_SYNC_SOURCE);
> #line 1595
>   clear_bit(19, (unsigned long volatile   *)(& mdev->flags));
> #line 1596
>   return (0);
> }
> }
> #line 1607 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
18665c18617,18620
<   enum drbd_state_rv tmp___1 ;
---
>   struct task_struct *tmp___1 ;
>   int tmp___2 ;
>   int tmp___3 ;
>   enum drbd_state_rv tmp___4 ;
18667c18622
<   unsigned long tmp___2 ;
---
>   unsigned long tmp___5 ;
18670c18625,18631
<   char const   *tmp___3 ;
---
>   char const   *tmp___6 ;
>   struct net_conf *nc ;
>   int timeo ;
>   struct net_conf *_________p1 ;
>   bool __warned ;
>   int tmp___7 ;
>   int tmp___8 ;
18673,18675c18634,18636
< #line 1627
<   if ((int )mdev->state.ldv_39979.conn > 15 && (int )mdev->state.ldv_39979.conn <= 21) {
< #line 1628
---
> #line 1612
>   if ((int )mdev->state.ldv_50103.conn > 15 && (int )mdev->state.ldv_50103.conn <= 21) {
> #line 1613
18677c18638
< #line 1629
---
> #line 1614
18681a18643,18675
> #line 1617
>   tmp = constant_test_bit(20U, (unsigned long const volatile   *)(& mdev->flags));
> #line 1617
>   if (tmp == 0) {
> #line 1618
>     if ((unsigned int )side == 17U) {
> #line 1622
>       r = drbd_khelper(mdev, (char *)"before-resync-target");
> #line 1623
>       r = (r >> 8) & 255;
> #line 1624
>       if (r > 0) {
> #line 1625
>         _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "before-resync-target handler returned %d, dropping connection.\n",
>                   r);
> #line 1627
>         val.i = 0U;
> #line 1627
>         val.ldv_40604.conn = 1U;
> #line 1627
>         mask.i = 0U;
> #line 1627
>         mask.ldv_40604.conn = 31U;
> #line 1627
>         conn_request_state(mdev->tconn, mask, val, CS_HARD);
> #line 1628
>         return;
>       } else {
> 
>       }
>     } else {
> #line 1631
>       r = drbd_khelper(mdev, (char *)"before-resync-source");
18683,18687c18677,18685
<   if ((unsigned int )side == 17U) {
< #line 1636
<     r = drbd_khelper(mdev, (char *)"before-resync-target");
< #line 1637
<     r = (r >> 8) & 255;
---
>       r = (r >> 8) & 255;
> #line 1633
>       if (r > 0) {
> #line 1634
>         if (r == 3) {
> #line 1635
>           _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "before-resync-source handler returned %d, ignoring. Old userland tools?",
>                     r);
>         } else {
18689,18700c18687,18698
<     if (r > 0) {
< #line 1639
<       _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "before-resync-target handler returned %d, dropping connection.\n",
<                 r);
< #line 1641
<       val.i = 0U;
< #line 1641
<       val.ldv_39979.conn = 1U;
< #line 1641
<       mask.i = 0U;
< #line 1641
<       mask.ldv_39979.conn = 31U;
---
>           _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "before-resync-source handler returned %d, dropping connection.\n",
>                     r);
> #line 1640
>           val___0.i = 0U;
> #line 1640
>           val___0.ldv_40604.conn = 1U;
> #line 1640
>           mask___0.i = 0U;
> #line 1640
>           mask___0.ldv_40604.conn = 31U;
> #line 1640
>           conn_request_state(mdev->tconn, mask___0, val___0, CS_HARD);
18702,18705c18700,18702
<       drbd_force_state(mdev, mask, val);
< #line 1642
<       return;
<     } else {
---
>           return;
>         }
>       } else {
18706a18704
>       }
18709,18712c18707,18708
< #line 1645
<     r = drbd_khelper(mdev, (char *)"before-resync-source");
< #line 1646
<     r = (r >> 8) & 255;
---
> 
>   }
18714,18720c18710,18718
<     if (r > 0) {
< #line 1648
<       if (r == 3) {
< #line 1649
<         _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "before-resync-source handler returned %d, ignoring. Old userland tools?",
<                   r);
<       } else {
---
>   tmp___1 = get_current();
> #line 1647
>   if ((unsigned long )tmp___1 == (unsigned long )(mdev->tconn)->worker.task) {
> #line 1650
>     tmp___0 = mutex_trylock(mdev->state_mutex);
> #line 1650
>     if (tmp___0 == 0) {
> #line 1651
>       set_bit(20U, (unsigned long volatile   *)(& mdev->flags));
18722,18731c18720,18722
<         _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "before-resync-source handler returned %d, dropping connection.\n",
<                   r);
< #line 1654
<         val___0.i = 0U;
< #line 1654
<         val___0.ldv_39979.conn = 1U;
< #line 1654
<         mask___0.i = 0U;
< #line 1654
<         mask___0.ldv_39979.conn = 31U;
---
>       mdev->start_resync_timer.expires = (unsigned long )jiffies + 50UL;
> #line 1653
>       add_timer(& mdev->start_resync_timer);
18733,18736c18724
<         drbd_force_state(mdev, mask___0, val___0);
< #line 1655
<         return;
<       }
---
>       return;
18738c18726,18727
< 
---
> #line 1657
>       mutex_lock_nested(mdev->state_mutex, 0U);
18739a18729,18730
>   } else {
> 
18741,18742c18732,18733
< #line 1660
<   drbd_state_lock(mdev);
---
> #line 1659
>   clear_bit(20, (unsigned long volatile   *)(& mdev->flags));
18746c18737
<   tmp = _get_ldev_if_state(mdev, D_NEGOTIATING);
---
>   tmp___2 = _get_ldev_if_state(mdev, D_NEGOTIATING);
18748c18739
<   if (tmp == 0) {
---
>   if (tmp___2 == 0) {
18752c18743
<     drbd_state_unlock(mdev);
---
>     mutex_unlock(mdev->state_mutex);
18759c18750
<   ns.i = mdev->state.i;
---
>   ns = drbd_read_state(mdev);
18761c18752
<   tmp___0 = _drbd_may_sync_now(mdev);
---
>   tmp___3 = _drbd_may_sync_now(mdev);
18763c18754
<   ns.ldv_39979.aftr_isp = tmp___0 == 0;
---
>   ns.ldv_40604.aftr_isp = tmp___3 == 0;
18765c18756
<   ns.ldv_39979.conn = (unsigned char )side;
---
>   ns.ldv_40604.conn = (unsigned char )side;
18769c18760
<     ns.ldv_39979.disk = 4U;
---
>     ns.ldv_40604.disk = 4U;
18772c18763
<     ns.ldv_39979.pdsk = 4U;
---
>     ns.ldv_40604.pdsk = 4U;
18775c18766
<   tmp___1 = __drbd_set_state(mdev, ns, CS_VERBOSE, 0);
---
>   tmp___4 = __drbd_set_state(mdev, ns, CS_VERBOSE, 0);
18777c18768
<   r = (int )tmp___1;
---
>   r = (int )tmp___4;
18779c18770
<   ns = mdev->state;
---
>   ns = drbd_read_state(mdev);
18781c18772
<   if ((int )ns.ldv_39979.conn <= 9) {
---
>   if ((int )ns.ldv_40604.conn <= 9) {
18790c18781
<     tmp___2 = drbd_bm_total_weight(mdev);
---
>     tmp___5 = drbd_bm_total_weight(mdev);
18792c18783
<     tw = tmp___2;
---
>     tw = tmp___5;
18812,18813c18803,18804
<     goto ldv_51993;
<     ldv_51992: 
---
>     goto ldv_52310;
>     ldv_52309: 
18820c18811
<     ldv_51993: ;
---
>     ldv_52310: ;
18824c18815
<       goto ldv_51992;
---
>       goto ldv_52309;
18837,18841c18828,18831
< #line 1706
<     tmp___3 = drbd_conn_str((enum drbd_conns )ns.ldv_39979.conn);
< #line 1706
<     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Began resync as %s (will sync %lu KB [%lu bits set]).\n",
<               tmp___3, mdev->rs_total << 2, mdev->rs_total);
---
> #line 1708
>     mdev->rs_last_bcast = (unsigned long )jiffies - 250UL;
> #line 1710
>     tmp___6 = drbd_conn_str((enum drbd_conns )ns.ldv_40604.conn);
18842a18833,18835
>     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Began resync as %s (will sync %lu KB [%lu bits set]).\n",
>               tmp___6, mdev->rs_total << 2, mdev->rs_total);
> #line 1714
18844c18837
< #line 1711
---
> #line 1715
18849,18851c18842,18844
< #line 1720
<     if ((unsigned int )side == 16U && mdev->agreed_pro_version <= 95) {
< #line 1721
---
> #line 1724
>     if ((unsigned int )side == 16U && (mdev->tconn)->agreed_pro_version <= 95) {
> #line 1725
18856,18858c18849,18851
< #line 1723
<     if (mdev->agreed_pro_version <= 94 && mdev->rs_total == 0UL) {
< #line 1734
---
> #line 1727
>     if ((mdev->tconn)->agreed_pro_version <= 94 && mdev->rs_total == 0UL) {
> #line 1738
18860,18861c18853,18883
< #line 1735
<         schedule_timeout_interruptible((long )((mdev->net_conf)->ping_int * 250 + ((mdev->net_conf)->ping_timeo * 250) / 9));
---
> #line 1742
>         rcu_read_lock();
> #line 1743
>         _________p1 = *((struct net_conf * volatile  *)(& (mdev->tconn)->net_conf));
> #line 1743
>         tmp___7 = debug_lockdep_rcu_enabled();
> #line 1743
>         if (tmp___7 != 0 && ! __warned) {
> #line 1743
>           tmp___8 = rcu_read_lock_held();
> #line 1743
>           if (tmp___8 == 0 && 1) {
> #line 1743
>             __warned = 1;
> #line 1743
>             lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared",
>                                    1743, "suspicious rcu_dereference_check() usage");
>           } else {
> 
>           }
>         } else {
> 
>         }
> #line 1743
>         nc = _________p1;
> #line 1744
>         timeo = (int )(nc->ping_int * 250U + (nc->ping_timeo * 250U) / 9U);
> #line 1745
>         rcu_read_unlock();
> #line 1746
>         schedule_timeout_interruptible((long )timeo);
18865c18887
< #line 1738
---
> #line 1748
18870c18892
< #line 1741
---
> #line 1751
18872c18894
< #line 1746
---
> #line 1756
18874c18896
< #line 1747
---
> #line 1757
18879c18901
< #line 1749
---
> #line 1759
18884c18906
< #line 1751
---
> #line 1761
18886,18888c18908,18910
< #line 1752
<   drbd_state_unlock(mdev);
< #line 1753
---
> #line 1762
>   mutex_unlock(mdev->state_mutex);
> #line 1763
18892,18893c18914,18915
< #line 1755 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< int drbd_worker(struct drbd_thread *thi ) 
---
> #line 1769 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
> bool need_to_send_barrier(struct drbd_tconn *connection ) 
18895,18918c18917
<   struct drbd_conf *mdev ;
<   struct drbd_work *w ;
<   struct list_head work_list ;
<   int intr ;
<   int i ;
<   unsigned int tmp ;
<   struct task_struct *tmp___0 ;
<   int tmp___1 ;
<   struct task_struct *tmp___2 ;
<   int _b ;
<   enum drbd_thread_state tmp___3 ;
<   enum drbd_thread_state tmp___4 ;
<   int _b___0 ;
<   int tmp___5 ;
<   struct list_head  const  *__mptr ;
<   union drbd_state val ;
<   union drbd_state mask ;
<   int tmp___6 ;
<   enum drbd_thread_state tmp___7 ;
<   int tmp___8 ;
<   int tmp___9 ;
<   struct list_head  const  *__mptr___0 ;
<   int tmp___10 ;
<   int tmp___11 ;
---
>   int tmp ;
18921,18954d18919
< #line 1757
<   mdev = thi->mdev;
< #line 1758
<   w = 0;
< #line 1759
<   work_list.next = & work_list;
< #line 1759
<   work_list.prev = & work_list;
< #line 1760
<   intr = 0;
< #line 1762
<   tmp = mdev_to_minor(mdev);
< #line 1762
<   tmp___0 = get_current();
< #line 1762
<   sprintf((char *)(& tmp___0->comm), "drbd%d_worker", tmp);
< #line 1764
<   goto ldv_52006;
<   ldv_52016: 
< #line 1765
<   drbd_thread_current_set_cpu(mdev);
< #line 1767
<   tmp___1 = down_trylock(& mdev->data.work.s);
< #line 1767
<   if (tmp___1 != 0) {
< #line 1768
<     ldv_mutex_lock_79(& mdev->data.mutex);
< #line 1769
<     if ((unsigned long )mdev->data.socket != (unsigned long )((struct socket *)0) && (unsigned int )*((unsigned char *)mdev->net_conf + 540UL) == 0U) {
< #line 1770
<       drbd_tcp_uncork(mdev->data.socket);
<     } else {
< 
<     }
18956,18960c18921,18926
<     ldv_mutex_unlock_80(& mdev->data.mutex);
< #line 1773
<     intr = down_interruptible(& mdev->data.work.s);
< #line 1775
<     ldv_mutex_lock_81(& mdev->data.mutex);
---
>   if (! connection->send.seen_any_write_yet) {
> #line 1772
>     return (0);
>   } else {
> 
>   }
18962c18928
<     if ((unsigned long )mdev->data.socket != (unsigned long )((struct socket *)0) && (unsigned int )*((unsigned char *)mdev->net_conf + 540UL) == 0U) {
---
>   if (connection->send.current_epoch_writes == 0U) {
18964,18969c18930
<       drbd_tcp_cork(mdev->data.socket);
<     } else {
< 
<     }
< #line 1778
<     ldv_mutex_unlock_82(& mdev->data.mutex);
---
>     return (0);
18973,19007d18933
< #line 1781
<   if (intr != 0) {
< #line 1782
<     if (intr != -4) {
< #line 1782
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( intr == -EINTR ) in %s:%d\n",
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared",
<               1782);
<     } else {
< 
<     }
< #line 1783
<     tmp___2 = get_current();
< #line 1783
<     flush_signals(tmp___2);
< #line 1784
<     tmp___3 = get_t_state(thi);
< #line 1784
<     _b = (unsigned int )tmp___3 == 1U;
< #line 1784
<     if (_b != 0) {
< #line 1784
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<               "drbd_worker", (char *)"get_t_state(thi) == Running", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared",
<               1784);
<     } else {
< 
<     }
< #line 1784
<     if (_b != 0) {
< #line 1785
<       goto ldv_52006;
<     } else {
< 
<     }
19009c18935,18939
<     goto ldv_52007;
---
>   tmp = atomic_read((atomic_t const   *)(& connection->current_tle_nr));
> #line 1786
>   if (tmp != connection->send.current_epoch_nr + 1) {
> #line 1788
>     return (0);
19013,19016d18942
< #line 1789
<   tmp___4 = get_t_state(thi);
< #line 1789
<   if ((unsigned int )tmp___4 != 1U) {
19018,19019c18944,18950
<     goto ldv_52007;
<   } else {
---
>   return (1);
> }
> }
> #line 1793 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
> bool dequeue_work_batch(struct drbd_work_queue *queue , struct list_head *work_list ) 
> { 
>   int tmp ;
19021c18952
<   }
---
>   {
19023c18954
<   w = 0;
---
>   spin_lock_irq(& queue->q_lock);
19025c18956
<   spin_lock_irq(& mdev->data.work.q_lock);
---
>   list_splice_init(& queue->q, work_list);
19027,19036c18958,18969
<   tmp___5 = list_empty((struct list_head  const  *)(& mdev->data.work.q));
< #line 1797
<   _b___0 = tmp___5 != 0;
< #line 1797
<   if (_b___0 != 0) {
< #line 1797
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_worker", (char *)"list_empty(&mdev->data.work.q)", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared",
<             1797);
<   } else {
---
>   spin_unlock_irq(& queue->q_lock);
> #line 1798
>   tmp = list_empty((struct list_head  const  *)work_list);
> #line 1798
>   return (tmp == 0);
> }
> }
> #line 1801 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
> bool dequeue_work_item(struct drbd_work_queue *queue , struct list_head *work_list ) 
> { 
>   int tmp ;
>   int tmp___0 ;
19038,19044c18971,18979
<   }
< #line 1797
<   if (_b___0 != 0) {
< #line 1809
<     spin_unlock_irq(& mdev->data.work.q_lock);
< #line 1810
<     goto ldv_52006;
---
>   {
> #line 1803
>   spin_lock_irq(& queue->q_lock);
> #line 1804
>   tmp = list_empty((struct list_head  const  *)(& queue->q));
> #line 1804
>   if (tmp == 0) {
> #line 1805
>     list_move(queue->q.next, work_list);
19047a18983,19015
> #line 1806
>   spin_unlock_irq(& queue->q_lock);
> #line 1807
>   tmp___0 = list_empty((struct list_head  const  *)work_list);
> #line 1807
>   return (tmp___0 == 0);
> }
> }
> #line 1810 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
> void wait_for_work(struct drbd_tconn *connection , struct list_head *work_list ) 
> { 
>   wait_queue_t wait ;
>   struct task_struct *tmp ;
>   struct net_conf *nc ;
>   int uncork ;
>   int cork ;
>   int tmp___0 ;
>   struct net_conf *_________p1 ;
>   bool __warned ;
>   int tmp___1 ;
>   int tmp___2 ;
>   int send_barrier ;
>   int tmp___3 ;
>   int tmp___4 ;
>   struct task_struct *tmp___5 ;
>   int tmp___6 ;
>   bool tmp___7 ;
>   struct net_conf *_________p1___0 ;
>   bool __warned___0 ;
>   int tmp___8 ;
>   int tmp___9 ;
> 
>   {
19049c19017
<   __mptr = (struct list_head  const  *)mdev->data.work.q.next;
---
>   tmp = get_current();
19051,19057c19019,19027
<   w = (struct drbd_work *)__mptr;
< #line 1813
<   list_del_init(& w->list);
< #line 1814
<   spin_unlock_irq(& mdev->data.work.q_lock);
< #line 1816
<   tmp___6 = (*(w->cb))(mdev, w, (int )mdev->state.ldv_39979.conn <= 9);
---
>   wait.flags = 0U;
> #line 1812
>   wait.private = (void *)tmp;
> #line 1812
>   wait.func = & autoremove_wake_function;
> #line 1812
>   wait.task_list.next = & wait.task_list;
> #line 1812
>   wait.task_list.prev = & wait.task_list;
19059c19029,19033
<   if (tmp___6 == 0) {
---
>   dequeue_work_item(& connection->sender_work, work_list);
> #line 1817
>   tmp___0 = list_empty((struct list_head  const  *)work_list);
> #line 1817
>   if (tmp___0 == 0) {
19061,19084c19035
<     if ((int )mdev->state.ldv_39979.conn > 9) {
< #line 1820
<       val.i = 0U;
< #line 1820
<       val.ldv_39979.conn = 5U;
< #line 1820
<       mask.i = 0U;
< #line 1820
<       mask.ldv_39979.conn = 31U;
< #line 1820
<       drbd_force_state(mdev, mask, val);
<     } else {
< 
<     }
<   } else {
< 
<   }
<   ldv_52006: 
< #line 1764
<   tmp___7 = get_t_state(thi);
< #line 1764
<   if ((unsigned int )tmp___7 == 1U) {
< #line 1765
<     goto ldv_52016;
---
>     return;
19088,19097c19039,19056
<   ldv_52007: 
< #line 1823
<   tmp___8 = drbd_test_flag(mdev, DEVICE_DYING);
< #line 1823
<   if (tmp___8 == 0) {
< #line 1823
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( drbd_test_flag(mdev, DEVICE_DYING) ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared",
<             1823);
<   } else {
---
> #line 1826
>   rcu_read_lock();
> #line 1827
>   _________p1 = *((struct net_conf * volatile  *)(& connection->net_conf));
> #line 1827
>   tmp___1 = debug_lockdep_rcu_enabled();
> #line 1827
>   if (tmp___1 != 0 && ! __warned) {
> #line 1827
>     tmp___2 = rcu_read_lock_held();
> #line 1827
>     if (tmp___2 == 0 && 1) {
> #line 1827
>       __warned = 1;
> #line 1827
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared",
>                              1827, "suspicious rcu_dereference_check() usage");
>     } else {
19099,19107c19058
<   }
< #line 1824
<   tmp___9 = drbd_test_flag(mdev, CONFIG_PENDING);
< #line 1824
<   if (tmp___9 == 0) {
< #line 1824
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( drbd_test_flag(mdev, CONFIG_PENDING) ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared",
<             1824);
---
>     }
19111,19112d19061
< #line 1826
<   spin_lock_irq(& mdev->data.work.q_lock);
19114c19063
<   i = 0;
---
>   nc = _________p1;
19116,19117c19065
<   goto ldv_52023;
<   ldv_52022: 
---
>   uncork = (unsigned long )nc != (unsigned long )((struct net_conf *)0) ? (int )nc->tcp_cork : 0;
19119c19067
<   list_splice_init(& mdev->data.work.q, & work_list);
---
>   rcu_read_unlock();
19121c19069,19071
<   spin_unlock_irq(& mdev->data.work.q_lock);
---
>   if (uncork != 0) {
> #line 1831
>     mutex_lock_nested(& connection->data.mutex, 0U);
19123,19126c19073
<   goto ldv_52020;
<   ldv_52019: 
< #line 1833
<   __mptr___0 = (struct list_head  const  *)work_list.next;
---
>     if ((unsigned long )connection->data.socket != (unsigned long )((struct socket *)0)) {
19128c19075,19078
<   w = (struct drbd_work *)__mptr___0;
---
>       drbd_tcp_uncork(connection->data.socket);
>     } else {
> 
>     }
19130,19141c19080
<   list_del_init(& w->list);
< #line 1835
<   (*(w->cb))(mdev, w, 1);
< #line 1836
<   i = i + 1;
<   ldv_52020: 
< #line 1832
<   tmp___10 = list_empty((struct list_head  const  *)(& work_list));
< #line 1832
<   if (tmp___10 == 0) {
< #line 1833
<     goto ldv_52019;
---
>     mutex_unlock(& connection->data.mutex);
19144a19084
>   ldv_52341: 
19146,19153c19086,19096
<   spin_lock_irq(& mdev->data.work.q_lock);
<   ldv_52023: 
< #line 1828
<   tmp___11 = list_empty((struct list_head  const  *)(& mdev->data.work.q));
< #line 1828
<   if (tmp___11 == 0) {
< #line 1829
<     goto ldv_52022;
---
>   prepare_to_wait(& connection->sender_work.q_wait, & wait, 1);
> #line 1840
>   spin_lock_irq(& connection->req_lock);
> #line 1841
>   spin_lock(& connection->sender_work.q_lock);
> #line 1844
>   tmp___3 = list_empty((struct list_head  const  *)(& connection->sender_work.q));
> #line 1844
>   if (tmp___3 == 0) {
> #line 1845
>     list_move(connection->sender_work.q.next, work_list);
19157,19158c19100,19101
< #line 1841
<   sema_init(& mdev->data.work.s, 0);
---
> #line 1846
>   spin_unlock(& connection->sender_work.q_lock);
19160,19162c19103,19107
<   spin_unlock_irq(& mdev->data.work.q_lock);
< #line 1849
<   if ((unsigned int )*((unsigned char *)mdev + 2277UL) != 0U || (unsigned int )*((unsigned short *)mdev + 1138UL) != 0U) {
---
>   tmp___4 = list_empty((struct list_head  const  *)work_list);
> #line 1847
>   if (tmp___4 == 0) {
> #line 1848
>     spin_unlock_irq(& connection->req_lock);
19164,19166c19109
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mdev->state.disk == D_DISKLESS && mdev->state.conn == C_STANDALONE ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared",
<             1849);
---
>     goto ldv_52340;
19167a19111,19121
> #line 1847
>     tmp___5 = get_current();
> #line 1847
>     tmp___6 = signal_pending(tmp___5);
> #line 1847
>     if (tmp___6 != 0) {
> #line 1848
>       spin_unlock_irq(& connection->req_lock);
> #line 1849
>       goto ldv_52340;
>     } else {
19168a19123
>     }
19169a19125,19128
> #line 1851
>   tmp___7 = need_to_send_barrier(connection);
> #line 1851
>   send_barrier = (int )tmp___7;
19171c19130
<   drbd_thread_stop(& mdev->receiver);
---
>   spin_unlock_irq(& connection->req_lock);
19173c19132,19134
<   drbd_mdev_cleanup(mdev);
---
>   if (send_barrier != 0) {
> #line 1854
>     drbd_send_barrier(connection);
19175c19136,19139
<   _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "worker terminated\n");
---
>     connection->send.current_epoch_nr = connection->send.current_epoch_nr + 1;
>   } else {
> 
>   }
19177,19181c19141
<   drbd_clear_flag(mdev, DEVICE_DYING);
< #line 1858
<   drbd_clear_flag(mdev, CONFIG_PENDING);
< #line 1859
<   __wake_up(& mdev->state_wait, 3U, 1, 0);
---
>   schedule();
19183,19188c19143,19164
<   return (0);
< }
< }
< #line 1864 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void ldv_mutex_lock_63(struct mutex *ldv_func_arg1 ) 
< { 
---
>   goto ldv_52341;
>   ldv_52340: 
> #line 1862
>   finish_wait(& connection->sender_work.q_wait, & wait);
> #line 1865
>   rcu_read_lock();
> #line 1866
>   _________p1___0 = *((struct net_conf * volatile  *)(& connection->net_conf));
> #line 1866
>   tmp___8 = debug_lockdep_rcu_enabled();
> #line 1866
>   if (tmp___8 != 0 && ! __warned___0) {
> #line 1866
>     tmp___9 = rcu_read_lock_held();
> #line 1866
>     if (tmp___9 == 0 && 1) {
> #line 1866
>       __warned___0 = 1;
> #line 1866
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared",
>                              1866, "suspicious rcu_dereference_check() usage");
>     } else {
19189a19166,19167
>     }
>   } else {
19191c19169,19175
<   {
---
>   }
> #line 1866
>   nc = _________p1___0;
> #line 1867
>   cork = (unsigned long )nc != (unsigned long )((struct net_conf *)0) ? (int )nc->tcp_cork : 0;
> #line 1868
>   rcu_read_unlock();
19193c19177,19179
<   ldv_mutex_lock_lock(ldv_func_arg1);
---
>   mutex_lock_nested(& connection->data.mutex, 0U);
> #line 1870
>   if ((unsigned long )connection->data.socket != (unsigned long )((struct socket *)0)) {
19195c19181
<   mutex_lock(ldv_func_arg1);
---
>     if (cork != 0) {
19197,19202c19183,19189
<   return;
< }
< }
< #line 1874 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void ldv_mutex_unlock_64(struct mutex *ldv_func_arg1 ) 
< { 
---
>       drbd_tcp_cork(connection->data.socket);
>     } else
> #line 1873
>     if (uncork == 0) {
> #line 1874
>       drbd_tcp_uncork(connection->data.socket);
>     } else {
19203a19191,19192
>     }
>   } else {
19205,19210c19194,19197
<   {
< #line 1879
<   ldv_mutex_unlock_lock(ldv_func_arg1);
< #line 1881
<   mutex_unlock(ldv_func_arg1);
< #line 1882
---
>   }
> #line 1876
>   mutex_unlock(& connection->data.mutex);
> #line 1877
19214,19215c19201,19202
< #line 1884 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void ldv_mutex_lock_65(struct mutex *ldv_func_arg1 ) 
---
> #line 1879 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared"
> int drbd_worker(struct drbd_thread *thi ) 
19217c19204,19225
< 
---
>   struct drbd_tconn *tconn ;
>   struct drbd_work *w ;
>   struct drbd_conf *mdev ;
>   struct list_head work_list ;
>   int vnr ;
>   int tmp ;
>   struct task_struct *tmp___0 ;
>   enum drbd_thread_state tmp___1 ;
>   struct task_struct *tmp___2 ;
>   int tmp___3 ;
>   enum drbd_thread_state tmp___4 ;
>   struct list_head  const  *__mptr ;
>   int tmp___5 ;
>   union drbd_state val ;
>   union drbd_state mask ;
>   int tmp___6 ;
>   enum drbd_thread_state tmp___7 ;
>   struct list_head  const  *__mptr___0 ;
>   int tmp___8 ;
>   int tmp___9 ;
>   void *tmp___10 ;
>   void *tmp___11 ;
19220,19223c19228,19240
< #line 1889
<   ldv_mutex_lock_mutex_of_device(ldv_func_arg1);
< #line 1891
<   mutex_lock(ldv_func_arg1);
---
> #line 1881
>   tconn = thi->tconn;
> #line 1882
>   w = 0;
> #line 1884
>   work_list.next = & work_list;
> #line 1884
>   work_list.prev = & work_list;
> #line 1887
>   goto ldv_52353;
>   ldv_52364: 
> #line 1888
>   drbd_thread_current_set_cpu(thi);
19225,19233c19242,19247
<   return;
< }
< }
< #line 1894 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< int ldv_mutex_trylock_66(struct mutex *ldv_func_arg1 ) 
< { 
<   ldv_func_ret_type___2 ldv_func_res ;
<   int tmp ;
<   int tmp___0 ;
---
>   tmp = list_empty((struct list_head  const  *)(& work_list));
> #line 1892
>   if (tmp != 0) {
> #line 1893
>     wait_for_work(tconn, & work_list);
>   } else {
19235,19237c19249,19265
<   {
< #line 1899
<   tmp = mutex_trylock(ldv_func_arg1);
---
>   }
> #line 1895
>   tmp___2 = get_current();
> #line 1895
>   tmp___3 = signal_pending(tmp___2);
> #line 1895
>   if (tmp___3 != 0) {
> #line 1896
>     tmp___0 = get_current();
> #line 1896
>     flush_signals(tmp___0);
> #line 1897
>     tmp___1 = get_t_state(thi);
> #line 1897
>     if ((unsigned int )tmp___1 == 1U) {
> #line 1898
>       printk("\fd-con %s: Worker got an unexpected signal\n", tconn->name);
19239,19241c19267,19270
<   ldv_func_res = tmp;
< #line 1901
<   tmp___0 = ldv_mutex_trylock_mutex_of_device(ldv_func_arg1);
---
>       goto ldv_52353;
>     } else {
> 
>     }
19243,19250c19272,19273
<   return (tmp___0);
< #line 1903
<   return (ldv_func_res);
< }
< }
< #line 1906 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void ldv_mutex_unlock_67(struct mutex *ldv_func_arg1 ) 
< { 
---
>     goto ldv_52354;
>   } else {
19251a19275,19282
>   }
> #line 1904
>   tmp___4 = get_t_state(thi);
> #line 1904
>   if ((unsigned int )tmp___4 != 1U) {
> #line 1905
>     goto ldv_52354;
>   } else {
19253c19284,19297
<   {
---
>   }
> #line 1907
>   goto ldv_52357;
>   ldv_52362: 
> #line 1908
>   __mptr = (struct list_head  const  *)work_list.next;
> #line 1908
>   w = (struct drbd_work *)__mptr;
> #line 1909
>   list_del_init(& w->list);
> #line 1910
>   tmp___5 = (*(w->cb))(w, (unsigned int )tconn->cstate <= 8U);
> #line 1910
>   if (tmp___5 == 0) {
19255c19299,19304
<   ldv_mutex_unlock_mutex_of_device(ldv_func_arg1);
---
>     goto ldv_52357;
>   } else {
> 
>   }
> #line 1912
>   if ((unsigned int )tconn->cstate > 8U) {
19257,19264c19306,19315
<   mutex_unlock(ldv_func_arg1);
< #line 1914
<   return;
< }
< }
< #line 1916 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void ldv_mutex_lock_68(struct mutex *ldv_func_arg1 ) 
< { 
---
>     val.i = 0U;
> #line 1913
>     val.ldv_40604.conn = 5U;
> #line 1913
>     mask.i = 0U;
> #line 1913
>     mask.ldv_40604.conn = 31U;
> #line 1913
>     conn_request_state(tconn, mask, val, CS_HARD);
>   } else {
19265a19317,19325
>   }
>   ldv_52357: 
> #line 1907
>   tmp___6 = list_empty((struct list_head  const  *)(& work_list));
> #line 1907
>   if (tmp___6 == 0) {
> #line 1908
>     goto ldv_52362;
>   } else {
19267c19327,19349
<   {
---
>   }
> 
>   ldv_52353: 
> #line 1887
>   tmp___7 = get_t_state(thi);
> #line 1887
>   if ((unsigned int )tmp___7 == 1U) {
> #line 1888
>     goto ldv_52364;
>   } else {
> 
>   }
>   ldv_52354: ;
>   ldv_52370: ;
> #line 1918
>   goto ldv_52368;
>   ldv_52367: 
> #line 1919
>   __mptr___0 = (struct list_head  const  *)work_list.next;
> #line 1919
>   w = (struct drbd_work *)__mptr___0;
> #line 1920
>   list_del_init(& w->list);
19269c19351,19361
<   ldv_mutex_lock_mtx_of_percpu_rw_semaphore(ldv_func_arg1);
---
>   (*(w->cb))(w, 1);
>   ldv_52368: 
> #line 1918
>   tmp___8 = list_empty((struct list_head  const  *)(& work_list));
> #line 1918
>   if (tmp___8 == 0) {
> #line 1919
>     goto ldv_52367;
>   } else {
> 
>   }
19271c19363
<   mutex_lock(ldv_func_arg1);
---
>   dequeue_work_batch(& tconn->sender_work, & work_list);
19273,19278c19365,19370
<   return;
< }
< }
< #line 1926 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void ldv_mutex_unlock_69(struct mutex *ldv_func_arg1 ) 
< { 
---
>   tmp___9 = list_empty((struct list_head  const  *)(& work_list));
> #line 1924
>   if (tmp___9 == 0) {
> #line 1925
>     goto ldv_52370;
>   } else {
19279a19372,19390
>   }
> #line 1926
>   rcu_read_lock();
> #line 1927
>   vnr = 0;
> #line 1927
>   tmp___10 = idr_get_next(& tconn->volumes, & vnr);
> #line 1927
>   mdev = (struct drbd_conf *)tmp___10;
> #line 1927
>   goto ldv_52373;
>   ldv_52372: ;
> #line 1928
>   if ((unsigned int )*((unsigned char *)mdev + 749UL) != 0U || (unsigned int )*((unsigned short *)mdev + 374UL) != 0U) {
> #line 1928
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mdev->state.disk == D_DISKLESS && mdev->state.conn == C_STANDALONE ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_worker.c.prepared",
>             1928);
>   } else {
19281c19392,19396
<   {
---
>   }
> #line 1929
>   kref_get(& mdev->kref);
> #line 1930
>   rcu_read_unlock();
19283c19398,19400
<   ldv_mutex_unlock_mtx_of_percpu_rw_semaphore(ldv_func_arg1);
---
>   drbd_mdev_cleanup(mdev);
> #line 1932
>   kref_put(& mdev->kref, & drbd_minor_destroy);
19285,19475c19402,19414
<   mutex_unlock(ldv_func_arg1);
< #line 1934
<   return;
< }
< }
< #line 1936 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void ldv_mutex_lock_70(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1941
<   ldv_mutex_lock_mtx_of_percpu_rw_semaphore(ldv_func_arg1);
< #line 1943
<   mutex_lock(ldv_func_arg1);
< #line 1944
<   return;
< }
< }
< #line 1946 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void ldv_mutex_unlock_71(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1951
<   ldv_mutex_unlock_mtx_of_percpu_rw_semaphore(ldv_func_arg1);
< #line 1953
<   mutex_unlock(ldv_func_arg1);
< #line 1954
<   return;
< }
< }
< #line 1956 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void ldv_mutex_lock_72(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1961
<   ldv_mutex_lock_cred_guard_mutex_of_signal_struct(ldv_func_arg1);
< #line 1963
<   mutex_lock(ldv_func_arg1);
< #line 1964
<   return;
< }
< }
< #line 1966 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void ldv_mutex_unlock_73(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1971
<   ldv_mutex_unlock_cred_guard_mutex_of_signal_struct(ldv_func_arg1);
< #line 1973
<   mutex_unlock(ldv_func_arg1);
< #line 1974
<   return;
< }
< }
< #line 1976 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void ldv_mutex_lock_74(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1981
<   ldv_mutex_lock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 1983
<   mutex_lock(ldv_func_arg1);
< #line 1984
<   return;
< }
< }
< #line 1986 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void ldv_mutex_unlock_75(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1991
<   ldv_mutex_unlock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 1993
<   mutex_unlock(ldv_func_arg1);
< #line 1994
<   return;
< }
< }
< #line 1996 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void ldv_mutex_unlock_76(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 2001
<   ldv_mutex_unlock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 2003
<   mutex_unlock(ldv_func_arg1);
< #line 2004
<   return;
< }
< }
< #line 2006 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void ldv_mutex_lock_77(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 2011
<   ldv_mutex_lock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 2013
<   mutex_lock(ldv_func_arg1);
< #line 2014
<   return;
< }
< }
< #line 2016 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void ldv_mutex_unlock_78(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 2021
<   ldv_mutex_unlock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 2023
<   mutex_unlock(ldv_func_arg1);
< #line 2024
<   return;
< }
< }
< #line 2026 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void ldv_mutex_lock_79(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 2031
<   ldv_mutex_lock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 2033
<   mutex_lock(ldv_func_arg1);
< #line 2034
<   return;
< }
< }
< #line 2036 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void ldv_mutex_unlock_80(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 2041
<   ldv_mutex_unlock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 2043
<   mutex_unlock(ldv_func_arg1);
< #line 2044
<   return;
< }
< }
< #line 2046 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void ldv_mutex_lock_81(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 2051
<   ldv_mutex_lock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 2053
<   mutex_lock(ldv_func_arg1);
< #line 2054
<   return;
< }
< }
< #line 2056 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void ldv_mutex_unlock_82(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 2061
<   ldv_mutex_unlock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 2063
<   mutex_unlock(ldv_func_arg1);
< #line 2064
<   return;
< }
< }
< #line 248 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/bitops.h"
< __inline static int test_and_clear_bit(int nr , unsigned long volatile   *addr ) 
< { 
<   int oldbit ;
---
>   rcu_read_lock();
> #line 1927
>   vnr = vnr + 1;
> #line 1927
>   tmp___11 = idr_get_next(& tconn->volumes, & vnr);
> #line 1927
>   mdev = (struct drbd_conf *)tmp___11;
>   ldv_52373: ;
> #line 1927
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 1928
>     goto ldv_52372;
>   } else {
19477,19482c19416,19420
<   {
< #line 252
<   __asm__  volatile   (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; btr %2,%1\n\tsbb %0,%0": "=r" (oldbit),
<                        "+m" (*((long volatile   *)addr)): "Ir" (nr): "memory");
< #line 256
<   return (oldbit);
---
>   }
> #line 1935
>   rcu_read_unlock();
> #line 1937
>   return (0);
19545,19664d19482
< #line 153 "include/linux/list.h"
< __inline static void list_move(struct list_head *list , struct list_head *head ) 
< { 
< 
< 
<   {
< #line 155
<   __list_del_entry(list);
< #line 156
<   list_add(list, head);
< #line 157
<   return;
< }
< }
< #line 570 "include/linux/list.h"
< __inline static void INIT_HLIST_NODE(struct hlist_node *h ) 
< { 
< 
< 
<   {
< #line 572
<   h->next = 0;
< #line 573
<   h->pprev = 0;
< #line 574
<   return;
< }
< }
< #line 576 "include/linux/list.h"
< __inline static int hlist_unhashed(struct hlist_node  const  *h ) 
< { 
< 
< 
<   {
< #line 578
<   return ((unsigned long )h->pprev == (unsigned long )((struct hlist_node **/* const  */)0));
< }
< }
< #line 586 "include/linux/list.h"
< __inline static void __hlist_del(struct hlist_node *n ) 
< { 
<   struct hlist_node *next ;
<   struct hlist_node **pprev ;
< 
<   {
< #line 588
<   next = n->next;
< #line 589
<   pprev = n->pprev;
< #line 590
<   *pprev = next;
< #line 591
<   if ((unsigned long )next != (unsigned long )((struct hlist_node *)0)) {
< #line 592
<     next->pprev = pprev;
<   } else {
< 
<   }
< #line 593
<   return;
< }
< }
< #line 602 "include/linux/list.h"
< __inline static void hlist_del_init(struct hlist_node *n ) 
< { 
<   int tmp ;
< 
<   {
< #line 604
<   tmp = hlist_unhashed((struct hlist_node  const  *)n);
< #line 604
<   if (tmp == 0) {
< #line 605
<     __hlist_del(n);
< #line 606
<     INIT_HLIST_NODE(n);
<   } else {
< 
<   }
< #line 608
<   return;
< }
< }
< #line 610 "include/linux/list.h"
< __inline static void hlist_add_head(struct hlist_node *n , struct hlist_head *h ) 
< { 
<   struct hlist_node *first ;
< 
<   {
< #line 612
<   first = h->first;
< #line 613
<   n->next = first;
< #line 614
<   if ((unsigned long )first != (unsigned long )((struct hlist_node *)0)) {
< #line 615
<     first->pprev = & n->next;
<   } else {
< 
<   }
< #line 616
<   h->first = n;
< #line 617
<   n->pprev = & h->first;
< #line 618
<   return;
< }
< }
< #line 642 "include/linux/list.h"
< __inline static void hlist_add_fake(struct hlist_node *n ) 
< { 
< 
< 
<   {
< #line 644
<   n->pprev = & n->next;
< #line 645
<   return;
< }
< }
19767,19846c19585,19590
< #line 171 "include/linux/mutex.h"
< int ldv_mutex_trylock_106(struct mutex *ldv_func_arg1 ) ;
< #line 176
< void ldv_mutex_unlock_104(struct mutex *ldv_func_arg1 ) ;
< #line 180
< void ldv_mutex_unlock_107(struct mutex *ldv_func_arg1 ) ;
< #line 184
< void ldv_mutex_unlock_109(struct mutex *ldv_func_arg1 ) ;
< #line 188
< void ldv_mutex_unlock_111(struct mutex *ldv_func_arg1 ) ;
< #line 192
< void ldv_mutex_unlock_113(struct mutex *ldv_func_arg1 ) ;
< #line 196
< void ldv_mutex_unlock_115(struct mutex *ldv_func_arg1 ) ;
< #line 200
< void ldv_mutex_unlock_116(struct mutex *ldv_func_arg1 ) ;
< #line 204
< void ldv_mutex_unlock_118(struct mutex *ldv_func_arg1 ) ;
< #line 208
< void ldv_mutex_unlock_119(struct mutex *ldv_func_arg1 ) ;
< #line 5 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< extern int mutex_lock_interruptible(struct mutex * ) ;
< #line 8
< int ldv_mutex_lock_interruptible_117(struct mutex *ldv_func_arg1 ) ;
< #line 14
< void ldv_mutex_lock_103(struct mutex *ldv_func_arg1 ) ;
< #line 18
< void ldv_mutex_lock_105(struct mutex *ldv_func_arg1 ) ;
< #line 22
< void ldv_mutex_lock_108(struct mutex *ldv_func_arg1 ) ;
< #line 26
< void ldv_mutex_lock_110(struct mutex *ldv_func_arg1 ) ;
< #line 30
< void ldv_mutex_lock_112(struct mutex *ldv_func_arg1 ) ;
< #line 34
< void ldv_mutex_lock_114(struct mutex *ldv_func_arg1 ) ;
< #line 84
< int ldv_mutex_lock_interruptible_mutex_of_drbd_socket(struct mutex *lock ) ;
< #line 208 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/thread_info.h"
< __inline static struct thread_info *current_thread_info___0(void) 
< { 
<   struct thread_info *ti ;
<   unsigned long pfo_ret__ ;
< 
<   {
< #line 211
<   switch (8UL) {
<   case 1UL: 
< #line 211
<   __asm__  ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
< #line 211
<   goto ldv_6306;
<   case 2UL: 
< #line 211
<   __asm__  ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
< #line 211
<   goto ldv_6306;
<   case 4UL: 
< #line 211
<   __asm__  ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
< #line 211
<   goto ldv_6306;
<   case 8UL: 
< #line 211
<   __asm__  ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
< #line 211
<   goto ldv_6306;
<   default: 
< #line 211
<   __bad_percpu_size();
<   }
<   ldv_6306: 
< #line 211
<   ti = (struct thread_info *)(pfo_ret__ - 8152UL);
< #line 213
<   return (ti);
< }
< }
< #line 89 "include/linux/thread_info.h"
< __inline static int test_ti_thread_flag(struct thread_info *ti , int flag ) 
---
> #line 21 "include/linux/rwlock_api_smp.h"
> extern void _raw_write_lock_bh(rwlock_t * ) ;
> #line 33
> extern void _raw_write_unlock_bh(rwlock_t * ) ;
> #line 124 "include/linux/mutex.h"
> __inline static int mutex_is_locked(struct mutex *lock ) 
19851,19854c19595,19598
< #line 91
<   tmp = variable_test_bit(flag, (unsigned long const volatile   *)(& ti->flags));
< #line 91
<   return (tmp);
---
> #line 126
>   tmp = atomic_read((atomic_t const   *)(& lock->count));
> #line 126
>   return (tmp != 1);
19873,19941c19617,19622
< #line 245 "include/linux/timer.h"
< extern int del_timer_sync(struct timer_list * ) ;
< #line 345 "include/linux/gfp.h"
< extern unsigned long __get_free_pages(gfp_t  , unsigned int  ) ;
< #line 360
< extern void free_pages(unsigned long  , unsigned int  ) ;
< #line 461 "include/linux/module.h"
< extern void __module_get(struct module * ) ;
< #line 453 "include/linux/mm.h"
< extern void put_page(struct page * ) ;
< #line 57 "include/linux/scatterlist.h"
< __inline static void sg_assign_page___0(struct scatterlist *sg , struct page *page ) 
< { 
<   unsigned long page_link ;
<   long tmp ;
<   long tmp___0 ;
<   long tmp___1 ;
< 
<   {
< #line 59
<   page_link = sg->page_link & 3UL;
< #line 65
<   tmp = __builtin_expect(((unsigned long )page & 3UL) != 0UL, 0L);
< #line 65
<   if (tmp != 0L) {
< #line 65
<     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"include/linux/scatterlist.h"),
<                          "i" (65), "i" (12UL));
<     ldv_19174: ;
< #line 65
<     goto ldv_19174;
<   } else {
< 
<   }
< #line 67
<   tmp___0 = __builtin_expect(sg->sg_magic != 2271560481UL, 0L);
< #line 67
<   if (tmp___0 != 0L) {
< #line 67
<     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"include/linux/scatterlist.h"),
<                          "i" (67), "i" (12UL));
<     ldv_19175: ;
< #line 67
<     goto ldv_19175;
<   } else {
< 
<   }
< #line 68
<   tmp___1 = __builtin_expect((long )((int )sg->page_link) & 1L, 0L);
< #line 68
<   if (tmp___1 != 0L) {
< #line 68
<     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"include/linux/scatterlist.h"),
<                          "i" (68), "i" (12UL));
<     ldv_19176: ;
< #line 68
<     goto ldv_19176;
<   } else {
< 
<   }
< #line 70
<   sg->page_link = page_link | (unsigned long )page;
< #line 71
<   return;
< }
< }
< #line 87 "include/linux/scatterlist.h"
< __inline static void sg_set_page___0(struct scatterlist *sg , struct page *page ,
<                                      unsigned int len , unsigned int offset ) 
---
> #line 84
> extern long wait_for_completion_interruptible_timeout(struct completion * , unsigned long  ) ;
> #line 144 "include/linux/rcupdate.h"
> extern void synchronize_sched(void) ;
> #line 173 "include/linux/rcupdate.h"
> __inline static void synchronize_rcu(void) 
19946,19952c19627,19629
< #line 90
<   sg_assign_page___0(sg, page);
< #line 91
<   sg->offset = offset;
< #line 92
<   sg->length = len;
< #line 93
---
> #line 175
>   synchronize_sched();
> #line 176
19955a19633,19636
> #line 245 "include/linux/timer.h"
> extern int del_timer_sync(struct timer_list * ) ;
> #line 453 "include/linux/mm.h"
> extern void put_page(struct page * ) ;
19965c19646
<   sg_set_page___0(sg, 0xffffea0000000000UL + (tmp >> 12), buflen, (unsigned int )((long )buf) & 4095U);
---
>   sg_set_page(sg, 0xffffea0000000000UL + (tmp >> 12), buflen, (unsigned int )((long )buf) & 4095U);
19976,20002d19656
< #line 2533 "include/linux/sched.h"
< __inline static int test_tsk_thread_flag(struct task_struct *tsk , int flag ) 
< { 
<   int tmp ;
< 
<   {
< #line 2535
<   tmp = test_ti_thread_flag((struct thread_info *)tsk->stack, flag);
< #line 2535
<   return (tmp);
< }
< }
< #line 2559 "include/linux/sched.h"
< __inline static int signal_pending(struct task_struct *p ) 
< { 
<   int tmp ;
<   long tmp___0 ;
< 
<   {
< #line 2561
<   tmp = test_tsk_thread_flag(p, 2);
< #line 2561
<   tmp___0 = __builtin_expect(tmp != 0, 0L);
< #line 2561
<   return ((int )tmp___0);
< }
< }
20009,20010d19662
< #line 207
< extern int sock_create_lite(int  , int  , int  , struct socket ** ) ;
20015c19667,19669
< #line 306 "include/linux/drbd.h"
---
> #line 255
> extern int kernel_accept(struct socket * , struct socket ** , int  ) ;
> #line 329 "include/linux/drbd.h"
20029,20038d19682
< #line 520 "include/linux/crypto.h"
< __inline static u32 crypto_tfm_alg_type(struct crypto_tfm *tfm ) 
< { 
< 
< 
<   {
< #line 522
<   return ((tfm->__crt_alg)->cra_flags & 15U);
< }
< }
20169c19813
< #line 249 "include/linux/lru_cache.h"
---
> #line 260 "include/linux/lru_cache.h"
20171,20295c19815,19834
< #line 223 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static char const   *cmdname(enum drbd_packets cmd ) 
< { 
<   char const   *cmdnames[43U] ;
< 
<   {
< #line 228
<   cmdnames[0] = "Data";
< #line 228
<   cmdnames[1] = "DataReply";
< #line 228
<   cmdnames[2] = "RSDataReply";
< #line 228
<   cmdnames[3] = "Barrier";
< #line 228
<   cmdnames[4] = "ReportBitMap";
< #line 228
<   cmdnames[5] = "BecomeSyncTarget";
< #line 228
<   cmdnames[6] = "BecomeSyncSource";
< #line 228
<   cmdnames[7] = "UnplugRemote";
< #line 228
<   cmdnames[8] = "DataRequest";
< #line 228
<   cmdnames[9] = "RSDataRequest";
< #line 228
<   cmdnames[10] = "SyncParam";
< #line 228
<   cmdnames[11] = "ReportProtocol";
< #line 228
<   cmdnames[12] = "ReportUUIDs";
< #line 228
<   cmdnames[13] = "ReportSizes";
< #line 228
<   cmdnames[14] = "ReportState";
< #line 228
<   cmdnames[15] = "ReportSyncUUID";
< #line 228
<   cmdnames[16] = "AuthChallenge";
< #line 228
<   cmdnames[17] = "AuthResponse";
< #line 228
<   cmdnames[18] = "StateChgRequest";
< #line 228
<   cmdnames[19] = "Ping";
< #line 228
<   cmdnames[20] = "PingAck";
< #line 228
<   cmdnames[21] = "RecvAck";
< #line 228
<   cmdnames[22] = "WriteAck";
< #line 228
<   cmdnames[23] = "RSWriteAck";
< #line 228
<   cmdnames[24] = "DiscardAck";
< #line 228
<   cmdnames[25] = "NegAck";
< #line 228
<   cmdnames[26] = "NegDReply";
< #line 228
<   cmdnames[27] = "NegRSDReply";
< #line 228
<   cmdnames[28] = "BarrierAck";
< #line 228
<   cmdnames[29] = "StateChgReply";
< #line 228
<   cmdnames[30] = "OVRequest";
< #line 228
<   cmdnames[31] = "OVReply";
< #line 228
<   cmdnames[32] = "OVResult";
< #line 228
<   cmdnames[33] = "CsumRSRequest";
< #line 228
<   cmdnames[34] = "CsumRSIsInSync";
< #line 228
<   cmdnames[35] = "SyncParam89";
< #line 228
<   cmdnames[36] = "CBitmap";
< #line 228
<   cmdnames[37] = 0;
< #line 228
<   cmdnames[38] = 0;
< #line 228
<   cmdnames[39] = "DelayProbe";
< #line 228
<   cmdnames[40] = "OutOfSync";
< #line 228
<   cmdnames[41] = 0;
< #line 228
<   cmdnames[42] = 0;
< #line 271
<   if ((unsigned int )cmd == 65521U) {
< #line 272
<     return ("HandShakeM");
<   } else {
< 
<   }
< #line 273
<   if ((unsigned int )cmd == 65522U) {
< #line 274
<     return ("HandShakeS");
<   } else {
< 
<   }
< #line 275
<   if ((unsigned int )cmd == 65534U) {
< #line 276
<     return ("HandShake");
<   } else {
< 
<   }
< #line 277
<   if ((unsigned int )cmd > 41U) {
< #line 278
<     return ("Unknown");
<   } else {
< 
<   }
< #line 279
<   return (cmdnames[(unsigned int )cmd]);
< }
< }
< #line 300
---
> #line 110 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_state.h"
> enum drbd_state_rv drbd_change_state(struct drbd_conf *mdev , enum chg_state_flags f ,
>                                      union drbd_state mask , union drbd_state val ) ;
> #line 114
> void drbd_force_state(struct drbd_conf *mdev , union drbd_state mask , union drbd_state val ) ;
> #line 116
> enum drbd_state_rv _drbd_request_state(struct drbd_conf *mdev , union drbd_state mask ,
>                                        union drbd_state val , enum chg_state_flags f ) ;
> #line 127
> enum drbd_state_rv _conn_request_state(struct drbd_tconn *tconn , union drbd_state mask ,
>                                        union drbd_state val , enum chg_state_flags flags ) ;
> #line 154
> enum drbd_role conn_highest_role(struct drbd_tconn *tconn ) ;
> #line 158
> enum drbd_disk_state conn_highest_pdsk(struct drbd_tconn *tconn ) ;
> #line 65 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> unsigned int minor_count ;
> #line 236
> char const   *cmdname(enum drbd_packet cmd ) ;
> #line 256
20297c19836
< #line 303 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 259 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
20303c19842
< #line 313
---
> #line 269
20305c19844
< #line 314
---
> #line 270
20309,20310c19848,19851
< #line 585 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static enum drbd_bitmap_code DCBP_get_code(struct p_compressed_bm *p ) 
---
> #line 313
> unsigned int drbd_header_size(struct drbd_tconn *tconn ) ;
> #line 16 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_interval.h"
> __inline static void drbd_clear_interval(struct drbd_interval *i ) 
20315,20316c19856,19859
< #line 587
<   return ((enum drbd_bitmap_code )((int )p->encoding & 15));
---
> #line 18
>   i->rb.__rb_parent_color = (unsigned long )(& i->rb);
> #line 19
>   return;
20319,20320c19862,19863
< #line 598 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static int DCBP_get_start(struct p_compressed_bm *p ) 
---
> #line 21 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_interval.h"
> __inline static bool drbd_interval_empty(struct drbd_interval *i ) 
20325,20326c19868,19869
< #line 600
<   return ((int )((signed char )p->encoding) < 0);
---
> #line 23
>   return (i->rb.__rb_parent_color == (unsigned long )(& i->rb));
20329,20330c19872,19886
< #line 610 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static int DCBP_get_pad_bits(struct p_compressed_bm *p ) 
---
> #line 26
> bool drbd_insert_interval(struct rb_root *root , struct drbd_interval *this ) ;
> #line 27
> bool drbd_contains_interval(struct rb_root *root , sector_t sector , struct drbd_interval *interval ) ;
> #line 29
> void drbd_remove_interval(struct rb_root *root , struct drbd_interval *this ) ;
> #line 30
> struct drbd_interval *drbd_find_overlap(struct rb_root *root , sector_t sector , unsigned int size ) ;
> #line 32
> struct drbd_interval *drbd_next_overlap(struct drbd_interval *i , sector_t sector ,
>                                         unsigned int size ) ;
> #line 546 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> int drbd_wait_misc(struct drbd_conf *mdev , struct drbd_interval *i ) ;
> #line 1042 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static unsigned int mdev_to_minor(struct drbd_conf *mdev ) 
20335,20336c19891,19892
< #line 612
<   return (((int )p->encoding >> 4) & 7);
---
> #line 1044
>   return (mdev->minor);
20339,20340c19895,19896
< #line 1169 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static int drbd_test_and_clear_flag(struct drbd_conf *mdev , enum drbd_flag f ) 
---
> #line 1047 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static struct drbd_conf *vnr_to_mdev(struct drbd_tconn *tconn , int vnr ) 
20342c19898
<   int tmp ;
---
>   void *tmp ;
20345,20348c19901,19904
< #line 1171
<   tmp = test_and_clear_bit((int )f, (unsigned long volatile   *)(& mdev->drbd_flags));
< #line 1171
<   return (tmp);
---
> #line 1049
>   tmp = idr_find(& tconn->volumes, vnr);
> #line 1049
>   return ((struct drbd_conf *)tmp);
20351,20357c19907
< #line 1233
< enum drbd_state_rv drbd_change_state(struct drbd_conf *mdev , enum chg_state_flags f ,
<                                      union drbd_state mask , union drbd_state val ) ;
< #line 1239
< enum drbd_state_rv _drbd_request_state(struct drbd_conf *mdev , union drbd_state mask ,
<                                        union drbd_state val , enum chg_state_flags f ) ;
< #line 1248
---
> #line 1064
20359,20367c19909,19919
< #line 1258
< void tl_release(struct drbd_conf *mdev , unsigned int barrier_nr , unsigned int set_size ) ;
< #line 1260
< void tl_clear(struct drbd_conf *mdev ) ;
< #line 1262
< void drbd_free_sock(struct drbd_conf *mdev ) ;
< #line 1265
< int drbd_send_protocol(struct drbd_conf *mdev ) ;
< #line 1266
---
> #line 1065
> void _drbd_thread_stop(struct drbd_thread *thi , int restart , int wait ) ;
> #line 1074
> void tl_release(struct drbd_tconn *tconn , unsigned int barrier_nr , unsigned int set_size ) ;
> #line 1076
> void tl_clear(struct drbd_tconn *tconn ) ;
> #line 1077
> void drbd_free_sock(struct drbd_tconn *tconn ) ;
> #line 1084
> int drbd_send_protocol(struct drbd_tconn *tconn ) ;
> #line 1085
20369c19921
< #line 1269
---
> #line 1088
20371c19923
< #line 1271
---
> #line 1090
20373,20384c19925,19934
< #line 1280
< int drbd_send_cmd2(struct drbd_conf *mdev , enum drbd_packets cmd , char *data , size_t size ) ;
< #line 1282
< int drbd_send_sync_param(struct drbd_conf *mdev , struct syncer_conf *sc ) ;
< #line 1283
< int drbd_send_b_ack(struct drbd_conf *mdev , u32 barrier_nr , u32 set_size ) ;
< #line 1287
< int drbd_send_ack_rp(struct drbd_conf *mdev , enum drbd_packets cmd , struct p_block_req *rp ) ;
< #line 1289
< int drbd_send_ack_dp(struct drbd_conf *mdev , enum drbd_packets cmd , struct p_data *dp ,
<                      int data_size ) ;
< #line 1305
---
> #line 1091
> int drbd_send_sync_param(struct drbd_conf *mdev ) ;
> #line 1092
> void drbd_send_b_ack(struct drbd_tconn *tconn , u32 barrier_nr , u32 set_size ) ;
> #line 1096
> void drbd_send_ack_rp(struct drbd_conf *mdev , enum drbd_packet cmd , struct p_block_req *rp ) ;
> #line 1098
> void drbd_send_ack_dp(struct drbd_conf *mdev , enum drbd_packet cmd , struct p_data *dp ,
>                       int data_size ) ;
> #line 1113
20386,20388c19936,19942
< #line 1307
< int drbd_send_sr_reply(struct drbd_conf *mdev , enum drbd_state_rv retcode ) ;
< #line 1316
---
> #line 1114
> void drbd_send_sr_reply(struct drbd_conf *mdev , enum drbd_state_rv retcode ) ;
> #line 1115
> void conn_send_sr_reply(struct drbd_tconn *tconn , enum drbd_state_rv retcode ) ;
> #line 1120
> void conn_md_sync(struct drbd_tconn *tconn ) ;
> #line 1125
20390c19944
< #line 1318
---
> #line 1127
20392c19946
< #line 1319
---
> #line 1128
20394c19948
< #line 1334
---
> #line 1143
20397c19951
< #line 1337
---
> #line 1149
20399c19953
< #line 1338
---
> #line 1150
20401c19955
< #line 1536
---
> #line 1370
20403c19957
< #line 1551
---
> #line 1385
20405c19959
< #line 1552
---
> #line 1386
20407c19961
< #line 1553
---
> #line 1387
20409c19963
< #line 1588
---
> #line 1433
20411,20412c19965,19966
<                            int assume_peer_has_space ) ;
< #line 1590
---
>                            sector_t u_size , int assume_peer_has_space ) ;
> #line 1435
20414c19968
< #line 1591
---
> #line 1436
20416c19970
< #line 1592
---
> #line 1437
20418c19972
< #line 1593
---
> #line 1438
20421,20433c19975,19997
< #line 1597
< void drbd_try_outdate_peer_async(struct drbd_conf *mdev ) ;
< #line 1658
< int drbd_release_ee(struct drbd_conf *mdev , struct list_head *list ) ;
< #line 1668
< void drbd_wait_ee_list_empty(struct drbd_conf *mdev , struct list_head *head ) ;
< #line 1670
< void _drbd_wait_ee_list_empty(struct drbd_conf *mdev , struct list_head *head ) ;
< #line 1674
< void drbd_flush_workqueue(struct drbd_conf *mdev ) ;
< #line 1675
< void drbd_free_tl_hash(struct drbd_conf *mdev ) ;
< #line 1705 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1442
> void conn_try_outdate_peer_async(struct drbd_tconn *tconn ) ;
> #line 1503
> int drbd_free_peer_reqs(struct drbd_conf *mdev , struct list_head *list ) ;
> #line 1511
> struct page *drbd_alloc_pages(struct drbd_conf *mdev , unsigned int number , bool retry___0 ) ;
> #line 1514
> void conn_flush_workqueue(struct drbd_tconn *tconn ) ;
> #line 1515
> int drbd_connected(struct drbd_conf *mdev ) ;
> #line 1516 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static void drbd_flush_workqueue(struct drbd_conf *mdev ) 
> { 
> 
> 
>   {
> #line 1518
>   conn_flush_workqueue(mdev->tconn);
> #line 1519
>   return;
> }
> }
> #line 1556 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
20439c20003
< #line 1707
---
> #line 1558
20441c20005
< #line 1708
---
> #line 1559
20443c20007
< #line 1710
---
> #line 1561
20447c20011
< #line 1712 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1563 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
20453c20017
< #line 1714
---
> #line 1565
20455c20019
< #line 1715
---
> #line 1566
20457c20021
< #line 1717
---
> #line 1568
20461,20463c20025,20027
< #line 1719
< void drbd_bump_write_ordering(struct drbd_conf *mdev , enum write_ordering_e wo ) ;
< #line 1731
---
> #line 1570
> void drbd_bump_write_ordering(struct drbd_tconn *tconn , enum write_ordering_e wo ) ;
> #line 1582
20465c20029
< #line 1733
---
> #line 1584
20467,20471c20031,20032
< #line 1757
< void drbd_bcast_ee(struct drbd_conf *mdev , char const   *reason , int const   dgs ,
<                    char const   *seen_hash , char const   *calc_hash , struct drbd_epoch_entry  const  *e ) ;
< #line 1830 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static int drbd_ee_has_active_page___0(struct drbd_epoch_entry *e ) 
---
> #line 1632 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static int drbd_peer_req_has_active_page___0(struct drbd_peer_request *peer_req ) 
20478,20483c20039,20044
< #line 1832
<   page = e->pages;
< #line 1833
<   goto ldv_51493;
<   ldv_51492: 
< #line 1834
---
> #line 1634
>   page = peer_req->pages;
> #line 1635
>   goto ldv_51832;
>   ldv_51831: 
> #line 1636
20485c20046
< #line 1834
---
> #line 1636
20487c20048
< #line 1835
---
> #line 1637
20492c20053
< #line 1833
---
> #line 1635
20494,20495c20055,20056
<   ldv_51493: ;
< #line 1833
---
>   ldv_51832: ;
> #line 1635
20497c20058
< #line 1833
---
> #line 1635
20499c20060
< #line 1833
---
> #line 1635
20501c20062
< #line 1833
---
> #line 1635
20503,20504c20064,20065
< #line 1834
<       goto ldv_51492;
---
> #line 1636
>       goto ldv_51831;
20506,20507c20067,20068
< #line 1836
<       goto ldv_51494;
---
> #line 1638
>       goto ldv_51833;
20512,20513c20073,20074
<   ldv_51494: ;
< #line 1837
---
>   ldv_51833: ;
> #line 1639
20517,20531c20078,20079
< #line 1875 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static int drbd_request_state(struct drbd_conf *mdev , union drbd_state mask ,
<                                        union drbd_state val ) 
< { 
<   enum drbd_state_rv tmp ;
< 
<   {
< #line 1879
<   tmp = _drbd_request_state(mdev, mask, val, 14);
< #line 1879
<   return ((int )tmp);
< }
< }
< #line 1968 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static sector_t drbd_md_first_sector(struct drbd_backing_dev *bdev ) 
---
> #line 1758 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static sector_t _drbd_md_first_sector(int meta_dev_idx , struct drbd_backing_dev *bdev ) 
20536,20537c20084,20085
< #line 1970
<   switch (bdev->dc.meta_dev_idx) {
---
> #line 1760
>   switch (meta_dev_idx) {
20540c20088
< #line 1973
---
> #line 1763
20544c20092
< #line 1976
---
> #line 1766
20549c20097
< #line 2011 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1818 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
20552a20101,20105
>   int meta_dev_idx ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
20555,20556c20108,20109
<   sector_t tmp___0 ;
<   sector_t tmp___1 ;
---
>   sector_t tmp___2 ;
>   sector_t tmp___3 ;
20559c20112
<   sector_t tmp___2 ;
---
>   sector_t tmp___4 ;
20564c20117
<   sector_t tmp___3 ;
---
>   sector_t tmp___5 ;
20567,20568c20120,20148
< #line 2014
<   switch (bdev->dc.meta_dev_idx) {
---
> #line 1823
>   rcu_read_lock();
> #line 1824
>   _________p1 = *((struct disk_conf * volatile  *)(& bdev->disk_conf));
> #line 1824
>   tmp = debug_lockdep_rcu_enabled();
> #line 1824
>   if (tmp != 0 && ! __warned) {
> #line 1824
>     tmp___0 = rcu_read_lock_held();
> #line 1824
>     if (tmp___0 == 0 && 1) {
> #line 1824
>       __warned = 1;
> #line 1824
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h",
>                              1824, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1824
>   meta_dev_idx = _________p1->meta_dev_idx;
> #line 1825
>   rcu_read_unlock();
> #line 1827
>   switch (meta_dev_idx) {
20571,20575c20151,20155
< #line 2018
<   tmp___1 = drbd_get_capacity(bdev->backing_bdev);
< #line 2018
<   if (tmp___1 != 0UL) {
< #line 2018
---
> #line 1831
>   tmp___3 = drbd_get_capacity(bdev->backing_bdev);
> #line 1831
>   if (tmp___3 != 0UL) {
> #line 1831
20577,20581c20157,20161
< #line 2018
<     tmp___0 = drbd_md_first_sector(bdev);
< #line 2018
<     __min2 = tmp___0;
< #line 2018
---
> #line 1831
>     tmp___2 = _drbd_md_first_sector(meta_dev_idx, bdev);
> #line 1831
>     __min2 = tmp___2;
> #line 1831
20584c20164
< #line 2018
---
> #line 1831
20587,20588c20167,20168
< #line 2021
<   goto ldv_51572;
---
> #line 1834
>   goto ldv_51920;
20590c20170
< #line 2023
---
> #line 1836
20592,20596c20172,20176
< #line 2023
<   tmp___2 = drbd_get_capacity(bdev->backing_bdev);
< #line 2023
<   __min2___0 = tmp___2;
< #line 2023
---
> #line 1836
>   tmp___4 = drbd_get_capacity(bdev->backing_bdev);
> #line 1836
>   __min2___0 = tmp___4;
> #line 1836
20598c20178
< #line 2026
---
> #line 1839
20600c20180
< #line 2026
---
> #line 1839
20602c20182
< #line 2026
---
> #line 1839
20604,20605c20184,20185
< #line 2029
<   goto ldv_51572;
---
> #line 1842
>   goto ldv_51920;
20607c20187
< #line 2031
---
> #line 1844
20609,20613c20189,20193
< #line 2031
<   tmp___3 = drbd_get_capacity(bdev->backing_bdev);
< #line 2031
<   __min2___2 = tmp___3;
< #line 2031
---
> #line 1844
>   tmp___5 = drbd_get_capacity(bdev->backing_bdev);
> #line 1844
>   __min2___2 = tmp___5;
> #line 1844
20616,20617c20196,20197
<   ldv_51572: ;
< #line 2034
---
>   ldv_51920: ;
> #line 1847
20621,20643c20201,20206
< #line 2068 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static void drbd_queue_work_front(struct drbd_work_queue *q , struct drbd_work *w ) 
< { 
<   unsigned long flags ;
<   raw_spinlock_t *tmp ;
< 
<   {
< #line 2071
<   tmp = spinlock_check(& q->q_lock);
< #line 2071
<   flags = _raw_spin_lock_irqsave(tmp);
< #line 2072
<   list_add(& w->list, & q->q);
< #line 2073
<   up(& q->s);
< #line 2075
<   spin_unlock_irqrestore(& q->q_lock, flags);
< #line 2076
<   return;
< }
< }
< #line 2108 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static int drbd_send_ping(struct drbd_conf *mdev ) 
---
> #line 1927
> int drbd_send_ping(struct drbd_tconn *tconn ) ;
> #line 1928
> int drbd_send_ping_ack(struct drbd_tconn *tconn ) ;
> #line 1932 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static void drbd_thread_stop(struct drbd_thread *thi ) 
20645,20646d20207
<   struct p_header80 h ;
<   int tmp ;
20648,20659d20208
<   {
< #line 2111
<   tmp = drbd_send_cmd(mdev, 0, P_PING, & h, 8UL);
< #line 2111
<   return (tmp);
< }
< }
< #line 2114 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static int drbd_send_ping_ack(struct drbd_conf *mdev ) 
< { 
<   struct p_header80 h ;
<   int tmp ;
20662,20665c20211,20214
< #line 2117
<   tmp = drbd_send_cmd(mdev, 0, P_PING_ACK, & h, 8UL);
< #line 2117
<   return (tmp);
---
> #line 1934
>   _drbd_thread_stop(thi, 0, 1);
> #line 1935
>   return;
20668c20217
< #line 2199 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 2015 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
20674c20223
< #line 2201
---
> #line 2017
20676,20695c20225
< #line 2202
<   return;
< }
< }
< #line 2215 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static void put_net_conf(struct drbd_conf *mdev ) 
< { 
<   int tmp ;
< 
<   {
< #line 2217
<   tmp = atomic_dec_and_test(& mdev->net_cnt);
< #line 2217
<   if (tmp != 0) {
< #line 2218
<     __wake_up(& mdev->net_cnt_wait, 3U, 1, 0);
<   } else {
< 
<   }
< #line 2219
---
> #line 2018
20699,20720c20229
< #line 2227 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static int get_net_conf(struct drbd_conf *mdev ) 
< { 
<   int have_net_conf ;
< 
<   {
< #line 2231
<   atomic_inc(& mdev->net_cnt);
< #line 2232
<   have_net_conf = (int )mdev->state.ldv_39979.conn > 1;
< #line 2233
<   if (have_net_conf == 0) {
< #line 2234
<     put_net_conf(mdev);
<   } else {
< 
<   }
< #line 2235
<   return (have_net_conf);
< }
< }
< #line 2493 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 2300 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
20726c20235
< #line 2495
---
> #line 2302
20728c20237
< #line 2496
---
> #line 2303
20730c20239
< #line 2497
---
> #line 2304
20734,20772c20243
< #line 2500 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static int seq_cmp(u32 a , u32 b ) 
< { 
< 
< 
<   {
< #line 2507
<   return ((int )a - (int )b);
< }
< }
< #line 2516 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static void update_peer_seq(struct drbd_conf *mdev , unsigned int new_seq ) 
< { 
<   unsigned int m ;
<   int tmp ;
< 
<   {
< #line 2519
<   spin_lock(& mdev->peer_seq_lock);
< #line 2520
<   tmp = seq_cmp(mdev->peer_seq, new_seq);
< #line 2520
<   m = tmp > 0 ? mdev->peer_seq : new_seq;
< #line 2521
<   mdev->peer_seq = m;
< #line 2522
<   spin_unlock(& mdev->peer_seq_lock);
< #line 2523
<   if (m == new_seq) {
< #line 2524
<     __wake_up(& mdev->seq_wait, 3U, 1, 0);
<   } else {
< 
<   }
< #line 2525
<   return;
< }
< }
< #line 11 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_wrappers.h"
---
> #line 12 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_wrappers.h"
20778,20779d20248
< #line 15
<   set_capacity(mdev->vdisk, size);
20781c20250
<   ((mdev->this_bdev)->bd_inode)->i_size = (long long )size << 9;
---
>   set_capacity(mdev->vdisk, size);
20782a20252,20253
>   ((mdev->this_bdev)->bd_inode)->i_size = (long long )size << 9;
> #line 18
20786c20257
< #line 29 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_wrappers.h"
---
> #line 30 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_wrappers.h"
20794,20795d20264
< #line 33
<   if ((unsigned long )bio->bi_bdev == (unsigned long )((struct block_device *)0)) {
20796a20266,20267
>   if ((unsigned long )bio->bi_bdev == (unsigned long )((struct block_device *)0)) {
> #line 35
20798c20269
< #line 34
---
> #line 35
20800,20801d20270
< #line 37
<     dump_stack();
20803c20272
<     bio_endio(bio, -19);
---
>     dump_stack();
20804a20274,20275
>     bio_endio(bio, -19);
> #line 40
20809c20280
< #line 42
---
> #line 43
20811,20812d20281
< #line 42
<   if (tmp___0 != 0) {
20813a20283,20284
>   if (tmp___0 != 0) {
> #line 44
20816c20287
< #line 45
---
> #line 46
20819c20290
< #line 46
---
> #line 47
20823,20961d20293
< #line 48 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_wrappers.h"
< __inline static int drbd_crypto_is_hash(struct crypto_tfm *tfm ) 
< { 
<   u32 tmp ;
< 
<   {
< #line 50
<   tmp = crypto_tfm_alg_type(tfm);
< #line 50
<   return ((tmp & 14U) == 8U);
< }
< }
< #line 232 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"
< __inline static struct hlist_head *ee_hash_slot(struct drbd_conf *mdev , sector_t sector ) 
< { 
<   long tmp ;
< 
<   {
< #line 234
<   tmp = __builtin_expect(mdev->ee_hash_s == 0U, 0L);
< #line 234
<   if (tmp != 0L) {
< #line 234
<     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"),
<                          "i" (234), "i" (12UL));
<     ldv_51848: ;
< #line 234
<     goto ldv_51848;
<   } else {
< 
<   }
< #line 235
<   return (mdev->ee_hash + (unsigned long )((unsigned int )(sector >> 8) % mdev->ee_hash_s));
< }
< }
< #line 241 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"
< __inline static struct hlist_head *tl_hash_slot(struct drbd_conf *mdev , sector_t sector ) 
< { 
<   long tmp ;
< 
<   {
< #line 243
<   tmp = __builtin_expect(mdev->tl_hash_s == 0U, 0L);
< #line 243
<   if (tmp != 0L) {
< #line 243
<     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"),
<                          "i" (243), "i" (12UL));
<     ldv_51853: ;
< #line 243
<     goto ldv_51853;
<   } else {
< 
<   }
< #line 244
<   return (mdev->tl_hash + (unsigned long )((unsigned int )(sector >> 8) % mdev->tl_hash_s));
< }
< }
< #line 249 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"
< static struct hlist_head *ar_hash_slot(struct drbd_conf *mdev , sector_t sector ) 
< { 
< 
< 
<   {
< #line 251
<   return (mdev->app_reads_hash + (unsigned long )((unsigned int )sector % 15U));
< }
< }
< #line 257 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"
< __inline static struct drbd_request *_ar_id_to_req(struct drbd_conf *mdev , u64 id ,
<                                                    sector_t sector ) 
< { 
<   struct hlist_head *slot ;
<   struct hlist_head *tmp ;
<   struct hlist_node *n ;
<   struct drbd_request *req ;
<   struct hlist_node  const  *__mptr ;
< 
<   {
< #line 260
<   tmp = ar_hash_slot(mdev, sector);
< #line 260
<   slot = tmp;
< #line 264
<   n = slot->first;
< #line 264
<   goto ldv_51870;
<   ldv_51869: ;
< #line 265
<   if ((unsigned long )req == (unsigned long )id) {
< #line 266
<     if (req->sector != sector) {
< #line 266
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( req->sector == sector ) in %s:%d\n",
<               (char *)"/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h",
<               266);
<     } else {
< 
<     }
< #line 267
<     return (req);
<   } else {
< 
<   }
< #line 264
<   n = n->next;
<   ldv_51870: ;
< #line 264
<   if ((unsigned long )n != (unsigned long )((struct hlist_node *)0)) {
< #line 264
<     __mptr = (struct hlist_node  const  *)n;
< #line 264
<     req = (struct drbd_request *)__mptr + 0xffffffffffffffd8UL;
< #line 264
<     if (1 != 0) {
< #line 265
<       goto ldv_51869;
<     } else {
< #line 267
<       goto ldv_51871;
<     }
<   } else {
< 
<   }
<   ldv_51871: ;
< #line 270
<   return (0);
< }
< }
< #line 311 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"
< __inline static int overlaps(sector_t s1 , int l1 , sector_t s2 , int l2 ) 
< { 
< 
< 
<   {
< #line 313
<   return ((sector_t )(l1 >> 9) + s1 > s2 && (sector_t )(l2 >> 9) + s2 > s1);
< }
< }
21083c20415
<   ldv_51938: ;
---
>   ldv_52284: ;
21085c20417
<   goto ldv_51938;
---
>   goto ldv_52284;
21196,21201c20528,20535
< #line 129 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int drbd_do_handshake(struct drbd_conf *mdev ) ;
< #line 130
< static int drbd_do_auth(struct drbd_conf *mdev ) ;
< #line 132
< static enum finish_epoch drbd_may_finish_epoch(struct drbd_conf *mdev , struct drbd_epoch *epoch ,
---
> #line 72 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int drbd_do_features(struct drbd_tconn *tconn ) ;
> #line 73
> static int drbd_do_auth(struct drbd_tconn *tconn ) ;
> #line 74
> static int drbd_disconnected(struct drbd_conf *mdev ) ;
> #line 76
> static enum finish_epoch drbd_may_finish_epoch(struct drbd_tconn *tconn , struct drbd_epoch *epoch ,
21203,21205c20537,20539
< #line 133
< static int e_end_block(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) ;
< #line 147 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 77
> static int e_end_block(struct drbd_work *w , int cancel ) ;
> #line 91 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
21214c20548
< #line 152
---
> #line 96
21216c20550
< #line 152
---
> #line 96
21218,21223c20552,20557
< #line 152
<     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"),
<                          "i" (152), "i" (12UL));
<     ldv_52018: ;
< #line 152
<     goto ldv_52018;
---
> #line 96
>     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"),
>                          "i" (96), "i" (12UL));
>     ldv_52370: ;
> #line 96
>     goto ldv_52370;
21227c20561
< #line 153
---
> #line 97
21230c20564
< #line 153
---
> #line 97
21232,21237c20566,20571
< #line 153
<     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"),
<                          "i" (153), "i" (12UL));
<     ldv_52019: ;
< #line 153
<     goto ldv_52019;
---
> #line 97
>     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"),
>                          "i" (97), "i" (12UL));
>     ldv_52371: ;
> #line 97
>     goto ldv_52371;
21241c20575
< #line 155
---
> #line 99
21243c20577
< #line 157
---
> #line 101
21245c20579
< #line 158
---
> #line 102
21250,21253c20584,20587
< #line 160
<   goto ldv_52022;
<   ldv_52021: 
< #line 161
---
> #line 104
>   goto ldv_52374;
>   ldv_52373: 
> #line 105
21255c20589
< #line 162
---
> #line 106
21257c20591
< #line 162
---
> #line 106
21259,21260c20593,20594
< #line 163
<     goto ldv_52020;
---
> #line 107
>     goto ldv_52372;
21264c20598
< #line 164
---
> #line 108
21266c20600
< #line 166
---
> #line 110
21271c20605
< #line 167
---
> #line 111
21273,21274c20607,20608
<   ldv_52022: ;
< #line 160
---
>   ldv_52374: ;
> #line 104
21276,21277c20610,20611
< #line 161
<     goto ldv_52021;
---
> #line 105
>     goto ldv_52373;
21281,21284c20615,20618
<   ldv_52020: 
< #line 171
<   page->ldv_14722.private = 0UL;
< #line 173
---
>   ldv_52372: 
> #line 115
>   page->ldv_16348.private = 0UL;
> #line 117
21286c20620
< #line 174
---
> #line 118
21288c20622
< #line 175
---
> #line 119
21292c20626
< #line 181 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 125 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
21299c20633
< #line 184
---
> #line 128
21301,21304c20635,20638
< #line 185
<   goto ldv_52030;
<   ldv_52029: 
< #line 186
---
> #line 129
>   goto ldv_52382;
>   ldv_52381: 
> #line 130
21306c20640
< #line 186
---
> #line 130
21308,21309c20642,20643
<   ldv_52030: 
< #line 185
---
>   ldv_52382: 
> #line 129
21311c20645
< #line 185
---
> #line 129
21313,21314c20647,20648
< #line 186
<     goto ldv_52029;
---
> #line 130
>     goto ldv_52381;
21319c20653
< #line 187
---
> #line 131
21321c20655
< #line 188
---
> #line 132
21326c20660
< #line 189
---
> #line 133
21330c20664
< #line 192 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 136 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
21337c20671
< #line 195
---
> #line 139
21339,21342c20673,20676
< #line 196
<   goto ldv_52039;
<   ldv_52038: 
< #line 197
---
> #line 140
>   goto ldv_52391;
>   ldv_52390: 
> #line 141
21344c20678
< #line 198
---
> #line 142
21346c20680
< #line 196
---
> #line 140
21348,21349c20682,20683
<   ldv_52039: ;
< #line 196
---
>   ldv_52391: ;
> #line 140
21351c20685
< #line 196
---
> #line 140
21353c20687
< #line 196
---
> #line 140
21355,21356c20689,20690
< #line 197
<       goto ldv_52038;
---
> #line 141
>       goto ldv_52390;
21358,21359c20692,20693
< #line 199
<       goto ldv_52040;
---
> #line 143
>       goto ldv_52392;
21364,21365c20698,20699
<   ldv_52040: ;
< #line 200
---
>   ldv_52392: ;
> #line 144
21369c20703
< #line 203 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 147 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
21376c20710
< #line 208
---
> #line 152
21378c20712
< #line 209
---
> #line 153
21380c20714
< #line 209
---
> #line 153
21382,21387c20716,20721
< #line 209
<     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"),
<                          "i" (209), "i" (12UL));
<     ldv_52047: ;
< #line 209
<     goto ldv_52047;
---
> #line 153
>     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"),
>                          "i" (153), "i" (12UL));
>     ldv_52399: ;
> #line 153
>     goto ldv_52399;
21391,21393c20725,20727
< #line 213
<   chain_last->ldv_14722.private = (unsigned long )*head;
< #line 214
---
> #line 157
>   chain_last->ldv_16348.private = (unsigned long )*head;
> #line 158
21395c20729
< #line 215
---
> #line 159
21399,21400c20733,20734
< #line 217 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static struct page *drbd_pp_first_pages_or_try_alloc(struct drbd_conf *mdev , int number ) 
---
> #line 161 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static struct page *__drbd_alloc_pages(struct drbd_conf *mdev , unsigned int number ) 
21404c20738
<   int i ;
---
>   unsigned int i ;
21407c20741
< #line 219
---
> #line 164
21409c20743
< #line 220
---
> #line 165
21411,21415c20745,20749
< #line 221
<   i = 0;
< #line 225
<   if (drbd_pp_vacant >= number) {
< #line 226
---
> #line 166
>   i = 0U;
> #line 170
>   if ((unsigned int )drbd_pp_vacant >= number) {
> #line 171
21417,21419c20751,20753
< #line 227
<     page = page_chain_del(& drbd_pp_pool, number);
< #line 228
---
> #line 172
>     page = page_chain_del(& drbd_pp_pool, (int )number);
> #line 173
21421,21422c20755,20756
< #line 229
<       drbd_pp_vacant = drbd_pp_vacant - number;
---
> #line 174
>       drbd_pp_vacant = (int )((unsigned int )drbd_pp_vacant - number);
21426c20760
< #line 230
---
> #line 175
21428c20762
< #line 231
---
> #line 176
21430c20764
< #line 232
---
> #line 177
21438,21443c20772,20777
< #line 238
<   i = 0;
< #line 238
<   goto ldv_52057;
<   ldv_52056: 
< #line 239
---
> #line 183
>   i = 0U;
> #line 183
>   goto ldv_52409;
>   ldv_52408: 
> #line 184
21445c20779
< #line 240
---
> #line 185
21447,21448c20781,20782
< #line 241
<     goto ldv_52055;
---
> #line 186
>     goto ldv_52407;
21452,21454c20786,20788
< #line 242
<   tmp->ldv_14722.private = (unsigned long )page;
< #line 243
---
> #line 187
>   tmp->ldv_16348.private = (unsigned long )page;
> #line 188
21456,21459c20790,20793
< #line 238
<   i = i + 1;
<   ldv_52057: ;
< #line 238
---
> #line 183
>   i = i + 1U;
>   ldv_52409: ;
> #line 183
21461,21462c20795,20796
< #line 239
<     goto ldv_52056;
---
> #line 184
>     goto ldv_52408;
21466,21467c20800,20801
<   ldv_52055: ;
< #line 246
---
>   ldv_52407: ;
> #line 191
21469c20803
< #line 247
---
> #line 192
21474c20808
< #line 252
---
> #line 197
21476c20810
< #line 253
---
> #line 198
21478c20812
< #line 254
---
> #line 199
21480c20814
< #line 255
---
> #line 200
21482,21484c20816,20818
< #line 256
<     drbd_pp_vacant = drbd_pp_vacant + i;
< #line 257
---
> #line 201
>     drbd_pp_vacant = (int )((unsigned int )drbd_pp_vacant + i);
> #line 202
21489c20823
< #line 259
---
> #line 204
21493,21494c20827,20828
< #line 262 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static void reclaim_net_ee(struct drbd_conf *mdev , struct list_head *to_be_freed ) 
---
> #line 207 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static void reclaim_finished_net_peer_reqs(struct drbd_conf *mdev , struct list_head *to_be_freed ) 
21496c20830
<   struct drbd_epoch_entry *e ;
---
>   struct drbd_peer_request *peer_req ;
21503c20837
< #line 272
---
> #line 218
21505c20839
< #line 272
---
> #line 218
21507,21510c20841,20844
< #line 272
<   goto ldv_52069;
<   ldv_52068: 
< #line 273
---
> #line 218
>   goto ldv_52421;
>   ldv_52420: 
> #line 219
21512,21516c20846,20850
< #line 273
<   e = (struct drbd_epoch_entry *)__mptr;
< #line 274
<   tmp = drbd_ee_has_active_page___0(e);
< #line 274
---
> #line 219
>   peer_req = (struct drbd_peer_request *)__mptr;
> #line 220
>   tmp = drbd_peer_req_has_active_page___0(peer_req);
> #line 220
21518,21519c20852,20853
< #line 275
<     goto ldv_52067;
---
> #line 221
>     goto ldv_52419;
21523c20857
< #line 276
---
> #line 222
21525c20859
< #line 272
---
> #line 218
21527c20861
< #line 272
---
> #line 218
21529,21530c20863,20864
<   ldv_52069: ;
< #line 272
---
>   ldv_52421: ;
> #line 218
21532,21533c20866,20867
< #line 273
<     goto ldv_52068;
---
> #line 219
>     goto ldv_52420;
21537,21538c20871,20872
<   ldv_52067: ;
< #line 277
---
>   ldv_52419: ;
> #line 223
21542c20876
< #line 280 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 226 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
21546,21547c20880,20881
<   struct drbd_epoch_entry *e ;
<   struct drbd_epoch_entry *t ;
---
>   struct drbd_peer_request *peer_req ;
>   struct drbd_peer_request *t ;
21553c20887
< #line 282
---
> #line 228
21555c20889
< #line 282
---
> #line 228
21557,21563c20891,20897
< #line 285
<   spin_lock_irq(& mdev->req_lock);
< #line 286
<   reclaim_net_ee(mdev, & reclaimed);
< #line 287
<   spin_unlock_irq(& mdev->req_lock);
< #line 289
---
> #line 231
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 232
>   reclaim_finished_net_peer_reqs(mdev, & reclaimed);
> #line 233
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 235
21565,21578c20899,20912
< #line 289
<   e = (struct drbd_epoch_entry *)__mptr;
< #line 289
<   __mptr___0 = (struct list_head  const  *)e->w.list.next;
< #line 289
<   t = (struct drbd_epoch_entry *)__mptr___0;
< #line 289
<   goto ldv_52083;
<   ldv_52082: 
< #line 290
<   drbd_free_some_ee(mdev, e, 1);
< #line 289
<   e = t;
< #line 289
---
> #line 235
>   peer_req = (struct drbd_peer_request *)__mptr;
> #line 235
>   __mptr___0 = (struct list_head  const  *)peer_req->w.list.next;
> #line 235
>   t = (struct drbd_peer_request *)__mptr___0;
> #line 235
>   goto ldv_52435;
>   ldv_52434: 
> #line 236
>   __drbd_free_peer_req(mdev, peer_req, 1);
> #line 235
>   peer_req = t;
> #line 235
21580,21586c20914,20920
< #line 289
<   t = (struct drbd_epoch_entry *)__mptr___1;
<   ldv_52083: ;
< #line 289
<   if ((unsigned long )(& e->w.list) != (unsigned long )(& reclaimed)) {
< #line 290
<     goto ldv_52082;
---
> #line 235
>   t = (struct drbd_peer_request *)__mptr___1;
>   ldv_52435: ;
> #line 235
>   if ((unsigned long )(& peer_req->w.list) != (unsigned long )(& reclaimed)) {
> #line 236
>     goto ldv_52434;
21591c20925
< #line 294
---
> #line 240
21595,21596c20929,20930
< #line 305 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static struct page *drbd_pp_alloc(struct drbd_conf *mdev , unsigned int number , bool retry ) 
---
> #line 251 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> struct page *drbd_alloc_pages(struct drbd_conf *mdev , unsigned int number , bool retry___0 ) 
21598a20933
>   struct net_conf *nc ;
21600a20936,20938
>   int mxb ;
>   struct net_conf *_________p1 ;
>   bool __warned ;
21603c20941
<   struct task_struct *tmp___2 ;
---
>   int tmp___2 ;
21604a20943,20944
>   struct task_struct *tmp___4 ;
>   int tmp___5 ;
21607c20947
< #line 307
---
> #line 254
21609c20949
< #line 308
---
> #line 256
21611c20951
< #line 308
---
> #line 256
21613c20953
< #line 308
---
> #line 256
21615c20955
< #line 308
---
> #line 256
21617c20957
< #line 308
---
> #line 256
21619c20959
< #line 308
---
> #line 256
21621,21626c20961,20980
< #line 312
<   tmp___0 = atomic_read((atomic_t const   *)(& mdev->pp_in_use));
< #line 312
<   if (tmp___0 < (mdev->net_conf)->max_buffers) {
< #line 313
<     page = drbd_pp_first_pages_or_try_alloc(mdev, (int )number);
---
> #line 261
>   rcu_read_lock();
> #line 262
>   _________p1 = *((struct net_conf * volatile  *)(& (mdev->tconn)->net_conf));
> #line 262
>   tmp___0 = debug_lockdep_rcu_enabled();
> #line 262
>   if (tmp___0 != 0 && ! __warned) {
> #line 262
>     tmp___1 = rcu_read_lock_held();
> #line 262
>     if (tmp___1 == 0 && 1) {
> #line 262
>       __warned = 1;
> #line 262
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>                              262, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
21630,21633c20984,21002
< #line 315
<   goto ldv_52094;
<   ldv_52093: 
< #line 316
---
> #line 262
>   nc = _________p1;
> #line 263
>   mxb = (unsigned long )nc != (unsigned long )((struct net_conf *)0) ? (int )nc->max_buffers : 1000000;
> #line 264
>   rcu_read_unlock();
> #line 266
>   tmp___2 = atomic_read((atomic_t const   *)(& mdev->pp_in_use));
> #line 266
>   if (tmp___2 < mxb) {
> #line 267
>     page = __drbd_alloc_pages(mdev, number);
>   } else {
> 
>   }
> #line 269
>   goto ldv_52451;
>   ldv_52450: 
> #line 270
21635c21004
< #line 318
---
> #line 272
21637,21643c21006,21012
< #line 320
<   tmp___1 = atomic_read((atomic_t const   *)(& mdev->pp_in_use));
< #line 320
<   if (tmp___1 < (mdev->net_conf)->max_buffers) {
< #line 321
<     page = drbd_pp_first_pages_or_try_alloc(mdev, (int )number);
< #line 322
---
> #line 274
>   tmp___3 = atomic_read((atomic_t const   *)(& mdev->pp_in_use));
> #line 274
>   if (tmp___3 < mxb) {
> #line 275
>     page = __drbd_alloc_pages(mdev, number);
> #line 276
21645,21646c21014,21015
< #line 323
<       goto ldv_52092;
---
> #line 277
>       goto ldv_52449;
21653,21656c21022,21025
< #line 326
<   if (! retry) {
< #line 327
<     goto ldv_52092;
---
> #line 280
>   if (! retry___0) {
> #line 281
>     goto ldv_52449;
21660,21669c21029,21038
< #line 329
<   tmp___2 = get_current();
< #line 329
<   tmp___3 = signal_pending(tmp___2);
< #line 329
<   if (tmp___3 != 0) {
< #line 330
<     dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "drbd_pp_alloc interrupted!\n");
< #line 331
<     goto ldv_52092;
---
> #line 283
>   tmp___4 = get_current();
> #line 283
>   tmp___5 = signal_pending(tmp___4);
> #line 283
>   if (tmp___5 != 0) {
> #line 284
>     dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "drbd_alloc_pages interrupted!\n");
> #line 285
>     goto ldv_52449;
21673c21042
< #line 334
---
> #line 288
21675,21676c21044,21045
<   ldv_52094: ;
< #line 315
---
>   ldv_52451: ;
> #line 269
21678,21679c21047,21048
< #line 316
<     goto ldv_52093;
---
> #line 270
>     goto ldv_52450;
21683,21684c21052,21053
<   ldv_52092: 
< #line 336
---
>   ldv_52449: 
> #line 290
21686c21055
< #line 338
---
> #line 292
21688c21057
< #line 339
---
> #line 293
21693c21062
< #line 340
---
> #line 294
21697,21698c21066,21067
< #line 347 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static void drbd_pp_free(struct drbd_conf *mdev , struct page *page , int is_net ) 
---
> #line 301 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static void drbd_free_pages(struct drbd_conf *mdev , struct page *page , int is_net ) 
21705c21074
< #line 349
---
> #line 303
21707c21076
< #line 352
---
> #line 306
21709c21078
< #line 353
---
> #line 307
21714,21716c21083,21085
< #line 355
<   if ((unsigned long )drbd_pp_vacant > (unsigned long )minor_count * 32UL) {
< #line 356
---
> #line 309
>   if ((unsigned long )drbd_pp_vacant > (unsigned long )minor_count * 256UL) {
> #line 310
21719c21088
< #line 359
---
> #line 313
21721c21090
< #line 360
---
> #line 314
21723c21092
< #line 361
---
> #line 315
21725c21094
< #line 362
---
> #line 316
21727c21096
< #line 363
---
> #line 317
21730c21099
< #line 365
---
> #line 319
21732c21101
< #line 366
---
> #line 320
21734c21103
< #line 367
---
> #line 321
21740c21109
< #line 369
---
> #line 323
21742c21111
< #line 370
---
> #line 324
21746,21748c21115,21117
< #line 387 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< struct drbd_epoch_entry *drbd_alloc_ee(struct drbd_conf *mdev , u64 id , sector_t sector ,
<                                        unsigned int data_size , gfp_t gfp_mask ) 
---
> #line 341 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> struct drbd_peer_request *drbd_alloc_peer_req(struct drbd_conf *mdev , u64 id , sector_t sector ,
>                                               unsigned int data_size , gfp_t gfp_mask ) 
21750c21119
<   struct drbd_epoch_entry *e ;
---
>   struct drbd_peer_request *peer_req ;
21757c21126
< #line 394
---
> #line 345
21759c21128
< #line 395
---
> #line 346
21761c21130
< #line 397
---
> #line 348
21763c21132
< #line 397
---
> #line 348
21765c21134
< #line 398
---
> #line 349
21770c21139
< #line 400
---
> #line 351
21772,21776c21141,21145
< #line 400
<   e = (struct drbd_epoch_entry *)tmp___0;
< #line 401
<   if ((unsigned long )e == (unsigned long )((struct drbd_epoch_entry *)0)) {
< #line 402
---
> #line 351
>   peer_req = (struct drbd_peer_request *)tmp___0;
> #line 352
>   if ((unsigned long )peer_req == (unsigned long )((struct drbd_peer_request *)0)) {
> #line 353
21778,21779c21147,21149
< #line 403
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "alloc_ee: Allocation of an EE failed\n");
---
> #line 354
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "%s: allocation failed\n",
>               "drbd_alloc_peer_req");
21783c21153
< #line 404
---
> #line 355
21788c21158
< #line 407
---
> #line 358
21790,21792c21160,21162
< #line 408
<     page = drbd_pp_alloc(mdev, nr_pages, (gfp_mask & 16U) != 0U);
< #line 409
---
> #line 359
>     page = drbd_alloc_pages(mdev, nr_pages, (gfp_mask & 16U) != 0U);
> #line 360
21794c21164
< #line 410
---
> #line 361
21802,21821c21172,21195
< #line 413
<   INIT_HLIST_NODE(& e->collision);
< #line 414
<   e->epoch = 0;
< #line 415
<   e->mdev = mdev;
< #line 416
<   e->pages = page;
< #line 417
<   atomic_set(& e->pending_bios, 0);
< #line 418
<   e->size = data_size;
< #line 419
<   e->flags = 0UL;
< #line 420
<   e->sector = sector;
< #line 421
<   e->ldv_49189.block_id = id;
< #line 423
<   return (e);
---
> #line 364
>   drbd_clear_interval(& peer_req->i);
> #line 365
>   peer_req->i.size = data_size;
> #line 366
>   peer_req->i.sector = sector;
> #line 367
>   peer_req->i.local = 0;
> #line 368
>   peer_req->i.waiting = 0;
> #line 370
>   peer_req->epoch = 0;
> #line 371
>   peer_req->w.ldv_50388.mdev = mdev;
> #line 372
>   peer_req->pages = page;
> #line 373
>   atomic_set(& peer_req->pending_bios, 0);
> #line 374
>   peer_req->flags = 0UL;
> #line 379
>   peer_req->ldv_50490.block_id = id;
> #line 381
>   return (peer_req);
21823,21825c21197,21199
< #line 426
<   mempool_free((void *)e, drbd_ee_mempool);
< #line 427
---
> #line 384
>   mempool_free((void *)peer_req, drbd_ee_mempool);
> #line 385
21829,21830c21203,21205
< #line 430 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< void drbd_free_some_ee(struct drbd_conf *mdev , struct drbd_epoch_entry *e , int is_net ) 
---
> #line 388 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> void __drbd_free_peer_req(struct drbd_conf *mdev , struct drbd_peer_request *peer_req ,
>                           int is_net ) 
21833c21208,21209
<   int tmp___0 ;
---
>   bool tmp___0 ;
>   int tmp___1 ;
21836,21839c21212,21215
< #line 432
<   if ((e->flags & 16UL) != 0UL) {
< #line 433
<     kfree((void const   *)e->ldv_49189.digest);
---
> #line 391
>   if ((peer_req->flags & 16UL) != 0UL) {
> #line 392
>     kfree((void const   *)peer_req->ldv_50490.digest);
21843,21847c21219,21223
< #line 434
<   drbd_pp_free(mdev, e->pages, is_net);
< #line 435
<   tmp = atomic_read((atomic_t const   *)(& e->pending_bios));
< #line 435
---
> #line 393
>   drbd_free_pages(mdev, peer_req->pages, is_net);
> #line 394
>   tmp = atomic_read((atomic_t const   *)(& peer_req->pending_bios));
> #line 394
21849,21852c21225,21228
< #line 435
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( atomic_read(&e->pending_bios) == 0 ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             435);
---
> #line 394
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( atomic_read(&peer_req->pending_bios) == 0 ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>             394);
21856,21863c21232,21247
< #line 436
<   tmp___0 = hlist_unhashed((struct hlist_node  const  *)(& e->collision));
< #line 436
<   if (tmp___0 == 0) {
< #line 436
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( hlist_unhashed(&e->collision) ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             436);
---
> #line 395
>   tmp___0 = drbd_interval_empty(& peer_req->i);
> #line 395
>   if (tmp___0) {
> #line 395
>     tmp___1 = 0;
>   } else {
> #line 395
>     tmp___1 = 1;
>   }
> #line 395
>   if (tmp___1) {
> #line 395
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( drbd_interval_empty(&peer_req->i) ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>             395);
21867,21869c21251,21253
< #line 437
<   mempool_free((void *)e, drbd_ee_mempool);
< #line 438
---
> #line 396
>   mempool_free((void *)peer_req, drbd_ee_mempool);
> #line 397
21873,21874c21257,21258
< #line 440 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< int drbd_release_ee(struct drbd_conf *mdev , struct list_head *list ) 
---
> #line 399 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> int drbd_free_peer_reqs(struct drbd_conf *mdev , struct list_head *list ) 
21877,21878c21261,21262
<   struct drbd_epoch_entry *e ;
<   struct drbd_epoch_entry *t ;
---
>   struct drbd_peer_request *peer_req ;
>   struct drbd_peer_request *t ;
21886c21270
< #line 442
---
> #line 401
21888c21272
< #line 442
---
> #line 401
21890c21274
< #line 444
---
> #line 403
21892c21276
< #line 445
---
> #line 404
21894,21896c21278,21280
< #line 447
<   spin_lock_irq(& mdev->req_lock);
< #line 448
---
> #line 406
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 407
21898,21900c21282,21284
< #line 449
<   spin_unlock_irq(& mdev->req_lock);
< #line 451
---
> #line 408
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 410
21902,21913c21286,21297
< #line 451
<   e = (struct drbd_epoch_entry *)__mptr;
< #line 451
<   __mptr___0 = (struct list_head  const  *)e->w.list.next;
< #line 451
<   t = (struct drbd_epoch_entry *)__mptr___0;
< #line 451
<   goto ldv_52135;
<   ldv_52134: 
< #line 452
<   drbd_free_some_ee(mdev, e, is_net);
< #line 453
---
> #line 410
>   peer_req = (struct drbd_peer_request *)__mptr;
> #line 410
>   __mptr___0 = (struct list_head  const  *)peer_req->w.list.next;
> #line 410
>   t = (struct drbd_peer_request *)__mptr___0;
> #line 410
>   goto ldv_52493;
>   ldv_52492: 
> #line 411
>   __drbd_free_peer_req(mdev, peer_req, is_net);
> #line 412
21915,21917c21299,21301
< #line 451
<   e = t;
< #line 451
---
> #line 410
>   peer_req = t;
> #line 410
21919,21925c21303,21309
< #line 451
<   t = (struct drbd_epoch_entry *)__mptr___1;
<   ldv_52135: ;
< #line 451
<   if ((unsigned long )(& e->w.list) != (unsigned long )(& work_list)) {
< #line 452
<     goto ldv_52134;
---
> #line 410
>   t = (struct drbd_peer_request *)__mptr___1;
>   ldv_52493: ;
> #line 410
>   if ((unsigned long )(& peer_req->w.list) != (unsigned long )(& work_list)) {
> #line 411
>     goto ldv_52492;
21930c21314
< #line 455
---
> #line 414
21934,21935c21318,21319
< #line 468 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int drbd_process_done_ee(struct drbd_conf *mdev ) 
---
> #line 420 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int drbd_finish_peer_reqs(struct drbd_conf *mdev ) 
21939,21941c21323,21325
<   struct drbd_epoch_entry *e ;
<   struct drbd_epoch_entry *t ;
<   int ok ;
---
>   struct drbd_peer_request *peer_req ;
>   struct drbd_peer_request *t ;
>   int err ;
21947c21331
<   int tmp ;
---
>   int err2 ;
21951c21335
< #line 470
---
> #line 422
21953c21337
< #line 470
---
> #line 422
21955c21339
< #line 471
---
> #line 423
21957c21341
< #line 471
---
> #line 423
21959,21965c21343,21349
< #line 473
<   ok = (int )mdev->state.ldv_39979.conn > 8;
< #line 475
<   spin_lock_irq(& mdev->req_lock);
< #line 476
<   reclaim_net_ee(mdev, & reclaimed);
< #line 477
---
> #line 425
>   err = 0;
> #line 427
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 428
>   reclaim_finished_net_peer_reqs(mdev, & reclaimed);
> #line 429
21967,21969c21351,21353
< #line 478
<   spin_unlock_irq(& mdev->req_lock);
< #line 480
---
> #line 430
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 432
21971,21984c21355,21368
< #line 480
<   e = (struct drbd_epoch_entry *)__mptr;
< #line 480
<   __mptr___0 = (struct list_head  const  *)e->w.list.next;
< #line 480
<   t = (struct drbd_epoch_entry *)__mptr___0;
< #line 480
<   goto ldv_52152;
<   ldv_52151: 
< #line 481
<   drbd_free_some_ee(mdev, e, 1);
< #line 480
<   e = t;
< #line 480
---
> #line 432
>   peer_req = (struct drbd_peer_request *)__mptr;
> #line 432
>   __mptr___0 = (struct list_head  const  *)peer_req->w.list.next;
> #line 432
>   t = (struct drbd_peer_request *)__mptr___0;
> #line 432
>   goto ldv_52510;
>   ldv_52509: 
> #line 433
>   __drbd_free_peer_req(mdev, peer_req, 1);
> #line 432
>   peer_req = t;
> #line 432
21986,21992c21370,21376
< #line 480
<   t = (struct drbd_epoch_entry *)__mptr___1;
<   ldv_52152: ;
< #line 480
<   if ((unsigned long )(& e->w.list) != (unsigned long )(& reclaimed)) {
< #line 481
<     goto ldv_52151;
---
> #line 432
>   t = (struct drbd_peer_request *)__mptr___1;
>   ldv_52510: ;
> #line 432
>   if ((unsigned long )(& peer_req->w.list) != (unsigned long )(& reclaimed)) {
> #line 433
>     goto ldv_52509;
21996c21380
< #line 487
---
> #line 439
21998,22015c21382,21404
< #line 487
<   e = (struct drbd_epoch_entry *)__mptr___2;
< #line 487
<   __mptr___3 = (struct list_head  const  *)e->w.list.next;
< #line 487
<   t = (struct drbd_epoch_entry *)__mptr___3;
< #line 487
<   goto ldv_52161;
<   ldv_52160: 
< #line 489
<   tmp = (*(e->w.cb))(mdev, & e->w, ok == 0);
< #line 489
<   ok = tmp != 0 && ok != 0;
< #line 490
<   drbd_free_some_ee(mdev, e, 0);
< #line 487
<   e = t;
< #line 487
---
> #line 439
>   peer_req = (struct drbd_peer_request *)__mptr___2;
> #line 439
>   __mptr___3 = (struct list_head  const  *)peer_req->w.list.next;
> #line 439
>   t = (struct drbd_peer_request *)__mptr___3;
> #line 439
>   goto ldv_52520;
>   ldv_52519: 
> #line 443
>   err2 = (*(peer_req->w.cb))(& peer_req->w, err != 0);
> #line 444
>   if (err == 0) {
> #line 445
>     err = err2;
>   } else {
> 
>   }
> #line 446
>   __drbd_free_peer_req(mdev, peer_req, 0);
> #line 439
>   peer_req = t;
> #line 439
22017,22023c21406,21412
< #line 487
<   t = (struct drbd_epoch_entry *)__mptr___4;
<   ldv_52161: ;
< #line 487
<   if ((unsigned long )(& e->w.list) != (unsigned long )(& work_list)) {
< #line 488
<     goto ldv_52160;
---
> #line 439
>   t = (struct drbd_peer_request *)__mptr___4;
>   ldv_52520: ;
> #line 439
>   if ((unsigned long )(& peer_req->w.list) != (unsigned long )(& work_list)) {
> #line 440
>     goto ldv_52519;
22027c21416
< #line 492
---
> #line 448
22029,22030c21418,21419
< #line 494
<   return (ok);
---
> #line 450
>   return (err);
22033,22034c21422,21423
< #line 497 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< void _drbd_wait_ee_list_empty(struct drbd_conf *mdev , struct list_head *head ) 
---
> #line 453 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static void _drbd_wait_ee_list_empty(struct drbd_conf *mdev , struct list_head *head ) 
22041c21430
< #line 499
---
> #line 456
22043c21432
< #line 499
---
> #line 456
22045c21434
< #line 499
---
> #line 456
22047c21436
< #line 499
---
> #line 456
22049c21438
< #line 499
---
> #line 456
22051c21440
< #line 499
---
> #line 456
22053,22056c21442,21445
< #line 503
<   goto ldv_52169;
<   ldv_52168: 
< #line 504
---
> #line 460
>   goto ldv_52528;
>   ldv_52527: 
> #line 461
22058,22060c21447,21449
< #line 505
<   spin_unlock_irq(& mdev->req_lock);
< #line 506
---
> #line 462
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 463
22062c21451
< #line 507
---
> #line 464
22064,22067c21453,21456
< #line 508
<   spin_lock_irq(& mdev->req_lock);
<   ldv_52169: 
< #line 503
---
> #line 465
>   spin_lock_irq(& (mdev->tconn)->req_lock);
>   ldv_52528: 
> #line 460
22069c21458
< #line 503
---
> #line 460
22071,22072c21460,21461
< #line 504
<     goto ldv_52168;
---
> #line 461
>     goto ldv_52527;
22077c21466
< #line 508
---
> #line 465
22081,22082c21470,21471
< #line 512 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< void drbd_wait_ee_list_empty(struct drbd_conf *mdev , struct list_head *head ) 
---
> #line 469 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static void drbd_wait_ee_list_empty(struct drbd_conf *mdev , struct list_head *head ) 
22087,22089c21476,21478
< #line 514
<   spin_lock_irq(& mdev->req_lock);
< #line 515
---
> #line 472
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 473
22091,22093c21480,21482
< #line 516
<   spin_unlock_irq(& mdev->req_lock);
< #line 517
---
> #line 474
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 475
22097,22158c21486,21487
< #line 521 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int drbd_accept(struct drbd_conf *mdev , char const   **what , struct socket *sock ,
<                        struct socket **newsock ) 
< { 
<   struct sock *sk ;
<   int err ;
< 
<   {
< #line 524
<   sk = sock->sk;
< #line 525
<   err = 0;
< #line 527
<   *what = "listen";
< #line 528
<   err = (*((sock->ops)->listen))(sock, 5);
< #line 529
<   if (err < 0) {
< #line 530
<     goto out;
<   } else {
< 
<   }
< #line 532
<   *what = "sock_create_lite";
< #line 533
<   err = sock_create_lite((int )sk->__sk_common.skc_family, (int )sk->sk_type, (int )sk->sk_protocol,
<                          newsock);
< #line 535
<   if (err < 0) {
< #line 536
<     goto out;
<   } else {
< 
<   }
< #line 538
<   *what = "accept";
< #line 539
<   err = (*((sock->ops)->accept))(sock, *newsock, 0);
< #line 540
<   if (err < 0) {
< #line 541
<     sock_release(*newsock);
< #line 542
<     *newsock = 0;
< #line 543
<     goto out;
<   } else {
< 
<   }
< #line 545
<   (*newsock)->ops = sock->ops;
< #line 546
<   __module_get(((*newsock)->ops)->owner);
<   out: ;
< #line 549
<   return (err);
< }
< }
< #line 552 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int drbd_recv_short(struct drbd_conf *mdev , struct socket *sock , void *buf ,
<                            size_t size , int flags ) 
---
> #line 477 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int drbd_recv_short(struct socket *sock , void *buf , size_t size , int flags ) 
22170c21499
< #line 556
---
> #line 480
22172c21501
< #line 556
---
> #line 480
22174c21503
< #line 560
---
> #line 484
22176c21505
< #line 560
---
> #line 484
22178c21507
< #line 560
---
> #line 484
22180c21509
< #line 560
---
> #line 484
22182c21511
< #line 560
---
> #line 484
22184c21513
< #line 560
---
> #line 484
22186c21515
< #line 560
---
> #line 484
22188,22190c21517,21519
< #line 567
<   tmp = current_thread_info___0();
< #line 567
---
> #line 491
>   tmp = current_thread_info();
> #line 491
22192,22194c21521,21523
< #line 568
<   tmp___0 = current_thread_info___0();
< #line 568
---
> #line 492
>   tmp___0 = current_thread_info();
> #line 492
22196c21525
< #line 568
---
> #line 492
22198c21527
< #line 569
---
> #line 493
22200,22202c21529,21531
< #line 570
<   tmp___1 = current_thread_info___0();
< #line 570
---
> #line 494
>   tmp___1 = current_thread_info();
> #line 494
22204c21533
< #line 572
---
> #line 496
22208,22209c21537,21538
< #line 575 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int drbd_recv(struct drbd_conf *mdev , void *buf , size_t size ) 
---
> #line 499 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int drbd_recv(struct drbd_tconn *tconn , void *buf , size_t size ) 
22211,22213d21539
<   mm_segment_t oldfs ;
<   struct kvec iov ;
<   struct msghdr msg ;
22215,22218d21540
<   struct thread_info *tmp ;
<   struct thread_info *tmp___0 ;
<   mm_segment_t __constr_expr_0 ;
<   struct thread_info *tmp___1 ;
22219a21542,21545
>   struct net_conf *_________p1 ;
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
22222,22223c21548,21549
<   struct task_struct *tmp___2 ;
<   int tmp___3 ;
---
>   struct task_struct *tmp___1 ;
>   int tmp___2 ;
22228,22262c21554,21556
< #line 578
<   iov.iov_base = buf;
< #line 578
<   iov.iov_len = size;
< #line 582
<   msg.msg_name = 0;
< #line 582
<   msg.msg_namelen = 0;
< #line 582
<   msg.msg_iov = (struct iovec *)(& iov);
< #line 582
<   msg.msg_iovlen = 1UL;
< #line 582
<   msg.msg_control = 0;
< #line 582
<   msg.msg_controllen = 0UL;
< #line 582
<   msg.msg_flags = 16640U;
< #line 589
<   tmp = current_thread_info___0();
< #line 589
<   oldfs = tmp->addr_limit;
< #line 590
<   tmp___0 = current_thread_info___0();
< #line 590
<   __constr_expr_0.seg = 0xffffffffffffffffUL;
< #line 590
<   tmp___0->addr_limit = __constr_expr_0;
< #line 591
<   rv = sock_recvmsg(mdev->data.socket, & msg, size, (int )msg.msg_flags);
< #line 592
<   tmp___1 = current_thread_info___0();
< #line 592
<   tmp___1->addr_limit = oldfs;
< #line 594
---
> #line 503
>   rv = drbd_recv_short(tconn->data.socket, buf, size, 0);
> #line 505
22264c21558
< #line 595
---
> #line 506
22266,22267c21560,21561
< #line 596
<       _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "sock was reset by peer\n");
---
> #line 507
>       printk("\016d-con %s: sock was reset by peer\n", tconn->name);
22269c21563
< #line 597
---
> #line 508
22271,22273c21565,21566
< #line 598
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "sock_recvmsg returned %d\n",
<               rv);
---
> #line 509
>       printk("\vd-con %s: sock_recvmsg returned %d\n", tconn->name, rv);
22275c21568
< #line 599
---
> #line 510
22277,22287c21570,21607
< #line 600
<       tmp___3 = drbd_test_flag(mdev, DISCONNECT_SENT);
< #line 600
<       if (tmp___3 != 0) {
< #line 602
<         __ret = (long )(((mdev->net_conf)->ping_timeo * 250) / 10);
< #line 602
<         if ((int )mdev->state.ldv_39979.conn > 9) {
< #line 602
<           tmp___2 = get_current();
< #line 602
---
> #line 511
>       tmp___2 = constant_test_bit(12U, (unsigned long const volatile   *)(& tconn->flags));
> #line 511
>       if (tmp___2 != 0) {
> #line 513
>         rcu_read_lock();
> #line 514
>         _________p1 = *((struct net_conf * volatile  *)(& tconn->net_conf));
> #line 514
>         tmp = debug_lockdep_rcu_enabled();
> #line 514
>         if (tmp != 0 && ! __warned) {
> #line 514
>           tmp___0 = rcu_read_lock_held();
> #line 514
>           if (tmp___0 == 0 && 1) {
> #line 514
>             __warned = 1;
> #line 514
>             lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>                                    514, "suspicious rcu_dereference_check() usage");
>           } else {
> 
>           }
>         } else {
> 
>         }
> #line 514
>         t = (long )((_________p1->ping_timeo * 250U) / 10U);
> #line 515
>         rcu_read_unlock();
> #line 517
>         __ret = t;
> #line 517
>         if ((unsigned int )tconn->cstate > 8U) {
> #line 517
>           tmp___1 = get_current();
> #line 517
22289,22291c21609,21611
< #line 602
<           __wait.private = (void *)tmp___2;
< #line 602
---
> #line 517
>           __wait.private = (void *)tmp___1;
> #line 517
22293c21613
< #line 602
---
> #line 517
22295c21615
< #line 602
---
> #line 517
22297,22303c21617,21623
<           ldv_52210: 
< #line 602
<           prepare_to_wait(& mdev->state_wait, & __wait, 2);
< #line 602
<           if ((int )mdev->state.ldv_39979.conn <= 9) {
< #line 602
<             goto ldv_52209;
---
>           ldv_52558: 
> #line 517
>           prepare_to_wait(& tconn->ping_wait, & __wait, 2);
> #line 517
>           if ((unsigned int )tconn->cstate <= 8U) {
> #line 517
>             goto ldv_52557;
22307c21627
< #line 602
---
> #line 517
22309c21629
< #line 602
---
> #line 517
22311,22312c21631,21632
< #line 602
<             goto ldv_52209;
---
> #line 517
>             goto ldv_52557;
22316,22320c21636,21640
< #line 602
<           goto ldv_52210;
<           ldv_52209: 
< #line 602
<           finish_wait(& mdev->state_wait, & __wait);
---
> #line 517
>           goto ldv_52558;
>           ldv_52557: 
> #line 517
>           finish_wait(& tconn->ping_wait, & __wait);
22324c21644
< #line 602
---
> #line 517
22326c21646
< #line 604
---
> #line 519
22328c21648
< #line 605
---
> #line 520
22336,22337c21656,21657
< #line 607
<       _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "sock was shut down by peer\n");
---
> #line 522
>       printk("\016d-con %s: sock was shut down by peer\n", tconn->name);
22344c21664
< #line 610
---
> #line 525
22346c21666
< #line 611
---
> #line 526
22348,22350c21668,21670
< #line 611
<     val.ldv_39979.conn = 4U;
< #line 611
---
> #line 526
>     val.ldv_40604.conn = 4U;
> #line 526
22352,22355c21672,21675
< #line 611
<     mask.ldv_39979.conn = 31U;
< #line 611
<     drbd_force_state(mdev, mask, val);
---
> #line 526
>     mask.ldv_40604.conn = 31U;
> #line 526
>     conn_request_state(tconn, mask, val, CS_HARD);
22360c21680
< #line 614
---
> #line 529
22364c21684,21739
< #line 622 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 532 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int drbd_recv_all(struct drbd_tconn *tconn , void *buf , size_t size ) 
> { 
>   int err ;
> 
>   {
> #line 536
>   err = drbd_recv(tconn, buf, size);
> #line 537
>   if ((size_t )err != size) {
> #line 538
>     if (err >= 0) {
> #line 539
>       err = -5;
>     } else {
> #line 541
>       err = 0;
>     }
>   } else {
> 
>   }
> #line 542
>   return (err);
> }
> }
> #line 545 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int drbd_recv_all_warn(struct drbd_tconn *tconn , void *buf , size_t size ) 
> { 
>   int err ;
>   struct task_struct *tmp ;
>   int tmp___0 ;
> 
>   {
> #line 549
>   err = drbd_recv_all(tconn, buf, size);
> #line 550
>   if (err != 0) {
> #line 550
>     tmp = get_current();
> #line 550
>     tmp___0 = signal_pending(tmp);
> #line 550
>     if (tmp___0 == 0) {
> #line 551
>       printk("\fd-con %s: short read (expected size %d)\n", tconn->name, (int )size);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 552
>   return (err);
> }
> }
> #line 560 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
22370c21745
< #line 626
---
> #line 564
22372c21747
< #line 627
---
> #line 565
22374c21749
< #line 628
---
> #line 566
22379c21754
< #line 630
---
> #line 568
22381c21756
< #line 631
---
> #line 569
22383c21758
< #line 632
---
> #line 570
22388c21763
< #line 634
---
> #line 572
22392,22393c21767,21768
< #line 636 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static struct socket *drbd_try_connect(struct drbd_conf *mdev ) 
---
> #line 574 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static struct socket *drbd_try_connect(struct drbd_tconn *tconn ) 
22397a21773,21774
>   struct sockaddr_in6 peer_in6 ;
>   struct net_conf *nc ;
22398a21776,21780
>   int peer_addr_len ;
>   int my_addr_len ;
>   int sndbuf_size ;
>   int rcvbuf_size ;
>   int connect_int ;
22399a21782,21783
>   struct net_conf *_________p1 ;
>   bool __warned ;
22401,22402c21785
<   long tmp___0 ;
<   size_t __len ;
---
>   int tmp___0 ;
22404a21788
>   size_t __len ;
22405a21790,21794
>   int __min1___0 ;
>   int __min2___0 ;
>   size_t __len___0 ;
>   void *__ret___0 ;
>   long tmp___1 ;
22410c21799
< #line 642
---
> #line 583
22412,22417c21801,21820
< #line 644
<   tmp = get_net_conf(mdev);
< #line 644
<   if (tmp == 0) {
< #line 645
<     return (0);
---
> #line 585
>   rcu_read_lock();
> #line 586
>   _________p1 = *((struct net_conf * volatile  *)(& tconn->net_conf));
> #line 586
>   tmp = debug_lockdep_rcu_enabled();
> #line 586
>   if (tmp != 0 && ! __warned) {
> #line 586
>     tmp___0 = rcu_read_lock_held();
> #line 586
>     if (tmp___0 == 0 && 1) {
> #line 586
>       __warned = 1;
> #line 586
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>                              586, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
22421,22431c21824,21831
< #line 647
<   what = "sock_create_kern";
< #line 648
<   err = sock_create_kern((int )((struct sockaddr *)(& (mdev->net_conf)->my_addr))->sa_family,
<                          1, 6, & sock);
< #line 650
<   if (err < 0) {
< #line 651
<     sock = 0;
< #line 652
<     goto out;
---
> #line 586
>   nc = _________p1;
> #line 587
>   if ((unsigned long )nc == (unsigned long )((struct net_conf *)0)) {
> #line 588
>     rcu_read_unlock();
> #line 589
>     return (0);
22435,22445c21835,21845
< #line 655
<   tmp___0 = (long )((mdev->net_conf)->try_connect_int * 250);
< #line 655
<   (sock->sk)->sk_sndtimeo = tmp___0;
< #line 655
<   (sock->sk)->sk_rcvtimeo = tmp___0;
< #line 657
<   drbd_setbufsize(sock, (unsigned int )(mdev->net_conf)->sndbuf_size, (unsigned int )(mdev->net_conf)->rcvbuf_size);
< #line 667
<   __min1 = (mdev->net_conf)->my_addr_len;
< #line 667
---
> #line 591
>   sndbuf_size = (int )nc->sndbuf_size;
> #line 592
>   rcvbuf_size = (int )nc->rcvbuf_size;
> #line 593
>   connect_int = (int )nc->connect_int;
> #line 594
>   rcu_read_unlock();
> #line 596
>   __min1 = tconn->my_addr_len;
> #line 596
22447,22450c21847,21852
< #line 667
<   __len = (size_t )(__min1 < __min2 ? __min1 : __min2);
< #line 667
<   __ret = __builtin_memcpy((void *)(& src_in6), (void const   *)(& (mdev->net_conf)->my_addr),
---
> #line 596
>   my_addr_len = __min1 < __min2 ? __min1 : __min2;
> #line 597
>   __len = (size_t )my_addr_len;
> #line 597
>   __ret = __builtin_memcpy((void *)(& src_in6), (void const   *)(& tconn->my_addr),
22452,22454c21854,21856
< #line 669
<   if ((unsigned int )((struct sockaddr *)(& (mdev->net_conf)->my_addr))->sa_family == 10U) {
< #line 670
---
> #line 599
>   if ((unsigned int )((struct sockaddr *)(& tconn->my_addr))->sa_family == 10U) {
> #line 600
22457c21859
< #line 672
---
> #line 602
22460c21862,21895
< #line 674
---
> #line 604
>   __min1___0 = tconn->peer_addr_len;
> #line 604
>   __min2___0 = 28;
> #line 604
>   peer_addr_len = __min1___0 < __min2___0 ? __min1___0 : __min2___0;
> #line 605
>   __len___0 = (size_t )peer_addr_len;
> #line 605
>   __ret___0 = __builtin_memcpy((void *)(& peer_in6), (void const   *)(& tconn->peer_addr),
>                                __len___0);
> #line 607
>   what = "sock_create_kern";
> #line 608
>   err = sock_create_kern((int )((struct sockaddr *)(& src_in6))->sa_family, 1, 6,
>                          & sock);
> #line 610
>   if (err < 0) {
> #line 611
>     sock = 0;
> #line 612
>     goto out;
>   } else {
> 
>   }
> #line 615
>   tmp___1 = (long )(connect_int * 250);
> #line 615
>   (sock->sk)->sk_sndtimeo = tmp___1;
> #line 615
>   (sock->sk)->sk_rcvtimeo = tmp___1;
> #line 617
>   drbd_setbufsize(sock, (unsigned int )sndbuf_size, (unsigned int )rcvbuf_size);
> #line 626
22462,22464c21897,21899
< #line 675
<   err = (*((sock->ops)->bind))(sock, (struct sockaddr *)(& src_in6), (mdev->net_conf)->my_addr_len);
< #line 678
---
> #line 627
>   err = (*((sock->ops)->bind))(sock, (struct sockaddr *)(& src_in6), my_addr_len);
> #line 628
22466c21901
< #line 679
---
> #line 629
22471c21906
< #line 683
---
> #line 633
22473c21908
< #line 684
---
> #line 634
22475,22477c21910,21912
< #line 685
<   err = (*((sock->ops)->connect))(sock, (struct sockaddr *)(& (mdev->net_conf)->peer_addr),
<                                   (mdev->net_conf)->peer_addr_len, 0);
---
> #line 635
>   err = (*((sock->ops)->connect))(sock, (struct sockaddr *)(& peer_in6), peer_addr_len,
>                                   0);
22479c21914
< #line 690
---
> #line 638
22481c21916
< #line 691
---
> #line 639
22483c21918
< #line 692
---
> #line 640
22485c21920
< #line 693
---
> #line 641
22490c21925
< #line 695
---
> #line 643
22501c21936
< #line 702
---
> #line 650
22503,22504c21938,21939
< #line 703
<     goto ldv_52249;
---
> #line 651
>     goto ldv_52622;
22506,22508c21941,21942
< #line 705
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "%s failed, err = %d\n",
<             what, err);
---
> #line 653
>     printk("\vd-con %s: %s failed, err = %d\n", tconn->name, what, err);
22510,22511c21944,21945
<     ldv_52249: ;
< #line 707
---
>     ldv_52622: ;
> #line 655
22513c21947
< #line 708
---
> #line 656
22515,22517c21949,21951
< #line 708
<       val.ldv_39979.conn = 1U;
< #line 708
---
> #line 656
>       val.ldv_40604.conn = 1U;
> #line 656
22519,22522c21953,21956
< #line 708
<       mask.ldv_39979.conn = 31U;
< #line 708
<       drbd_force_state(mdev, mask, val);
---
> #line 656
>       mask.ldv_40604.conn = 31U;
> #line 656
>       conn_request_state(tconn, mask, val, CS_HARD);
22529,22531c21963
< #line 710
<   put_net_conf(mdev);
< #line 711
---
> #line 659
22535,22536c21967,21992
< #line 714 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static struct socket *drbd_wait_for_connect(struct drbd_conf *mdev ) 
---
> #line 670 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static void drbd_incoming_connection(struct sock *sk ) 
> { 
>   struct accept_wait_data *ad ;
>   void (*state_change)(struct sock * ) ;
> 
>   {
> #line 672
>   ad = (struct accept_wait_data *)sk->sk_user_data;
> #line 675
>   state_change = ad->original_sk_state_change;
> #line 676
>   if ((unsigned int )((unsigned char )sk->__sk_common.skc_state) == 1U) {
> #line 677
>     complete(& ad->door_bell);
>   } else {
> 
>   }
> #line 678
>   (*state_change)(sk);
> #line 679
>   return;
> }
> }
> #line 681 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int prepare_listen_socket(struct drbd_tconn *tconn , struct accept_wait_data *ad ) 
22538d21993
<   int timeo ;
22540c21995,21998
<   struct socket *s_estab ;
---
>   int sndbuf_size ;
>   int rcvbuf_size ;
>   int my_addr_len ;
>   struct sockaddr_in6 my_addr ;
22541a22000
>   struct net_conf *nc ;
22542a22002,22003
>   struct net_conf *_________p1 ;
>   bool __warned ;
22544c22005,22009
<   u32 tmp___0 ;
---
>   int tmp___0 ;
>   int __min1 ;
>   int __min2 ;
>   size_t __len ;
>   void *__ret ;
22549,22556c22014,22033
< #line 717
<   s_estab = 0;
< #line 720
<   tmp = get_net_conf(mdev);
< #line 720
<   if (tmp == 0) {
< #line 721
<     return (0);
---
> #line 689
>   rcu_read_lock();
> #line 690
>   _________p1 = *((struct net_conf * volatile  *)(& tconn->net_conf));
> #line 690
>   tmp = debug_lockdep_rcu_enabled();
> #line 690
>   if (tmp != 0 && ! __warned) {
> #line 690
>     tmp___0 = rcu_read_lock_held();
> #line 690
>     if (tmp___0 == 0 && 1) {
> #line 690
>       __warned = 1;
> #line 690
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>                              690, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
22560c22037,22065
< #line 723
---
> #line 690
>   nc = _________p1;
> #line 691
>   if ((unsigned long )nc == (unsigned long )((struct net_conf *)0)) {
> #line 692
>     rcu_read_unlock();
> #line 693
>     return (-5);
>   } else {
> 
>   }
> #line 695
>   sndbuf_size = (int )nc->sndbuf_size;
> #line 696
>   rcvbuf_size = (int )nc->rcvbuf_size;
> #line 697
>   rcu_read_unlock();
> #line 699
>   __min1 = tconn->my_addr_len;
> #line 699
>   __min2 = 28;
> #line 699
>   my_addr_len = __min1 < __min2 ? __min1 : __min2;
> #line 700
>   __len = (size_t )my_addr_len;
> #line 700
>   __ret = __builtin_memcpy((void *)(& my_addr), (void const   *)(& tconn->my_addr),
>                            __len);
> #line 702
22562,22565c22067,22070
< #line 724
<   err = sock_create_kern((int )((struct sockaddr *)(& (mdev->net_conf)->my_addr))->sa_family,
<                          1, 6, & s_listen);
< #line 726
---
> #line 703
>   err = sock_create_kern((int )((struct sockaddr *)(& my_addr))->sa_family, 1, 6,
>                          & s_listen);
> #line 705
22567c22072
< #line 727
---
> #line 706
22569c22074
< #line 728
---
> #line 707
22574,22580c22079
< #line 731
<   timeo = (mdev->net_conf)->try_connect_int * 250;
< #line 732
<   tmp___0 = random32();
< #line 732
<   timeo = ((int )tmp___0 & 1 ? timeo / 7 : - timeo / 7) + timeo;
< #line 734
---
> #line 710
22582,22588c22081,22083
< #line 735
<   (s_listen->sk)->sk_rcvtimeo = (long )timeo;
< #line 736
<   (s_listen->sk)->sk_sndtimeo = (long )timeo;
< #line 737
<   drbd_setbufsize(s_listen, (unsigned int )(mdev->net_conf)->sndbuf_size, (unsigned int )(mdev->net_conf)->rcvbuf_size);
< #line 740
---
> #line 711
>   drbd_setbufsize(s_listen, (unsigned int )sndbuf_size, (unsigned int )rcvbuf_size);
> #line 713
22590,22593c22085,22087
< #line 741
<   err = (*((s_listen->ops)->bind))(s_listen, (struct sockaddr *)(& (mdev->net_conf)->my_addr),
<                                    (mdev->net_conf)->my_addr_len);
< #line 744
---
> #line 714
>   err = (*((s_listen->ops)->bind))(s_listen, (struct sockaddr *)(& my_addr), my_addr_len);
> #line 715
22595c22089
< #line 745
---
> #line 716
22600,22601c22094,22118
< #line 747
<   err = drbd_accept(mdev, & what, s_listen, & s_estab);
---
> #line 718
>   ad->s_listen = s_listen;
> #line 719
>   _raw_write_lock_bh(& (s_listen->sk)->sk_callback_lock);
> #line 720
>   ad->original_sk_state_change = (s_listen->sk)->sk_state_change;
> #line 721
>   (s_listen->sk)->sk_state_change = & drbd_incoming_connection;
> #line 722
>   (s_listen->sk)->sk_user_data = (void *)ad;
> #line 723
>   _raw_write_unlock_bh(& (s_listen->sk)->sk_callback_lock);
> #line 725
>   what = "listen";
> #line 726
>   err = (*((s_listen->ops)->listen))(s_listen, 5);
> #line 727
>   if (err < 0) {
> #line 728
>     goto out;
>   } else {
> 
>   }
> #line 730
>   return (0);
22603c22120
< #line 750
---
> #line 732
22605c22122
< #line 751
---
> #line 733
22610c22127
< #line 752
---
> #line 734
22612c22129
< #line 753
---
> #line 735
22614,22617c22131,22133
< #line 754
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "%s failed, err = %d\n",
<               what, err);
< #line 755
---
> #line 736
>       printk("\vd-con %s: %s failed, err = %d\n", tconn->name, what, err);
> #line 737
22619,22621c22135,22137
< #line 755
<       val.ldv_39979.conn = 1U;
< #line 755
---
> #line 737
>       val.ldv_40604.conn = 1U;
> #line 737
22623,22626c22139,22142
< #line 755
<       mask.ldv_39979.conn = 31U;
< #line 755
<       drbd_force_state(mdev, mask, val);
---
> #line 737
>       mask.ldv_40604.conn = 31U;
> #line 737
>       conn_request_state(tconn, mask, val, CS_HARD);
22633,22636c22149,22168
< #line 758
<   put_net_conf(mdev);
< #line 760
<   return (s_estab);
---
> #line 741
>   return (-5);
> }
> }
> #line 744 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static void unregister_state_change(struct sock *sk , struct accept_wait_data *ad ) 
> { 
> 
> 
>   {
> #line 746
>   _raw_write_lock_bh(& sk->sk_callback_lock);
> #line 747
>   sk->sk_state_change = ad->original_sk_state_change;
> #line 748
>   sk->sk_user_data = 0;
> #line 749
>   _raw_write_unlock_bh(& sk->sk_callback_lock);
> #line 750
>   return;
22639,22640c22171,22172
< #line 763 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int drbd_send_fp(struct drbd_conf *mdev , struct socket *sock , enum drbd_packets cmd ) 
---
> #line 752 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static struct socket *drbd_wait_for_connect(struct drbd_tconn *tconn , struct accept_wait_data *ad ) 
22642c22174,22180
<   struct p_header80 *h ;
---
>   int timeo ;
>   int connect_int ;
>   int err ;
>   struct socket *s_estab ;
>   struct net_conf *nc ;
>   struct net_conf *_________p1 ;
>   bool __warned ;
22643a22182,22186
>   int tmp___0 ;
>   u32 tmp___1 ;
>   long tmp___2 ;
>   union drbd_state val ;
>   union drbd_state mask ;
22646,22647c22189,22232
< #line 766
<   h = & mdev->data.sbuf.header.h80;
---
> #line 754
>   err = 0;
> #line 755
>   s_estab = 0;
> #line 758
>   rcu_read_lock();
> #line 759
>   _________p1 = *((struct net_conf * volatile  *)(& tconn->net_conf));
> #line 759
>   tmp = debug_lockdep_rcu_enabled();
> #line 759
>   if (tmp != 0 && ! __warned) {
> #line 759
>     tmp___0 = rcu_read_lock_held();
> #line 759
>     if (tmp___0 == 0 && 1) {
> #line 759
>       __warned = 1;
> #line 759
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>                              759, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 759
>   nc = _________p1;
> #line 760
>   if ((unsigned long )nc == (unsigned long )((struct net_conf *)0)) {
> #line 761
>     rcu_read_unlock();
> #line 762
>     return (0);
>   } else {
> 
>   }
> #line 764
>   connect_int = (int )nc->connect_int;
> #line 765
>   rcu_read_unlock();
> #line 767
>   timeo = connect_int * 250;
22649c22234
<   tmp = _drbd_send_cmd(mdev, sock, cmd, h, 8UL, 0U);
---
>   tmp___1 = random32();
22651c22236,22280
<   return (tmp);
---
>   timeo = ((int )tmp___1 & 1 ? timeo / 7 : - timeo / 7) + timeo;
> #line 770
>   tmp___2 = wait_for_completion_interruptible_timeout(& ad->door_bell, (unsigned long )timeo);
> #line 770
>   err = (int )tmp___2;
> #line 771
>   if (err <= 0) {
> #line 772
>     return (0);
>   } else {
> 
>   }
> #line 774
>   err = kernel_accept(ad->s_listen, & s_estab, 0);
> #line 775
>   if (err < 0) {
> #line 776
>     if ((err != -11 && err != -4) && err != -512) {
> #line 777
>       printk("\vd-con %s: accept failed, err = %d\n", tconn->name, err);
> #line 778
>       val.i = 0U;
> #line 778
>       val.ldv_40604.conn = 1U;
> #line 778
>       mask.i = 0U;
> #line 778
>       mask.ldv_40604.conn = 31U;
> #line 778
>       conn_request_state(tconn, mask, val, CS_HARD);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 782
>   if ((unsigned long )s_estab != (unsigned long )((struct socket *)0)) {
> #line 783
>     unregister_state_change(s_estab->sk, ad);
>   } else {
> 
>   }
> #line 785
>   return (s_estab);
22654,22655c22283,22287
< #line 771 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static enum drbd_packets drbd_recv_fp(struct drbd_conf *mdev , struct socket *sock ) 
---
> #line 788
> static int decode_header(struct drbd_tconn *tconn , void *header , struct packet_info *pi ) ;
> #line 790 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int send_first_packet(struct drbd_tconn *tconn , struct drbd_socket *sock ,
>                              enum drbd_packet cmd ) 
22657,22659c22289,22290
<   struct p_header80 *h ;
<   int rr ;
<   __u16 tmp ;
---
>   void *tmp ;
>   int tmp___0 ;
22662,22671c22293,22298
< #line 773
<   h = & mdev->data.rbuf.header.h80;
< #line 776
<   rr = drbd_recv_short(mdev, sock, (void *)h, 8UL, 0);
< #line 778
<   if (rr == 8 && h->magic == 1728214147U) {
< #line 779
<     tmp = __fswab16((int )h->command);
< #line 779
<     return ((enum drbd_packets )tmp);
---
> #line 793
>   tmp = conn_prepare_command(tconn, sock);
> #line 793
>   if ((unsigned long )tmp == (unsigned long )((void *)0)) {
> #line 794
>     return (-5);
22675,22676c22302,22347
< #line 781
<   return (65535);
---
> #line 795
>   tmp___0 = conn_send_command(tconn, sock, cmd, 0U, 0, 0U);
> #line 795
>   return (tmp___0);
> }
> }
> #line 798 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int receive_first_packet(struct drbd_tconn *tconn , struct socket *sock ) 
> { 
>   unsigned int header_size ;
>   unsigned int tmp ;
>   struct packet_info pi ;
>   int err ;
> 
>   {
> #line 800
>   tmp = drbd_header_size(tconn);
> #line 800
>   header_size = tmp;
> #line 804
>   err = drbd_recv_short(sock, tconn->data.rbuf, (size_t )header_size, 0);
> #line 805
>   if ((unsigned int )err != header_size) {
> #line 806
>     if (err >= 0) {
> #line 807
>       err = -5;
>     } else {
> 
>     }
> #line 808
>     return (err);
>   } else {
> 
>   }
> #line 810
>   err = decode_header(tconn, tconn->data.rbuf, & pi);
> #line 811
>   if (err != 0) {
> #line 812
>     return (err);
>   } else {
> 
>   }
> #line 813
>   return ((int )pi.cmd);
22679,22680c22350,22351
< #line 789 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int drbd_socket_okay(struct drbd_conf *mdev , struct socket **sock ) 
---
> #line 820 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int drbd_socket_okay(struct socket **sock ) 
22686c22357
< #line 794
---
> #line 825
22688c22359
< #line 795
---
> #line 826
22693,22695c22364,22366
< #line 797
<   rr = drbd_recv_short(mdev, *sock, (void *)(& tb), 4UL, 66);
< #line 799
---
> #line 828
>   rr = drbd_recv_short(*sock, (void *)(& tb), 4UL, 66);
> #line 830
22697c22368
< #line 800
---
> #line 831
22700c22371
< #line 802
---
> #line 833
22702c22373
< #line 803
---
> #line 834
22704c22375
< #line 804
---
> #line 835
22709,22710c22380,22381
< #line 816 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int drbd_connect(struct drbd_conf *mdev ) 
---
> #line 840 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> int drbd_connected(struct drbd_conf *mdev ) 
22712,22715c22383,22433
<   struct socket *s ;
<   struct socket *sock ;
<   struct socket *msock ;
<   int try ;
---
>   int err ;
> 
>   {
> #line 844
>   atomic_set(& mdev->packet_seq, 0);
> #line 845
>   mdev->peer_seq = 0U;
> #line 847
>   mdev->state_mutex = (mdev->tconn)->agreed_pro_version <= 99 ? & (mdev->tconn)->cstate_mutex : & mdev->own_state_mutex;
> #line 851
>   err = drbd_send_sync_param(mdev);
> #line 852
>   if (err == 0) {
> #line 853
>     err = drbd_send_sizes(mdev, 0, 0);
>   } else {
> 
>   }
> #line 854
>   if (err == 0) {
> #line 855
>     err = drbd_send_uuids(mdev);
>   } else {
> 
>   }
> #line 856
>   if (err == 0) {
> #line 857
>     err = drbd_send_current_state(mdev);
>   } else {
> 
>   }
> #line 858
>   clear_bit(2, (unsigned long volatile   *)(& mdev->flags));
> #line 859
>   clear_bit(16, (unsigned long volatile   *)(& mdev->flags));
> #line 860
>   mod_timer(& mdev->request_timer, (unsigned long )jiffies + 250UL);
> #line 861
>   return (err);
> }
> }
> #line 872 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int conn_connect(struct drbd_tconn *tconn ) 
> { 
>   struct drbd_socket sock ;
>   struct drbd_socket msock ;
>   struct drbd_conf *mdev ;
>   struct net_conf *nc ;
>   int vnr ;
>   int timeout ;
22717a22436
>   bool discard_my_data ;
22718a22438
>   struct accept_wait_data ad ;
22721c22441,22443
<   int tmp ;
---
>   enum drbd_state_rv tmp ;
>   struct lock_class_key __key ;
>   struct lock_class_key __key___0 ;
22723,22730c22445,22456
<   enum drbd_packets tmp___1 ;
<   u32 tmp___2 ;
<   struct task_struct *tmp___3 ;
<   enum drbd_thread_state tmp___4 ;
<   struct task_struct *tmp___5 ;
<   int tmp___6 ;
<   int tmp___7 ;
<   long tmp___8 ;
---
>   struct socket *s ;
>   struct net_conf *_________p1 ;
>   bool __warned ;
>   int tmp___1 ;
>   int tmp___2 ;
>   int tmp___3 ;
>   int fp ;
>   int tmp___4 ;
>   u32 tmp___5 ;
>   struct task_struct *tmp___6 ;
>   enum drbd_thread_state tmp___7 ;
>   struct task_struct *tmp___8 ;
22733c22459,22469
<   union drbd_state __ns ;
---
>   struct net_conf *_________p1___0 ;
>   bool __warned___0 ;
>   int tmp___11 ;
>   int tmp___12 ;
>   long tmp___13 ;
>   int tmp___14 ;
>   int tmp___15 ;
>   void *tmp___16 ;
>   void *tmp___17 ;
>   union drbd_state val___0 ;
>   union drbd_state mask___0 ;
22736,22747c22472,22484
< #line 822
<   if ((unsigned long )mdev->data.socket != (unsigned long )((struct socket *)0)) {
< #line 822
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( !mdev->data.socket ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             822);
<   } else {
< 
<   }
< #line 824
<   drbd_clear_flag(mdev, DISCONNECT_SENT);
< #line 825
---
> #line 882
>   init_completion(& ad.door_bell);
> #line 882
>   ad.tconn = tconn;
> #line 882
>   ad.s_listen = 0;
> #line 882
>   ad.door_bell = ad.door_bell;
> #line 882
>   ad.original_sk_state_change = 0;
> #line 885
>   clear_bit(12, (unsigned long volatile   *)(& tconn->flags));
> #line 886
22749,22751c22486,22488
< #line 825
<   val.ldv_39979.conn = 8U;
< #line 825
---
> #line 886
>   val.ldv_40604.conn = 8U;
> #line 886
22753,22759c22490,22496
< #line 825
<   mask.ldv_39979.conn = 31U;
< #line 825
<   tmp = drbd_request_state(mdev, mask, val);
< #line 825
<   if (tmp <= 0) {
< #line 826
---
> #line 886
>   mask.ldv_40604.conn = 31U;
> #line 886
>   tmp = conn_request_state(tconn, mask, val, CS_VERBOSE);
> #line 886
>   if ((int )tmp <= 0) {
> #line 887
22764,22777c22501,22524
< #line 828
<   sock = 0;
< #line 829
<   msock = 0;
<   ldv_52309: 
< #line 832
<   try = 0;
<   ldv_52301: 
< #line 834
<   s = drbd_try_connect(mdev);
< #line 835
<   if ((unsigned long )s != (unsigned long )((struct socket *)0)) {
< #line 836
<     goto ldv_52300;
---
> #line 889
>   __mutex_init(& sock.mutex, "&sock.mutex", & __key);
> #line 890
>   sock.sbuf = tconn->data.sbuf;
> #line 891
>   sock.rbuf = tconn->data.rbuf;
> #line 892
>   sock.socket = 0;
> #line 893
>   __mutex_init(& msock.mutex, "&msock.mutex", & __key___0);
> #line 894
>   msock.sbuf = tconn->meta.sbuf;
> #line 895
>   msock.rbuf = tconn->meta.rbuf;
> #line 896
>   msock.socket = 0;
> #line 899
>   tconn->agreed_pro_version = 80;
> #line 901
>   tmp___0 = prepare_listen_socket(tconn, & ad);
> #line 901
>   if (tmp___0 != 0) {
> #line 902
>     return (0);
22779,22785d22525
< #line 835
<     try = try + 1;
< #line 835
<     if (try > 2) {
< #line 836
<       goto ldv_52300;
<     } else {
22787d22526
<     }
22789,22794c22528,22531
< #line 838
<   schedule_timeout_interruptible(25L);
< #line 839
<   goto ldv_52301;
<   ldv_52300: ;
< #line 841
---
>   ldv_52745: 
> #line 907
>   s = drbd_try_connect(tconn);
> #line 908
22796,22803c22533,22538
< #line 842
<     if ((unsigned long )sock == (unsigned long )((struct socket *)0)) {
< #line 843
<       drbd_send_fp(mdev, s, P_HAND_SHAKE_S);
< #line 844
<       sock = s;
< #line 845
<       s = 0;
---
> #line 909
>     if ((unsigned long )sock.socket == (unsigned long )((struct socket *)0)) {
> #line 910
>       sock.socket = s;
> #line 911
>       send_first_packet(tconn, & sock, P_INITIAL_DATA);
22805,22814c22540,22547
< #line 846
<     if ((unsigned long )msock == (unsigned long )((struct socket *)0)) {
< #line 847
<       drbd_clear_flag(mdev, DISCARD_CONCURRENT);
< #line 848
<       drbd_send_fp(mdev, s, P_HAND_SHAKE_M);
< #line 849
<       msock = s;
< #line 850
<       s = 0;
---
> #line 912
>     if ((unsigned long )msock.socket == (unsigned long )((struct socket *)0)) {
> #line 913
>       clear_bit(1, (unsigned long volatile   *)(& tconn->flags));
> #line 914
>       msock.socket = s;
> #line 915
>       send_first_packet(tconn, & msock, P_INITIAL_META);
22816,22818c22549,22551
< #line 852
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Logic error in drbd_connect()\n");
< #line 853
---
> #line 917
>       printk("\vd-con %s: Logic error in conn_connect()\n", tconn->name);
> #line 918
22824,22834c22557,22596
< #line 857
<   if ((unsigned long )sock != (unsigned long )((struct socket *)0) && (unsigned long )msock != (unsigned long )((struct socket *)0)) {
< #line 858
<     schedule_timeout_interruptible((long )(((mdev->net_conf)->ping_timeo * 250) / 10));
< #line 859
<     ok = drbd_socket_okay(mdev, & sock);
< #line 860
<     tmp___0 = drbd_socket_okay(mdev, & msock);
< #line 860
<     ok = tmp___0 != 0 && ok != 0;
< #line 861
---
> #line 922
>   if ((unsigned long )sock.socket != (unsigned long )((struct socket *)0) && (unsigned long )msock.socket != (unsigned long )((struct socket *)0)) {
> #line 923
>     rcu_read_lock();
> #line 924
>     _________p1 = *((struct net_conf * volatile  *)(& tconn->net_conf));
> #line 924
>     tmp___1 = debug_lockdep_rcu_enabled();
> #line 924
>     if (tmp___1 != 0 && ! __warned) {
> #line 924
>       tmp___2 = rcu_read_lock_held();
> #line 924
>       if (tmp___2 == 0 && 1) {
> #line 924
>         __warned = 1;
> #line 924
>         lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>                                924, "suspicious rcu_dereference_check() usage");
>       } else {
> 
>       }
>     } else {
> 
>     }
> #line 924
>     nc = _________p1;
> #line 925
>     timeout = (int )((nc->ping_timeo * 250U) / 10U);
> #line 926
>     rcu_read_unlock();
> #line 927
>     schedule_timeout_interruptible((long )timeout);
> #line 928
>     ok = drbd_socket_okay(& sock.socket);
> #line 929
>     tmp___3 = drbd_socket_okay(& msock.socket);
> #line 929
>     ok = tmp___3 != 0 && ok != 0;
> #line 930
22836,22837c22598,22599
< #line 862
<       goto ldv_52303;
---
> #line 931
>       goto ldv_52737;
22845,22847c22607,22609
< #line 866
<   s = drbd_wait_for_connect(mdev);
< #line 867
---
> #line 935
>   s = drbd_wait_for_connect(tconn, & ad);
> #line 936
22849,22858c22611,22620
< #line 868
<     tmp___1 = drbd_recv_fp(mdev, s);
< #line 868
<     try = (int )tmp___1;
< #line 869
<     drbd_socket_okay(mdev, & sock);
< #line 870
<     drbd_socket_okay(mdev, & msock);
< #line 871
<     switch (try) {
---
> #line 937
>     tmp___4 = receive_first_packet(tconn, s);
> #line 937
>     fp = tmp___4;
> #line 938
>     drbd_socket_okay(& sock.socket);
> #line 939
>     drbd_socket_okay(& msock.socket);
> #line 940
>     switch (fp) {
22860,22865c22622,22631
< #line 873
<     if ((unsigned long )sock != (unsigned long )((struct socket *)0)) {
< #line 874
<       dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "initial packet S crossed\n");
< #line 875
<       sock_release(sock);
---
> #line 942
>     if ((unsigned long )sock.socket != (unsigned long )((struct socket *)0)) {
> #line 943
>       printk("\fd-con %s: initial packet S crossed\n", tconn->name);
> #line 944
>       sock_release(sock.socket);
> #line 945
>       sock.socket = s;
> #line 946
>       goto randomize;
22869,22879c22635,22651
< #line 877
<     sock = s;
< #line 878
<     goto ldv_52306;
<     case 65521: ;
< #line 880
<     if ((unsigned long )msock != (unsigned long )((struct socket *)0)) {
< #line 881
<       dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "initial packet M crossed\n");
< #line 882
<       sock_release(msock);
---
> #line 948
>     sock.socket = s;
> #line 949
>     goto ldv_52742;
>     case 65521: 
> #line 951
>     set_bit(1U, (unsigned long volatile   *)(& tconn->flags));
> #line 952
>     if ((unsigned long )msock.socket != (unsigned long )((struct socket *)0)) {
> #line 953
>       printk("\fd-con %s: initial packet M crossed\n", tconn->name);
> #line 954
>       sock_release(msock.socket);
> #line 955
>       msock.socket = s;
> #line 956
>       goto randomize;
22883,22888c22655,22658
< #line 884
<     msock = s;
< #line 885
<     drbd_set_flag(mdev, DISCARD_CONCURRENT);
< #line 886
<     goto ldv_52306;
---
> #line 958
>     msock.socket = s;
> #line 959
>     goto ldv_52742;
22890,22892c22660,22662
< #line 888
<     dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Error receiving initial packet\n");
< #line 889
---
> #line 961
>     printk("\fd-con %s: Error receiving initial packet\n", tconn->name);
> #line 962
22894,22898c22664,22669
< #line 890
<     tmp___2 = random32();
< #line 890
<     if ((int )tmp___2 & 1) {
< #line 891
---
>     randomize: 
> #line 964
>     tmp___5 = random32();
> #line 964
>     if ((int )tmp___5 & 1) {
> #line 965
22904c22675
<     ldv_52306: ;
---
>     ldv_52742: ;
22908,22910c22679,22681
< #line 895
<   if ((int )mdev->state.ldv_39979.conn <= 1) {
< #line 896
---
> #line 969
>   if ((unsigned int )tconn->cstate <= 1U) {
> #line 970
22915,22925c22686,22696
< #line 897
<   tmp___5 = get_current();
< #line 897
<   tmp___6 = signal_pending(tmp___5);
< #line 897
<   if (tmp___6 != 0) {
< #line 898
<     tmp___3 = get_current();
< #line 898
<     flush_signals(tmp___3);
< #line 899
---
> #line 971
>   tmp___8 = get_current();
> #line 971
>   tmp___9 = signal_pending(tmp___8);
> #line 971
>   if (tmp___9 != 0) {
> #line 972
>     tmp___6 = get_current();
> #line 972
>     flush_signals(tmp___6);
> #line 973
22927,22931c22698,22702
< #line 900
<     tmp___4 = get_t_state(& mdev->receiver);
< #line 900
<     if ((unsigned int )tmp___4 == 2U) {
< #line 901
---
> #line 974
>     tmp___7 = get_t_state(& tconn->receiver);
> #line 974
>     if ((unsigned int )tmp___7 == 2U) {
> #line 975
22939,22951c22710,22720
< #line 904
<   if ((unsigned long )sock != (unsigned long )((struct socket *)0) && (unsigned long )msock != (unsigned long )((struct socket *)0)) {
< #line 905
<     ok = drbd_socket_okay(mdev, & sock);
< #line 906
<     tmp___7 = drbd_socket_okay(mdev, & msock);
< #line 906
<     ok = tmp___7 != 0 && ok != 0;
< #line 907
<     if (ok != 0) {
< #line 908
<       goto ldv_52303;
<     } else {
---
> #line 978
>   ok = drbd_socket_okay(& sock.socket);
> #line 979
>   tmp___10 = drbd_socket_okay(& msock.socket);
> #line 979
>   ok = tmp___10 != 0 && ok != 0;
> #line 980
>   if (ok == 0) {
> #line 981
>     goto ldv_52745;
>   } else {
22953c22722,22727
<     }
---
>   }
>   ldv_52737: ;
> #line 982
>   if ((unsigned long )ad.s_listen != (unsigned long )((struct socket *)0)) {
> #line 983
>     sock_release(ad.s_listen);
22957,22997c22731,22762
< #line 910
<   goto ldv_52309;
<   ldv_52303: 
< #line 912
<   (msock->sk)->__sk_common.skc_reuse = 1U;
< #line 913
<   (sock->sk)->__sk_common.skc_reuse = 1U;
< #line 915
<   (sock->sk)->sk_allocation = 16U;
< #line 916
<   (msock->sk)->sk_allocation = 16U;
< #line 918
<   (sock->sk)->sk_priority = 4U;
< #line 919
<   (msock->sk)->sk_priority = 6U;
< #line 926
<   tmp___8 = (long )(((mdev->net_conf)->ping_timeo * 1000) / 10);
< #line 926
<   (sock->sk)->sk_rcvtimeo = tmp___8;
< #line 926
<   (sock->sk)->sk_sndtimeo = tmp___8;
< #line 929
<   (msock->sk)->sk_sndtimeo = (long )(((mdev->net_conf)->timeout * 250) / 10);
< #line 930
<   (msock->sk)->sk_rcvtimeo = (long )((mdev->net_conf)->ping_int * 250);
< #line 934
<   drbd_tcp_nodelay(sock);
< #line 935
<   drbd_tcp_nodelay(msock);
< #line 937
<   mdev->data.socket = sock;
< #line 938
<   mdev->meta.socket = msock;
< #line 939
<   mdev->last_received = jiffies;
< #line 941
<   if ((unsigned long )mdev->asender.task != (unsigned long )((struct task_struct *)0)) {
< #line 941
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mdev->asender.task == NULL ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             941);
---
> #line 985
>   ((sock.socket)->sk)->__sk_common.skc_reuse = 1U;
> #line 986
>   ((msock.socket)->sk)->__sk_common.skc_reuse = 1U;
> #line 988
>   ((sock.socket)->sk)->sk_allocation = 16U;
> #line 989
>   ((msock.socket)->sk)->sk_allocation = 16U;
> #line 991
>   ((sock.socket)->sk)->sk_priority = 4U;
> #line 992
>   ((msock.socket)->sk)->sk_priority = 6U;
> #line 999
>   rcu_read_lock();
> #line 1000
>   _________p1___0 = *((struct net_conf * volatile  *)(& tconn->net_conf));
> #line 1000
>   tmp___11 = debug_lockdep_rcu_enabled();
> #line 1000
>   if (tmp___11 != 0 && ! __warned___0) {
> #line 1000
>     tmp___12 = rcu_read_lock_held();
> #line 1000
>     if (tmp___12 == 0 && 1) {
> #line 1000
>       __warned___0 = 1;
> #line 1000
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>                              1000, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
23001,23003c22766,22796
< #line 943
<   h = drbd_do_handshake(mdev);
< #line 944
---
> #line 1000
>   nc = _________p1___0;
> #line 1002
>   tmp___13 = (long )((nc->ping_timeo * 1000U) / 10U);
> #line 1002
>   ((sock.socket)->sk)->sk_rcvtimeo = tmp___13;
> #line 1002
>   ((sock.socket)->sk)->sk_sndtimeo = tmp___13;
> #line 1005
>   ((msock.socket)->sk)->sk_rcvtimeo = (long )(nc->ping_int * 250U);
> #line 1006
>   timeout = (int )((nc->timeout * 250U) / 10U);
> #line 1007
>   discard_my_data = (int )((signed char )nc->discard_my_data) != 0;
> #line 1008
>   rcu_read_unlock();
> #line 1010
>   ((msock.socket)->sk)->sk_sndtimeo = (long )timeout;
> #line 1014
>   drbd_tcp_nodelay(sock.socket);
> #line 1015
>   drbd_tcp_nodelay(msock.socket);
> #line 1017
>   tconn->data.socket = sock.socket;
> #line 1018
>   tconn->meta.socket = msock.socket;
> #line 1019
>   tconn->last_received = jiffies;
> #line 1021
>   h = drbd_do_features(tconn);
> #line 1022
23005c22798
< #line 945
---
> #line 1023
23010,23015c22803,22808
< #line 947
<   if ((unsigned long )mdev->cram_hmac_tfm != (unsigned long )((struct crypto_hash *)0)) {
< #line 949
<     tmp___9 = drbd_do_auth(mdev);
< #line 949
<     switch (tmp___9) {
---
> #line 1025
>   if ((unsigned long )tconn->cram_hmac_tfm != (unsigned long )((struct crypto_hash *)0)) {
> #line 1027
>     tmp___14 = drbd_do_auth(tconn);
> #line 1027
>     switch (tmp___14) {
23017,23019c22810,22812
< #line 951
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Authentication of peer failed\n");
< #line 952
---
> #line 1029
>     printk("\vd-con %s: Authentication of peer failed\n", tconn->name);
> #line 1030
23022,23024c22815,22817
< #line 954
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Authentication of peer failed, trying again.\n");
< #line 955
---
> #line 1032
>     printk("\vd-con %s: Authentication of peer failed, trying again.\n", tconn->name);
> #line 1033
23030,23042c22823,22831
< #line 959
<   (sock->sk)->sk_sndtimeo = (long )(((mdev->net_conf)->timeout * 250) / 10);
< #line 960
<   (sock->sk)->sk_rcvtimeo = 9223372036854775807L;
< #line 962
<   atomic_set(& mdev->packet_seq, 0);
< #line 963
<   mdev->peer_seq = 0U;
< #line 965
<   tmp___10 = drbd_send_protocol(mdev);
< #line 965
<   if (tmp___10 == -1) {
< #line 966
---
> #line 1037
>   ((tconn->data.socket)->sk)->sk_sndtimeo = (long )timeout;
> #line 1038
>   ((tconn->data.socket)->sk)->sk_rcvtimeo = 9223372036854775807L;
> #line 1040
>   tmp___15 = drbd_send_protocol(tconn);
> #line 1040
>   if (tmp___15 == -95) {
> #line 1041
23047,23072c22836,22877
< #line 967
<   drbd_set_flag(mdev, STATE_SENT);
< #line 968
<   drbd_send_sync_param(mdev, & mdev->sync_conf);
< #line 969
<   drbd_send_sizes(mdev, 0, 0);
< #line 970
<   drbd_send_uuids(mdev);
< #line 971
<   drbd_send_current_state(mdev);
< #line 972
<   drbd_clear_flag(mdev, USE_DEGR_WFC_T);
< #line 973
<   drbd_clear_flag(mdev, RESIZE_PENDING);
< #line 975
<   spin_lock_irq(& mdev->req_lock);
< #line 976
<   __ns.i = mdev->state.i;
< #line 976
<   __ns.ldv_39979.conn = 9U;
< #line 976
<   rv = _drbd_set_state(mdev, __ns, CS_VERBOSE, 0);
< #line 977
<   if ((unsigned int )*((unsigned short *)mdev + 1138UL) != 144U) {
< #line 978
<     drbd_clear_flag(mdev, STATE_SENT);
---
> #line 1043
>   set_bit(10U, (unsigned long volatile   *)(& tconn->flags));
> #line 1045
>   rcu_read_lock();
> #line 1046
>   vnr = 0;
> #line 1046
>   tmp___16 = idr_get_next(& tconn->volumes, & vnr);
> #line 1046
>   mdev = (struct drbd_conf *)tmp___16;
> #line 1046
>   goto ldv_52752;
>   ldv_52751: 
> #line 1047
>   kref_get(& mdev->kref);
> #line 1048
>   rcu_read_unlock();
> #line 1050
>   if ((int )discard_my_data) {
> #line 1051
>     set_bit(21U, (unsigned long volatile   *)(& mdev->flags));
>   } else {
> #line 1053
>     clear_bit(21, (unsigned long volatile   *)(& mdev->flags));
>   }
> #line 1055
>   drbd_connected(mdev);
> #line 1056
>   kref_put(& mdev->kref, & drbd_minor_destroy);
> #line 1057
>   rcu_read_lock();
> #line 1046
>   vnr = vnr + 1;
> #line 1046
>   tmp___17 = idr_get_next(& tconn->volumes, & vnr);
> #line 1046
>   mdev = (struct drbd_conf *)tmp___17;
>   ldv_52752: ;
> #line 1046
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 1047
>     goto ldv_52751;
23076,23080c22881,22897
< #line 979
<   spin_unlock_irq(& mdev->req_lock);
< #line 981
<   if ((int )rv <= 0) {
< #line 982
---
> #line 1059
>   rcu_read_unlock();
> #line 1061
>   val___0.i = 0U;
> #line 1061
>   val___0.ldv_40604.conn = 9U;
> #line 1061
>   mask___0.i = 0U;
> #line 1061
>   mask___0.ldv_40604.conn = 31U;
> #line 1061
>   rv = conn_request_state(tconn, mask___0, val___0, CS_VERBOSE);
> #line 1062
>   if ((int )rv <= 0 || (unsigned int )tconn->cstate != 9U) {
> #line 1063
>     clear_bit(10, (unsigned long volatile   *)(& tconn->flags));
> #line 1064
23085,23090c22902,22911
< #line 984
<   drbd_thread_start(& mdev->asender);
< #line 985
<   mod_timer(& mdev->request_timer, (unsigned long )jiffies + 250UL);
< #line 987
<   return (1);
---
> #line 1067
>   drbd_thread_start(& tconn->asender);
> #line 1069
>   mutex_lock_nested(& tconn->conf_update, 0U);
> #line 1074
>   (tconn->net_conf)->discard_my_data = 0;
> #line 1075
>   mutex_unlock(& tconn->conf_update);
> #line 1077
>   return (h);
23092,23095c22913,22916
< #line 990
<   if ((unsigned long )sock != (unsigned long )((struct socket *)0)) {
< #line 991
<     sock_release(sock);
---
> #line 1080
>   if ((unsigned long )ad.s_listen != (unsigned long )((struct socket *)0)) {
> #line 1081
>     sock_release(ad.s_listen);
23099,23102c22920,22923
< #line 992
<   if ((unsigned long )msock != (unsigned long )((struct socket *)0)) {
< #line 993
<     sock_release(msock);
---
> #line 1082
>   if ((unsigned long )sock.socket != (unsigned long )((struct socket *)0)) {
> #line 1083
>     sock_release(sock.socket);
23106c22927,22934
< #line 994
---
> #line 1084
>   if ((unsigned long )msock.socket != (unsigned long )((struct socket *)0)) {
> #line 1085
>     sock_release(msock.socket);
>   } else {
> 
>   }
> #line 1086
23110,23111c22938,22939
< #line 997 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int drbd_recv_header(struct drbd_conf *mdev , enum drbd_packets *cmd , unsigned int *packet_size ) 
---
> #line 1089 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int decode_header(struct drbd_tconn *tconn , void *header , struct packet_info *pi ) 
23113,23118c22941,22947
<   union p_header *h ;
<   int r ;
<   struct task_struct *tmp ;
<   int tmp___0 ;
<   long tmp___1 ;
<   __u16 tmp___2 ;
---
>   unsigned int header_size ;
>   unsigned int tmp ;
>   struct p_header100 *h ;
>   __u16 tmp___0 ;
>   __u16 tmp___1 ;
>   __u32 tmp___2 ;
>   struct p_header95 *h___0 ;
23120,23121c22949,22951
<   __u16 tmp___4 ;
<   __u32 tmp___5 ;
---
>   __u32 tmp___4 ;
>   struct p_header80 *h___1 ;
>   __u16 tmp___5 ;
23123,23125c22953
<   __u16 tmp___7 ;
<   __u32 tmp___8 ;
<   long tmp___9 ;
---
>   __u32 tmp___7 ;
23128,23144c22956,22969
< #line 999
<   h = & mdev->data.rbuf.header;
< #line 1002
<   r = drbd_recv(mdev, (void *)h, 8UL);
< #line 1003
<   tmp___1 = __builtin_expect(r != 8, 0L);
< #line 1003
<   if (tmp___1 != 0L) {
< #line 1004
<     tmp = get_current();
< #line 1004
<     tmp___0 = signal_pending(tmp);
< #line 1004
<     if (tmp___0 == 0) {
< #line 1005
<       dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "short read expecting header on sock: r=%d\n",
<                r);
---
> #line 1091
>   tmp = drbd_header_size(tconn);
> #line 1091
>   header_size = tmp;
> #line 1093
>   if (header_size == 16U && *((__be32 *)header) == 552345734U) {
> #line 1095
>     h = (struct p_header100 *)header;
> #line 1096
>     if (h->pad != 0U) {
> #line 1097
>       printk("\vd-con %s: Header padding is not zero\n", tconn->name);
> #line 1098
>       return (-22);
23148,23149c22973,23014
< #line 1006
<     return (0);
---
> #line 1100
>     tmp___0 = __fswab16((int )h->volume);
> #line 1100
>     pi->vnr = (unsigned int )tmp___0;
> #line 1101
>     tmp___1 = __fswab16((int )h->command);
> #line 1101
>     pi->cmd = (enum drbd_packet )tmp___1;
> #line 1102
>     tmp___2 = __fswab32(h->length);
> #line 1102
>     pi->size = tmp___2;
>   } else
> #line 1103
>   if (header_size == 8U && (unsigned int )*((__be16 *)header) == 23171U) {
> #line 1105
>     h___0 = (struct p_header95 *)header;
> #line 1106
>     tmp___3 = __fswab16((int )h___0->command);
> #line 1106
>     pi->cmd = (enum drbd_packet )tmp___3;
> #line 1107
>     tmp___4 = __fswab32(h___0->length);
> #line 1107
>     pi->size = tmp___4;
> #line 1108
>     pi->vnr = 0U;
>   } else
> #line 1109
>   if (header_size == 8U && *((__be32 *)header) == 1728214147U) {
> #line 1111
>     h___1 = (struct p_header80 *)header;
> #line 1112
>     tmp___5 = __fswab16((int )h___1->command);
> #line 1112
>     pi->cmd = (enum drbd_packet )tmp___5;
> #line 1113
>     tmp___6 = __fswab16((int )h___1->length);
> #line 1113
>     pi->size = (unsigned int )tmp___6;
> #line 1114
>     pi->vnr = 0U;
23151c23016,23022
< 
---
> #line 1116
>     tmp___7 = __fswab32(*((__be32 *)header));
> #line 1116
>     printk("\vd-con %s: Wrong magic value 0x%08x in protocol version %d\n", tconn->name,
>            tmp___7, tconn->agreed_pro_version);
> #line 1119
>     return (-22);
23153,23175c23024,23047
< #line 1009
<   tmp___9 = __builtin_expect(h->h80.magic == 1728214147U, 1L);
< #line 1009
<   if (tmp___9 != 0L) {
< #line 1010
<     tmp___2 = __fswab16((int )h->h80.command);
< #line 1010
<     *cmd = (enum drbd_packets )tmp___2;
< #line 1011
<     tmp___3 = __fswab16((int )h->h80.length);
< #line 1011
<     *packet_size = (unsigned int )tmp___3;
<   } else
< #line 1012
<   if ((unsigned int )h->h95.magic == 23171U) {
< #line 1013
<     tmp___4 = __fswab16((int )h->h95.command);
< #line 1013
<     *cmd = (enum drbd_packets )tmp___4;
< #line 1014
<     tmp___5 = __fswab32(h->h95.length);
< #line 1014
<     *packet_size = tmp___5;
---
> #line 1121
>   pi->data = header + (unsigned long )header_size;
> #line 1122
>   return (0);
> }
> }
> #line 1125 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int drbd_recv_header(struct drbd_tconn *tconn , struct packet_info *pi ) 
> { 
>   void *buffer ;
>   int err ;
>   unsigned int tmp ;
> 
>   {
> #line 1127
>   buffer = tconn->data.rbuf;
> #line 1130
>   tmp = drbd_header_size(tconn);
> #line 1130
>   err = drbd_recv_all_warn(tconn, buffer, (size_t )tmp);
> #line 1131
>   if (err != 0) {
> #line 1132
>     return (err);
23177,23187c23049
< #line 1016
<     tmp___6 = __fswab16((int )h->h80.length);
< #line 1016
<     tmp___7 = __fswab16((int )h->h80.command);
< #line 1016
<     tmp___8 = __fswab32(h->h80.magic);
< #line 1016
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "magic?? on data m: 0x%08x c: %d l: %d\n",
<             tmp___8, (int )tmp___7, (int )tmp___6);
< #line 1020
<     return (0);
---
> 
23189,23192c23051,23056
< #line 1022
<   mdev->last_received = jiffies;
< #line 1024
<   return (1);
---
> #line 1134
>   err = decode_header(tconn, buffer, pi);
> #line 1135
>   tconn->last_received = jiffies;
> #line 1137
>   return (err);
23195,23196c23059,23060
< #line 1027 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static void drbd_flush(struct drbd_conf *mdev ) 
---
> #line 1140 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static void drbd_flush(struct drbd_tconn *tconn ) 
23199c23063,23067
<   int tmp ;
---
>   struct drbd_conf *mdev ;
>   int vnr ;
>   void *tmp ;
>   int tmp___0 ;
>   void *tmp___1 ;
23202,23217c23070,23089
< #line 1031
<   if ((unsigned int )mdev->write_ordering > 1U) {
< #line 1031
<     tmp = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 1031
<     if (tmp != 0) {
< #line 1032
<       rv = blkdev_issue_flush((mdev->ldev)->backing_bdev, 16U, 0);
< #line 1034
<       if (rv != 0) {
< #line 1035
<         _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "local disk flush failed with status %d\n",
<                   rv);
< #line 1039
<         drbd_bump_write_ordering(mdev, WO_drain_io);
<       } else {
---
> #line 1146
>   if ((unsigned int )tconn->write_ordering > 1U) {
> #line 1147
>     rcu_read_lock();
> #line 1148
>     vnr = 0;
> #line 1148
>     tmp = idr_get_next(& tconn->volumes, & vnr);
> #line 1148
>     mdev = (struct drbd_conf *)tmp;
> #line 1148
>     goto ldv_52782;
>     ldv_52781: 
> #line 1149
>     tmp___0 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 1149
>     if (tmp___0 == 0) {
> #line 1150
>       goto ldv_52779;
>     } else {
23219,23221c23091,23132
<       }
< #line 1041
<       put_ldev(mdev);
---
>     }
> #line 1151
>     kref_get(& mdev->kref);
> #line 1152
>     rcu_read_unlock();
> #line 1154
>     rv = blkdev_issue_flush((mdev->ldev)->backing_bdev, 16U, 0);
> #line 1156
>     if (rv != 0) {
> #line 1157
>       _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "local disk flush failed with status %d\n",
>                 rv);
> #line 1161
>       drbd_bump_write_ordering(tconn, WO_drain_io);
>     } else {
> 
>     }
> #line 1163
>     put_ldev(mdev);
> #line 1164
>     kref_put(& mdev->kref, & drbd_minor_destroy);
> #line 1166
>     rcu_read_lock();
> #line 1167
>     if (rv != 0) {
> #line 1168
>       goto ldv_52780;
>     } else {
> 
>     }
>     ldv_52779: 
> #line 1148
>     vnr = vnr + 1;
> #line 1148
>     tmp___1 = idr_get_next(& tconn->volumes, & vnr);
> #line 1148
>     mdev = (struct drbd_conf *)tmp___1;
>     ldv_52782: ;
> #line 1148
>     if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 1149
>       goto ldv_52781;
23224a23136,23138
>     ldv_52780: 
> #line 1170
>     rcu_read_unlock();
23228c23142
< #line 1043
---
> #line 1172
23232,23233c23146,23147
< #line 1051 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static enum finish_epoch drbd_may_finish_epoch(struct drbd_conf *mdev , struct drbd_epoch *epoch ,
---
> #line 1180 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static enum finish_epoch drbd_may_finish_epoch(struct drbd_tconn *tconn , struct drbd_epoch *epoch ,
23238a23153
>   struct list_head  const  *__mptr ;
23241,23244d23155
<   int tmp___1 ;
<   struct list_head  const  *__mptr ;
<   int tmp___2 ;
<   int tmp___3 ;
23247c23158
< #line 1057
---
> #line 1186
23249,23252c23160,23163
< #line 1059
<   spin_lock(& mdev->epoch_lock);
<   ldv_52344: 
< #line 1061
---
> #line 1188
>   spin_lock(& tconn->epoch_lock);
>   ldv_52798: 
> #line 1190
23254c23165
< #line 1063
---
> #line 1192
23256c23167
< #line 1065
---
> #line 1194
23259c23170
< #line 1067
---
> #line 1196
23261,23262c23172,23173
< #line 1068
<   goto ldv_52334;
---
> #line 1197
>   goto ldv_52792;
23264c23175
< #line 1070
---
> #line 1199
23266,23267c23177,23178
< #line 1071
<   goto ldv_52334;
---
> #line 1200
>   goto ldv_52792;
23269,23270c23180,23181
< #line 1074
<   goto ldv_52334;
---
> #line 1203
>   goto ldv_52792;
23272,23273c23183,23184
<   ldv_52334: ;
< #line 1077
---
>   ldv_52792: ;
> #line 1206
23275,23283c23186,23194
< #line 1077
<     tmp___2 = atomic_read((atomic_t const   *)(& epoch->active));
< #line 1077
<     if (tmp___2 == 0) {
< #line 1077
<       tmp___3 = constant_test_bit(0U, (unsigned long const volatile   *)(& epoch->flags));
< #line 1077
<       if (tmp___3 != 0 || ((unsigned int )ev & 32U) != 0U) {
< #line 1080
---
> #line 1206
>     tmp = atomic_read((atomic_t const   *)(& epoch->active));
> #line 1206
>     if (tmp == 0) {
> #line 1206
>       tmp___0 = constant_test_bit(0U, (unsigned long const volatile   *)(& epoch->flags));
> #line 1206
>       if (tmp___0 != 0 || ((unsigned int )ev & 32U) != 0U) {
> #line 1209
23285,23311c23196,23201
< #line 1081
<           spin_unlock(& mdev->epoch_lock);
< #line 1082
<           drbd_send_b_ack(mdev, epoch->barrier_nr, (u32 )epoch_size);
< #line 1083
<           spin_lock(& mdev->epoch_lock);
<         } else {
< 
<         }
< #line 1085
<         tmp___1 = constant_test_bit(0U, (unsigned long const volatile   *)(& epoch->flags));
< #line 1085
<         if (tmp___1 != 0) {
< #line 1086
<           atomic_dec(& mdev->unacked_cnt);
< #line 1086
<           tmp___0 = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 1086
<           if (tmp___0 < 0) {
< #line 1086
<             tmp = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 1086
<             dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: unacked_cnt = %d < 0 !\n",
<                     "drbd_may_finish_epoch", 1086, tmp);
<           } else {
< 
<           }
---
> #line 1210
>           spin_unlock(& tconn->epoch_lock);
> #line 1211
>           drbd_send_b_ack(epoch->tconn, epoch->barrier_nr, (u32 )epoch_size);
> #line 1212
>           spin_lock(& tconn->epoch_lock);
23315,23317c23205,23207
< #line 1088
<         if ((unsigned long )mdev->current_epoch != (unsigned long )epoch) {
< #line 1089
---
> #line 1221
>         if ((unsigned long )tconn->current_epoch != (unsigned long )epoch) {
> #line 1222
23319,23321c23209,23211
< #line 1089
<           next_epoch = (struct drbd_epoch *)__mptr;
< #line 1090
---
> #line 1222
>           next_epoch = (struct drbd_epoch *)__mptr + 0xfffffffffffffff8UL;
> #line 1223
23323c23213
< #line 1091
---
> #line 1224
23325,23327c23215,23217
< #line 1092
<           mdev->epochs = mdev->epochs - 1U;
< #line 1093
---
> #line 1225
>           tconn->epochs = tconn->epochs - 1U;
> #line 1226
23329c23219
< #line 1095
---
> #line 1228
23331c23221
< #line 1096
---
> #line 1229
23337c23227
< #line 1098
---
> #line 1231
23339c23229
< #line 1099
---
> #line 1232
23341c23231
< #line 1101
---
> #line 1234
23343c23233
< #line 1102
---
> #line 1235
23348,23349d23237
< #line 1103
<           __wake_up(& mdev->ee_wait, 3U, 1, 0);
23360c23248
< #line 1107
---
> #line 1239
23362,23363c23250,23251
< #line 1108
<     goto ldv_52343;
---
> #line 1240
>     goto ldv_52797;
23367c23255
< #line 1110
---
> #line 1242
23369,23374c23257,23262
< #line 1111
<   goto ldv_52344;
<   ldv_52343: 
< #line 1113
<   spin_unlock(& mdev->epoch_lock);
< #line 1115
---
> #line 1243
>   goto ldv_52798;
>   ldv_52797: 
> #line 1245
>   spin_unlock(& tconn->epoch_lock);
> #line 1247
23378,23379c23266,23267
< #line 1123 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< void drbd_bump_write_ordering(struct drbd_conf *mdev , enum write_ordering_e wo ) 
---
> #line 1255 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> void drbd_bump_write_ordering(struct drbd_tconn *tconn , enum write_ordering_e wo ) 
23380a23269,23270
>   struct disk_conf *dc ;
>   struct drbd_conf *mdev ;
23381a23272
>   int vnr ;
23384a23276,23282
>   void *tmp ;
>   int tmp___0 ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp___1 ;
>   int tmp___2 ;
>   void *tmp___3 ;
23387c23285
< #line 1126
---
> #line 1261
23389c23287
< #line 1126
---
> #line 1261
23391c23289
< #line 1126
---
> #line 1261
23393,23395c23291,23293
< #line 1132
<   pwo = mdev->write_ordering;
< #line 1133
---
> #line 1267
>   pwo = tconn->write_ordering;
> #line 1268
23397c23295
< #line 1133
---
> #line 1268
23399c23297
< #line 1133
---
> #line 1268
23401,23403c23299,23344
< #line 1134
<   if ((unsigned int )wo == 2U && (unsigned int )*((unsigned char *)mdev->ldev + 444UL) != 0U) {
< #line 1135
---
> #line 1269
>   rcu_read_lock();
> #line 1270
>   vnr = 0;
> #line 1270
>   tmp = idr_get_next(& tconn->volumes, & vnr);
> #line 1270
>   mdev = (struct drbd_conf *)tmp;
> #line 1270
>   goto ldv_52816;
>   ldv_52815: 
> #line 1271
>   tmp___0 = _get_ldev_if_state(mdev, D_ATTACHING);
> #line 1271
>   if (tmp___0 == 0) {
> #line 1272
>     goto ldv_52811;
>   } else {
> 
>   }
> #line 1273
>   _________p1 = *((struct disk_conf * volatile  *)(& (mdev->ldev)->disk_conf));
> #line 1273
>   tmp___1 = debug_lockdep_rcu_enabled();
> #line 1273
>   if (tmp___1 != 0 && ! __warned) {
> #line 1273
>     tmp___2 = rcu_read_lock_held();
> #line 1273
>     if (tmp___2 == 0 && 1) {
> #line 1273
>       __warned = 1;
> #line 1273
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>                              1273, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1273
>   dc = _________p1;
> #line 1275
>   if ((unsigned int )wo == 2U && (int )((signed char )dc->disk_flushes) == 0) {
> #line 1276
23408,23410c23349,23351
< #line 1136
<   if ((unsigned int )wo == 1U && (unsigned int )*((unsigned char *)mdev->ldev + 452UL) != 0U) {
< #line 1137
---
> #line 1277
>   if ((unsigned int )wo == 1U && (int )((signed char )dc->disk_drain) == 0) {
> #line 1278
23415,23421c23356,23369
< #line 1138
<   mdev->write_ordering = wo;
< #line 1139
<   if ((unsigned int )mdev->write_ordering != (unsigned int )pwo || (unsigned int )wo == 2U) {
< #line 1140
<     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Method to ensure write ordering: %s\n",
<               write_ordering_str[(unsigned int )mdev->write_ordering]);
---
> #line 1279
>   put_ldev(mdev);
>   ldv_52811: 
> #line 1270
>   vnr = vnr + 1;
> #line 1270
>   tmp___3 = idr_get_next(& tconn->volumes, & vnr);
> #line 1270
>   mdev = (struct drbd_conf *)tmp___3;
>   ldv_52816: ;
> #line 1270
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 1271
>     goto ldv_52815;
23425c23373,23384
< #line 1141
---
> #line 1281
>   rcu_read_unlock();
> #line 1282
>   tconn->write_ordering = wo;
> #line 1283
>   if ((unsigned int )tconn->write_ordering != (unsigned int )pwo || (unsigned int )wo == 2U) {
> #line 1284
>     printk("\016d-con %s: Method to ensure write ordering: %s\n", tconn->name, write_ordering_str[(unsigned int )tconn->write_ordering]);
>   } else {
> 
>   }
> #line 1285
23429,23431c23388,23390
< #line 1160 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< int drbd_submit_ee(struct drbd_conf *mdev , struct drbd_epoch_entry *e , unsigned int const   rw ,
<                    int const   fault_type ) 
---
> #line 1304 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> int drbd_submit_peer_request(struct drbd_conf *mdev , struct drbd_peer_request *peer_req ,
>                              unsigned int const   rw , int const   fault_type ) 
23448c23407
< #line 1163
---
> #line 1308
23450,23456c23409,23415
< #line 1165
<   page = e->pages;
< #line 1166
<   sector = e->sector;
< #line 1167
<   ds = e->size;
< #line 1168
---
> #line 1310
>   page = peer_req->pages;
> #line 1311
>   sector = peer_req->i.sector;
> #line 1312
>   ds = peer_req->i.size;
> #line 1313
23458c23417
< #line 1169
---
> #line 1314
23460c23419
< #line 1170
---
> #line 1315
23463c23422
< #line 1181
---
> #line 1326
23465c23424
< #line 1182
---
> #line 1327
23467c23426
< #line 1183
---
> #line 1328
23469c23428
< #line 1184
---
> #line 1329
23474c23433
< #line 1187
---
> #line 1332
23476c23435
< #line 1188
---
> #line 1333
23478c23437
< #line 1189
---
> #line 1334
23480,23484c23439,23443
< #line 1190
<   bio->bi_private = (void *)e;
< #line 1191
<   bio->bi_end_io = & drbd_endio_sec;
< #line 1193
---
> #line 1335
>   bio->bi_private = (void *)peer_req;
> #line 1336
>   bio->bi_end_io = & drbd_peer_request_endio;
> #line 1338
23486c23445
< #line 1194
---
> #line 1339
23488c23447
< #line 1195
---
> #line 1340
23490,23493c23449,23452
< #line 1197
<   goto ldv_52376;
<   ldv_52375: 
< #line 1198
---
> #line 1342
>   goto ldv_52840;
>   ldv_52839: 
> #line 1343
23495c23454
< #line 1198
---
> #line 1343
23497c23456
< #line 1198
---
> #line 1343
23499c23458
< #line 1199
---
> #line 1344
23501c23460
< #line 1199
---
> #line 1344
23503c23462
< #line 1203
---
> #line 1348
23505c23464
< #line 1204
---
> #line 1349
23508c23467
< #line 1208
---
> #line 1353
23510c23469
< #line 1209
---
> #line 1354
23515c23474
< #line 1211
---
> #line 1356
23520c23479
< #line 1213
---
> #line 1358
23522c23481
< #line 1214
---
> #line 1359
23524c23483
< #line 1215
---
> #line 1360
23526c23485
< #line 1197
---
> #line 1342
23528,23529c23487,23488
<   ldv_52376: ;
< #line 1197
---
>   ldv_52840: ;
> #line 1342
23531c23490
< #line 1197
---
> #line 1342
23533c23492
< #line 1197
---
> #line 1342
23535c23494
< #line 1197
---
> #line 1342
23537,23538c23496,23497
< #line 1198
<       goto ldv_52375;
---
> #line 1343
>       goto ldv_52839;
23540,23541c23499,23500
< #line 1200
<       goto ldv_52377;
---
> #line 1345
>       goto ldv_52841;
23546,23547c23505,23506
<   ldv_52377: ;
< #line 1217
---
>   ldv_52841: ;
> #line 1362
23549c23508
< #line 1217
---
> #line 1362
23551,23552c23510,23511
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             1217);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>             1362);
23556c23515
< #line 1218
---
> #line 1363
23558c23517
< #line 1218
---
> #line 1363
23560,23561c23519,23520
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             1218);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>             1363);
23565,23568c23524,23527
< #line 1220
<   atomic_set(& e->pending_bios, (int )n_bios);
<   ldv_52378: 
< #line 1222
---
> #line 1365
>   atomic_set(& peer_req->pending_bios, (int )n_bios);
>   ldv_52842: 
> #line 1367
23570c23529
< #line 1223
---
> #line 1368
23572c23531
< #line 1224
---
> #line 1369
23574c23533
< #line 1226
---
> #line 1371
23576c23535
< #line 1227
---
> #line 1372
23578,23579c23537,23538
< #line 1228
<     goto ldv_52378;
---
> #line 1373
>     goto ldv_52842;
23584c23543
< #line 1228
---
> #line 1373
23587,23590c23546,23549
< #line 1231
<   goto ldv_52381;
<   ldv_52380: 
< #line 1232
---
> #line 1376
>   goto ldv_52845;
>   ldv_52844: 
> #line 1377
23592c23551
< #line 1233
---
> #line 1378
23594c23553
< #line 1234
---
> #line 1379
23596,23597c23555,23556
<   ldv_52381: ;
< #line 1231
---
>   ldv_52845: ;
> #line 1376
23599,23600c23558,23559
< #line 1232
<     goto ldv_52380;
---
> #line 1377
>     goto ldv_52844;
23605c23564
< #line 1236
---
> #line 1381
23609,23610c23568,23642
< #line 1239 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int receive_Barrier(struct drbd_conf *mdev , enum drbd_packets cmd , unsigned int data_size ) 
---
> #line 1384 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static void drbd_remove_epoch_entry_interval(struct drbd_conf *mdev , struct drbd_peer_request *peer_req ) 
> { 
>   struct drbd_interval *i ;
> 
>   {
> #line 1387
>   i = & peer_req->i;
> #line 1389
>   drbd_remove_interval(& mdev->write_requests, i);
> #line 1390
>   drbd_clear_interval(i);
> #line 1393
>   if ((unsigned int )*((unsigned char *)i + 48UL) != 0U) {
> #line 1394
>     __wake_up(& mdev->misc_wait, 3U, 1, 0);
>   } else {
> 
>   }
> #line 1395
>   return;
> }
> }
> #line 1397 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> void conn_wait_active_ee_empty(struct drbd_tconn *tconn ) 
> { 
>   struct drbd_conf *mdev ;
>   int vnr ;
>   void *tmp ;
>   void *tmp___0 ;
> 
>   {
> #line 1402
>   rcu_read_lock();
> #line 1403
>   vnr = 0;
> #line 1403
>   tmp = idr_get_next(& tconn->volumes, & vnr);
> #line 1403
>   mdev = (struct drbd_conf *)tmp;
> #line 1403
>   goto ldv_52858;
>   ldv_52857: 
> #line 1404
>   kref_get(& mdev->kref);
> #line 1405
>   rcu_read_unlock();
> #line 1406
>   drbd_wait_ee_list_empty(mdev, & mdev->active_ee);
> #line 1407
>   kref_put(& mdev->kref, & drbd_minor_destroy);
> #line 1408
>   rcu_read_lock();
> #line 1403
>   vnr = vnr + 1;
> #line 1403
>   tmp___0 = idr_get_next(& tconn->volumes, & vnr);
> #line 1403
>   mdev = (struct drbd_conf *)tmp___0;
>   ldv_52858: ;
> #line 1403
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 1404
>     goto ldv_52857;
>   } else {
> 
>   }
> #line 1410
>   rcu_read_unlock();
> #line 1411
>   return;
> }
> }
> #line 1413 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int receive_Barrier(struct drbd_tconn *tconn , struct packet_info *pi ) 
23620,23624d23651
<   wait_queue_t __wait ;
<   struct task_struct *tmp___4 ;
<   int tmp___5 ;
<   int tmp___6 ;
<   int tmp___7 ;
23627,23635c23654,23662
< #line 1242
<   p = & mdev->data.rbuf.barrier;
< #line 1245
<   inc_unacked(mdev);
< #line 1247
<   (mdev->current_epoch)->barrier_nr = p->barrier;
< #line 1248
<   tmp = drbd_may_finish_epoch(mdev, mdev->current_epoch, EV_GOT_BARRIER_NR);
< #line 1248
---
> #line 1416
>   p = (struct p_barrier *)pi->data;
> #line 1422
>   (tconn->current_epoch)->barrier_nr = p->barrier;
> #line 1423
>   (tconn->current_epoch)->tconn = tconn;
> #line 1424
>   tmp = drbd_may_finish_epoch(tconn, tconn->current_epoch, EV_GOT_BARRIER_NR);
> #line 1424
23637,23638c23664,23665
< #line 1255
<   switch ((unsigned int )mdev->write_ordering) {
---
> #line 1431
>   switch ((unsigned int )tconn->write_ordering) {
23640c23667
< #line 1257
---
> #line 1433
23642,23643c23669,23670
< #line 1258
<     return (1);
---
> #line 1434
>     return (0);
23647,23649c23674,23676
< #line 1262
<   tmp___0 = kmalloc(40UL, 16U);
< #line 1262
---
> #line 1438
>   tmp___0 = kmalloc(48UL, 16U);
> #line 1438
23651c23678
< #line 1263
---
> #line 1439
23653,23654c23680,23681
< #line 1264
<     goto ldv_52392;
---
> #line 1440
>     goto ldv_52868;
23656,23657c23683,23684
< #line 1266
<     dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Allocation of an epoch failed, slowing down\n");
---
> #line 1442
>     printk("\fd-con %s: Allocation of an epoch failed, slowing down\n", tconn->name);
23661,23667c23688,23694
< #line 1271
<   drbd_wait_ee_list_empty(mdev, & mdev->active_ee);
< #line 1272
<   drbd_flush(mdev);
< #line 1274
<   tmp___2 = atomic_read((atomic_t const   *)(& (mdev->current_epoch)->epoch_size));
< #line 1274
---
> #line 1447
>   conn_wait_active_ee_empty(tconn);
> #line 1448
>   drbd_flush(tconn);
> #line 1450
>   tmp___2 = atomic_read((atomic_t const   *)(& (tconn->current_epoch)->epoch_size));
> #line 1450
23669,23671c23696,23698
< #line 1275
<     tmp___1 = kmalloc(40UL, 16U);
< #line 1275
---
> #line 1451
>     tmp___1 = kmalloc(48UL, 16U);
> #line 1451
23673c23700
< #line 1276
---
> #line 1452
23675,23676c23702,23703
< #line 1277
<       goto ldv_52392;
---
> #line 1453
>       goto ldv_52868;
23683,23752c23710
< #line 1280
<   epoch = mdev->current_epoch;
< #line 1281
<   tmp___3 = atomic_read((atomic_t const   *)(& epoch->epoch_size));
< #line 1281
<   if (tmp___3 == 0) {
< #line 1281
<     goto ldv_52395;
<   } else {
< 
<   }
< #line 1281
<   tmp___4 = get_current();
< #line 1281
<   __wait.flags = 0U;
< #line 1281
<   __wait.private = (void *)tmp___4;
< #line 1281
<   __wait.func = & autoremove_wake_function;
< #line 1281
<   __wait.task_list.next = & __wait.task_list;
< #line 1281
<   __wait.task_list.prev = & __wait.task_list;
<   ldv_52398: 
< #line 1281
<   prepare_to_wait(& mdev->ee_wait, & __wait, 2);
< #line 1281
<   tmp___5 = atomic_read((atomic_t const   *)(& epoch->epoch_size));
< #line 1281
<   if (tmp___5 == 0) {
< #line 1281
<     goto ldv_52397;
<   } else {
< 
<   }
< #line 1281
<   schedule();
< #line 1281
<   goto ldv_52398;
<   ldv_52397: 
< #line 1281
<   finish_wait(& mdev->ee_wait, & __wait);
<   ldv_52395: 
< #line 1283
<   tmp___6 = atomic_read((atomic_t const   *)(& epoch->active));
< #line 1283
<   if (tmp___6 != 0) {
< #line 1283
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( atomic_read(&epoch->active) == 0 ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             1283);
<   } else {
< 
<   }
< #line 1284
<   if (epoch->flags != 0UL) {
< #line 1284
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( epoch->flags == 0 ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             1284);
<   } else {
< 
<   }
< #line 1286
<   return (1);
<   default: 
< #line 1288
<   dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Strangeness in mdev->write_ordering %d\n",
<           (unsigned int )mdev->write_ordering);
< #line 1289
---
> #line 1456
23753a23712,23716
>   default: 
> #line 1458
>   printk("\vd-con %s: Strangeness in tconn->write_ordering %d\n", tconn->name, (unsigned int )tconn->write_ordering);
> #line 1459
>   return (-5);
23755,23756c23718,23719
<   ldv_52392: 
< #line 1292
---
>   ldv_52868: 
> #line 1462
23758c23721
< #line 1293
---
> #line 1463
23760c23723
< #line 1294
---
> #line 1464
23762,23773c23725,23736
< #line 1296
<   spin_lock(& mdev->epoch_lock);
< #line 1297
<   tmp___7 = atomic_read((atomic_t const   *)(& (mdev->current_epoch)->epoch_size));
< #line 1297
<   if (tmp___7 != 0) {
< #line 1298
<     list_add(& epoch->list, & (mdev->current_epoch)->list);
< #line 1299
<     mdev->current_epoch = epoch;
< #line 1300
<     mdev->epochs = mdev->epochs + 1U;
---
> #line 1466
>   spin_lock(& tconn->epoch_lock);
> #line 1467
>   tmp___3 = atomic_read((atomic_t const   *)(& (tconn->current_epoch)->epoch_size));
> #line 1467
>   if (tmp___3 != 0) {
> #line 1468
>     list_add(& epoch->list, & (tconn->current_epoch)->list);
> #line 1469
>     tconn->current_epoch = epoch;
> #line 1470
>     tconn->epochs = tconn->epochs + 1U;
23775c23738
< #line 1303
---
> #line 1473
23778,23781c23741,23744
< #line 1305
<   spin_unlock(& mdev->epoch_lock);
< #line 1307
<   return (1);
---
> #line 1475
>   spin_unlock(& tconn->epoch_lock);
> #line 1477
>   return (0);
23784,23786c23747,23749
< #line 1313 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static struct drbd_epoch_entry *read_in_block(struct drbd_conf *mdev , u64 id , sector_t sector ,
<                                               int data_size ) 
---
> #line 1483 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static struct drbd_peer_request *read_in_block(struct drbd_conf *mdev , u64 id , sector_t sector ,
>                                                int data_size ) 
23790c23753
<   struct drbd_epoch_entry *e ;
---
>   struct drbd_peer_request *peer_req ;
23794c23757
<   int rr ;
---
>   int err ;
23799c23762,23764
<   struct task_struct *tmp___1 ;
---
>   bool _bool ;
>   int tmp___1 ;
>   bool _bool___0 ;
23801,23802d23765
<   int _b ;
<   int _b___0 ;
23808c23771
<   struct task_struct *tmp___5 ;
---
>   struct page *tmp___5 ;
23810,23811d23772
<   struct page *tmp___7 ;
<   int tmp___8 ;
23814c23775
< #line 1315
---
> #line 1486
23816c23777
< #line 1315
---
> #line 1486
23818,23826c23779,23789
< #line 1319
<   dig_in = mdev->int_dig_in;
< #line 1320
<   dig_vv = mdev->int_dig_vv;
< #line 1323
<   if (mdev->agreed_pro_version > 86 && (unsigned long )mdev->integrity_r_tfm != (unsigned long )((struct crypto_hash *)0)) {
< #line 1323
<     tmp___0 = crypto_hash_digestsize(mdev->integrity_r_tfm);
< #line 1323
---
> #line 1490
>   dig_in = (mdev->tconn)->int_dig_in;
> #line 1491
>   dig_vv = (mdev->tconn)->int_dig_vv;
> #line 1494
>   dgs = 0;
> #line 1495
>   if ((unsigned long )(mdev->tconn)->peer_integrity_tfm != (unsigned long )((struct crypto_hash *)0)) {
> #line 1496
>     tmp___0 = crypto_hash_digestsize((mdev->tconn)->peer_integrity_tfm);
> #line 1496
23828,23850c23791,23795
<   } else {
< #line 1323
<     dgs = 0;
<   }
< #line 1326
<   if (dgs != 0) {
< #line 1327
<     rr = drbd_recv(mdev, dig_in, (size_t )dgs);
< #line 1328
<     if (rr != dgs) {
< #line 1329
<       tmp___1 = get_current();
< #line 1329
<       tmp___2 = signal_pending(tmp___1);
< #line 1329
<       if (tmp___2 == 0) {
< #line 1330
<         dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "short read receiving data digest: read %d expected %d\n",
<                  rr, dgs);
<       } else {
< 
<       }
< #line 1333
---
> #line 1501
>     err = drbd_recv_all_warn(mdev->tconn, dig_in, (size_t )dgs);
> #line 1502
>     if (err != 0) {
> #line 1503
23854a23800,23801
> #line 1504
>     data_size = data_size - dgs;
23858,23867c23805,23811
< #line 1337
<   data_size = data_size - dgs;
< #line 1339
<   _b = (data_size & 511) != 0;
< #line 1339
<   if (_b != 0) {
< #line 1339
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "read_in_block", (char *)"data_size & 0x1ff", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             1339);
---
> #line 1507
>   _bool = (data_size & 511) == 0;
> #line 1507
>   if (! _bool) {
> #line 1507
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"IS_ALIGNED(data_size, 512)", "read_in_block");
23871,23873c23815,23825
< #line 1339
<   if (_b != 0) {
< #line 1339
---
> #line 1507
>   if (_bool) {
> #line 1507
>     tmp___1 = 0;
>   } else {
> #line 1507
>     tmp___1 = 1;
>   }
> #line 1507
>   if (tmp___1) {
> #line 1508
23878,23885c23830,23836
< #line 1340
<   _b___0 = (unsigned int )data_size > 131072U;
< #line 1340
<   if (_b___0 != 0) {
< #line 1340
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "read_in_block", (char *)"data_size > DRBD_MAX_BIO_SIZE", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             1340);
---
> #line 1509
>   _bool___0 = (unsigned int )data_size <= 1048576U;
> #line 1509
>   if (! _bool___0) {
> #line 1509
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"data_size <= DRBD_MAX_BIO_SIZE", "read_in_block");
23889,23891c23840,23850
< #line 1340
<   if (_b___0 != 0) {
< #line 1340
---
> #line 1509
>   if (_bool___0) {
> #line 1509
>     tmp___2 = 0;
>   } else {
> #line 1509
>     tmp___2 = 1;
>   }
> #line 1509
>   if (tmp___2) {
> #line 1510
23896c23855
< #line 1344
---
> #line 1514
23898c23857
< #line 1345
---
> #line 1515
23901c23860
< #line 1349
---
> #line 1519
23906,23910c23865,23869
< #line 1355
<   e = drbd_alloc_ee(mdev, id, sector, (unsigned int )data_size, 16U);
< #line 1356
<   if ((unsigned long )e == (unsigned long )((struct drbd_epoch_entry *)0)) {
< #line 1357
---
> #line 1525
>   peer_req = drbd_alloc_peer_req(mdev, id, sector, (unsigned int )data_size, 16U);
> #line 1526
>   if ((unsigned long )peer_req == (unsigned long )((struct drbd_peer_request *)0)) {
> #line 1527
23915c23874
< #line 1359
---
> #line 1529
23917,23918c23876,23877
< #line 1360
<     return (e);
---
> #line 1530
>     return (peer_req);
23922c23881
< #line 1362
---
> #line 1532
23924,23929c23883,23888
< #line 1363
<   page = e->pages;
< #line 1364
<   goto ldv_52426;
<   ldv_52425: 
< #line 1365
---
> #line 1533
>   page = peer_req->pages;
> #line 1534
>   goto ldv_52898;
>   ldv_52897: 
> #line 1535
23931c23890
< #line 1365
---
> #line 1535
23933c23892
< #line 1365
---
> #line 1535
23935c23894
< #line 1366
---
> #line 1536
23937c23896
< #line 1366
---
> #line 1536
23939,23941c23898,23900
< #line 1367
<   rr = drbd_recv(mdev, (void *)data, (size_t )len);
< #line 1368
---
> #line 1537
>   err = drbd_recv_all_warn(mdev->tconn, (void *)data, (size_t )len);
> #line 1538
23943c23902
< #line 1368
---
> #line 1538
23945c23904
< #line 1369
---
> #line 1539
23947c23906
< #line 1370
---
> #line 1540
23952c23911
< #line 1372
---
> #line 1542
23954,23970c23913,23917
< #line 1373
<   if ((unsigned int )rr != len) {
< #line 1374
<     drbd_free_some_ee(mdev, e, 0);
< #line 1375
<     tmp___5 = get_current();
< #line 1375
<     tmp___6 = signal_pending(tmp___5);
< #line 1375
<     if (tmp___6 == 0) {
< #line 1376
<       dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "short read receiving data: read %d expected %d\n",
<                rr, len);
<     } else {
< 
<     }
< #line 1378
---
> #line 1543
>   if (err != 0) {
> #line 1544
>     __drbd_free_peer_req(mdev, peer_req, 0);
> #line 1545
23975,23977c23922,23924
< #line 1380
<   ds = ds - rr;
< #line 1364
---
> #line 1547
>   ds = (int )((unsigned int )ds - len);
> #line 1534
23979,23980c23926,23927
<   ldv_52426: ;
< #line 1364
---
>   ldv_52898: ;
> #line 1534
23982,23986c23929,23933
< #line 1364
<     tmp___7 = page_chain_next(page);
< #line 1364
<     __builtin_prefetch((void const   *)tmp___7);
< #line 1364
---
> #line 1534
>     tmp___5 = page_chain_next(page);
> #line 1534
>     __builtin_prefetch((void const   *)tmp___5);
> #line 1534
23988,23989c23935,23936
< #line 1365
<       goto ldv_52425;
---
> #line 1535
>       goto ldv_52897;
23991,23992c23938,23939
< #line 1367
<       goto ldv_52427;
---
> #line 1537
>       goto ldv_52899;
23997,23998c23944,23945
<   ldv_52427: ;
< #line 1383
---
>   ldv_52899: ;
> #line 1550
24000,24006c23947,23953
< #line 1384
<     drbd_csum_ee(mdev, mdev->integrity_r_tfm, e, dig_vv);
< #line 1385
<     tmp___8 = memcmp((void const   *)dig_in, (void const   *)dig_vv, (size_t )dgs);
< #line 1385
<     if (tmp___8 != 0) {
< #line 1386
---
> #line 1551
>     drbd_csum_ee(mdev, (mdev->tconn)->peer_integrity_tfm, peer_req, dig_vv);
> #line 1552
>     tmp___6 = memcmp((void const   *)dig_in, (void const   *)dig_vv, (size_t )dgs);
> #line 1552
>     if (tmp___6 != 0) {
> #line 1553
24009,24014c23956,23958
< #line 1388
<       drbd_bcast_ee(mdev, "digest failed", dgs, (char const   *)dig_in, (char const   *)dig_vv,
<                     (struct drbd_epoch_entry  const  *)e);
< #line 1390
<       drbd_free_some_ee(mdev, e, 0);
< #line 1391
---
> #line 1555
>       __drbd_free_peer_req(mdev, peer_req, 0);
> #line 1556
24022c23966
< #line 1394
---
> #line 1559
24024,24025c23968,23969
< #line 1395
<   return (e);
---
> #line 1560
>   return (peer_req);
24028c23972
< #line 1401 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 1566 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
24032,24033c23976
<   int rr ;
<   int rv ;
---
>   int err ;
24034a23978
>   unsigned int len ;
24037,24042d23980
<   int __min1___0 ;
<   int __min2___0 ;
<   struct task_struct *tmp ;
<   int tmp___0 ;
<   int __min1___1 ;
<   int __min2___1 ;
24045,24047c23983,23985
< #line 1404
<   rv = 1;
< #line 1407
---
> #line 1569
>   err = 0;
> #line 1572
24049,24050c23987,23988
< #line 1408
<     return (1);
---
> #line 1573
>     return (0);
24054,24056c23992,23994
< #line 1410
<   page = drbd_pp_alloc(mdev, 1U, 1);
< #line 1412
---
> #line 1575
>   page = drbd_alloc_pages(mdev, 1U, 1);
> #line 1577
24058,24061c23996,23999
< #line 1413
<   goto ldv_52447;
<   ldv_52446: 
< #line 1414
---
> #line 1578
>   goto ldv_52913;
>   ldv_52912: 
> #line 1579
24063c24001
< #line 1414
---
> #line 1579
24065,24092c24003,24010
< #line 1414
<   rr = drbd_recv(mdev, data, (size_t )(__min1 < __min2 ? __min1 : __min2));
< #line 1415
<   __min1___1 = data_size;
< #line 1415
<   __min2___1 = 4096;
< #line 1415
<   if ((__min1___1 < __min2___1 ? __min1___1 : __min2___1) != rr) {
< #line 1416
<     rv = 0;
< #line 1417
<     tmp = get_current();
< #line 1417
<     tmp___0 = signal_pending(tmp);
< #line 1417
<     if (tmp___0 == 0) {
< #line 1420
<       __min1___0 = data_size;
< #line 1420
<       __min2___0 = 4096;
< #line 1420
<       dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "short read receiving data: read %d expected %d\n",
<                rr, __min1___0 < __min2___0 ? __min1___0 : __min2___0);
<     } else {
< 
<     }
< #line 1421
<     goto ldv_52445;
---
> #line 1579
>   len = (unsigned int )(__min1 < __min2 ? __min1 : __min2);
> #line 1581
>   err = drbd_recv_all_warn(mdev->tconn, data, (size_t )len);
> #line 1582
>   if (err != 0) {
> #line 1583
>     goto ldv_52911;
24096,24099c24014,24017
< #line 1423
<   data_size = data_size - rr;
<   ldv_52447: ;
< #line 1413
---
> #line 1584
>   data_size = (int )((unsigned int )data_size - len);
>   ldv_52913: ;
> #line 1578
24101,24102c24019,24020
< #line 1414
<     goto ldv_52446;
---
> #line 1579
>     goto ldv_52912;
24106,24107c24024,24025
<   ldv_52445: 
< #line 1425
---
>   ldv_52911: 
> #line 1586
24109,24112c24027,24030
< #line 1426
<   drbd_pp_free(mdev, page, 0);
< #line 1427
<   return (rv);
---
> #line 1587
>   drbd_free_pages(mdev, page, 0);
> #line 1588
>   return (err);
24115c24033
< #line 1430 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 1591 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
24122c24040
<   int rr ;
---
>   int err ;
24128,24129c24046,24047
<   struct task_struct *tmp___0 ;
<   int tmp___1 ;
---
>   void *mapped ;
>   void *tmp___0 ;
24132,24135c24050
<   void *tmp___2 ;
<   struct task_struct *tmp___3 ;
<   int tmp___4 ;
<   int tmp___5 ;
---
>   int tmp___1 ;
24138,24146c24053,24063
< #line 1436
<   dig_in = mdev->int_dig_in;
< #line 1437
<   dig_vv = mdev->int_dig_vv;
< #line 1439
<   if (mdev->agreed_pro_version > 86 && (unsigned long )mdev->integrity_r_tfm != (unsigned long )((struct crypto_hash *)0)) {
< #line 1439
<     tmp = crypto_hash_digestsize(mdev->integrity_r_tfm);
< #line 1439
---
> #line 1597
>   dig_in = (mdev->tconn)->int_dig_in;
> #line 1598
>   dig_vv = (mdev->tconn)->int_dig_vv;
> #line 1600
>   dgs = 0;
> #line 1601
>   if ((unsigned long )(mdev->tconn)->peer_integrity_tfm != (unsigned long )((struct crypto_hash *)0)) {
> #line 1602
>     tmp = crypto_hash_digestsize((mdev->tconn)->peer_integrity_tfm);
> #line 1602
24148,24171c24065,24070
<   } else {
< #line 1439
<     dgs = 0;
<   }
< #line 1442
<   if (dgs != 0) {
< #line 1443
<     rr = drbd_recv(mdev, dig_in, (size_t )dgs);
< #line 1444
<     if (rr != dgs) {
< #line 1445
<       tmp___0 = get_current();
< #line 1445
<       tmp___1 = signal_pending(tmp___0);
< #line 1445
<       if (tmp___1 == 0) {
< #line 1446
<         dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "short read receiving data reply digest: read %d expected %d\n",
<                  rr, dgs);
<       } else {
< 
<       }
< #line 1449
<       return (0);
---
> #line 1603
>     err = drbd_recv_all_warn(mdev->tconn, dig_in, (size_t )dgs);
> #line 1604
>     if (err != 0) {
> #line 1605
>       return (err);
24174a24074,24075
> #line 1606
>     data_size = data_size - dgs;
24178,24180c24079
< #line 1453
<   data_size = data_size - dgs;
< #line 1457
---
> #line 1611
24182c24081
< #line 1459
---
> #line 1613
24184c24083
< #line 1460
---
> #line 1614
24186c24085
< #line 1460
---
> #line 1614
24188,24189c24087,24088
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             1460);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>             1614);
24193c24092
< #line 1462
---
> #line 1616
24195c24094
< #line 1462
---
> #line 1616
24197,24200c24096,24103
< #line 1462
<   goto ldv_52466;
<   ldv_52465: 
< #line 1463
---
> #line 1616
>   goto ldv_52933;
>   ldv_52932: 
> #line 1617
>   tmp___0 = kmap(bvec->bv_page);
> #line 1617
>   mapped = tmp___0 + (unsigned long )bvec->bv_offset;
> #line 1618
24202c24105
< #line 1463
---
> #line 1618
24204c24107
< #line 1463
---
> #line 1618
24206,24210c24109,24111
< #line 1464
<   tmp___2 = kmap(bvec->bv_page);
< #line 1464
<   rr = drbd_recv(mdev, tmp___2 + (unsigned long )bvec->bv_offset, (size_t )expect);
< #line 1467
---
> #line 1619
>   err = drbd_recv_all_warn(mdev->tconn, mapped, (size_t )expect);
> #line 1620
24212,24227c24113,24116
< #line 1468
<   if (rr != expect) {
< #line 1469
<     tmp___3 = get_current();
< #line 1469
<     tmp___4 = signal_pending(tmp___3);
< #line 1469
<     if (tmp___4 == 0) {
< #line 1470
<       dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "short read receiving data reply: read %d expected %d\n",
<                rr, expect);
<     } else {
< 
<     }
< #line 1473
<     return (0);
---
> #line 1621
>   if (err != 0) {
> #line 1622
>     return (err);
24231,24233c24120,24122
< #line 1475
<   data_size = data_size - rr;
< #line 1462
---
> #line 1623
>   data_size = data_size - expect;
> #line 1616
24235c24124
< #line 1462
---
> #line 1616
24237,24238c24126,24127
<   ldv_52466: ;
< #line 1462
---
>   ldv_52933: ;
> #line 1616
24240,24241c24129,24130
< #line 1463
<     goto ldv_52465;
---
> #line 1617
>     goto ldv_52932;
24246c24135
< #line 1478
---
> #line 1626
24248,24254c24137,24143
< #line 1479
<     drbd_csum_bio(mdev, mdev->integrity_r_tfm, bio, dig_vv);
< #line 1480
<     tmp___5 = memcmp((void const   *)dig_in, (void const   *)dig_vv, (size_t )dgs);
< #line 1480
<     if (tmp___5 != 0) {
< #line 1481
---
> #line 1627
>     drbd_csum_bio(mdev, (mdev->tconn)->peer_integrity_tfm, bio, dig_vv);
> #line 1628
>     tmp___1 = memcmp((void const   *)dig_in, (void const   *)dig_vv, (size_t )dgs);
> #line 1628
>     if (tmp___1 != 0) {
> #line 1629
24256,24257c24145,24146
< #line 1482
<       return (0);
---
> #line 1630
>       return (-22);
24264c24153
< #line 1486
---
> #line 1634
24266c24155
< #line 1486
---
> #line 1634
24268,24269c24157,24158
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             1486);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>             1634);
24273,24274c24162,24163
< #line 1487
<   return (1);
---
> #line 1635
>   return (0);
24277,24278c24166,24167
< #line 1492 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int e_end_resync_block(struct drbd_conf *mdev , struct drbd_work *w , int unused ) 
---
> #line 1642 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int e_end_resync_block(struct drbd_work *w , int unused ) 
24280c24169,24171
<   struct drbd_epoch_entry *e ;
---
>   struct drbd_peer_request *peer_req ;
>   struct drbd_work  const  *__mptr ;
>   struct drbd_conf *mdev ;
24282,24286c24173,24176
<   int ok ;
<   int tmp ;
<   long tmp___0 ;
<   int tmp___1 ;
<   int tmp___2 ;
---
>   int err ;
>   bool tmp ;
>   int tmp___0 ;
>   long tmp___1 ;
24289,24300c24179,24192
< #line 1494
<   e = (struct drbd_epoch_entry *)w;
< #line 1495
<   sector = e->sector;
< #line 1498
<   tmp = hlist_unhashed((struct hlist_node  const  *)(& e->collision));
< #line 1498
<   if (tmp == 0) {
< #line 1498
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( hlist_unhashed(&e->collision) ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             1498);
---
> #line 1645
>   __mptr = (struct drbd_work  const  *)w;
> #line 1645
>   peer_req = (struct drbd_peer_request *)__mptr;
> #line 1646
>   mdev = w->ldv_50388.mdev;
> #line 1647
>   sector = peer_req->i.sector;
> #line 1650
>   tmp = drbd_interval_empty(& peer_req->i);
> #line 1650
>   if (tmp) {
> #line 1650
>     tmp___0 = 0;
24302c24194,24195
< 
---
> #line 1650
>     tmp___0 = 1;
24304,24312c24197,24202
< #line 1500
<   tmp___0 = __builtin_expect((e->flags & 8UL) == 0UL, 1L);
< #line 1500
<   if (tmp___0 != 0L) {
< #line 1501
<     __drbd_set_in_sync(mdev, sector, (int )e->size, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<                        1501U);
< #line 1502
<     ok = drbd_send_ack(mdev, P_RS_WRITE_ACK, e);
---
> #line 1650
>   if (tmp___0) {
> #line 1650
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( drbd_interval_empty(&peer_req->i) ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>             1650);
24314,24317c24204
< #line 1505
<     drbd_rs_failed_io(mdev, sector, (int )e->size);
< #line 1507
<     ok = drbd_send_ack(mdev, P_NEG_ACK, e);
---
> 
24319,24329c24206,24214
< #line 1509
<   atomic_dec(& mdev->unacked_cnt);
< #line 1509
<   tmp___2 = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 1509
<   if (tmp___2 < 0) {
< #line 1509
<     tmp___1 = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 1509
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: unacked_cnt = %d < 0 !\n",
<             "e_end_resync_block", 1509, tmp___1);
---
> #line 1652
>   tmp___1 = __builtin_expect((peer_req->flags & 8UL) == 0UL, 1L);
> #line 1652
>   if (tmp___1 != 0L) {
> #line 1653
>     __drbd_set_in_sync(mdev, sector, (int )peer_req->i.size, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>                        1653U);
> #line 1654
>     err = drbd_send_ack(mdev, P_RS_WRITE_ACK, peer_req);
24331c24216,24219
< 
---
> #line 1657
>     drbd_rs_failed_io(mdev, sector, (int )peer_req->i.size);
> #line 1659
>     err = drbd_send_ack(mdev, P_NEG_ACK, peer_req);
24333,24334c24221,24224
< #line 1511
<   return (ok);
---
> #line 1661
>   _dec_unacked(mdev, "e_end_resync_block", 1661);
> #line 1663
>   return (err);
24337c24227
< #line 1514 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 1666 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
24340c24230
<   struct drbd_epoch_entry *e ;
---
>   struct drbd_peer_request *peer_req ;
24342,24343d24231
<   int tmp___0 ;
<   int tmp___1 ;
24346,24350c24234,24238
< #line 1518
<   e = read_in_block(mdev, 0xffffffffffffffffULL, sector, data_size);
< #line 1519
<   if ((unsigned long )e == (unsigned long )((struct drbd_epoch_entry *)0)) {
< #line 1520
---
> #line 1670
>   peer_req = read_in_block(mdev, 0xffffffffffffffffULL, sector, data_size);
> #line 1671
>   if ((unsigned long )peer_req == (unsigned long )((struct drbd_peer_request *)0)) {
> #line 1672
24355,24369c24243,24245
< #line 1522
<   atomic_dec(& mdev->rs_pending_cnt);
< #line 1522
<   tmp___0 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
< #line 1522
<   if (tmp___0 < 0) {
< #line 1522
<     tmp = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
< #line 1522
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: rs_pending_cnt = %d < 0 !\n",
<             "recv_resync_read", 1522, tmp);
<   } else {
< 
<   }
< #line 1524
---
> #line 1674
>   _dec_rs_pending(mdev, "recv_resync_read", 1674);
> #line 1676
24371,24379c24247,24255
< #line 1528
<   e->w.cb = & e_end_resync_block;
< #line 1530
<   spin_lock_irq(& mdev->req_lock);
< #line 1531
<   list_add(& e->w.list, & mdev->sync_ee);
< #line 1532
<   spin_unlock_irq(& mdev->req_lock);
< #line 1534
---
> #line 1680
>   peer_req->w.cb = & e_end_resync_block;
> #line 1682
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 1683
>   list_add(& peer_req->w.list, & mdev->sync_ee);
> #line 1684
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 1686
24381,24386c24257,24262
< #line 1535
<   tmp___1 = drbd_submit_ee(mdev, e, 1U, 2);
< #line 1535
<   if (tmp___1 == 0) {
< #line 1536
<     return (1);
---
> #line 1687
>   tmp = drbd_submit_peer_request(mdev, peer_req, 1U, 2);
> #line 1687
>   if (tmp == 0) {
> #line 1688
>     return (0);
24390c24266
< #line 1539
---
> #line 1691
24392,24399c24268,24275
< #line 1540
<   spin_lock_irq(& mdev->req_lock);
< #line 1541
<   list_del(& e->w.list);
< #line 1542
<   spin_unlock_irq(& mdev->req_lock);
< #line 1544
<   drbd_free_some_ee(mdev, e, 0);
---
> #line 1692
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 1693
>   list_del(& peer_req->w.list);
> #line 1694
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 1696
>   __drbd_free_peer_req(mdev, peer_req, 0);
24401c24277
< #line 1546
---
> #line 1698
24403c24279,24311
< #line 1547
---
> #line 1699
>   return (-5);
> }
> }
> #line 1703 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static struct drbd_request *find_request(struct drbd_conf *mdev , struct rb_root *root ,
>                                          u64 id , sector_t sector , bool missing_ok ,
>                                          char const   *func ) 
> { 
>   struct drbd_request *req ;
>   bool tmp ;
> 
>   {
> #line 1709
>   req = (struct drbd_request *)id;
> #line 1710
>   tmp = drbd_contains_interval(root, sector, & req->i);
> #line 1710
>   if ((int )tmp && (unsigned int )*((unsigned char *)req + 88UL) != 0U) {
> #line 1711
>     return (req);
>   } else {
> 
>   }
> #line 1712
>   if (! missing_ok) {
> #line 1713
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "%s: failed to find request 0x%lx, sector %llus\n",
>             func, (unsigned long )id, (unsigned long long )sector);
>   } else {
> 
>   }
> #line 1716
24407,24408c24315,24316
< #line 1550 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int receive_DataReply(struct drbd_conf *mdev , enum drbd_packets cmd , unsigned int data_size ) 
---
> #line 1719 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int receive_DataReply(struct drbd_tconn *tconn , struct packet_info *pi ) 
24409a24318
>   struct drbd_conf *mdev ;
24412c24321
<   int ok ;
---
>   int err ;
24418,24420c24327,24338
< #line 1555
<   p = & mdev->data.rbuf.data;
< #line 1557
---
> #line 1725
>   p = (struct p_data *)pi->data;
> #line 1727
>   mdev = vnr_to_mdev(tconn, (int )pi->vnr);
> #line 1728
>   if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
> #line 1729
>     return (-5);
>   } else {
> 
>   }
> #line 1731
24422c24340
< #line 1557
---
> #line 1731
24424,24430c24342,24348
< #line 1559
<   spin_lock_irq(& mdev->req_lock);
< #line 1560
<   req = _ar_id_to_req(mdev, p->block_id, sector);
< #line 1561
<   spin_unlock_irq(& mdev->req_lock);
< #line 1562
---
> #line 1733
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 1734
>   req = find_request(mdev, & mdev->read_requests, p->block_id, sector, 0, "receive_DataReply");
> #line 1735
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 1736
24433c24351
< #line 1562
---
> #line 1736
24435,24438c24353,24354
< #line 1563
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Got a corrupt block_id/sector pair(1).\n");
< #line 1564
<     return (0);
---
> #line 1737
>     return (-5);
24442,24447c24358,24363
< #line 1570
<   ok = recv_dless_read(mdev, req, sector, (int )data_size);
< #line 1572
<   if (ok != 0) {
< #line 1573
<     req_mod(req, data_received);
---
> #line 1742
>   err = recv_dless_read(mdev, req, sector, (int )pi->size);
> #line 1743
>   if (err == 0) {
> #line 1744
>     req_mod(req, DATA_RECEIVED);
24451,24452c24367,24368
< #line 1578
<   return (ok);
---
> #line 1749
>   return (err);
24455,24456c24371,24372
< #line 1581 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int receive_RSDataReply(struct drbd_conf *mdev , enum drbd_packets cmd , unsigned int data_size ) 
---
> #line 1752 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int receive_RSDataReply(struct drbd_tconn *tconn , struct packet_info *pi ) 
24457a24374
>   struct drbd_conf *mdev ;
24459c24376
<   int ok ;
---
>   int err ;
24466,24468c24383,24394
< #line 1585
<   p = & mdev->data.rbuf.data;
< #line 1587
---
> #line 1757
>   p = (struct p_data *)pi->data;
> #line 1759
>   mdev = vnr_to_mdev(tconn, (int )pi->vnr);
> #line 1760
>   if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
> #line 1761
>     return (-5);
>   } else {
> 
>   }
> #line 1763
24470c24396
< #line 1587
---
> #line 1763
24472c24398
< #line 1588
---
> #line 1764
24474c24400
< #line 1588
---
> #line 1764
24476,24477c24402,24403
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             1588);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>             1764);
24481c24407
< #line 1590
---
> #line 1766
24483c24409
< #line 1590
---
> #line 1766
24485,24486c24411,24412
< #line 1594
<     ok = recv_resync_read(mdev, sector, (int )data_size);
---
> #line 1770
>     err = recv_resync_read(mdev, sector, (int )pi->size);
24488c24414
< #line 1596
---
> #line 1772
24490c24416
< #line 1596
---
> #line 1772
24492c24418
< #line 1597
---
> #line 1773
24497,24500c24423,24426
< #line 1599
<     ok = drbd_drain_block(mdev, (int )data_size);
< #line 1601
<     drbd_send_ack_dp(mdev, P_NEG_ACK, p, (int )data_size);
---
> #line 1775
>     err = drbd_drain_block(mdev, (int )pi->size);
> #line 1777
>     drbd_send_ack_dp(mdev, P_NEG_ACK, p, (int )pi->size);
24502,24505c24428,24481
< #line 1604
<   atomic_add((int )(data_size >> 9), & mdev->rs_sect_in);
< #line 1606
<   return (ok);
---
> #line 1780
>   atomic_add((int )(pi->size >> 9), & mdev->rs_sect_in);
> #line 1782
>   return (err);
> }
> }
> #line 1785 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static void restart_conflicting_writes(struct drbd_conf *mdev , sector_t sector ,
>                                        int size ) 
> { 
>   struct drbd_interval *i ;
>   struct drbd_request *req ;
>   struct drbd_interval  const  *__mptr ;
> 
>   {
> #line 1791
>   i = drbd_find_overlap(& mdev->write_requests, sector, (unsigned int )size);
> #line 1791
>   goto ldv_52993;
>   ldv_52992: ;
> #line 1792
>   if ((unsigned int )*((unsigned char *)i + 48UL) == 0U) {
> #line 1793
>     goto ldv_52989;
>   } else {
> 
>   }
> #line 1794
>   __mptr = (struct drbd_interval  const  *)i;
> #line 1794
>   req = (struct drbd_request *)__mptr + 0xffffffffffffffd8UL;
> #line 1795
>   if ((int )req->rq_state & 1 || ((unsigned long )req->rq_state & 8192UL) == 0UL) {
> #line 1797
>     goto ldv_52989;
>   } else {
> 
>   }
> #line 1800
>   __req_mod(req, CONFLICT_RESOLVED, 0);
>   ldv_52989: 
> #line 1791
>   i = drbd_next_overlap(i, sector, (unsigned int )size);
>   ldv_52993: ;
> #line 1791
>   if ((unsigned long )i != (unsigned long )((struct drbd_interval *)0)) {
> #line 1792
>     goto ldv_52992;
>   } else {
> 
>   }
> 
> #line 1796
>   return;
24508,24509c24484,24485
< #line 1612 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int e_end_block(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) 
---
> #line 1807 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int e_end_block(struct drbd_work *w , int cancel ) 
24511c24487,24489
<   struct drbd_epoch_entry *e ;
---
>   struct drbd_peer_request *peer_req ;
>   struct drbd_work  const  *__mptr ;
>   struct drbd_conf *mdev ;
24513c24491
<   int ok ;
---
>   int err ;
24515,24517c24493,24495
<   int tmp ;
<   long tmp___0 ;
<   int tmp___1 ;
---
>   long tmp ;
>   bool tmp___0 ;
>   bool tmp___1 ;
24519,24520d24496
<   int tmp___3 ;
<   int tmp___4 ;
24523,24541c24499,24519
< #line 1614
<   e = (struct drbd_epoch_entry *)w;
< #line 1615
<   sector = e->sector;
< #line 1616
<   ok = 1;
< #line 1618
<   if ((mdev->net_conf)->wire_protocol == 3) {
< #line 1619
<     tmp___0 = __builtin_expect((e->flags & 8UL) == 0UL, 1L);
< #line 1619
<     if (tmp___0 != 0L) {
< #line 1620
<       pcmd = ((int )mdev->state.ldv_39979.conn > 15 && (int )mdev->state.ldv_39979.conn <= 21) && (e->flags & 2UL) != 0UL ? 23 : 22;
< #line 1624
<       tmp = drbd_send_ack(mdev, (enum drbd_packets )pcmd, e);
< #line 1624
<       ok = tmp & ok;
< #line 1625
---
> #line 1810
>   __mptr = (struct drbd_work  const  *)w;
> #line 1810
>   peer_req = (struct drbd_peer_request *)__mptr;
> #line 1811
>   mdev = w->ldv_50388.mdev;
> #line 1812
>   sector = peer_req->i.sector;
> #line 1813
>   err = 0;
> #line 1815
>   if ((peer_req->flags & 64UL) != 0UL) {
> #line 1816
>     tmp = __builtin_expect((peer_req->flags & 8UL) == 0UL, 1L);
> #line 1816
>     if (tmp != 0L) {
> #line 1817
>       pcmd = ((int )mdev->state.ldv_50103.conn > 15 && (int )mdev->state.ldv_50103.conn <= 21) && (peer_req->flags & 2UL) != 0UL ? 23 : 22;
> #line 1821
>       err = drbd_send_ack(mdev, (enum drbd_packet )pcmd, peer_req);
> #line 1822
24543,24545c24521,24523
< #line 1626
<         __drbd_set_in_sync(mdev, sector, (int )e->size, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<                            1626U);
---
> #line 1823
>         __drbd_set_in_sync(mdev, sector, (int )peer_req->i.size, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>                            1823U);
24550,24565c24528,24529
< #line 1628
<       ok = drbd_send_ack(mdev, P_NEG_ACK, e);
<     }
< #line 1632
<     atomic_dec(& mdev->unacked_cnt);
< #line 1632
<     tmp___2 = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 1632
<     if (tmp___2 < 0) {
< #line 1632
<       tmp___1 = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 1632
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: unacked_cnt = %d < 0 !\n",
<               "e_end_block", 1632, tmp___1);
<     } else {
< 
---
> #line 1825
>       err = drbd_send_ack(mdev, P_NEG_ACK, peer_req);
24566a24531,24532
> #line 1829
>     _dec_unacked(mdev, "e_end_block", 1829);
24570,24581c24536,24547
< #line 1636
<   if ((unsigned int )*((unsigned char *)mdev->net_conf + 540UL) != 0U) {
< #line 1637
<     spin_lock_irq(& mdev->req_lock);
< #line 1638
<     tmp___3 = hlist_unhashed((struct hlist_node  const  *)(& e->collision));
< #line 1638
<     if (tmp___3 != 0) {
< #line 1638
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( !hlist_unhashed(&e->collision) ) in %s:%d\n",
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<               1638);
---
> #line 1833
>   if ((peer_req->flags & 128UL) != 0UL) {
> #line 1834
>     spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 1835
>     tmp___0 = drbd_interval_empty(& peer_req->i);
> #line 1835
>     if ((int )tmp___0) {
> #line 1835
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( !drbd_interval_empty(&peer_req->i) ) in %s:%d\n",
>               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>               1835);
24585,24588c24551,24561
< #line 1639
<     hlist_del_init(& e->collision);
< #line 1640
<     spin_unlock_irq(& mdev->req_lock);
---
> #line 1836
>     drbd_remove_epoch_entry_interval(mdev, peer_req);
> #line 1837
>     if ((peer_req->flags & 32UL) != 0UL) {
> #line 1838
>       restart_conflicting_writes(mdev, sector, (int )peer_req->i.size);
>     } else {
> 
>     }
> #line 1839
>     spin_unlock_irq(& (mdev->tconn)->req_lock);
24590,24597c24563,24578
< #line 1642
<     tmp___4 = hlist_unhashed((struct hlist_node  const  *)(& e->collision));
< #line 1642
<     if (tmp___4 == 0) {
< #line 1642
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( hlist_unhashed(&e->collision) ) in %s:%d\n",
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<               1642);
---
> #line 1841
>     tmp___1 = drbd_interval_empty(& peer_req->i);
> #line 1841
>     if (tmp___1) {
> #line 1841
>       tmp___2 = 0;
>     } else {
> #line 1841
>       tmp___2 = 1;
>     }
> #line 1841
>     if (tmp___2) {
> #line 1841
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( drbd_interval_empty(&peer_req->i) ) in %s:%d\n",
>               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>               1841);
24602,24605c24583,24586
< #line 1645
<   drbd_may_finish_epoch(mdev, e->epoch, cancel != 0 ? EV_CLEANUP : EV_PUT);
< #line 1647
<   return (ok);
---
> #line 1843
>   drbd_may_finish_epoch(mdev->tconn, peer_req->epoch, cancel != 0 ? EV_CLEANUP : EV_PUT);
> #line 1845
>   return (err);
24608,24609c24589,24590
< #line 1650 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int e_send_discard_ack(struct drbd_conf *mdev , struct drbd_work *w , int unused ) 
---
> #line 1848 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int e_send_ack(struct drbd_work *w , enum drbd_packet ack ) 
24611,24612c24592,24667
<   struct drbd_epoch_entry *e ;
<   int ok ;
---
>   struct drbd_conf *mdev ;
>   struct drbd_peer_request *peer_req ;
>   struct drbd_work  const  *__mptr ;
>   int err ;
> 
>   {
> #line 1850
>   mdev = w->ldv_50388.mdev;
> #line 1852
>   __mptr = (struct drbd_work  const  *)w;
> #line 1852
>   peer_req = (struct drbd_peer_request *)__mptr;
> #line 1855
>   err = drbd_send_ack(mdev, ack, peer_req);
> #line 1856
>   _dec_unacked(mdev, "e_send_ack", 1856);
> #line 1858
>   return (err);
> }
> }
> #line 1861 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int e_send_superseded(struct drbd_work *w , int unused ) 
> { 
>   int tmp ;
> 
>   {
> #line 1863
>   tmp = e_send_ack(w, P_SUPERSEDED);
> #line 1863
>   return (tmp);
> }
> }
> #line 1866 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int e_send_retry_write(struct drbd_work *w , int unused ) 
> { 
>   struct drbd_tconn *tconn ;
>   int tmp ;
> 
>   {
> #line 1868
>   tconn = (w->ldv_50388.mdev)->tconn;
> #line 1870
>   tmp = e_send_ack(w, tconn->agreed_pro_version > 99 ? P_RETRY_WRITE : P_SUPERSEDED);
> #line 1870
>   return (tmp);
> }
> }
> #line 1874 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static bool seq_greater(u32 a , u32 b ) 
> { 
> 
> 
>   {
> #line 1881
>   return ((int )a - (int )b > 0);
> }
> }
> #line 1884 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static u32 seq_max(u32 a , u32 b ) 
> { 
>   bool tmp ;
> 
>   {
> #line 1886
>   tmp = seq_greater(a, b);
> #line 1886
>   return ((int )tmp ? a : b);
> }
> }
> #line 1889 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static bool need_peer_seq(struct drbd_conf *mdev ) 
> { 
>   struct drbd_tconn *tconn ;
>   int tp ;
>   struct net_conf *_________p1 ;
>   bool __warned ;
24615a24671
>   int tmp___2 ;
24618,24627c24674,24695
< #line 1652
<   e = (struct drbd_epoch_entry *)w;
< #line 1653
<   ok = 1;
< #line 1655
<   if ((mdev->net_conf)->wire_protocol != 3) {
< #line 1655
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mdev->net_conf->wire_protocol == DRBD_PROT_C ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             1655);
---
> #line 1891
>   tconn = mdev->tconn;
> #line 1900
>   rcu_read_lock();
> #line 1901
>   _________p1 = *((struct net_conf * volatile  *)(& (mdev->tconn)->net_conf));
> #line 1901
>   tmp = debug_lockdep_rcu_enabled();
> #line 1901
>   if (tmp != 0 && ! __warned) {
> #line 1901
>     tmp___0 = rcu_read_lock_held();
> #line 1901
>     if (tmp___0 == 0 && 1) {
> #line 1901
>       __warned = 1;
> #line 1901
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>                              1901, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
24631,24642c24699,24714
< #line 1656
<   ok = drbd_send_ack(mdev, P_DISCARD_ACK, e);
< #line 1658
<   spin_lock_irq(& mdev->req_lock);
< #line 1659
<   tmp = hlist_unhashed((struct hlist_node  const  *)(& e->collision));
< #line 1659
<   if (tmp != 0) {
< #line 1659
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( !hlist_unhashed(&e->collision) ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             1659);
---
> #line 1901
>   tp = (int )_________p1->two_primaries;
> #line 1902
>   rcu_read_unlock();
> #line 1904
>   if (tp != 0) {
> #line 1904
>     tmp___1 = constant_test_bit(1U, (unsigned long const volatile   *)(& tconn->flags));
> #line 1904
>     if (tmp___1 != 0) {
> #line 1904
>       tmp___2 = 1;
>     } else {
> #line 1904
>       tmp___2 = 0;
>     }
24644c24716,24717
< 
---
> #line 1904
>     tmp___2 = 0;
24646,24660c24719,24748
< #line 1660
<   hlist_del_init(& e->collision);
< #line 1661
<   spin_unlock_irq(& mdev->req_lock);
< #line 1663
<   atomic_dec(& mdev->unacked_cnt);
< #line 1663
<   tmp___1 = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 1663
<   if (tmp___1 < 0) {
< #line 1663
<     tmp___0 = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 1663
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: unacked_cnt = %d < 0 !\n",
<             "e_send_discard_ack", 1663, tmp___0);
---
> #line 1904
>   return ((bool )tmp___2);
> }
> }
> #line 1907 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static void update_peer_seq(struct drbd_conf *mdev , unsigned int peer_seq ) 
> { 
>   unsigned int newest_peer_seq ;
>   bool tmp ;
> 
>   {
> #line 1911
>   tmp = need_peer_seq(mdev);
> #line 1911
>   if ((int )tmp) {
> #line 1912
>     spin_lock(& mdev->peer_seq_lock);
> #line 1913
>     newest_peer_seq = seq_max(mdev->peer_seq, peer_seq);
> #line 1914
>     mdev->peer_seq = newest_peer_seq;
> #line 1915
>     spin_unlock(& mdev->peer_seq_lock);
> #line 1917
>     if (peer_seq == newest_peer_seq) {
> #line 1918
>       __wake_up(& mdev->seq_wait, 3U, 1, 0);
>     } else {
> 
>     }
24664,24665c24752,24763
< #line 1665
<   return (ok);
---
> #line 1920
>   return;
> }
> }
> #line 1922 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> __inline static int overlaps(sector_t s1 , int l1 , sector_t s2 , int l2 ) 
> { 
> 
> 
>   {
> #line 1924
>   return ((sector_t )(l1 >> 9) + s1 > s2 && (sector_t )(l2 >> 9) + s2 > s1);
24668,24669c24766,24767
< #line 1668 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static bool overlapping_resync_write(struct drbd_conf *mdev , struct drbd_epoch_entry *data_e ) 
---
> #line 1928 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static bool overlapping_resync_write(struct drbd_conf *mdev , struct drbd_peer_request *peer_req ) 
24671c24769
<   struct drbd_epoch_entry *rs_e ;
---
>   struct drbd_peer_request *rs_req ;
24678c24776
< #line 1672
---
> #line 1931
24680,24682c24778,24780
< #line 1674
<   spin_lock_irq(& mdev->req_lock);
< #line 1675
---
> #line 1933
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 1934
24684,24691c24782,24789
< #line 1675
<   rs_e = (struct drbd_epoch_entry *)__mptr;
< #line 1675
<   goto ldv_52545;
<   ldv_52544: 
< #line 1676
<   tmp = overlaps(data_e->sector, (int )data_e->size, rs_e->sector, (int )rs_e->size);
< #line 1676
---
> #line 1934
>   rs_req = (struct drbd_peer_request *)__mptr;
> #line 1934
>   goto ldv_53065;
>   ldv_53064: 
> #line 1935
>   tmp = overlaps(peer_req->i.sector, (int )peer_req->i.size, rs_req->i.sector, (int )rs_req->i.size);
> #line 1935
24693c24791
< #line 1677
---
> #line 1937
24695,24696c24793,24794
< #line 1678
<     goto ldv_52543;
---
> #line 1938
>     goto ldv_53063;
24700,24708c24798,24806
< #line 1675
<   __mptr___0 = (struct list_head  const  *)rs_e->w.list.next;
< #line 1675
<   rs_e = (struct drbd_epoch_entry *)__mptr___0;
<   ldv_52545: ;
< #line 1675
<   if ((unsigned long )(& rs_e->w.list) != (unsigned long )(& mdev->sync_ee)) {
< #line 1676
<     goto ldv_52544;
---
> #line 1934
>   __mptr___0 = (struct list_head  const  *)rs_req->w.list.next;
> #line 1934
>   rs_req = (struct drbd_peer_request *)__mptr___0;
>   ldv_53065: ;
> #line 1934
>   if ((unsigned long )(& rs_req->w.list) != (unsigned long )(& mdev->sync_ee)) {
> #line 1935
>     goto ldv_53064;
24712,24715c24810,24813
<   ldv_52543: 
< #line 1681
<   spin_unlock_irq(& mdev->req_lock);
< #line 1683
---
>   ldv_53063: 
> #line 1941
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 1943
24719,24720c24817,24818
< #line 1707 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int drbd_wait_peer_seq(struct drbd_conf *mdev , u32 const   packet_seq ) 
---
> #line 1967 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int wait_for_and_update_peer_seq(struct drbd_conf *mdev , u32 const   peer_seq ) 
24724d24821
<   unsigned int p_seq ;
24727,24729c24824,24833
<   int tmp___0 ;
<   struct task_struct *tmp___1 ;
<   int tmp___2 ;
---
>   bool tmp___0 ;
>   int tmp___1 ;
>   bool tmp___2 ;
>   int tmp___3 ;
>   struct task_struct *tmp___4 ;
>   int tmp___5 ;
>   struct net_conf *_________p1 ;
>   bool __warned ;
>   int tmp___6 ;
>   int tmp___7 ;
24732c24836
< #line 1709
---
> #line 1969
24734c24838
< #line 1709
---
> #line 1969
24736c24840
< #line 1709
---
> #line 1969
24738c24842
< #line 1709
---
> #line 1969
24740c24844
< #line 1709
---
> #line 1969
24742c24846
< #line 1709
---
> #line 1969
24744,24746c24848,24865
< #line 1712
<   ret = 0;
< #line 1713
---
> #line 1973
>   tmp___0 = need_peer_seq(mdev);
> #line 1973
>   if (tmp___0) {
> #line 1973
>     tmp___1 = 0;
>   } else {
> #line 1973
>     tmp___1 = 1;
>   }
> #line 1973
>   if (tmp___1) {
> #line 1974
>     return (0);
>   } else {
> 
>   }
> #line 1976
24748,24756c24867,24885
<   ldv_52555: 
< #line 1715
<   prepare_to_wait(& mdev->seq_wait, & wait, 1);
< #line 1716
<   tmp___0 = seq_cmp(packet_seq, mdev->peer_seq + 1U);
< #line 1716
<   if (tmp___0 <= 0) {
< #line 1717
<     goto ldv_52554;
---
>   ldv_53077: 
> #line 1978
>   tmp___2 = seq_greater((unsigned int )peer_seq - 1U, mdev->peer_seq);
> #line 1978
>   if (tmp___2) {
> #line 1978
>     tmp___3 = 0;
>   } else {
> #line 1978
>     tmp___3 = 1;
>   }
> #line 1978
>   if (tmp___3) {
> #line 1979
>     mdev->peer_seq = seq_max(mdev->peer_seq, peer_seq);
> #line 1980
>     ret = 0;
> #line 1981
>     goto ldv_53073;
24760,24766c24889,24895
< #line 1718
<   tmp___1 = get_current();
< #line 1718
<   tmp___2 = signal_pending(tmp___1);
< #line 1718
<   if (tmp___2 != 0) {
< #line 1719
---
> #line 1983
>   tmp___4 = get_current();
> #line 1983
>   tmp___5 = signal_pending(tmp___4);
> #line 1983
>   if (tmp___5 != 0) {
> #line 1984
24768,24769c24897,24898
< #line 1720
<     goto ldv_52554;
---
> #line 1985
>     goto ldv_53073;
24773,24775c24902,24904
< #line 1722
<   p_seq = mdev->peer_seq;
< #line 1723
---
> #line 1987
>   prepare_to_wait(& mdev->seq_wait, & wait, 1);
> #line 1988
24777,24788c24906,24925
< #line 1724
<   timeout = schedule_timeout(7500L);
< #line 1725
<   spin_lock(& mdev->peer_seq_lock);
< #line 1726
<   if (timeout == 0L && mdev->peer_seq == p_seq) {
< #line 1727
<     ret = -110;
< #line 1728
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED waited 30 seconds for sequence update, forcing reconnect\n");
< #line 1729
<     goto ldv_52554;
---
> #line 1989
>   rcu_read_lock();
> #line 1990
>   _________p1 = *((struct net_conf * volatile  *)(& (mdev->tconn)->net_conf));
> #line 1990
>   tmp___6 = debug_lockdep_rcu_enabled();
> #line 1990
>   if (tmp___6 != 0 && ! __warned) {
> #line 1990
>     tmp___7 = rcu_read_lock_held();
> #line 1990
>     if (tmp___7 == 0 && 1) {
> #line 1990
>       __warned = 1;
> #line 1990
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>                              1990, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
24792,24800c24929,24944
< #line 1731
<   goto ldv_52555;
<   ldv_52554: 
< #line 1732
<   finish_wait(& mdev->seq_wait, & wait);
< #line 1733
<   if (mdev->peer_seq + 1U == (unsigned int )packet_seq) {
< #line 1734
<     mdev->peer_seq = mdev->peer_seq + 1U;
---
> #line 1990
>   timeout = (long )((_________p1->ping_timeo * 250U) / 10U);
> #line 1991
>   rcu_read_unlock();
> #line 1992
>   timeout = schedule_timeout(timeout);
> #line 1993
>   spin_lock(& mdev->peer_seq_lock);
> #line 1994
>   if (timeout == 0L) {
> #line 1995
>     ret = -110;
> #line 1996
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Timed out waiting for missing ack packets; disconnecting\n");
> #line 1997
>     goto ldv_53073;
24804c24948,24951
< #line 1735
---
> #line 1999
>   goto ldv_53077;
>   ldv_53073: 
> #line 2000
24806c24953,24955
< #line 1736
---
> #line 2001
>   finish_wait(& mdev->seq_wait, & wait);
> #line 2002
24810c24959
< #line 1742 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2008 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
24816c24965
< #line 1744
---
> #line 2010
24820,24821c24969,24970
< #line 1751 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int receive_Data(struct drbd_conf *mdev , enum drbd_packets cmd , unsigned int data_size ) 
---
> #line 2016 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static void fail_postponed_requests(struct drbd_conf *mdev , sector_t sector , unsigned int size ) 
24823,24862c24972,24975
<   sector_t sector ;
<   struct drbd_epoch_entry *e ;
<   struct p_data *p ;
<   int rw ;
<   u32 dp_flags ;
<   __u32 tmp ;
<   int tmp___0 ;
<   int tmp___1 ;
<   __u64 tmp___2 ;
<   __u32 tmp___3 ;
<   unsigned long tmp___4 ;
<   int size ;
<   int discard ;
<   int tmp___5 ;
<   wait_queue_t wait ;
<   struct task_struct *tmp___6 ;
<   struct drbd_request *i ;
<   struct hlist_node *n ;
<   struct hlist_head *slot ;
<   int first ;
<   long tmp___7 ;
<   long tmp___8 ;
<   __u32 tmp___9 ;
<   int tmp___10 ;
<   struct hlist_head *tmp___11 ;
<   int have_unacked ;
<   int have_conflict ;
<   struct task_struct *tmp___12 ;
<   struct task_struct *tmp___13 ;
<   int tmp___14 ;
<   struct hlist_node  const  *__mptr ;
<   struct task_struct *tmp___15 ;
<   int tmp___16 ;
<   bool tmp___17 ;
<   int tmp___18 ;
<   wait_queue_t __wait ;
<   struct task_struct *tmp___19 ;
<   bool tmp___20 ;
<   int tmp___21 ;
<   int tmp___22 ;
---
>   struct drbd_interval *i ;
>   struct drbd_request *req ;
>   struct bio_and_error m ;
>   struct drbd_interval  const  *__mptr ;
24865,24893c24978,24987
< #line 1755
<   p = & mdev->data.rbuf.data;
< #line 1756
<   rw = 1;
< #line 1759
<   tmp___1 = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 1759
<   if (tmp___1 == 0) {
< #line 1760
<     spin_lock(& mdev->peer_seq_lock);
< #line 1761
<     tmp = __fswab32(p->seq_num);
< #line 1761
<     if (mdev->peer_seq + 1U == tmp) {
< #line 1762
<       mdev->peer_seq = mdev->peer_seq + 1U;
<     } else {
< 
<     }
< #line 1763
<     spin_unlock(& mdev->peer_seq_lock);
< #line 1765
<     drbd_send_ack_dp(mdev, P_NEG_ACK, p, (int )data_size);
< #line 1766
<     atomic_inc(& (mdev->current_epoch)->epoch_size);
< #line 1767
<     tmp___0 = drbd_drain_block(mdev, (int )data_size);
< #line 1767
<     return (tmp___0);
---
>   repeat: 
> #line 2022
>   i = drbd_find_overlap(& mdev->write_requests, sector, size);
> #line 2022
>   goto ldv_53095;
>   ldv_53094: ;
> #line 2026
>   if ((unsigned int )*((unsigned char *)i + 48UL) == 0U) {
> #line 2027
>     goto ldv_53091;
24897,24908c24991,24998
< #line 1775
<   tmp___2 = __fswab64(p->sector);
< #line 1775
<   sector = (sector_t )tmp___2;
< #line 1776
<   e = read_in_block(mdev, p->block_id, sector, (int )data_size);
< #line 1777
<   if ((unsigned long )e == (unsigned long )((struct drbd_epoch_entry *)0)) {
< #line 1778
<     put_ldev(mdev);
< #line 1779
<     return (0);
---
> #line 2028
>   __mptr = (struct drbd_interval  const  *)i;
> #line 2028
>   req = (struct drbd_request *)__mptr + 0xffffffffffffffd8UL;
> #line 2029
>   if (((unsigned long )req->rq_state & 8192UL) == 0UL) {
> #line 2030
>     goto ldv_53091;
24912,24941c25002,25011
< #line 1782
<   e->w.cb = & e_end_block;
< #line 1784
<   tmp___3 = __fswab32(p->dp_flags);
< #line 1784
<   dp_flags = tmp___3;
< #line 1785
<   tmp___4 = wire_flags_to_bio(mdev, dp_flags);
< #line 1785
<   rw = (int )((unsigned int )tmp___4 | (unsigned int )rw);
< #line 1786
<   if ((unsigned long )e->pages == (unsigned long )((struct page *)0)) {
< #line 1787
<     if (e->size != 0U) {
< #line 1787
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( e->size == 0 ) in %s:%d\n",
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<               1787);
<     } else {
< 
<     }
< #line 1788
<     if ((dp_flags & 32U) == 0U) {
< #line 1788
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( dp_flags & DP_FLUSH ) in %s:%d\n",
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<               1788);
<     } else {
< 
<     }
---
> #line 2031
>   req->rq_state = req->rq_state & 4294959103U;
> #line 2032
>   __req_mod(req, NEG_ACKED, & m);
> #line 2033
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 2034
>   if ((unsigned long )m.bio != (unsigned long )((struct bio *)0)) {
> #line 2035
>     complete_master_bio(mdev, & m);
24945,24948c25015,25026
< #line 1791
<   if ((dp_flags & 4U) != 0U) {
< #line 1792
<     e->flags = e->flags | 2UL;
---
> #line 2036
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 2037
>   goto repeat;
>   ldv_53091: 
> #line 2022
>   i = drbd_next_overlap(i, sector, size);
>   ldv_53095: ;
> #line 2022
>   if ((unsigned long )i != (unsigned long )((struct drbd_interval *)0)) {
> #line 2023
>     goto ldv_53094;
24952,24965c25030,25074
< #line 1794
<   spin_lock(& mdev->epoch_lock);
< #line 1795
<   e->epoch = mdev->current_epoch;
< #line 1796
<   atomic_inc(& (e->epoch)->epoch_size);
< #line 1797
<   atomic_inc(& (e->epoch)->active);
< #line 1798
<   spin_unlock(& mdev->epoch_lock);
< #line 1801
<   if ((unsigned int )*((unsigned char *)mdev->net_conf + 540UL) == 0U) {
< #line 1802
<     spin_lock_irq(& mdev->req_lock);
---
> 
> #line 2027
>   return;
> }
> }
> #line 2041 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int handle_write_conflicts(struct drbd_conf *mdev , struct drbd_peer_request *peer_req ) 
> { 
>   struct drbd_tconn *tconn ;
>   bool resolve_conflicts ;
>   int tmp ;
>   sector_t sector ;
>   unsigned int size ;
>   struct drbd_interval *i ;
>   bool equal ;
>   int err ;
>   bool superseded ;
>   struct drbd_request *req ;
>   struct drbd_interval  const  *__mptr ;
>   union drbd_state val ;
>   union drbd_state mask ;
> 
>   {
> #line 2044
>   tconn = mdev->tconn;
> #line 2045
>   tmp = constant_test_bit(1U, (unsigned long const volatile   *)(& tconn->flags));
> #line 2045
>   resolve_conflicts = tmp != 0;
> #line 2046
>   sector = peer_req->i.sector;
> #line 2047
>   size = peer_req->i.size;
> #line 2056
>   drbd_insert_interval(& mdev->write_requests, & peer_req->i);
>   repeat: 
> #line 2059
>   i = drbd_find_overlap(& mdev->write_requests, sector, size);
> #line 2059
>   goto ldv_53120;
>   ldv_53119: ;
> #line 2060
>   if ((unsigned long )(& peer_req->i) == (unsigned long )i) {
> #line 2061
>     goto ldv_53109;
24967,24991d25075
< #line 1806
<     size = (int const   )e->size;
< #line 1807
<     tmp___5 = drbd_test_flag(mdev, DISCARD_CONCURRENT);
< #line 1807
<     discard = tmp___5;
< #line 1808
<     tmp___6 = get_current();
< #line 1808
<     wait.flags = 0U;
< #line 1808
<     wait.private = (void *)tmp___6;
< #line 1808
<     wait.func = & autoremove_wake_function;
< #line 1808
<     wait.task_list.next = & wait.task_list;
< #line 1808
<     wait.task_list.prev = & wait.task_list;
< #line 1814
<     if ((mdev->net_conf)->wire_protocol != 3) {
< #line 1814
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mdev->net_conf->wire_protocol == DRBD_PROT_C ) in %s:%d\n",
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<               1814);
<     } else {
24993,25004c25077,25085
<     }
< #line 1815
<     tmp___7 = __builtin_expect((unsigned long )mdev->ee_hash == (unsigned long )((struct hlist_head *)0),
<                                0L);
< #line 1815
<     if (tmp___7 != 0L) {
< #line 1815
<       __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"),
<                            "i" (1815), "i" (12UL));
<       ldv_52577: ;
< #line 1815
<       goto ldv_52577;
---
>   }
> #line 2063
>   if ((unsigned int )*((unsigned char *)i + 48UL) == 0U) {
> #line 2069
>     err = drbd_wait_misc(mdev, i);
> #line 2070
>     if (err != 0) {
> #line 2071
>       goto out;
25008,25018c25089,25105
< #line 1816
<     tmp___8 = __builtin_expect((unsigned long )mdev->tl_hash == (unsigned long )((struct hlist_head *)0),
<                                0L);
< #line 1816
<     if (tmp___8 != 0L) {
< #line 1816
<       __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"),
<                            "i" (1816), "i" (12UL));
<       ldv_52578: ;
< #line 1816
<       goto ldv_52578;
---
> #line 2072
>     goto repeat;
>   } else {
> 
>   }
> #line 2075
>   equal = (bool )(i->sector == sector && i->size == size);
> #line 2076
>   if ((int )resolve_conflicts) {
> #line 2083
>     superseded = (bool )(i->sector <= sector && i->sector + (sector_t )(i->size >> 9) >= (sector_t )(size >> 9) + sector);
> #line 2086
>     if (! equal) {
> #line 2087
>       dev_alert((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Concurrent writes detected: local=%llus +%u, remote=%llus +%u, assuming %s came first\n",
>                 (unsigned long long )i->sector, i->size, (unsigned long long )sector,
>                 size, (int )superseded ? (char *)"local" : (char *)"remote");
25022,25029c25109,25131
< #line 1852
<     tmp___9 = __fswab32(p->seq_num);
< #line 1852
<     tmp___10 = drbd_wait_peer_seq(mdev, tmp___9);
< #line 1852
<     if (tmp___10 != 0) {
< #line 1853
<       goto out_interrupted;
---
> #line 2094
>     inc_unacked(mdev);
> #line 2095
>     peer_req->w.cb = (int )superseded ? & e_send_superseded : & e_send_retry_write;
> #line 2097
>     list_add_tail(& peer_req->w.list, & mdev->done_ee);
> #line 2098
>     wake_asender(mdev->tconn);
> #line 2100
>     err = -2;
> #line 2101
>     goto out;
>   } else {
> #line 2104
>     __mptr = (struct drbd_interval  const  *)i;
> #line 2104
>     req = (struct drbd_request *)__mptr + 0xffffffffffffffd8UL;
> #line 2106
>     if (! equal) {
> #line 2107
>       dev_alert((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Concurrent writes detected: local=%llus +%u, remote=%llus +%u\n",
>                 (unsigned long long )i->sector, i->size, (unsigned long long )sector,
>                 size);
25033,25068c25135,25154
< #line 1855
<     spin_lock_irq(& mdev->req_lock);
< #line 1857
<     tmp___11 = ee_hash_slot(mdev, sector);
< #line 1857
<     hlist_add_head(& e->collision, tmp___11);
< #line 1860
<     slot = tl_hash_slot(mdev, sector);
< #line 1861
<     first = 1;
<     ldv_52589: 
< #line 1863
<     have_unacked = 0;
< #line 1864
<     have_conflict = 0;
< #line 1865
<     prepare_to_wait(& mdev->misc_wait, & wait, 1);
< #line 1867
<     n = slot->first;
< #line 1867
<     goto ldv_52586;
<     ldv_52585: 
< #line 1868
<     tmp___14 = overlaps(i->sector, (int )i->size, sector, size);
< #line 1868
<     if (tmp___14 != 0) {
< #line 1871
<       if (first != 0) {
< #line 1872
<         tmp___12 = get_current();
< #line 1872
<         tmp___13 = get_current();
< #line 1872
<         dev_alert((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "%s[%u] Concurrent local write detected!\tnew: %llus +%u; pending: %llus +%u\n",
<                   (char *)(& tmp___13->comm), tmp___12->pid, (unsigned long long )sector,
<                   size, (unsigned long long )i->sector, i->size);
---
> #line 2112
>     if ((int )req->rq_state & 1 || ((unsigned long )req->rq_state & 8192UL) == 0UL) {
> #line 2125
>       err = drbd_wait_misc(mdev, & req->i);
> #line 2126
>       if (err != 0) {
> #line 2128
>         val.i = 0U;
> #line 2128
>         val.ldv_40604.conn = 3U;
> #line 2128
>         mask.i = 0U;
> #line 2128
>         mask.ldv_40604.conn = 31U;
> #line 2128
>         _conn_request_state(mdev->tconn, mask, val, CS_HARD);
> #line 2130
>         fail_postponed_requests(mdev, sector, size);
> #line 2131
>         goto out;
25072,25076c25158,25160
< #line 1877
<       if ((i->rq_state & 16UL) != 0UL) {
< #line 1878
<         have_unacked = have_unacked + 1;
<       } else {
---
> #line 2133
>       goto repeat;
>     } else {
25078,25080c25162,25257
<       }
< #line 1879
<       have_conflict = have_conflict + 1;
---
>     }
> #line 2139
>     peer_req->flags = peer_req->flags | 32UL;
>   }
>   ldv_53109: 
> #line 2059
>   i = drbd_next_overlap(i, sector, size);
>   ldv_53120: ;
> #line 2059
>   if ((unsigned long )i != (unsigned long )((struct drbd_interval *)0)) {
> #line 2060
>     goto ldv_53119;
>   } else {
> 
>   }
> #line 2142
>   err = 0;
>   out: ;
> #line 2145
>   if (err != 0) {
> #line 2146
>     drbd_remove_epoch_entry_interval(mdev, peer_req);
>   } else {
> 
>   }
> #line 2147
>   return (err);
> }
> }
> #line 2151 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int receive_Data(struct drbd_tconn *tconn , struct packet_info *pi ) 
> { 
>   struct drbd_conf *mdev ;
>   sector_t sector ;
>   struct drbd_peer_request *peer_req ;
>   struct p_data *p ;
>   u32 peer_seq ;
>   __u32 tmp ;
>   int rw ;
>   u32 dp_flags ;
>   int err ;
>   int tp ;
>   int err2 ;
>   int tmp___0 ;
>   __u64 tmp___1 ;
>   __u32 tmp___2 ;
>   unsigned long tmp___3 ;
>   struct net_conf *_________p1 ;
>   bool __warned ;
>   int tmp___4 ;
>   int tmp___5 ;
>   bool tmp___6 ;
>   int tmp___7 ;
>   wait_queue_t __wait ;
>   struct task_struct *tmp___8 ;
>   bool tmp___9 ;
>   int tmp___10 ;
>   struct net_conf *_________p1___0 ;
>   bool __warned___0 ;
>   int tmp___11 ;
>   int tmp___12 ;
> 
>   {
> #line 2156
>   p = (struct p_data *)pi->data;
> #line 2157
>   tmp = __fswab32(p->seq_num);
> #line 2157
>   peer_seq = tmp;
> #line 2158
>   rw = 1;
> #line 2162
>   mdev = vnr_to_mdev(tconn, (int )pi->vnr);
> #line 2163
>   if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
> #line 2164
>     return (-5);
>   } else {
> 
>   }
> #line 2166
>   tmp___0 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 2166
>   if (tmp___0 == 0) {
> #line 2169
>     err = wait_for_and_update_peer_seq(mdev, peer_seq);
> #line 2170
>     drbd_send_ack_dp(mdev, P_NEG_ACK, p, (int )pi->size);
> #line 2171
>     atomic_inc(& (tconn->current_epoch)->epoch_size);
> #line 2172
>     err2 = drbd_drain_block(mdev, (int )pi->size);
> #line 2173
>     if (err == 0) {
> #line 2174
>       err = err2;
25084,25100c25261,25298
< #line 1867
<     n = n->next;
<     ldv_52586: ;
< #line 1867
<     if ((unsigned long )n != (unsigned long )((struct hlist_node *)0)) {
< #line 1867
<       __mptr = (struct hlist_node  const  *)n;
< #line 1867
<       i = (struct drbd_request *)__mptr + 0xffffffffffffffd8UL;
< #line 1867
<       if (1 != 0) {
< #line 1868
<         goto ldv_52585;
<       } else {
< #line 1870
<         goto ldv_52587;
<       }
---
> #line 2175
>     return (err);
>   } else {
> 
>   }
> #line 2184
>   tmp___1 = __fswab64(p->sector);
> #line 2184
>   sector = (sector_t )tmp___1;
> #line 2185
>   peer_req = read_in_block(mdev, p->block_id, sector, (int )pi->size);
> #line 2186
>   if ((unsigned long )peer_req == (unsigned long )((struct drbd_peer_request *)0)) {
> #line 2187
>     put_ldev(mdev);
> #line 2188
>     return (-5);
>   } else {
> 
>   }
> #line 2191
>   peer_req->w.cb = & e_end_block;
> #line 2193
>   tmp___2 = __fswab32(p->dp_flags);
> #line 2193
>   dp_flags = tmp___2;
> #line 2194
>   tmp___3 = wire_flags_to_bio(mdev, dp_flags);
> #line 2194
>   rw = (int )((unsigned int )tmp___3 | (unsigned int )rw);
> #line 2195
>   if ((unsigned long )peer_req->pages == (unsigned long )((struct page *)0)) {
> #line 2196
>     if (peer_req->i.size != 0U) {
> #line 2196
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( peer_req->i.size == 0 ) in %s:%d\n",
>               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>               2196);
25104,25108c25302,25307
<     ldv_52587: ;
< #line 1883
<     if (have_conflict == 0) {
< #line 1884
<       goto ldv_52588;
---
> #line 2197
>     if ((dp_flags & 32U) == 0U) {
> #line 2197
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( dp_flags & DP_FLUSH ) in %s:%d\n",
>               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>               2197);
25112,25132c25311,25347
< #line 1887
<     if ((first != 0 && discard != 0) && have_unacked != 0) {
< #line 1888
<       dev_alert((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Concurrent write! [DISCARD BY FLAG] sec=%llus\n",
<                 (unsigned long long )sector);
< #line 1890
<       inc_unacked(mdev);
< #line 1891
<       e->w.cb = & e_send_discard_ack;
< #line 1892
<       list_add_tail(& e->w.list, & mdev->done_ee);
< #line 1894
<       spin_unlock_irq(& mdev->req_lock);
< #line 1899
<       put_ldev(mdev);
< #line 1900
<       wake_asender(mdev);
< #line 1901
<       finish_wait(& mdev->misc_wait, & wait);
< #line 1902
<       return (1);
---
>   } else {
> 
>   }
> #line 2200
>   if ((dp_flags & 4U) != 0U) {
> #line 2201
>     peer_req->flags = peer_req->flags | 2UL;
>   } else {
> 
>   }
> #line 2203
>   spin_lock(& tconn->epoch_lock);
> #line 2204
>   peer_req->epoch = tconn->current_epoch;
> #line 2205
>   atomic_inc(& (peer_req->epoch)->epoch_size);
> #line 2206
>   atomic_inc(& (peer_req->epoch)->active);
> #line 2207
>   spin_unlock(& tconn->epoch_lock);
> #line 2209
>   rcu_read_lock();
> #line 2210
>   _________p1 = *((struct net_conf * volatile  *)(& (mdev->tconn)->net_conf));
> #line 2210
>   tmp___4 = debug_lockdep_rcu_enabled();
> #line 2210
>   if (tmp___4 != 0 && ! __warned) {
> #line 2210
>     tmp___5 = rcu_read_lock_held();
> #line 2210
>     if (tmp___5 == 0 && 1) {
> #line 2210
>       __warned = 1;
> #line 2210
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>                              2210, "suspicious rcu_dereference_check() usage");
25136,25148c25351,25366
< #line 1905
<     tmp___15 = get_current();
< #line 1905
<     tmp___16 = signal_pending(tmp___15);
< #line 1905
<     if (tmp___16 != 0) {
< #line 1906
<       hlist_del_init(& e->collision);
< #line 1908
<       spin_unlock_irq(& mdev->req_lock);
< #line 1910
<       finish_wait(& mdev->misc_wait, & wait);
< #line 1911
---
>   } else {
> 
>   }
> #line 2210
>   tp = (int )_________p1->two_primaries;
> #line 2211
>   rcu_read_unlock();
> #line 2212
>   if (tp != 0) {
> #line 2213
>     peer_req->flags = peer_req->flags | 128UL;
> #line 2214
>     err = wait_for_and_update_peer_seq(mdev, peer_seq);
> #line 2215
>     if (err != 0) {
> #line 2216
25153,25170c25371,25384
< #line 1914
<     spin_unlock_irq(& mdev->req_lock);
< #line 1915
<     if (first != 0) {
< #line 1916
<       first = 0;
< #line 1917
<       dev_alert((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Concurrent write! [W AFTERWARDS] sec=%llus\n",
<                 (unsigned long long )sector);
<     } else
< #line 1919
<     if (discard != 0) {
< #line 1922
<       if (have_unacked != 0) {
< #line 1922
<         dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( have_unacked == 0 ) in %s:%d\n",
<                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<                 1922);
---
> #line 2217
>     spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 2218
>     err = handle_write_conflicts(mdev, peer_req);
> #line 2219
>     if (err != 0) {
> #line 2220
>       spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 2221
>       if (err == -2) {
> #line 2222
>         put_ldev(mdev);
> #line 2223
>         return (0);
25173a25388,25389
> #line 2225
>       goto out_interrupted;
25177,25185c25393,25395
< #line 1924
<     schedule();
< #line 1925
<     spin_lock_irq(& mdev->req_lock);
< #line 1926
<     goto ldv_52589;
<     ldv_52588: 
< #line 1927
<     finish_wait(& mdev->misc_wait, & wait);
---
>   } else {
> #line 2228
>     spin_lock_irq(& (mdev->tconn)->req_lock);
25187,25198c25397,25408
< #line 1930
<   list_add(& e->w.list, & mdev->active_ee);
< #line 1931
<   spin_unlock_irq(& mdev->req_lock);
< #line 1933
<   if ((unsigned int )*((unsigned short *)mdev + 1138UL) == 272U) {
< #line 1934
<     tmp___17 = overlapping_resync_write(mdev, e);
< #line 1934
<     if (tmp___17) {
< #line 1934
<       tmp___18 = 0;
---
> #line 2229
>   list_add(& peer_req->w.list, & mdev->active_ee);
> #line 2230
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 2232
>   if ((unsigned int )*((unsigned short *)mdev + 374UL) == 272U) {
> #line 2233
>     tmp___6 = overlapping_resync_write(mdev, peer_req);
> #line 2233
>     if (tmp___6) {
> #line 2233
>       tmp___7 = 0;
25200,25201c25410,25411
< #line 1934
<       tmp___18 = 1;
---
> #line 2233
>       tmp___7 = 1;
25203,25206c25413,25416
< #line 1934
<     if (tmp___18) {
< #line 1934
<       goto ldv_52590;
---
> #line 2233
>     if (tmp___7) {
> #line 2233
>       goto ldv_53140;
25210,25212c25420,25422
< #line 1934
<     tmp___19 = get_current();
< #line 1934
---
> #line 2233
>     tmp___8 = get_current();
> #line 2233
25214,25216c25424,25426
< #line 1934
<     __wait.private = (void *)tmp___19;
< #line 1934
---
> #line 2233
>     __wait.private = (void *)tmp___8;
> #line 2233
25218c25428
< #line 1934
---
> #line 2233
25220c25430
< #line 1934
---
> #line 2233
25222,25223c25432,25433
<     ldv_52593: 
< #line 1934
---
>     ldv_53143: 
> #line 2233
25225,25230c25435,25440
< #line 1934
<     tmp___20 = overlapping_resync_write(mdev, e);
< #line 1934
<     if (tmp___20) {
< #line 1934
<       tmp___21 = 0;
---
> #line 2233
>     tmp___9 = overlapping_resync_write(mdev, peer_req);
> #line 2233
>     if (tmp___9) {
> #line 2233
>       tmp___10 = 0;
25232,25233c25442,25443
< #line 1934
<       tmp___21 = 1;
---
> #line 2233
>       tmp___10 = 1;
25235,25238c25445,25448
< #line 1934
<     if (tmp___21) {
< #line 1934
<       goto ldv_52592;
---
> #line 2233
>     if (tmp___10) {
> #line 2233
>       goto ldv_53142;
25242c25452
< #line 1934
---
> #line 2233
25244,25247c25454,25457
< #line 1934
<     goto ldv_52593;
<     ldv_52592: 
< #line 1934
---
> #line 2233
>     goto ldv_53143;
>     ldv_53142: 
> #line 2233
25249c25459
<     ldv_52590: ;
---
>     ldv_53140: ;
25253,25267c25463,25505
< #line 1936
<   switch ((mdev->net_conf)->wire_protocol) {
<   case 3: 
< #line 1938
<   inc_unacked(mdev);
< #line 1941
<   goto ldv_52595;
<   case 2: 
< #line 1945
<   drbd_send_ack(mdev, P_RECV_ACK, e);
< #line 1946
<   goto ldv_52595;
<   case 1: ;
< #line 1949
<   goto ldv_52595;
---
> #line 2235
>   if ((mdev->tconn)->agreed_pro_version <= 99) {
> #line 2236
>     rcu_read_lock();
> #line 2237
>     _________p1___0 = *((struct net_conf * volatile  *)(& (mdev->tconn)->net_conf));
> #line 2237
>     tmp___11 = debug_lockdep_rcu_enabled();
> #line 2237
>     if (tmp___11 != 0 && ! __warned___0) {
> #line 2237
>       tmp___12 = rcu_read_lock_held();
> #line 2237
>       if (tmp___12 == 0 && 1) {
> #line 2237
>         __warned___0 = 1;
> #line 2237
>         lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>                                2237, "suspicious rcu_dereference_check() usage");
>       } else {
> 
>       }
>     } else {
> 
>     }
> #line 2237
>     switch (_________p1___0->wire_protocol) {
>     case (__u32 )3: 
> #line 2239
>     dp_flags = dp_flags | 256U;
> #line 2240
>     goto ldv_53148;
>     case (__u32 )2: 
> #line 2242
>     dp_flags = dp_flags | 128U;
> #line 2243
>     goto ldv_53148;
>     }
>     ldv_53148: 
> #line 2245
>     rcu_read_unlock();
>   } else {
> 
25269,25280c25507,25512
<   ldv_52595: ;
< #line 1952
<   if ((int )mdev->state.ldv_39979.pdsk <= 3) {
< #line 1954
<     __drbd_set_out_of_sync(mdev, e->sector, (int )e->size, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<                            1954U);
< #line 1955
<     e->flags = e->flags | 1UL;
< #line 1956
<     e->flags = e->flags & 0xfffffffffffffffdUL;
< #line 1957
<     drbd_al_begin_io(mdev, e->sector);
---
> #line 2248
>   if ((dp_flags & 256U) != 0U) {
> #line 2249
>     peer_req->flags = peer_req->flags | 64UL;
> #line 2250
>     inc_unacked(mdev);
25284,25289c25516,25519
< #line 1960
<   tmp___22 = drbd_submit_ee(mdev, e, (unsigned int const   )rw, 4);
< #line 1960
<   if (tmp___22 == 0) {
< #line 1961
<     return (1);
---
> #line 2255
>   if ((dp_flags & 128U) != 0U) {
> #line 2258
>     drbd_send_ack(mdev, P_RECV_ACK, peer_req);
25293c25523,25546
< #line 1964
---
> #line 2261
>   if ((int )mdev->state.ldv_50103.pdsk <= 3) {
> #line 2263
>     __drbd_set_out_of_sync(mdev, peer_req->i.sector, (int )peer_req->i.size, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>                            2263U);
> #line 2264
>     peer_req->flags = peer_req->flags | 1UL;
> #line 2265
>     peer_req->flags = peer_req->flags & 0xfffffffffffffffdUL;
> #line 2266
>     drbd_al_begin_io(mdev, & peer_req->i);
>   } else {
> 
>   }
> #line 2269
>   err = drbd_submit_peer_request(mdev, peer_req, (unsigned int const   )rw, 4);
> #line 2270
>   if (err == 0) {
> #line 2271
>     return (0);
>   } else {
> 
>   }
> #line 2274
25295,25306c25548,25559
< #line 1965
<   spin_lock_irq(& mdev->req_lock);
< #line 1966
<   list_del(& e->w.list);
< #line 1967
<   hlist_del_init(& e->collision);
< #line 1968
<   spin_unlock_irq(& mdev->req_lock);
< #line 1969
<   if ((int )e->flags & 1) {
< #line 1970
<     drbd_al_complete_io(mdev, e->sector);
---
> #line 2275
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 2276
>   list_del(& peer_req->w.list);
> #line 2277
>   drbd_remove_epoch_entry_interval(mdev, peer_req);
> #line 2278
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 2279
>   if ((int )peer_req->flags & 1) {
> #line 2280
>     drbd_al_complete_io(mdev, & peer_req->i);
25311,25313c25564,25566
< #line 1973
<   drbd_may_finish_epoch(mdev, e->epoch, EV_CLEANUP);
< #line 1974
---
> #line 2283
>   drbd_may_finish_epoch(tconn, peer_req->epoch, EV_CLEANUP);
> #line 2284
25315,25318c25568,25571
< #line 1975
<   drbd_free_some_ee(mdev, e, 0);
< #line 1976
<   return (0);
---
> #line 2285
>   __drbd_free_peer_req(mdev, peer_req, 0);
> #line 2286
>   return (err);
25321c25574
< #line 1990 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2300 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
25330a25584,25588
>   unsigned int c_min_rate ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp___0 ;
>   int tmp___1 ;
25333c25591
<   int tmp___0 ;
---
>   int tmp___2 ;
25342c25600
<   int tmp___1 ;
---
>   int tmp___3 ;
25345c25603
<   unsigned long tmp___2 ;
---
>   unsigned long tmp___4 ;
25348c25606
< #line 1992
---
> #line 2302
25350c25608
< #line 1996
---
> #line 2306
25352,25354c25610,25639
< #line 1999
<   if (mdev->sync_conf.c_min_rate == 0) {
< #line 2000
---
> #line 2309
>   rcu_read_lock();
> #line 2310
>   _________p1 = *((struct disk_conf * volatile  *)(& (mdev->ldev)->disk_conf));
> #line 2310
>   tmp___0 = debug_lockdep_rcu_enabled();
> #line 2310
>   if (tmp___0 != 0 && ! __warned) {
> #line 2310
>     tmp___1 = rcu_read_lock_held();
> #line 2310
>     if (tmp___1 == 0 && 1) {
> #line 2310
>       __warned = 1;
> #line 2310
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>                              2310, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 2310
>   c_min_rate = _________p1->c_min_rate;
> #line 2311
>   rcu_read_unlock();
> #line 2314
>   if (c_min_rate == 0U) {
> #line 2315
25359c25644
< #line 2002
---
> #line 2317
25361c25646
< #line 2003
---
> #line 2318
25363c25648
< #line 2004
---
> #line 2319
25365c25650
< #line 2005
---
> #line 2320
25367c25652
< #line 2005
---
> #line 2320
25369,25373c25654,25658
< #line 2006
<     tmp___0 = constant_test_bit(2U, (unsigned long const volatile   *)(& bm_ext->flags));
< #line 2006
<     if (tmp___0 != 0) {
< #line 2007
---
> #line 2321
>     tmp___2 = constant_test_bit(2U, (unsigned long const volatile   *)(& bm_ext->flags));
> #line 2321
>     if (tmp___2 != 0) {
> #line 2322
25375c25660
< #line 2008
---
> #line 2323
25383c25668
< #line 2012
---
> #line 2327
25385c25670
< #line 2014
---
> #line 2329
25387c25672
< #line 2014
---
> #line 2329
25389,25392c25674,25677
< #line 2014
<   goto ldv_52619;
<   ldv_52618: 
< #line 2014
---
> #line 2329
>   goto ldv_53175;
>   ldv_53174: 
> #line 2329
25394c25679
< #line 2014
---
> #line 2329
25396c25681
< #line 2014
---
> #line 2329
25398,25399c25683,25684
<   ldv_52619: 
< #line 2014
---
>   ldv_53175: 
> #line 2329
25401c25686
< #line 2014
---
> #line 2329
25403,25404c25688,25689
< #line 2015
<     goto ldv_52618;
---
> #line 2330
>     goto ldv_53174;
25408c25693
< #line 2015
---
> #line 2330
25410c25695
< #line 2015
---
> #line 2330
25412,25415c25697,25700
< #line 2015
<   goto ldv_52629;
<   ldv_52628: 
< #line 2015
---
> #line 2330
>   goto ldv_53185;
>   ldv_53184: 
> #line 2330
25417c25702
< #line 2015
---
> #line 2330
25419c25704
< #line 2015
---
> #line 2330
25421,25422c25706,25707
<   ldv_52629: 
< #line 2015
---
>   ldv_53185: 
> #line 2330
25424c25709
< #line 2015
---
> #line 2330
25426,25427c25711,25712
< #line 2016
<     goto ldv_52628;
---
> #line 2331
>     goto ldv_53184;
25431,25435c25716,25720
< #line 2015
<   tmp___1 = atomic_read((atomic_t const   *)(& mdev->rs_sect_ev));
< #line 2015
<   curr_events = ((int )res + (int )res___0) - tmp___1;
< #line 2018
---
> #line 2330
>   tmp___3 = atomic_read((atomic_t const   *)(& mdev->rs_sect_ev));
> #line 2330
>   curr_events = ((int )res + (int )res___0) - tmp___3;
> #line 2333
25437c25722
< #line 2022
---
> #line 2337
25439c25724
< #line 2026
---
> #line 2341
25441,25443c25726,25728
< #line 2028
<     if ((unsigned int )*((unsigned short *)mdev + 1138UL) == 288U || (unsigned int )*((unsigned short *)mdev + 1138UL) == 304U) {
< #line 2029
---
> #line 2343
>     if ((unsigned int )*((unsigned short *)mdev + 374UL) == 288U || (unsigned int )*((unsigned short *)mdev + 374UL) == 304U) {
> #line 2344
25446,25449c25731,25734
< #line 2031
<       tmp___2 = drbd_bm_total_weight(mdev);
< #line 2031
<       rs_left = tmp___2 - mdev->rs_failed;
---
> #line 2346
>       tmp___4 = drbd_bm_total_weight(mdev);
> #line 2346
>       rs_left = tmp___4 - mdev->rs_failed;
25451c25736
< #line 2033
---
> #line 2348
25453c25738
< #line 2034
---
> #line 2349
25455c25740
< #line 2035
---
> #line 2350
25460c25745
< #line 2036
---
> #line 2351
25462c25747
< #line 2037
---
> #line 2352
25464,25466c25749,25751
< #line 2039
<     if ((unsigned long )mdev->sync_conf.c_min_rate < dbdt) {
< #line 2040
---
> #line 2354
>     if ((unsigned long )c_min_rate < dbdt) {
> #line 2355
25474c25759
< #line 2042
---
> #line 2357
25478,25479c25763,25764
< #line 2046 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int receive_DataRequest(struct drbd_conf *mdev , enum drbd_packets cmd , unsigned int digest_size ) 
---
> #line 2361 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int receive_DataRequest(struct drbd_tconn *tconn , struct packet_info *pi ) 
25480a25766
>   struct drbd_conf *mdev ;
25483,25484c25769
<   sector_t tmp ;
<   struct drbd_epoch_entry *e ;
---
>   struct drbd_peer_request *peer_req ;
25490,25491c25775,25777
<   __u64 tmp___0 ;
<   __u32 tmp___1 ;
---
>   __u64 tmp ;
>   __u32 tmp___0 ;
>   int tmp___1 ;
25494c25780
<   char const   *tmp___4 ;
---
>   void *tmp___4 ;
25496,25501d25781
<   int tmp___6 ;
<   int tmp___7 ;
<   void *tmp___8 ;
<   int tmp___9 ;
<   int tmp___10 ;
<   int tmp___11 ;
25504,25508c25784,25787
<   unsigned long tmp___12 ;
<   char const   *tmp___13 ;
<   int tmp___14 ;
<   int tmp___15 ;
<   int tmp___16 ;
---
>   unsigned long tmp___6 ;
>   int tmp___7 ;
>   int tmp___8 ;
>   int tmp___9 ;
25511,25515c25790
< #line 2049
<   tmp = drbd_get_capacity(mdev->this_bdev);
< #line 2049
<   capacity = tmp;
< #line 2051
---
> #line 2367
25517,25529c25792,25815
< #line 2054
<   p = & mdev->data.rbuf.block_req;
< #line 2056
<   tmp___0 = __fswab64(p->sector);
< #line 2056
<   sector = (sector_t )tmp___0;
< #line 2057
<   tmp___1 = __fswab32(p->blksize);
< #line 2057
<   size = (int )tmp___1;
< #line 2059
<   if ((size <= 0 || (size & 511) != 0) || (unsigned int )size > 131072U) {
< #line 2060
---
> #line 2370
>   p = (struct p_block_req *)pi->data;
> #line 2372
>   mdev = vnr_to_mdev(tconn, (int )pi->vnr);
> #line 2373
>   if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
> #line 2374
>     return (-5);
>   } else {
> 
>   }
> #line 2375
>   capacity = drbd_get_capacity(mdev->this_bdev);
> #line 2377
>   tmp = __fswab64(p->sector);
> #line 2377
>   sector = (sector_t )tmp;
> #line 2378
>   tmp___0 = __fswab32(p->blksize);
> #line 2378
>   size = (int )tmp___0;
> #line 2380
>   if ((size <= 0 || (size & 511) != 0) || (unsigned int )size > 1048576U) {
> #line 2381
25531,25534c25817,25820
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             2060, (unsigned long long )sector, size);
< #line 2062
<     return (0);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>             2381, (unsigned long long )sector, size);
> #line 2383
>     return (-22);
25538c25824
< #line 2064
---
> #line 2385
25540c25826
< #line 2065
---
> #line 2386
25542,25545c25828,25831
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             2065, (unsigned long long )sector, size);
< #line 2067
<     return (0);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>             2386, (unsigned long long )sector, size);
> #line 2388
>     return (-22);
25549,25553c25835,25839
< #line 2070
<   tmp___7 = _get_ldev_if_state(mdev, D_UP_TO_DATE);
< #line 2070
<   if (tmp___7 == 0) {
< #line 2071
---
> #line 2391
>   tmp___3 = _get_ldev_if_state(mdev, D_UP_TO_DATE);
> #line 2391
>   if (tmp___3 == 0) {
> #line 2392
25555,25556c25841,25842
< #line 2072
<     switch ((unsigned int )cmd) {
---
> #line 2393
>     switch ((unsigned int )pi->cmd) {
25558c25844
< #line 2074
---
> #line 2395
25560,25561c25846,25847
< #line 2075
<     goto ldv_52648;
---
> #line 2396
>     goto ldv_53204;
25565c25851
< #line 2079
---
> #line 2400
25567,25568c25853,25854
< #line 2080
<     goto ldv_52648;
---
> #line 2401
>     goto ldv_53204;
25570c25856
< #line 2082
---
> #line 2403
25572,25586c25858,25860
< #line 2083
<     atomic_dec(& mdev->rs_pending_cnt);
< #line 2083
<     tmp___3 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
< #line 2083
<     if (tmp___3 < 0) {
< #line 2083
<       tmp___2 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
< #line 2083
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: rs_pending_cnt = %d < 0 !\n",
<               "receive_DataRequest", 2083, tmp___2);
<     } else {
< 
<     }
< #line 2084
---
> #line 2404
>     _dec_rs_pending(mdev, "receive_DataRequest", 2404);
> #line 2405
25588,25589c25862,25863
< #line 2085
<     goto ldv_52648;
---
> #line 2406
>     goto ldv_53204;
25591,25595c25865,25870
< #line 2087
<     tmp___4 = cmdname(cmd);
< #line 2087
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "unexpected command (%s) in receive_DataRequest\n",
<             tmp___4);
---
> #line 2408
>     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"),
>                          "i" (2408), "i" (12UL));
>     ldv_53211: ;
> #line 2408
>     goto ldv_53211;
25597,25598c25872,25873
<     ldv_52648: ;
< #line 2090
---
>     ldv_53204: ;
> #line 2410
25600,25604c25875,25879
< #line 2090
<       tmp___5 = ___ratelimit(& drbd_ratelimit_state, "receive_DataRequest");
< #line 2090
<       if (tmp___5 != 0) {
< #line 2091
---
> #line 2410
>       tmp___1 = ___ratelimit(& drbd_ratelimit_state, "receive_DataRequest");
> #line 2410
>       if (tmp___1 != 0) {
> #line 2411
25612,25615c25887,25890
< #line 2095
<     tmp___6 = drbd_drain_block(mdev, (int )digest_size);
< #line 2095
<     return (tmp___6);
---
> #line 2415
>     tmp___2 = drbd_drain_block(mdev, (int )pi->size);
> #line 2415
>     return (tmp___2);
25619,25623c25894,25898
< #line 2101
<   e = drbd_alloc_ee(mdev, p->block_id, sector, (unsigned int )size, 16U);
< #line 2102
<   if ((unsigned long )e == (unsigned long )((struct drbd_epoch_entry *)0)) {
< #line 2103
---
> #line 2421
>   peer_req = drbd_alloc_peer_req(mdev, p->block_id, sector, (unsigned int )size, 16U);
> #line 2422
>   if ((unsigned long )peer_req == (unsigned long )((struct drbd_peer_request *)0)) {
> #line 2423
25625,25626c25900,25901
< #line 2104
<     return (0);
---
> #line 2424
>     return (-12);
25630,25631c25905,25906
< #line 2107
<   switch ((unsigned int )cmd) {
---
> #line 2427
>   switch ((unsigned int )pi->cmd) {
25633,25635c25908,25910
< #line 2109
<   e->w.cb = & w_e_end_data_req;
< #line 2110
---
> #line 2429
>   peer_req->w.cb = & w_e_end_data_req;
> #line 2430
25637c25912
< #line 2112
---
> #line 2432
25640,25642c25915,25917
< #line 2115
<   e->w.cb = & w_e_end_rsdata_req;
< #line 2116
---
> #line 2435
>   peer_req->w.cb = & w_e_end_rsdata_req;
> #line 2436
25644c25919
< #line 2118
---
> #line 2438
25646,25647c25921,25922
< #line 2119
<   goto ldv_52661;
---
> #line 2439
>   goto ldv_53215;
25650c25925
< #line 2123
---
> #line 2443
25652,25656c25927,25931
< #line 2124
<   tmp___8 = kmalloc((unsigned long )digest_size + 16UL, 16U);
< #line 2124
<   di = (struct digest_info *)tmp___8;
< #line 2125
---
> #line 2444
>   tmp___4 = kmalloc((unsigned long )pi->size + 16UL, 16U);
> #line 2444
>   di = (struct digest_info *)tmp___4;
> #line 2445
25658c25933
< #line 2126
---
> #line 2446
25663,25665c25938,25940
< #line 2128
<   di->digest_size = (int )digest_size;
< #line 2129
---
> #line 2448
>   di->digest_size = (int )pi->size;
> #line 2449
25667,25675c25942,25950
< #line 2131
<   e->ldv_49189.digest = di;
< #line 2132
<   e->flags = e->flags | 16UL;
< #line 2134
<   tmp___9 = drbd_recv(mdev, di->digest, (size_t )digest_size);
< #line 2134
<   if ((unsigned int )tmp___9 != digest_size) {
< #line 2135
---
> #line 2451
>   peer_req->ldv_50490.digest = di;
> #line 2452
>   peer_req->flags = peer_req->flags | 16UL;
> #line 2454
>   tmp___5 = drbd_recv_all(mdev->tconn, di->digest, (size_t )pi->size);
> #line 2454
>   if (tmp___5 != 0) {
> #line 2455
25680,25687c25955,25962
< #line 2137
<   if ((unsigned int )cmd == 33U) {
< #line 2138
<     if (mdev->agreed_pro_version <= 88) {
< #line 2138
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mdev->agreed_pro_version >= 89 ) in %s:%d\n",
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<               2138);
---
> #line 2457
>   if ((unsigned int )pi->cmd == 33U) {
> #line 2458
>     if ((mdev->tconn)->agreed_pro_version <= 88) {
> #line 2458
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mdev->tconn->agreed_pro_version >= 89 ) in %s:%d\n",
>               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>               2458);
25691,25693c25966,25968
< #line 2139
<     e->w.cb = & w_e_end_csum_rs_req;
< #line 2141
---
> #line 2459
>     peer_req->w.cb = & w_e_end_csum_rs_req;
> #line 2461
25696,25698c25971,25973
< #line 2142
<   if ((unsigned int )cmd == 31U) {
< #line 2144
---
> #line 2462
>   if ((unsigned int )pi->cmd == 31U) {
> #line 2464
25700,25716c25975,25979
< #line 2145
<     e->w.cb = & w_e_end_ov_reply;
< #line 2146
<     atomic_dec(& mdev->rs_pending_cnt);
< #line 2146
<     tmp___11 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
< #line 2146
<     if (tmp___11 < 0) {
< #line 2146
<       tmp___10 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
< #line 2146
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: rs_pending_cnt = %d < 0 !\n",
<               "receive_DataRequest", 2146, tmp___10);
<     } else {
< 
<     }
< #line 2149
---
> #line 2465
>     peer_req->w.cb = & w_e_end_ov_reply;
> #line 2466
>     _dec_rs_pending(mdev, "receive_DataRequest", 2466);
> #line 2469
25721,25722c25984,25985
< #line 2151
<   goto ldv_52661;
---
> #line 2471
>   goto ldv_53215;
25724,25726c25987,25989
< #line 2154
<   if (mdev->ov_start_sector == 0xffffffffffffffffUL && mdev->agreed_pro_version > 89) {
< #line 2156
---
> #line 2474
>   if (mdev->ov_start_sector == 0xffffffffffffffffUL && (mdev->tconn)->agreed_pro_version > 89) {
> #line 2476
25728c25991
< #line 2158
---
> #line 2478
25730c25993
< #line 2159
---
> #line 2479
25732,25736c25995,25999
< #line 2160
<     tmp___12 = drbd_bm_bits(mdev);
< #line 2160
<     mdev->ov_left = tmp___12 - (sector >> 3);
< #line 2161
---
> #line 2480
>     tmp___6 = drbd_bm_bits(mdev);
> #line 2480
>     mdev->ov_left = tmp___6 - (sector >> 3);
> #line 2481
25738c26001
< #line 2162
---
> #line 2482
25740,25743c26003,26006
< #line 2162
<     goto ldv_52673;
<     ldv_52672: 
< #line 2163
---
> #line 2482
>     goto ldv_53224;
>     ldv_53223: 
> #line 2483
25745c26008
< #line 2164
---
> #line 2484
25747c26010
< #line 2162
---
> #line 2482
25749,25750c26012,26013
<     ldv_52673: ;
< #line 2162
---
>     ldv_53224: ;
> #line 2482
25752,25753c26015,26016
< #line 2163
<       goto ldv_52672;
---
> #line 2483
>       goto ldv_53223;
25757c26020
< #line 2166
---
> #line 2486
25763,25765c26026,26028
< #line 2169
<   e->w.cb = & w_e_end_ov_req;
< #line 2170
---
> #line 2489
>   peer_req->w.cb = & w_e_end_ov_req;
> #line 2490
25767,25768c26030,26031
< #line 2171
<   goto ldv_52661;
---
> #line 2491
>   goto ldv_53215;
25770,25778c26033,26038
< #line 2174
<   tmp___13 = cmdname(cmd);
< #line 2174
<   dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "unexpected command (%s) in receive_DataRequest\n",
<           tmp___13);
< #line 2176
<   fault_type = 10U;
< #line 2177
<   goto out_free_e;
---
> #line 2494
>   __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"),
>                        "i" (2494), "i" (12UL));
>   ldv_53227: ;
> #line 2494
>   goto ldv_53227;
25780,25787c26040,26047
<   ldv_52661: ;
< #line 2202
<   if ((unsigned int )*((unsigned char *)mdev + 2276UL) != 4U) {
< #line 2202
<     tmp___14 = drbd_rs_should_slow_down(mdev, sector);
< #line 2202
<     if (tmp___14 != 0) {
< #line 2203
---
>   ldv_53215: ;
> #line 2519
>   if ((unsigned int )*((unsigned char *)mdev + 748UL) != 4U) {
> #line 2519
>     tmp___7 = drbd_rs_should_slow_down(mdev, sector);
> #line 2519
>     if (tmp___7 != 0) {
> #line 2520
25795,25799c26055,26059
< #line 2204
<   tmp___15 = drbd_rs_begin_io(mdev, sector);
< #line 2204
<   if (tmp___15 != 0) {
< #line 2205
---
> #line 2521
>   tmp___8 = drbd_rs_begin_io(mdev, sector);
> #line 2521
>   if (tmp___8 != 0) {
> #line 2522
25805c26065
< #line 2208
---
> #line 2525
25808c26068
< #line 2211
---
> #line 2528
25810,25821c26070,26081
< #line 2212
<   spin_lock_irq(& mdev->req_lock);
< #line 2213
<   list_add_tail(& e->w.list, & mdev->read_ee);
< #line 2214
<   spin_unlock_irq(& mdev->req_lock);
< #line 2216
<   tmp___16 = drbd_submit_ee(mdev, e, 0U, (int const   )fault_type);
< #line 2216
<   if (tmp___16 == 0) {
< #line 2217
<     return (1);
---
> #line 2529
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 2530
>   list_add_tail(& peer_req->w.list, & mdev->read_ee);
> #line 2531
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 2533
>   tmp___9 = drbd_submit_peer_request(mdev, peer_req, 0U, (int const   )fault_type);
> #line 2533
>   if (tmp___9 == 0) {
> #line 2534
>     return (0);
25825c26085
< #line 2220
---
> #line 2537
25827,25832c26087,26092
< #line 2221
<   spin_lock_irq(& mdev->req_lock);
< #line 2222
<   list_del(& e->w.list);
< #line 2223
<   spin_unlock_irq(& mdev->req_lock);
---
> #line 2538
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 2539
>   list_del(& peer_req->w.list);
> #line 2540
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
25834c26094
< #line 2227
---
> #line 2544
25836,25839c26096,26099
< #line 2228
<   drbd_free_some_ee(mdev, e, 0);
< #line 2229
<   return (0);
---
> #line 2545
>   __drbd_free_peer_req(mdev, peer_req, 0);
> #line 2546
>   return (-5);
25842c26102
< #line 2232 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2549 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
25849a26110,26112
>   enum drbd_after_sb_p after_sb_0p ;
>   struct net_conf *_________p1 ;
>   bool __warned ;
25851a26115,26116
>   int tmp___1 ;
>   int tmp___2 ;
25854c26119
< #line 2234
---
> #line 2551
25856c26121
< #line 2237
---
> #line 2555
25858c26123
< #line 2238
---
> #line 2556
25860c26125
< #line 2240
---
> #line 2558
25862c26127
< #line 2241
---
> #line 2559
25864,25869c26129,26162
< #line 2243
<   switch ((mdev->net_conf)->after_sb_0p) {
<   case 7: ;
<   case 8: ;
<   case 9: 
< #line 2247
---
> #line 2561
>   rcu_read_lock();
> #line 2562
>   _________p1 = *((struct net_conf * volatile  *)(& (mdev->tconn)->net_conf));
> #line 2562
>   tmp = debug_lockdep_rcu_enabled();
> #line 2562
>   if (tmp != 0 && ! __warned) {
> #line 2562
>     tmp___0 = rcu_read_lock_held();
> #line 2562
>     if (tmp___0 == 0 && 1) {
> #line 2562
>       __warned = 1;
> #line 2562
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>                              2562, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 2562
>   after_sb_0p = (enum drbd_after_sb_p )_________p1->after_sb_0p;
> #line 2563
>   rcu_read_unlock();
> #line 2564
>   switch ((unsigned int )after_sb_0p) {
>   case 7U: ;
>   case 8U: ;
>   case 9U: ;
>   case 10U: 
> #line 2569
25871,25877c26164,26170
< #line 2248
<   goto ldv_52687;
<   case 0: ;
< #line 2250
<   goto ldv_52687;
<   case 1: ;
< #line 2252
---
> #line 2570
>   goto ldv_53244;
>   case 0U: ;
> #line 2572
>   goto ldv_53244;
>   case 1U: ;
> #line 2574
25879c26172
< #line 2253
---
> #line 2575
25881,25882c26174,26175
< #line 2254
<     goto ldv_52687;
---
> #line 2576
>     goto ldv_53244;
25886c26179
< #line 2256
---
> #line 2578
25888c26181
< #line 2257
---
> #line 2579
25890,25891c26183,26184
< #line 2258
<     goto ldv_52687;
---
> #line 2580
>     goto ldv_53244;
25895,25896c26188,26189
<   case 2: ;
< #line 2262
---
>   case 2U: ;
> #line 2584
25898c26191
< #line 2263
---
> #line 2585
25900,25901c26193,26194
< #line 2264
<     goto ldv_52687;
---
> #line 2586
>     goto ldv_53244;
25905c26198
< #line 2266
---
> #line 2588
25907c26200
< #line 2267
---
> #line 2589
25909,25910c26202,26203
< #line 2268
<     goto ldv_52687;
---
> #line 2590
>     goto ldv_53244;
25914c26207
< #line 2271
---
> #line 2593
25916,25917c26209,26210
<   case 3: ;
< #line 2274
---
>   case 3U: ;
> #line 2596
25919,25924c26212,26217
< #line 2275
<     tmp = drbd_test_flag(mdev, DISCARD_CONCURRENT);
< #line 2275
<     rv = tmp != 0 ? -1 : 1;
< #line 2277
<     goto ldv_52687;
---
> #line 2597
>     tmp___1 = constant_test_bit(1U, (unsigned long const volatile   *)(& (mdev->tconn)->flags));
> #line 2597
>     rv = tmp___1 != 0 ? -1 : 1;
> #line 2599
>     goto ldv_53244;
25926c26219
< #line 2279
---
> #line 2601
25928c26221
< #line 2279
---
> #line 2601
25930,25931c26223,26224
< #line 2279
<       goto ldv_52687;
---
> #line 2601
>       goto ldv_53244;
25935c26228
< #line 2280
---
> #line 2602
25937c26230
< #line 2280
---
> #line 2602
25939,25940c26232,26233
< #line 2280
<       goto ldv_52687;
---
> #line 2602
>       goto ldv_53244;
25945,25948c26238,26241
< #line 2282
<   if ((mdev->net_conf)->after_sb_0p == 3) {
< #line 2283
<     goto ldv_52687;
---
> #line 2604
>   if ((unsigned int )after_sb_0p == 3U) {
> #line 2605
>     goto ldv_53244;
25952,25953c26245,26246
<   case 4: ;
< #line 2285
---
>   case 4U: ;
> #line 2607
25955c26248
< #line 2286
---
> #line 2608
25958c26251
< #line 2287
---
> #line 2609
25960c26253
< #line 2288
---
> #line 2610
25963,25966c26256,26259
< #line 2291
<     tmp___0 = drbd_test_flag(mdev, DISCARD_CONCURRENT);
< #line 2291
<     rv = tmp___0 != 0 ? -1 : 1;
---
> #line 2613
>     tmp___2 = constant_test_bit(1U, (unsigned long const volatile   *)(& (mdev->tconn)->flags));
> #line 2613
>     rv = tmp___2 != 0 ? -1 : 1;
25968,25971c26261,26264
< #line 2293
<   goto ldv_52687;
<   case 5: 
< #line 2295
---
> #line 2615
>   goto ldv_53244;
>   case 5U: 
> #line 2617
25973,25976c26266,26269
< #line 2296
<   goto ldv_52687;
<   case 6: 
< #line 2298
---
> #line 2618
>   goto ldv_53244;
>   case 6U: 
> #line 2620
25979,25980c26272,26273
<   ldv_52687: ;
< #line 2301
---
>   ldv_53244: ;
> #line 2623
25984c26277
< #line 2304 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2626 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
25988a26282,26286
>   enum drbd_after_sb_p after_sb_1p ;
>   struct net_conf *_________p1 ;
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
25994c26292
< #line 2306
---
> #line 2628
25996,26003c26294,26329
< #line 2308
<   switch ((mdev->net_conf)->after_sb_1p) {
<   case 1: ;
<   case 2: ;
<   case 4: ;
<   case 5: ;
<   case 6: 
< #line 2314
---
> #line 2631
>   rcu_read_lock();
> #line 2632
>   _________p1 = *((struct net_conf * volatile  *)(& (mdev->tconn)->net_conf));
> #line 2632
>   tmp = debug_lockdep_rcu_enabled();
> #line 2632
>   if (tmp != 0 && ! __warned) {
> #line 2632
>     tmp___0 = rcu_read_lock_held();
> #line 2632
>     if (tmp___0 == 0 && 1) {
> #line 2632
>       __warned = 1;
> #line 2632
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>                              2632, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 2632
>   after_sb_1p = (enum drbd_after_sb_p )_________p1->after_sb_1p;
> #line 2633
>   rcu_read_unlock();
> #line 2634
>   switch ((unsigned int )after_sb_1p) {
>   case 1U: ;
>   case 2U: ;
>   case 4U: ;
>   case 5U: ;
>   case 6U: ;
>   case 3U: 
> #line 2641
26005,26011c26331,26337
< #line 2315
<   goto ldv_52705;
<   case 0: ;
< #line 2317
<   goto ldv_52705;
<   case 7: 
< #line 2319
---
> #line 2642
>   goto ldv_53267;
>   case 0U: ;
> #line 2644
>   goto ldv_53267;
>   case 7U: 
> #line 2646
26013,26015c26339,26341
< #line 2320
<   if (hg == -1 && (unsigned int )*((unsigned char *)mdev + 2276UL) == 2U) {
< #line 2321
---
> #line 2647
>   if (hg == -1 && (unsigned int )*((unsigned char *)mdev + 748UL) == 2U) {
> #line 2648
26020,26022c26346,26348
< #line 2322
<   if (hg == 1 && (unsigned int )*((unsigned char *)mdev + 2276UL) == 1U) {
< #line 2323
---
> #line 2649
>   if (hg == 1 && (unsigned int )*((unsigned char *)mdev + 748UL) == 1U) {
> #line 2650
26027,26030c26353,26356
< #line 2324
<   goto ldv_52705;
<   case 10: 
< #line 2326
---
> #line 2651
>   goto ldv_53267;
>   case 10U: 
> #line 2653
26032,26038c26358,26364
< #line 2327
<   goto ldv_52705;
<   case 8: ;
< #line 2329
<   return ((unsigned int )*((unsigned char *)mdev + 2276UL) == 1U ? 1 : -1);
<   case 9: 
< #line 2331
---
> #line 2654
>   goto ldv_53267;
>   case 8U: ;
> #line 2656
>   return ((unsigned int )*((unsigned char *)mdev + 748UL) == 1U ? 1 : -1);
>   case 9U: 
> #line 2658
26040,26042c26366,26368
< #line 2332
<   if (hg == -1 && (unsigned int )*((unsigned char *)mdev + 2276UL) == 1U) {
< #line 2335
---
> #line 2659
>   if (hg == -1 && (unsigned int )*((unsigned char *)mdev + 748UL) == 1U) {
> #line 2662
26044c26370
< #line 2339
---
> #line 2666
26046,26048c26372,26374
< #line 2339
<     val.ldv_39979.role = 2U;
< #line 2339
---
> #line 2666
>     val.ldv_40604.role = 2U;
> #line 2666
26050,26052c26376,26378
< #line 2339
<     mask.ldv_39979.role = 3U;
< #line 2339
---
> #line 2666
>     mask.ldv_40604.role = 3U;
> #line 2666
26054c26380
< #line 2340
---
> #line 2667
26056c26382
< #line 2341
---
> #line 2668
26059c26385
< #line 2343
---
> #line 2670
26061c26387
< #line 2344
---
> #line 2671
26065c26391
< #line 2347
---
> #line 2674
26069,26070c26395,26396
<   ldv_52705: ;
< #line 2350
---
>   ldv_53267: ;
> #line 2677
26074c26400
< #line 2353 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2680 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
26078a26405,26409
>   enum drbd_after_sb_p after_sb_2p ;
>   struct net_conf *_________p1 ;
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
26084c26415
< #line 2355
---
> #line 2682
26086,26095c26417,26454
< #line 2357
<   switch ((mdev->net_conf)->after_sb_2p) {
<   case 1: ;
<   case 2: ;
<   case 4: ;
<   case 5: ;
<   case 6: ;
<   case 7: ;
<   case 8: 
< #line 2365
---
> #line 2685
>   rcu_read_lock();
> #line 2686
>   _________p1 = *((struct net_conf * volatile  *)(& (mdev->tconn)->net_conf));
> #line 2686
>   tmp = debug_lockdep_rcu_enabled();
> #line 2686
>   if (tmp != 0 && ! __warned) {
> #line 2686
>     tmp___0 = rcu_read_lock_held();
> #line 2686
>     if (tmp___0 == 0 && 1) {
> #line 2686
>       __warned = 1;
> #line 2686
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>                              2686, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 2686
>   after_sb_2p = (enum drbd_after_sb_p )_________p1->after_sb_2p;
> #line 2687
>   rcu_read_unlock();
> #line 2688
>   switch ((unsigned int )after_sb_2p) {
>   case 1U: ;
>   case 2U: ;
>   case 4U: ;
>   case 5U: ;
>   case 6U: ;
>   case 7U: ;
>   case 8U: ;
>   case 3U: 
> #line 2697
26097,26100c26456,26459
< #line 2366
<   goto ldv_52728;
<   case 10: 
< #line 2368
---
> #line 2698
>   goto ldv_53295;
>   case 10U: 
> #line 2700
26102,26108c26461,26467
< #line 2369
<   goto ldv_52728;
<   case 0: ;
< #line 2371
<   goto ldv_52728;
<   case 9: 
< #line 2373
---
> #line 2701
>   goto ldv_53295;
>   case 0U: ;
> #line 2703
>   goto ldv_53295;
>   case 9U: 
> #line 2705
26110c26469
< #line 2374
---
> #line 2706
26112c26471
< #line 2380
---
> #line 2712
26114,26116c26473,26475
< #line 2380
<     val.ldv_39979.role = 2U;
< #line 2380
---
> #line 2712
>     val.ldv_40604.role = 2U;
> #line 2712
26118,26120c26477,26479
< #line 2380
<     mask.ldv_39979.role = 3U;
< #line 2380
---
> #line 2712
>     mask.ldv_40604.role = 3U;
> #line 2712
26122c26481
< #line 2381
---
> #line 2713
26124c26483
< #line 2382
---
> #line 2714
26127c26486
< #line 2384
---
> #line 2716
26129c26488
< #line 2385
---
> #line 2717
26133c26492
< #line 2388
---
> #line 2720
26137,26138c26496,26497
<   ldv_52728: ;
< #line 2391
---
>   ldv_53295: ;
> #line 2723
26142c26501
< #line 2394 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2726 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
26149c26508
< #line 2397
---
> #line 2729
26151c26510
< #line 2398
---
> #line 2730
26154c26513
< #line 2399
---
> #line 2731
26159c26518
< #line 2401
---
> #line 2733
26162c26521
< #line 2402
---
> #line 2734
26166c26525
< #line 2423 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2755 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
26182c26541
< #line 2428
---
> #line 2760
26184c26543
< #line 2429
---
> #line 2761
26186c26545
< #line 2431
---
> #line 2763
26188c26547
< #line 2432
---
> #line 2764
26190c26549
< #line 2433
---
> #line 2765
26195c26554
< #line 2435
---
> #line 2767
26197c26556
< #line 2436
---
> #line 2768
26199c26558
< #line 2438
---
> #line 2770
26204c26563
< #line 2440
---
> #line 2772
26206c26565
< #line 2441
---
> #line 2773
26208c26567
< #line 2443
---
> #line 2775
26213c26572
< #line 2445
---
> #line 2777
26215c26574
< #line 2448
---
> #line 2780
26217,26219c26576,26578
< #line 2450
<       if (mdev->agreed_pro_version <= 90) {
< #line 2451
---
> #line 2782
>       if ((mdev->tconn)->agreed_pro_version <= 90) {
> #line 2783
26224c26583
< #line 2453
---
> #line 2785
26226c26585
< #line 2455
---
> #line 2787
26228c26587
< #line 2456
---
> #line 2788
26230c26589
< #line 2457
---
> #line 2789
26232c26591
< #line 2458
---
> #line 2790
26234,26236c26593,26595
< #line 2460
<         if ((int )mdev->state.ldv_39979.disk > 2) {
< #line 2460
---
> #line 2792
>         if ((int )mdev->state.ldv_50103.disk > 2) {
> #line 2792
26238c26597
< #line 2460
---
> #line 2792
26241c26600
< #line 2460
---
> #line 2792
26244c26603
< #line 2460
---
> #line 2792
26247c26606
< #line 2462
---
> #line 2794
26250c26609
< #line 2464
---
> #line 2796
26252c26611
< #line 2465
---
> #line 2797
26255c26614
< #line 2468
---
> #line 2800
26260c26619
< #line 2471
---
> #line 2803
26262,26264c26621,26623
< #line 2473
<       if (mdev->agreed_pro_version <= 90) {
< #line 2474
---
> #line 2805
>       if ((mdev->tconn)->agreed_pro_version <= 90) {
> #line 2806
26269c26628
< #line 2476
---
> #line 2808
26271c26630
< #line 2478
---
> #line 2810
26273c26632
< #line 2480
---
> #line 2812
26275c26634
< #line 2481
---
> #line 2813
26277c26636
< #line 2482
---
> #line 2814
26279c26638
< #line 2484
---
> #line 2816
26282c26641
< #line 2485
---
> #line 2817
26285c26644
< #line 2487
---
> #line 2819
26287c26646
< #line 2488
---
> #line 2820
26290c26649
< #line 2491
---
> #line 2823
26295,26297c26654,26656
< #line 2495
<     tmp___1 = drbd_test_flag(mdev, CRASHED_PRIMARY);
< #line 2495
---
> #line 2827
>     tmp___1 = constant_test_bit(5U, (unsigned long const volatile   *)(& mdev->flags));
> #line 2827
26299c26658
< #line 2499
---
> #line 2831
26301c26660
< #line 2501
---
> #line 2833
26304c26663
< #line 2502
---
> #line 2834
26307c26666
< #line 2503
---
> #line 2835
26310c26669
< #line 2504
---
> #line 2836
26313,26315c26672,26674
< #line 2506
<     dc = drbd_test_flag(mdev, DISCARD_CONCURRENT);
< #line 2507
---
> #line 2838
>     dc = constant_test_bit(1U, (unsigned long const volatile   *)(& (mdev->tconn)->flags));
> #line 2839
26321c26680
< #line 2511
---
> #line 2843
26323c26682
< #line 2512
---
> #line 2844
26325c26684
< #line 2513
---
> #line 2845
26327c26686
< #line 2514
---
> #line 2846
26332c26691
< #line 2516
---
> #line 2848
26334c26693
< #line 2517
---
> #line 2849
26336c26695
< #line 2518
---
> #line 2850
26338,26342c26697,26701
< #line 2519
<     if (mdev->agreed_pro_version <= 95 ? (((mdev->ldev)->md.uuid[2] ^ *(mdev->p_uuid + 3UL)) & 0xfffffffffffffffeULL) == 0ULL : peer + 281474976710656ULL == (*(mdev->p_uuid + 1UL) & 0xfffffffffffffffeULL)) {
< #line 2526
<       if (mdev->agreed_pro_version <= 90) {
< #line 2527
---
> #line 2851
>     if ((mdev->tconn)->agreed_pro_version <= 95 ? (((mdev->ldev)->md.uuid[2] ^ *(mdev->p_uuid + 3UL)) & 0xfffffffffffffffeULL) == 0ULL : peer + 281474976710656ULL == (*(mdev->p_uuid + 1UL) & 0xfffffffffffffffeULL)) {
> #line 2858
>       if ((mdev->tconn)->agreed_pro_version <= 90) {
> #line 2859
26347c26706
< #line 2529
---
> #line 2861
26349c26708
< #line 2530
---
> #line 2862
26351c26710
< #line 2532
---
> #line 2864
26353c26712
< #line 2533
---
> #line 2865
26355c26714
< #line 2535
---
> #line 2867
26363c26722
< #line 2539
---
> #line 2871
26365c26724
< #line 2540
---
> #line 2872
26367c26726
< #line 2541
---
> #line 2873
26369,26372c26728,26731
< #line 2541
<   goto ldv_52759;
<   ldv_52758: 
< #line 2542
---
> #line 2873
>   goto ldv_53326;
>   ldv_53325: 
> #line 2874
26374c26733
< #line 2543
---
> #line 2875
26376c26735
< #line 2544
---
> #line 2876
26381c26740
< #line 2541
---
> #line 2873
26383,26384c26742,26743
<   ldv_52759: ;
< #line 2541
---
>   ldv_53326: ;
> #line 2873
26386,26387c26745,26746
< #line 2542
<     goto ldv_52758;
---
> #line 2874
>     goto ldv_53325;
26391c26750
< #line 2547
---
> #line 2879
26393c26752
< #line 2548
---
> #line 2880
26395c26754
< #line 2549
---
> #line 2881
26397c26756
< #line 2550
---
> #line 2882
26399c26758
< #line 2551
---
> #line 2883
26404c26763
< #line 2553
---
> #line 2885
26406c26765
< #line 2554
---
> #line 2886
26408c26767
< #line 2555
---
> #line 2887
26410,26414c26769,26773
< #line 2556
<     if (mdev->agreed_pro_version <= 95 ? (((mdev->ldev)->md.uuid[3] ^ *(mdev->p_uuid + 2UL)) & 0xfffffffffffffffeULL) == 0ULL : self + 281474976710656ULL == ((mdev->ldev)->md.uuid[1] & 0xfffffffffffffffeULL)) {
< #line 2563
<       if (mdev->agreed_pro_version <= 90) {
< #line 2564
---
> #line 2888
>     if ((mdev->tconn)->agreed_pro_version <= 95 ? (((mdev->ldev)->md.uuid[3] ^ *(mdev->p_uuid + 2UL)) & 0xfffffffffffffffeULL) == 0ULL : self + 281474976710656ULL == ((mdev->ldev)->md.uuid[1] & 0xfffffffffffffffeULL)) {
> #line 2895
>       if ((mdev->tconn)->agreed_pro_version <= 90) {
> #line 2896
26419c26778
< #line 2566
---
> #line 2898
26421c26780
< #line 2567
---
> #line 2899
26423c26782
< #line 2569
---
> #line 2901
26425,26427c26784,26786
< #line 2570
<       if ((int )mdev->state.ldv_39979.disk > 2) {
< #line 2570
---
> #line 2902
>       if ((int )mdev->state.ldv_50103.disk > 2) {
> #line 2902
26429c26788
< #line 2570
---
> #line 2902
26432c26791
< #line 2570
---
> #line 2902
26435c26794
< #line 2570
---
> #line 2902
26438c26797
< #line 2573
---
> #line 2905
26446c26805
< #line 2578
---
> #line 2910
26448c26807
< #line 2579
---
> #line 2911
26450c26809
< #line 2580
---
> #line 2912
26452,26455c26811,26814
< #line 2580
<   goto ldv_52762;
<   ldv_52761: 
< #line 2581
---
> #line 2912
>   goto ldv_53329;
>   ldv_53328: 
> #line 2913
26457c26816
< #line 2582
---
> #line 2914
26459c26818
< #line 2583
---
> #line 2915
26464c26823
< #line 2580
---
> #line 2912
26466,26467c26825,26826
<   ldv_52762: ;
< #line 2580
---
>   ldv_53329: ;
> #line 2912
26469,26470c26828,26829
< #line 2581
<     goto ldv_52761;
---
> #line 2913
>     goto ldv_53328;
26474c26833
< #line 2586
---
> #line 2918
26476c26835
< #line 2587
---
> #line 2919
26478c26837
< #line 2588
---
> #line 2920
26480c26839
< #line 2589
---
> #line 2921
26482c26841
< #line 2590
---
> #line 2922
26487c26846
< #line 2592
---
> #line 2924
26489c26848
< #line 2593
---
> #line 2925
26491,26494c26850,26853
< #line 2593
<   goto ldv_52768;
<   ldv_52767: 
< #line 2594
---
> #line 2925
>   goto ldv_53335;
>   ldv_53334: 
> #line 2926
26496c26855
< #line 2595
---
> #line 2927
26498,26501c26857,26860
< #line 2595
<   goto ldv_52765;
<   ldv_52764: 
< #line 2596
---
> #line 2927
>   goto ldv_53332;
>   ldv_53331: 
> #line 2928
26503c26862
< #line 2597
---
> #line 2929
26505c26864
< #line 2598
---
> #line 2930
26510c26869
< #line 2595
---
> #line 2927
26512,26513c26871,26872
<   ldv_52765: ;
< #line 2595
---
>   ldv_53332: ;
> #line 2927
26515,26516c26874,26875
< #line 2596
<     goto ldv_52764;
---
> #line 2928
>     goto ldv_53331;
26520c26879
< #line 2593
---
> #line 2925
26522,26523c26881,26882
<   ldv_52768: ;
< #line 2593
---
>   ldv_53335: ;
> #line 2925
26525,26526c26884,26885
< #line 2594
<     goto ldv_52767;
---
> #line 2926
>     goto ldv_53334;
26531c26890
< #line 2602
---
> #line 2934
26535c26894
< #line 2608 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2940 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
26539,26540d26897
<   int hg ;
<   int rule_nr ;
26542a26900,26904
>   struct net_conf *nc ;
>   int hg ;
>   int rule_nr ;
>   int rr_conflict ;
>   int tentative ;
26548a26911,26914
>   struct net_conf *_________p1 ;
>   bool __warned ;
>   int tmp___0 ;
>   int tmp___1 ;
26552a26919,26920
>   int tmp___2 ;
>   int tmp___3 ;
26557,26559c26925,26927
<   char const   *tmp___0 ;
<   int tmp___1 ;
<   int tmp___2 ;
---
>   char const   *tmp___4 ;
>   int tmp___5 ;
>   int tmp___6 ;
26562,26563c26930,26931
<   unsigned long tmp___3 ;
<   unsigned long tmp___4 ;
---
>   unsigned long tmp___7 ;
>   unsigned long tmp___8 ;
26566c26934
< #line 2612
---
> #line 2943
26568,26570c26936,26938
< #line 2615
<   mydisk = (enum drbd_disk_state )mdev->state.ldv_39979.disk;
< #line 2616
---
> #line 2948
>   mydisk = (enum drbd_disk_state )mdev->state.ldv_50103.disk;
> #line 2949
26572,26573c26940,26941
< #line 2617
<     mydisk = (enum drbd_disk_state )mdev->new_state_tmp.ldv_39979.disk;
---
> #line 2950
>     mydisk = (enum drbd_disk_state )mdev->new_state_tmp.ldv_40604.disk;
26577c26945
< #line 2619
---
> #line 2952
26579c26947
< #line 2621
---
> #line 2954
26581c26949
< #line 2622
---
> #line 2955
26584c26952
< #line 2623
---
> #line 2956
26586c26954
< #line 2626
---
> #line 2959
26588c26956
< #line 2627
---
> #line 2960
26590c26958
< #line 2629
---
> #line 2962
26593c26961
< #line 2631
---
> #line 2964
26595c26963
< #line 2632
---
> #line 2965
26597c26965
< #line 2633
---
> #line 2966
26602c26970
< #line 2635
---
> #line 2968
26604c26972
< #line 2636
---
> #line 2969
26607c26975
< #line 2637
---
> #line 2970
26612c26980
< #line 2640
---
> #line 2973
26614c26982
< #line 2642
---
> #line 2975
26616c26984
< #line 2642
---
> #line 2975
26619c26987
< #line 2642
---
> #line 2975
26621c26989
< #line 2642
---
> #line 2975
26623c26991
< #line 2642
---
> #line 2975
26625c26993
< #line 2642
---
> #line 2975
26628c26996
< #line 2642
---
> #line 2975
26632c27000
< #line 2642
---
> #line 2975
26634c27002
< #line 2643
---
> #line 2976
26636c27004
< #line 2644
---
> #line 2977
26638c27006
< #line 2645
---
> #line 2978
26643c27011
< #line 2646
---
> #line 2979
26649c27017
< #line 2650
---
> #line 2983
26651c27019
< #line 2650
---
> #line 2983
26653c27021
< #line 2650
---
> #line 2983
26655c27023
< #line 2651
---
> #line 2984
26660,26664c27028,27057
< #line 2653
<   if (hg == 100 || (hg == -100 && (unsigned int )*((unsigned char *)mdev->net_conf + 540UL) != 0U)) {
< #line 2654
<     pcount = ((unsigned int )*((unsigned char *)mdev + 2276UL) == 1U) + ((unsigned int )peer_role == 1U);
< #line 2656
---
> #line 2986
>   rcu_read_lock();
> #line 2987
>   _________p1 = *((struct net_conf * volatile  *)(& (mdev->tconn)->net_conf));
> #line 2987
>   tmp___0 = debug_lockdep_rcu_enabled();
> #line 2987
>   if (tmp___0 != 0 && ! __warned) {
> #line 2987
>     tmp___1 = rcu_read_lock_held();
> #line 2987
>     if (tmp___1 == 0 && 1) {
> #line 2987
>       __warned = 1;
> #line 2987
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>                              2987, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 2987
>   nc = _________p1;
> #line 2989
>   if (hg == 100 || (hg == -100 && (int )((signed char )nc->always_asbp) != 0)) {
> #line 2990
>     pcount = ((unsigned int )*((unsigned char *)mdev + 748UL) == 1U) + ((unsigned int )peer_role == 1U);
> #line 2992
26666c27059
< #line 2658
---
> #line 2994
26669c27062
< #line 2660
---
> #line 2996
26671,26672c27064,27065
< #line 2661
<     goto ldv_52791;
---
> #line 2997
>     goto ldv_53364;
26674c27067
< #line 2663
---
> #line 2999
26676,26677c27069,27070
< #line 2664
<     goto ldv_52791;
---
> #line 3000
>     goto ldv_53364;
26679c27072
< #line 2666
---
> #line 3002
26681,26682c27074,27075
< #line 2667
<     goto ldv_52791;
---
> #line 3003
>     goto ldv_53364;
26684,26685c27077,27078
<     ldv_52791: 
< #line 2669
---
>     ldv_53364: 
> #line 3005
26687c27080
< #line 2669
---
> #line 3005
26689c27082
< #line 2669
---
> #line 3005
26691c27084
< #line 2670
---
> #line 3006
26694c27087
< #line 2673
---
> #line 3009
26696c27089
< #line 2674
---
> #line 3010
26698c27091
< #line 2676
---
> #line 3012
26709c27102
< #line 2681
---
> #line 3017
26711,26713c27104,27108
< #line 2682
<     if ((unsigned int )*((unsigned char *)mdev->net_conf + 540UL) != 0U && (*(mdev->p_uuid + 5UL) & 1ULL) == 0ULL) {
< #line 2683
---
> #line 3018
>     tmp___2 = constant_test_bit(21U, (unsigned long const volatile   *)(& mdev->flags));
> #line 3018
>     if (tmp___2 != 0 && (*(mdev->p_uuid + 5UL) & 1ULL) == 0ULL) {
> #line 3019
26718,26720c27113,27117
< #line 2684
<     if ((unsigned int )*((unsigned char *)mdev->net_conf + 540UL) == 0U && (int )*(mdev->p_uuid + 5UL) & 1) {
< #line 2685
---
> #line 3020
>     tmp___3 = constant_test_bit(21U, (unsigned long const volatile   *)(& mdev->flags));
> #line 3020
>     if (tmp___3 == 0 && (int )*(mdev->p_uuid + 5UL) & 1) {
> #line 3021
26725c27122
< #line 2687
---
> #line 3023
26727c27124
< #line 2687
---
> #line 3023
26729c27126
< #line 2687
---
> #line 3023
26731c27128
< #line 2688
---
> #line 3024
26740c27137,27143
< #line 2693
---
> #line 3028
>   rr_conflict = (int )nc->rr_conflict;
> #line 3029
>   tentative = (int )nc->tentative;
> #line 3030
>   rcu_read_unlock();
> #line 3032
26742c27145
< #line 2698
---
> #line 3037
26744c27147
< #line 2699
---
> #line 3038
26746c27149
< #line 2700
---
> #line 3039
26751c27154
< #line 2703
---
> #line 3042
26753c27156
< #line 2704
---
> #line 3043
26755c27158
< #line 2705
---
> #line 3044
26760,26763c27163,27166
< #line 2708
<   if ((hg < 0 && (unsigned int )*((unsigned char *)mdev + 2276UL) == 1U) && (int )mdev->state.ldv_39979.disk > 6) {
< #line 2710
<     switch ((mdev->net_conf)->rr_conflict) {
---
> #line 3047
>   if ((hg < 0 && (unsigned int )*((unsigned char *)mdev + 748UL) == 1U) && (int )mdev->state.ldv_50103.disk > 6) {
> #line 3049
>     switch (rr_conflict) {
26765c27168
< #line 2712
---
> #line 3051
26768c27171
< #line 2715
---
> #line 3054
26770c27173
< #line 2716
---
> #line 3055
26773c27176
< #line 2718
---
> #line 3057
26779,26781c27182,27184
< #line 2723
<   if ((unsigned int )*((unsigned char *)mdev->net_conf + 540UL) != 0U) {
< #line 2723
---
> #line 3062
>   if (tentative != 0) {
> #line 3062
26784,26787c27187,27190
< #line 2723
<     tmp___1 = drbd_test_flag(mdev, CONN_DRY_RUN);
< #line 2723
<     if (tmp___1 != 0) {
---
> #line 3062
>     tmp___5 = constant_test_bit(8U, (unsigned long const volatile   *)(& (mdev->tconn)->flags));
> #line 3062
>     if (tmp___5 != 0) {
26789c27192
< #line 2724
---
> #line 3063
26791c27194
< #line 2725
---
> #line 3064
26794c27197
< #line 2727
---
> #line 3066
26796c27199
< #line 2727
---
> #line 3066
26798,26800c27201,27203
< #line 2727
<         tmp___0 = drbd_conn_str(hg > 0 ? C_SYNC_SOURCE : C_SYNC_TARGET);
< #line 2727
---
> #line 3066
>         tmp___4 = drbd_conn_str(hg > 0 ? C_SYNC_SOURCE : C_SYNC_TARGET);
> #line 3066
26802c27205
<                   tmp___0, ret___3 > 1L ? (char *)"full" : (char *)"bit-map based");
---
>                   tmp___4, ret___3 > 1L ? (char *)"full" : (char *)"bit-map based");
26804c27207
< #line 2730
---
> #line 3069
26810c27213
< #line 2733
---
> #line 3072
26812c27215
< #line 2733
---
> #line 3072
26814c27217
< #line 2733
---
> #line 3072
26816c27219
< #line 2734
---
> #line 3073
26818,26819c27221,27222
< #line 2735
<     tmp___2 = drbd_bitmap_io(mdev, & drbd_bmio_set_n_write, (char *)"set_n_write from sync_handshake",
---
> #line 3074
>     tmp___6 = drbd_bitmap_io(mdev, & drbd_bmio_set_n_write, (char *)"set_n_write from sync_handshake",
26821,26823c27224,27226
< #line 2735
<     if (tmp___2 != 0) {
< #line 2737
---
> #line 3074
>     if (tmp___6 != 0) {
> #line 3076
26831c27234
< #line 2740
---
> #line 3079
26833c27236
< #line 2741
---
> #line 3080
26836c27239
< #line 2742
---
> #line 3081
26838c27241
< #line 2743
---
> #line 3082
26841c27244
< #line 2745
---
> #line 3084
26843,26849c27246,27252
< #line 2746
<     tmp___4 = drbd_bm_total_weight(mdev);
< #line 2746
<     if (tmp___4 != 0UL) {
< #line 2747
<       tmp___3 = drbd_bm_total_weight(mdev);
< #line 2747
---
> #line 3085
>     tmp___8 = drbd_bm_total_weight(mdev);
> #line 3085
>     if (tmp___8 != 0UL) {
> #line 3086
>       tmp___7 = drbd_bm_total_weight(mdev);
> #line 3086
26851c27254
<                 tmp___3);
---
>                 tmp___7);
26856c27259
< #line 2752
---
> #line 3091
26860,26861c27263,27264
< #line 2756 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int cmp_after_sb(enum drbd_after_sb_p peer , enum drbd_after_sb_p self ) 
---
> #line 3094 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static enum drbd_after_sb_p convert_after_sb(enum drbd_after_sb_p peer ) 
26866,26876c27269,27272
< #line 2759
<   if (((unsigned int )peer == 6U && (unsigned int )self == 5U) || ((unsigned int )self == 6U && (unsigned int )peer == 5U)) {
< #line 2761
<     return (0);
<   } else {
< 
<   }
< #line 2764
<   if ((((unsigned int )peer == 6U || (unsigned int )peer == 5U) || (unsigned int )self == 6U) || (unsigned int )self == 5U) {
< #line 2766
<     return (1);
---
> #line 3097
>   if ((unsigned int )peer == 6U) {
> #line 3098
>     return (ASB_DISCARD_LOCAL);
26880,26883c27276,27279
< #line 2769
<   if ((unsigned int )peer == (unsigned int )self) {
< #line 2770
<     return (0);
---
> #line 3101
>   if ((unsigned int )peer == 5U) {
> #line 3102
>     return (ASB_DISCARD_REMOTE);
26887,26888c27283,27284
< #line 2773
<   return (1);
---
> #line 3105
>   return (peer);
26891,26892c27287,27288
< #line 2776 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int receive_protocol(struct drbd_conf *mdev , enum drbd_packets cmd , unsigned int data_size ) 
---
> #line 3108 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int receive_protocol(struct drbd_tconn *tconn , struct packet_info *pi ) 
26894a27291,27293
>   enum drbd_after_sb_p p_after_sb_0p ;
>   enum drbd_after_sb_p p_after_sb_1p ;
>   enum drbd_after_sb_p p_after_sb_2p ;
26896,26899c27295
<   int p_after_sb_0p ;
<   int p_after_sb_1p ;
<   int p_after_sb_2p ;
<   int p_want_lose ;
---
>   int p_discard_my_data ;
26902c27298,27301
<   char p_integrity_alg[64U] ;
---
>   struct net_conf *nc ;
>   struct net_conf *old_net_conf ;
>   struct net_conf *new_net_conf ;
>   char integrity_alg[64U] ;
26903a27303,27305
>   struct crypto_hash *peer_integrity_tfm ;
>   void *int_dig_in ;
>   void *int_dig_vv ;
26909a27312,27314
>   int err ;
>   struct net_conf *_________p1 ;
>   bool __warned ;
26912,26915c27317,27327
<   int tmp___8 ;
<   unsigned char *my_alg ;
<   int tmp___9 ;
<   int tmp___10 ;
---
>   enum drbd_after_sb_p tmp___8 ;
>   enum drbd_after_sb_p tmp___9 ;
>   enum drbd_after_sb_p tmp___10 ;
>   int tmp___11 ;
>   int hash_size ;
>   unsigned int tmp___12 ;
>   void *tmp___13 ;
>   enum drbd_after_sb_p tmp___14 ;
>   enum drbd_after_sb_p tmp___15 ;
>   enum drbd_after_sb_p tmp___16 ;
>   int tmp___17 ;
26920,26924c27332,27338
< #line 2778
<   p = & mdev->data.rbuf.protocol;
< #line 2781
<   p_integrity_alg[0] = '\000';
< #line 2781
---
> #line 3110
>   p = (struct p_protocol *)pi->data;
> #line 3113
>   new_net_conf = 0;
> #line 3114
>   integrity_alg[0] = '\000';
> #line 3114
26926c27340
< #line 2781
---
> #line 3114
26928c27342
< #line 2781
---
> #line 3114
26930c27344
< #line 2781
---
> #line 3114
26935,26937c27349,27351
< #line 2781
<     p_integrity_alg[tmp] = (char)0;
< #line 2781
---
> #line 3114
>     integrity_alg[tmp] = (char)0;
> #line 3114
26940c27354,27360
< #line 2783
---
> #line 3115
>   peer_integrity_tfm = 0;
> #line 3116
>   int_dig_in = 0;
> #line 3116
>   int_dig_vv = 0;
> #line 3118
26942c27362
< #line 2783
---
> #line 3118
26944c27364
< #line 2784
---
> #line 3119
26946,26948c27366,27368
< #line 2784
<   p_after_sb_0p = (int )tmp___1;
< #line 2785
---
> #line 3119
>   p_after_sb_0p = (enum drbd_after_sb_p )tmp___1;
> #line 3120
26950,26952c27370,27372
< #line 2785
<   p_after_sb_1p = (int )tmp___2;
< #line 2786
---
> #line 3120
>   p_after_sb_1p = (enum drbd_after_sb_p )tmp___2;
> #line 3121
26954,26956c27374,27376
< #line 2786
<   p_after_sb_2p = (int )tmp___3;
< #line 2787
---
> #line 3121
>   p_after_sb_2p = (enum drbd_after_sb_p )tmp___3;
> #line 3122
26958c27378
< #line 2787
---
> #line 3122
26960c27380
< #line 2788
---
> #line 3123
26962c27382
< #line 2788
---
> #line 3123
26964,26972c27384,27392
< #line 2789
<   p_want_lose = cf & 1;
< #line 2791
<   drbd_clear_flag(mdev, CONN_DRY_RUN);
< #line 2793
<   if ((cf & 2) != 0) {
< #line 2794
<     drbd_set_flag(mdev, CONN_DRY_RUN);
<   } else {
---
> #line 3124
>   p_discard_my_data = cf & 1;
> #line 3126
>   if (tconn->agreed_pro_version > 86) {
> #line 3129
>     if (pi->size > 64U) {
> #line 3130
>       return (-5);
>     } else {
26974,26981c27394,27401
<   }
< #line 2796
<   if ((mdev->net_conf)->wire_protocol != p_proto) {
< #line 2797
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "incompatible communication protocols\n");
< #line 2798
<     goto disconnect;
<   } else {
---
>     }
> #line 3131
>     err = drbd_recv_all(tconn, (void *)(& integrity_alg), (size_t )pi->size);
> #line 3132
>     if (err != 0) {
> #line 3133
>       return (err);
>     } else {
26983,26991c27403,27405
<   }
< #line 2801
<   tmp___6 = cmp_after_sb((enum drbd_after_sb_p )p_after_sb_0p, (enum drbd_after_sb_p )(mdev->net_conf)->after_sb_0p);
< #line 2801
<   if (tmp___6 != 0) {
< #line 2802
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "incompatible after-sb-0pri settings\n");
< #line 2803
<     goto disconnect;
---
>     }
> #line 3134
>     integrity_alg[63] = 0;
26995,27003c27409,27417
< #line 2806
<   tmp___7 = cmp_after_sb((enum drbd_after_sb_p )p_after_sb_1p, (enum drbd_after_sb_p )(mdev->net_conf)->after_sb_1p);
< #line 2806
<   if (tmp___7 != 0) {
< #line 2807
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "incompatible after-sb-1pri settings\n");
< #line 2808
<     goto disconnect;
<   } else {
---
> #line 3137
>   if ((unsigned int )pi->cmd != 45U) {
> #line 3138
>     clear_bit(8, (unsigned long volatile   *)(& tconn->flags));
> #line 3140
>     if ((cf & 2) != 0) {
> #line 3141
>       set_bit(8U, (unsigned long volatile   *)(& tconn->flags));
>     } else {
27005,27014c27419,27437
<   }
< #line 2811
<   tmp___8 = cmp_after_sb((enum drbd_after_sb_p )p_after_sb_2p, (enum drbd_after_sb_p )(mdev->net_conf)->after_sb_2p);
< #line 2811
<   if (tmp___8 != 0) {
< #line 2812
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "incompatible after-sb-2pri settings\n");
< #line 2813
<     goto disconnect;
<   } else {
---
>     }
> #line 3143
>     rcu_read_lock();
> #line 3144
>     _________p1 = *((struct net_conf * volatile  *)(& tconn->net_conf));
> #line 3144
>     tmp___6 = debug_lockdep_rcu_enabled();
> #line 3144
>     if (tmp___6 != 0 && ! __warned) {
> #line 3144
>       tmp___7 = rcu_read_lock_held();
> #line 3144
>       if (tmp___7 == 0 && 1) {
> #line 3144
>         __warned = 1;
> #line 3144
>         lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>                                3144, "suspicious rcu_dereference_check() usage");
>       } else {
27016,27023c27439,27440
<   }
< #line 2816
<   if (p_want_lose != 0 && (unsigned int )*((unsigned char *)mdev->net_conf + 540UL) != 0U) {
< #line 2817
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "both sides have the \'want_lose\' flag set\n");
< #line 2818
<     goto disconnect;
<   } else {
---
>       }
>     } else {
27025,27031c27442,27517
<   }
< #line 2821
<   if ((int )(mdev->net_conf)->two_primaries != p_two_primaries) {
< #line 2822
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "incompatible setting of the two-primaries options\n");
< #line 2823
<     goto disconnect;
---
>     }
> #line 3144
>     nc = _________p1;
> #line 3146
>     if ((__u32 )p_proto != nc->wire_protocol) {
> #line 3147
>       printk("\vd-con %s: incompatible %s settings\n", tconn->name, (char *)"protocol");
> #line 3148
>       goto disconnect_rcu_unlock;
>     } else {
> 
>     }
> #line 3151
>     tmp___8 = convert_after_sb(p_after_sb_0p);
> #line 3151
>     if ((unsigned int )tmp___8 != nc->after_sb_0p) {
> #line 3152
>       printk("\vd-con %s: incompatible %s settings\n", tconn->name, (char *)"after-sb-0pri");
> #line 3153
>       goto disconnect_rcu_unlock;
>     } else {
> 
>     }
> #line 3156
>     tmp___9 = convert_after_sb(p_after_sb_1p);
> #line 3156
>     if ((unsigned int )tmp___9 != nc->after_sb_1p) {
> #line 3157
>       printk("\vd-con %s: incompatible %s settings\n", tconn->name, (char *)"after-sb-1pri");
> #line 3158
>       goto disconnect_rcu_unlock;
>     } else {
> 
>     }
> #line 3161
>     tmp___10 = convert_after_sb(p_after_sb_2p);
> #line 3161
>     if ((unsigned int )tmp___10 != nc->after_sb_2p) {
> #line 3162
>       printk("\vd-con %s: incompatible %s settings\n", tconn->name, (char *)"after-sb-2pri");
> #line 3163
>       goto disconnect_rcu_unlock;
>     } else {
> 
>     }
> #line 3166
>     if (p_discard_my_data != 0 && (int )((signed char )nc->discard_my_data) != 0) {
> #line 3167
>       printk("\vd-con %s: incompatible %s settings\n", tconn->name, (char *)"discard-my-data");
> #line 3168
>       goto disconnect_rcu_unlock;
>     } else {
> 
>     }
> #line 3171
>     if ((int )nc->two_primaries != p_two_primaries) {
> #line 3172
>       printk("\vd-con %s: incompatible %s settings\n", tconn->name, (char *)"allow-two-primaries");
> #line 3173
>       goto disconnect_rcu_unlock;
>     } else {
> 
>     }
> #line 3176
>     tmp___11 = strcmp((char const   *)(& integrity_alg), (char const   *)(& nc->integrity_alg));
> #line 3176
>     if (tmp___11 != 0) {
> #line 3177
>       printk("\vd-con %s: incompatible %s settings\n", tconn->name, (char *)"data-integrity-alg");
> #line 3178
>       goto disconnect_rcu_unlock;
>     } else {
> 
>     }
> #line 3181
>     rcu_read_unlock();
27035,27044c27521,27532
< #line 2826
<   if (mdev->agreed_pro_version > 86) {
< #line 2827
<     my_alg = (unsigned char *)(& (mdev->net_conf)->integrity_alg);
< #line 2829
<     tmp___9 = drbd_recv(mdev, (void *)(& p_integrity_alg), (size_t )data_size);
< #line 2829
<     if ((unsigned int )tmp___9 != data_size) {
< #line 2830
<       return (0);
---
> #line 3184
>   if ((int )((signed char )integrity_alg[0]) != 0) {
> #line 3196
>     peer_integrity_tfm = crypto_alloc_hash((char const   *)(& integrity_alg), 0U,
>                                            128U);
> #line 3197
>     if ((unsigned long )peer_integrity_tfm == (unsigned long )((struct crypto_hash *)0)) {
> #line 3198
>       printk("\vd-con %s: peer data-integrity-alg %s not supported\n", tconn->name,
>              (char *)(& integrity_alg));
> #line 3200
>       goto disconnect;
27048,27056c27536,27549
< #line 2832
<     p_integrity_alg[63] = 0;
< #line 2833
<     tmp___10 = strcmp((char const   *)(& p_integrity_alg), (char const   *)my_alg);
< #line 2833
<     if (tmp___10 != 0) {
< #line 2834
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "incompatible setting of the data-integrity-alg\n");
< #line 2835
---
> #line 3203
>     tmp___12 = crypto_hash_digestsize(peer_integrity_tfm);
> #line 3203
>     hash_size = (int )tmp___12;
> #line 3204
>     int_dig_in = kmalloc((size_t )hash_size, 208U);
> #line 3205
>     int_dig_vv = kmalloc((size_t )hash_size, 208U);
> #line 3206
>     if ((unsigned long )int_dig_in == (unsigned long )((void *)0) || (unsigned long )int_dig_vv == (unsigned long )((void *)0)) {
> #line 3207
>       printk("\vd-con %s: Allocation of buffers for data integrity checking failed\n",
>              tconn->name);
> #line 3208
27061,27063d27553
< #line 2837
<     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "data-integrity-alg: %s\n",
<               (unsigned int )*my_alg != 0U ? my_alg : (unsigned char *)"<not-used>");
27067,27068c27557,27631
< #line 2841
<   return (1);
---
> #line 3212
>   tmp___13 = kmalloc(420UL, 208U);
> #line 3212
>   new_net_conf = (struct net_conf *)tmp___13;
> #line 3213
>   if ((unsigned long )new_net_conf == (unsigned long )((struct net_conf *)0)) {
> #line 3214
>     printk("\vd-con %s: Allocation of new net_conf failed\n", tconn->name);
> #line 3215
>     goto disconnect;
>   } else {
> 
>   }
> #line 3218
>   mutex_lock_nested(& tconn->data.mutex, 0U);
> #line 3219
>   mutex_lock_nested(& tconn->conf_update, 0U);
> #line 3220
>   old_net_conf = tconn->net_conf;
> #line 3221
>   *new_net_conf = *old_net_conf;
> #line 3223
>   new_net_conf->wire_protocol = (__u32 )p_proto;
> #line 3224
>   tmp___14 = convert_after_sb(p_after_sb_0p);
> #line 3224
>   new_net_conf->after_sb_0p = (__u32 )tmp___14;
> #line 3225
>   tmp___15 = convert_after_sb(p_after_sb_1p);
> #line 3225
>   new_net_conf->after_sb_1p = (__u32 )tmp___15;
> #line 3226
>   tmp___16 = convert_after_sb(p_after_sb_2p);
> #line 3226
>   new_net_conf->after_sb_2p = (__u32 )tmp___16;
> #line 3227
>   new_net_conf->two_primaries = (char )p_two_primaries;
> #line 3229
>   __asm__  volatile   ("": : : "memory");
> #line 3229
>   tconn->net_conf = new_net_conf;
> #line 3230
>   mutex_unlock(& tconn->conf_update);
> #line 3231
>   mutex_unlock(& tconn->data.mutex);
> #line 3233
>   crypto_free_hash(tconn->peer_integrity_tfm);
> #line 3234
>   kfree((void const   *)tconn->int_dig_in);
> #line 3235
>   kfree((void const   *)tconn->int_dig_vv);
> #line 3236
>   tconn->peer_integrity_tfm = peer_integrity_tfm;
> #line 3237
>   tconn->int_dig_in = int_dig_in;
> #line 3238
>   tconn->int_dig_vv = int_dig_vv;
> #line 3240
>   tmp___17 = strcmp((char const   *)(& old_net_conf->integrity_alg), (char const   *)(& integrity_alg));
> #line 3240
>   if (tmp___17 != 0) {
> #line 3241
>     printk("\016d-con %s: peer data-integrity-alg: %s\n", tconn->name, (int )((signed char )integrity_alg[0]) != 0 ? (char *)(& integrity_alg) : (char *)"(none)");
>   } else {
> 
>   }
> #line 3244
>   synchronize_rcu();
> #line 3245
>   kfree((void const   *)old_net_conf);
> #line 3246
>   return (0);
>   disconnect_rcu_unlock: 
> #line 3249
>   rcu_read_unlock();
27070c27633,27639
< #line 2844
---
> #line 3251
>   crypto_free_hash(peer_integrity_tfm);
> #line 3252
>   kfree((void const   *)int_dig_in);
> #line 3253
>   kfree((void const   *)int_dig_vv);
> #line 3254
27072,27074c27641,27643
< #line 2844
<   val.ldv_39979.conn = 1U;
< #line 2844
---
> #line 3254
>   val.ldv_40604.conn = 1U;
> #line 3254
27076,27081c27645,27650
< #line 2844
<   mask.ldv_39979.conn = 31U;
< #line 2844
<   drbd_force_state(mdev, mask, val);
< #line 2845
<   return (0);
---
> #line 3254
>   mask.ldv_40604.conn = 31U;
> #line 3254
>   conn_request_state(tconn, mask, val, CS_HARD);
> #line 3255
>   return (-5);
27084c27653
< #line 2853 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3263 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
27091,27093d27659
<   void *tmp___1 ;
<   struct crypto_tfm *tmp___2 ;
<   int tmp___3 ;
27096c27662
< #line 2858
---
> #line 3268
27098c27664
< #line 2859
---
> #line 3269
27103c27669
< #line 2861
---
> #line 3271
27105c27671
< #line 2862
---
> #line 3272
27107c27673
< #line 2862
---
> #line 3272
27109c27675
< #line 2863
---
> #line 3273
27111c27677
< #line 2863
---
> #line 3273
27114c27680
< #line 2865
---
> #line 3275
27119,27133c27685,27724
< #line 2867
<   tmp___2 = crypto_hash_tfm(tfm);
< #line 2867
<   tmp___3 = drbd_crypto_is_hash(tmp___2);
< #line 2867
<   if (tmp___3 == 0) {
< #line 2868
<     crypto_free_hash(tfm);
< #line 2869
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "\"%s\" is not a digest (%s)\n",
<             alg, name);
< #line 2870
<     tmp___1 = ERR_PTR(-22L);
< #line 2870
<     return ((struct crypto_hash *)tmp___1);
---
> #line 3277
>   return (tfm);
> }
> }
> #line 3280 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int ignore_remaining_packet(struct drbd_tconn *tconn , struct packet_info *pi ) 
> { 
>   void *buffer ;
>   int size ;
>   int s ;
>   int __min1 ;
>   int __min2 ;
> 
>   {
> #line 3282
>   buffer = tconn->data.rbuf;
> #line 3283
>   size = (int )pi->size;
> #line 3285
>   goto ldv_53437;
>   ldv_53436: 
> #line 3286
>   __min1 = size;
> #line 3286
>   __min2 = 4096;
> #line 3286
>   s = __min1 < __min2 ? __min1 : __min2;
> #line 3287
>   s = drbd_recv(tconn, buffer, (size_t )s);
> #line 3288
>   if (s <= 0) {
> #line 3289
>     if (s < 0) {
> #line 3290
>       return (s);
>     } else {
> 
>     }
> #line 3291
>     goto ldv_53435;
27137,27138c27728,27747
< #line 2872
<   return (tfm);
---
> #line 3293
>   size = size - s;
>   ldv_53437: ;
> #line 3285
>   if (size != 0) {
> #line 3286
>     goto ldv_53436;
>   } else {
> 
>   }
>   ldv_53435: ;
> #line 3295
>   if (size != 0) {
> #line 3296
>     return (-5);
>   } else {
> 
>   }
> #line 3297
>   return (0);
27141,27142c27750,27751
< #line 2875 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int receive_SyncParam(struct drbd_conf *mdev , enum drbd_packets cmd , unsigned int packet_size ) 
---
> #line 3311 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int config_unknown_volume(struct drbd_tconn *tconn , struct packet_info *pi ) 
27144c27753,27771
<   int ok ;
---
>   char const   *tmp ;
>   int tmp___0 ;
> 
>   {
> #line 3313
>   tmp = cmdname(pi->cmd);
> #line 3313
>   printk("\fd-con %s: %s packet received for volume %u, which is not configured locally\n",
>          tconn->name, tmp, pi->vnr);
> #line 3315
>   tmp___0 = ignore_remaining_packet(tconn, pi);
> #line 3315
>   return (tmp___0);
> }
> }
> #line 3318 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int receive_SyncParam(struct drbd_tconn *tconn , struct packet_info *pi ) 
> { 
>   struct drbd_conf *mdev ;
27150a27778,27781
>   struct net_conf *old_net_conf ;
>   struct net_conf *new_net_conf ;
>   struct disk_conf *old_disk_conf ;
>   struct disk_conf *new_disk_conf ;
27152c27783,27784
<   int *rs_plan_s ;
---
>   struct fifo_buffer *old_plan ;
>   struct fifo_buffer *new_plan ;
27153a27786
>   int err ;
27155,27161c27788,27794
<   __u32 tmp___0 ;
<   int tmp___1 ;
<   long tmp___2 ;
<   int tmp___3 ;
<   long tmp___4 ;
<   int tmp___5 ;
<   __u32 tmp___6 ;
---
>   void *tmp___0 ;
>   __u32 tmp___1 ;
>   int tmp___2 ;
>   long tmp___3 ;
>   int tmp___4 ;
>   long tmp___5 ;
>   int tmp___6 ;
27173,27177c27806
< #line 2877
<   ok = 1;
< #line 2878
<   p = & mdev->data.rbuf.rs_param_95;
< #line 2880
---
> #line 3323
27179c27808
< #line 2881
---
> #line 3324
27181,27185c27810,27822
< #line 2882
<   apv = mdev->agreed_pro_version;
< #line 2883
<   rs_plan_s = 0;
< #line 2884
---
> #line 3325
>   new_net_conf = 0;
> #line 3326
>   old_disk_conf = 0;
> #line 3326
>   new_disk_conf = 0;
> #line 3327
>   apv = tconn->agreed_pro_version;
> #line 3328
>   old_plan = 0;
> #line 3328
>   new_plan = 0;
> #line 3329
27187,27191c27824,27839
< #line 2886
<   exp_max_sz = apv > 87 ? (apv != 88 ? (apv <= 94 ? 140U : 156U) : 76U) : 12U;
< #line 2892
<   if (packet_size > exp_max_sz) {
< #line 2893
---
> #line 3332
>   mdev = vnr_to_mdev(tconn, (int )pi->vnr);
> #line 3333
>   if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
> #line 3334
>     tmp = config_unknown_volume(tconn, pi);
> #line 3334
>     return (tmp);
>   } else {
> 
>   }
> #line 3336
>   exp_max_sz = apv > 87 ? (apv != 88 ? (apv <= 94 ? 132U : 148U) : 68U) : 4U;
> #line 3342
>   if (pi->size > exp_max_sz) {
> #line 3343
27193,27195c27841,27843
<             packet_size, exp_max_sz);
< #line 2895
<     return (0);
---
>             pi->size, exp_max_sz);
> #line 3345
>     return (-5);
27199c27847
< #line 2898
---
> #line 3348
27201c27849
< #line 2899
---
> #line 3349
27203,27204c27851,27852
< #line 2900
<     data_size = packet_size - header_size;
---
> #line 3350
>     data_size = pi->size - header_size;
27206c27854
< #line 2901
---
> #line 3351
27208c27856
< #line 2902
---
> #line 3352
27210,27212c27858,27860
< #line 2903
<     data_size = packet_size - header_size;
< #line 2904
---
> #line 3353
>     data_size = pi->size - header_size;
> #line 3354
27214c27862
< #line 2904
---
> #line 3354
27216,27217c27864,27865
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<               2904);
---
>               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>               3354);
27222c27870
< #line 2906
---
> #line 3356
27224,27226c27872,27874
< #line 2907
<     data_size = packet_size - header_size;
< #line 2908
---
> #line 3357
>     data_size = pi->size - header_size;
> #line 3358
27228c27876
< #line 2908
---
> #line 3358
27230,27231c27878,27879
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<               2908);
---
>               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>               3358);
27236c27884,27886
< #line 2912
---
> #line 3362
>   p = (struct p_rs_param_95 *)pi->data;
> #line 3363
27238,27243c27888,27893
< #line 2914
<   tmp = drbd_recv(mdev, (void *)(& p->head.payload), (size_t )header_size);
< #line 2914
<   if ((unsigned int )tmp != header_size) {
< #line 2915
<     return (0);
---
> #line 3365
>   err = drbd_recv_all(mdev->tconn, (void *)p, (size_t )header_size);
> #line 3366
>   if (err != 0) {
> #line 3367
>     return (err);
27247,27251c27897,27933
< #line 2917
<   tmp___0 = __fswab32(p->rate);
< #line 2917
<   mdev->sync_conf.rate = (int )tmp___0;
< #line 2919
---
> #line 3369
>   mutex_lock_nested(& (mdev->tconn)->conf_update, 0U);
> #line 3370
>   old_net_conf = (mdev->tconn)->net_conf;
> #line 3371
>   tmp___2 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 3371
>   if (tmp___2 != 0) {
> #line 3372
>     tmp___0 = kzalloc(344UL, 208U);
> #line 3372
>     new_disk_conf = (struct disk_conf *)tmp___0;
> #line 3373
>     if ((unsigned long )new_disk_conf == (unsigned long )((struct disk_conf *)0)) {
> #line 3374
>       put_ldev(mdev);
> #line 3375
>       mutex_unlock(& (mdev->tconn)->conf_update);
> #line 3376
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Allocation of new disk_conf failed\n");
> #line 3377
>       return (-12);
>     } else {
> 
>     }
> #line 3380
>     old_disk_conf = (mdev->ldev)->disk_conf;
> #line 3381
>     *new_disk_conf = *old_disk_conf;
> #line 3383
>     tmp___1 = __fswab32(p->resync_rate);
> #line 3383
>     new_disk_conf->resync_rate = tmp___1;
>   } else {
> 
>   }
> #line 3386
27253c27935
< #line 2920
---
> #line 3387
27255c27937
< #line 2921
---
> #line 3388
27257c27939
< #line 2922
---
> #line 3389
27260,27261c27942,27945
< #line 2925
<         return (0);
---
> #line 3392
>         err = -5;
> #line 3393
>         goto reconnect;
27265,27270c27949,27954
< #line 2928
<       tmp___1 = drbd_recv(mdev, (void *)(& p->verify_alg), (size_t )data_size);
< #line 2928
<       if ((unsigned int )tmp___1 != data_size) {
< #line 2929
<         return (0);
---
> #line 3396
>       err = drbd_recv_all(mdev->tconn, (void *)(& p->verify_alg), (size_t )data_size);
> #line 3397
>       if (err != 0) {
> #line 3398
>         goto reconnect;
27274c27958
< #line 2933
---
> #line 3401
27276c27960
< #line 2933
---
> #line 3401
27278,27279c27962,27963
<                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<                 2933);
---
>                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>                 3401);
27283c27967
< #line 2934
---
> #line 3402
27286c27970
< #line 2939
---
> #line 3407
27288c27972
< #line 2939
---
> #line 3407
27290,27291c27974,27975
<                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<                 2939);
---
>                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>                 3407);
27295c27979
< #line 2940
---
> #line 3408
27297c27981
< #line 2940
---
> #line 3408
27299,27300c27983,27984
<                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<                 2940);
---
>                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>                 3408);
27304c27988
< #line 2941
---
> #line 3409
27306c27990
< #line 2942
---
> #line 3410
27309,27315c27993,27999
< #line 2945
<     tmp___3 = strcmp((char const   *)(& mdev->sync_conf.verify_alg), (char const   *)(& p->verify_alg));
< #line 2945
<     if (tmp___3 != 0) {
< #line 2946
<       if ((unsigned int )*((unsigned short *)mdev + 1138UL) == 144U) {
< #line 2947
---
> #line 3413
>     tmp___4 = strcmp((char const   *)(& old_net_conf->verify_alg), (char const   *)(& p->verify_alg));
> #line 3413
>     if (tmp___4 != 0) {
> #line 3414
>       if ((unsigned int )*((unsigned short *)mdev + 374UL) == 144U) {
> #line 3415
27317,27318c28001,28002
<                 (unsigned char *)(& mdev->sync_conf.verify_alg), (char *)(& p->verify_alg));
< #line 2949
---
>                 (char *)(& old_net_conf->verify_alg), (char *)(& p->verify_alg));
> #line 3417
27323c28007
< #line 2951
---
> #line 3419
27327,27331c28011,28015
< #line 2953
<       tmp___2 = IS_ERR((void const   *)verify_tfm);
< #line 2953
<       if (tmp___2 != 0L) {
< #line 2954
---
> #line 3421
>       tmp___3 = IS_ERR((void const   *)verify_tfm);
> #line 3421
>       if (tmp___3 != 0L) {
> #line 3422
27333c28017
< #line 2955
---
> #line 3423
27341c28025
< #line 2959
---
> #line 3427
27343,27349c28027,28033
< #line 2959
<       tmp___5 = strcmp((char const   *)(& mdev->sync_conf.csums_alg), (char const   *)(& p->csums_alg));
< #line 2959
<       if (tmp___5 != 0) {
< #line 2960
<         if ((unsigned int )*((unsigned short *)mdev + 1138UL) == 144U) {
< #line 2961
---
> #line 3427
>       tmp___6 = strcmp((char const   *)(& old_net_conf->csums_alg), (char const   *)(& p->csums_alg));
> #line 3427
>       if (tmp___6 != 0) {
> #line 3428
>         if ((unsigned int )*((unsigned short *)mdev + 374UL) == 144U) {
> #line 3429
27351,27352c28035,28036
<                   (unsigned char *)(& mdev->sync_conf.csums_alg), (char *)(& p->csums_alg));
< #line 2963
---
>                   (char *)(& old_net_conf->csums_alg), (char *)(& p->csums_alg));
> #line 3431
27357c28041
< #line 2965
---
> #line 3433
27361,27365c28045,28049
< #line 2967
<         tmp___4 = IS_ERR((void const   *)csums_tfm);
< #line 2967
<         if (tmp___4 != 0L) {
< #line 2968
---
> #line 3435
>         tmp___5 = IS_ERR((void const   *)csums_tfm);
> #line 3435
>         if (tmp___5 != 0L) {
> #line 3436
27367c28051
< #line 2969
---
> #line 3437
27378,27384c28062,28064
< #line 2973
<     if (apv > 94) {
< #line 2974
<       tmp___6 = __fswab32(p->rate);
< #line 2974
<       mdev->sync_conf.rate = (int )tmp___6;
< #line 2975
---
> #line 3441
>     if (apv > 94 && (unsigned long )new_disk_conf != (unsigned long )((struct disk_conf *)0)) {
> #line 3442
27386,27388c28066,28068
< #line 2975
<       mdev->sync_conf.c_plan_ahead = (int )tmp___7;
< #line 2976
---
> #line 3442
>       new_disk_conf->c_plan_ahead = tmp___7;
> #line 3443
27390,27392c28070,28072
< #line 2976
<       mdev->sync_conf.c_delay_target = (int )tmp___8;
< #line 2977
---
> #line 3443
>       new_disk_conf->c_delay_target = tmp___8;
> #line 3444
27394,27396c28074,28076
< #line 2977
<       mdev->sync_conf.c_fill_target = (int )tmp___9;
< #line 2978
---
> #line 3444
>       new_disk_conf->c_fill_target = tmp___9;
> #line 3445
27398,27410c28078,28088
< #line 2978
<       mdev->sync_conf.c_max_rate = (int )tmp___10;
< #line 2980
<       fifo_size = (mdev->sync_conf.c_plan_ahead * 250) / 250;
< #line 2981
<       if ((unsigned int )fifo_size != mdev->rs_plan_s.size && fifo_size > 0) {
< #line 2982
<         tmp___11 = kzalloc((unsigned long )fifo_size * 4UL, 16U);
< #line 2982
<         rs_plan_s = (int *)tmp___11;
< #line 2983
<         if ((unsigned long )rs_plan_s == (unsigned long )((int *)0)) {
< #line 2984
---
> #line 3445
>       new_disk_conf->c_max_rate = tmp___10;
> #line 3447
>       fifo_size = (int )((new_disk_conf->c_plan_ahead * 250U) / 250U);
> #line 3448
>       if ((unsigned int )fifo_size != (mdev->rs_plan_s)->size) {
> #line 3449
>         new_plan = fifo_alloc(fifo_size);
> #line 3450
>         if ((unsigned long )new_plan == (unsigned long )((struct fifo_buffer *)0)) {
> #line 3451
27412c28090,28092
< #line 2985
---
> #line 3452
>           put_ldev(mdev);
> #line 3453
27423,27440c28103,28115
< #line 2990
<     spin_lock(& mdev->peer_seq_lock);
< #line 2992
<     if ((unsigned long )verify_tfm != (unsigned long )((struct crypto_hash *)0)) {
< #line 2993
<       strcpy((char *)(& mdev->sync_conf.verify_alg), (char const   *)(& p->verify_alg));
< #line 2994
<       tmp___12 = strlen((char const   *)(& p->verify_alg));
< #line 2994
<       mdev->sync_conf.verify_alg_len = (int )((unsigned int )tmp___12 + 1U);
< #line 2995
<       crypto_free_hash(mdev->verify_tfm);
< #line 2996
<       mdev->verify_tfm = verify_tfm;
< #line 2997
<       _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "using verify-alg: \"%s\"\n",
<                 (char *)(& p->verify_alg));
<     } else {
---
> #line 3458
>     if ((unsigned long )verify_tfm != (unsigned long )((struct crypto_hash *)0) || (unsigned long )csums_tfm != (unsigned long )((struct crypto_hash *)0)) {
> #line 3459
>       tmp___11 = kzalloc(420UL, 208U);
> #line 3459
>       new_net_conf = (struct net_conf *)tmp___11;
> #line 3460
>       if ((unsigned long )new_net_conf == (unsigned long )((struct net_conf *)0)) {
> #line 3461
>         dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Allocation of new net_conf failed\n");
> #line 3462
>         goto disconnect;
>       } else {
27442,27458c28117,28135
<     }
< #line 2999
<     if ((unsigned long )csums_tfm != (unsigned long )((struct crypto_hash *)0)) {
< #line 3000
<       strcpy((char *)(& mdev->sync_conf.csums_alg), (char const   *)(& p->csums_alg));
< #line 3001
<       tmp___13 = strlen((char const   *)(& p->csums_alg));
< #line 3001
<       mdev->sync_conf.csums_alg_len = (int )((unsigned int )tmp___13 + 1U);
< #line 3002
<       crypto_free_hash(mdev->csums_tfm);
< #line 3003
<       mdev->csums_tfm = csums_tfm;
< #line 3004
<       _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "using csums-alg: \"%s\"\n",
<                 (char *)(& p->csums_alg));
<     } else {
---
>       }
> #line 3465
>       *new_net_conf = *old_net_conf;
> #line 3467
>       if ((unsigned long )verify_tfm != (unsigned long )((struct crypto_hash *)0)) {
> #line 3468
>         strcpy((char *)(& new_net_conf->verify_alg), (char const   *)(& p->verify_alg));
> #line 3469
>         tmp___12 = strlen((char const   *)(& p->verify_alg));
> #line 3469
>         new_net_conf->verify_alg_len = (__u32 )tmp___12 + 1U;
> #line 3470
>         crypto_free_hash((mdev->tconn)->verify_tfm);
> #line 3471
>         (mdev->tconn)->verify_tfm = verify_tfm;
> #line 3472
>         _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "using verify-alg: \"%s\"\n",
>                   (char *)(& p->verify_alg));
>       } else {
27460,27470c28137,28159
<     }
< #line 3006
<     if ((unsigned int )fifo_size != mdev->rs_plan_s.size) {
< #line 3007
<       kfree((void const   *)mdev->rs_plan_s.values);
< #line 3008
<       mdev->rs_plan_s.values = rs_plan_s;
< #line 3009
<       mdev->rs_plan_s.size = (unsigned int )fifo_size;
< #line 3010
<       mdev->rs_planed = 0;
---
>       }
> #line 3474
>       if ((unsigned long )csums_tfm != (unsigned long )((struct crypto_hash *)0)) {
> #line 3475
>         strcpy((char *)(& new_net_conf->csums_alg), (char const   *)(& p->csums_alg));
> #line 3476
>         tmp___13 = strlen((char const   *)(& p->csums_alg));
> #line 3476
>         new_net_conf->csums_alg_len = (__u32 )tmp___13 + 1U;
> #line 3477
>         crypto_free_hash((mdev->tconn)->csums_tfm);
> #line 3478
>         (mdev->tconn)->csums_tfm = csums_tfm;
> #line 3479
>         _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "using csums-alg: \"%s\"\n",
>                   (char *)(& p->csums_alg));
>       } else {
> 
>       }
> #line 3481
>       __asm__  volatile   ("": : : "memory");
> #line 3481
>       tconn->net_conf = new_net_conf;
27474,27475d28162
< #line 3012
<     spin_unlock(& mdev->peer_seq_lock);
27479,27480c28166,28218
< #line 3015
<   return (ok);
---
> #line 3485
>   if ((unsigned long )new_disk_conf != (unsigned long )((struct disk_conf *)0)) {
> #line 3486
>     __asm__  volatile   ("": : : "memory");
> #line 3486
>     (mdev->ldev)->disk_conf = new_disk_conf;
> #line 3487
>     put_ldev(mdev);
>   } else {
> 
>   }
> #line 3490
>   if ((unsigned long )new_plan != (unsigned long )((struct fifo_buffer *)0)) {
> #line 3491
>     old_plan = mdev->rs_plan_s;
> #line 3492
>     __asm__  volatile   ("": : : "memory");
> #line 3492
>     mdev->rs_plan_s = new_plan;
>   } else {
> 
>   }
> #line 3495
>   mutex_unlock(& (mdev->tconn)->conf_update);
> #line 3496
>   synchronize_rcu();
> #line 3497
>   if ((unsigned long )new_net_conf != (unsigned long )((struct net_conf *)0)) {
> #line 3498
>     kfree((void const   *)old_net_conf);
>   } else {
> 
>   }
> #line 3499
>   kfree((void const   *)old_disk_conf);
> #line 3500
>   kfree((void const   *)old_plan);
> #line 3502
>   return (0);
>   reconnect: ;
> #line 3505
>   if ((unsigned long )new_disk_conf != (unsigned long )((struct disk_conf *)0)) {
> #line 3506
>     put_ldev(mdev);
> #line 3507
>     kfree((void const   *)new_disk_conf);
>   } else {
> 
>   }
> #line 3509
>   mutex_unlock(& (mdev->tconn)->conf_update);
> #line 3510
>   return (-5);
27482c28220,28233
< #line 3019
---
> #line 3513
>   kfree((void const   *)new_plan);
> #line 3514
>   if ((unsigned long )new_disk_conf != (unsigned long )((struct disk_conf *)0)) {
> #line 3515
>     put_ldev(mdev);
> #line 3516
>     kfree((void const   *)new_disk_conf);
>   } else {
> 
>   }
> #line 3518
>   mutex_unlock(& (mdev->tconn)->conf_update);
> #line 3521
27484c28235
< #line 3021
---
> #line 3523
27486c28237
< #line 3022
---
> #line 3524
27488,27490c28239,28241
< #line 3022
<   val.ldv_39979.conn = 1U;
< #line 3022
---
> #line 3524
>   val.ldv_40604.conn = 1U;
> #line 3524
27492,27497c28243,28248
< #line 3022
<   mask.ldv_39979.conn = 31U;
< #line 3022
<   drbd_force_state(mdev, mask, val);
< #line 3023
<   return (0);
---
> #line 3524
>   mask.ldv_40604.conn = 31U;
> #line 3524
>   conn_request_state(mdev->tconn, mask, val, CS_HARD);
> #line 3525
>   return (-5);
27500c28251
< #line 3027 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3529 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
27507c28258
< #line 3031
---
> #line 3533
27509c28260
< #line 3032
---
> #line 3534
27514c28265
< #line 3033
---
> #line 3535
27516c28267
< #line 3034
---
> #line 3536
27518c28269
< #line 3035
---
> #line 3537
27524c28275
< #line 3037
---
> #line 3539
27528,27529c28279,28280
< #line 3039 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int receive_sizes(struct drbd_conf *mdev , enum drbd_packets cmd , unsigned int data_size ) 
---
> #line 3541 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int receive_sizes(struct drbd_tconn *tconn , struct packet_info *pi ) 
27530a28282
>   struct drbd_conf *mdev ;
27538c28290
<   __u64 tmp ;
---
>   int tmp ;
27540,27543c28292,28298
<   union drbd_state val ;
<   union drbd_state mask ;
<   sector_t tmp___1 ;
<   unsigned long __x ;
---
>   __u64 tmp___1 ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp___2 ;
>   int tmp___3 ;
>   sector_t tmp___4 ;
>   sector_t __x ;
27545c28300
<   unsigned long _min1 ;
---
>   sector_t _min1 ;
27547,27551d28301
<   unsigned long tmp___2 ;
<   unsigned long tmp___3 ;
<   union drbd_state val___0 ;
<   union drbd_state mask___0 ;
<   sector_t tmp___4 ;
27553,27561c28303,28319
<   int tmp___6 ;
<   __u16 tmp___7 ;
<   int tmp___8 ;
<   __u32 tmp___9 ;
<   sector_t tmp___10 ;
<   int tmp___11 ;
<   __u64 tmp___12 ;
<   sector_t tmp___13 ;
<   int tmp___14 ;
---
>   sector_t tmp___6 ;
>   union drbd_state val ;
>   union drbd_state mask ;
>   sector_t tmp___7 ;
>   sector_t tmp___8 ;
>   struct disk_conf *old_disk_conf ;
>   struct disk_conf *new_disk_conf ;
>   void *tmp___9 ;
>   int tmp___10 ;
>   __u16 tmp___11 ;
>   int tmp___12 ;
>   __u32 tmp___13 ;
>   sector_t tmp___14 ;
>   int tmp___15 ;
>   __u64 tmp___16 ;
>   sector_t tmp___17 ;
>   int tmp___18 ;
27564,27566c28322,28324
< #line 3041
<   p = & mdev->data.rbuf.sizes;
< #line 3042
---
> #line 3544
>   p = (struct p_sizes *)pi->data;
> #line 3545
27568c28326
< #line 3044
---
> #line 3547
27570,27593c28328,28335
< #line 3047
<   tmp = __fswab64(p->d_size);
< #line 3047
<   p_size = (sector_t )tmp;
< #line 3048
<   tmp___0 = __fswab64(p->u_size);
< #line 3048
<   p_usize = (sector_t )tmp___0;
< #line 3050
<   if (p_size == 0UL && (unsigned int )*((unsigned char *)mdev + 2277UL) == 0U) {
< #line 3051
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "some backing storage is needed\n");
< #line 3052
<     val.i = 0U;
< #line 3052
<     val.ldv_39979.conn = 1U;
< #line 3052
<     mask.i = 0U;
< #line 3052
<     mask.ldv_39979.conn = 31U;
< #line 3052
<     drbd_force_state(mdev, mask, val);
< #line 3053
<     return (0);
---
> #line 3550
>   mdev = vnr_to_mdev(tconn, (int )pi->vnr);
> #line 3551
>   if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
> #line 3552
>     tmp = config_unknown_volume(tconn, pi);
> #line 3552
>     return (tmp);
27597c28339,28347
< #line 3058
---
> #line 3554
>   tmp___0 = __fswab64(p->d_size);
> #line 3554
>   p_size = (sector_t )tmp___0;
> #line 3555
>   tmp___1 = __fswab64(p->u_size);
> #line 3555
>   p_usize = (sector_t )tmp___1;
> #line 3559
27599,27613c28349,28390
< #line 3060
<   tmp___6 = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 3060
<   if (tmp___6 != 0) {
< #line 3061
<     tmp___1 = drbd_get_max_capacity(mdev->ldev);
< #line 3061
<     warn_if_differ_considerably(mdev, "lower level device sizes", p_size, tmp___1);
< #line 3063
<     warn_if_differ_considerably(mdev, "user requested size", p_usize, (sector_t )(mdev->ldev)->dc.disk_size);
< #line 3068
<     if ((unsigned int )*((unsigned short *)mdev + 1138UL) == 144U) {
< #line 3069
<       __x = (unsigned long )(mdev->ldev)->dc.disk_size;
< #line 3069
---
> #line 3561
>   tmp___10 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 3561
>   if (tmp___10 != 0) {
> #line 3562
>     rcu_read_lock();
> #line 3563
>     _________p1 = *((struct disk_conf * volatile  *)(& (mdev->ldev)->disk_conf));
> #line 3563
>     tmp___2 = debug_lockdep_rcu_enabled();
> #line 3563
>     if (tmp___2 != 0 && ! __warned) {
> #line 3563
>       tmp___3 = rcu_read_lock_held();
> #line 3563
>       if (tmp___3 == 0 && 1) {
> #line 3563
>         __warned = 1;
> #line 3563
>         lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>                                3563, "suspicious rcu_dereference_check() usage");
>       } else {
> 
>       }
>     } else {
> 
>     }
> #line 3563
>     my_usize = (sector_t )_________p1->disk_size;
> #line 3564
>     rcu_read_unlock();
> #line 3566
>     tmp___4 = drbd_get_max_capacity(mdev->ldev);
> #line 3566
>     warn_if_differ_considerably(mdev, "lower level device sizes", p_size, tmp___4);
> #line 3568
>     warn_if_differ_considerably(mdev, "user requested size", p_usize, my_usize);
> #line 3573
>     if ((unsigned int )*((unsigned short *)mdev + 374UL) == 144U) {
> #line 3574
>       __x = my_usize;
> #line 3574
27615c28392
< #line 3069
---
> #line 3574
27617c28394
< #line 3069
---
> #line 3574
27619c28396
< #line 3069
---
> #line 3574
27621c28398
< #line 3069
---
> #line 3574
27623,27624c28400,28401
< #line 3069
<           tmp___2 = _min1 < _min2 ? _min1 : _min2;
---
> #line 3574
>           tmp___5 = _min1 < _min2 ? _min1 : _min2;
27626,27627c28403,28404
< #line 3069
<           tmp___2 = __x;
---
> #line 3574
>           tmp___5 = __x;
27629,27630c28406,28407
< #line 3069
<         tmp___3 = tmp___2;
---
> #line 3574
>         tmp___6 = tmp___5;
27632,27633c28409,28410
< #line 3069
<         tmp___3 = __y;
---
> #line 3574
>         tmp___6 = __y;
27635,27636c28412,28413
< #line 3069
<       p_usize = tmp___3;
---
> #line 3574
>       p_usize = tmp___6;
27640,27648c28417,28438
< #line 3072
<     my_usize = (sector_t )(mdev->ldev)->dc.disk_size;
< #line 3074
<     if ((mdev->ldev)->dc.disk_size != (unsigned long long )p_usize) {
< #line 3075
<       (mdev->ldev)->dc.disk_size = (__u64 )p_usize;
< #line 3076
<       _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Peer sets u_size to %lu sectors\n",
<                 (unsigned long )(mdev->ldev)->dc.disk_size);
---
> #line 3578
>     tmp___7 = drbd_new_dev_size(mdev, mdev->ldev, p_usize, 0);
> #line 3578
>     tmp___8 = drbd_get_capacity(mdev->this_bdev);
> #line 3578
>     if ((tmp___7 < tmp___8 && (int )mdev->state.ldv_50103.disk > 4) && (int )mdev->state.ldv_50103.conn <= 9) {
> #line 3582
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "The peer\'s disk size is too small!\n");
> #line 3583
>       val.i = 0U;
> #line 3583
>       val.ldv_40604.conn = 1U;
> #line 3583
>       mask.i = 0U;
> #line 3583
>       mask.ldv_40604.conn = 31U;
> #line 3583
>       conn_request_state(mdev->tconn, mask, val, CS_HARD);
> #line 3584
>       put_ldev(mdev);
> #line 3585
>       return (-5);
27652,27675c28442,28481
< #line 3082
<     tmp___4 = drbd_new_dev_size(mdev, mdev->ldev, 0);
< #line 3082
<     tmp___5 = drbd_get_capacity(mdev->this_bdev);
< #line 3082
<     if ((tmp___4 < tmp___5 && (int )mdev->state.ldv_39979.disk > 4) && (int )mdev->state.ldv_39979.conn <= 9) {
< #line 3086
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "The peer\'s disk size is too small!\n");
< #line 3087
<       val___0.i = 0U;
< #line 3087
<       val___0.ldv_39979.conn = 1U;
< #line 3087
<       mask___0.i = 0U;
< #line 3087
<       mask___0.ldv_39979.conn = 31U;
< #line 3087
<       drbd_force_state(mdev, mask___0, val___0);
< #line 3088
<       (mdev->ldev)->dc.disk_size = (__u64 )my_usize;
< #line 3089
<       put_ldev(mdev);
< #line 3090
<       return (0);
---
> #line 3588
>     if (my_usize != p_usize) {
> #line 3589
>       new_disk_conf = 0;
> #line 3591
>       tmp___9 = kzalloc(344UL, 208U);
> #line 3591
>       new_disk_conf = (struct disk_conf *)tmp___9;
> #line 3592
>       if ((unsigned long )new_disk_conf == (unsigned long )((struct disk_conf *)0)) {
> #line 3593
>         dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Allocation of new disk_conf failed\n");
> #line 3594
>         put_ldev(mdev);
> #line 3595
>         return (-12);
>       } else {
> 
>       }
> #line 3598
>       mutex_lock_nested(& (mdev->tconn)->conf_update, 0U);
> #line 3599
>       old_disk_conf = (mdev->ldev)->disk_conf;
> #line 3600
>       *new_disk_conf = *old_disk_conf;
> #line 3601
>       new_disk_conf->disk_size = (__u64 )p_usize;
> #line 3603
>       __asm__  volatile   ("": : : "memory");
> #line 3603
>       (mdev->ldev)->disk_conf = new_disk_conf;
> #line 3604
>       mutex_unlock(& (mdev->tconn)->conf_update);
> #line 3605
>       synchronize_rcu();
> #line 3606
>       kfree((void const   *)old_disk_conf);
> #line 3608
>       _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Peer sets u_size to %lu sectors\n",
>                 my_usize);
27679c28485
< #line 3092
---
> #line 3612
27684,27692c28490,28498
< #line 3095
<   tmp___7 = __fswab16((int )p->dds_flags);
< #line 3095
<   ddsf = (enum dds_flags )tmp___7;
< #line 3096
<   tmp___8 = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 3096
<   if (tmp___8 != 0) {
< #line 3097
---
> #line 3615
>   tmp___11 = __fswab16((int )p->dds_flags);
> #line 3615
>   ddsf = (enum dds_flags )tmp___11;
> #line 3616
>   tmp___12 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 3616
>   if (tmp___12 != 0) {
> #line 3617
27694c28500
< #line 3098
---
> #line 3618
27696c28502
< #line 3099
---
> #line 3619
27698,27699c28504,28505
< #line 3100
<       return (0);
---
> #line 3620
>       return (-5);
27703c28509
< #line 3101
---
> #line 3621
27706c28512
< #line 3104
---
> #line 3624
27709,27713c28515,28519
< #line 3107
<   tmp___9 = __fswab32(p->max_bio_size);
< #line 3107
<   mdev->peer_max_bio_size = tmp___9;
< #line 3108
---
> #line 3627
>   tmp___13 = __fswab32(p->max_bio_size);
> #line 3627
>   mdev->peer_max_bio_size = tmp___13;
> #line 3628
27715,27723c28521,28529
< #line 3110
<   tmp___11 = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 3110
<   if (tmp___11 != 0) {
< #line 3111
<     tmp___10 = drbd_get_capacity((mdev->ldev)->backing_bdev);
< #line 3111
<     if ((mdev->ldev)->known_size != tmp___10) {
< #line 3112
---
> #line 3630
>   tmp___15 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 3630
>   if (tmp___15 != 0) {
> #line 3631
>     tmp___14 = drbd_get_capacity((mdev->ldev)->backing_bdev);
> #line 3631
>     if ((mdev->ldev)->known_size != tmp___14) {
> #line 3632
27725c28531
< #line 3113
---
> #line 3633
27730c28536
< #line 3116
---
> #line 3636
27735,27743c28541,28549
< #line 3119
<   if ((int )mdev->state.ldv_39979.conn > 9) {
< #line 3120
<     tmp___12 = __fswab64(p->c_size);
< #line 3120
<     tmp___13 = drbd_get_capacity(mdev->this_bdev);
< #line 3120
<     if (tmp___12 != (unsigned long long )tmp___13 || ldsc != 0) {
< #line 3124
---
> #line 3639
>   if ((int )mdev->state.ldv_50103.conn > 9) {
> #line 3640
>     tmp___16 = __fswab64(p->c_size);
> #line 3640
>     tmp___17 = drbd_get_capacity(mdev->this_bdev);
> #line 3640
>     if (tmp___16 != (unsigned long long )tmp___17 || ldsc != 0) {
> #line 3644
27748,27754c28554,28560
< #line 3126
<     tmp___14 = drbd_test_and_clear_flag(mdev, RESIZE_PENDING);
< #line 3126
<     if (tmp___14 != 0 || ((int )dd == 2 && (unsigned int )*((unsigned short *)mdev + 1138UL) == 160U)) {
< #line 3128
<       if ((int )mdev->state.ldv_39979.pdsk > 3 && (int )mdev->state.ldv_39979.disk > 3) {
< #line 3130
---
> #line 3646
>     tmp___18 = test_and_clear_bit(16, (unsigned long volatile   *)(& mdev->flags));
> #line 3646
>     if (tmp___18 != 0 || ((int )dd == 2 && (unsigned int )*((unsigned short *)mdev + 374UL) == 160U)) {
> #line 3648
>       if ((int )mdev->state.ldv_50103.pdsk > 3 && (int )mdev->state.ldv_50103.disk > 3) {
> #line 3650
27756c28562
< #line 3131
---
> #line 3651
27759c28565
< #line 3133
---
> #line 3653
27763,27764c28569,28570
< #line 3135
<         drbd_set_flag(mdev, RESYNC_AFTER_NEG);
---
> #line 3655
>         set_bit(15U, (unsigned long volatile   *)(& mdev->flags));
27772,27773c28578,28579
< #line 3139
<   return (1);
---
> #line 3659
>   return (0);
27776,27777c28582,28583
< #line 3142 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int receive_uuids(struct drbd_conf *mdev , enum drbd_packets cmd , unsigned int data_size ) 
---
> #line 3662 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int receive_uuids(struct drbd_tconn *tconn , struct packet_info *pi ) 
27778a28585
>   struct drbd_conf *mdev ;
27783,27784c28590,28592
<   void *tmp ;
<   __u64 tmp___0 ;
---
>   int tmp ;
>   void *tmp___0 ;
>   __u64 tmp___1 ;
27789d28596
<   int tmp___1 ;
27791,27794c28598
<   wait_queue_t __wait ;
<   struct task_struct *tmp___3 ;
<   int tmp___4 ;
<   int tmp___5 ;
---
>   int tmp___3 ;
27797,27799c28601,28603
< #line 3144
<   p = & mdev->data.rbuf.uuids;
< #line 3146
---
> #line 3665
>   p = (struct p_uuids *)pi->data;
> #line 3667
27801,27805c28605,28629
< #line 3148
<   tmp = kmalloc(48UL, 16U);
< #line 3148
<   p_uuid = (u64 *)tmp;
< #line 3150
---
> #line 3669
>   mdev = vnr_to_mdev(tconn, (int )pi->vnr);
> #line 3670
>   if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
> #line 3671
>     tmp = config_unknown_volume(tconn, pi);
> #line 3671
>     return (tmp);
>   } else {
> 
>   }
> #line 3673
>   tmp___0 = kmalloc(48UL, 16U);
> #line 3673
>   p_uuid = (u64 *)tmp___0;
> #line 3674
>   if ((unsigned long )p_uuid == (unsigned long )((u64 *)0)) {
> #line 3675
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "kmalloc of p_uuid failed\n");
> #line 3676
>     return (0);
>   } else {
> 
>   }
> #line 3679
27807,27814c28631,28638
< #line 3150
<   goto ldv_52906;
<   ldv_52905: 
< #line 3151
<   tmp___0 = __fswab64(p->uuid[i]);
< #line 3151
<   *(p_uuid + (unsigned long )i) = tmp___0;
< #line 3150
---
> #line 3679
>   goto ldv_53512;
>   ldv_53511: 
> #line 3680
>   tmp___1 = __fswab64(p->uuid[i]);
> #line 3680
>   *(p_uuid + (unsigned long )i) = tmp___1;
> #line 3679
27816,27817c28640,28641
<   ldv_52906: ;
< #line 3150
---
>   ldv_53512: ;
> #line 3679
27819,27820c28643,28644
< #line 3151
<     goto ldv_52905;
---
> #line 3680
>     goto ldv_53511;
27824c28648
< #line 3153
---
> #line 3682
27826c28650
< #line 3154
---
> #line 3683
27828,27830c28652,28654
< #line 3156
<   if ((((int )mdev->state.ldv_39979.conn <= 9 && (int )mdev->state.ldv_39979.disk <= 3) && (unsigned int )*((unsigned char *)mdev + 2276UL) == 1U) && ((mdev->ed_uuid ^ *p_uuid) & 0xfffffffffffffffeULL) != 0ULL) {
< #line 3160
---
> #line 3685
>   if ((((int )mdev->state.ldv_50103.conn <= 9 && (int )mdev->state.ldv_50103.disk <= 3) && (unsigned int )*((unsigned char *)mdev + 748UL) == 1U) && ((mdev->ed_uuid ^ *p_uuid) & 0xfffffffffffffffeULL) != 0ULL) {
> #line 3689
27833c28657
< #line 3162
---
> #line 3691
27835,27837c28659,28661
< #line 3162
<     val.ldv_39979.conn = 1U;
< #line 3162
---
> #line 3691
>     val.ldv_40604.conn = 1U;
> #line 3691
27839,27844c28663,28668
< #line 3162
<     mask.ldv_39979.conn = 31U;
< #line 3162
<     drbd_force_state(mdev, mask, val);
< #line 3163
<     return (0);
---
> #line 3691
>     mask.ldv_40604.conn = 31U;
> #line 3691
>     conn_request_state(mdev->tconn, mask, val, CS_HARD);
> #line 3692
>     return (-5);
27848,27854c28672,28678
< #line 3166
<   tmp___1 = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 3166
<   if (tmp___1 != 0) {
< #line 3167
<     skip_initial_sync = (((unsigned int )*((unsigned short *)mdev + 1138UL) == 160U && mdev->agreed_pro_version > 89) && (mdev->ldev)->md.uuid[0] == 4ULL) && (*(p_uuid + 5UL) & 8ULL) != 0ULL;
< #line 3172
---
> #line 3695
>   tmp___2 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 3695
>   if (tmp___2 != 0) {
> #line 3696
>     skip_initial_sync = (((unsigned int )*((unsigned short *)mdev + 374UL) == 160U && (mdev->tconn)->agreed_pro_version > 89) && (mdev->ldev)->md.uuid[0] == 4ULL) && (*(p_uuid + 5UL) & 8ULL) != 0ULL;
> #line 3701
27856c28680
< #line 3173
---
> #line 3702
27858c28682
< #line 3174
---
> #line 3703
27861c28685
< #line 3177
---
> #line 3706
27863c28687
< #line 3178
---
> #line 3707
27865,27871c28689,28695
< #line 3179
<       __ns.i = mdev->state.i;
< #line 3179
<       __ns.ldv_39979.disk = 8U;
< #line 3179
<       __ns.ldv_39979.pdsk = 8U;
< #line 3179
---
> #line 3708
>       __ns = drbd_read_state(mdev);
> #line 3708
>       __ns.ldv_40604.disk = 8U;
> #line 3708
>       __ns.ldv_40604.pdsk = 8U;
> #line 3708
27873c28697
< #line 3181
---
> #line 3710
27875c28699
< #line 3182
---
> #line 3711
27880c28704
< #line 3184
---
> #line 3713
27883,27885c28707,28709
< #line 3185
<   if ((int )mdev->state.ldv_39979.disk <= 3 && (unsigned int )*((unsigned char *)mdev + 2276UL) == 1U) {
< #line 3189
---
> #line 3714
>   if ((int )mdev->state.ldv_50103.disk <= 3 && (unsigned int )*((unsigned char *)mdev + 748UL) == 1U) {
> #line 3718
27890,27936c28714,28723
< #line 3196
<   tmp___2 = drbd_test_flag(mdev, CLUSTER_ST_CHANGE);
< #line 3196
<   if (tmp___2 == 0) {
< #line 3196
<     goto ldv_52915;
<   } else {
< 
<   }
< #line 3196
<   tmp___3 = get_current();
< #line 3196
<   __wait.flags = 0U;
< #line 3196
<   __wait.private = (void *)tmp___3;
< #line 3196
<   __wait.func = & autoremove_wake_function;
< #line 3196
<   __wait.task_list.next = & __wait.task_list;
< #line 3196
<   __wait.task_list.prev = & __wait.task_list;
<   ldv_52918: 
< #line 3196
<   prepare_to_wait(& mdev->misc_wait, & __wait, 2);
< #line 3196
<   tmp___4 = drbd_test_flag(mdev, CLUSTER_ST_CHANGE);
< #line 3196
<   if (tmp___4 == 0) {
< #line 3196
<     goto ldv_52917;
<   } else {
< 
<   }
< #line 3196
<   schedule();
< #line 3196
<   goto ldv_52918;
<   ldv_52917: 
< #line 3196
<   finish_wait(& mdev->misc_wait, & __wait);
<   ldv_52915: ;
< #line 3197
<   if ((int )mdev->state.ldv_39979.conn > 9 && (int )mdev->state.ldv_39979.disk <= 3) {
< #line 3198
<     tmp___5 = drbd_set_ed_uuid(mdev, *p_uuid);
< #line 3198
<     updated_uuids = tmp___5 | updated_uuids;
---
> #line 3725
>   mutex_lock_nested(mdev->state_mutex, 0U);
> #line 3726
>   mutex_unlock(mdev->state_mutex);
> #line 3727
>   if ((int )mdev->state.ldv_50103.conn > 9 && (int )mdev->state.ldv_50103.disk <= 3) {
> #line 3728
>     tmp___3 = drbd_set_ed_uuid(mdev, *p_uuid);
> #line 3728
>     updated_uuids = tmp___3 | updated_uuids;
27940c28727
< #line 3200
---
> #line 3730
27942c28729
< #line 3201
---
> #line 3731
27947,27948c28734,28735
< #line 3203
<   return (1);
---
> #line 3733
>   return (0);
27951c28738
< #line 3210 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3740 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
27958c28745
< #line 3214
---
> #line 3744
27960c28747
< #line 3214
---
> #line 3744
27962c28749
< #line 3214
---
> #line 3744
27964c28751
< #line 3214
---
> #line 3744
27966c28753
< #line 3214
---
> #line 3744
27968c28755
< #line 3214
---
> #line 3744
27970c28757
< #line 3214
---
> #line 3744
27972c28759
< #line 3214
---
> #line 3744
27974c28761
< #line 3214
---
> #line 3744
27976,27978c28763,28765
< #line 3214
<   c_tab[9] = 0;
< #line 3214
---
> #line 3744
>   c_tab[9] = C_WF_REPORT_PARAMS;
> #line 3744
27980c28767
< #line 3214
---
> #line 3744
27982c28769
< #line 3214
---
> #line 3744
27984c28771
< #line 3214
---
> #line 3744
27986c28773
< #line 3214
---
> #line 3744
27988c28775
< #line 3214
---
> #line 3744
27990c28777
< #line 3214
---
> #line 3744
27992c28779
< #line 3214
---
> #line 3744
27994c28781
< #line 3214
---
> #line 3744
27996c28783
< #line 3214
---
> #line 3744
27998c28785
< #line 3214
---
> #line 3744
28000c28787
< #line 3214
---
> #line 3744
28002c28789
< #line 3214
---
> #line 3744
28004c28791
< #line 3214
---
> #line 3744
28006c28793
< #line 3214
---
> #line 3744
28008c28795
< #line 3214
---
> #line 3744
28010c28797
< #line 3214
---
> #line 3744
28012c28799
< #line 3214
---
> #line 3744
28014c28801
< #line 3214
---
> #line 3744
28016c28803
< #line 3214
---
> #line 3744
28018c28805
< #line 3214
---
> #line 3744
28020c28807
< #line 3214
---
> #line 3744
28022c28809
< #line 3224
---
> #line 3755
28024,28036c28811,28823
< #line 3226
<   ms.ldv_39979.conn = (unsigned char )c_tab[(int )ps.ldv_39979.conn];
< #line 3227
<   ms.ldv_39979.peer = ps.ldv_39979.role;
< #line 3228
<   ms.ldv_39979.role = ps.ldv_39979.peer;
< #line 3229
<   ms.ldv_39979.pdsk = ps.ldv_39979.disk;
< #line 3230
<   ms.ldv_39979.disk = ps.ldv_39979.pdsk;
< #line 3231
<   ms.ldv_39979.peer_isp = (unsigned char )((int )ps.ldv_39979.aftr_isp | (int )ps.ldv_39979.user_isp);
< #line 3233
---
> #line 3757
>   ms.ldv_40604.conn = (unsigned char )c_tab[(int )ps.ldv_40604.conn];
> #line 3758
>   ms.ldv_40604.peer = ps.ldv_40604.role;
> #line 3759
>   ms.ldv_40604.role = ps.ldv_40604.peer;
> #line 3760
>   ms.ldv_40604.pdsk = ps.ldv_40604.disk;
> #line 3761
>   ms.ldv_40604.disk = ps.ldv_40604.pdsk;
> #line 3762
>   ms.ldv_40604.peer_isp = (unsigned char )((int )ps.ldv_40604.aftr_isp | (int )ps.ldv_40604.user_isp);
> #line 3764
28040,28041c28827,28828
< #line 3236 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int receive_req_state(struct drbd_conf *mdev , enum drbd_packets cmd , unsigned int data_size ) 
---
> #line 3767 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int receive_req_state(struct drbd_tconn *tconn , struct packet_info *pi ) 
28042a28830
>   struct drbd_conf *mdev ;
28053,28055c28841,28852
< #line 3238
<   p = & mdev->data.rbuf.req_state;
< #line 3242
---
> #line 3770
>   p = (struct p_req_state *)pi->data;
> #line 3774
>   mdev = vnr_to_mdev(tconn, (int )pi->vnr);
> #line 3775
>   if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
> #line 3776
>     return (-5);
>   } else {
> 
>   }
> #line 3778
28057c28854
< #line 3242
---
> #line 3778
28059c28856
< #line 3243
---
> #line 3779
28061c28858
< #line 3243
---
> #line 3779
28063,28065c28860,28862
< #line 3245
<   tmp___1 = drbd_test_flag(mdev, DISCARD_CONCURRENT);
< #line 3245
---
> #line 3781
>   tmp___1 = constant_test_bit(1U, (unsigned long const volatile   *)(& (mdev->tconn)->flags));
> #line 3781
28067,28069c28864,28866
< #line 3245
<     tmp___2 = drbd_test_flag(mdev, CLUSTER_ST_CHANGE);
< #line 3245
---
> #line 3781
>     tmp___2 = mutex_is_locked(mdev->state_mutex);
> #line 3781
28071c28868
< #line 3247
---
> #line 3783
28073,28074c28870,28871
< #line 3248
<       return (1);
---
> #line 3784
>       return (0);
28081c28878
< #line 3251
---
> #line 3787
28083c28880
< #line 3252
---
> #line 3788
28085c28882
< #line 3254
---
> #line 3790
28087c28884
< #line 3256
---
> #line 3791
28089c28886
< #line 3257
---
> #line 3793
28091,28092c28888,28942
< #line 3259
<   return (1);
---
> #line 3795
>   return (0);
> }
> }
> #line 3798 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int receive_req_conn_state(struct drbd_tconn *tconn , struct packet_info *pi ) 
> { 
>   struct p_req_state *p ;
>   union drbd_state mask ;
>   union drbd_state val ;
>   enum drbd_state_rv rv ;
>   __u32 tmp ;
>   __u32 tmp___0 ;
>   int tmp___1 ;
>   int tmp___2 ;
> 
>   {
> #line 3800
>   p = (struct p_req_state *)pi->data;
> #line 3804
>   tmp = __fswab32(p->mask);
> #line 3804
>   mask.i = tmp;
> #line 3805
>   tmp___0 = __fswab32(p->val);
> #line 3805
>   val.i = tmp___0;
> #line 3807
>   tmp___1 = constant_test_bit(1U, (unsigned long const volatile   *)(& tconn->flags));
> #line 3807
>   if (tmp___1 != 0) {
> #line 3807
>     tmp___2 = mutex_is_locked(& tconn->cstate_mutex);
> #line 3807
>     if (tmp___2 != 0) {
> #line 3809
>       conn_send_sr_reply(tconn, SS_CONCURRENT_ST_CHG);
> #line 3810
>       return (0);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 3813
>   mask = convert_state(mask);
> #line 3814
>   val = convert_state(val);
> #line 3816
>   rv = conn_request_state(tconn, mask, val, 2066);
> #line 3817
>   conn_send_sr_reply(tconn, rv);
> #line 3819
>   return (0);
28095,28096c28945,28946
< #line 3262 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int receive_state(struct drbd_conf *mdev , enum drbd_packets cmd , unsigned int data_size ) 
---
> #line 3822 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int receive_state(struct drbd_tconn *tconn , struct packet_info *pi ) 
28097a28948
>   struct drbd_conf *mdev ;
28105,28107c28956,28959
<   __u32 tmp ;
<   char const   *tmp___0 ;
<   unsigned long tmp___1 ;
---
>   int tmp ;
>   __u32 tmp___0 ;
>   char const   *tmp___1 ;
>   unsigned long tmp___2 ;
28109,28110c28961,28962
<   int tmp___2 ;
<   enum drbd_conns tmp___3 ;
---
>   int tmp___3 ;
>   enum drbd_conns tmp___4 ;
28113c28965
<   int tmp___4 ;
---
>   int tmp___5 ;
28116c28968,28969
<   int tmp___5 ;
---
>   int tmp___6 ;
>   union drbd_state tmp___7 ;
28119,28121c28972,28974
<   int tmp___6 ;
<   int tmp___7 ;
<   enum drbd_state_rv tmp___8 ;
---
>   int tmp___8 ;
>   int tmp___9 ;
>   enum drbd_state_rv tmp___10 ;
28126,28134c28979,28998
< #line 3264
<   p = & mdev->data.rbuf.state;
< #line 3270
<   tmp = __fswab32(p->state);
< #line 3270
<   peer_state.i = tmp;
< #line 3272
<   real_peer_disk = (enum drbd_disk_state )peer_state.ldv_39979.disk;
< #line 3273
---
> #line 3825
>   p = (struct p_state *)pi->data;
> #line 3831
>   mdev = vnr_to_mdev(tconn, (int )pi->vnr);
> #line 3832
>   if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
> #line 3833
>     tmp = config_unknown_volume(tconn, pi);
> #line 3833
>     return (tmp);
>   } else {
> 
>   }
> #line 3835
>   tmp___0 = __fswab32(p->state);
> #line 3835
>   peer_state.i = tmp___0;
> #line 3837
>   real_peer_disk = (enum drbd_disk_state )peer_state.ldv_40604.disk;
> #line 3838
28136c29000
< #line 3274
---
> #line 3839
28138,28140c29002,29004
< #line 3275
<     tmp___0 = drbd_disk_str(real_peer_disk);
< #line 3275
---
> #line 3840
>     tmp___1 = drbd_disk_str(real_peer_disk);
> #line 3840
28142c29006
<               tmp___0);
---
>               tmp___1);
28146,28147c29010,29011
< #line 3278
<   spin_lock_irq(& mdev->req_lock);
---
> #line 3843
>   spin_lock_irq(& (mdev->tconn)->req_lock);
28149,28151c29013,29015
< #line 3280
<   ns = mdev->state;
< #line 3280
---
> #line 3845
>   ns = drbd_read_state(mdev);
> #line 3845
28153,28158c29017,29022
< #line 3281
<   spin_unlock_irq(& mdev->req_lock);
< #line 3286
<   if ((int )os.ldv_39979.conn <= 7) {
< #line 3287
<     return (0);
---
> #line 3846
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 3851
>   if ((int )os.ldv_40604.conn <= 7) {
> #line 3852
>     return (-104);
28162,28166c29026,29030
< #line 3295
<   if ((((*((unsigned int *)(& os) + 0UL) == 32768U || *((unsigned int *)(& os) + 0UL) == 57344U) && (unsigned int )real_peer_disk == 8U) && (int )os.ldv_39979.conn > 10) && (unsigned int )*((unsigned char *)(& os) + 1UL) == 16U) {
< #line 3304
<     if ((int )peer_state.ldv_39979.conn > 10 && (int )peer_state.ldv_39979.conn <= 15) {
< #line 3306
---
> #line 3860
>   if ((((*((unsigned int *)(& os) + 0UL) == 32768U || *((unsigned int *)(& os) + 0UL) == 57344U) && (unsigned int )real_peer_disk == 8U) && (int )os.ldv_40604.conn > 10) && (unsigned int )*((unsigned char *)(& os) + 1UL) == 16U) {
> #line 3869
>     if ((int )peer_state.ldv_40604.conn > 10 && (int )peer_state.ldv_40604.conn <= 15) {
> #line 3871
28169,28175c29033,29039
< #line 3311
<     if ((int )os.ldv_39979.conn > 15 && (unsigned int )*((unsigned short *)(& peer_state) + 0UL) == 160U) {
< #line 3313
<       tmp___1 = drbd_bm_total_weight(mdev);
< #line 3313
<       if (tmp___1 <= mdev->rs_failed) {
< #line 3314
---
> #line 3876
>     if ((int )os.ldv_40604.conn > 15 && (unsigned int )*((unsigned short *)(& peer_state) + 0UL) == 160U) {
> #line 3878
>       tmp___2 = drbd_bm_total_weight(mdev);
> #line 3878
>       if (tmp___2 <= mdev->rs_failed) {
> #line 3879
28180,28181c29044,29045
< #line 3315
<       return (1);
---
> #line 3880
>       return (0);
28188c29052
< #line 3320
---
> #line 3885
28190,28192c29054,29056
< #line 3322
<     ov_oos_print(mdev);
< #line 3323
---
> #line 3887
>     ov_out_of_sync_print(mdev);
> #line 3888
28194,28195c29058,29059
< #line 3324
<     return (1);
---
> #line 3889
>     return (0);
28199,28201c29063,29065
< #line 3332
<   if (((*((unsigned int *)(& os) + 0UL) == 65536U && (unsigned int )real_peer_disk == 4U) && (unsigned int )*((unsigned short *)(& os) + 0UL) == 160U) && (int )peer_state.ldv_39979.conn > 16) {
< #line 3334
---
> #line 3897
>   if (((*((unsigned int *)(& os) + 0UL) == 65536U && (unsigned int )real_peer_disk == 4U) && (unsigned int )*((unsigned short *)(& os) + 0UL) == 160U) && (int )peer_state.ldv_40604.conn > 16) {
> #line 3899
28206c29070
< #line 3336
---
> #line 3901
28208,28209c29072,29073
< #line 3337
<     ns.ldv_39979.conn = 10U;
---
> #line 3902
>     ns.ldv_40604.conn = 10U;
28213c29077
< #line 3339
---
> #line 3904
28215,28216c29079,29080
< #line 3340
<     ns.ldv_39979.conn = 23U;
---
> #line 3905
>     ns.ldv_40604.conn = 23U;
28220,28228c29084,29092
< #line 3342
<   if ((unsigned long )mdev->p_uuid != (unsigned long )((u64 *)0) && (int )peer_state.ldv_39979.disk > 2) {
< #line 3342
<     tmp___5 = _get_ldev_if_state(mdev, D_NEGOTIATING);
< #line 3342
<     if (tmp___5 != 0) {
< #line 3347
<       cr = (int )os.ldv_39979.conn <= 9;
< #line 3350
---
> #line 3907
>   if ((unsigned long )mdev->p_uuid != (unsigned long )((u64 *)0) && (int )peer_state.ldv_40604.disk > 2) {
> #line 3907
>     tmp___6 = _get_ldev_if_state(mdev, D_NEGOTIATING);
> #line 3907
>     if (tmp___6 != 0) {
> #line 3912
>       cr = (int )os.ldv_40604.conn <= 9;
> #line 3915
28230,28236c29094,29100
< #line 3355
<       tmp___2 = drbd_test_flag(mdev, CONSIDER_RESYNC);
< #line 3355
<       cr = tmp___2 | cr;
< #line 3358
<       cr = ((unsigned int )*((unsigned short *)(& os) + 0UL) == 160U && ((int )peer_state.ldv_39979.conn > 10 && (int )peer_state.ldv_39979.conn <= 14)) | cr;
< #line 3362
---
> #line 3920
>       tmp___3 = constant_test_bit(6U, (unsigned long const volatile   *)(& mdev->flags));
> #line 3920
>       cr = tmp___3 | cr;
> #line 3923
>       cr = ((unsigned int )*((unsigned short *)(& os) + 0UL) == 160U && ((int )peer_state.ldv_40604.conn > 10 && (int )peer_state.ldv_40604.conn <= 14)) | cr;
> #line 3927
28238,28239c29102,29103
< #line 3363
<         tmp___3 = drbd_sync_handshake(mdev, (enum drbd_role )peer_state.ldv_39979.role,
---
> #line 3928
>         tmp___4 = drbd_sync_handshake(mdev, (enum drbd_role )peer_state.ldv_40604.role,
28241,28242c29105,29106
< #line 3363
<         ns.ldv_39979.conn = (unsigned char )tmp___3;
---
> #line 3928
>         ns.ldv_40604.conn = (unsigned char )tmp___4;
28246c29110
< #line 3365
---
> #line 3930
28248c29112
< #line 3366
---
> #line 3931
28250,28254c29114,29118
< #line 3367
<         ns.ldv_39979.conn = 10U;
< #line 3368
<         if ((unsigned int )*((unsigned char *)mdev + 2277UL) == 6U) {
< #line 3369
---
> #line 3932
>         ns.ldv_40604.conn = 10U;
> #line 3933
>         if ((unsigned int )*((unsigned char *)mdev + 749UL) == 6U) {
> #line 3934
28256,28258c29120,29122
< #line 3369
<           val.ldv_39979.disk = 2U;
< #line 3369
---
> #line 3934
>           val.ldv_40604.disk = 2U;
> #line 3934
28260,28262c29124,29126
< #line 3369
<           mask.ldv_39979.disk = 15U;
< #line 3369
---
> #line 3934
>           mask.ldv_40604.disk = 15U;
> #line 3934
28265c29129
< #line 3370
---
> #line 3935
28267c29131
< #line 3371
---
> #line 3936
28269,28271c29133,29135
< #line 3372
<           peer_state.ldv_39979.disk = 0U;
< #line 3373
---
> #line 3937
>           peer_state.ldv_40604.disk = 0U;
> #line 3938
28274,28279c29138,29143
< #line 3375
<           tmp___4 = drbd_test_and_clear_flag(mdev, CONN_DRY_RUN);
< #line 3375
<           if (tmp___4 != 0) {
< #line 3376
<             return (0);
---
> #line 3940
>           tmp___5 = test_and_clear_bit(8, (unsigned long volatile   *)(& (mdev->tconn)->flags));
> #line 3940
>           if (tmp___5 != 0) {
> #line 3941
>             return (-5);
28283c29147
< #line 3377
---
> #line 3942
28285c29149
< #line 3377
---
> #line 3942
28287,28288c29151,29152
<                     (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<                     3377);
---
>                     (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>                     3942);
28292c29156
< #line 3378
---
> #line 3943
28294,28296c29158,29160
< #line 3378
<           val___0.ldv_39979.conn = 1U;
< #line 3378
---
> #line 3943
>           val___0.ldv_40604.conn = 1U;
> #line 3943
28298,28303c29162,29167
< #line 3378
<           mask___0.ldv_39979.conn = 31U;
< #line 3378
<           drbd_force_state(mdev, mask___0, val___0);
< #line 3379
<           return (0);
---
> #line 3943
>           mask___0.ldv_40604.conn = 31U;
> #line 3943
>           conn_request_state(mdev->tconn, mask___0, val___0, CS_HARD);
> #line 3944
>           return (-5);
28314,28318c29178,29184
< #line 3384
<   spin_lock_irq(& mdev->req_lock);
< #line 3385
<   if (mdev->state.i != os.i) {
< #line 3386
---
> #line 3949
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 3950
>   tmp___7 = drbd_read_state(mdev);
> #line 3950
>   if (os.i != tmp___7.i) {
> #line 3951
28323,28331c29189,29197
< #line 3387
<   drbd_clear_flag(mdev, CONSIDER_RESYNC);
< #line 3388
<   ns.ldv_39979.peer = peer_state.ldv_39979.role;
< #line 3389
<   ns.ldv_39979.pdsk = (unsigned char )real_peer_disk;
< #line 3390
<   ns.ldv_39979.peer_isp = (unsigned char )((int )peer_state.ldv_39979.aftr_isp | (int )peer_state.ldv_39979.user_isp);
< #line 3391
---
> #line 3952
>   clear_bit(6, (unsigned long volatile   *)(& mdev->flags));
> #line 3953
>   ns.ldv_40604.peer = peer_state.ldv_40604.role;
> #line 3954
>   ns.ldv_40604.pdsk = (unsigned char )real_peer_disk;
> #line 3955
>   ns.ldv_40604.peer_isp = (unsigned char )((int )peer_state.ldv_40604.aftr_isp | (int )peer_state.ldv_40604.user_isp);
> #line 3956
28333,28334c29199,29200
< #line 3392
<     ns.ldv_39979.disk = mdev->new_state_tmp.ldv_39979.disk;
---
> #line 3957
>     ns.ldv_40604.disk = mdev->new_state_tmp.ldv_40604.disk;
28338,28340c29204,29206
< #line 3393
<   cs_flags = (enum chg_state_flags )(((int )os.ldv_39979.conn > 9 || (int )ns.ldv_39979.conn <= 9) + 2);
< #line 3394
---
> #line 3958
>   cs_flags = (enum chg_state_flags )(((int )os.ldv_40604.conn > 9 || (int )ns.ldv_40604.conn <= 9) + 2);
> #line 3959
28342,28346c29208,29212
< #line 3394
<     tmp___6 = is_susp(ns);
< #line 3394
<     if (tmp___6 != 0) {
< #line 3394
---
> #line 3959
>     tmp___8 = drbd_suspended(mdev);
> #line 3959
>     if (tmp___8 != 0) {
> #line 3959
28348,28356c29214,29222
< #line 3394
<         if ((int )os.ldv_39979.conn <= 9) {
< #line 3394
<           tmp___7 = drbd_test_flag(mdev, NEW_CUR_UUID);
< #line 3394
<           if (tmp___7 != 0) {
< #line 3398
<             spin_unlock_irq(& mdev->req_lock);
< #line 3399
---
> #line 3959
>         if ((int )os.ldv_40604.conn <= 9) {
> #line 3959
>           tmp___9 = constant_test_bit(17U, (unsigned long const volatile   *)(& mdev->flags));
> #line 3959
>           if (tmp___9 != 0) {
> #line 3963
>             spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 3964
28358,28360c29224,29226
< #line 3400
<             tl_clear(mdev);
< #line 3401
---
> #line 3965
>             tl_clear(mdev->tconn);
> #line 3966
28362,28364c29228,29230
< #line 3402
<             drbd_clear_flag(mdev, NEW_CUR_UUID);
< #line 3403
---
> #line 3967
>             clear_bit(17, (unsigned long volatile   *)(& mdev->flags));
> #line 3968
28366,28370c29232,29236
< #line 3403
<             val___1.ldv_39979.conn = 6U;
< #line 3403
<             val___1.ldv_39979.susp = 0U;
< #line 3403
---
> #line 3968
>             val___1.ldv_40604.conn = 6U;
> #line 3968
>             val___1.ldv_40604.susp = 0U;
> #line 3968
28372,28379c29238,29245
< #line 3403
<             mask___1.ldv_39979.conn = 31U;
< #line 3403
<             mask___1.ldv_39979.susp = 1U;
< #line 3403
<             drbd_force_state(mdev, mask___1, val___1);
< #line 3404
<             return (0);
---
> #line 3968
>             mask___1.ldv_40604.conn = 31U;
> #line 3968
>             mask___1.ldv_40604.susp = 1U;
> #line 3968
>             conn_request_state(mdev->tconn, mask___1, val___1, CS_HARD);
> #line 3969
>             return (-5);
28395,28403c29261,29269
< #line 3406
<   tmp___8 = _drbd_set_state(mdev, ns, cs_flags, 0);
< #line 3406
<   rv = (int )tmp___8;
< #line 3407
<   ns = mdev->state;
< #line 3408
<   spin_unlock_irq(& mdev->req_lock);
< #line 3410
---
> #line 3971
>   tmp___10 = _drbd_set_state(mdev, ns, cs_flags, 0);
> #line 3971
>   rv = (int )tmp___10;
> #line 3972
>   ns = drbd_read_state(mdev);
> #line 3973
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 3975
28405c29271
< #line 3411
---
> #line 3976
28407,28409c29273,29275
< #line 3411
<     val___2.ldv_39979.conn = 1U;
< #line 3411
---
> #line 3976
>     val___2.ldv_40604.conn = 1U;
> #line 3976
28411,28416c29277,29282
< #line 3411
<     mask___2.ldv_39979.conn = 31U;
< #line 3411
<     drbd_force_state(mdev, mask___2, val___2);
< #line 3412
<     return (0);
---
> #line 3976
>     mask___2.ldv_40604.conn = 31U;
> #line 3976
>     conn_request_state(mdev->tconn, mask___2, val___2, CS_HARD);
> #line 3977
>     return (-5);
28420,28424c29286,29290
< #line 3415
<   if ((int )os.ldv_39979.conn > 9) {
< #line 3416
<     if (((int )ns.ldv_39979.conn > 10 && (int )peer_state.ldv_39979.conn <= 10) && (unsigned int )*((unsigned char *)(& peer_state) + 1UL) != 6U) {
< #line 3421
---
> #line 3980
>   if ((int )os.ldv_40604.conn > 9) {
> #line 3981
>     if (((int )ns.ldv_40604.conn > 10 && (int )peer_state.ldv_40604.conn <= 10) && (unsigned int )*((unsigned char *)(& peer_state) + 1UL) != 6U) {
> #line 3986
28426c29292
< #line 3422
---
> #line 3987
28434,28436c29300,29302
< #line 3426
<   (mdev->net_conf)->want_lose = 0U;
< #line 3428
---
> #line 3991
>   clear_bit(21, (unsigned long volatile   *)(& mdev->flags));
> #line 3993
28438,28439c29304,29305
< #line 3430
<   return (1);
---
> #line 3995
>   return (0);
28442,28443c29308,29309
< #line 3433 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int receive_sync_uuid(struct drbd_conf *mdev , enum drbd_packets cmd , unsigned int data_size ) 
---
> #line 3998 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int receive_sync_uuid(struct drbd_tconn *tconn , struct packet_info *pi ) 
28444a29311
>   struct drbd_conf *mdev ;
28452,28457c29319,29326
< #line 3435
<   p = & mdev->data.rbuf.rs_uuid;
< #line 3437
<   if ((((unsigned int )*((unsigned short *)mdev + 1138UL) == 240U || (unsigned int )*((unsigned short *)mdev + 1138UL) == 368U) || (int )mdev->state.ldv_39979.conn <= 9) || (int )mdev->state.ldv_39979.disk <= 2) {
< #line 3437
<     goto ldv_52969;
---
> #line 4001
>   p = (struct p_rs_uuid *)pi->data;
> #line 4003
>   mdev = vnr_to_mdev(tconn, (int )pi->vnr);
> #line 4004
>   if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
> #line 4005
>     return (-5);
28461c29330,29337
< #line 3437
---
> #line 4007
>   if ((((unsigned int )*((unsigned short *)mdev + 374UL) == 240U || (unsigned int )*((unsigned short *)mdev + 374UL) == 368U) || (int )mdev->state.ldv_50103.conn <= 9) || (int )mdev->state.ldv_50103.disk <= 2) {
> #line 4007
>     goto ldv_53579;
>   } else {
> 
>   }
> #line 4007
28463c29339
< #line 3437
---
> #line 4007
28465c29341
< #line 3437
---
> #line 4007
28467c29343
< #line 3437
---
> #line 4007
28469c29345
< #line 3437
---
> #line 4007
28471c29347
< #line 3437
---
> #line 4007
28473,28474c29349,29350
<   ldv_52972: 
< #line 3437
---
>   ldv_53582: 
> #line 4007
28476,28479c29352,29355
< #line 3437
<   if ((((unsigned int )*((unsigned short *)mdev + 1138UL) == 240U || (unsigned int )*((unsigned short *)mdev + 1138UL) == 368U) || (int )mdev->state.ldv_39979.conn <= 9) || (int )mdev->state.ldv_39979.disk <= 2) {
< #line 3437
<     goto ldv_52971;
---
> #line 4007
>   if ((((unsigned int )*((unsigned short *)mdev + 374UL) == 240U || (unsigned int )*((unsigned short *)mdev + 374UL) == 368U) || (int )mdev->state.ldv_50103.conn <= 9) || (int )mdev->state.ldv_50103.disk <= 2) {
> #line 4007
>     goto ldv_53581;
28483c29359
< #line 3437
---
> #line 4007
28485,28488c29361,29364
< #line 3437
<   goto ldv_52972;
<   ldv_52971: 
< #line 3437
---
> #line 4007
>   goto ldv_53582;
>   ldv_53581: 
> #line 4007
28490,28491c29366,29367
<   ldv_52969: 
< #line 3447
---
>   ldv_53579: 
> #line 4017
28493c29369
< #line 3447
---
> #line 4017
28495c29371
< #line 3448
---
> #line 4018
28497c29373
< #line 3448
---
> #line 4018
28499c29375
< #line 3449
---
> #line 4019
28501c29377
< #line 3451
---
> #line 4021
28503c29379
< #line 3452
---
> #line 4022
28505c29381
< #line 3454
---
> #line 4024
28508c29384
< #line 3456
---
> #line 4026
28511,28512c29387,29388
< #line 3458
<   return (1);
---
> #line 4028
>   return (0);
28515,28517c29391,29393
< #line 3468 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int receive_bitmap_plain(struct drbd_conf *mdev , unsigned int data_size ,
<                                 unsigned long *buffer , struct bm_xfer_ctx *c ) 
---
> #line 4038 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int receive_bitmap_plain(struct drbd_conf *mdev , unsigned int size , unsigned long *p ,
>                                 struct bm_xfer_ctx *c ) 
28518a29395,29396
>   unsigned int data_size ;
>   unsigned int tmp ;
28526,28528c29404,29410
< #line 3471
<   __min1 = 511UL;
< #line 3471
---
> #line 4041
>   tmp = drbd_header_size(mdev->tconn);
> #line 4041
>   data_size = 4096U - tmp;
> #line 4043
>   __min1 = (unsigned long )(data_size / 8U);
> #line 4043
28530c29412
< #line 3471
---
> #line 4043
28532c29414
< #line 3472
---
> #line 4045
28534,28539c29416,29421
< #line 3475
<   if (want != data_size) {
< #line 3476
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "%s:want (%u) != data_size (%u)\n",
<             "receive_bitmap_plain", want, data_size);
< #line 3477
---
> #line 4048
>   if (want != size) {
> #line 4049
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "%s:want (%u) != size (%u)\n",
>             "receive_bitmap_plain", want, size);
> #line 4050
28544c29426
< #line 3479
---
> #line 4052
28546c29428
< #line 3480
---
> #line 4053
28551,28562c29433,29437
< #line 3481
<   err = drbd_recv(mdev, (void *)buffer, (size_t )want);
< #line 3482
<   if ((unsigned int )err != want) {
< #line 3483
<     if (err >= 0) {
< #line 3484
<       err = -5;
<     } else {
< 
<     }
< #line 3485
---
> #line 4054
>   err = drbd_recv_all(mdev->tconn, (void *)p, (size_t )want);
> #line 4055
>   if (err != 0) {
> #line 4056
28567,28569c29442,29444
< #line 3488
<   drbd_bm_merge_lel(mdev, c->word_offset, (size_t )num_words, buffer);
< #line 3490
---
> #line 4058
>   drbd_bm_merge_lel(mdev, c->word_offset, (size_t )num_words, p);
> #line 4060
28571c29446
< #line 3491
---
> #line 4061
28573c29448
< #line 3492
---
> #line 4062
28575c29450
< #line 3493
---
> #line 4063
28580c29455
< #line 3495
---
> #line 4065
28584,28585c29459,29491
< #line 3505 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int recv_bm_rle_bits(struct drbd_conf *mdev , struct p_compressed_bm *p , struct bm_xfer_ctx *c ) 
---
> #line 4068 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static enum drbd_bitmap_code dcbp_get_code(struct p_compressed_bm *p ) 
> { 
> 
> 
>   {
> #line 4070
>   return ((enum drbd_bitmap_code )((int )p->encoding & 15));
> }
> }
> #line 4073 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int dcbp_get_start(struct p_compressed_bm *p ) 
> { 
> 
> 
>   {
> #line 4075
>   return ((int )((signed char )p->encoding) < 0);
> }
> }
> #line 4078 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int dcbp_get_pad_bits(struct p_compressed_bm *p ) 
> { 
> 
> 
>   {
> #line 4080
>   return (((int )p->encoding >> 4) & 7);
> }
> }
> #line 4090 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int recv_bm_rle_bits(struct drbd_conf *mdev , struct p_compressed_bm *p , struct bm_xfer_ctx *c ,
>                             unsigned int len ) 
28593,28594d29498
<   int len ;
<   __u16 tmp___0 ;
28596c29500
<   int tmp___1 ;
---
>   int tmp___0 ;
28599c29503
<   int tmp___2 ;
---
>   int tmp___1 ;
28602c29506
< #line 3513
---
> #line 4099
28604,28616c29508,29516
< #line 3515
<   tmp___0 = __fswab16((int )p->head.length);
< #line 3515
<   len = (int )((unsigned int )tmp___0 - 1U);
< #line 3516
<   tmp___1 = DCBP_get_start(p);
< #line 3516
<   toggle = tmp___1;
< #line 3520
<   tmp___2 = DCBP_get_pad_bits(p);
< #line 3520
<   bitstream_init(& bs, (void *)(& p->code), (size_t )len, (unsigned int )tmp___2);
< #line 3522
---
> #line 4101
>   tmp___0 = dcbp_get_start(p);
> #line 4101
>   toggle = tmp___0;
> #line 4105
>   tmp___1 = dcbp_get_pad_bits(p);
> #line 4105
>   bitstream_init(& bs, (void *)(& p->code), (size_t )len, (unsigned int )tmp___1);
> #line 4107
28618c29518
< #line 3523
---
> #line 4108
28620c29520
< #line 3524
---
> #line 4109
28625c29525
< #line 3526
---
> #line 4111
28627,28630c29527,29530
< #line 3526
<   goto ldv_53002;
<   ldv_53001: 
< #line 3527
---
> #line 4111
>   goto ldv_53622;
>   ldv_53621: 
> #line 4112
28632c29532
< #line 3528
---
> #line 4113
28634c29534
< #line 3529
---
> #line 4114
28639c29539
< #line 3531
---
> #line 4116
28641c29541
< #line 3532
---
> #line 4117
28643c29543
< #line 3533
---
> #line 4118
28645c29545
< #line 3534
---
> #line 4119
28648c29548
< #line 3535
---
> #line 4120
28653c29553
< #line 3537
---
> #line 4122
28658c29558
< #line 3540
---
> #line 4125
28660c29560
< #line 3541
---
> #line 4126
28664c29564
< #line 3545
---
> #line 4130
28669c29569
< #line 3547
---
> #line 4132
28671c29571
< #line 3548
---
> #line 4133
28673c29573
< #line 3550
---
> #line 4135
28675c29575
< #line 3551
---
> #line 4136
28677c29577
< #line 3552
---
> #line 4137
28682c29582
< #line 3553
---
> #line 4138
28684c29584
< #line 3554
---
> #line 4139
28686c29586
< #line 3526
---
> #line 4111
28688c29588
< #line 3526
---
> #line 4111
28690,28691c29590,29591
<   ldv_53002: ;
< #line 3526
---
>   ldv_53622: ;
> #line 4111
28693,28694c29593,29594
< #line 3527
<     goto ldv_53001;
---
> #line 4112
>     goto ldv_53621;
28698c29598
< #line 3557
---
> #line 4142
28700c29600
< #line 3558
---
> #line 4143
28702c29602
< #line 3560
---
> #line 4145
28706,28707c29606,29608
< #line 3570 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int decode_bitmap_c(struct drbd_conf *mdev , struct p_compressed_bm *p , struct bm_xfer_ctx *c ) 
---
> #line 4155 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int decode_bitmap_c(struct drbd_conf *mdev , struct p_compressed_bm *p , struct bm_xfer_ctx *c ,
>                            unsigned int len ) 
28715,28717c29616,29618
< #line 3574
<   tmp___0 = DCBP_get_code(p);
< #line 3574
---
> #line 4160
>   tmp___0 = dcbp_get_code(p);
> #line 4160
28719,28721c29620,29622
< #line 3575
<     tmp = recv_bm_rle_bits(mdev, p, c);
< #line 3575
---
> #line 4161
>     tmp = recv_bm_rle_bits(mdev, p, c, len - 1U);
> #line 4161
28726c29627
< #line 3581
---
> #line 4167
28729c29630
< #line 3582
---
> #line 4168
28731,28733c29632,29634
< #line 3582
<   val.ldv_39979.conn = 6U;
< #line 3582
---
> #line 4168
>   val.ldv_40604.conn = 6U;
> #line 4168
28735,28739c29636,29640
< #line 3582
<   mask.ldv_39979.conn = 31U;
< #line 3582
<   drbd_force_state(mdev, mask, val);
< #line 3583
---
> #line 4168
>   mask.ldv_40604.conn = 31U;
> #line 4168
>   conn_request_state(mdev->tconn, mask, val, CS_HARD);
> #line 4169
28743c29644
< #line 3586 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4172 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
28745a29647,29649
>   unsigned int header_size ;
>   unsigned int tmp ;
>   unsigned int data_size ;
28751,28753c29655,29663
< #line 3590
<   plain = (unsigned int )(((c->bm_words + 510UL) / 511UL + c->bm_words) + 1UL) * 8U;
< #line 3593
---
> #line 4176
>   tmp = drbd_header_size(mdev->tconn);
> #line 4176
>   header_size = tmp;
> #line 4177
>   data_size = 4096U - header_size;
> #line 4178
>   plain = (unsigned int )(((c->bm_words + (unsigned long )data_size) - 1UL) / (unsigned long )data_size + 1UL) * header_size + (unsigned int )c->bm_words * 8U;
> #line 4181
28755c29665
< #line 3597
---
> #line 4185
28757c29667
< #line 3598
---
> #line 4186
28762c29672
< #line 3601
---
> #line 4189
28764c29674
< #line 3602
---
> #line 4190
28769c29679
< #line 3605
---
> #line 4193
28771c29681
< #line 3608
---
> #line 4196
28773c29683
< #line 3609
---
> #line 4197
28778c29688
< #line 3611
---
> #line 4199
28780c29690
< #line 3612
---
> #line 4200
28784c29694
< #line 3613
---
> #line 4201
28788,28789c29698,29699
< #line 3628 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int receive_bitmap(struct drbd_conf *mdev , enum drbd_packets cmd , unsigned int data_size ) 
---
> #line 4216 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int receive_bitmap(struct drbd_tconn *tconn , struct packet_info *pi ) 
28790a29701
>   struct drbd_conf *mdev ;
28792d29702
<   void *buffer ;
28794,28796d29703
<   int ok ;
<   struct p_header80 *h ;
<   unsigned long tmp ;
28798,28799c29705,29706
<   unsigned long tmp___0 ;
<   size_t tmp___1 ;
---
>   unsigned long tmp ;
>   size_t tmp___0 ;
28801,28804c29708,29709
<   size_t __len ;
<   void *__ret ;
<   int tmp___2 ;
<   int tmp___3 ;
---
>   unsigned int tmp___1 ;
>   unsigned int tmp___2 ;
28806d29710
<   int tmp___4 ;
28809c29713
<   char const   *tmp___5 ;
---
>   char const   *tmp___3 ;
28812,28828c29716,29721
< #line 3633
<   ok = 0;
< #line 3634
<   h = & mdev->data.rbuf.header.h80;
< #line 3636
<   drbd_bm_lock(mdev, (char *)"receive bitmap", BM_LOCKED_SET_ALLOWED);
< #line 3642
<   tmp = __get_free_pages(16U, 0U);
< #line 3642
<   buffer = (void *)tmp;
< #line 3643
<   if ((unsigned long )buffer == (unsigned long )((void *)0)) {
< #line 3644
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "failed to allocate one page buffer in %s\n",
<             "receive_bitmap");
< #line 3645
<     goto out;
---
> #line 4222
>   mdev = vnr_to_mdev(tconn, (int )pi->vnr);
> #line 4223
>   if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
> #line 4224
>     return (-5);
28832,28840c29725,29735
< #line 3648
<   tmp___0 = drbd_bm_bits(mdev);
< #line 3648
<   tmp___1 = drbd_bm_words(mdev);
< #line 3648
<   __constr_expr_0.bm_bits = tmp___0;
< #line 3648
<   __constr_expr_0.bm_words = tmp___1;
< #line 3648
---
> #line 4226
>   drbd_bm_lock(mdev, (char *)"receive bitmap", BM_LOCKED_SET_ALLOWED);
> #line 4230
>   tmp = drbd_bm_bits(mdev);
> #line 4230
>   tmp___0 = drbd_bm_words(mdev);
> #line 4230
>   __constr_expr_0.bm_bits = tmp;
> #line 4230
>   __constr_expr_0.bm_words = tmp___0;
> #line 4230
28842c29737
< #line 3648
---
> #line 4230
28844c29739
< #line 3648
---
> #line 4230
28846c29741
< #line 3648
---
> #line 4230
28848c29743
< #line 3648
---
> #line 4230
28850c29745
< #line 3648
---
> #line 4230
28852c29747
< #line 3648
---
> #line 4230
28854,28858c29749,29753
<   ldv_53039: ;
< #line 3654
<   if ((unsigned int )cmd == 4U) {
< #line 3655
<     err = receive_bitmap_plain(mdev, data_size, (unsigned long *)buffer, & c);
---
>   ldv_53655: ;
> #line 4236
>   if ((unsigned int )pi->cmd == 4U) {
> #line 4237
>     err = receive_bitmap_plain(mdev, pi->size, (unsigned long *)pi->data, & c);
28860,28864c29755,29763
< #line 3656
<   if ((unsigned int )cmd == 36U) {
< #line 3661
<     if (data_size > 4088U) {
< #line 3662
---
> #line 4238
>   if ((unsigned int )pi->cmd == 36U) {
> #line 4241
>     p = (struct p_compressed_bm *)pi->data;
> #line 4243
>     tmp___1 = drbd_header_size(tconn);
> #line 4243
>     if (pi->size > 4096U - tmp___1) {
> #line 4244
28866c29765,29767
< #line 3663
---
> #line 4245
>       err = -5;
> #line 4246
28871,28887c29772,29779
< #line 3666
<     p = (struct p_compressed_bm *)buffer;
< #line 3667
<     __len = 8UL;
< #line 3667
<     if (__len > 63UL) {
< #line 3667
<       __ret = __memcpy((void *)p, (void const   *)h, __len);
<     } else {
< #line 3667
<       __ret = __builtin_memcpy((void *)p, (void const   *)h, __len);
<     }
< #line 3668
<     tmp___2 = drbd_recv(mdev, (void *)(& p->head.payload), (size_t )data_size);
< #line 3668
<     if ((unsigned int )tmp___2 != data_size) {
< #line 3669
---
> #line 4248
>     if (pi->size <= 1U) {
> #line 4249
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ReportCBitmap packet too small (l:%u)\n",
>               pi->size);
> #line 4250
>       err = -5;
> #line 4251
28892,28897c29784,29788
< #line 3670
<     if (data_size <= 1U) {
< #line 3671
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ReportCBitmap packet too small (l:%u)\n",
<               data_size);
< #line 3672
---
> #line 4253
>     err = drbd_recv_all(mdev->tconn, (void *)p, (size_t )pi->size);
> #line 4254
>     if (err != 0) {
> #line 4255
28902,28903c29793,29794
< #line 3674
<     err = decode_bitmap_c(mdev, p, & c);
---
> #line 4256
>     err = decode_bitmap_c(mdev, p, & c, pi->size);
28905c29796
< #line 3676
---
> #line 4258
28907,28908c29798,29801
<              (unsigned int )cmd);
< #line 3677
---
>              (unsigned int )pi->cmd);
> #line 4259
>     err = -5;
> #line 4260
28911,28915c29804,29810
< #line 3680
<   c.packets[(unsigned int )cmd == 4U] = c.packets[(unsigned int )cmd == 4U] + 1U;
< #line 3681
<   c.bytes[(unsigned int )cmd == 4U] = (c.bytes[(unsigned int )cmd == 4U] + data_size) + 8U;
< #line 3683
---
> #line 4263
>   c.packets[(unsigned int )pi->cmd == 4U] = c.packets[(unsigned int )pi->cmd == 4U] + 1U;
> #line 4264
>   tmp___2 = drbd_header_size(tconn);
> #line 4264
>   c.bytes[(unsigned int )pi->cmd == 4U] = c.bytes[(unsigned int )pi->cmd == 4U] + (tmp___2 + pi->size);
> #line 4266
28917c29812
< #line 3684
---
> #line 4267
28919c29814
< #line 3685
---
> #line 4268
28924,28925c29819,29820
< #line 3686
<     goto ldv_53038;
---
> #line 4269
>     goto ldv_53654;
28929,28933c29824,29828
< #line 3688
<   tmp___3 = drbd_recv_header(mdev, & cmd, & data_size);
< #line 3688
<   if (tmp___3 == 0) {
< #line 3689
---
> #line 4271
>   err = drbd_recv_header(mdev->tconn, pi);
> #line 4272
>   if (err != 0) {
> #line 4273
28938,28941c29833,29836
< #line 3690
<   goto ldv_53039;
<   ldv_53038: 
< #line 3692
---
> #line 4274
>   goto ldv_53655;
>   ldv_53654: 
> #line 4276
28943,28951c29838,29844
< #line 3694
<   if ((unsigned int )*((unsigned short *)mdev + 1138UL) == 224U) {
< #line 3697
<     tmp___4 = drbd_send_bitmap(mdev);
< #line 3697
<     ok = tmp___4 == 0;
< #line 3698
<     if (ok == 0) {
< #line 3699
---
> #line 4278
>   if ((unsigned int )*((unsigned short *)mdev + 374UL) == 224U) {
> #line 4281
>     err = drbd_send_bitmap(mdev);
> #line 4282
>     if (err != 0) {
> #line 4283
28956c29849
< #line 3701
---
> #line 4285
28958,28960c29851,29853
< #line 3701
<     val.ldv_39979.conn = 15U;
< #line 3701
---
> #line 4285
>     val.ldv_40604.conn = 15U;
> #line 4285
28962,28964c29855,29857
< #line 3701
<     mask.ldv_39979.conn = 31U;
< #line 3701
---
> #line 4285
>     mask.ldv_40604.conn = 31U;
> #line 4285
28966c29859
< #line 3702
---
> #line 4286
28968c29861
< #line 3702
---
> #line 4286
28970,28971c29863,29864
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<               3702);
---
>               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>               4286);
28976,28980c29869,29873
< #line 3703
<   if ((unsigned int )*((unsigned short *)mdev + 1138UL) != 208U) {
< #line 3706
<     tmp___5 = drbd_conn_str((enum drbd_conns )mdev->state.ldv_39979.conn);
< #line 3706
---
> #line 4287
>   if ((unsigned int )*((unsigned short *)mdev + 374UL) != 208U) {
> #line 4290
>     tmp___3 = drbd_conn_str((enum drbd_conns )mdev->state.ldv_50103.conn);
> #line 4290
28982c29875
<               tmp___5);
---
>               tmp___3);
28986,28987c29879,29880
< #line 3710
<   ok = 1;
---
> #line 4293
>   err = 0;
28989c29882
< #line 3712
---
> #line 4296
28991,28993c29884,29886
< #line 3713
<   if (ok != 0 && (unsigned int )*((unsigned short *)mdev + 1138UL) == 208U) {
< #line 3714
---
> #line 4297
>   if (err == 0 && (unsigned int )*((unsigned short *)mdev + 374UL) == 208U) {
> #line 4298
28998,29001c29891,29892
< #line 3715
<   free_pages((unsigned long )buffer, 0U);
< #line 3716
<   return (ok);
---
> #line 4299
>   return (err);
29004,29005c29895,29896
< #line 3719 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int receive_skip(struct drbd_conf *mdev , enum drbd_packets cmd , unsigned int data_size ) 
---
> #line 4302 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int receive_skip(struct drbd_tconn *tconn , struct packet_info *pi ) 
29007,29013c29898
<   char sink[128U] ;
<   int size ;
<   int want ;
<   int r ;
<   int __min1 ;
<   int __min2 ;
<   int _b ;
---
>   int tmp ;
29016,29062c29901,29907
< #line 3725
<   dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "skipping unknown optional packet type %d, l: %d!\n",
<            (unsigned int )cmd, data_size);
< #line 3728
<   size = (int )data_size;
< #line 3729
<   goto ldv_53062;
<   ldv_53061: 
< #line 3730
<   __min1 = size;
< #line 3730
<   __min2 = 128;
< #line 3730
<   want = __min1 < __min2 ? __min1 : __min2;
< #line 3731
<   r = drbd_recv(mdev, (void *)(& sink), (size_t )want);
< #line 3732
<   _b = r <= 0;
< #line 3732
<   if (_b != 0) {
< #line 3732
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "receive_skip", (char *)"r <= 0", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             3732);
<   } else {
< 
<   }
< #line 3732
<   if (_b != 0) {
< #line 3732
<     goto ldv_53060;
<   } else {
< 
<   }
< #line 3733
<   size = size - r;
<   ldv_53062: ;
< #line 3729
<   if (size > 0) {
< #line 3730
<     goto ldv_53061;
<   } else {
< 
<   }
<   ldv_53060: ;
< #line 3735
<   return (size == 0);
---
> #line 4304
>   printk("\fd-con %s: skipping unknown optional packet type %d, l: %d!\n", tconn->name,
>          (unsigned int )pi->cmd, pi->size);
> #line 4307
>   tmp = ignore_remaining_packet(tconn, pi);
> #line 4307
>   return (tmp);
29065,29066c29910,29911
< #line 3738 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int receive_UnplugRemote(struct drbd_conf *mdev , enum drbd_packets cmd , unsigned int data_size ) 
---
> #line 4310 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int receive_UnplugRemote(struct drbd_tconn *tconn , struct packet_info *pi ) 
29071,29074c29916,29919
< #line 3742
<   drbd_tcp_quickack(mdev->data.socket);
< #line 3744
<   return (1);
---
> #line 4314
>   drbd_tcp_quickack(tconn->data.socket);
> #line 4316
>   return (0);
29077,29078c29922,29923
< #line 3747 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int receive_out_of_sync(struct drbd_conf *mdev , enum drbd_packets cmd , unsigned int data_size ) 
---
> #line 4319 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int receive_out_of_sync(struct drbd_tconn *tconn , struct packet_info *pi ) 
29079a29925
>   struct drbd_conf *mdev ;
29086,29089c29932,29944
< #line 3749
<   p = & mdev->data.rbuf.block_desc;
< #line 3751
<   switch ((int )mdev->state.ldv_39979.conn) {
---
> #line 4322
>   p = (struct p_block_desc *)pi->data;
> #line 4324
>   mdev = vnr_to_mdev(tconn, (int )pi->vnr);
> #line 4325
>   if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
> #line 4326
>     return (-5);
>   } else {
> 
>   }
> #line 4328
>   switch ((int )mdev->state.ldv_50103.conn) {
29093,29094c29948,29949
< #line 3755
<   goto ldv_53077;
---
> #line 4332
>   goto ldv_53678;
29096,29098c29951,29953
< #line 3757
<   tmp = drbd_conn_str((enum drbd_conns )mdev->state.ldv_39979.conn);
< #line 3757
---
> #line 4334
>   tmp = drbd_conn_str((enum drbd_conns )mdev->state.ldv_50103.conn);
> #line 4334
29102,29103c29957,29958
<   ldv_53077: 
< #line 3761
---
>   ldv_53678: 
> #line 4338
29105c29960
< #line 3761
---
> #line 4338
29107,29111c29962,29966
< #line 3761
<   __drbd_set_out_of_sync(mdev, (sector_t )tmp___1, (int )tmp___0, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<                          3761U);
< #line 3763
<   return (1);
---
> #line 4338
>   __drbd_set_out_of_sync(mdev, (sector_t )tmp___1, (int )tmp___0, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>                          4338U);
> #line 4340
>   return (0);
29114,29121c29969,29977
< #line 3774 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static struct data_cmd drbd_cmd_handler[43U]  = 
< #line 3774
<   {      {1, 32UL, & receive_Data}, 
<         {1, 32UL, & receive_DataReply}, 
<         {1, 32UL, & receive_RSDataReply}, 
<         {0, 16UL, & receive_Barrier}, 
<         {1, 8UL, & receive_bitmap}, 
---
> #line 4349 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static struct data_cmd drbd_cmd_handler[46U]  = 
> #line 4349
>   {      {1, 24UL, & receive_Data}, 
>         {1, 24UL, & receive_DataReply}, 
>         {1, 24UL, & receive_RSDataReply}, 
>         {0, 8UL, & receive_Barrier}, 
>         {1, 0UL, & receive_bitmap}, 
>         {0, 0UL, 0}, 
29122a29979,29987
>         {0, 0UL, & receive_UnplugRemote}, 
>         {0, 24UL, & receive_DataRequest}, 
>         {0, 24UL, & receive_DataRequest}, 
>         {1, 0UL, & receive_SyncParam}, 
>         {1, 24UL, & receive_protocol}, 
>         {0, 48UL, & receive_uuids}, 
>         {0, 32UL, & receive_sizes}, 
>         {0, 4UL, & receive_state}, 
>         {0, 8UL, & receive_sync_uuid}, 
29124,29132d29988
<         {0, 8UL, & receive_UnplugRemote}, 
<         {0, 32UL, & receive_DataRequest}, 
<         {0, 32UL, & receive_DataRequest}, 
<         {1, 8UL, & receive_SyncParam}, 
<         {1, 32UL, & receive_protocol}, 
<         {0, 56UL, & receive_uuids}, 
<         {0, 40UL, & receive_sizes}, 
<         {0, 12UL, & receive_state}, 
<         {0, 16UL, & receive_sync_uuid}, 
29133a29990
>         {0, 8UL, & receive_req_state}, 
29135d29991
<         {0, 16UL, & receive_req_state}, 
29145a30002,30003
>         {0, 24UL, & receive_DataRequest}, 
>         {1, 24UL, & receive_DataRequest}, 
29147,29148c30005
<         {0, 32UL, & receive_DataRequest}, 
<         {1, 32UL, & receive_DataRequest}, 
---
>         {1, 24UL, & receive_DataRequest}, 
29150c30007,30008
<         {1, 32UL, & receive_DataRequest}, 
---
>         {1, 0UL, & receive_SyncParam}, 
>         {1, 0UL, & receive_bitmap}, 
29152,29153d30009
<         {1, 8UL, & receive_SyncParam}, 
<         {1, 8UL, & receive_bitmap}, 
29154a30011,30012
>         {0, 8UL, & receive_skip}, 
>         {0, 16UL, & receive_out_of_sync}, 
29156,29157c30014
<         {0, 16UL, & receive_skip}, 
<         {0, 24UL, & receive_out_of_sync}, 
---
>         {0, 8UL, & receive_req_conn_state}, 
29159,29165c30016,30021
<         {0, 0UL, 0}};
< #line 3809 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static void drbdd(struct drbd_conf *mdev ) 
< { 
<   union p_header *header ;
<   unsigned int packet_size ;
<   enum drbd_packets cmd ;
---
>         {0, 0UL, 0}, 
>         {1, 24UL, & receive_protocol}};
> #line 4376 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static void drbdd(struct drbd_tconn *tconn ) 
> { 
>   struct packet_info pi ;
29167c30023,30024
<   int rv ;
---
>   int err ;
>   struct data_cmd *cmd ;
29169c30026
<   long tmp___0 ;
---
>   char const   *tmp___0 ;
29171,29177c30028,30031
<   char const   *tmp___2 ;
<   struct task_struct *tmp___3 ;
<   int tmp___4 ;
<   long tmp___5 ;
<   char const   *tmp___6 ;
<   long tmp___7 ;
<   enum drbd_thread_state tmp___8 ;
---
>   long tmp___2 ;
>   char const   *tmp___3 ;
>   char const   *tmp___4 ;
>   enum drbd_thread_state tmp___5 ;
29182,29193c30036,30045
< #line 3811
<   header = & mdev->data.rbuf.header;
< #line 3817
<   goto ldv_53098;
<   ldv_53097: 
< #line 3818
<   drbd_thread_current_set_cpu(mdev);
< #line 3819
<   tmp = drbd_recv_header(mdev, & cmd, & packet_size);
< #line 3819
<   if (tmp == 0) {
< #line 3820
---
> #line 4382
>   goto ldv_53698;
>   ldv_53697: 
> #line 4385
>   drbd_thread_current_set_cpu(& tconn->receiver);
> #line 4386
>   tmp = drbd_recv_header(tconn, & pi);
> #line 4386
>   if (tmp != 0) {
> #line 4387
29198,29205c30050,30062
< #line 3822
<   tmp___0 = __builtin_expect((unsigned int )cmd > 41U, 0L);
< #line 3822
<   if (tmp___0 != 0L) {
< #line 3823
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "unknown packet type %d, l: %d!\n",
<             (unsigned int )cmd, packet_size);
< #line 3824
---
> #line 4389
>   cmd = (struct data_cmd *)(& drbd_cmd_handler) + (unsigned long )pi.cmd;
> #line 4390
>   tmp___1 = __builtin_expect((unsigned int )pi.cmd > (unsigned int )P_PROTOCOL_UPDATE,
>                              0L);
> #line 4390
>   if (tmp___1 != 0L) {
> #line 4391
>     tmp___0 = cmdname(pi.cmd);
> #line 4391
>     printk("\vd-con %s: Unexpected data packet %s (0x%04x)", tconn->name, tmp___0,
>            (unsigned int )pi.cmd);
> #line 4393
29208,29211c30065,30067
< #line 3822
<     tmp___1 = __builtin_expect((unsigned long )drbd_cmd_handler[(unsigned int )cmd].function == (unsigned long )((int (*)(struct drbd_conf * ,
<                                                                                                                           enum drbd_packets  ,
<                                                                                                                           unsigned int  ))0),
---
> #line 4390
>     tmp___2 = __builtin_expect((unsigned long )cmd->fn == (unsigned long )((int (*)(struct drbd_tconn * ,
>                                                                                     struct packet_info * ))0),
29213,29218c30069,30076
< #line 3822
<     if (tmp___1 != 0L) {
< #line 3823
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "unknown packet type %d, l: %d!\n",
<               (unsigned int )cmd, packet_size);
< #line 3824
---
> #line 4390
>     if (tmp___2 != 0L) {
> #line 4391
>       tmp___0 = cmdname(pi.cmd);
> #line 4391
>       printk("\vd-con %s: Unexpected data packet %s (0x%04x)", tconn->name, tmp___0,
>              (unsigned int )pi.cmd);
> #line 4393
29224,29233c30082,30090
< #line 3827
<   shs = drbd_cmd_handler[(unsigned int )cmd].pkt_size - 8UL;
< #line 3828
<   if ((size_t )packet_size != shs && drbd_cmd_handler[(unsigned int )cmd].expect_payload == 0) {
< #line 3829
<     tmp___2 = cmdname(cmd);
< #line 3829
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "No payload expected %s l:%d\n",
<             tmp___2, packet_size);
< #line 3830
---
> #line 4396
>   shs = cmd->pkt_size;
> #line 4397
>   if ((size_t )pi.size > shs && cmd->expect_payload == 0) {
> #line 4398
>     tmp___3 = cmdname(pi.cmd);
> #line 4398
>     printk("\vd-con %s: No payload expected %s l:%d\n", tconn->name, tmp___3, pi.size);
> #line 4400
29238c30095
< #line 3833
---
> #line 4403
29240,29258c30097,30101
< #line 3834
<     rv = drbd_recv(mdev, (void *)(& header->h80.payload), shs);
< #line 3835
<     tmp___5 = __builtin_expect((size_t )rv != shs, 0L);
< #line 3835
<     if (tmp___5 != 0L) {
< #line 3836
<       tmp___3 = get_current();
< #line 3836
<       tmp___4 = signal_pending(tmp___3);
< #line 3836
<       if (tmp___4 == 0) {
< #line 3837
<         dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "short read while reading sub header: rv=%d\n",
<                  rv);
<       } else {
< 
<       }
< #line 3838
---
> #line 4404
>     err = drbd_recv_all_warn(tconn, pi.data, shs);
> #line 4405
>     if (err != 0) {
> #line 4406
29262a30106,30107
> #line 4407
>     pi.size = pi.size - (unsigned int )shs;
29266,29277c30111,30120
< #line 3842
<   rv = (*(drbd_cmd_handler[(unsigned int )cmd].function))(mdev, cmd, packet_size - (unsigned int )shs);
< #line 3844
<   tmp___7 = __builtin_expect(rv == 0, 0L);
< #line 3844
<   if (tmp___7 != 0L) {
< #line 3845
<     tmp___6 = cmdname(cmd);
< #line 3845
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "error receiving %s, l: %d!\n",
<             tmp___6, packet_size);
< #line 3847
---
> #line 4410
>   err = (*(cmd->fn))(tconn, & pi);
> #line 4411
>   if (err != 0) {
> #line 4412
>     tmp___4 = cmdname(pi.cmd);
> #line 4412
>     printk("\vd-con %s: error receiving %s, e: %d l: %d!\n", tconn->name, tmp___4,
>            err, pi.size);
> #line 4414
29282,29288c30125,30131
<   ldv_53098: 
< #line 3817
<   tmp___8 = get_t_state(& mdev->receiver);
< #line 3817
<   if ((unsigned int )tmp___8 == 1U) {
< #line 3818
<     goto ldv_53097;
---
>   ldv_53698: 
> #line 4382
>   tmp___5 = get_t_state(& tconn->receiver);
> #line 4382
>   if ((unsigned int )tmp___5 == 1U) {
> #line 4383
>     goto ldv_53697;
29293,29311c30136,30149
< #line 3851
<   if (0) {
<     err_out: 
< #line 3853
<     val.i = 0U;
< #line 3853
<     val.ldv_39979.conn = 6U;
< #line 3853
<     mask.i = 0U;
< #line 3853
<     mask.ldv_39979.conn = 31U;
< #line 3853
<     drbd_force_state(mdev, mask, val);
<   } else {
< 
<   }
< #line 3857
<   drbd_md_sync(mdev);
< #line 3858
---
> #line 4417
>   return;
>   err_out: 
> #line 4420
>   val.i = 0U;
> #line 4420
>   val.ldv_40604.conn = 6U;
> #line 4420
>   mask.i = 0U;
> #line 4420
>   mask.ldv_40604.conn = 31U;
> #line 4420
>   conn_request_state(tconn, mask, val, CS_HARD);
> #line 4422
29315,29316c30153,30154
< #line 3860 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< void drbd_flush_workqueue(struct drbd_conf *mdev ) 
---
> #line 4423 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> void conn_flush_workqueue(struct drbd_tconn *tconn ) 
29321c30159
< #line 3864
---
> #line 4427
29323c30161,30163
< #line 3865
---
> #line 4428
>   barr.w.ldv_50388.tconn = tconn;
> #line 4429
29325,29327c30165,30167
< #line 3866
<   drbd_queue_work(& mdev->data.work, & barr.w);
< #line 3867
---
> #line 4430
>   drbd_queue_work(& tconn->sender_work, & barr.w);
> #line 4431
29329c30169
< #line 3868
---
> #line 4432
29333,29334c30173,30174
< #line 3870 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< void drbd_free_tl_hash(struct drbd_conf *mdev ) 
---
> #line 4434 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static void conn_disconnect(struct drbd_tconn *tconn ) 
29336,29340c30176,30189
<   struct hlist_head *h ;
<   struct drbd_request *req ;
<   struct hlist_node *pos ;
<   struct hlist_node *n ;
<   struct hlist_node  const  *__mptr ;
---
>   struct drbd_conf *mdev ;
>   enum drbd_conns oc ;
>   int vnr ;
>   union drbd_state val ;
>   union drbd_state mask ;
>   void *tmp ;
>   void *tmp___0 ;
>   int tmp___1 ;
>   enum drbd_role tmp___2 ;
>   enum drbd_disk_state tmp___3 ;
>   union drbd_state val___0 ;
>   union drbd_state mask___0 ;
>   union drbd_state val___1 ;
>   union drbd_state mask___1 ;
29343,29349c30192,30194
< #line 3874
<   spin_lock_irq(& mdev->req_lock);
< #line 3876
<   if ((unsigned long )mdev->tl_hash == (unsigned long )((struct hlist_head *)0) || (unsigned int )*((unsigned short *)mdev + 1138UL) != 0U) {
< #line 3877
<     spin_unlock_irq(& mdev->req_lock);
< #line 3878
---
> #line 4440
>   if ((unsigned int )tconn->cstate == 0U) {
> #line 4441
29354,29363c30199,30244
< #line 3881
<   h = mdev->ee_hash;
< #line 3881
<   goto ldv_53113;
<   ldv_53112: ;
< #line 3882
<   if ((unsigned long )h->first != (unsigned long )((struct hlist_node *)0)) {
< #line 3883
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED ee_hash[%u].first == %p, expected NULL\n",
<             (int )(((long )h - (long )mdev->ee_hash) / 8L), h->first);
---
> #line 4448
>   val.i = 0U;
> #line 4448
>   val.ldv_40604.conn = 5U;
> #line 4448
>   mask.i = 0U;
> #line 4448
>   mask.ldv_40604.conn = 31U;
> #line 4448
>   conn_request_state(tconn, mask, val, CS_HARD);
> #line 4451
>   drbd_thread_stop(& tconn->asender);
> #line 4452
>   drbd_free_sock(tconn);
> #line 4454
>   rcu_read_lock();
> #line 4455
>   vnr = 0;
> #line 4455
>   tmp = idr_get_next(& tconn->volumes, & vnr);
> #line 4455
>   mdev = (struct drbd_conf *)tmp;
> #line 4455
>   goto ldv_53719;
>   ldv_53718: 
> #line 4456
>   kref_get(& mdev->kref);
> #line 4457
>   rcu_read_unlock();
> #line 4458
>   drbd_disconnected(mdev);
> #line 4459
>   kref_put(& mdev->kref, & drbd_minor_destroy);
> #line 4460
>   rcu_read_lock();
> #line 4455
>   vnr = vnr + 1;
> #line 4455
>   tmp___0 = idr_get_next(& tconn->volumes, & vnr);
> #line 4455
>   mdev = (struct drbd_conf *)tmp___0;
>   ldv_53719: ;
> #line 4455
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 4456
>     goto ldv_53718;
29367,29373c30248,30256
< #line 3881
<   h = h + 1;
<   ldv_53113: ;
< #line 3881
<   if ((unsigned long )(mdev->ee_hash + (unsigned long )mdev->ee_hash_s) > (unsigned long )h) {
< #line 3882
<     goto ldv_53112;
---
> #line 4462
>   rcu_read_unlock();
> #line 4464
>   tmp___1 = list_empty((struct list_head  const  *)(& (tconn->current_epoch)->list));
> #line 4464
>   if (tmp___1 == 0) {
> #line 4465
>     printk("\vd-con %s: ASSERTION FAILED: tconn->current_epoch->list not empty\n",
>            tconn->name);
29377,29417c30260,30275
< #line 3885
<   kfree((void const   *)mdev->ee_hash);
< #line 3886
<   mdev->ee_hash = 0;
< #line 3887
<   mdev->ee_hash_s = 0U;
< #line 3892
<   h = mdev->tl_hash;
< #line 3892
<   goto ldv_53126;
<   ldv_53125: 
< #line 3895
<   pos = h->first;
< #line 3895
<   goto ldv_53123;
<   ldv_53122: 
< #line 3896
<   hlist_del_init(& req->collision);
< #line 3897
<   hlist_add_fake(& req->collision);
< #line 3895
<   pos = n;
<   ldv_53123: ;
< #line 3895
<   if ((unsigned long )pos != (unsigned long )((struct hlist_node *)0)) {
< #line 3895
<     n = pos->next;
< #line 3895
<     if (1 != 0) {
< #line 3895
<       __mptr = (struct hlist_node  const  *)pos;
< #line 3895
<       req = (struct drbd_request *)__mptr + 0xffffffffffffffd8UL;
< #line 3895
<       if (1 != 0) {
< #line 3896
<         goto ldv_53122;
<       } else {
< #line 3898
<         goto ldv_53124;
<       }
---
> #line 4467
>   atomic_set(& (tconn->current_epoch)->epoch_size, 0);
> #line 4468
>   tconn->send.seen_any_write_yet = 0;
> #line 4470
>   printk("\016d-con %s: Connection closed\n", tconn->name);
> #line 4472
>   tmp___2 = conn_highest_role(tconn);
> #line 4472
>   if ((unsigned int )tmp___2 == 1U) {
> #line 4472
>     tmp___3 = conn_highest_pdsk(tconn);
> #line 4472
>     if ((unsigned int )tmp___3 > 5U) {
> #line 4473
>       conn_try_outdate_peer_async(tconn);
29419,29420c30277
< #line 3898
<       goto ldv_53124;
---
> 
29425,29432c30282,30297
<   ldv_53124: 
< #line 3892
<   h = h + 1;
<   ldv_53126: ;
< #line 3892
<   if ((unsigned long )(mdev->tl_hash + (unsigned long )mdev->tl_hash_s) > (unsigned long )h) {
< #line 3893
<     goto ldv_53125;
---
> #line 4475
>   spin_lock_irq(& tconn->req_lock);
> #line 4476
>   oc = tconn->cstate;
> #line 4477
>   if ((unsigned int )oc > 1U) {
> #line 4478
>     val___0.i = 0U;
> #line 4478
>     val___0.ldv_40604.conn = 2U;
> #line 4478
>     mask___0.i = 0U;
> #line 4478
>     mask___0.ldv_40604.conn = 31U;
> #line 4478
>     _conn_request_state(tconn, mask___0, val___0, CS_VERBOSE);
29436,29444c30301,30318
< #line 3901
<   kfree((void const   *)mdev->tl_hash);
< #line 3902
<   mdev->tl_hash = 0;
< #line 3903
<   mdev->tl_hash_s = 0U;
< #line 3904
<   spin_unlock_irq(& mdev->req_lock);
< #line 3905
---
> #line 4480
>   spin_unlock_irq(& tconn->req_lock);
> #line 4482
>   if ((unsigned int )oc == 1U) {
> #line 4483
>     val___1.i = 0U;
> #line 4483
>     val___1.ldv_40604.conn = 0U;
> #line 4483
>     mask___1.i = 0U;
> #line 4483
>     mask___1.ldv_40604.conn = 31U;
> #line 4483
>     conn_request_state(tconn, mask___1, val___1, 3);
>   } else {
> 
>   }
> #line 4485
29448,29449c30322,30323
< #line 3907 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static void drbd_disconnect(struct drbd_conf *mdev ) 
---
> #line 4486 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int drbd_disconnected(struct drbd_conf *mdev ) 
29451,29454d30324
<   enum drbd_fencing_p fp ;
<   union drbd_state os ;
<   union drbd_state ns ;
<   int rv ;
29456,29457d30325
<   union drbd_state val ;
<   union drbd_state mask ;
29460,29461d30327
<   enum drbd_state_rv tmp___1 ;
<   int tmp___2 ;
29463c30329,30331
<   struct task_struct *tmp___3 ;
---
>   struct task_struct *tmp___1 ;
>   int tmp___2 ;
>   int tmp___3 ;
29465,29466d30332
<   union drbd_state val___0 ;
<   union drbd_state mask___0 ;
29468,29469c30334
<   wait_queue_t __wait___0 ;
<   struct task_struct *tmp___6 ;
---
>   int tmp___6 ;
29473,29478d30337
<   int tmp___10 ;
<   int tmp___11 ;
<   int tmp___12 ;
<   int tmp___13 ;
<   int tmp___14 ;
<   int tmp___15 ;
29481,29506c30340,30342
< #line 3911
<   rv = 0;
< #line 3914
<   if ((unsigned int )*((unsigned short *)mdev + 1138UL) == 0U) {
< #line 3915
<     return;
<   } else {
< 
<   }
< #line 3922
<   val.i = 0U;
< #line 3922
<   val.ldv_39979.conn = 5U;
< #line 3922
<   mask.i = 0U;
< #line 3922
<   mask.ldv_39979.conn = 31U;
< #line 3922
<   drbd_force_state(mdev, mask, val);
< #line 3925
<   drbd_thread_stop(& mdev->asender);
< #line 3926
<   drbd_free_sock(mdev);
< #line 3929
<   spin_lock_irq(& mdev->req_lock);
< #line 3930
---
> #line 4491
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 4492
29508c30344
< #line 3931
---
> #line 4493
29510c30346
< #line 3932
---
> #line 4494
29512,29514c30348,30350
< #line 3933
<   spin_unlock_irq(& mdev->req_lock);
< #line 3945
---
> #line 4495
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 4507
29516c30352
< #line 3946
---
> #line 4508
29518c30354
< #line 3947
---
> #line 4509
29520c30356
< #line 3948
---
> #line 4510
29522c30358
< #line 3949
---
> #line 4511
29524c30360
< #line 3952
---
> #line 4513
29526c30362
< #line 3953
---
> #line 4514
29528c30364
< #line 3958
---
> #line 4519
29530,29532c30366,30372
< #line 3962
<   drbd_process_done_ee(mdev);
< #line 3964
---
> #line 4521
>   drbd_finish_peer_reqs(mdev);
> #line 4526
>   drbd_flush_workqueue(mdev);
> #line 4530
>   drbd_rs_cancel_all(mdev);
> #line 4532
29534c30374
< #line 3965
---
> #line 4533
29536,29538c30376,30378
< #line 3967
<   tmp = is_susp(mdev->state);
< #line 3967
---
> #line 4535
>   tmp = drbd_suspended(mdev);
> #line 4535
29540,29541c30380,30381
< #line 3968
<     tl_clear(mdev);
---
> #line 4536
>     tl_clear(mdev->tconn);
29545,29547c30385
< #line 3970
<   _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Connection closed\n");
< #line 3972
---
> #line 4538
29549,29657c30387,30392
< #line 3974
<   fp = FP_DONT_CARE;
< #line 3975
<   tmp___0 = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 3975
<   if (tmp___0 != 0) {
< #line 3976
<     fp = (enum drbd_fencing_p )(mdev->ldev)->dc.fencing;
< #line 3977
<     put_ldev(mdev);
<   } else {
< 
<   }
< #line 3980
<   if (((unsigned int )*((unsigned char *)mdev + 2276UL) == 1U && (unsigned int )fp != 0U) && (int )mdev->state.ldv_39979.pdsk > 5) {
< #line 3981
<     drbd_try_outdate_peer_async(mdev);
<   } else {
< 
<   }
< #line 3983
<   spin_lock_irq(& mdev->req_lock);
< #line 3984
<   os = mdev->state;
< #line 3985
<   if ((int )os.ldv_39979.conn > 1) {
< #line 3987
<     ns = os;
< #line 3988
<     ns.ldv_39979.conn = 2U;
< #line 3989
<     tmp___1 = _drbd_set_state(mdev, ns, CS_VERBOSE, 0);
< #line 3989
<     rv = (int )tmp___1;
<   } else {
< 
<   }
< #line 3991
<   spin_unlock_irq(& mdev->req_lock);
< #line 3993
<   if ((unsigned int )*((unsigned short *)(& os) + 0UL) == 16U) {
< #line 3994
<     tmp___2 = atomic_read((atomic_t const   *)(& mdev->net_cnt));
< #line 3994
<     if (tmp___2 == 0) {
< #line 3994
<       goto ldv_53140;
<     } else {
< 
<     }
< #line 3994
<     tmp___3 = get_current();
< #line 3994
<     __wait.flags = 0U;
< #line 3994
<     __wait.private = (void *)tmp___3;
< #line 3994
<     __wait.func = & autoremove_wake_function;
< #line 3994
<     __wait.task_list.next = & __wait.task_list;
< #line 3994
<     __wait.task_list.prev = & __wait.task_list;
<     ldv_53143: 
< #line 3994
<     prepare_to_wait(& mdev->net_cnt_wait, & __wait, 2);
< #line 3994
<     tmp___4 = atomic_read((atomic_t const   *)(& mdev->net_cnt));
< #line 3994
<     if (tmp___4 == 0) {
< #line 3994
<       goto ldv_53142;
<     } else {
< 
<     }
< #line 3994
<     schedule();
< #line 3994
<     goto ldv_53143;
<     ldv_53142: 
< #line 3994
<     finish_wait(& mdev->net_cnt_wait, & __wait);
<     ldv_53140: 
< #line 3996
<     crypto_free_hash(mdev->cram_hmac_tfm);
< #line 3997
<     mdev->cram_hmac_tfm = 0;
< #line 3999
<     kfree((void const   *)mdev->net_conf);
< #line 4000
<     mdev->net_conf = 0;
< #line 4001
<     val___0.i = 0U;
< #line 4001
<     val___0.ldv_39979.conn = 0U;
< #line 4001
<     mask___0.i = 0U;
< #line 4001
<     mask___0.ldv_39979.conn = 31U;
< #line 4001
<     drbd_request_state(mdev, mask___0, val___0);
<   } else {
< 
<   }
< #line 4006
<   tmp___5 = drbd_test_flag(mdev, BITMAP_IO);
< #line 4006
<   if (tmp___5 == 0) {
< #line 4006
<     goto ldv_53148;
---
> #line 4542
>   tmp___0 = constant_test_bit(9U, (unsigned long const volatile   *)(& mdev->flags));
> #line 4542
>   if (tmp___0 == 0) {
> #line 4542
>     goto ldv_53733;
29661,29681c30396,30416
< #line 4006
<   tmp___6 = get_current();
< #line 4006
<   __wait___0.flags = 0U;
< #line 4006
<   __wait___0.private = (void *)tmp___6;
< #line 4006
<   __wait___0.func = & autoremove_wake_function;
< #line 4006
<   __wait___0.task_list.next = & __wait___0.task_list;
< #line 4006
<   __wait___0.task_list.prev = & __wait___0.task_list;
<   ldv_53151: 
< #line 4006
<   prepare_to_wait(& mdev->misc_wait, & __wait___0, 2);
< #line 4006
<   tmp___7 = drbd_test_flag(mdev, BITMAP_IO);
< #line 4006
<   if (tmp___7 == 0) {
< #line 4006
<     goto ldv_53150;
---
> #line 4542
>   tmp___1 = get_current();
> #line 4542
>   __wait.flags = 0U;
> #line 4542
>   __wait.private = (void *)tmp___1;
> #line 4542
>   __wait.func = & autoremove_wake_function;
> #line 4542
>   __wait.task_list.next = & __wait.task_list;
> #line 4542
>   __wait.task_list.prev = & __wait.task_list;
>   ldv_53736: 
> #line 4542
>   prepare_to_wait(& mdev->misc_wait, & __wait, 2);
> #line 4542
>   tmp___2 = constant_test_bit(9U, (unsigned long const volatile   *)(& mdev->flags));
> #line 4542
>   if (tmp___2 == 0) {
> #line 4542
>     goto ldv_53735;
29685c30420
< #line 4006
---
> #line 4542
29687,29697c30422,30432
< #line 4006
<   goto ldv_53151;
<   ldv_53150: 
< #line 4006
<   finish_wait(& mdev->misc_wait, & __wait___0);
<   ldv_53148: 
< #line 4015
<   tmp___8 = drbd_release_ee(mdev, & mdev->net_ee);
< #line 4015
<   i = (unsigned int )tmp___8;
< #line 4016
---
> #line 4542
>   goto ldv_53736;
>   ldv_53735: 
> #line 4542
>   finish_wait(& mdev->misc_wait, & __wait);
>   ldv_53733: 
> #line 4551
>   tmp___3 = drbd_free_peer_reqs(mdev, & mdev->net_ee);
> #line 4551
>   i = (unsigned int )tmp___3;
> #line 4552
29699c30434
< #line 4017
---
> #line 4553
29705,29709c30440,30444
< #line 4018
<   tmp___9 = atomic_read((atomic_t const   *)(& mdev->pp_in_use_by_net));
< #line 4018
<   i = (unsigned int )tmp___9;
< #line 4019
---
> #line 4554
>   tmp___4 = atomic_read((atomic_t const   *)(& mdev->pp_in_use_by_net));
> #line 4554
>   i = (unsigned int )tmp___4;
> #line 4555
29711c30446
< #line 4020
---
> #line 4556
29717,29721c30452,30456
< #line 4021
<   tmp___10 = atomic_read((atomic_t const   *)(& mdev->pp_in_use));
< #line 4021
<   i = (unsigned int )tmp___10;
< #line 4022
---
> #line 4557
>   tmp___5 = atomic_read((atomic_t const   *)(& mdev->pp_in_use));
> #line 4557
>   i = (unsigned int )tmp___5;
> #line 4558
29723c30458
< #line 4023
---
> #line 4559
29729,29733c30464,30468
< #line 4025
<   tmp___11 = list_empty((struct list_head  const  *)(& mdev->read_ee));
< #line 4025
<   if (tmp___11 == 0) {
< #line 4025
---
> #line 4561
>   tmp___6 = list_empty((struct list_head  const  *)(& mdev->read_ee));
> #line 4561
>   if (tmp___6 == 0) {
> #line 4561
29735,29736c30470,30471
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             4025);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>             4561);
29740,29744c30475,30479
< #line 4026
<   tmp___12 = list_empty((struct list_head  const  *)(& mdev->active_ee));
< #line 4026
<   if (tmp___12 == 0) {
< #line 4026
---
> #line 4562
>   tmp___7 = list_empty((struct list_head  const  *)(& mdev->active_ee));
> #line 4562
>   if (tmp___7 == 0) {
> #line 4562
29746,29747c30481,30482
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             4026);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>             4562);
29751,29755c30486,30490
< #line 4027
<   tmp___13 = list_empty((struct list_head  const  *)(& mdev->sync_ee));
< #line 4027
<   if (tmp___13 == 0) {
< #line 4027
---
> #line 4563
>   tmp___8 = list_empty((struct list_head  const  *)(& mdev->sync_ee));
> #line 4563
>   if (tmp___8 == 0) {
> #line 4563
29757,29758c30492,30493
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             4027);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>             4563);
29762,29766c30497,30501
< #line 4028
<   tmp___14 = list_empty((struct list_head  const  *)(& mdev->done_ee));
< #line 4028
<   if (tmp___14 == 0) {
< #line 4028
---
> #line 4564
>   tmp___9 = list_empty((struct list_head  const  *)(& mdev->done_ee));
> #line 4564
>   if (tmp___9 == 0) {
> #line 4564
29768,29782c30503,30504
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             4028);
<   } else {
< 
<   }
< #line 4031
<   atomic_set(& (mdev->current_epoch)->epoch_size, 0);
< #line 4032
<   tmp___15 = list_empty((struct list_head  const  *)(& (mdev->current_epoch)->list));
< #line 4032
<   if (tmp___15 == 0) {
< #line 4032
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( list_empty(&mdev->current_epoch->list) ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             4032);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>             4564);
29786,29787c30508,30509
< #line 4033
<   return;
---
> #line 4566
>   return (0);
29790,29791c30512,30513
< #line 4044 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int drbd_send_handshake(struct drbd_conf *mdev ) 
---
> #line 4578 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int drbd_send_features(struct drbd_tconn *tconn ) 
29793,29795c30515,30518
<   struct p_handshake *p ;
<   int ok ;
<   int tmp ;
---
>   struct drbd_socket *sock ;
>   struct p_connection_features *p ;
>   void *tmp ;
>   int tmp___0 ;
29798,29816c30521,30530
< #line 4047
<   p = & mdev->data.sbuf.handshake;
< #line 4050
<   tmp = ldv_mutex_lock_interruptible_117(& mdev->data.mutex);
< #line 4050
<   if (tmp != 0) {
< #line 4051
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "interrupted during initial handshake\n");
< #line 4052
<     return (0);
<   } else {
< 
<   }
< #line 4055
<   if ((unsigned long )mdev->data.socket == (unsigned long )((struct socket *)0)) {
< #line 4056
<     ldv_mutex_unlock_118(& mdev->data.mutex);
< #line 4057
<     return (0);
---
> #line 4583
>   sock = & tconn->data;
> #line 4584
>   tmp = conn_prepare_command(tconn, sock);
> #line 4584
>   p = (struct p_connection_features *)tmp;
> #line 4585
>   if ((unsigned long )p == (unsigned long )((struct p_connection_features *)0)) {
> #line 4586
>     return (-5);
29820,29822c30534,30536
< #line 4060
<   memset((void *)p, 0, 80UL);
< #line 4061
---
> #line 4587
>   memset((void *)p, 0, 72UL);
> #line 4588
29824,29832c30538,30543
< #line 4062
<   p->protocol_max = 1627389952U;
< #line 4063
<   ok = _drbd_send_cmd(mdev, mdev->data.socket, P_HAND_SHAKE, (struct p_header80 *)p,
<                       80UL, 0U);
< #line 4065
<   ldv_mutex_unlock_119(& mdev->data.mutex);
< #line 4066
<   return (ok);
---
> #line 4589
>   p->protocol_max = 1694498816U;
> #line 4590
>   tmp___0 = conn_send_command(tconn, sock, P_CONNECTION_FEATURES, 72U, 0, 0U);
> #line 4590
>   return (tmp___0);
29835,29836c30546,30547
< #line 4076 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int drbd_do_handshake(struct drbd_conf *mdev ) 
---
> #line 4600 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int drbd_do_features(struct drbd_tconn *tconn ) 
29838c30549
<   struct p_handshake *p ;
---
>   struct p_connection_features *p ;
29840,29842c30551,30552
<   unsigned int length ;
<   enum drbd_packets cmd ;
<   int rv ;
---
>   struct packet_info pi ;
>   int err ;
29844,29847c30554,30555
<   struct task_struct *tmp___0 ;
<   int tmp___1 ;
<   __u32 tmp___2 ;
<   __u32 tmp___3 ;
---
>   __u32 tmp___0 ;
>   __u32 tmp___1 ;
29852,29854c30560
< #line 4079
<   p = & mdev->data.rbuf.handshake;
< #line 4080
---
> #line 4604
29856,29860c30562,30566
< #line 4085
<   rv = drbd_send_handshake(mdev);
< #line 4086
<   if (rv == 0) {
< #line 4087
---
> #line 4608
>   err = drbd_send_features(tconn);
> #line 4609
>   if (err != 0) {
> #line 4610
29865,29869c30571,30575
< #line 4089
<   rv = drbd_recv_header(mdev, & cmd, & length);
< #line 4090
<   if (rv == 0) {
< #line 4091
---
> #line 4612
>   err = drbd_recv_header(tconn, & pi);
> #line 4613
>   if (err != 0) {
> #line 4614
29874,29881c30580,30587
< #line 4093
<   if ((unsigned int )cmd != 65534U) {
< #line 4094
<     tmp = cmdname(cmd);
< #line 4094
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "expected HandShake packet, received: %s (0x%04x)\n",
<             tmp, (unsigned int )cmd);
< #line 4096
---
> #line 4616
>   if ((unsigned int )pi.cmd != 65534U) {
> #line 4617
>     tmp = cmdname(pi.cmd);
> #line 4617
>     printk("\vd-con %s: expected ConnectionFeatures packet, received: %s (0x%04x)\n",
>            tconn->name, tmp, (unsigned int )pi.cmd);
> #line 4619
29886,29891c30592,30597
< #line 4099
<   if ((unsigned int )expect != length) {
< #line 4100
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "expected HandShake length: %u, received: %u\n",
<             expect, length);
< #line 4102
---
> #line 4622
>   if (pi.size != (unsigned int )expect) {
> #line 4623
>     printk("\vd-con %s: expected ConnectionFeatures length: %u, received: %u\n", tconn->name,
>            expect, pi.size);
> #line 4625
29896,29912c30602,30608
< #line 4105
<   rv = drbd_recv(mdev, (void *)(& p->head.payload), (size_t )expect);
< #line 4107
<   if (rv != expect) {
< #line 4108
<     tmp___0 = get_current();
< #line 4108
<     tmp___1 = signal_pending(tmp___0);
< #line 4108
<     if (tmp___1 == 0) {
< #line 4109
<       dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "short read receiving handshake packet: l=%u\n",
<                rv);
<     } else {
< 
<     }
< #line 4110
---
> #line 4628
>   p = (struct p_connection_features *)pi.data;
> #line 4629
>   err = drbd_recv_all_warn(tconn, (void *)p, (size_t )expect);
> #line 4630
>   if (err != 0) {
> #line 4631
29917,29925c30613,30621
< #line 4113
<   tmp___2 = __fswab32(p->protocol_min);
< #line 4113
<   p->protocol_min = tmp___2;
< #line 4114
<   tmp___3 = __fswab32(p->protocol_max);
< #line 4114
<   p->protocol_max = tmp___3;
< #line 4115
---
> #line 4633
>   tmp___0 = __fswab32(p->protocol_min);
> #line 4633
>   p->protocol_min = tmp___0;
> #line 4634
>   tmp___1 = __fswab32(p->protocol_max);
> #line 4634
>   p->protocol_max = tmp___1;
> #line 4635
29927c30623
< #line 4116
---
> #line 4636
29932,29934c30628,30630
< #line 4118
<   if (p->protocol_min > 97U || p->protocol_max <= 85U) {
< #line 4120
---
> #line 4638
>   if (p->protocol_min > 101U || p->protocol_max <= 85U) {
> #line 4640
29939,29941c30635,30637
< #line 4122
<   __min1 = 97;
< #line 4122
---
> #line 4642
>   __min1 = 101;
> #line 4642
29943,29948c30639,30644
< #line 4122
<   mdev->agreed_pro_version = __min1 < __min2 ? __min1 : __min2;
< #line 4124
<   _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Handshake successful: Agreed network protocol version %d\n",
<             mdev->agreed_pro_version);
< #line 4127
---
> #line 4642
>   tconn->agreed_pro_version = __min1 < __min2 ? __min1 : __min2;
> #line 4644
>   printk("\016d-con %s: Handshake successful: Agreed network protocol version %d\n",
>          tconn->name, tconn->agreed_pro_version);
> #line 4647
29951,29954c30647,30650
< #line 4130
<   dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "incompatible DRBD dialects: I support %d-%d, peer supports %d-%d\n",
<           86, 97, p->protocol_min, p->protocol_max);
< #line 4134
---
> #line 4650
>   printk("\vd-con %s: incompatible DRBD dialects: I support %d-%d, peer supports %d-%d\n",
>          tconn->name, 86, 101, p->protocol_min, p->protocol_max);
> #line 4654
29958,29959c30654,30655
< #line 4153 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int drbd_do_auth(struct drbd_conf *mdev ) 
---
> #line 4673 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int drbd_do_auth(struct drbd_tconn *tconn ) 
29960a30657
>   struct drbd_socket *sock ;
29967c30664
<   size_t tmp ;
---
>   char secret[64U] ;
29970,29971c30667,30669
<   enum drbd_packets cmd ;
<   unsigned int length ;
---
>   struct packet_info pi ;
>   struct net_conf *nc ;
>   int err ;
29973,29975c30671,30678
<   char const   *tmp___0 ;
<   void *tmp___1 ;
<   struct task_struct *tmp___2 ;
---
>   struct net_conf *_________p1 ;
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
>   size_t tmp___1 ;
>   size_t __len ;
>   void *__ret ;
>   void *tmp___2 ;
29977,29982c30680,30687
<   void *tmp___4 ;
<   char const   *tmp___5 ;
<   struct task_struct *tmp___6 ;
<   int tmp___7 ;
<   void *tmp___8 ;
<   int tmp___9 ;
---
>   char const   *tmp___4 ;
>   void *tmp___5 ;
>   void *tmp___6 ;
>   void *tmp___7 ;
>   int tmp___8 ;
>   char const   *tmp___9 ;
>   void *tmp___10 ;
>   int tmp___11 ;
29985c30690
< #line 4157
---
> #line 4678
29987c30692
< #line 4158
---
> #line 4679
29989c30694
< #line 4159
---
> #line 4680
29991,29997c30696,30734
< #line 4160
<   tmp = strlen((char const   *)(& (mdev->net_conf)->shared_secret));
< #line 4160
<   key_len = (unsigned int )tmp;
< #line 4167
<   desc.tfm = mdev->cram_hmac_tfm;
< #line 4168
---
> #line 4691
>   rcu_read_lock();
> #line 4692
>   _________p1 = *((struct net_conf * volatile  *)(& tconn->net_conf));
> #line 4692
>   tmp = debug_lockdep_rcu_enabled();
> #line 4692
>   if (tmp != 0 && ! __warned) {
> #line 4692
>     tmp___0 = rcu_read_lock_held();
> #line 4692
>     if (tmp___0 == 0 && 1) {
> #line 4692
>       __warned = 1;
> #line 4692
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>                              4692, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 4692
>   nc = _________p1;
> #line 4693
>   tmp___1 = strlen((char const   *)(& nc->shared_secret));
> #line 4693
>   key_len = (unsigned int )tmp___1;
> #line 4694
>   __len = (size_t )key_len;
> #line 4694
>   __ret = __builtin_memcpy((void *)(& secret), (void const   *)(& nc->shared_secret),
>                            __len);
> #line 4695
>   rcu_read_unlock();
> #line 4697
>   desc.tfm = tconn->cram_hmac_tfm;
> #line 4698
29999,30002c30736,30738
< #line 4170
<   rv = crypto_hash_setkey(mdev->cram_hmac_tfm, (u8 const   *)(& (mdev->net_conf)->shared_secret),
<                           key_len);
< #line 4172
---
> #line 4700
>   rv = crypto_hash_setkey(tconn->cram_hmac_tfm, (u8 const   *)(& secret), key_len);
> #line 4701
30004,30007c30740,30742
< #line 4173
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "crypto_hash_setkey() failed with %d\n",
<             rv);
< #line 4174
---
> #line 4702
>     printk("\vd-con %s: crypto_hash_setkey() failed with %d\n", tconn->name, rv);
> #line 4703
30009c30744
< #line 4175
---
> #line 4704
30014c30749
< #line 4178
---
> #line 4707
30016,30020c30751,30759
< #line 4180
<   rv = drbd_send_cmd2(mdev, P_AUTH_CHALLENGE, (char *)(& my_challenge), 64UL);
< #line 4181
<   if (rv == 0) {
< #line 4182
---
> #line 4709
>   sock = & tconn->data;
> #line 4710
>   tmp___2 = conn_prepare_command(tconn, sock);
> #line 4710
>   if ((unsigned long )tmp___2 == (unsigned long )((void *)0)) {
> #line 4711
>     rv = 0;
> #line 4712
30025,30027c30764,30769
< #line 4184
<   rv = drbd_recv_header(mdev, & cmd, & length);
< #line 4185
---
> #line 4714
>   tmp___3 = conn_send_command(tconn, sock, P_AUTH_CHALLENGE, 0U, (void *)(& my_challenge),
>                               64U);
> #line 4714
>   rv = tmp___3 == 0;
> #line 4716
30029c30771
< #line 4186
---
> #line 4717
30034,30041c30776,30780
< #line 4188
<   if ((unsigned int )cmd != 16U) {
< #line 4189
<     tmp___0 = cmdname(cmd);
< #line 4189
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "expected AuthChallenge packet, received: %s (0x%04x)\n",
<             tmp___0, (unsigned int )cmd);
< #line 4191
---
> #line 4719
>   err = drbd_recv_header(tconn, & pi);
> #line 4720
>   if (err != 0) {
> #line 4721
30043c30782
< #line 4192
---
> #line 4722
30048,30052c30787,30805
< #line 4195
<   if (length > 128U) {
< #line 4196
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "expected AuthChallenge payload too big.\n");
< #line 4197
---
> #line 4725
>   if ((unsigned int )pi.cmd != 16U) {
> #line 4726
>     tmp___4 = cmdname(pi.cmd);
> #line 4726
>     printk("\vd-con %s: expected AuthChallenge packet, received: %s (0x%04x)\n", tconn->name,
>            tmp___4, (unsigned int )pi.cmd);
> #line 4728
>     rv = 0;
> #line 4729
>     goto fail;
>   } else {
> 
>   }
> #line 4732
>   if (pi.size > 128U) {
> #line 4733
>     printk("\vd-con %s: expected AuthChallenge payload too big.\n", tconn->name);
> #line 4734
30054c30807
< #line 4198
---
> #line 4735
30059,30063c30812,30816
< #line 4201
<   tmp___1 = kmalloc((size_t )length, 16U);
< #line 4201
<   peers_ch = (char *)tmp___1;
< #line 4202
---
> #line 4738
>   tmp___5 = kmalloc((size_t )pi.size, 16U);
> #line 4738
>   peers_ch = (char *)tmp___5;
> #line 4739
30065,30067c30818,30820
< #line 4203
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "kmalloc of peers_ch failed\n");
< #line 4204
---
> #line 4740
>     printk("\vd-con %s: kmalloc of peers_ch failed\n", tconn->name);
> #line 4741
30069c30822
< #line 4205
---
> #line 4742
30074,30090c30827,30831
< #line 4208
<   rv = drbd_recv(mdev, (void *)peers_ch, (size_t )length);
< #line 4210
<   if ((unsigned int )rv != length) {
< #line 4211
<     tmp___2 = get_current();
< #line 4211
<     tmp___3 = signal_pending(tmp___2);
< #line 4211
<     if (tmp___3 == 0) {
< #line 4212
<       dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "short read AuthChallenge: l=%u\n",
<                rv);
<     } else {
< 
<     }
< #line 4213
---
> #line 4745
>   err = drbd_recv_all_warn(tconn, (void *)peers_ch, (size_t )pi.size);
> #line 4746
>   if (err != 0) {
> #line 4747
30092c30833
< #line 4214
---
> #line 4748
30097,30103c30838,30844
< #line 4217
<   resp_size = crypto_hash_digestsize(mdev->cram_hmac_tfm);
< #line 4218
<   tmp___4 = kmalloc((size_t )resp_size, 16U);
< #line 4218
<   response = (char *)tmp___4;
< #line 4219
---
> #line 4751
>   resp_size = crypto_hash_digestsize(tconn->cram_hmac_tfm);
> #line 4752
>   tmp___6 = kmalloc((size_t )resp_size, 16U);
> #line 4752
>   response = (char *)tmp___6;
> #line 4753
30105,30107c30846,30848
< #line 4220
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "kmalloc of response failed\n");
< #line 4221
---
> #line 4754
>     printk("\vd-con %s: kmalloc of response failed\n", tconn->name);
> #line 4755
30109c30850
< #line 4222
---
> #line 4756
30114c30855
< #line 4225
---
> #line 4759
30116,30118c30857,30859
< #line 4226
<   sg_set_buf(& sg, (void const   *)peers_ch, length);
< #line 4228
---
> #line 4760
>   sg_set_buf(& sg, (void const   *)peers_ch, pi.size);
> #line 4762
30120c30861
< #line 4229
---
> #line 4763
30122,30125c30863,30865
< #line 4230
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "crypto_hash_digest() failed with %d\n",
<             rv);
< #line 4231
---
> #line 4764
>     printk("\vd-con %s: crypto_hash_digest() failed with %d\n", tconn->name, rv);
> #line 4765
30127c30867
< #line 4232
---
> #line 4766
30132,30136c30872,30878
< #line 4235
<   rv = drbd_send_cmd2(mdev, P_AUTH_RESPONSE, response, (size_t )resp_size);
< #line 4236
<   if (rv == 0) {
< #line 4237
---
> #line 4769
>   tmp___7 = conn_prepare_command(tconn, sock);
> #line 4769
>   if ((unsigned long )tmp___7 == (unsigned long )((void *)0)) {
> #line 4770
>     rv = 0;
> #line 4771
30141,30143c30883,30888
< #line 4239
<   rv = drbd_recv_header(mdev, & cmd, & length);
< #line 4240
---
> #line 4773
>   tmp___8 = conn_send_command(tconn, sock, P_AUTH_RESPONSE, 0U, (void *)response,
>                               resp_size);
> #line 4773
>   rv = tmp___8 == 0;
> #line 4775
30145c30890
< #line 4241
---
> #line 4776
30150,30157c30895,30899
< #line 4243
<   if ((unsigned int )cmd != 17U) {
< #line 4244
<     tmp___5 = cmdname(cmd);
< #line 4244
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "expected AuthResponse packet, received: %s (0x%04x)\n",
<             tmp___5, (unsigned int )cmd);
< #line 4246
---
> #line 4778
>   err = drbd_recv_header(tconn, & pi);
> #line 4779
>   if (err != 0) {
> #line 4780
30159c30901
< #line 4247
---
> #line 4781
30164,30168c30906,30913
< #line 4250
<   if (length != resp_size) {
< #line 4251
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "expected AuthResponse payload of wrong size\n");
< #line 4252
---
> #line 4784
>   if ((unsigned int )pi.cmd != 17U) {
> #line 4785
>     tmp___9 = cmdname(pi.cmd);
> #line 4785
>     printk("\vd-con %s: expected AuthResponse packet, received: %s (0x%04x)\n", tconn->name,
>            tmp___9, (unsigned int )pi.cmd);
> #line 4787
30170c30915
< #line 4253
---
> #line 4788
30175,30188c30920,30928
< #line 4256
<   rv = drbd_recv(mdev, (void *)response, (size_t )resp_size);
< #line 4258
<   if ((unsigned int )rv != resp_size) {
< #line 4259
<     tmp___6 = get_current();
< #line 4259
<     tmp___7 = signal_pending(tmp___6);
< #line 4259
<     if (tmp___7 == 0) {
< #line 4260
<       dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "short read receiving AuthResponse: l=%u\n",
<                rv);
<     } else {
---
> #line 4791
>   if (pi.size != resp_size) {
> #line 4792
>     printk("\vd-con %s: expected AuthResponse payload of wrong size\n", tconn->name);
> #line 4793
>     rv = 0;
> #line 4794
>     goto fail;
>   } else {
30190,30191c30930,30935
<     }
< #line 4261
---
>   }
> #line 4797
>   err = drbd_recv_all_warn(tconn, (void *)response, (size_t )resp_size);
> #line 4798
>   if (err != 0) {
> #line 4799
30193c30937
< #line 4262
---
> #line 4800
30198,30202c30942,30946
< #line 4265
<   tmp___8 = kmalloc((size_t )resp_size, 16U);
< #line 4265
<   right_response = (char *)tmp___8;
< #line 4266
---
> #line 4803
>   tmp___10 = kmalloc((size_t )resp_size, 16U);
> #line 4803
>   right_response = (char *)tmp___10;
> #line 4804
30204,30206c30948,30950
< #line 4267
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "kmalloc of right_response failed\n");
< #line 4268
---
> #line 4805
>     printk("\vd-con %s: kmalloc of right_response failed\n", tconn->name);
> #line 4806
30208c30952
< #line 4269
---
> #line 4807
30213c30957
< #line 4272
---
> #line 4810
30215c30959
< #line 4274
---
> #line 4812
30217c30961
< #line 4275
---
> #line 4813
30219,30222c30963,30965
< #line 4276
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "crypto_hash_digest() failed with %d\n",
<             rv);
< #line 4277
---
> #line 4814
>     printk("\vd-con %s: crypto_hash_digest() failed with %d\n", tconn->name, rv);
> #line 4815
30224c30967
< #line 4278
---
> #line 4816
30229,30233c30972,30976
< #line 4281
<   tmp___9 = memcmp((void const   *)response, (void const   *)right_response, (size_t )resp_size);
< #line 4281
<   rv = tmp___9 == 0;
< #line 4283
---
> #line 4819
>   tmp___11 = memcmp((void const   *)response, (void const   *)right_response, (size_t )resp_size);
> #line 4819
>   rv = tmp___11 == 0;
> #line 4821
30235,30237c30978,30980
< #line 4284
<     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Peer authenticated using %d bytes of \'%s\' HMAC\n",
<               resp_size, (unsigned char *)(& (mdev->net_conf)->cram_hmac_alg));
---
> #line 4822
>     printk("\016d-con %s: Peer authenticated using %d bytes HMAC\n", tconn->name,
>            resp_size);
30239c30982
< #line 4287
---
> #line 4825
30243c30986
< #line 4290
---
> #line 4828
30245c30988
< #line 4291
---
> #line 4829
30247c30990
< #line 4292
---
> #line 4830
30249c30992
< #line 4294
---
> #line 4832
30253c30996
< #line 4298 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4836 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
30256,30258c30999
<   struct drbd_conf *mdev ;
<   unsigned int minor ;
<   unsigned int tmp ;
---
>   struct drbd_tconn *tconn ;
30260d31000
<   struct task_struct *tmp___0 ;
30263d31002
<   int tmp___1 ;
30266,30281c31005,31012
< #line 4300
<   mdev = thi->mdev;
< #line 4301
<   tmp = mdev_to_minor(mdev);
< #line 4301
<   minor = tmp;
< #line 4304
<   tmp___0 = get_current();
< #line 4304
<   sprintf((char *)(& tmp___0->comm), "drbd%d_receiver", minor);
< #line 4306
<   _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "receiver (re)started\n");
<   ldv_53194: 
< #line 4309
<   h = drbd_connect(mdev);
< #line 4310
---
> #line 4838
>   tconn = thi->tconn;
> #line 4841
>   printk("\016d-con %s: receiver (re)started\n", tconn->name);
>   ldv_53786: 
> #line 4844
>   h = conn_connect(tconn);
> #line 4845
30283,30285c31014,31016
< #line 4311
<     drbd_disconnect(mdev);
< #line 4312
---
> #line 4846
>     conn_disconnect(tconn);
> #line 4847
30290c31021
< #line 4314
---
> #line 4849
30292,30294c31023,31025
< #line 4315
<     dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Discarding network configuration.\n");
< #line 4316
---
> #line 4850
>     printk("\fd-con %s: Discarding network configuration.\n", tconn->name);
> #line 4851
30296,30298c31027,31029
< #line 4316
<     val.ldv_39979.conn = 1U;
< #line 4316
---
> #line 4851
>     val.ldv_40604.conn = 1U;
> #line 4851
30300,30303c31031,31034
< #line 4316
<     mask.ldv_39979.conn = 31U;
< #line 4316
<     drbd_force_state(mdev, mask, val);
---
> #line 4851
>     mask.ldv_40604.conn = 31U;
> #line 4851
>     conn_request_state(tconn, mask, val, CS_HARD);
30307c31038
< #line 4318
---
> #line 4853
30309,30310c31040,31041
< #line 4319
<     goto ldv_53194;
---
> #line 4854
>     goto ldv_53786;
30315c31046
< #line 4320
---
> #line 4855
30317,30327c31048,31049
< #line 4321
<     tmp___1 = get_net_conf(mdev);
< #line 4321
<     if (tmp___1 != 0) {
< #line 4322
<       drbdd(mdev);
< #line 4323
<       put_net_conf(mdev);
<     } else {
< 
<     }
---
> #line 4856
>     drbdd(tconn);
30331,30335c31053,31057
< #line 4327
<   drbd_disconnect(mdev);
< #line 4329
<   _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "receiver terminated\n");
< #line 4330
---
> #line 4858
>   conn_disconnect(tconn);
> #line 4860
>   printk("\016d-con %s: receiver terminated\n", tconn->name);
> #line 4861
30339,30340c31061,31062
< #line 4335 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int got_RqSReply(struct drbd_conf *mdev , struct p_header80 *h ) 
---
> #line 4866 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int got_conn_RqSReply(struct drbd_tconn *tconn , struct packet_info *pi ) 
30348,30350c31070,31072
< #line 4337
<   p = (struct p_req_state_reply *)h;
< #line 4339
---
> #line 4868
>   p = (struct p_req_state_reply *)pi->data;
> #line 4869
30352c31074
< #line 4339
---
> #line 4869
30354c31076
< #line 4341
---
> #line 4871
30356,30357c31078,31079
< #line 4342
<     drbd_set_flag(mdev, CL_ST_CHG_SUCCESS);
---
> #line 4872
>     set_bit(6U, (unsigned long volatile   *)(& tconn->flags));
30359,30361c31081,31083
< #line 4344
<     drbd_set_flag(mdev, CL_ST_CHG_FAIL);
< #line 4345
---
> #line 4874
>     set_bit(7U, (unsigned long volatile   *)(& tconn->flags));
> #line 4875
30363c31085,31151
< #line 4345
---
> #line 4875
>     printk("\vd-con %s: Requested state change failed by peer: %s (%d)\n", tconn->name,
>            tmp___0, retcode);
>   }
> #line 4878
>   __wake_up(& tconn->ping_wait, 3U, 1, 0);
> #line 4880
>   return (0);
> }
> }
> #line 4883 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int got_RqSReply(struct drbd_tconn *tconn , struct packet_info *pi ) 
> { 
>   struct drbd_conf *mdev ;
>   struct p_req_state_reply *p ;
>   int retcode ;
>   __u32 tmp ;
>   int tmp___0 ;
>   int tmp___1 ;
>   char const   *tmp___2 ;
> 
>   {
> #line 4886
>   p = (struct p_req_state_reply *)pi->data;
> #line 4887
>   tmp = __fswab32(p->retcode);
> #line 4887
>   retcode = (int )tmp;
> #line 4889
>   mdev = vnr_to_mdev(tconn, (int )pi->vnr);
> #line 4890
>   if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
> #line 4891
>     return (-5);
>   } else {
> 
>   }
> #line 4893
>   tmp___1 = constant_test_bit(5U, (unsigned long const volatile   *)(& tconn->flags));
> #line 4893
>   if (tmp___1 != 0) {
> #line 4894
>     if (tconn->agreed_pro_version > 99) {
> #line 4894
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( tconn->agreed_pro_version < 100 ) in %s:%d\n",
>               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>               4894);
>     } else {
> 
>     }
> #line 4895
>     tmp___0 = got_conn_RqSReply(tconn, pi);
> #line 4895
>     return (tmp___0);
>   } else {
> 
>   }
> #line 4898
>   if (retcode > 0) {
> #line 4899
>     set_bit(3U, (unsigned long volatile   *)(& mdev->flags));
>   } else {
> #line 4901
>     set_bit(4U, (unsigned long volatile   *)(& mdev->flags));
> #line 4902
>     tmp___2 = drbd_set_st_err_str((enum drbd_state_rv )retcode);
> #line 4902
30365c31153
<             tmp___0, retcode);
---
>             tmp___2, retcode);
30367c31155
< #line 4348
---
> #line 4905
30369,30370c31157,31158
< #line 4350
<   return (1);
---
> #line 4907
>   return (0);
30373,30374c31161,31162
< #line 4353 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int got_Ping(struct drbd_conf *mdev , struct p_header80 *h ) 
---
> #line 4910 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int got_Ping(struct drbd_tconn *tconn , struct packet_info *pi ) 
30379,30381c31167,31169
< #line 4355
<   tmp = drbd_send_ping_ack(mdev);
< #line 4355
---
> #line 4912
>   tmp = drbd_send_ping_ack(tconn);
> #line 4912
30385,30386c31173,31174
< #line 4359 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int got_PingAck(struct drbd_conf *mdev , struct p_header80 *h ) 
---
> #line 4916 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int got_PingAck(struct drbd_tconn *tconn , struct packet_info *pi ) 
30391,30395c31179,31183
< #line 4362
<   ((mdev->meta.socket)->sk)->sk_rcvtimeo = (long )((mdev->net_conf)->ping_int * 250);
< #line 4363
<   tmp = drbd_test_and_set_flag(mdev, GOT_PING_ACK);
< #line 4363
---
> #line 4919
>   ((tconn->meta.socket)->sk)->sk_rcvtimeo = (long )((tconn->net_conf)->ping_int * 250U);
> #line 4920
>   tmp = test_and_set_bit(4, (unsigned long volatile   *)(& tconn->flags));
> #line 4920
30397,30398c31185,31186
< #line 4364
<     __wake_up(& mdev->misc_wait, 3U, 1, 0);
---
> #line 4921
>     __wake_up(& tconn->ping_wait, 3U, 1, 0);
30402,30403c31190,31191
< #line 4366
<   return (1);
---
> #line 4923
>   return (0);
30406,30407c31194,31195
< #line 4369 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int got_IsInSync(struct drbd_conf *mdev , struct p_header80 *h ) 
---
> #line 4926 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int got_IsInSync(struct drbd_tconn *tconn , struct packet_info *pi ) 
30408a31197
>   struct drbd_conf *mdev ;
30416,30417d31204
<   int tmp___3 ;
<   int tmp___4 ;
30420,30422c31207,31209
< #line 4371
<   p = (struct p_block_ack *)h;
< #line 4372
---
> #line 4929
>   p = (struct p_block_ack *)pi->data;
> #line 4930
30424c31211
< #line 4372
---
> #line 4930
30426c31213
< #line 4373
---
> #line 4931
30428c31215
< #line 4373
---
> #line 4931
30430,30435c31217,31231
< #line 4375
<   if (mdev->agreed_pro_version <= 88) {
< #line 4375
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mdev->agreed_pro_version >= 89 ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             4375);
---
> #line 4933
>   mdev = vnr_to_mdev(tconn, (int )pi->vnr);
> #line 4934
>   if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
> #line 4935
>     return (-5);
>   } else {
> 
>   }
> #line 4937
>   if ((mdev->tconn)->agreed_pro_version <= 88) {
> #line 4937
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mdev->tconn->agreed_pro_version >= 89 ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>             4937);
30439c31235
< #line 4377
---
> #line 4939
30441c31237
< #line 4377
---
> #line 4939
30443c31239
< #line 4379
---
> #line 4941
30445c31241
< #line 4379
---
> #line 4941
30447c31243
< #line 4380
---
> #line 4942
30449,30452c31245,31248
< #line 4381
<     __drbd_set_in_sync(mdev, sector, blksize, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<                        4381U);
< #line 4383
---
> #line 4943
>     __drbd_set_in_sync(mdev, sector, blksize, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>                        4943U);
> #line 4945
30454c31250
< #line 4384
---
> #line 4946
30459,30473c31255,31257
< #line 4386
<   atomic_dec(& mdev->rs_pending_cnt);
< #line 4386
<   tmp___4 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
< #line 4386
<   if (tmp___4 < 0) {
< #line 4386
<     tmp___3 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
< #line 4386
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: rs_pending_cnt = %d < 0 !\n",
<             "got_IsInSync", 4386, tmp___3);
<   } else {
< 
<   }
< #line 4387
---
> #line 4948
>   _dec_rs_pending(mdev, "got_IsInSync", 4948);
> #line 4949
30475,30536c31259
< #line 4389
<   return (1);
< }
< }
< #line 4394 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static struct drbd_request *_ack_id_to_req(struct drbd_conf *mdev , u64 id , sector_t sector ) 
< { 
<   struct hlist_head *slot ;
<   struct hlist_head *tmp ;
<   struct hlist_node *n ;
<   struct drbd_request *req ;
<   struct hlist_node  const  *__mptr ;
< 
<   {
< #line 4397
<   tmp = tl_hash_slot(mdev, sector);
< #line 4397
<   slot = tmp;
< #line 4401
<   n = slot->first;
< #line 4401
<   goto ldv_53234;
<   ldv_53233: ;
< #line 4402
<   if ((unsigned long )req == (unsigned long )id) {
< #line 4403
<     if (req->sector != sector) {
< #line 4404
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "_ack_id_to_req: found req %p but it has wrong sector (%llus versus %llus)\n",
<               req, (unsigned long long )req->sector, (unsigned long long )sector);
< #line 4408
<       goto ldv_53232;
<     } else {
< 
<     }
< #line 4410
<     return (req);
<   } else {
< 
<   }
< #line 4401
<   n = n->next;
<   ldv_53234: ;
< #line 4401
<   if ((unsigned long )n != (unsigned long )((struct hlist_node *)0)) {
< #line 4401
<     __mptr = (struct hlist_node  const  *)n;
< #line 4401
<     req = (struct drbd_request *)__mptr + 0xffffffffffffffd8UL;
< #line 4401
<     if (1 != 0) {
< #line 4402
<       goto ldv_53233;
<     } else {
< #line 4404
<       goto ldv_53232;
<     }
<   } else {
< 
<   }
<   ldv_53232: ;
< #line 4413
---
> #line 4951
30540c31263
< #line 4419 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4955 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
30542,30543c31265,31266
<                                          req_validator_fn *validator , char const   *func ,
<                                          enum drbd_req_event what ) 
---
>                                          struct rb_root *root , char const   *func ,
>                                          enum drbd_req_event what , bool missing_ok ) 
30550,30554c31273,31277
< #line 4426
<   spin_lock_irq(& mdev->req_lock);
< #line 4427
<   req = (*validator)(mdev, id, sector);
< #line 4428
---
> #line 4962
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 4963
>   req = find_request(mdev, root, id, sector, (int )missing_ok, func);
> #line 4964
30557c31280
< #line 4428
---
> #line 4964
30559,30565c31282,31285
< #line 4429
<     spin_unlock_irq(& mdev->req_lock);
< #line 4431
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "%s: failed to find req %p, sector %llus\n",
<             func, (void *)id, (unsigned long long )sector);
< #line 4433
<     return (0);
---
> #line 4965
>     spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 4966
>     return (-5);
30569c31289
< #line 4435
---
> #line 4968
30571,30573c31291,31293
< #line 4436
<   spin_unlock_irq(& mdev->req_lock);
< #line 4438
---
> #line 4969
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 4971
30575c31295
< #line 4439
---
> #line 4972
30580,30581c31300,31301
< #line 4440
<   return (1);
---
> #line 4973
>   return (0);
30584,30585c31304,31305
< #line 4443 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int got_BlockAck(struct drbd_conf *mdev , struct p_header80 *h ) 
---
> #line 4976 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int got_BlockAck(struct drbd_tconn *tconn , struct packet_info *pi ) 
30586a31307
>   struct drbd_conf *mdev ;
30595,30597d31315
<   int tmp___3 ;
<   __u16 tmp___4 ;
<   int tmp___5 ;
30600,30602c31318,31320
< #line 4445
<   p = (struct p_block_ack *)h;
< #line 4446
---
> #line 4979
>   p = (struct p_block_ack *)pi->data;
> #line 4980
30604c31322
< #line 4446
---
> #line 4980
30606c31324
< #line 4447
---
> #line 4981
30608c31326
< #line 4447
---
> #line 4981
30610,30676c31328,31333
< #line 4450
<   tmp___1 = __fswab32(p->seq_num);
< #line 4450
<   update_peer_seq(mdev, tmp___1);
< #line 4452
<   if (p->block_id == 0xffffffffffffffffULL) {
< #line 4453
<     __drbd_set_in_sync(mdev, sector, blksize, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<                        4453U);
< #line 4454
<     atomic_dec(& mdev->rs_pending_cnt);
< #line 4454
<     tmp___3 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
< #line 4454
<     if (tmp___3 < 0) {
< #line 4454
<       tmp___2 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
< #line 4454
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: rs_pending_cnt = %d < 0 !\n",
<               "got_BlockAck", 4454, tmp___2);
<     } else {
< 
<     }
< #line 4455
<     return (1);
<   } else {
< 
<   }
< #line 4457
<   tmp___4 = __fswab16((int )h->command);
< #line 4457
<   switch ((int )tmp___4) {
<   case 23: ;
< #line 4459
<   if ((mdev->net_conf)->wire_protocol != 3) {
< #line 4459
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mdev->net_conf->wire_protocol == DRBD_PROT_C ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             4459);
<   } else {
< 
<   }
< #line 4460
<   what = write_acked_by_peer_and_sis;
< #line 4461
<   goto ldv_53262;
<   case 22: ;
< #line 4463
<   if ((mdev->net_conf)->wire_protocol != 3) {
< #line 4463
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mdev->net_conf->wire_protocol == DRBD_PROT_C ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             4463);
<   } else {
< 
<   }
< #line 4464
<   what = write_acked_by_peer;
< #line 4465
<   goto ldv_53262;
<   case 21: ;
< #line 4467
<   if ((mdev->net_conf)->wire_protocol != 2) {
< #line 4467
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mdev->net_conf->wire_protocol == DRBD_PROT_B ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             4467);
---
> #line 4984
>   mdev = vnr_to_mdev(tconn, (int )pi->vnr);
> #line 4985
>   if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
> #line 4986
>     return (-5);
30680,30690c31337,31349
< #line 4468
<   what = recv_acked_by_peer;
< #line 4469
<   goto ldv_53262;
<   case 24: ;
< #line 4471
<   if ((mdev->net_conf)->wire_protocol != 3) {
< #line 4471
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mdev->net_conf->wire_protocol == DRBD_PROT_C ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             4471);
---
> #line 4988
>   tmp___1 = __fswab32(p->seq_num);
> #line 4988
>   update_peer_seq(mdev, tmp___1);
> #line 4990
>   if (p->block_id == 0xffffffffffffffffULL) {
> #line 4991
>     __drbd_set_in_sync(mdev, sector, blksize, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>                        4991U);
> #line 4992
>     _dec_rs_pending(mdev, "got_BlockAck", 4992);
> #line 4993
>     return (0);
30694,30697c31353,31379
< #line 4472
<   what = conflict_discarded_by_peer;
< #line 4473
<   goto ldv_53262;
---
> #line 4995
>   switch ((unsigned int )pi->cmd) {
>   case 23U: 
> #line 4997
>   what = WRITE_ACKED_BY_PEER_AND_SIS;
> #line 4998
>   goto ldv_53840;
>   case 22U: 
> #line 5000
>   what = WRITE_ACKED_BY_PEER;
> #line 5001
>   goto ldv_53840;
>   case 21U: 
> #line 5003
>   what = RECV_ACKED_BY_PEER;
> #line 5004
>   goto ldv_53840;
>   case 24U: 
> #line 5006
>   what = CONFLICT_RESOLVED;
> #line 5007
>   goto ldv_53840;
>   case 44U: 
> #line 5009
>   what = POSTPONE_WRITE;
> #line 5010
>   goto ldv_53840;
30699,30711c31381,31393
< #line 4475
<   dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( 0 ) in %s:%d\n",
<           (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<           4475);
< #line 4476
<   return (0);
<   }
<   ldv_53262: 
< #line 4479
<   tmp___5 = validate_req_change_req_state(mdev, p->block_id, sector, & _ack_id_to_req,
<                                           "got_BlockAck", what);
< #line 4479
<   return (tmp___5);
---
> #line 5012
>   __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"),
>                        "i" (5012), "i" (12UL));
>   ldv_53846: ;
> #line 5012
>   goto ldv_53846;
>   }
>   ldv_53840: 
> #line 5015
>   tmp___2 = validate_req_change_req_state(mdev, p->block_id, sector, & mdev->write_requests,
>                                           "got_BlockAck", what, 0);
> #line 5015
>   return (tmp___2);
30714,30715c31396,31397
< #line 4483 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int got_NegAck(struct drbd_conf *mdev , struct p_header80 *h ) 
---
> #line 5020 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int got_NegAck(struct drbd_tconn *tconn , struct packet_info *pi ) 
30716a31399
>   struct drbd_conf *mdev ;
30722,30723c31405
<   struct drbd_request *req ;
<   struct bio_and_error m ;
---
>   int err ;
30725,30726d31406
<   int tmp___2 ;
<   int tmp___3 ;
30729,30731c31409,31411
< #line 4485
<   p = (struct p_block_ack *)h;
< #line 4486
---
> #line 5023
>   p = (struct p_block_ack *)pi->data;
> #line 5024
30733c31413
< #line 4486
---
> #line 5024
30735c31415
< #line 4487
---
> #line 5025
30737c31417
< #line 4487
---
> #line 5025
30739c31419,31428
< #line 4491
---
> #line 5028
>   mdev = vnr_to_mdev(tconn, (int )pi->vnr);
> #line 5029
>   if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
> #line 5030
>     return (-5);
>   } else {
> 
>   }
> #line 5032
30741c31430
< #line 4491
---
> #line 5032
30743c31432
< #line 4493
---
> #line 5034
30745,30759c31434,31436
< #line 4494
<     atomic_dec(& mdev->rs_pending_cnt);
< #line 4494
<     tmp___3 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
< #line 4494
<     if (tmp___3 < 0) {
< #line 4494
<       tmp___2 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
< #line 4494
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: rs_pending_cnt = %d < 0 !\n",
<               "got_NegAck", 4494, tmp___2);
<     } else {
< 
<     }
< #line 4495
---
> #line 5035
>     _dec_rs_pending(mdev, "got_NegAck", 5035);
> #line 5036
30761,30787c31438,31439
< #line 4496
<     return (1);
<   } else {
< 
<   }
< #line 4499
<   spin_lock_irq(& mdev->req_lock);
< #line 4500
<   req = _ack_id_to_req(mdev, p->block_id, sector);
< #line 4501
<   if ((unsigned long )req == (unsigned long )((struct drbd_request *)0)) {
< #line 4502
<     spin_unlock_irq(& mdev->req_lock);
< #line 4503
<     if ((mdev->net_conf)->wire_protocol == 1 || (mdev->net_conf)->wire_protocol == 2) {
< #line 4511
<       __drbd_set_out_of_sync(mdev, sector, size, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<                              4511U);
< #line 4512
<       return (1);
<     } else {
< #line 4514
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "%s: failed to find req %p, sector %llus\n",
<               "got_NegAck", (void *)p->block_id, (unsigned long long )sector);
< #line 4516
<       return (0);
<     }
---
> #line 5037
>     return (0);
30791,30798c31443,31450
< #line 4519
<   __req_mod(req, neg_acked, & m);
< #line 4520
<   spin_unlock_irq(& mdev->req_lock);
< #line 4522
<   if ((unsigned long )m.bio != (unsigned long )((struct bio *)0)) {
< #line 4523
<     complete_master_bio(mdev, & m);
---
> #line 5040
>   err = validate_req_change_req_state(mdev, p->block_id, sector, & mdev->write_requests,
>                                       "got_NegAck", NEG_ACKED, 1);
> #line 5043
>   if (err != 0) {
> #line 5049
>     __drbd_set_out_of_sync(mdev, sector, size, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>                            5049U);
30802,30803c31454,31455
< #line 4524
<   return (1);
---
> #line 5051
>   return (0);
30806,30807c31458,31459
< #line 4527 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int got_NegDReply(struct drbd_conf *mdev , struct p_header80 *h ) 
---
> #line 5054 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int got_NegDReply(struct drbd_tconn *tconn , struct packet_info *pi ) 
30808a31461
>   struct drbd_conf *mdev ;
30817,30819c31470,31472
< #line 4529
<   p = (struct p_block_ack *)h;
< #line 4530
---
> #line 5057
>   p = (struct p_block_ack *)pi->data;
> #line 5058
30821c31474
< #line 4530
---
> #line 5058
30823c31476,31485
< #line 4532
---
> #line 5060
>   mdev = vnr_to_mdev(tconn, (int )pi->vnr);
> #line 5061
>   if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
> #line 5062
>     return (-5);
>   } else {
> 
>   }
> #line 5064
30825c31487
< #line 4532
---
> #line 5064
30827c31489
< #line 4533
---
> #line 5066
30829,30830c31491,31492
< #line 4533
<   dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Got NegDReply; Sector %llus, len %u; Fail original request.\n",
---
> #line 5066
>   dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Got NegDReply; Sector %llus, len %u.\n",
30832,30835c31494,31497
< #line 4536
<   tmp___2 = validate_req_change_req_state(mdev, p->block_id, sector, & _ar_id_to_req,
<                                           "got_NegDReply", neg_acked);
< #line 4536
---
> #line 5069
>   tmp___2 = validate_req_change_req_state(mdev, p->block_id, sector, & mdev->read_requests,
>                                           "got_NegDReply", NEG_ACKED, 0);
> #line 5069
30839,30840c31501,31502
< #line 4540 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int got_NegRSDReply(struct drbd_conf *mdev , struct p_header80 *h ) 
---
> #line 5074 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int got_NegRSDReply(struct drbd_tconn *tconn , struct packet_info *pi ) 
30841a31504
>   struct drbd_conf *mdev ;
30849,30851d31511
<   int tmp___3 ;
<   __u16 tmp___4 ;
<   int tmp___5 ;
30854,30856c31514,31525
< #line 4544
<   p = (struct p_block_ack *)h;
< #line 4546
---
> #line 5079
>   p = (struct p_block_ack *)pi->data;
> #line 5081
>   mdev = vnr_to_mdev(tconn, (int )pi->vnr);
> #line 5082
>   if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
> #line 5083
>     return (-5);
>   } else {
> 
>   }
> #line 5085
30858c31527
< #line 4546
---
> #line 5085
30860c31529
< #line 4547
---
> #line 5086
30862c31531
< #line 4547
---
> #line 5086
30864c31533
< #line 4549
---
> #line 5088
30866c31535
< #line 4549
---
> #line 5088
30868,30886c31537,31543
< #line 4551
<   atomic_dec(& mdev->rs_pending_cnt);
< #line 4551
<   tmp___3 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
< #line 4551
<   if (tmp___3 < 0) {
< #line 4551
<     tmp___2 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
< #line 4551
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: rs_pending_cnt = %d < 0 !\n",
<             "got_NegRSDReply", 4551, tmp___2);
<   } else {
< 
<   }
< #line 4553
<   tmp___5 = _get_ldev_if_state(mdev, D_FAILED);
< #line 4553
<   if (tmp___5 != 0) {
< #line 4554
---
> #line 5090
>   _dec_rs_pending(mdev, "got_NegRSDReply", 5090);
> #line 5092
>   tmp___2 = _get_ldev_if_state(mdev, D_FAILED);
> #line 5092
>   if (tmp___2 != 0) {
> #line 5093
30888,30893c31545,31548
< #line 4555
<     tmp___4 = __fswab16((int )h->command);
< #line 4555
<     switch ((int )tmp___4) {
<     case 27: 
< #line 4557
---
> #line 5094
>     switch ((unsigned int )pi->cmd) {
>     case 27U: 
> #line 5096
30895,30897c31550,31552
<     case 41: ;
< #line 4559
<     goto ldv_53300;
---
>     case 41U: ;
> #line 5098
>     goto ldv_53876;
30899,30906c31554,31559
< #line 4561
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( 0 ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             4561);
< #line 4562
<     put_ldev(mdev);
< #line 4563
<     return (0);
---
> #line 5100
>     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"),
>                          "i" (5100), "i" (12UL));
>     ldv_53878: ;
> #line 5100
>     goto ldv_53878;
30908,30909c31561,31562
<     ldv_53300: 
< #line 4565
---
>     ldv_53876: 
> #line 5102
30914,30915c31567,31568
< #line 4568
<   return (1);
---
> #line 5105
>   return (0);
30918,30919c31571,31572
< #line 4571 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int got_BarrierAck(struct drbd_conf *mdev , struct p_header80 *h ) 
---
> #line 5108 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int got_BarrierAck(struct drbd_tconn *tconn , struct packet_info *pi ) 
30921a31575,31576
>   struct drbd_conf *mdev ;
>   int vnr ;
30923c31578
<   int tmp___0 ;
---
>   void *tmp___0 ;
30924a31580,31581
>   int tmp___2 ;
>   void *tmp___3 ;
30927,30929c31584,31586
< #line 4573
<   p = (struct p_barrier_ack *)h;
< #line 4575
---
> #line 5110
>   p = (struct p_barrier_ack *)pi->data;
> #line 5114
30931,30943c31588,31611
< #line 4575
<   tl_release(mdev, p->barrier, tmp);
< #line 4577
<   if ((unsigned int )*((unsigned short *)mdev + 1138UL) == 352U) {
< #line 4577
<     tmp___0 = atomic_read((atomic_t const   *)(& mdev->ap_in_flight));
< #line 4577
<     if (tmp___0 == 0) {
< #line 4577
<       tmp___1 = drbd_test_and_set_flag(mdev, AHEAD_TO_SYNC_SOURCE);
< #line 4577
<       if (tmp___1 == 0) {
< #line 4580
---
> #line 5114
>   tl_release(tconn, p->barrier, tmp);
> #line 5116
>   rcu_read_lock();
> #line 5117
>   vnr = 0;
> #line 5117
>   tmp___0 = idr_get_next(& tconn->volumes, & vnr);
> #line 5117
>   mdev = (struct drbd_conf *)tmp___0;
> #line 5117
>   goto ldv_53887;
>   ldv_53886: ;
> #line 5118
>   if ((unsigned int )*((unsigned short *)mdev + 374UL) == 352U) {
> #line 5118
>     tmp___1 = atomic_read((atomic_t const   *)(& mdev->ap_in_flight));
> #line 5118
>     if (tmp___1 == 0) {
> #line 5118
>       tmp___2 = test_and_set_bit(19, (unsigned long volatile   *)(& mdev->flags));
> #line 5118
>       if (tmp___2 == 0) {
> #line 5121
30945c31613
< #line 4581
---
> #line 5122
30956,30957c31624,31641
< #line 4584
<   return (1);
---
> #line 5117
>   vnr = vnr + 1;
> #line 5117
>   tmp___3 = idr_get_next(& tconn->volumes, & vnr);
> #line 5117
>   mdev = (struct drbd_conf *)tmp___3;
>   ldv_53887: ;
> #line 5117
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 5118
>     goto ldv_53886;
>   } else {
> 
>   }
> #line 5125
>   rcu_read_unlock();
> #line 5127
>   return (0);
30960,30961c31644,31645
< #line 4587 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int got_OVResult(struct drbd_conf *mdev , struct p_header80 *h ) 
---
> #line 5130 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int got_OVResult(struct drbd_tconn *tconn , struct packet_info *pi ) 
30962a31647
>   struct drbd_conf *mdev ;
30972,30974c31657
<   int tmp___4 ;
<   int tmp___5 ;
<   void *tmp___6 ;
---
>   void *tmp___4 ;
30977,30979c31660,31671
< #line 4589
<   p = (struct p_block_ack *)h;
< #line 4594
---
> #line 5133
>   p = (struct p_block_ack *)pi->data;
> #line 5138
>   mdev = vnr_to_mdev(tconn, (int )pi->vnr);
> #line 5139
>   if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
> #line 5140
>     return (-5);
>   } else {
> 
>   }
> #line 5142
30981c31673
< #line 4594
---
> #line 5142
30983c31675
< #line 4595
---
> #line 5143
30985c31677
< #line 4595
---
> #line 5143
30987c31679
< #line 4597
---
> #line 5145
30989c31681
< #line 4597
---
> #line 5145
30991c31683
< #line 4599
---
> #line 5147
30993c31685
< #line 4599
---
> #line 5147
30995,30996c31687,31688
< #line 4600
<     drbd_ov_oos_found(mdev, sector, size);
---
> #line 5148
>     drbd_ov_out_of_sync_found(mdev, sector, size);
30998,30999c31690,31691
< #line 4602
<     ov_oos_print(mdev);
---
> #line 5150
>     ov_out_of_sync_print(mdev);
31001c31693
< #line 4604
---
> #line 5152
31003c31695
< #line 4604
---
> #line 5152
31005,31006c31697,31698
< #line 4605
<     return (1);
---
> #line 5153
>     return (0);
31010c31702
< #line 4607
---
> #line 5155
31012,31026c31704,31706
< #line 4608
<   atomic_dec(& mdev->rs_pending_cnt);
< #line 4608
<   tmp___5 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
< #line 4608
<   if (tmp___5 < 0) {
< #line 4608
<     tmp___4 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
< #line 4608
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: rs_pending_cnt = %d < 0 !\n",
<             "got_OVResult", 4608, tmp___4);
<   } else {
< 
<   }
< #line 4610
---
> #line 5156
>   _dec_rs_pending(mdev, "got_OVResult", 5156);
> #line 5158
31028c31708
< #line 4613
---
> #line 5161
31030c31710
< #line 4614
---
> #line 5162
31035c31715
< #line 4616
---
> #line 5164
31037,31041c31717,31721
< #line 4617
<     tmp___6 = kmalloc(24UL, 16U);
< #line 4617
<     w = (struct drbd_work *)tmp___6;
< #line 4618
---
> #line 5165
>     tmp___4 = kmalloc(32UL, 16U);
> #line 5165
>     w = (struct drbd_work *)tmp___4;
> #line 5166
31043c31723
< #line 4619
---
> #line 5167
31045,31046c31725,31728
< #line 4620
<       drbd_queue_work_front(& mdev->data.work, w);
---
> #line 5168
>       w->ldv_50388.mdev = mdev;
> #line 5169
>       drbd_queue_work(& (mdev->tconn)->sender_work, w);
31048c31730
< #line 4622
---
> #line 5171
31050,31052c31732,31734
< #line 4623
<       ov_oos_print(mdev);
< #line 4624
---
> #line 5172
>       ov_out_of_sync_print(mdev);
> #line 5173
31058c31740
< #line 4627
---
> #line 5176
31060,31061c31742,31743
< #line 4628
<   return (1);
---
> #line 5177
>   return (0);
31064,31065c31746,31747
< #line 4631 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int got_skip(struct drbd_conf *mdev , struct p_header80 *h ) 
---
> #line 5180 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int got_skip(struct drbd_tconn *tconn , struct packet_info *pi ) 
31070,31071c31752,31753
< #line 4633
<   return (1);
---
> #line 5182
>   return (0);
31074,31075c31756,31757
< #line 4641 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static struct asender_cmd *get_asender_cmd(int cmd ) 
---
> #line 5185 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int tconn_finish_peer_reqs(struct drbd_tconn *tconn ) 
31077c31759,31768
<   struct asender_cmd asender_tbl[43U] ;
---
>   struct drbd_conf *mdev ;
>   int vnr ;
>   int not_empty ;
>   struct task_struct *tmp ;
>   void *tmp___0 ;
>   int tmp___1 ;
>   void *tmp___2 ;
>   void *tmp___3 ;
>   int tmp___4 ;
>   void *tmp___5 ;
31080,31256c31771,31870
< #line 4643
<   asender_tbl[0].pkt_size = 0UL;
< #line 4643
<   asender_tbl[0].process = 0;
< #line 4643
<   asender_tbl[1].pkt_size = 0UL;
< #line 4643
<   asender_tbl[1].process = 0;
< #line 4643
<   asender_tbl[2].pkt_size = 0UL;
< #line 4643
<   asender_tbl[2].process = 0;
< #line 4643
<   asender_tbl[3].pkt_size = 0UL;
< #line 4643
<   asender_tbl[3].process = 0;
< #line 4643
<   asender_tbl[4].pkt_size = 0UL;
< #line 4643
<   asender_tbl[4].process = 0;
< #line 4643
<   asender_tbl[5].pkt_size = 0UL;
< #line 4643
<   asender_tbl[5].process = 0;
< #line 4643
<   asender_tbl[6].pkt_size = 0UL;
< #line 4643
<   asender_tbl[6].process = 0;
< #line 4643
<   asender_tbl[7].pkt_size = 0UL;
< #line 4643
<   asender_tbl[7].process = 0;
< #line 4643
<   asender_tbl[8].pkt_size = 0UL;
< #line 4643
<   asender_tbl[8].process = 0;
< #line 4643
<   asender_tbl[9].pkt_size = 0UL;
< #line 4643
<   asender_tbl[9].process = 0;
< #line 4643
<   asender_tbl[10].pkt_size = 0UL;
< #line 4643
<   asender_tbl[10].process = 0;
< #line 4643
<   asender_tbl[11].pkt_size = 0UL;
< #line 4643
<   asender_tbl[11].process = 0;
< #line 4643
<   asender_tbl[12].pkt_size = 0UL;
< #line 4643
<   asender_tbl[12].process = 0;
< #line 4643
<   asender_tbl[13].pkt_size = 0UL;
< #line 4643
<   asender_tbl[13].process = 0;
< #line 4643
<   asender_tbl[14].pkt_size = 0UL;
< #line 4643
<   asender_tbl[14].process = 0;
< #line 4643
<   asender_tbl[15].pkt_size = 0UL;
< #line 4643
<   asender_tbl[15].process = 0;
< #line 4643
<   asender_tbl[16].pkt_size = 0UL;
< #line 4643
<   asender_tbl[16].process = 0;
< #line 4643
<   asender_tbl[17].pkt_size = 0UL;
< #line 4643
<   asender_tbl[17].process = 0;
< #line 4643
<   asender_tbl[18].pkt_size = 0UL;
< #line 4643
<   asender_tbl[18].process = 0;
< #line 4643
<   asender_tbl[19].pkt_size = 8UL;
< #line 4643
<   asender_tbl[19].process = & got_Ping;
< #line 4643
<   asender_tbl[20].pkt_size = 8UL;
< #line 4643
<   asender_tbl[20].process = & got_PingAck;
< #line 4643
<   asender_tbl[21].pkt_size = 32UL;
< #line 4643
<   asender_tbl[21].process = & got_BlockAck;
< #line 4643
<   asender_tbl[22].pkt_size = 32UL;
< #line 4643
<   asender_tbl[22].process = & got_BlockAck;
< #line 4643
<   asender_tbl[23].pkt_size = 32UL;
< #line 4643
<   asender_tbl[23].process = & got_BlockAck;
< #line 4643
<   asender_tbl[24].pkt_size = 32UL;
< #line 4643
<   asender_tbl[24].process = & got_BlockAck;
< #line 4643
<   asender_tbl[25].pkt_size = 32UL;
< #line 4643
<   asender_tbl[25].process = & got_NegAck;
< #line 4643
<   asender_tbl[26].pkt_size = 32UL;
< #line 4643
<   asender_tbl[26].process = & got_NegDReply;
< #line 4643
<   asender_tbl[27].pkt_size = 32UL;
< #line 4643
<   asender_tbl[27].process = & got_NegRSDReply;
< #line 4643
<   asender_tbl[28].pkt_size = 16UL;
< #line 4643
<   asender_tbl[28].process = & got_BarrierAck;
< #line 4643
<   asender_tbl[29].pkt_size = 12UL;
< #line 4643
<   asender_tbl[29].process = & got_RqSReply;
< #line 4643
<   asender_tbl[30].pkt_size = 0UL;
< #line 4643
<   asender_tbl[30].process = 0;
< #line 4643
<   asender_tbl[31].pkt_size = 0UL;
< #line 4643
<   asender_tbl[31].process = 0;
< #line 4643
<   asender_tbl[32].pkt_size = 32UL;
< #line 4643
<   asender_tbl[32].process = & got_OVResult;
< #line 4643
<   asender_tbl[33].pkt_size = 0UL;
< #line 4643
<   asender_tbl[33].process = 0;
< #line 4643
<   asender_tbl[34].pkt_size = 32UL;
< #line 4643
<   asender_tbl[34].process = & got_IsInSync;
< #line 4643
<   asender_tbl[35].pkt_size = 0UL;
< #line 4643
<   asender_tbl[35].process = 0;
< #line 4643
<   asender_tbl[36].pkt_size = 0UL;
< #line 4643
<   asender_tbl[36].process = 0;
< #line 4643
<   asender_tbl[37].pkt_size = 0UL;
< #line 4643
<   asender_tbl[37].process = 0;
< #line 4643
<   asender_tbl[38].pkt_size = 0UL;
< #line 4643
<   asender_tbl[38].process = 0;
< #line 4643
<   asender_tbl[39].pkt_size = 16UL;
< #line 4643
<   asender_tbl[39].process = & got_skip;
< #line 4643
<   asender_tbl[40].pkt_size = 0UL;
< #line 4643
<   asender_tbl[40].process = 0;
< #line 4643
<   asender_tbl[41].pkt_size = 32UL;
< #line 4643
<   asender_tbl[41].process = & got_NegRSDReply;
< #line 4643
<   asender_tbl[42].pkt_size = 0UL;
< #line 4643
<   asender_tbl[42].process = 0;
< #line 4664
<   if (cmd > 42 || (unsigned long )asender_tbl[cmd].process == (unsigned long )((int (*)(struct drbd_conf * ,
<                                                                                         struct p_header80 * ))0)) {
< #line 4665
<     return (0);
---
> #line 5188
>   not_empty = 0;
>   ldv_53915: 
> #line 5191
>   clear_bit(3, (unsigned long volatile   *)(& tconn->flags));
> #line 5192
>   tmp = get_current();
> #line 5192
>   flush_signals(tmp);
> #line 5194
>   rcu_read_lock();
> #line 5195
>   vnr = 0;
> #line 5195
>   tmp___0 = idr_get_next(& tconn->volumes, & vnr);
> #line 5195
>   mdev = (struct drbd_conf *)tmp___0;
> #line 5195
>   goto ldv_53910;
>   ldv_53909: 
> #line 5196
>   kref_get(& mdev->kref);
> #line 5197
>   rcu_read_unlock();
> #line 5198
>   tmp___1 = drbd_finish_peer_reqs(mdev);
> #line 5198
>   if (tmp___1 != 0) {
> #line 5199
>     kref_put(& mdev->kref, & drbd_minor_destroy);
> #line 5200
>     return (1);
>   } else {
> 
>   }
> #line 5202
>   kref_put(& mdev->kref, & drbd_minor_destroy);
> #line 5203
>   rcu_read_lock();
> #line 5195
>   vnr = vnr + 1;
> #line 5195
>   tmp___2 = idr_get_next(& tconn->volumes, & vnr);
> #line 5195
>   mdev = (struct drbd_conf *)tmp___2;
>   ldv_53910: ;
> #line 5195
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 5196
>     goto ldv_53909;
>   } else {
> 
>   }
> #line 5205
>   set_bit(3U, (unsigned long volatile   *)(& tconn->flags));
> #line 5207
>   spin_lock_irq(& tconn->req_lock);
> #line 5208
>   vnr = 0;
> #line 5208
>   tmp___3 = idr_get_next(& tconn->volumes, & vnr);
> #line 5208
>   mdev = (struct drbd_conf *)tmp___3;
> #line 5208
>   goto ldv_53914;
>   ldv_53913: 
> #line 5209
>   tmp___4 = list_empty((struct list_head  const  *)(& mdev->done_ee));
> #line 5209
>   not_empty = tmp___4 == 0;
> #line 5210
>   if (not_empty != 0) {
> #line 5211
>     goto ldv_53912;
>   } else {
> 
>   }
> #line 5208
>   vnr = vnr + 1;
> #line 5208
>   tmp___5 = idr_get_next(& tconn->volumes, & vnr);
> #line 5208
>   mdev = (struct drbd_conf *)tmp___5;
>   ldv_53914: ;
> #line 5208
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 5209
>     goto ldv_53913;
>   } else {
> 
>   }
>   ldv_53912: 
> #line 5213
>   spin_unlock_irq(& tconn->req_lock);
> #line 5214
>   rcu_read_unlock();
> #line 5215
>   if (not_empty != 0) {
> #line 5216
>     goto ldv_53915;
31260,31261c31874,31876
< #line 4666
<   return ((struct asender_cmd *)(& asender_tbl) + (unsigned long )cmd);
---
> 
> #line 5217
>   return (0);
31264c31879,31927
< #line 4669 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 5225 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
> static struct asender_cmd asender_tbl[45U]  = 
> #line 5225
>   {      {0UL, 0}, 
>         {0UL, 0}, 
>         {0UL, 0}, 
>         {0UL, 0}, 
>         {0UL, 0}, 
>         {0UL, 0}, 
>         {0UL, 0}, 
>         {0UL, 0}, 
>         {0UL, 0}, 
>         {0UL, 0}, 
>         {0UL, 0}, 
>         {0UL, 0}, 
>         {0UL, 0}, 
>         {0UL, 0}, 
>         {0UL, 0}, 
>         {0UL, 0}, 
>         {0UL, 0}, 
>         {0UL, 0}, 
>         {0UL, 0}, 
>         {0UL, & got_Ping}, 
>         {0UL, & got_PingAck}, 
>         {24UL, & got_BlockAck}, 
>         {24UL, & got_BlockAck}, 
>         {24UL, & got_BlockAck}, 
>         {24UL, & got_BlockAck}, 
>         {24UL, & got_NegAck}, 
>         {24UL, & got_NegDReply}, 
>         {24UL, & got_NegRSDReply}, 
>         {8UL, & got_BarrierAck}, 
>         {4UL, & got_RqSReply}, 
>         {0UL, 0}, 
>         {0UL, 0}, 
>         {24UL, & got_OVResult}, 
>         {0UL, 0}, 
>         {24UL, & got_IsInSync}, 
>         {0UL, 0}, 
>         {0UL, 0}, 
>         {0UL, 0}, 
>         {0UL, 0}, 
>         {8UL, & got_skip}, 
>         {0UL, 0}, 
>         {24UL, & got_NegRSDReply}, 
>         {0UL, 0}, 
>         {4UL, & got_conn_RqSReply}, 
>         {24UL, & got_BlockAck}};
> #line 5245 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
31267,31268c31930
<   struct drbd_conf *mdev ;
<   struct p_header80 *h ;
---
>   struct drbd_tconn *tconn ;
31269a31932
>   struct packet_info pi ;
31271d31933
<   int len ;
31274,31276c31936
<   int expect ;
<   int empty ;
<   int ping_timeout_active ;
---
>   unsigned int header_size ;
31277a31938,31943
>   int expect ;
>   bool ping_timeout_active ;
>   struct net_conf *nc ;
>   int ping_timeo ;
>   int tcp_cork ;
>   int ping_int ;
31280,31281c31946,31948
<   struct task_struct *tmp___2 ;
<   int _b ;
---
>   struct net_conf *_________p1 ;
>   bool __warned ;
>   int tmp___2 ;
31285,31289c31952,31955
<   struct task_struct *tmp___6 ;
<   int tmp___7 ;
<   struct task_struct *tmp___8 ;
<   int tmp___9 ;
<   struct task_struct *tmp___10 ;
---
>   int tmp___6 ;
>   struct task_struct *tmp___7 ;
>   int tmp___8 ;
>   struct task_struct *tmp___9 ;
31290a31957,31960
>   struct net_conf *_________p1___0 ;
>   bool __warned___0 ;
>   int tmp___10 ;
>   int tmp___11 ;
31293,31309c31963,31970
<   struct task_struct *tmp___11 ;
<   int tmp___12 ;
<   long tmp___13 ;
<   __u16 tmp___14 ;
<   __u16 tmp___15 ;
<   __u32 tmp___16 ;
<   long tmp___17 ;
<   __u16 tmp___18 ;
<   __u16 tmp___19 ;
<   __u16 tmp___20 ;
<   __u16 tmp___21 ;
<   __u32 tmp___22 ;
<   long tmp___23 ;
<   int _b___0 ;
<   int tmp___24 ;
<   struct asender_cmd *tmp___25 ;
<   enum drbd_thread_state tmp___26 ;
---
>   struct task_struct *tmp___12 ;
>   int tmp___13 ;
>   long tmp___14 ;
>   int tmp___15 ;
>   char const   *tmp___16 ;
>   bool err ;
>   int tmp___17 ;
>   enum drbd_thread_state tmp___18 ;
31316,31320c31977,31979
< #line 4671
<   mdev = thi->mdev;
< #line 4672
<   h = & mdev->meta.rbuf.header.h80;
< #line 4673
---
> #line 5247
>   tconn = thi->tconn;
> #line 5248
31322,31324c31981,31983
< #line 4676
<   buf = (void *)h;
< #line 4677
---
> #line 5251
>   buf = tconn->meta.rbuf;
> #line 5252
31326,31328c31985,31991
< #line 4678
<   expect = 8;
< #line 4680
---
> #line 5253
>   tmp = drbd_header_size(tconn);
> #line 5253
>   header_size = tmp;
> #line 5254
>   expect = (int )header_size;
> #line 5255
31330,31332c31993
< #line 4682
<   tmp = mdev_to_minor(mdev);
< #line 4682
---
> #line 5259
31334,31336c31995,31997
< #line 4682
<   sprintf((char *)(& tmp___0->comm), "drbd%d_asender", tmp);
< #line 4684
---
> #line 5259
>   tmp___0->policy = 2U;
> #line 5260
31338,31369c31999,32022
< #line 4684
<   tmp___1->policy = 2U;
< #line 4685
<   tmp___2 = get_current();
< #line 4685
<   tmp___2->rt_priority = 2U;
< #line 4687
<   goto ldv_53351;
<   ldv_53368: 
< #line 4688
<   drbd_thread_current_set_cpu(mdev);
< #line 4689
<   tmp___4 = drbd_test_and_clear_flag(mdev, SEND_PING);
< #line 4689
<   if (tmp___4 != 0) {
< #line 4690
<     tmp___3 = drbd_send_ping(mdev);
< #line 4690
<     _b = tmp___3 == 0;
< #line 4690
<     if (_b != 0) {
< #line 4690
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<               "drbd_asender", (char *)"!drbd_send_ping(mdev)", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<               4690);
<     } else {
< 
<     }
< #line 4690
<     if (_b != 0) {
< #line 4690
<       goto reconnect;
---
> #line 5260
>   tmp___1->rt_priority = 2U;
> #line 5262
>   goto ldv_53943;
>   ldv_53964: 
> #line 5263
>   drbd_thread_current_set_cpu(thi);
> #line 5265
>   rcu_read_lock();
> #line 5266
>   _________p1 = *((struct net_conf * volatile  *)(& tconn->net_conf));
> #line 5266
>   tmp___2 = debug_lockdep_rcu_enabled();
> #line 5266
>   if (tmp___2 != 0 && ! __warned) {
> #line 5266
>     tmp___3 = rcu_read_lock_held();
> #line 5266
>     if (tmp___3 == 0 && 1) {
> #line 5266
>       __warned = 1;
> #line 5266
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>                              5266, "suspicious rcu_dereference_check() usage");
31373,31376d32025
< #line 4691
<     ((mdev->meta.socket)->sk)->sk_rcvtimeo = (long )(((mdev->net_conf)->ping_timeo * 250) / 10);
< #line 4693
<     ping_timeout_active = 1;
31380,31387c32029,32050
< #line 4698
<   if ((unsigned int )*((unsigned char *)mdev->net_conf + 540UL) == 0U) {
< #line 4698
<     tmp___5 = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 4698
<     if (tmp___5 > 3) {
< #line 4700
<       drbd_tcp_cork(mdev->meta.socket);
---
> #line 5266
>   nc = _________p1;
> #line 5267
>   ping_timeo = (int )nc->ping_timeo;
> #line 5268
>   tcp_cork = (int )nc->tcp_cork;
> #line 5269
>   ping_int = (int )nc->ping_int;
> #line 5270
>   rcu_read_unlock();
> #line 5272
>   tmp___5 = test_and_clear_bit(2, (unsigned long volatile   *)(& tconn->flags));
> #line 5272
>   if (tmp___5 != 0) {
> #line 5273
>     tmp___4 = drbd_send_ping(tconn);
> #line 5273
>     if (tmp___4 != 0) {
> #line 5274
>       printk("\vd-con %s: drbd_send_ping has failed\n", tconn->name);
> #line 5275
>       goto reconnect;
31390a32054,32057
> #line 5277
>     ((tconn->meta.socket)->sk)->sk_rcvtimeo = (long )((ping_timeo * 250) / 10);
> #line 5278
>     ping_timeout_active = 1;
31394,31406c32061,32064
<   ldv_53350: 
< #line 4702
<   drbd_clear_flag(mdev, SIGNAL_ASENDER);
< #line 4703
<   tmp___6 = get_current();
< #line 4703
<   flush_signals(tmp___6);
< #line 4704
<   tmp___7 = drbd_process_done_ee(mdev);
< #line 4704
<   if (tmp___7 == 0) {
< #line 4705
<     goto reconnect;
---
> #line 5283
>   if (tcp_cork != 0) {
> #line 5284
>     drbd_tcp_cork(tconn->meta.socket);
31410,31421c32068,32075
< #line 4707
<   drbd_set_flag(mdev, SIGNAL_ASENDER);
< #line 4708
<   spin_lock_irq(& mdev->req_lock);
< #line 4709
<   empty = list_empty((struct list_head  const  *)(& mdev->done_ee));
< #line 4710
<   spin_unlock_irq(& mdev->req_lock);
< #line 4714
<   if (empty != 0) {
< #line 4715
<     goto ldv_53349;
---
> #line 5285
>   tmp___6 = tconn_finish_peer_reqs(tconn);
> #line 5285
>   if (tmp___6 != 0) {
> #line 5286
>     printk("\vd-con %s: tconn_finish_peer_reqs() failed\n", tconn->name);
> #line 5287
>     goto reconnect;
31425,31431c32079,32082
< #line 4716
<   goto ldv_53350;
<   ldv_53349: ;
< #line 4718
<   if ((unsigned int )*((unsigned char *)mdev->net_conf + 540UL) == 0U) {
< #line 4719
<     drbd_tcp_uncork(mdev->meta.socket);
---
> #line 5290
>   if (tcp_cork != 0) {
> #line 5291
>     drbd_tcp_uncork(tconn->meta.socket);
31435,31442c32086,32093
< #line 4722
<   tmp___8 = get_current();
< #line 4722
<   tmp___9 = signal_pending(tmp___8);
< #line 4722
<   if (tmp___9 != 0) {
< #line 4723
<     goto ldv_53351;
---
> #line 5294
>   tmp___7 = get_current();
> #line 5294
>   tmp___8 = signal_pending(tmp___7);
> #line 5294
>   if (tmp___8 != 0) {
> #line 5295
>     goto ldv_53943;
31446,31459c32097,32109
< #line 4725
<   rv = drbd_recv_short(mdev, mdev->meta.socket, buf, (size_t )(expect - received),
<                        0);
< #line 4727
<   drbd_clear_flag(mdev, SIGNAL_ASENDER);
< #line 4729
<   tmp___10 = get_current();
< #line 4729
<   flush_signals(tmp___10);
< #line 4741
<   tmp___13 = __builtin_expect(rv > 0, 1L);
< #line 4741
<   if (tmp___13 != 0L) {
< #line 4742
---
> #line 5297
>   rv = drbd_recv_short(tconn->meta.socket, buf, (size_t )(expect - received), 0);
> #line 5298
>   clear_bit(3, (unsigned long volatile   *)(& tconn->flags));
> #line 5300
>   tmp___9 = get_current();
> #line 5300
>   flush_signals(tmp___9);
> #line 5312
>   tmp___14 = __builtin_expect(rv > 0, 1L);
> #line 5312
>   if (tmp___14 != 0L) {
> #line 5313
31461c32111
< #line 4743
---
> #line 5314
31464c32114
< #line 4744
---
> #line 5315
31466,31476c32116,32153
< #line 4745
<     tmp___12 = drbd_test_flag(mdev, DISCONNECT_SENT);
< #line 4745
<     if (tmp___12 != 0) {
< #line 4747
<       __ret = (long )(((mdev->net_conf)->ping_timeo * 250) / 10);
< #line 4747
<       if ((int )mdev->state.ldv_39979.conn > 9) {
< #line 4747
<         tmp___11 = get_current();
< #line 4747
---
> #line 5316
>     tmp___13 = constant_test_bit(12U, (unsigned long const volatile   *)(& tconn->flags));
> #line 5316
>     if (tmp___13 != 0) {
> #line 5318
>       rcu_read_lock();
> #line 5319
>       _________p1___0 = *((struct net_conf * volatile  *)(& tconn->net_conf));
> #line 5319
>       tmp___10 = debug_lockdep_rcu_enabled();
> #line 5319
>       if (tmp___10 != 0 && ! __warned___0) {
> #line 5319
>         tmp___11 = rcu_read_lock_held();
> #line 5319
>         if (tmp___11 == 0 && 1) {
> #line 5319
>           __warned___0 = 1;
> #line 5319
>           lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>                                  5319, "suspicious rcu_dereference_check() usage");
>         } else {
> 
>         }
>       } else {
> 
>       }
> #line 5319
>       t = (long )((_________p1___0->ping_timeo * 250U) / 10U);
> #line 5320
>       rcu_read_unlock();
> #line 5322
>       __ret = t;
> #line 5322
>       if ((unsigned int )tconn->cstate > 8U) {
> #line 5322
>         tmp___12 = get_current();
> #line 5322
31478,31480c32155,32157
< #line 4747
<         __wait.private = (void *)tmp___11;
< #line 4747
---
> #line 5322
>         __wait.private = (void *)tmp___12;
> #line 5322
31482c32159
< #line 4747
---
> #line 5322
31484c32161
< #line 4747
---
> #line 5322
31486,31492c32163,32169
<         ldv_53356: 
< #line 4747
<         prepare_to_wait(& mdev->state_wait, & __wait, 2);
< #line 4747
<         if ((int )mdev->state.ldv_39979.conn <= 9) {
< #line 4747
<           goto ldv_53355;
---
>         ldv_53951: 
> #line 5322
>         prepare_to_wait(& tconn->ping_wait, & __wait, 2);
> #line 5322
>         if ((unsigned int )tconn->cstate <= 8U) {
> #line 5322
>           goto ldv_53950;
31496c32173
< #line 4747
---
> #line 5322
31498c32175
< #line 4747
---
> #line 5322
31500,31501c32177,32178
< #line 4747
<           goto ldv_53355;
---
> #line 5322
>           goto ldv_53950;
31505,31509c32182,32186
< #line 4747
<         goto ldv_53356;
<         ldv_53355: 
< #line 4747
<         finish_wait(& mdev->state_wait, & __wait);
---
> #line 5322
>         goto ldv_53951;
>         ldv_53950: 
> #line 5322
>         finish_wait(& tconn->ping_wait, & __wait);
31513c32190
< #line 4747
---
> #line 5322
31515c32192
< #line 4749
---
> #line 5325
31517,31518c32194,32195
< #line 4750
<         goto ldv_53358;
---
> #line 5326
>         goto ldv_53953;
31525,31527c32202,32204
< #line 4752
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "meta connection shut down by peer.\n");
< #line 4753
---
> #line 5328
>     printk("\vd-con %s: meta connection shut down by peer.\n", tconn->name);
> #line 5329
31530c32207
< #line 4754
---
> #line 5330
31532,31535c32209,32212
< #line 4757
<     if ((1 != 0 && 1 != 0) && (long )((unsigned long )jiffies - (unsigned long )((mdev->meta.socket)->sk)->sk_rcvtimeo) - (long )mdev->last_received < 0L) {
< #line 4759
<       goto ldv_53351;
---
> #line 5333
>     if ((1 != 0 && 1 != 0) && (long )((unsigned long )jiffies - (unsigned long )((tconn->meta.socket)->sk)->sk_rcvtimeo) - (long )tconn->last_received < 0L) {
> #line 5335
>       goto ldv_53943;
31539,31543c32216,32220
< #line 4760
<     if (ping_timeout_active != 0) {
< #line 4761
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "PingAck did not arrive in time.\n");
< #line 4762
---
> #line 5336
>     if ((int )ping_timeout_active) {
> #line 5337
>       printk("\vd-con %s: PingAck did not arrive in time.\n", tconn->name);
> #line 5338
31548,31551c32225,32228
< #line 4764
<     drbd_set_flag(mdev, SEND_PING);
< #line 4765
<     goto ldv_53351;
---
> #line 5340
>     set_bit(2U, (unsigned long volatile   *)(& tconn->flags));
> #line 5341
>     goto ldv_53943;
31553c32230
< #line 4766
---
> #line 5342
31555,31556c32232,32233
< #line 4767
<     goto ldv_53351;
---
> #line 5343
>     goto ldv_53943;
31558,31561c32235,32237
< #line 4769
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "sock_recvmsg returned %d\n",
<             rv);
< #line 4770
---
> #line 5345
>     printk("\vd-con %s: sock_recvmsg returned %d\n", tconn->name, rv);
> #line 5346
31564c32240
< #line 4773
---
> #line 5349
31566,31579c32242,32246
< #line 4774
<     tmp___17 = __builtin_expect(h->magic != 1728214147U, 0L);
< #line 4774
<     if (tmp___17 != 0L) {
< #line 4775
<       tmp___14 = __fswab16((int )h->length);
< #line 4775
<       tmp___15 = __fswab16((int )h->command);
< #line 4775
<       tmp___16 = __fswab32(h->magic);
< #line 4775
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "magic?? on meta m: 0x%08x c: %d l: %d\n",
<               tmp___16, (int )tmp___15, (int )tmp___14);
< #line 4779
---
> #line 5350
>     tmp___15 = decode_header(tconn, tconn->meta.rbuf, & pi);
> #line 5350
>     if (tmp___15 != 0) {
> #line 5351
31584,31606c32251,32261
< #line 4781
<     tmp___18 = __fswab16((int )h->command);
< #line 4781
<     cmd = get_asender_cmd((int )tmp___18);
< #line 4782
<     tmp___19 = __fswab16((int )h->length);
< #line 4782
<     len = (int )tmp___19;
< #line 4783
<     tmp___23 = __builtin_expect((unsigned long )cmd == (unsigned long )((struct asender_cmd *)0),
<                                 0L);
< #line 4783
<     if (tmp___23 != 0L) {
< #line 4784
<       tmp___20 = __fswab16((int )h->length);
< #line 4784
<       tmp___21 = __fswab16((int )h->command);
< #line 4784
<       tmp___22 = __fswab32(h->magic);
< #line 4784
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "unknown command?? on meta m: 0x%08x c: %d l: %d\n",
<               tmp___22, (int )tmp___21, (int )tmp___20);
< #line 4788
---
> #line 5352
>     cmd = (struct asender_cmd *)(& asender_tbl) + (unsigned long )pi.cmd;
> #line 5353
>     if ((unsigned int )pi.cmd > (unsigned int )P_RETRY_WRITE || (unsigned long )cmd->fn == (unsigned long )((int (*)(struct drbd_tconn * ,
>                                                                                                                      struct packet_info * ))0)) {
> #line 5354
>       tmp___16 = cmdname(pi.cmd);
> #line 5354
>       printk("\vd-con %s: Unexpected meta packet %s (0x%04x)\n", tconn->name, tmp___16,
>              (unsigned int )pi.cmd);
> #line 5356
31611,31626c32266,32273
< #line 4790
<     expect = (int )cmd->pkt_size;
< #line 4791
<     _b___0 = (unsigned long )len != (unsigned long )expect - 8UL;
< #line 4791
<     if (_b___0 != 0) {
< #line 4791
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<               "drbd_asender", (char *)"len != expect-sizeof(struct p_header80)", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<               4791);
<     } else {
< 
<     }
< #line 4791
<     if (_b___0 != 0) {
< #line 4792
---
> #line 5358
>     expect = (int )((unsigned int )cmd->pkt_size + header_size);
> #line 5359
>     if (pi.size != (unsigned int )expect - header_size) {
> #line 5360
>       printk("\vd-con %s: Wrong packet size on meta (c: %d, l: %d)\n", tconn->name,
>              (unsigned int )pi.cmd, pi.size);
> #line 5362
31634c32281
< #line 4794
---
> #line 5365
31636,31651c32283,32291
< #line 4795
<     mdev->last_received = jiffies;
< #line 4796
<     if ((unsigned long )cmd == (unsigned long )((struct asender_cmd *)0)) {
< #line 4796
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( cmd != NULL ) in %s:%d\n",
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<               4796);
<     } else {
< 
<     }
< #line 4797
<     tmp___24 = (*(cmd->process))(mdev, h);
< #line 4797
<     if (tmp___24 == 0) {
< #line 4798
---
> #line 5368
>     tmp___17 = (*(cmd->fn))(tconn, & pi);
> #line 5368
>     err = tmp___17 != 0;
> #line 5369
>     if ((int )err) {
> #line 5370
>       printk("\vd-con %s: %pf failed\n", tconn->name, cmd->fn);
> #line 5371
31656,31660c32296,32302
< #line 4802
<     tmp___25 = get_asender_cmd(20);
< #line 4802
<     if ((unsigned long )tmp___25 == (unsigned long )cmd) {
< #line 4803
---
> #line 5374
>     tconn->last_received = jiffies;
> #line 5376
>     if ((unsigned long )cmd == (unsigned long )((struct asender_cmd *)(& asender_tbl) + 20UL)) {
> #line 5378
>       ((tconn->meta.socket)->sk)->sk_rcvtimeo = (long )(ping_int * 250);
> #line 5379
31665,31667c32307,32309
< #line 4805
<     buf = (void *)h;
< #line 4806
---
> #line 5382
>     buf = tconn->meta.rbuf;
> #line 5383
31669,31671c32311,32313
< #line 4807
<     expect = 8;
< #line 4808
---
> #line 5384
>     expect = (int )header_size;
> #line 5385
31676,31682c32318,32324
<   ldv_53351: 
< #line 4687
<   tmp___26 = get_t_state(thi);
< #line 4687
<   if ((unsigned int )tmp___26 == 1U) {
< #line 4688
<     goto ldv_53368;
---
>   ldv_53943: 
> #line 5262
>   tmp___18 = get_t_state(thi);
> #line 5262
>   if ((unsigned int )tmp___18 == 1U) {
> #line 5263
>     goto ldv_53964;
31686,31687c32328,32329
<   ldv_53358: ;
< #line 4812
---
>   ldv_53953: ;
> #line 5389
31690c32332
< #line 4814
---
> #line 5391
31692,31694c32334,32336
< #line 4814
<     val.ldv_39979.conn = 5U;
< #line 4814
---
> #line 5391
>     val.ldv_40604.conn = 5U;
> #line 5391
31696,31701c32338,32343
< #line 4814
<     mask.ldv_39979.conn = 31U;
< #line 4814
<     drbd_force_state(mdev, mask, val);
< #line 4815
<     drbd_md_sync(mdev);
---
> #line 5391
>     mask.ldv_40604.conn = 31U;
> #line 5391
>     conn_request_state(tconn, mask, val, CS_HARD);
> #line 5392
>     conn_md_sync(tconn);
31705c32347
< #line 4817
---
> #line 5394
31708c32350
< #line 4819
---
> #line 5396
31710,31712c32352,32354
< #line 4819
<     val___0.ldv_39979.conn = 1U;
< #line 4819
---
> #line 5396
>     val___0.ldv_40604.conn = 1U;
> #line 5396
31714,31730c32356,32359
< #line 4819
<     mask___0.ldv_39979.conn = 31U;
< #line 4819
<     drbd_force_state(mdev, mask___0, val___0);
< #line 4820
<     drbd_md_sync(mdev);
<   } else {
< 
<   }
< #line 4822
<   drbd_clear_flag(mdev, SIGNAL_ASENDER);
< #line 4824
<   if ((int )mdev->state.ldv_39979.conn > 9) {
< #line 4824
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mdev->state.conn < C_CONNECTED ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             4824);
---
> #line 5396
>     mask___0.ldv_40604.conn = 31U;
> #line 5396
>     conn_request_state(tconn, mask___0, val___0, CS_HARD);
31734,31736c32363,32367
< #line 4825
<   _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "asender terminated\n");
< #line 4827
---
> #line 5398
>   clear_bit(3, (unsigned long volatile   *)(& tconn->flags));
> #line 5400
>   printk("\016d-con %s: asender terminated\n", tconn->name);
> #line 5402
31740c32371
< #line 4867 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 5442 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
31747c32378
< #line 4879
---
> #line 5454
31749c32380
< #line 4888
---
> #line 5463
31751,31754c32382,32385
< #line 4890
<   goto ldv_53396;
<   ldv_53395: 
< #line 4893
---
> #line 5465
>   goto ldv_53992;
>   ldv_53991: 
> #line 5468
31756c32387
< #line 4893
---
> #line 5468
31759,31760c32390,32391
< #line 4895
<   goto ldv_53394;
---
> #line 5470
>   goto ldv_53990;
31762,31764c32393,32395
<   ldv_53394: ;
<   ldv_53396: 
< #line 4890
---
>   ldv_53990: ;
>   ldv_53992: 
> #line 5465
31766c32397
< #line 4890
---
> #line 5465
31768,31769c32399,32400
< #line 4891
<     goto ldv_53395;
---
> #line 5466
>     goto ldv_53991;
31775c32406
< #line 4904
---
> #line 5479
31777,32166c32408
< #line 4907
<   return;
< }
< }
< #line 4911 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< void ldv_mutex_lock_103(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 4916
<   ldv_mutex_lock_lock(ldv_func_arg1);
< #line 4918
<   mutex_lock(ldv_func_arg1);
< #line 4919
<   return;
< }
< }
< #line 4921 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< void ldv_mutex_unlock_104(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 4926
<   ldv_mutex_unlock_lock(ldv_func_arg1);
< #line 4928
<   mutex_unlock(ldv_func_arg1);
< #line 4929
<   return;
< }
< }
< #line 4931 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< void ldv_mutex_lock_105(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 4936
<   ldv_mutex_lock_mutex_of_device(ldv_func_arg1);
< #line 4938
<   mutex_lock(ldv_func_arg1);
< #line 4939
<   return;
< }
< }
< #line 4941 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< int ldv_mutex_trylock_106(struct mutex *ldv_func_arg1 ) 
< { 
<   ldv_func_ret_type___2 ldv_func_res ;
<   int tmp ;
<   int tmp___0 ;
< 
<   {
< #line 4946
<   tmp = mutex_trylock(ldv_func_arg1);
< #line 4946
<   ldv_func_res = tmp;
< #line 4948
<   tmp___0 = ldv_mutex_trylock_mutex_of_device(ldv_func_arg1);
< #line 4948
<   return (tmp___0);
< #line 4950
<   return (ldv_func_res);
< }
< }
< #line 4953 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< void ldv_mutex_unlock_107(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 4958
<   ldv_mutex_unlock_mutex_of_device(ldv_func_arg1);
< #line 4960
<   mutex_unlock(ldv_func_arg1);
< #line 4961
<   return;
< }
< }
< #line 4963 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< void ldv_mutex_lock_108(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 4968
<   ldv_mutex_lock_mtx_of_percpu_rw_semaphore(ldv_func_arg1);
< #line 4970
<   mutex_lock(ldv_func_arg1);
< #line 4971
<   return;
< }
< }
< #line 4973 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< void ldv_mutex_unlock_109(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 4978
<   ldv_mutex_unlock_mtx_of_percpu_rw_semaphore(ldv_func_arg1);
< #line 4980
<   mutex_unlock(ldv_func_arg1);
< #line 4981
<   return;
< }
< }
< #line 4983 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< void ldv_mutex_lock_110(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 4988
<   ldv_mutex_lock_mtx_of_percpu_rw_semaphore(ldv_func_arg1);
< #line 4990
<   mutex_lock(ldv_func_arg1);
< #line 4991
<   return;
< }
< }
< #line 4993 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< void ldv_mutex_unlock_111(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 4998
<   ldv_mutex_unlock_mtx_of_percpu_rw_semaphore(ldv_func_arg1);
< #line 5000
<   mutex_unlock(ldv_func_arg1);
< #line 5001
<   return;
< }
< }
< #line 5003 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< void ldv_mutex_lock_112(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 5008
<   ldv_mutex_lock_cred_guard_mutex_of_signal_struct(ldv_func_arg1);
< #line 5010
<   mutex_lock(ldv_func_arg1);
< #line 5011
<   return;
< }
< }
< #line 5013 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< void ldv_mutex_unlock_113(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 5018
<   ldv_mutex_unlock_cred_guard_mutex_of_signal_struct(ldv_func_arg1);
< #line 5020
<   mutex_unlock(ldv_func_arg1);
< #line 5021
<   return;
< }
< }
< #line 5023 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< void ldv_mutex_lock_114(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 5028
<   ldv_mutex_lock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 5030
<   mutex_lock(ldv_func_arg1);
< #line 5031
<   return;
< }
< }
< #line 5033 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< void ldv_mutex_unlock_115(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 5038
<   ldv_mutex_unlock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 5040
<   mutex_unlock(ldv_func_arg1);
< #line 5041
<   return;
< }
< }
< #line 5043 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< void ldv_mutex_unlock_116(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 5048
<   ldv_mutex_unlock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 5050
<   mutex_unlock(ldv_func_arg1);
< #line 5051
<   return;
< }
< }
< #line 5053 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< int ldv_mutex_lock_interruptible_117(struct mutex *ldv_func_arg1 ) 
< { 
<   ldv_func_ret_type___13 ldv_func_res ;
<   int tmp ;
<   int tmp___0 ;
< 
<   {
< #line 5058
<   tmp = mutex_lock_interruptible(ldv_func_arg1);
< #line 5058
<   ldv_func_res = tmp;
< #line 5060
<   tmp___0 = ldv_mutex_lock_interruptible_mutex_of_drbd_socket(ldv_func_arg1);
< #line 5060
<   return (tmp___0);
< #line 5062
<   return (ldv_func_res);
< }
< }
< #line 5065 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< void ldv_mutex_unlock_118(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 5070
<   ldv_mutex_unlock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 5072
<   mutex_unlock(ldv_func_arg1);
< #line 5073
<   return;
< }
< }
< #line 5075 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< void ldv_mutex_unlock_119(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 5080
<   ldv_mutex_unlock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 5082
<   mutex_unlock(ldv_func_arg1);
< #line 5083
<   return;
< }
< }
< #line 595 "include/linux/list.h"
< __inline static void hlist_del(struct hlist_node *n ) 
< { 
< 
< 
<   {
< #line 597
<   __hlist_del(n);
< #line 598
<   n->next = 0xdead000000100100UL;
< #line 599
<   n->pprev = 0xdead000000200200UL;
< #line 600
<   return;
< }
< }
< #line 333 "include/linux/lockdep.h"
< extern void lock_acquire(struct lockdep_map * , unsigned int  , int  , int  , int  ,
<                          struct lockdep_map * , unsigned long  ) ;
< #line 337
< extern void lock_release(struct lockdep_map * , int  , unsigned long  ) ;
< #line 573
< extern void lockdep_rcu_suspicious(char const   * , int const    , char const   * ) ;
< #line 171 "include/linux/mutex.h"
< int ldv_mutex_trylock_140(struct mutex *ldv_func_arg1 ) ;
< #line 176
< void ldv_mutex_unlock_138(struct mutex *ldv_func_arg1 ) ;
< #line 180
< void ldv_mutex_unlock_141(struct mutex *ldv_func_arg1 ) ;
< #line 184
< void ldv_mutex_unlock_143(struct mutex *ldv_func_arg1 ) ;
< #line 188
< void ldv_mutex_unlock_145(struct mutex *ldv_func_arg1 ) ;
< #line 192
< void ldv_mutex_unlock_147(struct mutex *ldv_func_arg1 ) ;
< #line 196
< void ldv_mutex_unlock_149(struct mutex *ldv_func_arg1 ) ;
< #line 200
< void ldv_mutex_unlock_150(struct mutex *ldv_func_arg1 ) ;
< #line 10 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
< void ldv_mutex_lock_137(struct mutex *ldv_func_arg1 ) ;
< #line 14
< void ldv_mutex_lock_139(struct mutex *ldv_func_arg1 ) ;
< #line 18
< void ldv_mutex_lock_142(struct mutex *ldv_func_arg1 ) ;
< #line 22
< void ldv_mutex_lock_144(struct mutex *ldv_func_arg1 ) ;
< #line 26
< void ldv_mutex_lock_146(struct mutex *ldv_func_arg1 ) ;
< #line 30
< void ldv_mutex_lock_148(struct mutex *ldv_func_arg1 ) ;
< #line 208 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/thread_info.h"
< __inline static struct thread_info *current_thread_info___1(void) 
< { 
<   struct thread_info *ti ;
<   unsigned long pfo_ret__ ;
< 
<   {
< #line 211
<   switch (8UL) {
<   case 1UL: 
< #line 211
<   __asm__  ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
< #line 211
<   goto ldv_6294;
<   case 2UL: 
< #line 211
<   __asm__  ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
< #line 211
<   goto ldv_6294;
<   case 4UL: 
< #line 211
<   __asm__  ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
< #line 211
<   goto ldv_6294;
<   case 8UL: 
< #line 211
<   __asm__  ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
< #line 211
<   goto ldv_6294;
<   default: 
< #line 211
<   __bad_percpu_size();
<   }
<   ldv_6294: 
< #line 211
<   ti = (struct thread_info *)(pfo_ret__ - 8152UL);
< #line 213
<   return (ti);
< }
< }
< #line 163 "include/linux/rcupdate.h"
< __inline static void __rcu_read_lock(void) 
< { 
<   struct thread_info *tmp ;
< 
<   {
< #line 165
<   tmp = current_thread_info___1();
< #line 165
<   tmp->preempt_count = tmp->preempt_count + 1;
< #line 165
<   __asm__  volatile   ("": : : "memory");
< #line 166
<   return;
< }
< }
< #line 168 "include/linux/rcupdate.h"
< __inline static void __rcu_read_unlock(void) 
< { 
<   struct thread_info *tmp ;
< 
<   {
< #line 170
<   __asm__  volatile   ("": : : "memory");
< #line 170
<   tmp = current_thread_info___1();
< #line 170
<   tmp->preempt_count = tmp->preempt_count + -1;
< #line 170
<   __asm__  volatile   ("": : : "memory");
< #line 171
<   return;
< }
< }
< #line 273
< extern int rcu_is_cpu_idle(void) ;
< #line 287 "include/linux/rcupdate.h"
< __inline static void rcu_lock_acquire(struct lockdep_map *map ) 
< { 
< 
< 
<   {
< #line 289
<   lock_acquire(map, 0U, 0, 2, 1, 0, (unsigned long )((void *)0));
< #line 291
---
> #line 5482
32170,32171c32412,32413
< #line 292 "include/linux/rcupdate.h"
< __inline static void rcu_lock_release(struct lockdep_map *map ) 
---
> #line 307 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/bitops.h"
> __inline static int test_and_change_bit(int nr , unsigned long volatile   *addr ) 
32173c32415
< 
---
>   int oldbit ;
32176,32179c32418,32422
< #line 294
<   lock_release(map, 1, (unsigned long )((void *)0));
< #line 296
<   return;
---
> #line 311
>   __asm__  volatile   (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; btc %2,%1\n\tsbb %0,%0": "=r" (oldbit),
>                        "+m" (*((long volatile   *)addr)): "Ir" (nr): "memory");
> #line 315
>   return (oldbit);
32182,32187c32425,32430
< #line 297
< extern struct lockdep_map rcu_lock_map ;
< #line 300
< extern int debug_lockdep_rcu_enabled(void) ;
< #line 732 "include/linux/rcupdate.h"
< __inline static void rcu_read_lock(void) 
---
> #line 39 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/smp.h"
> extern int cpu_number ;
> #line 173 "include/linux/percpu.h"
> extern void __bad_size_call_parameter(void) ;
> #line 31 "include/linux/kref.h"
> __inline static void kref_init(struct kref *kref ) 
32189,32213d32431
<   bool __warned ;
<   int tmp ;
<   int tmp___0 ;
< 
<   {
< #line 734
<   __rcu_read_lock();
< #line 736
<   rcu_lock_acquire(& rcu_lock_map);
< #line 737
<   tmp = debug_lockdep_rcu_enabled();
< #line 737
<   if (tmp != 0 && ! __warned) {
< #line 737
<     tmp___0 = rcu_is_cpu_idle();
< #line 737
<     if (tmp___0 != 0) {
< #line 737
<       __warned = 1;
< #line 737
<       lockdep_rcu_suspicious("include/linux/rcupdate.h", 738, "rcu_read_lock() used illegally while idle");
<     } else {
< 
<     }
<   } else {
32215,32225d32432
<   }
< #line 740
<   return;
< }
< }
< #line 756 "include/linux/rcupdate.h"
< __inline static void rcu_read_unlock(void) 
< { 
<   bool __warned ;
<   int tmp ;
<   int tmp___0 ;
32228,32250c32435,32437
< #line 758
<   tmp = debug_lockdep_rcu_enabled();
< #line 758
<   if (tmp != 0 && ! __warned) {
< #line 758
<     tmp___0 = rcu_is_cpu_idle();
< #line 758
<     if (tmp___0 != 0) {
< #line 758
<       __warned = 1;
< #line 758
<       lockdep_rcu_suspicious("include/linux/rcupdate.h", 759, "rcu_read_unlock() used illegally while idle");
<     } else {
< 
<     }
<   } else {
< 
<   }
< #line 760
<   rcu_lock_release(& rcu_lock_map);
< #line 762
<   __rcu_read_unlock();
< #line 763
---
> #line 33
>   atomic_set(& kref->refcount, 1);
> #line 34
32254,32257c32441,32442
< #line 39 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/smp.h"
< extern int cpu_number ;
< #line 173 "include/linux/percpu.h"
< extern void __bad_size_call_parameter(void) ;
---
> #line 2145 "include/linux/fs.h"
> extern char const   *bdevname(struct block_device * , char * ) ;
32334,32350c32519,32520
< #line 209 "include/linux/bio.h"
< extern struct bio_pair *bio_split(struct bio * , int  ) ;
< #line 210
< extern void bio_pair_release(struct bio_pair * ) ;
< #line 63 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< bool allow_oos ;
< #line 1261
< void _tl_add_barrier(struct drbd_conf *mdev , struct drbd_tl_epoch *new ) ;
< #line 1535
< mempool_t *drbd_request_mempool ;
< #line 1578
< void drbd_make_request(struct request_queue *q , struct bio *bio ) ;
< #line 1580
< int drbd_merge_bvec(struct request_queue *q , struct bvec_merge_data *bvm , struct bio_vec *bvec ) ;
< #line 1890 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static void __drbd_chk_io_error____1(struct drbd_conf *mdev , enum drbd_force_detach_flags df ,
<                                               char const   *where ) 
---
> #line 282 "include/linux/backing-dev.h"
> __inline static int bdi_read_congested(struct backing_dev_info *bdi ) 
32353,32354d32522
<   union drbd_state __ns ;
<   union drbd_state __ns___0 ;
32357,32380c32525,32541
< #line 1894
<   switch ((mdev->ldev)->dc.on_io_error) {
<   case 0: ;
< #line 1896
<   if ((unsigned int )df == 0U || (unsigned int )df == 1U) {
< #line 1897
<     tmp = ___ratelimit(& drbd_ratelimit_state, "__drbd_chk_io_error_");
< #line 1897
<     if (tmp != 0) {
< #line 1898
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Local IO failed in %s.\n",
<               where);
<     } else {
< 
<     }
< #line 1899
<     if ((int )mdev->state.ldv_39979.disk > 4) {
< #line 1900
<       __ns.i = mdev->state.i;
< #line 1900
<       __ns.ldv_39979.disk = 4U;
< #line 1900
<       _drbd_set_state(mdev, __ns, CS_HARD, 0);
<     } else {
---
> #line 284
>   tmp = bdi_congested(bdi, 8);
> #line 284
>   return (tmp);
> }
> }
> #line 1369 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> mempool_t *drbd_request_mempool ;
> #line 1421
> void __drbd_make_request(struct drbd_conf *mdev , struct bio *bio , unsigned long start_time ) ;
> #line 1422
> void drbd_make_request(struct request_queue *q , struct bio *bio ) ;
> #line 1424
> int drbd_merge_bvec(struct request_queue *q , struct bvec_merge_data *bvm , struct bio_vec *bvec ) ;
> #line 1969 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static void inc_ap_pending(struct drbd_conf *mdev ) 
> { 
32382,32385d32542
<     }
< #line 1901
<     goto ldv_51031;
<   } else {
32387,32396c32544,32557
<   }
<   case 2: ;
<   case 1: 
< #line 1926
<   drbd_set_flag(mdev, WAS_IO_ERROR);
< #line 1927
<   if ((unsigned int )df == 0U) {
< #line 1928
<     drbd_set_flag(mdev, WAS_READ_ERROR);
<   } else {
---
>   {
> #line 1971
>   atomic_inc(& mdev->ap_pending_cnt);
> #line 1972
>   return;
> }
> }
> #line 1981 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static void _dec_ap_pending(struct drbd_conf *mdev , char const   *func ,
>                                      int line ) 
> { 
>   int tmp ;
>   int tmp___0 ;
>   int tmp___1 ;
32398,32402c32559,32565
<   }
< #line 1929
<   if ((unsigned int )df == 3U) {
< #line 1930
<     drbd_set_flag(mdev, FORCE_DETACH);
---
>   {
> #line 1983
>   tmp = atomic_dec_and_test(& mdev->ap_pending_cnt);
> #line 1983
>   if (tmp != 0) {
> #line 1984
>     __wake_up(& mdev->misc_wait, 3U, 1, 0);
32406,32416c32569,32577
< #line 1931
<   if ((int )mdev->state.ldv_39979.disk > 2) {
< #line 1932
<     __ns___0.i = mdev->state.i;
< #line 1932
<     __ns___0.ldv_39979.disk = 2U;
< #line 1932
<     _drbd_set_state(mdev, __ns___0, CS_HARD, 0);
< #line 1933
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Local IO failed in %s. Detaching...\n",
<             where);
---
> #line 1985
>   tmp___1 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
> #line 1985
>   if (tmp___1 < 0) {
> #line 1985
>     tmp___0 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
> #line 1985
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: ap_pending_cnt = %d < 0 !\n",
>             func, line, tmp___0);
32420,32436c32581
< #line 1936
<   goto ldv_51031;
<   }
<   ldv_51031: ;
< #line 1939
<   return;
< }
< }
< #line 2157 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static void inc_ap_pending(struct drbd_conf *mdev ) 
< { 
< 
< 
<   {
< #line 2159
<   atomic_inc(& mdev->ap_pending_cnt);
< #line 2160
---
> #line 1986
32440c32585
< #line 2337 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 2133 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
32442a32588
>   struct net_conf *nc ;
32443a32590,32591
>   struct net_conf *_________p1 ;
>   bool __warned ;
32444a32593
>   int tmp___0 ;
32447,32456c32596,32615
< #line 2339
<   mxb = 1000000;
< #line 2340
<   tmp = get_net_conf(mdev);
< #line 2340
<   if (tmp != 0) {
< #line 2341
<     mxb = (mdev->net_conf)->max_buffers;
< #line 2342
<     put_net_conf(mdev);
---
> #line 2138
>   rcu_read_lock();
> #line 2139
>   _________p1 = *((struct net_conf * volatile  *)(& (mdev->tconn)->net_conf));
> #line 2139
>   tmp = debug_lockdep_rcu_enabled();
> #line 2139
>   if (tmp != 0 && ! __warned) {
> #line 2139
>     tmp___0 = rcu_read_lock_held();
> #line 2139
>     if (tmp___0 == 0 && 1) {
> #line 2139
>       __warned = 1;
> #line 2139
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h",
>                              2139, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
32460c32619,32625
< #line 2344
---
> #line 2139
>   nc = _________p1;
> #line 2140
>   mxb = (unsigned long )nc != (unsigned long )((struct net_conf *)0) ? (int )nc->max_buffers : 1000000;
> #line 2141
>   rcu_read_unlock();
> #line 2143
32464c32629
< #line 2347 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 2146 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
32467c32632
<   union drbd_state s ;
---
>   union drbd_dev_state s ;
32470c32635
< #line 2349
---
> #line 2148
32472,32473c32637,32638
< #line 2354
<   switch ((unsigned int )s.ldv_39979.conn) {
---
> #line 2153
>   switch ((unsigned int )s.ldv_50103.conn) {
32495,32496c32660,32661
< #line 2379
<   goto ldv_51203;
---
> #line 2178
>   goto ldv_51604;
32498,32500c32663,32665
< #line 2383
<   if (mdev->agreed_pro_version <= 95) {
< #line 2384
---
> #line 2182
>   if ((mdev->tconn)->agreed_pro_version <= 95) {
> #line 2183
32505,32506c32670,32671
< #line 2385
<   goto ldv_51203;
---
> #line 2184
>   goto ldv_51604;
32510c32675
< #line 2392
---
> #line 2191
32513,32515c32678,32680
<   ldv_51203: ;
< #line 2395
<   switch ((unsigned int )s.ldv_39979.disk) {
---
>   ldv_51604: ;
> #line 2194
>   switch ((unsigned int )s.ldv_50103.disk) {
32522,32523c32687,32688
< #line 2403
<   goto ldv_51214;
---
> #line 2202
>   goto ldv_51615;
32528c32693
< #line 2411
---
> #line 2210
32531,32532c32696,32697
<   ldv_51214: ;
< #line 2414
---
>   ldv_51615: ;
> #line 2213
32536c32701
< #line 2422 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 2223 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
32548c32713
< #line 2424
---
> #line 2225
32550c32715
< #line 2424
---
> #line 2225
32552,32554c32717,32719
< #line 2426
<   tmp___0 = is_susp(mdev->state);
< #line 2426
---
> #line 2227
>   tmp___0 = drbd_suspended(mdev);
> #line 2227
32556c32721
< #line 2427
---
> #line 2228
32561,32563c32726,32728
< #line 2428
<   tmp___1 = drbd_test_flag(mdev, SUSPEND_IO);
< #line 2428
---
> #line 2229
>   tmp___1 = constant_test_bit(8U, (unsigned long const volatile   *)(& mdev->flags));
> #line 2229
32565c32730
< #line 2429
---
> #line 2230
32570c32735
< #line 2436
---
> #line 2237
32572c32737
< #line 2436
---
> #line 2237
32574c32739
< #line 2437
---
> #line 2238
32579c32744
< #line 2441
---
> #line 2242
32581c32746
< #line 2441
---
> #line 2242
32583c32748
< #line 2442
---
> #line 2243
32588,32590c32753,32755
< #line 2443
<   tmp___4 = drbd_test_flag(mdev, BITMAP_IO);
< #line 2443
---
> #line 2244
>   tmp___4 = constant_test_bit(9U, (unsigned long const volatile   *)(& mdev->flags));
> #line 2244
32592c32757
< #line 2444
---
> #line 2245
32597c32762
< #line 2445
---
> #line 2246
32601,32602c32766,32767
< #line 2448 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static bool inc_ap_bio_cond(struct drbd_conf *mdev , int count ) 
---
> #line 2249 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static bool inc_ap_bio_cond(struct drbd_conf *mdev ) 
32607c32772
< #line 2450
---
> #line 2251
32609,32611c32774,32776
< #line 2452
<   spin_lock_irq(& mdev->req_lock);
< #line 2453
---
> #line 2253
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 2254
32613c32778
< #line 2454
---
> #line 2255
32615,32616c32780,32781
< #line 2455
<     atomic_add(count, & mdev->ap_bio_cnt);
---
> #line 2256
>     atomic_inc(& mdev->ap_bio_cnt);
32620,32622c32785,32787
< #line 2456
<   spin_unlock_irq(& mdev->req_lock);
< #line 2458
---
> #line 2257
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 2259
32626,32627c32791,32792
< #line 2461 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static void inc_ap_bio(struct drbd_conf *mdev , int count ) 
---
> #line 2262 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static void inc_ap_bio(struct drbd_conf *mdev ) 
32635,32637c32800,32802
< #line 2471
<   tmp = inc_ap_bio_cond(mdev, count);
< #line 2471
---
> #line 2272
>   tmp = inc_ap_bio_cond(mdev);
> #line 2272
32639,32640c32804,32805
< #line 2471
<     goto ldv_51235;
---
> #line 2272
>     goto ldv_51635;
32644c32809
< #line 2471
---
> #line 2272
32646c32811
< #line 2471
---
> #line 2272
32648c32813
< #line 2471
---
> #line 2272
32650c32815
< #line 2471
---
> #line 2272
32652c32817
< #line 2471
---
> #line 2272
32654c32819
< #line 2471
---
> #line 2272
32656,32657c32821,32822
<   ldv_51238: 
< #line 2471
---
>   ldv_51638: 
> #line 2272
32659,32661c32824,32826
< #line 2471
<   tmp___1 = inc_ap_bio_cond(mdev, count);
< #line 2471
---
> #line 2272
>   tmp___1 = inc_ap_bio_cond(mdev);
> #line 2272
32663,32664c32828,32829
< #line 2471
<     goto ldv_51237;
---
> #line 2272
>     goto ldv_51637;
32668c32833
< #line 2471
---
> #line 2272
32670,32673c32835,32838
< #line 2471
<   goto ldv_51238;
<   ldv_51237: 
< #line 2471
---
> #line 2272
>   goto ldv_51638;
>   ldv_51637: 
> #line 2272
32675,32676c32840,32841
<   ldv_51235: ;
< #line 2474
---
>   ldv_51635: ;
> #line 2275
32680c32845
< #line 2474 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 2275 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
32691c32856
< #line 2476
---
> #line 2277
32693c32858
< #line 2476
---
> #line 2277
32695c32860
< #line 2477
---
> #line 2278
32697c32862
< #line 2477
---
> #line 2278
32699c32864
< #line 2479
---
> #line 2280
32701c32866
< #line 2479
---
> #line 2280
32704c32869
<             2479);
---
>             2280);
32708c32873
< #line 2481
---
> #line 2282
32710,32712c32875,32877
< #line 2481
<     tmp___2 = drbd_test_flag(mdev, BITMAP_IO);
< #line 2481
---
> #line 2282
>     tmp___2 = constant_test_bit(9U, (unsigned long const volatile   *)(& mdev->flags));
> #line 2282
32714,32716c32879,32881
< #line 2482
<       tmp___1 = drbd_test_and_set_flag(mdev, BITMAP_IO_QUEUED);
< #line 2482
---
> #line 2283
>       tmp___1 = test_and_set_bit(10, (unsigned long volatile   *)(& mdev->flags));
> #line 2283
32718,32719c32883,32884
< #line 2483
<         drbd_queue_work(& mdev->data.work, & mdev->bm_io_work.w);
---
> #line 2284
>         drbd_queue_work(& (mdev->tconn)->sender_work, & mdev->bm_io_work.w);
32729c32894
< #line 2489
---
> #line 2290
32731c32896
< #line 2490
---
> #line 2291
32736c32901
< #line 2491
---
> #line 2292
32740,32797c32905,32912
< #line 232 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"
< __inline static struct hlist_head *ee_hash_slot___0(struct drbd_conf *mdev , sector_t sector ) 
< { 
<   long tmp ;
< 
<   {
< #line 234
<   tmp = __builtin_expect(mdev->ee_hash_s == 0U, 0L);
< #line 234
<   if (tmp != 0L) {
< #line 234
<     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"),
<                          "i" (234), "i" (12UL));
<     ldv_51348: ;
< #line 234
<     goto ldv_51348;
<   } else {
< 
<   }
< #line 235
<   return (mdev->ee_hash + (unsigned long )((unsigned int )(sector >> 8) % mdev->ee_hash_s));
< }
< }
< #line 241 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"
< __inline static struct hlist_head *tl_hash_slot___0(struct drbd_conf *mdev , sector_t sector ) 
< { 
<   long tmp ;
< 
<   {
< #line 243
<   tmp = __builtin_expect(mdev->tl_hash_s == 0U, 0L);
< #line 243
<   if (tmp != 0L) {
< #line 243
<     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"),
<                          "i" (243), "i" (12UL));
<     ldv_51353: ;
< #line 243
<     goto ldv_51353;
<   } else {
< 
<   }
< #line 244
<   return (mdev->tl_hash + (unsigned long )((unsigned int )(sector >> 8) % mdev->tl_hash_s));
< }
< }
< #line 249 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"
< static struct hlist_head *ar_hash_slot___0(struct drbd_conf *mdev , sector_t sector ) 
< { 
< 
< 
<   {
< #line 251
<   return (mdev->app_reads_hash + (unsigned long )((unsigned int )sector % 15U));
< }
< }
< #line 285 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"
< __inline static struct drbd_request *drbd_req_new(struct drbd_conf *mdev , struct bio *bio_src ) 
---
> #line 270 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"
> void drbd_req_destroy(struct kref *kref ) ;
> #line 277
> void request_timer_fn(unsigned long data ) ;
> #line 282
> void drbd_restart_request(struct drbd_request *req ) ;
> #line 286 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"
> __inline static int _req_mod(struct drbd_request *req , enum drbd_req_event what ) 
32799,32801c32914,32916
<   struct drbd_request *req ;
<   void *tmp ;
<   long tmp___0 ;
---
>   struct drbd_conf *mdev ;
>   struct bio_and_error m ;
>   int rv ;
32805,32814c32920
<   tmp = mempool_alloc(drbd_request_mempool, 16U);
< #line 288
<   req = (struct drbd_request *)tmp;
< #line 290
<   tmp___0 = __builtin_expect((unsigned long )req != (unsigned long )((struct drbd_request *)0),
<                              1L);
< #line 290
<   if (tmp___0 != 0L) {
< #line 291
<     drbd_req_make_private_bio(req, bio_src);
---
>   mdev = req->w.ldv_50388.mdev;
32816c32922
<     req->rq_state = (int )bio_src->bi_rw & 1 ? 2048UL : 0UL;
---
>   rv = __req_mod(req, what, & m);
32818c32924
<     req->mdev = mdev;
---
>   if ((unsigned long )m.bio != (unsigned long )((struct bio *)0)) {
32820,32832c32926
<     req->master_bio = bio_src;
< #line 296
<     req->epoch = 0U;
< #line 297
<     req->sector = bio_src->bi_sector;
< #line 298
<     req->size = bio_src->bi_size;
< #line 299
<     INIT_HLIST_NODE(& req->collision);
< #line 300
<     INIT_LIST_HEAD(& req->tl_requests);
< #line 301
<     INIT_LIST_HEAD(& req->w.list);
---
>     complete_master_bio(mdev, & m);
32836,32837c32930,32931
< #line 303
<   return (req);
---
> #line 297
>   return (rv);
32840,32841c32934,32935
< #line 306 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"
< __inline static void drbd_req_free(struct drbd_request *req ) 
---
> #line 322 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"
> __inline static bool drbd_should_do_remote(union drbd_dev_state s ) 
32846,32851d32939
< #line 308
<   mempool_free((void *)req, drbd_request_mempool);
< #line 309
<   return;
< }
< }
32853,32863c32941
< void _req_may_be_done(struct drbd_request *req , struct bio_and_error *m ) ;
< #line 330
< void request_timer_fn(unsigned long data ) ;
< #line 371 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"
< __inline static bool drbd_should_do_remote(union drbd_state s ) 
< { 
< 
< 
<   {
< #line 373
<   return ((bool )(*((unsigned int *)(& s) + 0UL) == 65536U || (((int )s.ldv_39979.pdsk > 3 && (int )s.ldv_39979.conn > 13) && (int )s.ldv_39979.conn <= 21)));
---
>   return ((bool )(*((unsigned int *)(& s) + 0UL) == 65536U || (((int )s.ldv_50103.pdsk > 3 && (int )s.ldv_50103.conn > 13) && (int )s.ldv_50103.conn <= 21)));
32866,32867c32944,32945
< #line 381 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"
< __inline static bool drbd_should_send_oos(union drbd_state s ) 
---
> #line 332 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"
> __inline static bool drbd_should_send_out_of_sync(union drbd_dev_state s ) 
32872c32950
< #line 383
---
> #line 334
32876c32954,32956
< #line 106 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
---
> #line 41 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared"
> static bool drbd_may_do_local_read(struct drbd_conf *mdev , sector_t sector , int size ) ;
> #line 44 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared"
32902c32982
< #line 108
---
> #line 46
32904c32984
< #line 110
---
> #line 48
32906,32908c32986,32988
< #line 110
<   tmp = current_thread_info___1();
< #line 110
---
> #line 48
>   tmp = current_thread_info();
> #line 48
32910c32990
< #line 110
---
> #line 48
32912c32992
< #line 110
---
> #line 48
32914c32994
< #line 110
---
> #line 48
32917c32997
< #line 110
---
> #line 48
32920c33000
< #line 110
---
> #line 48
32922,32923c33002,33003
< #line 110
<   goto ldv_51445;
---
> #line 48
>   goto ldv_51807;
32925c33005
< #line 110
---
> #line 48
32927,32928c33007,33008
< #line 110
<   goto ldv_51445;
---
> #line 48
>   goto ldv_51807;
32930c33010
< #line 110
---
> #line 48
32932,32933c33012,33013
< #line 110
<   goto ldv_51445;
---
> #line 48
>   goto ldv_51807;
32935c33015
< #line 110
---
> #line 48
32937,32938c33017,33018
< #line 110
<   goto ldv_51445;
---
> #line 48
>   goto ldv_51807;
32940c33020
< #line 110
---
> #line 48
32943,32944c33023,33024
<   ldv_51445: 
< #line 110
---
>   ldv_51807: 
> #line 48
32946,32947c33026,33027
< #line 110
<   goto ldv_51451;
---
> #line 48
>   goto ldv_51813;
32949c33029
< #line 110
---
> #line 48
32952c33032
< #line 110
---
> #line 48
32954,32955c33034,33035
< #line 110
<   goto ldv_51455;
---
> #line 48
>   goto ldv_51817;
32957c33037
< #line 110
---
> #line 48
32959,32960c33039,33040
< #line 110
<   goto ldv_51455;
---
> #line 48
>   goto ldv_51817;
32962c33042
< #line 110
---
> #line 48
32964,32965c33044,33045
< #line 110
<   goto ldv_51455;
---
> #line 48
>   goto ldv_51817;
32967c33047
< #line 110
---
> #line 48
32969,32970c33049,33050
< #line 110
<   goto ldv_51455;
---
> #line 48
>   goto ldv_51817;
32972c33052
< #line 110
---
> #line 48
32975,32976c33055,33056
<   ldv_51455: 
< #line 110
---
>   ldv_51817: 
> #line 48
32978,32979c33058,33059
< #line 110
<   goto ldv_51451;
---
> #line 48
>   goto ldv_51813;
32981c33061
< #line 110
---
> #line 48
32984c33064
< #line 110
---
> #line 48
32986,32987c33066,33067
< #line 110
<   goto ldv_51464;
---
> #line 48
>   goto ldv_51826;
32989c33069
< #line 110
---
> #line 48
32991,32992c33071,33072
< #line 110
<   goto ldv_51464;
---
> #line 48
>   goto ldv_51826;
32994c33074
< #line 110
---
> #line 48
32996,32997c33076,33077
< #line 110
<   goto ldv_51464;
---
> #line 48
>   goto ldv_51826;
32999c33079
< #line 110
---
> #line 48
33001,33002c33081,33082
< #line 110
<   goto ldv_51464;
---
> #line 48
>   goto ldv_51826;
33004c33084
< #line 110
---
> #line 48
33007,33008c33087,33088
<   ldv_51464: 
< #line 110
---
>   ldv_51826: 
> #line 48
33010,33011c33090,33091
< #line 110
<   goto ldv_51451;
---
> #line 48
>   goto ldv_51813;
33013c33093
< #line 110
---
> #line 48
33016c33096
< #line 110
---
> #line 48
33018,33019c33098,33099
< #line 110
<   goto ldv_51473;
---
> #line 48
>   goto ldv_51835;
33021c33101
< #line 110
---
> #line 48
33023,33024c33103,33104
< #line 110
<   goto ldv_51473;
---
> #line 48
>   goto ldv_51835;
33026c33106
< #line 110
---
> #line 48
33028,33029c33108,33109
< #line 110
<   goto ldv_51473;
---
> #line 48
>   goto ldv_51835;
33031c33111
< #line 110
---
> #line 48
33033,33034c33113,33114
< #line 110
<   goto ldv_51473;
---
> #line 48
>   goto ldv_51835;
33036c33116
< #line 110
---
> #line 48
33039,33040c33119,33120
<   ldv_51473: 
< #line 110
---
>   ldv_51835: 
> #line 48
33042,33043c33122,33123
< #line 110
<   goto ldv_51451;
---
> #line 48
>   goto ldv_51813;
33045c33125
< #line 110
---
> #line 48
33047,33048c33127,33128
< #line 110
<   goto ldv_51451;
---
> #line 48
>   goto ldv_51813;
33050,33051c33130,33131
<   ldv_51451: 
< #line 110
---
>   ldv_51813: 
> #line 48
33053c33133
< #line 111
---
> #line 49
33055c33135
< #line 112
---
> #line 50
33057c33137
< #line 112
---
> #line 50
33059c33139
< #line 112
---
> #line 50
33061c33141
< #line 112
---
> #line 50
33063c33143
< #line 112
---
> #line 50
33065c33145
< #line 112
---
> #line 50
33067c33147
< #line 112
---
> #line 50
33069c33149
< #line 112
---
> #line 50
33074c33154
< #line 113
---
> #line 51
33076c33156
< #line 113
---
> #line 51
33078c33158
< #line 113
---
> #line 51
33080c33160
< #line 113
---
> #line 51
33082c33162
< #line 113
---
> #line 51
33084c33164
< #line 113
---
> #line 51
33086c33166
< #line 113
---
> #line 51
33088c33168
< #line 113
---
> #line 51
33093c33173
< #line 114
---
> #line 54
33095c33175
< #line 115
---
> #line 55
33097,33099c33177,33179
< #line 115
<   tmp___2 = current_thread_info___1();
< #line 115
---
> #line 55
>   tmp___2 = current_thread_info();
> #line 55
33101c33181
< #line 115
---
> #line 55
33103c33183
< #line 115
---
> #line 55
33105c33185
< #line 116
---
> #line 56
33109c33189
< #line 119 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
---
> #line 59 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared"
33130c33210
< #line 121
---
> #line 61
33132c33212
< #line 122
---
> #line 62
33134c33214
< #line 124
---
> #line 64
33136,33138c33216,33218
< #line 124
<   tmp = current_thread_info___1();
< #line 124
---
> #line 64
>   tmp = current_thread_info();
> #line 64
33140c33220
< #line 124
---
> #line 64
33142c33222
< #line 124
---
> #line 64
33144c33224
< #line 124
---
> #line 64
33147c33227
< #line 124
---
> #line 64
33150c33230
< #line 124
---
> #line 64
33152,33153c33232,33233
< #line 124
<   goto ldv_51511;
---
> #line 64
>   goto ldv_51873;
33155c33235
< #line 124
---
> #line 64
33157,33158c33237,33238
< #line 124
<   goto ldv_51511;
---
> #line 64
>   goto ldv_51873;
33160c33240
< #line 124
---
> #line 64
33162,33163c33242,33243
< #line 124
<   goto ldv_51511;
---
> #line 64
>   goto ldv_51873;
33165c33245
< #line 124
---
> #line 64
33167,33168c33247,33248
< #line 124
<   goto ldv_51511;
---
> #line 64
>   goto ldv_51873;
33170c33250
< #line 124
---
> #line 64
33173,33174c33253,33254
<   ldv_51511: 
< #line 124
---
>   ldv_51873: 
> #line 64
33176,33177c33256,33257
< #line 124
<   goto ldv_51517;
---
> #line 64
>   goto ldv_51879;
33179c33259
< #line 124
---
> #line 64
33182c33262
< #line 124
---
> #line 64
33184,33185c33264,33265
< #line 124
<   goto ldv_51521;
---
> #line 64
>   goto ldv_51883;
33187c33267
< #line 124
---
> #line 64
33189,33190c33269,33270
< #line 124
<   goto ldv_51521;
---
> #line 64
>   goto ldv_51883;
33192c33272
< #line 124
---
> #line 64
33194,33195c33274,33275
< #line 124
<   goto ldv_51521;
---
> #line 64
>   goto ldv_51883;
33197c33277
< #line 124
---
> #line 64
33199,33200c33279,33280
< #line 124
<   goto ldv_51521;
---
> #line 64
>   goto ldv_51883;
33202c33282
< #line 124
---
> #line 64
33205,33206c33285,33286
<   ldv_51521: 
< #line 124
---
>   ldv_51883: 
> #line 64
33208,33209c33288,33289
< #line 124
<   goto ldv_51517;
---
> #line 64
>   goto ldv_51879;
33211c33291
< #line 124
---
> #line 64
33214c33294
< #line 124
---
> #line 64
33216,33217c33296,33297
< #line 124
<   goto ldv_51530;
---
> #line 64
>   goto ldv_51892;
33219c33299
< #line 124
---
> #line 64
33221,33222c33301,33302
< #line 124
<   goto ldv_51530;
---
> #line 64
>   goto ldv_51892;
33224c33304
< #line 124
---
> #line 64
33226,33227c33306,33307
< #line 124
<   goto ldv_51530;
---
> #line 64
>   goto ldv_51892;
33229c33309
< #line 124
---
> #line 64
33231,33232c33311,33312
< #line 124
<   goto ldv_51530;
---
> #line 64
>   goto ldv_51892;
33234c33314
< #line 124
---
> #line 64
33237,33238c33317,33318
<   ldv_51530: 
< #line 124
---
>   ldv_51892: 
> #line 64
33240,33241c33320,33321
< #line 124
<   goto ldv_51517;
---
> #line 64
>   goto ldv_51879;
33243c33323
< #line 124
---
> #line 64
33246c33326
< #line 124
---
> #line 64
33248,33249c33328,33329
< #line 124
<   goto ldv_51539;
---
> #line 64
>   goto ldv_51901;
33251c33331
< #line 124
---
> #line 64
33253,33254c33333,33334
< #line 124
<   goto ldv_51539;
---
> #line 64
>   goto ldv_51901;
33256c33336
< #line 124
---
> #line 64
33258,33259c33338,33339
< #line 124
<   goto ldv_51539;
---
> #line 64
>   goto ldv_51901;
33261c33341
< #line 124
---
> #line 64
33263,33264c33343,33344
< #line 124
<   goto ldv_51539;
---
> #line 64
>   goto ldv_51901;
33266c33346
< #line 124
---
> #line 64
33269,33270c33349,33350
<   ldv_51539: 
< #line 124
---
>   ldv_51901: 
> #line 64
33272,33273c33352,33353
< #line 124
<   goto ldv_51517;
---
> #line 64
>   goto ldv_51879;
33275c33355
< #line 124
---
> #line 64
33277,33278c33357,33358
< #line 124
<   goto ldv_51517;
---
> #line 64
>   goto ldv_51879;
33280,33281c33360,33361
<   ldv_51517: 
< #line 124
---
>   ldv_51879: 
> #line 64
33283c33363
< #line 125
---
> #line 65
33285c33365
< #line 125
---
> #line 65
33287c33367
< #line 125
---
> #line 65
33289c33369
< #line 125
---
> #line 65
33291c33371
< #line 125
---
> #line 65
33293c33373
< #line 125
---
> #line 65
33295c33375
< #line 125
---
> #line 65
33297c33377
< #line 125
---
> #line 65
33302c33382
< #line 126
---
> #line 66
33304c33384
< #line 127
---
> #line 67
33306c33386
< #line 128
---
> #line 68
33308,33310c33388,33390
< #line 128
<   tmp___1 = current_thread_info___1();
< #line 128
---
> #line 68
>   tmp___1 = current_thread_info();
> #line 68
33312c33392
< #line 128
---
> #line 68
33314c33394
< #line 128
---
> #line 68
33316c33396
< #line 129
---
> #line 69
33320,33321c33400,33401
< #line 131 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
< static void _req_is_done(struct drbd_conf *mdev , struct drbd_request *req , int const   rw ) 
---
> #line 71 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared"
> static struct drbd_request *drbd_req_new(struct drbd_conf *mdev , struct bio *bio_src ) 
33323c33403,33456
<   unsigned long s ;
---
>   struct drbd_request *req ;
>   void *tmp ;
> 
>   {
> #line 76
>   tmp = mempool_alloc(drbd_request_mempool, 16U);
> #line 76
>   req = (struct drbd_request *)tmp;
> #line 77
>   if ((unsigned long )req == (unsigned long )((struct drbd_request *)0)) {
> #line 78
>     return (0);
>   } else {
> 
>   }
> #line 80
>   drbd_req_make_private_bio(req, bio_src);
> #line 81
>   req->rq_state = (int )bio_src->bi_rw & 1 ? 2048U : 0U;
> #line 82
>   req->w.ldv_50388.mdev = mdev;
> #line 83
>   req->master_bio = bio_src;
> #line 84
>   req->epoch = 0U;
> #line 86
>   drbd_clear_interval(& req->i);
> #line 87
>   req->i.sector = bio_src->bi_sector;
> #line 88
>   req->i.size = bio_src->bi_size;
> #line 89
>   req->i.local = -1;
> #line 90
>   req->i.waiting = 0;
> #line 92
>   INIT_LIST_HEAD(& req->tl_requests);
> #line 93
>   INIT_LIST_HEAD(& req->w.list);
> #line 96
>   atomic_set(& req->completion_ref, 1);
> #line 98
>   kref_init(& req->kref);
> #line 99
>   return (req);
> }
> }
> #line 102 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared"
> void drbd_req_destroy(struct kref *kref ) 
> { 
>   struct drbd_request *req ;
>   struct kref  const  *__mptr ;
>   struct drbd_conf *mdev ;
>   unsigned int s ;
33325a33459,33460
>   int tmp___1 ;
>   int tmp___2 ;
33328c33463,33469
< #line 133
---
> #line 104
>   __mptr = (struct kref  const  *)kref;
> #line 104
>   req = (struct drbd_request *)__mptr + 0xffffffffffffff74UL;
> #line 105
>   mdev = req->w.ldv_50388.mdev;
> #line 106
33330,33338c33471,33511
< #line 141
<   list_del(& req->tl_requests);
< #line 146
<   if ((int )rw == 1) {
< #line 151
<     if ((s & 256UL) == 0UL || (s & 4UL) == 0UL) {
< #line 152
<       __drbd_set_out_of_sync(mdev, req->sector, (int )req->size, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
<                              152U);
---
> #line 108
>   if ((unsigned long )req->master_bio != (unsigned long )((struct bio *)0) && ((unsigned long )s & 8192UL) == 0UL) {
> #line 112
>     tmp = atomic_read((atomic_t const   *)(& req->completion_ref));
> #line 112
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "drbd_req_destroy: Logic BUG rq_state = 0x%x, completion_ref = %d\n",
>             s, tmp);
> #line 114
>     return;
>   } else {
> #line 108
>     tmp___0 = atomic_read((atomic_t const   *)(& req->completion_ref));
> #line 108
>     if (tmp___0 != 0) {
> #line 112
>       tmp = atomic_read((atomic_t const   *)(& req->completion_ref));
> #line 112
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "drbd_req_destroy: Logic BUG rq_state = 0x%x, completion_ref = %d\n",
>               s, tmp);
> #line 114
>       return;
>     } else
> #line 108
>     if ((int )s & 1) {
> #line 112
>       tmp = atomic_read((atomic_t const   *)(& req->completion_ref));
> #line 112
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "drbd_req_destroy: Logic BUG rq_state = 0x%x, completion_ref = %d\n",
>               s, tmp);
> #line 114
>       return;
>     } else
> #line 108
>     if (((unsigned long )s & 1008UL) != 0UL && ((unsigned long )s & 128UL) == 0UL) {
> #line 112
>       tmp = atomic_read((atomic_t const   *)(& req->completion_ref));
> #line 112
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "drbd_req_destroy: Logic BUG rq_state = 0x%x, completion_ref = %d\n",
>               s, tmp);
> #line 114
>       return;
33342,33346c33515,33537
< #line 154
<     if (((s & 256UL) != 0UL && (s & 4UL) != 0UL) && (s & 512UL) != 0UL) {
< #line 155
<       __drbd_set_in_sync(mdev, req->sector, (int )req->size, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
<                          155U);
---
>   }
> #line 123
>   list_del_init(& req->tl_requests);
> #line 128
>   if (((unsigned long )s & 2048UL) != 0UL) {
> #line 140
>     if (((unsigned long )s & 9215UL) != 8192UL) {
> #line 141
>       if (((unsigned long )s & 256UL) == 0UL || ((unsigned long )s & 4UL) == 0UL) {
> #line 142
>         __drbd_set_out_of_sync(mdev, req->i.sector, (int )req->i.size, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared",
>                                142U);
>       } else {
> 
>       }
> #line 144
>       if ((((unsigned long )s & 256UL) != 0UL && ((unsigned long )s & 4UL) != 0UL) && ((unsigned long )s & 512UL) != 0UL) {
> #line 145
>         __drbd_set_in_sync(mdev, req->i.sector, (int )req->i.size, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared",
>                            145U);
>       } else {
> 
>       }
33350,33363c33541,33549
< #line 167
<     if ((s & 15UL) != 0UL) {
< #line 168
<       tmp___0 = _get_ldev_if_state(mdev, D_FAILED);
< #line 168
<       if (tmp___0 != 0) {
< #line 169
<         if ((s & 4096UL) != 0UL) {
< #line 170
<           drbd_al_complete_io(mdev, req->sector);
<         } else {
< 
<         }
< #line 171
---
> #line 158
>     if (((unsigned long )s & 4096UL) != 0UL) {
> #line 159
>       tmp___2 = _get_ldev_if_state(mdev, D_FAILED);
> #line 159
>       if (tmp___2 != 0) {
> #line 160
>         drbd_al_complete_io(mdev, & req->i);
> #line 161
33366,33372c33552,33558
< #line 172
<         tmp = ___ratelimit(& drbd_ratelimit_state, "_req_is_done");
< #line 172
<         if (tmp != 0) {
< #line 173
<           dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Should have called drbd_al_complete_io(, %llu), but my Disk seems to have failed :(\n",
<                    (unsigned long long )req->sector);
---
> #line 162
>         tmp___1 = ___ratelimit(& drbd_ratelimit_state, "drbd_req_destroy");
> #line 162
>         if (tmp___1 != 0) {
> #line 163
>           dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Should have called drbd_al_complete_io(, %llu, %u), but my Disk seems to have failed :(\n",
>                    (unsigned long long )req->i.sector, req->i.size);
33383,33385c33569,33571
< #line 180
<   drbd_req_free(req);
< #line 181
---
> #line 170
>   mempool_free((void *)req, drbd_request_mempool);
> #line 171
33389,33390c33575,33576
< #line 183 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
< static void queue_barrier(struct drbd_conf *mdev ) 
---
> #line 173 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared"
> static void wake_all_senders(struct drbd_tconn *tconn ) 
33392,33393d33577
<   struct drbd_tl_epoch *b ;
<   int tmp ;
33395,33402d33578
<   {
< #line 192
<   tmp = drbd_test_flag(mdev, CREATE_BARRIER);
< #line 192
<   if (tmp != 0) {
< #line 193
<     return;
<   } else {
33404,33415c33580,33583
<   }
< #line 195
<   b = mdev->newest_tle;
< #line 196
<   b->w.cb = & w_send_barrier;
< #line 201
<   inc_ap_pending(mdev);
< #line 202
<   drbd_queue_work(& mdev->data.work, & b->w);
< #line 203
<   drbd_set_flag(mdev, CREATE_BARRIER);
< #line 204
---
>   {
> #line 174
>   __wake_up(& tconn->sender_work.q_wait, 3U, 1, 0);
> #line 175
33419,33420c33587,33588
< #line 206 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
< static void _about_to_complete_local_write(struct drbd_conf *mdev , struct drbd_request *req ) 
---
> #line 178 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared"
> static void start_new_tl_epoch(struct drbd_tconn *tconn ) 
33422,33504d33589
<   unsigned long s ;
<   struct drbd_request *i ;
<   struct drbd_epoch_entry *e ;
<   struct hlist_node *n ;
<   struct hlist_head *slot ;
<   sector_t sector ;
<   int size ;
<   int tmp ;
<   struct hlist_node  const  *__mptr ;
<   int tmp___0 ;
<   struct hlist_node  const  *__mptr___0 ;
< 
<   {
< #line 209
<   s = req->rq_state;
< #line 221
<   if (((int )mdev->state.ldv_39979.conn > 9 && (s & 64UL) != 0UL) && req->epoch == (mdev->newest_tle)->br_number) {
< #line 224
<     queue_barrier(mdev);
<   } else {
< 
<   }
< #line 229
<   if ((s & 128UL) != 0UL && (unsigned long )mdev->ee_hash != (unsigned long )((struct hlist_head *)0)) {
< #line 230
<     sector = req->sector;
< #line 231
<     size = (int const   )req->size;
< #line 237
<     slot = tl_hash_slot___0(mdev, sector);
< #line 238
<     n = slot->first;
< #line 238
<     goto ldv_51583;
<     ldv_51582: 
< #line 239
<     tmp = overlaps(sector, size, i->sector, (int )i->size);
< #line 239
<     if (tmp != 0) {
< #line 240
<       dev_alert((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "LOGIC BUG: completed: %p %llus +%u; other: %p %llus +%u\n",
<                 req, (unsigned long long )sector, size, i, (unsigned long long )i->sector,
<                 i->size);
<     } else {
< 
<     }
< #line 238
<     n = n->next;
<     ldv_51583: ;
< #line 238
<     if ((unsigned long )n != (unsigned long )((struct hlist_node *)0)) {
< #line 238
<       __mptr = (struct hlist_node  const  *)n;
< #line 238
<       i = (struct drbd_request *)__mptr + 0xffffffffffffffd8UL;
< #line 238
<       if (1 != 0) {
< #line 239
<         goto ldv_51582;
<       } else {
< #line 241
<         goto ldv_51584;
<       }
<     } else {
< 
<     }
<     ldv_51584: 
< #line 261
<     slot = ee_hash_slot___0(mdev, req->sector);
< #line 262
<     n = slot->first;
< #line 262
<     goto ldv_51590;
<     ldv_51589: 
< #line 263
<     tmp___0 = overlaps(sector, size, e->sector, (int )e->size);
< #line 263
<     if (tmp___0 != 0) {
< #line 264
<       __wake_up(& mdev->misc_wait, 3U, 1, 0);
< #line 265
<       goto ldv_51588;
<     } else {
33506,33524d33590
<     }
< #line 262
<     n = n->next;
<     ldv_51590: ;
< #line 262
<     if ((unsigned long )n != (unsigned long )((struct hlist_node *)0)) {
< #line 262
<       __mptr___0 = (struct hlist_node  const  *)n;
< #line 262
<       e = (struct drbd_epoch_entry *)__mptr___0 + 0xffffffffffffffe8UL;
< #line 262
<       if (1 != 0) {
< #line 263
<         goto ldv_51589;
<       } else {
< #line 265
<         goto ldv_51588;
<       }
<     } else {
33526,33527c33592,33596
<     }
<     ldv_51588: ;
---
>   {
> #line 181
>   if (tconn->current_tle_writes == 0U) {
> #line 182
>     return;
33531c33600,33606
< #line 268
---
> #line 184
>   tconn->current_tle_writes = 0U;
> #line 185
>   atomic_inc(& tconn->current_tle_nr);
> #line 186
>   wake_all_senders(tconn);
> #line 187
33535c33610
< #line 272 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
---
> #line 189 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared"
33541c33616
< #line 275
---
> #line 192
33543c33618
< #line 276
---
> #line 193
33545c33620
< #line 277
---
> #line 194
33549,33550c33624,33625
< #line 285 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
< void _req_may_be_done(struct drbd_request *req , struct bio_and_error *m ) 
---
> #line 197 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared"
> static void drbd_remove_request_interval(struct rb_root *root , struct drbd_request *req ) 
33552c33627,33651
<   unsigned long s ;
---
>   struct drbd_conf *mdev ;
>   struct drbd_interval *i ;
> 
>   {
> #line 200
>   mdev = req->w.ldv_50388.mdev;
> #line 201
>   i = & req->i;
> #line 203
>   drbd_remove_interval(root, i);
> #line 206
>   if ((unsigned int )*((unsigned char *)i + 48UL) != 0U) {
> #line 207
>     __wake_up(& mdev->misc_wait, 3U, 1, 0);
>   } else {
> 
>   }
> #line 208
>   return;
> }
> }
> #line 217 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared"
> static void drbd_req_complete(struct drbd_request *req , struct bio_and_error *m ) 
> { 
>   unsigned int s ;
33555d33653
<   int ok ;
33556a33655
>   int ok ;
33558c33657,33661
<   int tmp___0 ;
---
>   struct rb_root *root ;
>   bool tmp___0 ;
>   int tmp___1 ;
>   int tmp___2 ;
>   int tmp___3 ;
33561c33664
< #line 287
---
> #line 219
33563,33569c33666,33673
< #line 288
<   mdev = req->mdev;
< #line 289
<   rw = (req->rq_state & 2048UL) != 0UL;
< #line 300
<   if ((s & 32UL) != 0UL) {
< #line 301
---
> #line 220
>   mdev = req->w.ldv_50388.mdev;
> #line 233
>   if (((((int )s & 1 && ((unsigned long )s & 8UL) == 0UL) || ((unsigned long )s & 32UL) != 0UL) || ((unsigned long )s & 16UL) != 0UL) || ((unsigned long )s & 16384UL) != 0UL) {
> #line 236
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "drbd_req_complete: Logic BUG rq_state = 0x%x\n",
>             s);
> #line 237
33574,33576c33678,33682
< #line 302
<   if ((s & 16UL) != 0UL) {
< #line 303
---
> #line 240
>   if ((unsigned long )req->master_bio == (unsigned long )((struct bio *)0)) {
> #line 241
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "drbd_req_complete: Logic BUG, master_bio == NULL!\n");
> #line 242
33581,33584c33687,33700
< #line 304
<   if ((int )s & 1 && (s & 8UL) == 0UL) {
< #line 305
<     return;
---
> #line 245
>   rw = (int )(req->master_bio)->bi_rw & 8193;
> #line 260
>   ok = ((unsigned long )s & 4UL) != 0UL || ((unsigned long )s & 256UL) != 0UL;
> #line 261
>   tmp = PTR_ERR((void const   *)req->private_bio);
> #line 261
>   error = (int )tmp;
> #line 265
>   tmp___0 = drbd_interval_empty(& req->i);
> #line 265
>   if (tmp___0) {
> #line 265
>     tmp___1 = 0;
33586c33702,33703
< 
---
> #line 265
>     tmp___1 = 1;
33588,33605c33705,33722
< #line 307
<   if ((unsigned long )req->master_bio != (unsigned long )((struct bio *)0)) {
< #line 329
<     ok = (s & 4UL) != 0UL || (s & 256UL) != 0UL;
< #line 330
<     tmp = PTR_ERR((void const   *)req->private_bio);
< #line 330
<     error = (int )tmp;
< #line 334
<     tmp___0 = hlist_unhashed((struct hlist_node  const  *)(& req->collision));
< #line 334
<     if (tmp___0 == 0) {
< #line 335
<       hlist_del(& req->collision);
<     } else
< #line 337
<     if ((s & 880UL) != 0UL) {
< #line 337
---
> #line 265
>   if (tmp___1) {
> #line 268
>     if (rw == 1) {
> #line 269
>       root = & mdev->write_requests;
>     } else {
> #line 271
>       root = & mdev->read_requests;
>     }
> #line 272
>     drbd_remove_request_interval(root, req);
>   } else
> #line 273
>   if (((unsigned long )s & 8192UL) == 0UL) {
> #line 274
>     if (((unsigned long )s & 880UL) != 0UL) {
> #line 274
33607,33608c33724,33725
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
<               337);
---
>               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared",
>               274);
33612,33615c33729,33739
< #line 340
<     if (rw == 1) {
< #line 341
<       _about_to_complete_local_write(mdev, req);
---
>   } else {
> 
>   }
> #line 283
>   if (rw == 1) {
> #line 283
>     tmp___2 = atomic_read((atomic_t const   *)(& (mdev->tconn)->current_tle_nr));
> #line 283
>     if (req->epoch == (unsigned int )tmp___2) {
> #line 285
>       start_new_tl_epoch(mdev->tconn);
33619,33626d33742
< #line 344
<     _drbd_end_io_acct(mdev, req);
< #line 346
<     m->error = ok == 0 ? (error != 0 ? error : -5) : 0;
< #line 347
<     m->bio = req->master_bio;
< #line 348
<     req->master_bio = 0;
33630,33633c33746,33758
< #line 351
<   if ((int )s & 1) {
< #line 352
<     return;
---
> #line 288
>   _drbd_end_io_acct(mdev, req);
> #line 304
>   if (ok == 0 && rw == 0) {
> #line 304
>     tmp___3 = list_empty((struct list_head  const  *)(& req->tl_requests));
> #line 304
>     if (tmp___3 == 0) {
> #line 305
>       req->rq_state = req->rq_state | 8192U;
>     } else {
> 
>     }
33637,33640c33762,33769
< #line 354
<   if ((s & 1008UL) == 0UL || (s & 128UL) != 0UL) {
< #line 359
<     _req_is_done(mdev, req, rw);
---
> #line 307
>   if (((unsigned long )req->rq_state & 8192UL) == 0UL) {
> #line 308
>     m->error = ok == 0 ? (error != 0 ? error : -5) : 0;
> #line 309
>     m->bio = req->master_bio;
> #line 310
>     req->master_bio = 0;
33644c33773
< #line 360
---
> #line 312
33648,33649c33777,33779
< #line 365 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
< static void _req_may_be_done_not_susp(struct drbd_request *req , struct bio_and_error *m ) 
---
> #line 314 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared"
> static int drbd_req_put_completion_ref(struct drbd_request *req , struct bio_and_error *m ,
>                                        int put ) 
33655,33659c33785,33798
< #line 367
<   mdev = req->mdev;
< #line 369
<   tmp = is_susp(mdev->state);
< #line 369
---
> #line 316
>   mdev = req->w.ldv_50388.mdev;
> #line 317
>   if ((unsigned long )m == (unsigned long )((struct bio_and_error *)0) && ((unsigned long )req->rq_state & 8192UL) == 0UL) {
> #line 317
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( m || (req->rq_state & RQ_POSTPONED) ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared",
>             317);
>   } else {
> 
>   }
> #line 319
>   tmp = atomic_sub_and_test(put, & req->completion_ref);
> #line 319
33661,33662c33800,33801
< #line 370
<     _req_may_be_done(req, m);
---
> #line 320
>     return (0);
33666,33667c33805,33817
< #line 371
<   return;
---
> #line 322
>   drbd_req_complete(req, m);
> #line 324
>   if (((unsigned long )req->rq_state & 8192UL) != 0UL) {
> #line 327
>     drbd_restart_request(req);
> #line 328
>     return (0);
>   } else {
> 
>   }
> #line 331
>   return (1);
33670,33671c33820,33822
< #line 396 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
< static int _req_conflicts(struct drbd_request *req ) 
---
> #line 336 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared"
> static void mod_rq_state(struct drbd_request *req , struct bio_and_error *m , int clear ,
>                          int set ) 
33674,33679c33825,33827
<   sector_t sector ;
<   int size ;
<   struct drbd_request *i ;
<   struct drbd_epoch_entry *e ;
<   struct hlist_node *n ;
<   struct hlist_head *slot ;
---
>   unsigned int s ;
>   int c_put ;
>   int k_put ;
33680a33829,33830
>   int at_least ;
>   int refcount ;
33682,33692c33832
<   int _b ;
<   long tmp___1 ;
<   struct task_struct *tmp___2 ;
<   struct task_struct *tmp___3 ;
<   int tmp___4 ;
<   struct hlist_node  const  *__mptr ;
<   long tmp___5 ;
<   struct task_struct *tmp___6 ;
<   struct task_struct *tmp___7 ;
<   int tmp___8 ;
<   struct hlist_node  const  *__mptr___0 ;
---
>   int tmp___1 ;
33695,33708c33835,33848
< #line 398
<   mdev = req->mdev;
< #line 399
<   sector = req->sector;
< #line 400
<   size = (int const   )req->size;
< #line 406
<   tmp = hlist_unhashed((struct hlist_node  const  *)(& req->collision));
< #line 406
<   if (tmp == 0) {
< #line 406
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( hlist_unhashed(&req->collision) ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
<             406);
---
> #line 339
>   mdev = req->w.ldv_50388.mdev;
> #line 340
>   s = req->rq_state;
> #line 341
>   c_put = 0;
> #line 342
>   k_put = 0;
> #line 344
>   tmp = drbd_suspended(mdev);
> #line 344
>   if (tmp != 0 && ((unsigned long )(s | (unsigned int )clear) & 16384UL) == 0UL) {
> #line 345
>     set = set | 16384;
33712,33717c33852,33859
< #line 408
<   tmp___0 = get_net_conf(mdev);
< #line 408
<   if (tmp___0 == 0) {
< #line 409
<     return (0);
---
> #line 349
>   req->rq_state = req->rq_state & (unsigned int )(~ clear);
> #line 350
>   req->rq_state = req->rq_state | (unsigned int )set;
> #line 353
>   if (req->rq_state == s) {
> #line 354
>     return;
33721,33728c33863,33866
< #line 412
<   _b = mdev->tl_hash_s == 0U;
< #line 412
<   if (_b != 0) {
< #line 412
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "_req_conflicts", (char *)"mdev->tl_hash_s == 0", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
<             412);
---
> #line 358
>   if (((unsigned long )s & 1UL) == 0UL && set & 1) {
> #line 359
>     atomic_inc(& req->completion_ref);
33732,33735c33870,33875
< #line 412
<   if (_b != 0) {
< #line 413
<     goto out_no_conflict;
---
> #line 361
>   if (((unsigned long )s & 16UL) == 0UL && ((unsigned long )set & 16UL) != 0UL) {
> #line 362
>     inc_ap_pending(mdev);
> #line 363
>     atomic_inc(& req->completion_ref);
33739,33749c33879,33882
< #line 414
<   tmp___1 = __builtin_expect((unsigned long )mdev->tl_hash == (unsigned long )((struct hlist_head *)0),
<                              0L);
< #line 414
<   if (tmp___1 != 0L) {
< #line 414
<     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"),
<                          "i" (414), "i" (12UL));
<     ldv_51623: ;
< #line 414
<     goto ldv_51623;
---
> #line 366
>   if (((unsigned long )s & 32UL) == 0UL && ((unsigned long )set & 32UL) != 0UL) {
> #line 367
>     atomic_inc(& req->completion_ref);
33753,33773c33886,33889
< #line 417
<   slot = tl_hash_slot___0(mdev, sector);
< #line 418
<   n = slot->first;
< #line 418
<   goto ldv_51629;
<   ldv_51628: 
< #line 419
<   tmp___4 = overlaps(i->sector, (int )i->size, sector, size);
< #line 419
<   if (tmp___4 != 0) {
< #line 420
<     tmp___2 = get_current();
< #line 420
<     tmp___3 = get_current();
< #line 420
<     dev_alert((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "%s[%u] Concurrent local write detected! [DISCARD L] new: %llus +%u; pending: %llus +%u\n",
<               (char *)(& tmp___3->comm), tmp___2->pid, (unsigned long long )sector,
<               size, (unsigned long long )i->sector, i->size);
< #line 426
<     goto out_conflict;
---
> #line 369
>   if (((unsigned long )s & 131072UL) == 0UL && ((unsigned long )set & 131072UL) != 0UL) {
> #line 370
>     kref_get(& req->kref);
33777,33789c33893,33921
< #line 418
<   n = n->next;
<   ldv_51629: ;
< #line 418
<   if ((unsigned long )n != (unsigned long )((struct hlist_node *)0)) {
< #line 418
<     __mptr = (struct hlist_node  const  *)n;
< #line 418
<     i = (struct drbd_request *)__mptr + 0xffffffffffffffd8UL;
< #line 418
<     if (1 != 0) {
< #line 419
<       goto ldv_51628;
---
> #line 372
>   if (((unsigned long )s & 64UL) == 0UL && ((unsigned long )set & 64UL) != 0UL) {
> #line 373
>     atomic_add((int )(req->i.size >> 9), & mdev->ap_in_flight);
>   } else {
> 
>   }
> #line 375
>   if (((unsigned long )s & 16384UL) == 0UL && ((unsigned long )set & 16384UL) != 0UL) {
> #line 376
>     atomic_inc(& req->completion_ref);
>   } else {
> 
>   }
> #line 380
>   if (((unsigned long )s & 16384UL) != 0UL && ((unsigned long )clear & 16384UL) != 0UL) {
> #line 381
>     c_put = c_put + 1;
>   } else {
> 
>   }
> #line 383
>   if (((unsigned long )s & 8UL) == 0UL && ((unsigned long )set & 8UL) != 0UL) {
> #line 384
>     if (((unsigned long )req->rq_state & 1UL) == 0UL) {
> #line 384
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( req->rq_state & RQ_LOCAL_PENDING ) in %s:%d\n",
>               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared",
>               384);
33791,33792c33923
< #line 421
<       goto ldv_51630;
---
> 
33793a33925,33928
> #line 387
>     kref_get(& req->kref);
> #line 388
>     c_put = c_put + 1;
33797,33810c33932,33937
<   ldv_51630: ;
< #line 430
<   if (mdev->ee_hash_s != 0U) {
< #line 432
<     tmp___5 = __builtin_expect((unsigned long )mdev->ee_hash == (unsigned long )((struct hlist_head *)0),
<                                0L);
< #line 432
<     if (tmp___5 != 0L) {
< #line 432
<       __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"),
<                            "i" (432), "i" (12UL));
<       ldv_51631: ;
< #line 432
<       goto ldv_51631;
---
> #line 391
>   if ((int )s & 1 && clear & 1) {
> #line 392
>     if (((unsigned long )req->rq_state & 8UL) != 0UL) {
> #line 393
>       k_put = k_put + 1;
33812c33939,33940
< 
---
> #line 395
>       c_put = c_put + 1;
33814,33834c33942,33966
< #line 435
<     slot = ee_hash_slot___0(mdev, sector);
< #line 436
<     n = slot->first;
< #line 436
<     goto ldv_51636;
<     ldv_51635: 
< #line 437
<     tmp___8 = overlaps(e->sector, (int )e->size, sector, size);
< #line 437
<     if (tmp___8 != 0) {
< #line 438
<       tmp___6 = get_current();
< #line 438
<       tmp___7 = get_current();
< #line 438
<       dev_alert((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "%s[%u] Concurrent remote write detected! [DISCARD L] new: %llus +%u; pending: %llus +%u\n",
<                 (char *)(& tmp___7->comm), tmp___6->pid, (unsigned long long )sector,
<                 size, (unsigned long long )e->sector, e->size);
< #line 444
<       goto out_conflict;
---
>   } else {
> 
>   }
> #line 398
>   if (((unsigned long )s & 16UL) != 0UL && ((unsigned long )clear & 16UL) != 0UL) {
> #line 399
>     _dec_ap_pending(mdev, "mod_rq_state", 399);
> #line 400
>     c_put = c_put + 1;
>   } else {
> 
>   }
> #line 403
>   if (((unsigned long )s & 32UL) != 0UL && ((unsigned long )clear & 32UL) != 0UL) {
> #line 404
>     c_put = c_put + 1;
>   } else {
> 
>   }
> #line 406
>   if ((((unsigned long )s & 131072UL) != 0UL && ((unsigned long )s & 128UL) == 0UL) && ((unsigned long )set & 128UL) != 0UL) {
> #line 407
>     if (((unsigned long )req->rq_state & 64UL) != 0UL) {
> #line 408
>       atomic_sub((int )(req->i.size >> 9), & mdev->ap_in_flight);
33838,33854c33970,33987
< #line 436
<     n = n->next;
<     ldv_51636: ;
< #line 436
<     if ((unsigned long )n != (unsigned long )((struct hlist_node *)0)) {
< #line 436
<       __mptr___0 = (struct hlist_node  const  *)n;
< #line 436
<       e = (struct drbd_epoch_entry *)__mptr___0 + 0xffffffffffffffe8UL;
< #line 436
<       if (1 != 0) {
< #line 437
<         goto ldv_51635;
<       } else {
< #line 439
<         goto ldv_51637;
<       }
---
> #line 409
>     k_put = k_put + 1;
>   } else {
> 
>   }
> #line 414
>   if (k_put != 0 || c_put != 0) {
> #line 417
>     at_least = (c_put != 0) + k_put;
> #line 418
>     tmp___0 = atomic_read((atomic_t const   *)(& req->kref.refcount));
> #line 418
>     refcount = tmp___0;
> #line 419
>     if (refcount < at_least) {
> #line 420
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "mod_rq_state: Logic BUG: %x -> %x: refcount = %d, should be >= %d\n",
>               s, req->rq_state, refcount, at_least);
33858d33990
<     ldv_51637: ;
33862,33871c33994,34045
<   out_no_conflict: 
< #line 453
<   put_net_conf(mdev);
< #line 454
<   return (0);
<   out_conflict: 
< #line 457
<   put_net_conf(mdev);
< #line 458
<   return (1);
---
> #line 426
>   if ((unsigned int )*((unsigned char *)req + 88UL) != 0U) {
> #line 427
>     __wake_up(& mdev->misc_wait, 3U, 1, 0);
>   } else {
> 
>   }
> #line 429
>   if (c_put != 0) {
> #line 430
>     tmp___1 = drbd_req_put_completion_ref(req, m, c_put);
> #line 430
>     k_put = tmp___1 + k_put;
>   } else {
> 
>   }
> #line 431
>   if (k_put != 0) {
> #line 432
>     kref_sub(& req->kref, (unsigned int )k_put, & drbd_req_destroy);
>   } else {
> 
>   }
> #line 433
>   return;
> }
> }
> #line 435 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared"
> static void drbd_report_io_error(struct drbd_conf *mdev , struct drbd_request *req ) 
> { 
>   char b[32U] ;
>   int tmp ;
>   char const   *tmp___0 ;
> 
>   {
> #line 439
>   tmp = ___ratelimit(& drbd_ratelimit_state, "drbd_report_io_error");
> #line 439
>   if (tmp == 0) {
> #line 440
>     return;
>   } else {
> 
>   }
> #line 442
>   tmp___0 = bdevname((mdev->ldev)->backing_bdev, (char *)(& b));
> #line 442
>   dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "local %s IO error sector %llu+%u on %s\n",
>            ((unsigned long )req->rq_state & 2048UL) != 0UL ? (char *)"WRITE" : (char *)"READ",
>            (unsigned long long )req->i.sector, req->i.size >> 9, tmp___0);
> #line 447
>   return;
33874c34048
< #line 473 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
---
> #line 461 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared"
33877a34052,34053
>   struct net_conf *nc ;
>   int p ;
33879,33881c34055,34059
<   struct hlist_head *tmp ;
<   struct hlist_head *tmp___0 ;
<   int tmp___1 ;
---
>   struct net_conf *_________p1 ;
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
>   bool tmp___1 ;
33883c34061
<   int tmp___3 ;
---
>   bool tmp___3 ;
33884a34063,34064
>   struct net_conf *_________p1___0 ;
>   bool __warned___0 ;
33887,33896d34066
<   int tmp___7 ;
<   int tmp___8 ;
<   int tmp___9 ;
<   int tmp___10 ;
<   int tmp___11 ;
<   int tmp___12 ;
<   int tmp___13 ;
<   int tmp___14 ;
<   int tmp___15 ;
<   int tmp___16 ;
33899,33901c34069,34071
< #line 476
<   mdev = req->mdev;
< #line 477
---
> #line 464
>   mdev = req->w.ldv_50388.mdev;
> #line 466
33903,33905c34073,34080
< #line 478
<   m->bio = 0;
< #line 480
---
> #line 468
>   if ((unsigned long )m != (unsigned long )((struct bio_and_error *)0)) {
> #line 469
>     m->bio = 0;
>   } else {
> 
>   }
> #line 471
33908c34083
< #line 482
---
> #line 473
33910,33913c34085,34088
<           (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
<           482);
< #line 483
<   goto ldv_51646;
---
>           (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared",
>           473);
> #line 474
>   goto ldv_51994;
33915,33917c34090,34092
< #line 494
<   if ((req->rq_state & 1008UL) != 0UL) {
< #line 494
---
> #line 485
>   if (((unsigned long )req->rq_state & 1008UL) != 0UL) {
> #line 485
33919,33920c34094,34095
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
<             494);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared",
>             485);
33924,33929c34099,34133
< #line 495
<   req->rq_state = req->rq_state | 16UL;
< #line 496
<   inc_ap_pending(mdev);
< #line 497
<   goto ldv_51646;
---
> #line 486
>   rcu_read_lock();
> #line 487
>   _________p1 = *((struct net_conf * volatile  *)(& (mdev->tconn)->net_conf));
> #line 487
>   tmp = debug_lockdep_rcu_enabled();
> #line 487
>   if (tmp != 0 && ! __warned) {
> #line 487
>     tmp___0 = rcu_read_lock_held();
> #line 487
>     if (tmp___0 == 0 && 1) {
> #line 487
>       __warned = 1;
> #line 487
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared",
>                              487, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 487
>   nc = _________p1;
> #line 488
>   p = (int )nc->wire_protocol;
> #line 489
>   rcu_read_unlock();
> #line 490
>   req->rq_state = req->rq_state | (p != 3 ? (p == 2 ? 32768U : 0U) : 65536U);
> #line 493
>   mod_rq_state(req, m, 0, 16);
> #line 494
>   goto ldv_51994;
33931,33933c34135,34137
< #line 501
<   if ((req->rq_state & 15UL) != 0UL) {
< #line 501
---
> #line 498
>   if (((unsigned long )req->rq_state & 15UL) != 0UL) {
> #line 498
33935,33936c34139,34140
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
<             501);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared",
>             498);
33940,33941c34144,34148
< #line 502
<   req->rq_state = req->rq_state | 1UL;
---
> #line 499
>   mod_rq_state(req, m, 0, 1);
> #line 500
>   goto ldv_51994;
>   case 24U: ;
33943,33948c34150,34152
<   goto ldv_51646;
<   case 23U: ;
< #line 506
<   if ((req->rq_state & 2048UL) != 0UL) {
< #line 507
<     mdev->writ_cnt = mdev->writ_cnt + (req->size >> 9);
---
>   if (((unsigned long )req->rq_state & 2048UL) != 0UL) {
> #line 504
>     mdev->writ_cnt = mdev->writ_cnt + (req->i.size >> 9);
33950,33951c34154,34155
< #line 509
<     mdev->read_cnt = mdev->read_cnt + (req->size >> 9);
---
> #line 506
>     mdev->read_cnt = mdev->read_cnt + (req->i.size >> 9);
33953,33956c34157,34163
< #line 511
<   req->rq_state = req->rq_state | 6UL;
< #line 512
<   req->rq_state = req->rq_state & 0xfffffffffffffffeUL;
---
> #line 508
>   mod_rq_state(req, m, 1, 6);
> #line 510
>   goto ldv_51994;
>   case 23U: 
> #line 513
>   mod_rq_state(req, m, 0, 8);
33958,33960c34165
<   _req_may_be_done_not_susp(req, m);
< #line 515
<   goto ldv_51646;
---
>   goto ldv_51994;
33961a34167,34168
> #line 517
>   drbd_report_io_error(mdev, req);
33963c34170
<   req->rq_state = req->rq_state | 8UL;
---
>   __drbd_chk_io_error_(mdev, DRBD_WRITE_ERROR, "__req_mod");
33965c34172
<   if ((req->rq_state & 2048UL) != 0UL) {
---
>   mod_rq_state(req, m, 1, 2);
33967,33971c34174,34175
<     _req_may_be_done_not_susp(req, m);
<   } else {
< #line 522
<     goto goto_queue_for_net_read;
<   }
---
>   goto ldv_51994;
>   case 20U: 
33973c34177,34182
<   goto ldv_51646;
---
>   __drbd_set_out_of_sync(mdev, req->i.sector, (int )req->i.size, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared",
>                          523U);
> #line 524
>   drbd_report_io_error(mdev, req);
> #line 525
>   __drbd_chk_io_error_(mdev, DRBD_READ_ERROR, "__req_mod");
33975,33978d34183
< #line 526
<   req->rq_state = req->rq_state | 2UL;
< #line 527
<   req->rq_state = req->rq_state & 0xfffffffffffffffeUL;
33980c34185
<   __drbd_chk_io_error____1(mdev, DRBD_WRITE_ERROR, "__req_mod");
---
>   mod_rq_state(req, m, 1, 2);
33982,33997c34187,34200
<   _req_may_be_done_not_susp(req, m);
< #line 531
<   goto ldv_51646;
<   case 20U: 
< #line 535
<   req->rq_state = req->rq_state | 2UL;
< #line 536
<   req->rq_state = req->rq_state & 0xfffffffffffffffeUL;
< #line 537
<   _req_may_be_done_not_susp(req, m);
< #line 538
<   goto ldv_51646;
<   case 19U: 
< #line 541
<   __drbd_set_out_of_sync(mdev, req->sector, (int )req->size, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
<                          541U);
---
>   goto ldv_51994;
>   case 4U: 
> #line 543
>   tmp___1 = drbd_interval_empty(& req->i);
> #line 543
>   if (tmp___1) {
> #line 543
>     tmp___2 = 0;
>   } else {
> #line 543
>     tmp___2 = 1;
>   }
> #line 543
>   if (tmp___2) {
33999c34202,34207
<   req->rq_state = req->rq_state | 2UL;
---
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( drbd_interval_empty(&req->i) ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared",
>             543);
>   } else {
> 
>   }
34001c34209
<   req->rq_state = req->rq_state & 0xfffffffffffffffeUL;
---
>   drbd_insert_interval(& mdev->read_requests, & req->i);
34003,34005c34211,34213
<   if ((req->rq_state & 8UL) != 0UL) {
< #line 547
<     _req_may_be_done(req, m);
---
>   set_bit(0U, (unsigned long volatile   *)(& mdev->flags));
> #line 548
>   if (((unsigned long )req->rq_state & 16UL) == 0UL) {
34007c34215,34217
<     goto ldv_51646;
---
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( req->rq_state & RQ_NET_PENDING ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared",
>             548);
34011,34019c34221,34226
< #line 551
<   __drbd_chk_io_error____1(mdev, DRBD_READ_ERROR, "__req_mod");
<   goto_queue_for_net_read: ;
< #line 555
<   if ((req->rq_state & 1008UL) != 0UL) {
< #line 555
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( !(req->rq_state & RQ_NET_MASK) ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
<             555);
---
> #line 549
>   if (((unsigned long )req->rq_state & 15UL) != 0UL) {
> #line 549
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( (req->rq_state & RQ_LOCAL_MASK) == 0 ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared",
>             549);
34023,34026c34230,34245
< #line 559
<   if (*((unsigned int *)mdev + 569UL) != 65536U) {
< #line 560
<     _req_may_be_done_not_susp(req, m);
---
> #line 550
>   mod_rq_state(req, m, 0, 32);
> #line 551
>   req->w.cb = & w_send_read_req;
> #line 552
>   drbd_queue_work(& (mdev->tconn)->sender_work, & req->w);
> #line 553
>   goto ldv_51994;
>   case 3U: 
> #line 561
>   tmp___3 = drbd_interval_empty(& req->i);
> #line 561
>   if (tmp___3) {
> #line 561
>     tmp___4 = 0;
>   } else {
34028c34247,34254
<     goto ldv_51646;
---
>     tmp___4 = 1;
>   }
> #line 561
>   if (tmp___4) {
> #line 561
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( drbd_interval_empty(&req->i) ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared",
>             561);
34032,34040c34258,34259
< #line 565
<   req->rq_state = req->rq_state | 16UL;
< #line 566
<   inc_ap_pending(mdev);
<   case 4U: 
< #line 579
<   tmp = ar_hash_slot___0(mdev, req->sector);
< #line 579
<   hlist_add_head(& req->collision, tmp);
---
> #line 562
>   drbd_insert_interval(& mdev->write_requests, & req->i);
34042,34045c34261,34264
<   drbd_set_flag(mdev, UNPLUG_REMOTE);
< #line 583
<   if ((req->rq_state & 16UL) == 0UL) {
< #line 583
---
>   set_bit(0U, (unsigned long volatile   *)(& mdev->flags));
> #line 584
>   if (((unsigned long )req->rq_state & 16UL) == 0UL) {
> #line 584
34047,34048c34266,34267
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
<             583);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared",
>             584);
34052,34053d34270
< #line 584
<   req->rq_state = req->rq_state | 32UL;
34055,34075c34272,34294
<   req->w.cb = (req->rq_state & 15UL) != 0UL ? & w_read_retry_remote : & w_send_read_req;
< #line 588
<   drbd_queue_work(& mdev->data.work, & req->w);
< #line 589
<   goto ldv_51646;
<   case 3U: 
< #line 595
<   tmp___0 = tl_hash_slot___0(mdev, req->sector);
< #line 595
<   hlist_add_head(& req->collision, tmp___0);
< #line 615
<   drbd_set_flag(mdev, UNPLUG_REMOTE);
< #line 619
<   tmp___1 = drbd_test_flag(mdev, CREATE_BARRIER);
< #line 619
<   if (tmp___1 != 0) {
< #line 619
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( drbd_test_flag(mdev, CREATE_BARRIER) == 0 ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
<             619);
<   } else {
---
>   mod_rq_state(req, m, 0, 131104);
> #line 586
>   req->w.cb = & w_send_dblock;
> #line 587
>   drbd_queue_work(& (mdev->tconn)->sender_work, & req->w);
> #line 590
>   rcu_read_lock();
> #line 591
>   _________p1___0 = *((struct net_conf * volatile  *)(& (mdev->tconn)->net_conf));
> #line 591
>   tmp___5 = debug_lockdep_rcu_enabled();
> #line 591
>   if (tmp___5 != 0 && ! __warned___0) {
> #line 591
>     tmp___6 = rcu_read_lock_held();
> #line 591
>     if (tmp___6 == 0 && 1) {
> #line 591
>       __warned___0 = 1;
> #line 591
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared",
>                              591, "suspicious rcu_dereference_check() usage");
>     } else {
34077,34087c34296
<   }
< #line 621
<   req->epoch = (mdev->newest_tle)->br_number;
< #line 624
<   (mdev->newest_tle)->n_writes = (mdev->newest_tle)->n_writes + 1;
< #line 627
<   if ((req->rq_state & 16UL) == 0UL) {
< #line 627
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( req->rq_state & RQ_NET_PENDING ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
<             627);
---
>     }
34091,34100c34300,34309
< #line 628
<   req->rq_state = req->rq_state | 32UL;
< #line 629
<   req->w.cb = & w_send_dblock;
< #line 630
<   drbd_queue_work(& mdev->data.work, & req->w);
< #line 633
<   if ((mdev->newest_tle)->n_writes >= (mdev->net_conf)->max_epoch_size) {
< #line 634
<     queue_barrier(mdev);
---
> #line 591
>   nc = _________p1___0;
> #line 592
>   p = (int )nc->max_epoch_size;
> #line 593
>   rcu_read_unlock();
> #line 594
>   if ((mdev->tconn)->current_tle_writes >= (unsigned int )p) {
> #line 595
>     start_new_tl_epoch(mdev->tconn);
34104,34105c34313,34314
< #line 636
<   goto ldv_51646;
---
> #line 597
>   goto ldv_51994;
34107,34114c34316,34323
< #line 639
<   req->rq_state = req->rq_state | 32UL;
< #line 640
<   req->w.cb = & w_send_oos;
< #line 641
<   drbd_queue_work(& mdev->data.work, & req->w);
< #line 642
<   goto ldv_51646;
---
> #line 600
>   mod_rq_state(req, m, 0, 32);
> #line 601
>   req->w.cb = & w_send_out_of_sync;
> #line 602
>   drbd_queue_work(& (mdev->tconn)->sender_work, & req->w);
> #line 603
>   goto ldv_51994;
34118,34123c34327,34330
< #line 649
<   req->rq_state = req->rq_state & 0xffffffffffffffdfUL;
< #line 652
<   _req_may_be_done_not_susp(req, m);
< #line 653
<   goto ldv_51646;
---
> #line 610
>   mod_rq_state(req, m, 32, 0);
> #line 611
>   goto ldv_51994;
34125,34160c34332,34337
< #line 657
<   if ((int )(req->master_bio)->bi_rw & 1) {
< #line 658
<     atomic_add((int )(req->size >> 9), & mdev->ap_in_flight);
<   } else {
< 
<   }
< #line 660
<   if ((int )(req->master_bio)->bi_rw & 1 && (mdev->net_conf)->wire_protocol == 1) {
< #line 664
<     if ((req->rq_state & 16UL) != 0UL) {
< #line 665
<       tmp___2 = atomic_dec_and_test(& mdev->ap_pending_cnt);
< #line 665
<       if (tmp___2 != 0) {
< #line 665
<         __wake_up(& mdev->misc_wait, 3U, 1, 0);
<       } else {
< 
<       }
< #line 665
<       tmp___4 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
< #line 665
<       if (tmp___4 < 0) {
< #line 665
<         tmp___3 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
< #line 665
<         dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: ap_pending_cnt = %d < 0 !\n",
<                 "__req_mod", 665, tmp___3);
<       } else {
< 
<       }
< #line 666
<       req->rq_state = req->rq_state & 0xffffffffffffffefUL;
< #line 667
<       req->rq_state = req->rq_state | 256UL;
---
> #line 615
>   if ((int )(req->master_bio)->bi_rw & 1 && ((unsigned long )req->rq_state & 98304UL) == 0UL) {
> #line 619
>     if (((unsigned long )req->rq_state & 16UL) != 0UL) {
> #line 620
>       mod_rq_state(req, m, 16, 256);
34167,34174c34344,34347
< #line 673
<   req->rq_state = req->rq_state & 0xffffffffffffffdfUL;
< #line 674
<   req->rq_state = req->rq_state | 64UL;
< #line 675
<   _req_may_be_done_not_susp(req, m);
< #line 676
<   goto ldv_51646;
---
> #line 626
>   mod_rq_state(req, m, 32, 64);
> #line 627
>   goto ldv_51994;
34176,34218c34349,34364
< #line 681
<   req->rq_state = req->rq_state & 0xffffffffffffffdfUL;
< #line 682
<   req->rq_state = req->rq_state | 128UL;
< #line 683
<   _req_may_be_done_not_susp(req, m);
< #line 684
<   goto ldv_51646;
<   case 10U: ;
< #line 689
<   if ((req->rq_state & 16UL) != 0UL) {
< #line 690
<     tmp___5 = atomic_dec_and_test(& mdev->ap_pending_cnt);
< #line 690
<     if (tmp___5 != 0) {
< #line 690
<       __wake_up(& mdev->misc_wait, 3U, 1, 0);
<     } else {
< 
<     }
< #line 690
<     tmp___7 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
< #line 690
<     if (tmp___7 < 0) {
< #line 690
<       tmp___6 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
< #line 690
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: ap_pending_cnt = %d < 0 !\n",
<               "__req_mod", 690, tmp___6);
<     } else {
< 
<     }
<   } else {
< 
<   }
< #line 691
<   req->rq_state = req->rq_state & 0xfffffffffffffeefUL;
< #line 692
<   req->rq_state = req->rq_state | 128UL;
< #line 693
<   if ((req->rq_state & 64UL) != 0UL && (req->rq_state & 2048UL) != 0UL) {
< #line 694
<     atomic_sub((int )(req->size >> 9), & mdev->ap_in_flight);
---
> #line 632
>   mod_rq_state(req, m, 32, 128);
> #line 633
>   goto ldv_51994;
>   case 10U: 
> #line 637
>   mod_rq_state(req, m, 16656, 128);
> #line 640
>   goto ldv_51994;
>   case 15U: ;
> #line 650
>   if (((unsigned long )req->rq_state & 16UL) == 0UL) {
> #line 650
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( req->rq_state & RQ_NET_PENDING ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared",
>             650);
34222,34225c34368,34373
< #line 698
<   if ((req->rq_state & 32UL) == 0UL) {
< #line 699
<     _req_may_be_done(req, m);
---
> #line 651
>   if (((unsigned long )req->rq_state & 65536UL) == 0UL) {
> #line 651
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( req->rq_state & RQ_EXP_WRITE_ACK ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared",
>             651);
34229,34236c34377,34390
< #line 700
<   goto ldv_51646;
<   case 15U: ;
< #line 706
<   if ((unsigned int )what == 15U) {
< #line 707
<     dev_alert((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Got DiscardAck packet %llus +%u! DRBD is not a random data generator!\n",
<               (unsigned long long )req->sector, req->size);
---
> #line 652
>   mod_rq_state(req, m, 16, 384);
> #line 653
>   goto ldv_51994;
>   case 14U: 
> #line 656
>   req->rq_state = req->rq_state | 512U;
>   case 13U: ;
> #line 658
>   if (((unsigned long )req->rq_state & 65536UL) == 0UL) {
> #line 658
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( req->rq_state & RQ_EXP_WRITE_ACK ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared",
>             658);
34240,34247c34394,34402
< #line 710
<   req->rq_state = req->rq_state | 128UL;
<   case 14U: ;
<   case 13U: ;
< #line 714
<   if ((unsigned int )what == 14U) {
< #line 715
<     req->rq_state = req->rq_state | 512UL;
---
> #line 664
>   goto ack_common;
>   case 12U: ;
> #line 666
>   if (((unsigned long )req->rq_state & 32768UL) == 0UL) {
> #line 666
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( req->rq_state & RQ_EXP_RECEIVE_ACK ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared",
>             666);
34251,34256c34406,34409
<   case 12U: 
< #line 725
<   req->rq_state = req->rq_state | 256UL;
< #line 726
<   if ((req->rq_state & 16UL) == 0UL) {
< #line 726
---
>   ack_common: ;
> #line 671
>   if (((unsigned long )req->rq_state & 16UL) == 0UL) {
> #line 671
34258,34259c34411,34412
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
<             726);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared",
>             671);
34263,34268c34416,34426
< #line 727
<   tmp___8 = atomic_dec_and_test(& mdev->ap_pending_cnt);
< #line 727
<   if (tmp___8 != 0) {
< #line 727
<     __wake_up(& mdev->misc_wait, 3U, 1, 0);
---
> #line 672
>   mod_rq_state(req, m, 16, 256);
> #line 673
>   goto ldv_51994;
>   case 16U: ;
> #line 676
>   if (((unsigned long )req->rq_state & 65536UL) == 0UL) {
> #line 676
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( req->rq_state & RQ_EXP_WRITE_ACK ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared",
>             676);
34272,34280c34430,34435
< #line 727
<   tmp___10 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
< #line 727
<   if (tmp___10 < 0) {
< #line 727
<     tmp___9 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
< #line 727
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: ap_pending_cnt = %d < 0 !\n",
<             "__req_mod", 727, tmp___9);
---
> #line 681
>   if (((unsigned long )req->rq_state & 16UL) == 0UL) {
> #line 681
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( req->rq_state & RQ_NET_PENDING ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared",
>             681);
34284,34317c34439,34444
< #line 728
<   atomic_sub((int )(req->size >> 9), & mdev->ap_in_flight);
< #line 729
<   req->rq_state = req->rq_state & 0xffffffffffffffefUL;
< #line 730
<   _req_may_be_done_not_susp(req, m);
< #line 731
<   goto ldv_51646;
<   case 16U: ;
< #line 735
<   if ((req->rq_state & 16UL) != 0UL) {
< #line 736
<     tmp___11 = atomic_dec_and_test(& mdev->ap_pending_cnt);
< #line 736
<     if (tmp___11 != 0) {
< #line 736
<       __wake_up(& mdev->misc_wait, 3U, 1, 0);
<     } else {
< 
<     }
< #line 736
<     tmp___13 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
< #line 736
<     if (tmp___13 < 0) {
< #line 736
<       tmp___12 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
< #line 736
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: ap_pending_cnt = %d < 0 !\n",
<               "__req_mod", 736, tmp___12);
<     } else {
< 
<     }
< #line 737
<     atomic_sub((int )(req->size >> 9), & mdev->ap_in_flight);
---
> #line 682
>   req->rq_state = req->rq_state | 8192U;
> #line 683
>   if ((unsigned int )*((unsigned char *)req + 88UL) != 0U) {
> #line 684
>     __wake_up(& mdev->misc_wait, 3U, 1, 0);
34321,34333c34448,34459
< #line 739
<   req->rq_state = req->rq_state & 0xfffffffffffffeefUL;
< #line 741
<   req->rq_state = req->rq_state | 128UL;
< #line 742
<   _req_may_be_done_not_susp(req, m);
< #line 744
<   goto ldv_51646;
<   case 25U: ;
< #line 747
<   if ((req->rq_state & 2UL) == 0UL) {
< #line 748
<     goto ldv_51646;
---
> #line 688
>   goto ldv_51994;
>   case 17U: 
> #line 691
>   mod_rq_state(req, m, 272, 0);
> #line 692
>   goto ldv_51994;
>   case 26U: ;
> #line 695
>   if (((unsigned long )req->rq_state & 2UL) == 0UL) {
> #line 696
>     goto ldv_51994;
34337,34345c34463,34471
< #line 750
<   _req_may_be_done(req, m);
< #line 751
<   goto ldv_51646;
<   case 26U: ;
< #line 754
<   if ((req->rq_state & 2UL) == 0UL) {
< #line 755
<     goto ldv_51646;
---
> #line 697
>   mod_rq_state(req, m, 16384, 0);
> #line 698
>   goto ldv_51994;
>   case 27U: ;
> #line 701
>   if (((unsigned long )req->rq_state & 2UL) == 0UL) {
> #line 702
>     goto ldv_51994;
34349,34351c34475,34477
< #line 757
<   req->rq_state = req->rq_state & 0xfffffffffffffffdUL;
< #line 759
---
> #line 704
>   mod_rq_state(req, m, 16386, 1);
> #line 708
34353c34479
< #line 760
---
> #line 709
34355c34481
< #line 761
---
> #line 710
34360c34486
< #line 763
---
> #line 712
34362c34488
< #line 764
---
> #line 713
34364,34376c34490,34501
< #line 765
<   drbd_queue_work(& mdev->data.work, & req->w);
< #line 766
<   goto ldv_51646;
<   case 24U: ;
< #line 770
<   if ((req->rq_state & 2048UL) == 0UL && (unsigned long )req->w.cb == (unsigned long )((int (*)(struct drbd_conf * ,
<                                                                                                 struct drbd_work * ,
<                                                                                                 int  ))0)) {
< #line 771
<     _req_may_be_done(req, m);
< #line 772
<     goto ldv_51646;
---
> #line 714
>   drbd_queue_work(& (mdev->tconn)->sender_work, & req->w);
> #line 715
>   goto ldv_51994;
>   case 25U: ;
> #line 719
>   if (((unsigned long )req->rq_state & 2048UL) == 0UL && (unsigned long )req->w.cb == (unsigned long )((int (*)(struct drbd_work * ,
>                                                                                                                 int  ))0)) {
> #line 720
>     mod_rq_state(req, m, 16384, 0);
> #line 721
>     goto ldv_51994;
34380,34384c34505,34510
< #line 779
<   if ((req->rq_state & 256UL) == 0UL) {
< #line 780
<     if ((unsigned long )req->w.cb != (unsigned long )((int (*)(struct drbd_conf * ,
<                                                                struct drbd_work * ,
---
> #line 729
>   if (((unsigned long )req->rq_state & 256UL) == 0UL) {
> #line 733
>     mod_rq_state(req, m, 16384, 48);
> #line 734
>     if ((unsigned long )req->w.cb != (unsigned long )((int (*)(struct drbd_work * ,
34386,34422c34512,34515
< #line 781
<       drbd_queue_work(& mdev->data.work, & req->w);
< #line 782
<       rv = (req->rq_state & 2048UL) != 0UL ? 1 : 2;
<     } else {
< 
<     }
< #line 784
<     goto ldv_51646;
<   } else {
< 
<   }
<   case 17U: ;
< #line 789
<   if ((req->rq_state & 2048UL) == 0UL) {
< #line 790
<     goto ldv_51646;
<   } else {
< 
<   }
< #line 792
<   if ((req->rq_state & 16UL) != 0UL) {
< #line 796
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "FIXME (barrier_acked but pending)\n");
< #line 797
<     list_move(& req->tl_requests, & mdev->out_of_sequence_requests);
<   } else {
< 
<   }
< #line 799
<   if ((req->rq_state & 1008UL) != 0UL) {
< #line 800
<     req->rq_state = req->rq_state | 128UL;
< #line 801
<     if ((mdev->net_conf)->wire_protocol == 1) {
< #line 802
<       atomic_sub((int )(req->size >> 9), & mdev->ap_in_flight);
---
> #line 735
>       drbd_queue_work(& (mdev->tconn)->sender_work, & req->w);
> #line 736
>       rv = ((unsigned long )req->rq_state & 2048UL) != 0UL ? 1 : 2;
34425a34519,34520
> #line 738
>     goto ldv_51994;
34429,34432d34523
< #line 804
<   _req_may_be_done(req, m);
< #line 805
<   goto ldv_51646;
34434,34439c34525,34528
< #line 808
<   if ((req->rq_state & 16UL) == 0UL) {
< #line 808
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( req->rq_state & RQ_NET_PENDING ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
<             808);
---
> #line 744
>   if (((unsigned long )req->rq_state & 2048UL) == 0UL) {
> #line 745
>     goto ldv_51994;
34443,34448c34532,34535
< #line 809
<   tmp___14 = atomic_dec_and_test(& mdev->ap_pending_cnt);
< #line 809
<   if (tmp___14 != 0) {
< #line 809
<     __wake_up(& mdev->misc_wait, 3U, 1, 0);
---
> #line 747
>   if (((unsigned long )req->rq_state & 16UL) != 0UL) {
> #line 751
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "FIXME (BARRIER_ACKED but pending)\n");
34452,34460c34539,34549
< #line 809
<   tmp___16 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
< #line 809
<   if (tmp___16 < 0) {
< #line 809
<     tmp___15 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
< #line 809
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: ap_pending_cnt = %d < 0 !\n",
<             "__req_mod", 809, tmp___15);
---
> #line 757
>   mod_rq_state(req, m, 16384, ((unsigned long )req->rq_state & 1008UL) != 0UL ? 128 : 0);
> #line 759
>   goto ldv_51994;
>   case 19U: ;
> #line 762
>   if (((unsigned long )req->rq_state & 16UL) == 0UL) {
> #line 762
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( req->rq_state & RQ_NET_PENDING ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared",
>             762);
34464,34471c34553,34556
< #line 810
<   req->rq_state = req->rq_state & 0xffffffffffffffefUL;
< #line 811
<   req->rq_state = req->rq_state | 384UL;
< #line 812
<   _req_may_be_done_not_susp(req, m);
< #line 813
<   goto ldv_51646;
---
> #line 763
>   mod_rq_state(req, m, 16, 384);
> #line 764
>   goto ldv_51994;
34473,34474c34558,34559
<   ldv_51646: ;
< #line 816
---
>   ldv_51994: ;
> #line 767
34478,34479c34563,34564
< #line 826 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
< static int drbd_may_do_local_read(struct drbd_conf *mdev , sector_t sector , int size ) 
---
> #line 777 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared"
> static bool drbd_may_do_local_read(struct drbd_conf *mdev , sector_t sector , int size ) 
34488,34490c34573,34575
< #line 831
<   if ((unsigned int )*((unsigned char *)mdev + 2277UL) == 16U) {
< #line 832
---
> #line 782
>   if ((unsigned int )*((unsigned char *)mdev + 749UL) == 16U) {
> #line 783
34495,34504c34580,34582
< #line 833
<   if ((int )mdev->state.ldv_39979.disk > 4) {
< #line 834
<     return (0);
<   } else {
< 
<   }
< #line 835
<   if ((int )mdev->state.ldv_39979.disk <= 3) {
< #line 836
---
> #line 784
>   if ((unsigned int )*((unsigned char *)mdev + 749UL) != 8U) {
> #line 785
34509,34511c34587
< #line 838
<   nr_sectors = drbd_get_capacity(mdev->this_bdev);
< #line 839
---
> #line 786
34513c34589,34591
< #line 841
---
> #line 787
>   nr_sectors = drbd_get_capacity(mdev->this_bdev);
> #line 788
34515c34593
< #line 841
---
> #line 788
34517,34518c34595,34596
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
<             841);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared",
>             788);
34522c34600
< #line 842
---
> #line 789
34524c34602
< #line 842
---
> #line 789
34526,34527c34604,34605
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
<             842);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared",
>             789);
34531c34609
< #line 844
---
> #line 791
34533c34611
< #line 845
---
> #line 792
34535c34613
< #line 847
---
> #line 794
34537c34615
< #line 847
---
> #line 794
34541c34619,34742
< #line 850 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
---
> #line 797 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared"
> static bool remote_due_to_read_balancing(struct drbd_conf *mdev , sector_t sector ,
>                                          enum drbd_read_balancing rbm ) 
> { 
>   struct backing_dev_info *bdi ;
>   int stripe_shift ;
>   int tmp ;
>   int tmp___0 ;
>   int tmp___1 ;
>   int tmp___2 ;
>   int tmp___3 ;
> 
>   {
> #line 803
>   switch ((unsigned int )rbm) {
>   case 4U: 
> #line 805
>   bdi = & ((((mdev->ldev)->backing_bdev)->bd_disk)->queue)->backing_dev_info;
> #line 806
>   tmp = bdi_read_congested(bdi);
> #line 806
>   return (tmp != 0);
>   case 3U: 
> #line 808
>   tmp___0 = atomic_read((atomic_t const   *)(& mdev->local_cnt));
> #line 808
>   tmp___1 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
> #line 808
>   tmp___2 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
> #line 808
>   return (tmp___0 > tmp___1 + tmp___2);
>   case 5U: ;
>   case 6U: ;
>   case 7U: ;
>   case 8U: ;
>   case 9U: ;
>   case 10U: 
> #line 816
>   stripe_shift = (int )((unsigned int )rbm + 10U);
> #line 817
>   return (((sector >> (stripe_shift + -9)) & 1UL) != 0UL);
>   case 2U: 
> #line 819
>   tmp___3 = test_and_change_bit(22, (unsigned long volatile   *)(& mdev->flags));
> #line 819
>   return (tmp___3 != 0);
>   case 1U: ;
> #line 821
>   return (1);
>   case 0U: ;
>   default: ;
> #line 824
>   return (0);
>   }
> }
> }
> #line 837 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared"
> static void complete_conflicting_writes(struct drbd_request *req ) 
> { 
>   wait_queue_t wait ;
>   struct task_struct *tmp ;
>   struct drbd_conf *mdev ;
>   struct drbd_interval *i ;
>   sector_t sector ;
>   int size ;
> 
>   {
> #line 839
>   tmp = get_current();
> #line 839
>   wait.flags = 0U;
> #line 839
>   wait.private = (void *)tmp;
> #line 839
>   wait.func = & autoremove_wake_function;
> #line 839
>   wait.task_list.next = & wait.task_list;
> #line 839
>   wait.task_list.prev = & wait.task_list;
> #line 840
>   mdev = req->w.ldv_50388.mdev;
> #line 842
>   sector = req->i.sector;
> #line 843
>   size = (int )req->i.size;
> #line 845
>   i = drbd_find_overlap(& mdev->write_requests, sector, (unsigned int )size);
> #line 846
>   if ((unsigned long )i == (unsigned long )((struct drbd_interval *)0)) {
> #line 847
>     return;
>   } else {
> 
>   }
>   ldv_52067: 
> #line 850
>   prepare_to_wait(& mdev->misc_wait, & wait, 2);
> #line 851
>   i = drbd_find_overlap(& mdev->write_requests, sector, (unsigned int )size);
> #line 852
>   if ((unsigned long )i == (unsigned long )((struct drbd_interval *)0)) {
> #line 853
>     goto ldv_52066;
>   } else {
> 
>   }
> #line 855
>   i->waiting = -1;
> #line 856
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 857
>   schedule();
> #line 858
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 859
>   goto ldv_52067;
>   ldv_52066: 
> #line 860
>   finish_wait(& mdev->misc_wait, & wait);
> #line 861
>   return;
> }
> }
> #line 864 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared"
34544c34745,34750
<   int congested ;
---
>   struct drbd_tconn *tconn ;
>   struct net_conf *nc ;
>   bool congested ;
>   enum drbd_on_congestion on_congestion ;
>   struct net_conf *_________p1 ;
>   bool __warned ;
34546a34753,34754
>   int tmp___1 ;
>   int tmp___2 ;
34551c34759,34761
< #line 852
---
> #line 866
>   tconn = mdev->tconn;
> #line 868
34553,34557c34763,34790
< #line 859
<   tmp = _get_ldev_if_state(mdev, D_UP_TO_DATE);
< #line 859
<   if (tmp == 0) {
< #line 860
---
> #line 871
>   _________p1 = *((struct net_conf * volatile  *)(& tconn->net_conf));
> #line 871
>   tmp = debug_lockdep_rcu_enabled();
> #line 871
>   if (tmp != 0 && ! __warned) {
> #line 871
>     tmp___0 = rcu_read_lock_held();
> #line 871
>     if (tmp___0 == 0 && 1) {
> #line 871
>       __warned = 1;
> #line 871
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared",
>                              871, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 871
>   nc = _________p1;
> #line 872
>   on_congestion = (unsigned long )nc != (unsigned long )((struct net_conf *)0) ? (enum drbd_on_congestion )nc->on_congestion : OC_BLOCK;
> #line 873
>   if ((unsigned int )on_congestion == 0U || tconn->agreed_pro_version <= 95) {
> #line 875
34562,34568c34795,34810
< #line 862
<   if ((mdev->net_conf)->cong_fill != 0) {
< #line 862
<     tmp___0 = atomic_read((atomic_t const   *)(& mdev->ap_in_flight));
< #line 862
<     if (tmp___0 >= (mdev->net_conf)->cong_fill) {
< #line 864
---
> #line 881
>   tmp___1 = _get_ldev_if_state(mdev, D_UP_TO_DATE);
> #line 881
>   if (tmp___1 == 0) {
> #line 882
>     return;
>   } else {
> 
>   }
> #line 884
>   if (nc->cong_fill != 0U) {
> #line 884
>     tmp___2 = atomic_read((atomic_t const   *)(& mdev->ap_in_flight));
> #line 884
>     if ((__u32 )tmp___2 >= nc->cong_fill) {
> #line 886
34570c34812
< #line 865
---
> #line 887
34578,34580c34820,34822
< #line 868
<   if ((mdev->act_log)->used >= (unsigned int )(mdev->net_conf)->cong_extents) {
< #line 869
---
> #line 890
>   if ((mdev->act_log)->used >= nc->cong_extents) {
> #line 891
34582c34824
< #line 870
---
> #line 892
34587,34597c34829,34839
< #line 873
<   if (congested != 0) {
< #line 874
<     queue_barrier(mdev);
< #line 876
<     if ((mdev->net_conf)->on_congestion == 1) {
< #line 877
<       __ns.i = mdev->state.i;
< #line 877
<       __ns.ldv_39979.conn = 22U;
< #line 877
---
> #line 895
>   if ((int )congested) {
> #line 897
>     start_new_tl_epoch(mdev->tconn);
> #line 899
>     if ((unsigned int )on_congestion == 1U) {
> #line 900
>       __ns = drbd_read_state(mdev);
> #line 900
>       __ns.ldv_40604.conn = 22U;
> #line 900
34600,34604c34842,34846
< #line 879
<       __ns___0.i = mdev->state.i;
< #line 879
<       __ns___0.ldv_39979.conn = 1U;
< #line 879
---
> #line 902
>       __ns___0 = drbd_read_state(mdev);
> #line 902
>       __ns___0.ldv_40604.conn = 1U;
> #line 902
34610c34852
< #line 881
---
> #line 904
34612c34854
< #line 882
---
> #line 905
34616,34617c34858,34859
< #line 884 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
< static int drbd_make_request_common(struct drbd_conf *mdev , struct bio *bio , unsigned long start_time ) 
---
> #line 916 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared"
> static bool do_remote_read(struct drbd_request *req ) 
34619,34630c34861,34863
<   int rw ;
<   int size ;
<   sector_t sector ;
<   struct drbd_tl_epoch *b ;
<   struct drbd_request *req ;
<   int local ;
<   int remote ;
<   int send_oos ;
<   int err ;
<   int ret ;
<   union drbd_state s ;
<   long tmp ;
---
>   struct drbd_conf *mdev ;
>   enum drbd_read_balancing rbm ;
>   bool tmp ;
34631a34865,34866
>   struct disk_conf *_________p1 ;
>   bool __warned ;
34633,34657c34868,34869
<   bool tmp___2 ;
<   int tmp___3 ;
<   bool tmp___4 ;
<   int tmp___5 ;
<   int tmp___6 ;
<   int tmp___7 ;
<   void *tmp___8 ;
<   int tmp___9 ;
<   int tmp___10 ;
<   bool tmp___11 ;
<   bool tmp___12 ;
<   int tmp___13 ;
<   int tmp___14 ;
<   int tmp___15 ;
<   int tmp___16 ;
<   int tmp___17 ;
<   long tmp___18 ;
<   int tmp___19 ;
<   long tmp___20 ;
<   bool tmp___21 ;
<   int tmp___22 ;
<   int tmp___23 ;
<   int tmp___24 ;
<   int tmp___25 ;
<   int tmp___26 ;
---
>   int tmp___2 ;
>   bool tmp___3 ;
34660,34684c34872,34902
< #line 886
<   rw = (int const   )bio->bi_rw & (int const   )8193;
< #line 887
<   size = (int const   )bio->bi_size;
< #line 888
<   sector = bio->bi_sector;
< #line 889
<   b = 0;
< #line 891
<   send_oos = 0;
< #line 892
<   err = -5;
< #line 893
<   ret = 0;
< #line 897
<   req = drbd_req_new(mdev, bio);
< #line 898
<   if ((unsigned long )req == (unsigned long )((struct drbd_request *)0)) {
< #line 899
<     dec_ap_bio(mdev);
< #line 902
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "could not kmalloc() req\n");
< #line 903
<     bio_endio(bio, -12);
< #line 904
---
> #line 918
>   mdev = req->w.ldv_50388.mdev;
> #line 921
>   if ((unsigned long )req->private_bio != (unsigned long )((struct bio *)0)) {
> #line 922
>     tmp = drbd_may_do_local_read(mdev, req->i.sector, (int )req->i.size);
> #line 922
>     if (tmp) {
> #line 922
>       tmp___0 = 0;
>     } else {
> #line 922
>       tmp___0 = 1;
>     }
> #line 922
>     if (tmp___0) {
> #line 924
>       bio_put(req->private_bio);
> #line 925
>       req->private_bio = 0;
> #line 926
>       put_ldev(mdev);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 930
>   if (*((unsigned int *)mdev + 187UL) != 65536U) {
> #line 931
34689,34698c34907,34910
< #line 906
<   req->start_time = start_time;
< #line 908
<   local = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 909
<   if (local == 0) {
< #line 910
<     bio_put(req->private_bio);
< #line 911
<     req->private_bio = 0;
---
> #line 933
>   if ((unsigned long )req->private_bio == (unsigned long )((struct bio *)0)) {
> #line 934
>     return (1);
34702,34718c34914,34930
< #line 913
<   if (rw == 1) {
< #line 917
<     tmp = __builtin_expect(size == 0, 0L);
< #line 917
<     if (tmp != 0L) {
< #line 919
<       if ((bio->bi_rw & 4096UL) == 0UL) {
< #line 919
<         dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( bio->bi_rw & REQ_FLUSH ) in %s:%d\n",
<                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
<                 919);
<       } else {
< 
<       }
< #line 920
<       remote = 0;
---
> #line 939
>   rcu_read_lock();
> #line 940
>   _________p1 = *((struct disk_conf * volatile  *)(& (mdev->ldev)->disk_conf));
> #line 940
>   tmp___1 = debug_lockdep_rcu_enabled();
> #line 940
>   if (tmp___1 != 0 && ! __warned) {
> #line 940
>     tmp___2 = rcu_read_lock_held();
> #line 940
>     if (tmp___2 == 0 && 1) {
> #line 940
>       __warned = 1;
> #line 940
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared",
>                              940, "suspicious rcu_dereference_check() usage");
34720,34721c34932
< #line 922
<       remote = 1;
---
> 
34724,34741d34934
< #line 925
<     if (local != 0) {
< #line 926
<       tmp___0 = drbd_may_do_local_read(mdev, sector, size);
< #line 926
<       if (tmp___0 == 0) {
< #line 932
<         local = 0;
< #line 933
<         bio_put(req->private_bio);
< #line 934
<         req->private_bio = 0;
< #line 935
<         put_ldev(mdev);
<       } else {
< 
<       }
<     } else {
34743,34745d34935
<     }
< #line 938
<     remote = local == 0 && (int )mdev->state.ldv_39979.pdsk > 7;
34747,34752c34937,34944
< #line 949
<   if ((rw == 8192 && (int )mdev->state.ldv_39979.disk > 3) && local == 0) {
< #line 950
<     err = -11;
< #line 951
<     goto fail_and_free_req;
---
> #line 940
>   rbm = (enum drbd_read_balancing )_________p1->read_balancing;
> #line 941
>   rcu_read_unlock();
> #line 943
>   if ((unsigned int )rbm == 0U && (unsigned long )req->private_bio != (unsigned long )((struct bio *)0)) {
> #line 944
>     return (0);
34756,34765c34948,34959
< #line 961
<   if ((rw == 1 && local != 0) && size != 0) {
< #line 961
<     tmp___1 = drbd_test_flag(mdev, AL_SUSPENDED);
< #line 961
<     if (tmp___1 == 0) {
< #line 963
<       req->rq_state = req->rq_state | 4096UL;
< #line 964
<       drbd_al_begin_io(mdev, sector);
---
> #line 946
>   tmp___3 = remote_due_to_read_balancing(mdev, req->i.sector, rbm);
> #line 946
>   if ((int )tmp___3) {
> #line 947
>     if ((unsigned long )req->private_bio != (unsigned long )((struct bio *)0)) {
> #line 948
>       bio_put(req->private_bio);
> #line 949
>       req->private_bio = 0;
> #line 950
>       put_ldev(mdev);
34768a34963,34964
> #line 952
>     return (1);
34771a34968,34988
> #line 955
>   return (0);
> }
> }
> #line 961 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared"
> static int drbd_process_write_request(struct drbd_request *req ) 
> { 
>   struct drbd_conf *mdev ;
>   int remote ;
>   int send_oos ;
>   bool tmp ;
>   bool tmp___0 ;
>   bool tmp___1 ;
>   long tmp___2 ;
>   int tmp___3 ;
> 
>   {
> #line 963
>   mdev = req->w.ldv_50388.mdev;
> #line 966
>   rcu_read_lock();
34773c34990,34992
<   s = mdev->state;
---
>   tmp = drbd_should_do_remote(mdev->state);
> #line 967
>   remote = (int )tmp;
34776,34807d34994
< #line 968
<     tmp___2 = drbd_should_do_remote(s);
< #line 968
<     if ((int )tmp___2) {
< #line 968
<       tmp___3 = 1;
<     } else {
< #line 968
<       tmp___3 = 0;
<     }
<   } else {
< #line 968
<     tmp___3 = 0;
<   }
< #line 968
<   remote = tmp___3;
< #line 969
<   if (rw == 1) {
< #line 969
<     tmp___4 = drbd_should_send_oos(s);
< #line 969
<     if ((int )tmp___4) {
< #line 969
<       tmp___5 = 1;
<     } else {
< #line 969
<       tmp___5 = 0;
<     }
<   } else {
< #line 969
<     tmp___5 = 0;
<   }
34809c34996
<   send_oos = tmp___5;
---
>     maybe_pull_ahead(mdev);
34811c34998
<   if (remote != 0 && send_oos != 0) {
---
>     tmp___0 = drbd_should_do_remote(mdev->state);
34813,34815c35000
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( !(remote && send_oos) ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
<             970);
---
>     remote = (int )tmp___0;
34820,34822c35005
<   if (local == 0 && remote == 0) {
< #line 972
<     tmp___7 = is_susp(mdev->state);
---
>   tmp___1 = drbd_should_send_out_of_sync(mdev->state);
34824c35007
<     if (tmp___7 == 0) {
---
>   send_oos = (int )tmp___1;
34826,34831c35009,35020
<       tmp___6 = ___ratelimit(& drbd_ratelimit_state, "drbd_make_request_common");
< #line 973
<       if (tmp___6 != 0) {
< #line 974
<         dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "IO ERROR: neither local nor remote disk\n");
<       } else {
---
>   rcu_read_unlock();
> #line 981
>   tmp___2 = __builtin_expect(req->i.size == 0U, 0L);
> #line 981
>   if (tmp___2 != 0L) {
> #line 983
>     if (((req->master_bio)->bi_rw & 4096UL) == 0UL) {
> #line 983
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( req->master_bio->bi_rw & REQ_FLUSH ) in %s:%d\n",
>               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared",
>               983);
>     } else {
34833,34835c35022,35026
<       }
< #line 975
<       goto fail_free_complete;
---
>     }
> #line 984
>     if (remote != 0) {
> #line 985
>       start_new_tl_epoch(mdev->tconn);
34838a35030,35031
> #line 986
>     return (0);
34842,34852d35034
< #line 984
<   if ((rw == 1 && (remote != 0 || send_oos != 0)) && (unsigned long )mdev->unused_spare_tle == (unsigned long )((struct drbd_tl_epoch *)0)) {
< #line 984
<     tmp___9 = drbd_test_flag(mdev, CREATE_BARRIER);
< #line 984
<     if (tmp___9 != 0) {
<       allocate_barrier: 
< #line 988
<       tmp___8 = kmalloc(56UL, 16U);
< #line 988
<       b = (struct drbd_tl_epoch *)tmp___8;
34854c35036
<       if ((unsigned long )b == (unsigned long )((struct drbd_tl_epoch *)0)) {
---
>   if (remote == 0 && send_oos == 0) {
34856,34866c35038
<         dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Failed to alloc barrier.\n");
< #line 991
<         err = -12;
< #line 992
<         goto fail_free_complete;
<       } else {
< 
<       }
<     } else {
< 
<     }
---
>     return (0);
34870,34881c35042,35047
< #line 997
<   spin_lock_irq(& mdev->req_lock);
< #line 999
<   tmp___10 = is_susp(mdev->state);
< #line 999
<   if (tmp___10 != 0) {
< #line 1004
<     ret = 1;
< #line 1005
<     spin_unlock_irq(& mdev->req_lock);
< #line 1006
<     goto fail_free_complete;
---
> #line 992
>   if (remote != 0 && send_oos != 0) {
> #line 992
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( !(remote && send_oos) ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared",
>             992);
34885,34914c35051,35064
< #line 1009
<   if (remote != 0 || send_oos != 0) {
< #line 1010
<     tmp___11 = drbd_should_do_remote(mdev->state);
< #line 1010
<     remote = (int )tmp___11;
< #line 1011
<     if (rw == 1) {
< #line 1011
<       tmp___12 = drbd_should_send_oos(mdev->state);
< #line 1011
<       if ((int )tmp___12) {
< #line 1011
<         tmp___13 = 1;
<       } else {
< #line 1011
<         tmp___13 = 0;
<       }
<     } else {
< #line 1011
<       tmp___13 = 0;
<     }
< #line 1011
<     send_oos = tmp___13;
< #line 1012
<     if (remote != 0 && send_oos != 0) {
< #line 1012
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( !(remote && send_oos) ) in %s:%d\n",
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
<               1012);
---
> #line 994
>   if (remote != 0) {
> #line 995
>     _req_mod(req, TO_BE_SENT);
> #line 996
>     _req_mod(req, QUEUE_FOR_NET_WRITE);
>   } else {
> #line 997
>     tmp___3 = __drbd_set_out_of_sync(mdev, req->i.sector, (int )req->i.size, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared",
>                                      997U);
> #line 997
>     if (tmp___3 != 0) {
> #line 998
>       _req_mod(req, QUEUE_FOR_SEND_OOS);
34918,34922c35068,35080
< #line 1014
<     if (remote == 0 && send_oos == 0) {
< #line 1015
<       dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "lost connection while grabbing the req_lock!\n");
<     } else {
---
>   }
> #line 1000
>   return (remote);
> }
> }
> #line 1004 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared"
> static void drbd_submit_req_private_bio(struct drbd_request *req ) 
> { 
>   struct drbd_conf *mdev ;
>   struct bio *bio ;
>   int rw ;
>   int tmp ;
>   int tmp___0 ;
34924,34926c35082,35090
<     }
< #line 1016
<     if (local == 0 && remote == 0) {
---
>   {
> #line 1006
>   mdev = req->w.ldv_50388.mdev;
> #line 1007
>   bio = req->private_bio;
> #line 1008
>   rw = (int const   )bio->bi_rw & (int const   )8193;
> #line 1010
>   bio->bi_bdev = (mdev->ldev)->backing_bdev;
34928c35092,35094
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "IO ERROR: neither local nor remote disk\n");
---
>   tmp___0 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 1017
>   if (tmp___0 != 0) {
34930,34932c35096,35100
<       spin_unlock_irq(& mdev->req_lock);
< #line 1019
<       goto fail_free_complete;
---
>     tmp = drbd_insert_fault(mdev, rw != 1 ? (rw == 0 ? 5U : 6U) : 4U);
> #line 1018
>     if (tmp != 0) {
> #line 1022
>       bio_endio(bio, -5);
34934,34940d35101
< 
<     }
<   } else {
< 
<   }
< #line 1023
<   if ((unsigned long )b != (unsigned long )((struct drbd_tl_epoch *)0) && (unsigned long )mdev->unused_spare_tle == (unsigned long )((struct drbd_tl_epoch *)0)) {
34942c35103,35104
<     mdev->unused_spare_tle = b;
---
>       generic_make_request(bio);
>     }
34944c35106
<     b = 0;
---
>     put_ldev(mdev);
34946,34949d35107
< 
<   }
< #line 1027
<   if ((rw == 1 && (remote != 0 || send_oos != 0)) && (unsigned long )mdev->unused_spare_tle == (unsigned long )((struct drbd_tl_epoch *)0)) {
34951,34953c35109,35133
<     tmp___14 = drbd_test_flag(mdev, CREATE_BARRIER);
< #line 1027
<     if (tmp___14 != 0) {
---
>     bio_endio(bio, -5);
>   }
> #line 1028
>   return;
> }
> }
> #line 1030 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared"
> void __drbd_make_request(struct drbd_conf *mdev , struct bio *bio , unsigned long start_time ) 
> { 
>   int rw ;
>   struct bio_and_error m ;
>   struct drbd_request *req ;
>   bool no_remote ;
>   int tmp ;
>   int tmp___0 ;
>   int tmp___1 ;
>   bool tmp___2 ;
>   int tmp___3 ;
>   int tmp___4 ;
>   long tmp___5 ;
>   int tmp___6 ;
>   int tmp___7 ;
>   int tmp___8 ;
> 
>   {
34955c35135
<       spin_unlock_irq(& mdev->req_lock);
---
>   rw = (int const   )bio->bi_rw & (int const   )8193;
34957,34960c35137,35153
<       goto allocate_barrier;
<     } else {
< 
<     }
---
>   m.bio = 0;
> #line 1033
>   m.error = 0;
> #line 1035
>   no_remote = 0;
> #line 1038
>   req = drbd_req_new(mdev, bio);
> #line 1039
>   if ((unsigned long )req == (unsigned long )((struct drbd_request *)0)) {
> #line 1040
>     dec_ap_bio(mdev);
> #line 1043
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "could not kmalloc() req\n");
> #line 1044
>     bio_endio(bio, -12);
> #line 1045
>     return;
34964,34976c35157,35162
< #line 1038
<   _drbd_start_io_acct(mdev, req, bio);
< #line 1050
<   if ((remote != 0 || send_oos != 0) && (unsigned long )mdev->unused_spare_tle != (unsigned long )((struct drbd_tl_epoch *)0)) {
< #line 1050
<     tmp___16 = drbd_test_and_clear_flag(mdev, CREATE_BARRIER);
< #line 1050
<     if (tmp___16 != 0) {
< #line 1052
<       _tl_add_barrier(mdev, mdev->unused_spare_tle);
< #line 1053
<       mdev->unused_spare_tle = 0;
<     } else {
---
> #line 1047
>   req->start_time = start_time;
> #line 1049
>   tmp = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 1049
>   if (tmp == 0) {
34978,34991c35164,35179
<       goto _L;
<     }
<   } else
<   _L: /* CIL Label */ 
< #line 1055
<   if (remote != 0 && rw == 1) {
< #line 1055
<     tmp___15 = drbd_test_flag(mdev, CREATE_BARRIER);
< #line 1055
<     if (tmp___15 != 0) {
< #line 1055
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( !(remote && rw == WRITE && drbd_test_flag(mdev, CREATE_BARRIER)) ) in %s:%d\n",
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
<               1056);
---
>     bio_put(req->private_bio);
> #line 1051
>     req->private_bio = 0;
>   } else {
> 
>   }
> #line 1061
>   if ((rw == 1 && (unsigned long )req->private_bio != (unsigned long )((struct bio *)0)) && req->i.size != 0U) {
> #line 1061
>     tmp___0 = constant_test_bit(18U, (unsigned long const volatile   *)(& mdev->flags));
> #line 1061
>     if (tmp___0 == 0) {
> #line 1063
>       req->rq_state = req->rq_state | 4096U;
> #line 1064
>       drbd_al_begin_io(mdev, & req->i);
34998,35001c35186,35191
< #line 1074
<   if (remote != 0) {
< #line 1075
<     _req_mod(req, to_be_send);
---
> #line 1067
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 1068
>   if (rw == 1) {
> #line 1072
>     complete_conflicting_writes(req);
35005,35006d35194
< #line 1076
<   if (local != 0) {
35008,35015c35196,35204
<     _req_mod(req, to_be_submitted);
<   } else {
< 
<   }
< #line 1082
<   if (rw == 1) {
< #line 1082
<     tmp___17 = _req_conflicts(req);
---
>   tmp___1 = drbd_suspended(mdev);
> #line 1077
>   if (tmp___1 != 0) {
> #line 1079
>     req->rq_state = req->rq_state | 8192U;
> #line 1080
>     if ((unsigned long )req->private_bio != (unsigned long )((struct bio *)0)) {
> #line 1081
>       bio_put(req->private_bio);
35017c35206
<     if (tmp___17 != 0) {
---
>       req->private_bio = 0;
35019c35208
<       goto fail_conflicting;
---
>       put_ldev(mdev);
35022a35212,35213
> #line 1085
>     goto out;
35026,35050c35217,35234
< #line 1087
<   tmp___18 = __builtin_expect(size != 0, 1L);
< #line 1087
<   if (tmp___18 != 0L) {
< #line 1088
<     list_add_tail(& req->tl_requests, & (mdev->newest_tle)->requests);
<   } else {
< 
<   }
< #line 1092
<   if (remote != 0) {
< #line 1097
<     _req_mod(req, rw == 1 ? queue_for_net_write : queue_for_net_read);
<   } else {
< 
<   }
< #line 1101
<   if (send_oos != 0) {
< #line 1101
<     tmp___19 = __drbd_set_out_of_sync(mdev, sector, size, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
<                                       1101U);
< #line 1101
<     if (tmp___19 != 0) {
< #line 1102
<       _req_mod(req, queue_for_send_oos);
---
> #line 1089
>   _drbd_start_io_acct(mdev, req, bio);
> #line 1094
>   if (rw != 1) {
> #line 1095
>     tmp___2 = do_remote_read(req);
> #line 1095
>     if (tmp___2) {
> #line 1095
>       tmp___3 = 0;
>     } else {
> #line 1095
>       tmp___3 = 1;
>     }
> #line 1095
>     if (tmp___3 && (unsigned long )req->private_bio == (unsigned long )((struct bio *)0)) {
> #line 1096
>       goto nodata;
35056a35241,35246
> #line 1100
>   tmp___4 = atomic_read((atomic_t const   *)(& (mdev->tconn)->current_tle_nr));
> #line 1100
>   req->epoch = (unsigned int )tmp___4;
> #line 1104
>   tmp___5 = __builtin_expect(req->i.size != 0U, 1L);
35058c35248,35250
<   if ((remote != 0 && (mdev->net_conf)->on_congestion != 0) && mdev->agreed_pro_version > 95) {
---
>   if (tmp___5 != 0L) {
> #line 1105
>     if (rw == 1) {
35060,35073c35252
<     maybe_pull_ahead(mdev);
<   } else {
< 
<   }
< #line 1111
<   tmp___20 = __builtin_expect((bio->bi_rw & 4096UL) != 0UL, 0L);
< #line 1111
<   if (tmp___20 != 0L && (mdev->newest_tle)->n_writes != 0) {
< #line 1111
<     tmp___21 = drbd_should_do_remote(mdev->state);
< #line 1111
<     if ((int )tmp___21) {
< #line 1114
<       queue_barrier(mdev);
---
>       (mdev->tconn)->current_tle_writes = (mdev->tconn)->current_tle_writes + 1U;
35076a35256,35257
> #line 1108
>     list_add_tail(& req->tl_requests, & (mdev->tconn)->transfer_log);
35080,35081c35261,35269
< #line 1116
<   spin_unlock_irq(& mdev->req_lock);
---
> #line 1111
>   if (rw == 1) {
> #line 1112
>     tmp___6 = drbd_process_write_request(req);
> #line 1112
>     if (tmp___6 == 0) {
> #line 1113
>       no_remote = 1;
>     } else
35083c35271,35273
<   kfree((void const   *)b);
---
>     if ((unsigned long )req->private_bio == (unsigned long )((struct bio *)0)) {
> #line 1118
>       _req_mod(req, TO_BE_SENT);
35085,35103c35275
<   if (local != 0) {
< #line 1120
<     (req->private_bio)->bi_bdev = (mdev->ldev)->backing_bdev;
< #line 1127
<     tmp___23 = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 1127
<     if (tmp___23 != 0) {
< #line 1128
<       tmp___22 = drbd_insert_fault(mdev, rw != 1 ? (rw == 0 ? 5U : 6U) : 4U);
< #line 1128
<       if (tmp___22 != 0) {
< #line 1131
<         bio_endio(req->private_bio, -5);
<       } else {
< #line 1133
<         generic_make_request(req->private_bio);
<       }
< #line 1134
<       put_ldev(mdev);
---
>       _req_mod(req, QUEUE_FOR_NET_READ);
35105,35106c35277,35278
< #line 1136
<       bio_endio(req->private_bio, -5);
---
> #line 1121
>       no_remote = 1;
35111,35137c35283,35303
< #line 1139
<   return (0);
<   fail_conflicting: 
< #line 1148
<   _drbd_end_io_acct(mdev, req);
< #line 1149
<   spin_unlock_irq(& mdev->req_lock);
< #line 1150
<   if (remote != 0) {
< #line 1151
<     tmp___24 = atomic_dec_and_test(& mdev->ap_pending_cnt);
< #line 1151
<     if (tmp___24 != 0) {
< #line 1151
<       __wake_up(& mdev->misc_wait, 3U, 1, 0);
<     } else {
< 
<     }
< #line 1151
<     tmp___26 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
< #line 1151
<     if (tmp___26 < 0) {
< #line 1151
<       tmp___25 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
< #line 1151
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: ap_pending_cnt = %d < 0 !\n",
<               "drbd_make_request_common", 1151, tmp___25);
---
> #line 1124
>   if ((unsigned long )req->private_bio != (unsigned long )((struct bio *)0)) {
> #line 1126
>     _req_mod(req, TO_BE_SUBMITTED);
> #line 1128
>     spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 1129
>     drbd_submit_req_private_bio(req);
> #line 1130
>     spin_lock_irq(& (mdev->tconn)->req_lock);
>   } else
> #line 1131
>   if ((int )no_remote) {
>     nodata: 
> #line 1133
>     tmp___7 = ___ratelimit(& drbd_ratelimit_state, "__drbd_make_request");
> #line 1133
>     if (tmp___7 != 0) {
> #line 1134
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "IO ERROR: neither local nor remote data, sector %llu+%u\n",
>               (unsigned long long )req->i.sector, req->i.size >> 9);
35144,35169c35310,35316
< #line 1154
<   err = 0;
<   fail_free_complete: ;
< #line 1157
<   if ((req->rq_state & 4096UL) != 0UL) {
< #line 1158
<     drbd_al_complete_io(mdev, sector);
<   } else {
< 
<   }
<   fail_and_free_req: ;
< #line 1160
<   if (local != 0) {
< #line 1161
<     bio_put(req->private_bio);
< #line 1162
<     req->private_bio = 0;
< #line 1163
<     put_ldev(mdev);
<   } else {
< 
<   }
< #line 1165
<   if (ret == 0) {
< #line 1166
<     bio_endio(bio, err);
---
>   out: 
> #line 1141
>   tmp___8 = drbd_req_put_completion_ref(req, & m, 1);
> #line 1141
>   if (tmp___8 != 0) {
> #line 1142
>     kref_put(& req->kref, & drbd_req_destroy);
35173,35208c35320,35325
< #line 1168
<   drbd_req_free(req);
< #line 1169
<   dec_ap_bio(mdev);
< #line 1170
<   kfree((void const   *)b);
< #line 1172
<   return (ret);
< }
< }
< #line 1180 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
< static int drbd_fail_request_early(struct drbd_conf *mdev , int is_write ) 
< { 
<   struct task_struct *tmp ;
<   struct task_struct *tmp___0 ;
<   int tmp___1 ;
< 
<   {
< #line 1182
<   if ((unsigned int )*((unsigned char *)mdev + 2276UL) != 1U && (! allow_oos || is_write != 0)) {
< #line 1184
<     tmp___1 = ___ratelimit(& drbd_ratelimit_state, "drbd_fail_request_early");
< #line 1184
<     if (tmp___1 != 0) {
< #line 1185
<       tmp = get_current();
< #line 1185
<       tmp___0 = get_current();
< #line 1185
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Process %s[%u] tried to %s; since we are not in Primary state, we cannot allow this\n",
<               (char *)(& tmp___0->comm), tmp->pid, is_write != 0 ? (char *)"WRITE" : (char *)"READ");
<     } else {
< 
<     }
< #line 1191
<     return (1);
---
> #line 1143
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 1145
>   if ((unsigned long )m.bio != (unsigned long )((struct bio *)0)) {
> #line 1146
>     complete_master_bio(mdev, & m);
35212,35213c35329,35330
< #line 1194
<   return (0);
---
> #line 1147
>   return;
35216c35333
< #line 1197 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
---
> #line 1150 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared"
35219,35220d35335
<   unsigned int s_enr ;
<   unsigned int e_enr ;
35223,35232d35337
<   int tmp ;
<   int tmp___0 ;
<   long tmp___1 ;
<   struct bio_pair *bp ;
<   sector_t sect ;
<   int sps ;
<   int mask ;
<   sector_t first_sectors ;
<   int tmp___2 ;
<   int tmp___3 ;
35235c35340
< #line 1200
---
> #line 1152
35237,35248c35342
< #line 1203
<   tmp = drbd_fail_request_early(mdev, (int )bio->bi_rw & 1);
< #line 1203
<   if (tmp != 0) {
< #line 1204
<     bio_endio(bio, -1);
< #line 1205
<     return;
<   } else {
< 
<   }
< #line 1208
---
> #line 1155
35250c35344
< #line 1213
---
> #line 1160
35252,35291c35346,35349
< #line 1213
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( (bio->bi_size & 0x1ff) == 0 ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
<             1213);
<   } else {
< 
<   }
< #line 1217
<   s_enr = (unsigned int )(bio->bi_sector >> 8);
< #line 1218
<   e_enr = bio->bi_size != 0U ? (unsigned int )(((bio->bi_sector + (sector_t )(bio->bi_size >> 9)) - 1UL) >> 8) : s_enr;
< #line 1220
<   tmp___1 = __builtin_expect(s_enr == e_enr, 1L);
< #line 1220
<   if (tmp___1 != 0L) {
<     ldv_51744: 
< #line 1222
<     inc_ap_bio(mdev, 1);
< #line 1223
<     tmp___0 = drbd_make_request_common(mdev, bio, start_time);
< #line 1223
<     if (tmp___0 != 0) {
< #line 1224
<       goto ldv_51744;
<     } else {
< 
<     }
< 
< #line 1224
<     return;
<   } else {
< 
<   }
< #line 1229
<   if (((unsigned int )bio->bi_vcnt != 1U || (unsigned int )bio->bi_idx != 0U) || bio->bi_size > 131072U) {
< #line 1231
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "bio would need to, but cannot, be split: (vcnt=%u,idx=%u,size=%u,sector=%llu)\n",
<             (int )bio->bi_vcnt, (int )bio->bi_idx, bio->bi_size, (unsigned long long )bio->bi_sector);
< #line 1235
<     bio_endio(bio, -22);
---
> #line 1160
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( IS_ALIGNED(bio->bi_size, 512) ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared",
>             1160);
35293,35326d35350
< #line 1247
<     sect = bio->bi_sector;
< #line 1248
<     sps = 256;
< #line 1249
<     mask = sps + -1;
< #line 1250
<     first_sectors = (unsigned long )sps - ((unsigned long )mask & sect);
< #line 1251
<     bp = bio_split(bio, (int )first_sectors);
< #line 1258
<     inc_ap_bio(mdev, 3);
< #line 1260
<     if (s_enr + 1U != e_enr) {
< #line 1260
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( e_enr == s_enr + 1 ) in %s:%d\n",
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
<               1260);
<     } else {
< 
<     }
< #line 1262
<     goto ldv_51752;
<     ldv_51751: 
< #line 1263
<     inc_ap_bio(mdev, 1);
<     ldv_51752: 
< #line 1262
<     tmp___2 = drbd_make_request_common(mdev, & bp->bio1, start_time);
< #line 1262
<     if (tmp___2 != 0) {
< #line 1263
<       goto ldv_51751;
<     } else {
35328,35348d35351
<     }
< 
< #line 1265
<     goto ldv_51755;
<     ldv_51754: 
< #line 1266
<     inc_ap_bio(mdev, 1);
<     ldv_51755: 
< #line 1265
<     tmp___3 = drbd_make_request_common(mdev, & bp->bio2, start_time);
< #line 1265
<     if (tmp___3 != 0) {
< #line 1266
<       goto ldv_51754;
<     } else {
< 
<     }
< #line 1268
<     dec_ap_bio(mdev);
< #line 1270
<     bio_pair_release(bp);
35350c35353,35357
< #line 1272
---
> #line 1162
>   inc_ap_bio(mdev);
> #line 1163
>   __drbd_make_request(mdev, bio, start_time);
> #line 1164
35354c35361
< #line 1287 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
---
> #line 1178 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared"
35358d35364
<   unsigned int bio_offset ;
35368c35374
< #line 1289
---
> #line 1180
35370,35372c35376
< #line 1290
<   bio_offset = (unsigned int )bvm->bi_sector << 9;
< #line 1292
---
> #line 1181
35374,35412c35378,35397
< #line 1295
<   limit = (int )(131072U - ((bio_offset & 131071U) + bio_size));
< #line 1297
<   if (limit < 0) {
< #line 1298
<     limit = 0;
<   } else {
< 
<   }
< #line 1299
<   if (bio_size == 0U) {
< #line 1300
<     if ((unsigned int )limit <= bvec->bv_len) {
< #line 1301
<       limit = (int )bvec->bv_len;
<     } else
< #line 1302
<     if (limit != 0) {
< #line 1302
<       tmp = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 1302
<       if (tmp != 0) {
< #line 1303
<         b = (((mdev->ldev)->backing_bdev)->bd_disk)->queue;
< #line 1305
<         if ((unsigned long )b->merge_bvec_fn != (unsigned long )((merge_bvec_fn *)0)) {
< #line 1306
<           backing_limit = (*(b->merge_bvec_fn))(b, bvm, bvec);
< #line 1307
<           _min1 = limit;
< #line 1307
<           _min2 = backing_limit;
< #line 1307
<           limit = _min1 < _min2 ? _min1 : _min2;
<         } else {
< 
<         }
< #line 1309
<         put_ldev(mdev);
---
> #line 1182
>   limit = 1048576;
> #line 1185
>   if (bio_size != 0U) {
> #line 1185
>     tmp = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 1185
>     if (tmp != 0) {
> #line 1186
>       b = (((mdev->ldev)->backing_bdev)->bd_disk)->queue;
> #line 1188
>       if ((unsigned long )b->merge_bvec_fn != (unsigned long )((merge_bvec_fn *)0)) {
> #line 1189
>         backing_limit = (*(b->merge_bvec_fn))(b, bvm, bvec);
> #line 1190
>         _min1 = limit;
> #line 1190
>         _min2 = backing_limit;
> #line 1190
>         limit = _min1 < _min2 ? _min1 : _min2;
35415a35401,35402
> #line 1192
>       put_ldev(mdev);
35422c35409
< #line 1311
---
> #line 1194
35426c35413,35455
< #line 1314 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
---
> #line 1197 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared"
> struct drbd_request *find_oldest_request(struct drbd_tconn *tconn ) 
> { 
>   struct drbd_request *r ;
>   struct list_head  const  *__mptr ;
>   int tmp ;
>   struct list_head  const  *__mptr___0 ;
> 
>   {
> #line 1202
>   __mptr = (struct list_head  const  *)tconn->transfer_log.next;
> #line 1202
>   r = (struct drbd_request *)__mptr + 0xffffffffffffff98UL;
> #line 1202
>   goto ldv_52142;
>   ldv_52141: 
> #line 1203
>   tmp = atomic_read((atomic_t const   *)(& r->completion_ref));
> #line 1203
>   if (tmp != 0) {
> #line 1204
>     return (r);
>   } else {
> 
>   }
> #line 1202
>   __mptr___0 = (struct list_head  const  *)r->tl_requests.next;
> #line 1202
>   r = (struct drbd_request *)__mptr___0 + 0xffffffffffffff98UL;
>   ldv_52142: ;
> #line 1202
>   if ((unsigned long )(& r->tl_requests) != (unsigned long )(& tconn->transfer_log)) {
> #line 1203
>     goto ldv_52141;
>   } else {
> 
>   }
> 
> #line 1206
>   return (0);
> }
> }
> #line 1209 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared"
35429a35459
>   struct drbd_tconn *tconn ;
35431c35461
<   struct list_head *le ;
---
>   struct net_conf *nc ;
35436a35467,35468
>   struct net_conf *_________p1 ;
>   bool __warned ;
35438a35471,35475
>   struct disk_conf *_________p1___0 ;
>   bool __warned___0 ;
>   int tmp___1 ;
>   int tmp___2 ;
>   int tmp___3 ;
35443,35446c35480,35481
<   unsigned long tmp___1 ;
<   unsigned long tmp___2 ;
<   int tmp___3 ;
<   struct list_head  const  *__mptr ;
---
>   unsigned long tmp___4 ;
>   unsigned long tmp___5 ;
35450c35485
< #line 1316
---
> #line 1211
35452c35487,35489
< #line 1319
---
> #line 1212
>   tconn = mdev->tconn;
> #line 1215
35454c35491
< #line 1319
---
> #line 1215
35456,35463c35493,35509
< #line 1322
<   tmp = get_net_conf(mdev);
< #line 1322
<   if (tmp != 0) {
< #line 1323
<     if ((int )mdev->state.ldv_39979.conn > 8) {
< #line 1324
<       ent = (unsigned long )((((mdev->net_conf)->timeout * 250) / 10) * (mdev->net_conf)->ko_count);
---
> #line 1218
>   rcu_read_lock();
> #line 1219
>   _________p1 = *((struct net_conf * volatile  *)(& tconn->net_conf));
> #line 1219
>   tmp = debug_lockdep_rcu_enabled();
> #line 1219
>   if (tmp != 0 && ! __warned) {
> #line 1219
>     tmp___0 = rcu_read_lock_held();
> #line 1219
>     if (tmp___0 == 0 && 1) {
> #line 1219
>       __warned = 1;
> #line 1219
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared",
>                              1219, "suspicious rcu_dereference_check() usage");
35467,35468d35512
< #line 1326
<     put_net_conf(mdev);
35472,35478c35516,35552
< #line 1328
<   tmp___0 = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 1328
<   if (tmp___0 != 0) {
< #line 1329
<     dt = (unsigned long )(((mdev->ldev)->dc.disk_timeout * 250) / 10);
< #line 1330
---
> #line 1219
>   nc = _________p1;
> #line 1220
>   if ((unsigned long )nc != (unsigned long )((struct net_conf *)0) && (int )mdev->state.ldv_50103.conn > 8) {
> #line 1221
>     ent = (unsigned long )(((nc->timeout * 250U) / 10U) * nc->ko_count);
>   } else {
> 
>   }
> #line 1223
>   tmp___3 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 1223
>   if (tmp___3 != 0) {
> #line 1224
>     _________p1___0 = *((struct disk_conf * volatile  *)(& (mdev->ldev)->disk_conf));
> #line 1224
>     tmp___1 = debug_lockdep_rcu_enabled();
> #line 1224
>     if (tmp___1 != 0 && ! __warned___0) {
> #line 1224
>       tmp___2 = rcu_read_lock_held();
> #line 1224
>       if (tmp___2 == 0 && 1) {
> #line 1224
>         __warned___0 = 1;
> #line 1224
>         lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_req.c.prepared",
>                                1224, "suspicious rcu_dereference_check() usage");
>       } else {
> 
>       }
>     } else {
> 
>     }
> #line 1224
>     dt = (unsigned long )((_________p1___0->disk_timeout * 250U) / 10U);
> #line 1225
35483c35557,35559
< #line 1332
---
> #line 1227
>   rcu_read_unlock();
> #line 1229
35485c35561
< #line 1332
---
> #line 1229
35487c35563
< #line 1332
---
> #line 1229
35489c35565
< #line 1332
---
> #line 1229
35491c35567
< #line 1332
---
> #line 1229
35493c35569
< #line 1332
---
> #line 1229
35495,35496c35571,35572
< #line 1332
<       tmp___1 = _min1 < _min2 ? _min1 : _min2;
---
> #line 1229
>       tmp___4 = _min1 < _min2 ? _min1 : _min2;
35498,35499c35574,35575
< #line 1332
<       tmp___1 = __x;
---
> #line 1229
>       tmp___4 = __x;
35501,35502c35577,35578
< #line 1332
<     tmp___2 = tmp___1;
---
> #line 1229
>     tmp___5 = tmp___4;
35504,35505c35580,35581
< #line 1332
<     tmp___2 = __y;
---
> #line 1229
>     tmp___5 = __y;
35507,35509c35583,35585
< #line 1332
<   et = tmp___2;
< #line 1334
---
> #line 1229
>   et = tmp___5;
> #line 1231
35511c35587
< #line 1335
---
> #line 1232
35516c35592
< #line 1337
---
> #line 1234
35518,35528c35594,35602
< #line 1339
<   spin_lock_irq(& mdev->req_lock);
< #line 1340
<   le = & (mdev->oldest_tle)->requests;
< #line 1341
<   tmp___3 = list_empty((struct list_head  const  *)le);
< #line 1341
<   if (tmp___3 != 0) {
< #line 1342
<     spin_unlock_irq(& mdev->req_lock);
< #line 1343
---
> #line 1236
>   spin_lock_irq(& tconn->req_lock);
> #line 1237
>   req = find_oldest_request(tconn);
> #line 1238
>   if ((unsigned long )req == (unsigned long )((struct drbd_request *)0)) {
> #line 1239
>     spin_unlock_irq(& tconn->req_lock);
> #line 1240
35530c35604
< #line 1344
---
> #line 1241
35535,35543c35609,35611
< #line 1347
<   le = le->prev;
< #line 1348
<   __mptr = (struct list_head  const  *)le;
< #line 1348
<   req = (struct drbd_request *)__mptr + 0xffffffffffffffb8UL;
< #line 1368
<   if (((ent != 0UL && (req->rq_state & 16UL) != 0UL) && ((1 != 0 && 1 != 0) && (long )(req->start_time + ent) - (long )now < 0L)) && (((1 == 0 || 1 == 0) || (long )now - (long )mdev->last_reconnect_jif < 0L) || ((1 == 0 || 1 == 0) || (long )(mdev->last_reconnect_jif + ent) - (long )now < 0L))) {
< #line 1369
---
> #line 1262
>   if (((ent != 0UL && ((unsigned long )req->rq_state & 16UL) != 0UL) && ((1 != 0 && 1 != 0) && (long )(req->start_time + ent) - (long )now < 0L)) && (((1 == 0 || 1 == 0) || (long )now - (long )tconn->last_reconnect_jif < 0L) || ((1 == 0 || 1 == 0) || (long )(tconn->last_reconnect_jif + ent) - (long )now < 0L))) {
> #line 1263
35545,35549c35613,35617
< #line 1370
<     __ns.i = mdev->state.i;
< #line 1370
<     __ns.ldv_39979.conn = 3U;
< #line 1370
---
> #line 1264
>     __ns = drbd_read_state(mdev);
> #line 1264
>     __ns.ldv_40604.conn = 3U;
> #line 1264
35554,35556c35622,35624
< #line 1374
<   if (((dt != 0UL && (int )req->rq_state & 1) && ((1 != 0 && 1 != 0) && (long )(req->start_time + dt) - (long )now < 0L)) && (((1 == 0 || 1 == 0) || (long )now - (long )mdev->last_reattach_jif < 0L) || ((1 == 0 || 1 == 0) || (long )(mdev->last_reattach_jif + dt) - (long )now < 0L))) {
< #line 1375
---
> #line 1268
>   if ((((dt != 0UL && (int )req->rq_state & 1) && (unsigned long )req->w.ldv_50388.mdev == (unsigned long )mdev) && ((1 != 0 && 1 != 0) && (long )(req->start_time + dt) - (long )now < 0L)) && (((1 == 0 || 1 == 0) || (long )now - (long )mdev->last_reattach_jif < 0L) || ((1 == 0 || 1 == 0) || (long )(mdev->last_reattach_jif + dt) - (long )now < 0L))) {
> #line 1269
35558,35559c35626,35627
< #line 1376
<     __drbd_chk_io_error____1(mdev, DRBD_FORCE_DETACH, "request_timer_fn");
---
> #line 1270
>     __drbd_chk_io_error_(mdev, DRBD_FORCE_DETACH, "request_timer_fn");
35563c35631
< #line 1378
---
> #line 1272
35565,35567c35633,35635
< #line 1379
<   spin_unlock_irq(& mdev->req_lock);
< #line 1380
---
> #line 1273
>   spin_unlock_irq(& tconn->req_lock);
> #line 1274
35569,35771c35637
< #line 1381
<   return;
< }
< }
< #line 1383 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
< void ldv_mutex_lock_137(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1388
<   ldv_mutex_lock_lock(ldv_func_arg1);
< #line 1390
<   mutex_lock(ldv_func_arg1);
< #line 1391
<   return;
< }
< }
< #line 1393 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
< void ldv_mutex_unlock_138(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1398
<   ldv_mutex_unlock_lock(ldv_func_arg1);
< #line 1400
<   mutex_unlock(ldv_func_arg1);
< #line 1401
<   return;
< }
< }
< #line 1403 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
< void ldv_mutex_lock_139(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1408
<   ldv_mutex_lock_mutex_of_device(ldv_func_arg1);
< #line 1410
<   mutex_lock(ldv_func_arg1);
< #line 1411
<   return;
< }
< }
< #line 1413 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
< int ldv_mutex_trylock_140(struct mutex *ldv_func_arg1 ) 
< { 
<   ldv_func_ret_type___2 ldv_func_res ;
<   int tmp ;
<   int tmp___0 ;
< 
<   {
< #line 1418
<   tmp = mutex_trylock(ldv_func_arg1);
< #line 1418
<   ldv_func_res = tmp;
< #line 1420
<   tmp___0 = ldv_mutex_trylock_mutex_of_device(ldv_func_arg1);
< #line 1420
<   return (tmp___0);
< #line 1422
<   return (ldv_func_res);
< }
< }
< #line 1425 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
< void ldv_mutex_unlock_141(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1430
<   ldv_mutex_unlock_mutex_of_device(ldv_func_arg1);
< #line 1432
<   mutex_unlock(ldv_func_arg1);
< #line 1433
<   return;
< }
< }
< #line 1435 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
< void ldv_mutex_lock_142(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1440
<   ldv_mutex_lock_mtx_of_percpu_rw_semaphore(ldv_func_arg1);
< #line 1442
<   mutex_lock(ldv_func_arg1);
< #line 1443
<   return;
< }
< }
< #line 1445 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
< void ldv_mutex_unlock_143(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1450
<   ldv_mutex_unlock_mtx_of_percpu_rw_semaphore(ldv_func_arg1);
< #line 1452
<   mutex_unlock(ldv_func_arg1);
< #line 1453
<   return;
< }
< }
< #line 1455 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
< void ldv_mutex_lock_144(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1460
<   ldv_mutex_lock_mtx_of_percpu_rw_semaphore(ldv_func_arg1);
< #line 1462
<   mutex_lock(ldv_func_arg1);
< #line 1463
<   return;
< }
< }
< #line 1465 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
< void ldv_mutex_unlock_145(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1470
<   ldv_mutex_unlock_mtx_of_percpu_rw_semaphore(ldv_func_arg1);
< #line 1472
<   mutex_unlock(ldv_func_arg1);
< #line 1473
<   return;
< }
< }
< #line 1475 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
< void ldv_mutex_lock_146(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1480
<   ldv_mutex_lock_cred_guard_mutex_of_signal_struct(ldv_func_arg1);
< #line 1482
<   mutex_lock(ldv_func_arg1);
< #line 1483
<   return;
< }
< }
< #line 1485 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
< void ldv_mutex_unlock_147(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1490
<   ldv_mutex_unlock_cred_guard_mutex_of_signal_struct(ldv_func_arg1);
< #line 1492
<   mutex_unlock(ldv_func_arg1);
< #line 1493
<   return;
< }
< }
< #line 1495 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
< void ldv_mutex_lock_148(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1500
<   ldv_mutex_lock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 1502
<   mutex_lock(ldv_func_arg1);
< #line 1503
<   return;
< }
< }
< #line 1505 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
< void ldv_mutex_unlock_149(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1510
<   ldv_mutex_unlock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 1512
<   mutex_unlock(ldv_func_arg1);
< #line 1513
<   return;
< }
< }
< #line 1515 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
< void ldv_mutex_unlock_150(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1520
<   ldv_mutex_unlock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 1522
<   mutex_unlock(ldv_func_arg1);
< #line 1523
---
> #line 1275
35802c35668
<   goto ldv_5490;
---
>   goto ldv_5547;
35810c35676
<   goto ldv_5490;
---
>   goto ldv_5547;
35818c35684
<   goto ldv_5490;
---
>   goto ldv_5547;
35826c35692
<   goto ldv_5490;
---
>   goto ldv_5547;
35831c35697
<   ldv_5490: ;
---
>   ldv_5547: ;
35836,35908c35702,35704
< #line 171 "include/linux/mutex.h"
< int ldv_mutex_trylock_168(struct mutex *ldv_func_arg1 ) ;
< #line 176
< void ldv_mutex_unlock_166(struct mutex *ldv_func_arg1 ) ;
< #line 180
< void ldv_mutex_unlock_169(struct mutex *ldv_func_arg1 ) ;
< #line 184
< void ldv_mutex_unlock_171(struct mutex *ldv_func_arg1 ) ;
< #line 188
< void ldv_mutex_unlock_173(struct mutex *ldv_func_arg1 ) ;
< #line 192
< void ldv_mutex_unlock_175(struct mutex *ldv_func_arg1 ) ;
< #line 196
< void ldv_mutex_unlock_177(struct mutex *ldv_func_arg1 ) ;
< #line 200
< void ldv_mutex_unlock_178(struct mutex *ldv_func_arg1 ) ;
< #line 10 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
< void ldv_mutex_lock_165(struct mutex *ldv_func_arg1 ) ;
< #line 14
< void ldv_mutex_lock_167(struct mutex *ldv_func_arg1 ) ;
< #line 18
< void ldv_mutex_lock_170(struct mutex *ldv_func_arg1 ) ;
< #line 22
< void ldv_mutex_lock_172(struct mutex *ldv_func_arg1 ) ;
< #line 26
< void ldv_mutex_lock_174(struct mutex *ldv_func_arg1 ) ;
< #line 30
< void ldv_mutex_lock_176(struct mutex *ldv_func_arg1 ) ;
< #line 787 "include/linux/blkdev.h"
< __inline static struct request_queue *bdev_get_queue(struct block_device *bdev ) 
< { 
< 
< 
<   {
< #line 789
<   return ((bdev->bd_disk)->queue);
< }
< }
< #line 1098 "include/linux/blkdev.h"
< __inline static unsigned short queue_logical_block_size(struct request_queue *q ) 
< { 
<   int retval ;
< 
<   {
< #line 1100
<   retval = 512;
< #line 1102
<   if ((unsigned long )q != (unsigned long )((struct request_queue *)0) && (unsigned int )q->limits.logical_block_size != 0U) {
< #line 1103
<     retval = (int )q->limits.logical_block_size;
<   } else {
< 
<   }
< #line 1105
<   return ((unsigned short )retval);
< }
< }
< #line 1108 "include/linux/blkdev.h"
< __inline static unsigned short bdev_logical_block_size(struct block_device *bdev ) 
< { 
<   struct request_queue *tmp ;
<   unsigned short tmp___0 ;
< 
<   {
< #line 1110
<   tmp = bdev_get_queue(bdev);
< #line 1110
<   tmp___0 = queue_logical_block_size(tmp);
< #line 1110
<   return (tmp___0);
< }
< }
< #line 243 "include/linux/lru_cache.h"
---
> #line 6 "include/linux/crc32c.h"
> extern u32 crc32c(u32  , void const   * , unsigned int  ) ;
> #line 254 "include/linux/lru_cache.h"
35910,35912c35706
< #line 245
< extern void lc_set(struct lru_cache * , unsigned int  , int  ) ;
< #line 246
---
> #line 257
35914c35708
< #line 248
---
> #line 259
35916c35710
< #line 250
---
> #line 261
35918c35712
< #line 251
---
> #line 262
35920,35923c35714,35717
< #line 252
< extern void lc_changed(struct lru_cache * , struct lc_element * ) ;
< #line 267 "include/linux/lru_cache.h"
< __inline static int lc_try_lock(struct lru_cache *lc ) 
---
> #line 263
> extern void lc_committed(struct lru_cache * ) ;
> #line 279 "include/linux/lru_cache.h"
> __inline static int lc_try_lock_for_transaction(struct lru_cache *lc ) 
35928,35930c35722,35724
< #line 269
<   tmp = test_and_set_bit(1, (unsigned long volatile   *)(& lc->flags));
< #line 269
---
> #line 281
>   tmp = test_and_set_bit(2, (unsigned long volatile   *)(& lc->flags));
> #line 281
35934c35728
< #line 276 "include/linux/lru_cache.h"
---
> #line 299 "include/linux/lru_cache.h"
35940c35734
< #line 278
---
> #line 301
35942,35944c35736,35738
< #line 279
<   __asm__  volatile   ("": : : "memory");
< #line 280
---
> #line 302
>   clear_bit_unlock(2U, (unsigned long volatile   *)(& lc->flags));
> #line 303
35948,35963c35742,35744
< #line 282 "include/linux/lru_cache.h"
< __inline static int lc_is_used(struct lru_cache *lc , unsigned int enr ) 
< { 
<   struct lc_element *e ;
<   struct lc_element *tmp ;
< 
<   {
< #line 284
<   tmp = lc_find(lc, enr);
< #line 284
<   e = tmp;
< #line 285
<   return ((unsigned long )e != (unsigned long )((struct lc_element *)0) && e->refcnt != 0U);
< }
< }
< #line 291
---
> #line 305
> extern bool lc_is_used(struct lru_cache * , unsigned int  ) ;
> #line 310
35965,35967c35746
< #line 292
< extern unsigned int lc_index_of(struct lru_cache * , struct lc_element * ) ;
< #line 1608 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1454 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
35969c35748
< #line 1610
---
> #line 1456
35972,35976c35751
< #line 1737
< int drbd_al_read_log(struct drbd_conf *mdev , struct drbd_backing_dev *bdev ) ;
< #line 1747
< void drbd_al_apply_to_bm(struct drbd_conf *mdev ) ;
< #line 1748
---
> #line 1597
35978,35980c35753,35755
< #line 1756
< void drbd_bcast_sync_progress(struct drbd_conf *mdev ) ;
< #line 1890 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1614
> void drbd_bcast_event(struct drbd_conf *mdev , struct sib_info  const  *sib ) ;
> #line 1675 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
35983a35759,35761
>   enum drbd_io_error_p ep ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
35984a35763,35764
>   int tmp___0 ;
>   int tmp___1 ;
35989,35992c35769,35799
< #line 1894
<   switch ((mdev->ldev)->dc.on_io_error) {
<   case 0: ;
< #line 1896
---
> #line 1681
>   rcu_read_lock();
> #line 1682
>   _________p1 = *((struct disk_conf * volatile  *)(& (mdev->ldev)->disk_conf));
> #line 1682
>   tmp = debug_lockdep_rcu_enabled();
> #line 1682
>   if (tmp != 0 && ! __warned) {
> #line 1682
>     tmp___0 = rcu_read_lock_held();
> #line 1682
>     if (tmp___0 == 0 && 1) {
> #line 1682
>       __warned = 1;
> #line 1682
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h",
>                              1682, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1682
>   ep = (enum drbd_io_error_p )_________p1->on_io_error;
> #line 1683
>   rcu_read_unlock();
> #line 1684
>   switch ((unsigned int )ep) {
>   case 0U: ;
> #line 1686
35994,35998c35801,35805
< #line 1897
<     tmp = ___ratelimit(& drbd_ratelimit_state, "__drbd_chk_io_error_");
< #line 1897
<     if (tmp != 0) {
< #line 1898
---
> #line 1687
>     tmp___1 = ___ratelimit(& drbd_ratelimit_state, "__drbd_chk_io_error_");
> #line 1687
>     if (tmp___1 != 0) {
> #line 1688
36004,36010c35811,35817
< #line 1899
<     if ((int )mdev->state.ldv_39979.disk > 4) {
< #line 1900
<       __ns.i = mdev->state.i;
< #line 1900
<       __ns.ldv_39979.disk = 4U;
< #line 1900
---
> #line 1689
>     if ((int )mdev->state.ldv_50103.disk > 4) {
> #line 1690
>       __ns = drbd_read_state(mdev);
> #line 1690
>       __ns.ldv_40604.disk = 4U;
> #line 1690
36015,36016c35822,35823
< #line 1901
<     goto ldv_50242;
---
> #line 1691
>     goto ldv_51379;
36020,36024c35827,35831
<   case 2: ;
<   case 1: 
< #line 1926
<   drbd_set_flag(mdev, WAS_IO_ERROR);
< #line 1927
---
>   case 2U: ;
>   case 1U: 
> #line 1716
>   set_bit(12U, (unsigned long volatile   *)(& mdev->flags));
> #line 1717
36026,36027c35833,35834
< #line 1928
<     drbd_set_flag(mdev, WAS_READ_ERROR);
---
> #line 1718
>     set_bit(13U, (unsigned long volatile   *)(& mdev->flags));
36031c35838
< #line 1929
---
> #line 1719
36033,36034c35840,35841
< #line 1930
<     drbd_set_flag(mdev, FORCE_DETACH);
---
> #line 1720
>     set_bit(14U, (unsigned long volatile   *)(& mdev->flags));
36038,36044c35845,35851
< #line 1931
<   if ((int )mdev->state.ldv_39979.disk > 2) {
< #line 1932
<     __ns___0.i = mdev->state.i;
< #line 1932
<     __ns___0.ldv_39979.disk = 2U;
< #line 1932
---
> #line 1721
>   if ((int )mdev->state.ldv_50103.disk > 2) {
> #line 1722
>     __ns___0 = drbd_read_state(mdev);
> #line 1722
>     __ns___0.ldv_40604.disk = 2U;
> #line 1722
36046c35853
< #line 1933
---
> #line 1723
36052,36053c35859,35860
< #line 1936
<   goto ldv_50242;
---
> #line 1726
>   goto ldv_51379;
36055,36056c35862,35863
<   ldv_50242: ;
< #line 1939
---
>   ldv_51379: ;
> #line 1729
36060c35867
< #line 1949 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1739 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
36068c35875
< #line 1952
---
> #line 1742
36070,36072c35877,35879
< #line 1954
<     tmp = spinlock_check(& mdev->req_lock);
< #line 1954
---
> #line 1744
>     tmp = spinlock_check(& (mdev->tconn)->req_lock);
> #line 1744
36074c35881
< #line 1955
---
> #line 1745
36076,36077c35883,35884
< #line 1956
<     spin_unlock_irqrestore(& mdev->req_lock, flags);
---
> #line 1746
>     spin_unlock_irqrestore(& (mdev->tconn)->req_lock, flags);
36081c35888
< #line 1958
---
> #line 1748
36085,36087c35892,35959
< #line 137 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
< int w_al_write_transaction(struct drbd_conf *mdev , struct drbd_work *w , int unused ) ;
< #line 139 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
---
> #line 1770 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static sector_t drbd_md_first_sector(struct drbd_backing_dev *bdev ) 
> { 
>   int meta_dev_idx ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
>   sector_t tmp___1 ;
> 
>   {
> #line 1774
>   rcu_read_lock();
> #line 1775
>   _________p1 = *((struct disk_conf * volatile  *)(& bdev->disk_conf));
> #line 1775
>   tmp = debug_lockdep_rcu_enabled();
> #line 1775
>   if (tmp != 0 && ! __warned) {
> #line 1775
>     tmp___0 = rcu_read_lock_held();
> #line 1775
>     if (tmp___0 == 0 && 1) {
> #line 1775
>       __warned = 1;
> #line 1775
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h",
>                              1775, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1775
>   meta_dev_idx = _________p1->meta_dev_idx;
> #line 1776
>   rcu_read_unlock();
> #line 1778
>   tmp___1 = _drbd_md_first_sector(meta_dev_idx, bdev);
> #line 1778
>   return (tmp___1);
> }
> }
> #line 1887 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static void drbd_queue_work_front(struct drbd_work_queue *q , struct drbd_work *w ) 
> { 
>   unsigned long flags ;
>   raw_spinlock_t *tmp ;
> 
>   {
> #line 1890
>   tmp = spinlock_check(& q->q_lock);
> #line 1890
>   flags = _raw_spin_lock_irqsave(tmp);
> #line 1891
>   list_add(& w->list, & q->q);
> #line 1892
>   spin_unlock_irqrestore(& q->q_lock, flags);
> #line 1893
>   __wake_up(& q->q_wait, 3U, 1, 0);
> #line 1894
>   return;
> }
> }
> #line 115 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared"
> static int al_write_transaction(struct drbd_conf *mdev ) ;
> #line 117 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared"
36097c35969
< #line 143
---
> #line 121
36099,36102c35971,35974
< #line 143
<   if (r == 0 || (int )mdev->state.ldv_39979.disk <= 2) {
< #line 143
<     goto ldv_50542;
---
> #line 121
>   if (r == 0 || (int )mdev->state.ldv_50103.disk <= 2) {
> #line 121
>     goto ldv_51720;
36106c35978
< #line 143
---
> #line 121
36108c35980
< #line 143
---
> #line 121
36110c35982
< #line 143
---
> #line 121
36112c35984
< #line 143
---
> #line 121
36114c35986
< #line 143
---
> #line 121
36116c35988
< #line 143
---
> #line 121
36118,36119c35990,35991
<   ldv_50545: 
< #line 143
---
>   ldv_51723: 
> #line 121
36121c35993
< #line 143
---
> #line 121
36123,36126c35995,35998
< #line 143
<   if (r == 0 || (int )mdev->state.ldv_39979.disk <= 2) {
< #line 143
<     goto ldv_50544;
---
> #line 121
>   if (r == 0 || (int )mdev->state.ldv_50103.disk <= 2) {
> #line 121
>     goto ldv_51722;
36130c36002
< #line 143
---
> #line 121
36132,36135c36004,36007
< #line 143
<   goto ldv_50545;
<   ldv_50544: 
< #line 143
---
> #line 121
>   goto ldv_51723;
>   ldv_51722: 
> #line 121
36137,36138c36009,36010
<   ldv_50542: ;
< #line 147
---
>   ldv_51720: ;
> #line 125
36140c36012
< #line 147
---
> #line 125
36142c36014
< #line 147
---
> #line 125
36145c36017
< #line 147
---
> #line 125
36148c36020
< #line 147
---
> #line 125
36152c36024
< #line 150 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
---
> #line 128 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared"
36158c36030
< #line 152
---
> #line 130
36160c36032
< #line 152
---
> #line 130
36162c36034
< #line 153
---
> #line 131
36167c36039
< #line 154
---
> #line 132
36171c36043
< #line 156 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
---
> #line 134 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared"
36175a36048,36051
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
36178,36180c36054,36056
<   struct task_struct *tmp ;
<   int tmp___0 ;
<   int tmp___1 ;
---
>   struct task_struct *tmp___1 ;
>   int tmp___2 ;
>   int tmp___3 ;
36183,36185c36059,36088
< #line 159
<   dt = (long )((bdev->dc.disk_timeout * 250) / 10);
< #line 160
---
> #line 139
>   rcu_read_lock();
> #line 140
>   _________p1 = *((struct disk_conf * volatile  *)(& bdev->disk_conf));
> #line 140
>   tmp = debug_lockdep_rcu_enabled();
> #line 140
>   if (tmp != 0 && ! __warned) {
> #line 140
>     tmp___0 = rcu_read_lock_held();
> #line 140
>     if (tmp___0 == 0 && 1) {
> #line 140
>       __warned = 1;
> #line 140
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared",
>                              140, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 140
>   dt = (long )_________p1->disk_timeout;
> #line 141
>   rcu_read_unlock();
> #line 142
>   dt = (dt * 250L) / 10L;
> #line 143
36187c36090
< #line 161
---
> #line 144
36192c36095
< #line 163
---
> #line 146
36194c36097
< #line 163
---
> #line 146
36196,36202c36099,36105
< #line 163
<     tmp___1 = drbd_test_flag(mdev, FORCE_DETACH);
< #line 163
<     if (tmp___1 == 0) {
< #line 163
<       tmp = get_current();
< #line 163
---
> #line 146
>     tmp___3 = constant_test_bit(14U, (unsigned long const volatile   *)(& mdev->flags));
> #line 146
>     if (tmp___3 == 0) {
> #line 146
>       tmp___1 = get_current();
> #line 146
36204,36206c36107,36109
< #line 163
<       __wait.private = (void *)tmp;
< #line 163
---
> #line 146
>       __wait.private = (void *)tmp___1;
> #line 146
36208c36111
< #line 163
---
> #line 146
36210c36113
< #line 163
---
> #line 146
36212,36213c36115,36116
<       ldv_50558: 
< #line 163
---
>       ldv_51739: 
> #line 146
36215c36118
< #line 163
---
> #line 146
36217,36218c36120,36121
< #line 163
<         goto ldv_50557;
---
> #line 146
>         goto ldv_51738;
36220,36225c36123,36128
< #line 163
<         tmp___0 = drbd_test_flag(mdev, FORCE_DETACH);
< #line 163
<         if (tmp___0 != 0) {
< #line 163
<           goto ldv_50557;
---
> #line 146
>         tmp___2 = constant_test_bit(14U, (unsigned long const volatile   *)(& mdev->flags));
> #line 146
>         if (tmp___2 != 0) {
> #line 146
>           goto ldv_51738;
36230c36133
< #line 163
---
> #line 146
36232c36135
< #line 163
---
> #line 146
36234,36235c36137,36138
< #line 163
<         goto ldv_50557;
---
> #line 146
>         goto ldv_51738;
36239,36242c36142,36145
< #line 163
<       goto ldv_50558;
<       ldv_50557: 
< #line 163
---
> #line 146
>       goto ldv_51739;
>       ldv_51738: 
> #line 146
36250c36153
< #line 163
---
> #line 146
36252c36155
< #line 165
---
> #line 148
36254c36157
< #line 166
---
> #line 149
36256c36159
< #line 167
---
> #line 150
36261c36164
< #line 169
---
> #line 152
36265c36168
< #line 171 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
---
> #line 154 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared"
36270c36173
<   int ok ;
---
>   int err ;
36277c36180
< #line 179
---
> #line 162
36279c36182
< #line 180
---
> #line 163
36281c36184
< #line 182
---
> #line 165
36283,36285c36186,36188
< #line 182
<     tmp = drbd_test_flag(mdev, MD_NO_FUA);
< #line 182
---
> #line 165
>     tmp = constant_test_bit(7U, (unsigned long const volatile   *)(& mdev->flags));
> #line 165
36287c36190
< #line 183
---
> #line 166
36295c36198
< #line 184
---
> #line 167
36297c36200
< #line 186
---
> #line 169
36299c36202
< #line 187
---
> #line 170
36301c36204
< #line 188
---
> #line 171
36303c36206,36208
< #line 189
---
> #line 172
>   err = -5;
> #line 173
36305,36309c36210,36212
< #line 189
<   ok = tmp___0 == size;
< #line 190
<   if (ok == 0) {
< #line 191
---
> #line 173
>   if (tmp___0 != size) {
> #line 174
36314c36217
< #line 192
---
> #line 175
36316c36219
< #line 193
---
> #line 176
36318c36221
< #line 194
---
> #line 177
36320c36223
< #line 196
---
> #line 179
36322c36225
< #line 196
---
> #line 179
36324c36227
< #line 197
---
> #line 180
36326,36328c36229,36231
< #line 198
<     ok = 0;
< #line 199
---
> #line 181
>     err = -19;
> #line 182
36333c36236
< #line 202
---
> #line 185
36335c36238
< #line 203
---
> #line 186
36337c36240
< #line 204
---
> #line 187
36339c36242
< #line 204
---
> #line 187
36341c36244
< #line 205
---
> #line 188
36344c36247
< #line 207
---
> #line 190
36347c36250
< #line 208
---
> #line 191
36349,36350c36252,36258
< #line 209
<   ok = (int )bio->bi_flags & 1 && mdev->md_io.error == 0;
---
> #line 192
>   if ((int )bio->bi_flags & 1) {
> #line 193
>     err = mdev->md_io.error;
>   } else {
> 
>   }
36352c36260
< #line 212
---
> #line 196
36354,36355c36262,36263
< #line 213
<   return (ok);
---
> #line 197
>   return (err);
36358c36266
< #line 216 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
---
> #line 200 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared"
36362,36365c36270
<   int logical_block_size ;
<   int mask ;
<   int ok ;
<   int offset ;
---
>   int err ;
36369,36376c36274,36278
<   unsigned short tmp___1 ;
<   void *p ;
<   void *tmp___2 ;
<   void *hp ;
<   void *tmp___3 ;
<   long tmp___4 ;
<   size_t __len ;
<   void *__ret ;
---
>   struct _ddebug descriptor ;
>   struct task_struct *tmp___1 ;
>   struct task_struct *tmp___2 ;
>   long tmp___3 ;
>   struct task_struct *tmp___4 ;
36378c36280
<   struct task_struct *tmp___6 ;
---
>   sector_t tmp___6 ;
36380,36387d36281
<   sector_t tmp___8 ;
<   long tmp___9 ;
<   void *p___0 ;
<   void *tmp___10 ;
<   void *hp___0 ;
<   void *tmp___11 ;
<   size_t __len___0 ;
<   void *__ret___0 ;
36390,36392c36284
< #line 220
<   offset = 0;
< #line 221
---
> #line 204
36394c36286
< #line 223
---
> #line 206
36396c36288
< #line 223
---
> #line 206
36398c36290
< #line 223
---
> #line 206
36400,36401c36292,36293
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<             223);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared",
>             206);
36405c36297
< #line 225
---
> #line 208
36408c36300
< #line 225
---
> #line 208
36410,36426c36302,36307
< #line 225
<     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"),
<                          "i" (225), "i" (12UL));
<     ldv_50583: ;
< #line 225
<     goto ldv_50583;
<   } else {
< 
<   }
< #line 227
<   tmp___1 = bdev_logical_block_size(bdev->md_bdev);
< #line 227
<   logical_block_size = (int )tmp___1;
< #line 228
<   if (logical_block_size == 0) {
< #line 229
<     logical_block_size = 512;
---
> #line 208
>     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared"),
>                          "i" (208), "i" (12UL));
>     ldv_51761: ;
> #line 208
>     goto ldv_51761;
36430,36495c36311,36335
< #line 232
<   if (logical_block_size != 512) {
< #line 233
<     mask = logical_block_size / 512 + -1;
< #line 234
<     if ((mask != 1 && mask != 3) && mask != 7) {
< #line 234
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mask == 1 || mask == 3 || mask == 7 ) in %s:%d\n",
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<               234);
<     } else {
< 
<     }
< #line 235
<     if ((mask + 1) * 512 != logical_block_size) {
< #line 235
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( logical_block_size == (mask+1) * MD_SECTOR_SIZE ) in %s:%d\n",
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<               235);
<     } else {
< 
<     }
< #line 236
<     offset = (int )((unsigned int )sector & (unsigned int )mask);
< #line 237
<     sector = (sector_t )(~ mask) & sector;
< #line 238
<     iop = mdev->md_io_tmpp;
< #line 240
<     if (rw & 1) {
< #line 243
<       tmp___2 = lowmem_page_address((struct page  const  *)mdev->md_io_page);
< #line 243
<       p = tmp___2;
< #line 244
<       tmp___3 = lowmem_page_address((struct page  const  *)mdev->md_io_tmpp);
< #line 244
<       hp = tmp___3;
< #line 246
<       ok = _drbd_md_sync_page_io(mdev, bdev, iop, sector, 0, logical_block_size);
< #line 249
<       tmp___4 = __builtin_expect(ok == 0, 0L);
< #line 249
<       if (tmp___4 != 0L) {
< #line 250
<         dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "drbd_md_sync_page_io(,%llus,READ [logical_block_size!=512]) failed!\n",
<                 (unsigned long long )sector);
< #line 253
<         return (0);
<       } else {
< 
<       }
< #line 256
<       __len = 512UL;
< #line 256
<       if (__len > 63UL) {
< #line 256
<         __ret = __memcpy(hp + (unsigned long )(offset * 512), (void const   *)p, __len);
<       } else {
< #line 256
<         __ret = __builtin_memcpy(hp + (unsigned long )(offset * 512), (void const   *)p,
<                                  __len);
<       }
<     } else {
< 
<     }
---
> #line 210
>   descriptor.modname = "drbd";
> #line 210
>   descriptor.function = "drbd_md_sync_page_io";
> #line 210
>   descriptor.filename = "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared";
> #line 210
>   descriptor.format = "meta_data io: %s [%d]:%s(,%llus,%s)\n";
> #line 210
>   descriptor.lineno = 212U;
> #line 210
>   descriptor.flags = 0U;
> #line 210
>   tmp___3 = __builtin_expect((long )descriptor.flags & 1L, 0L);
> #line 210
>   if (tmp___3 != 0L) {
> #line 210
>     tmp___1 = get_current();
> #line 210
>     tmp___2 = get_current();
> #line 210
>     __dynamic_dev_dbg(& descriptor, (struct device  const  *)(& (mdev->vdisk)->part0.__dev),
>                       "meta_data io: %s [%d]:%s(,%llus,%s)\n", (char *)(& tmp___2->comm),
>                       tmp___1->pid, "drbd_md_sync_page_io", (unsigned long long )sector,
>                       rw & 1 ? (char *)"WRITE" : (char *)"READ");
36499,36503c36339,36345
< #line 260
<   tmp___7 = drbd_md_first_sector(bdev);
< #line 260
<   if (tmp___7 > sector) {
< #line 262
---
> #line 214
>   tmp___6 = drbd_md_first_sector(bdev);
> #line 214
>   if (tmp___6 > sector) {
> #line 216
>     tmp___4 = get_current();
> #line 216
36505,36507c36347
< #line 262
<     tmp___6 = get_current();
< #line 262
---
> #line 216
36509c36349
<               (char *)(& tmp___6->comm), tmp___5->pid, "drbd_md_sync_page_io", (unsigned long long )sector,
---
>               (char *)(& tmp___5->comm), tmp___4->pid, "drbd_md_sync_page_io", (unsigned long long )sector,
36512,36516c36352,36358
< #line 260
<     tmp___8 = drbd_md_last_sector(bdev);
< #line 260
<     if (tmp___8 < sector) {
< #line 262
---
> #line 214
>     tmp___7 = drbd_md_last_sector(bdev);
> #line 214
>     if (sector + 7UL > tmp___7) {
> #line 216
>       tmp___4 = get_current();
> #line 216
36518,36520c36360
< #line 262
<       tmp___6 = get_current();
< #line 262
---
> #line 216
36522c36362
<                 (char *)(& tmp___6->comm), tmp___5->pid, "drbd_md_sync_page_io", (unsigned long long )sector,
---
>                 (char *)(& tmp___5->comm), tmp___4->pid, "drbd_md_sync_page_io", (unsigned long long )sector,
36528,36563c36368,36375
< #line 266
<   ok = _drbd_md_sync_page_io(mdev, bdev, iop, sector, rw, logical_block_size);
< #line 267
<   tmp___9 = __builtin_expect(ok == 0, 0L);
< #line 267
<   if (tmp___9 != 0L) {
< #line 268
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "drbd_md_sync_page_io(,%llus,%s) failed!\n",
<             (unsigned long long )sector, rw & 1 ? (char *)"WRITE" : (char *)"READ");
< #line 270
<     return (0);
<   } else {
< 
<   }
< #line 273
<   if (logical_block_size != 512 && (rw & 1) == 0) {
< #line 274
<     tmp___10 = lowmem_page_address((struct page  const  *)mdev->md_io_page);
< #line 274
<     p___0 = tmp___10;
< #line 275
<     tmp___11 = lowmem_page_address((struct page  const  *)mdev->md_io_tmpp);
< #line 275
<     hp___0 = tmp___11;
< #line 277
<     __len___0 = 512UL;
< #line 277
<     if (__len___0 > 63UL) {
< #line 277
<       __ret___0 = __memcpy(p___0, (void const   *)hp___0 + (unsigned long )(offset * 512),
<                            __len___0);
<     } else {
< #line 277
<       __ret___0 = __builtin_memcpy(p___0, (void const   *)hp___0 + (unsigned long )(offset * 512),
<                                    __len___0);
<     }
---
> #line 220
>   err = _drbd_md_sync_page_io(mdev, bdev, iop, sector, rw, 4096);
> #line 221
>   if (err != 0) {
> #line 222
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "drbd_md_sync_page_io(,%llus,%s) failed with error %d\n",
>             (unsigned long long )sector, rw & 1 ? (char *)"WRITE" : (char *)"READ",
>             err);
36567,36568c36379,36380
< #line 280
<   return (ok);
---
> #line 225
>   return (err);
36571c36383
< #line 283 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
---
> #line 228 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared"
36576d36387
<   unsigned long al_flags ;
36585,36587c36396
< #line 287
<   al_flags = 0UL;
< #line 290
---
> #line 234
36589c36398
< #line 291
---
> #line 235
36591c36400
< #line 292
---
> #line 236
36594c36403
< #line 292
---
> #line 236
36596c36405
< #line 293
---
> #line 237
36598c36407
< #line 293
---
> #line 237
36600c36409
< #line 294
---
> #line 238
36602c36411
< #line 294
---
> #line 238
36604c36413
< #line 295
---
> #line 239
36606c36415
< #line 295
---
> #line 239
36608c36417
< #line 296
---
> #line 240
36610c36419
< #line 297
---
> #line 241
36612c36421
< #line 298
---
> #line 242
36617c36426
< #line 299
---
> #line 243
36625c36434
< #line 302
---
> #line 246
36627,36629c36436
< #line 303
<   al_flags = (mdev->act_log)->flags;
< #line 304
---
> #line 247
36631c36438
< #line 315
---
> #line 248
36635,36636c36442,36443
< #line 318 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
< void drbd_al_begin_io(struct drbd_conf *mdev , sector_t sector ) 
---
> #line 251 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared"
> void drbd_al_begin_io(struct drbd_conf *mdev , struct drbd_interval *i ) 
36637a36445,36446
>   unsigned int first ;
>   unsigned int last ;
36639,36640c36448
<   struct lc_element *al_ext ;
<   struct update_al_work al_work ;
---
>   bool locked ;
36641a36450
>   struct lc_element *tmp___0 ;
36643c36452,36462
<   struct task_struct *tmp___0 ;
---
>   struct task_struct *tmp___1 ;
>   struct lc_element *tmp___2 ;
>   int tmp___3 ;
>   wait_queue_t __wait___0 ;
>   struct task_struct *tmp___4 ;
>   int tmp___5 ;
>   bool write_al_updates ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp___6 ;
>   int tmp___7 ;
36646,36648c36465,36480
< #line 320
<   enr = (unsigned int )(sector >> 13);
< #line 324
---
> #line 255
>   first = (unsigned int )(i->sector >> 13);
> #line 256
>   last = i->size != 0U ? (unsigned int )(((i->sector + (sector_t )(i->size >> 9)) - 1UL) >> 13) : first;
> #line 258
>   locked = 0;
> #line 261
>   if (first > last) {
> #line 261
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( first <= last ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared",
>             261);
>   } else {
> 
>   }
> #line 262
36650c36482
< #line 324
---
> #line 262
36652c36484
< #line 324
---
> #line 262
36654,36655c36486,36487
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<             324);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared",
>             262);
36659,36664c36491,36501
< #line 326
<   al_ext = _al_get(mdev, enr);
< #line 326
<   if ((unsigned long )al_ext != (unsigned long )((struct lc_element *)0)) {
< #line 326
<     goto ldv_50613;
---
> #line 264
>   enr = first;
> #line 264
>   goto ldv_51787;
>   ldv_51786: 
> #line 265
>   tmp___0 = _al_get(mdev, enr);
> #line 265
>   if ((unsigned long )tmp___0 != (unsigned long )((struct lc_element *)0)) {
> #line 265
>     goto ldv_51782;
36668,36670c36505,36507
< #line 326
<   tmp___0 = get_current();
< #line 326
---
> #line 265
>   tmp___1 = get_current();
> #line 265
36672,36674c36509,36511
< #line 326
<   __wait.private = (void *)tmp___0;
< #line 326
---
> #line 265
>   __wait.private = (void *)tmp___1;
> #line 265
36676c36513
< #line 326
---
> #line 265
36678c36515
< #line 326
---
> #line 265
36680,36681c36517,36518
<   ldv_50616: 
< #line 326
---
>   ldv_51785: 
> #line 265
36683,36688c36520,36525
< #line 326
<   al_ext = _al_get(mdev, enr);
< #line 326
<   if ((unsigned long )al_ext != (unsigned long )((struct lc_element *)0)) {
< #line 326
<     goto ldv_50615;
---
> #line 265
>   tmp___2 = _al_get(mdev, enr);
> #line 265
>   if ((unsigned long )tmp___2 != (unsigned long )((struct lc_element *)0)) {
> #line 265
>     goto ldv_51784;
36692c36529
< #line 326
---
> #line 265
36694,36697c36531,36534
< #line 326
<   goto ldv_50616;
<   ldv_50615: 
< #line 326
---
> #line 265
>   goto ldv_51785;
>   ldv_51784: 
> #line 265
36699,36724c36536,36656
<   ldv_50613: ;
< #line 328
<   if (al_ext->lc_number != enr) {
< #line 335
<     init_completion(& al_work.event);
< #line 336
<     al_work.al_ext = al_ext;
< #line 337
<     al_work.enr = enr;
< #line 338
<     al_work.old_enr = al_ext->lc_number;
< #line 339
<     al_work.w.cb = & w_al_write_transaction;
< #line 340
<     drbd_queue_work_front(& mdev->data.work, & al_work.w);
< #line 341
<     wait_for_completion(& al_work.event);
< #line 343
<     mdev->al_writ_cnt = mdev->al_writ_cnt + 1U;
< #line 345
<     spin_lock_irq(& mdev->al_lock);
< #line 346
<     lc_changed(mdev->act_log, al_ext);
< #line 347
<     spin_unlock_irq(& mdev->al_lock);
< #line 348
---
>   ldv_51782: 
> #line 264
>   enr = enr + 1U;
>   ldv_51787: ;
> #line 264
>   if (enr <= last) {
> #line 265
>     goto ldv_51786;
>   } else {
> 
>   }
> 
> #line 270
>   if ((mdev->act_log)->pending_changes == 0U) {
> #line 270
>     goto ldv_51789;
>   } else {
> #line 270
>     tmp___3 = lc_try_lock_for_transaction(mdev->act_log);
> #line 270
>     locked = tmp___3 != 0;
> #line 270
>     if ((int )locked) {
> #line 270
>       goto ldv_51789;
>     } else {
> 
>     }
>   }
> #line 270
>   tmp___4 = get_current();
> #line 270
>   __wait___0.flags = 0U;
> #line 270
>   __wait___0.private = (void *)tmp___4;
> #line 270
>   __wait___0.func = & autoremove_wake_function;
> #line 270
>   __wait___0.task_list.next = & __wait___0.task_list;
> #line 270
>   __wait___0.task_list.prev = & __wait___0.task_list;
>   ldv_51792: 
> #line 270
>   prepare_to_wait(& mdev->al_wait, & __wait___0, 2);
> #line 270
>   if ((mdev->act_log)->pending_changes == 0U) {
> #line 270
>     goto ldv_51791;
>   } else {
> #line 270
>     tmp___5 = lc_try_lock_for_transaction(mdev->act_log);
> #line 270
>     locked = tmp___5 != 0;
> #line 270
>     if ((int )locked) {
> #line 270
>       goto ldv_51791;
>     } else {
> 
>     }
>   }
> #line 270
>   schedule();
> #line 270
>   goto ldv_51792;
>   ldv_51791: 
> #line 270
>   finish_wait(& mdev->al_wait, & __wait___0);
>   ldv_51789: ;
> #line 274
>   if ((int )locked) {
> #line 284
>     if ((mdev->act_log)->pending_changes != 0U) {
> #line 287
>       rcu_read_lock();
> #line 288
>       _________p1 = *((struct disk_conf * volatile  *)(& (mdev->ldev)->disk_conf));
> #line 288
>       tmp___6 = debug_lockdep_rcu_enabled();
> #line 288
>       if (tmp___6 != 0 && ! __warned) {
> #line 288
>         tmp___7 = rcu_read_lock_held();
> #line 288
>         if (tmp___7 == 0 && 1) {
> #line 288
>           __warned = 1;
> #line 288
>           lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared",
>                                  288, "suspicious rcu_dereference_check() usage");
>         } else {
> 
>         }
>       } else {
> 
>       }
> #line 288
>       write_al_updates = (int )((signed char )_________p1->al_updates) != 0;
> #line 289
>       rcu_read_unlock();
> #line 291
>       if ((int )write_al_updates) {
> #line 292
>         al_write_transaction(mdev);
> #line 293
>         mdev->al_writ_cnt = mdev->al_writ_cnt + 1U;
>       } else {
> 
>       }
> #line 296
>       spin_lock_irq(& mdev->al_lock);
> #line 301
>       lc_committed(mdev->act_log);
> #line 302
>       spin_unlock_irq(& mdev->al_lock);
>     } else {
> 
>     }
> #line 304
>     lc_unlock(mdev->act_log);
> #line 305
36729c36661
< #line 350
---
> #line 307
36733,36734c36665,36666
< #line 352 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
< void drbd_al_complete_io(struct drbd_conf *mdev , sector_t sector ) 
---
> #line 309 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared"
> void drbd_al_complete_io(struct drbd_conf *mdev , struct drbd_interval *i ) 
36735a36668,36669
>   unsigned int first ;
>   unsigned int last ;
36740d36673
<   unsigned int tmp___0 ;
36743,36745c36676,36689
< #line 354
<   enr = (unsigned int )(sector >> 13);
< #line 358
---
> #line 313
>   first = (unsigned int )(i->sector >> 13);
> #line 314
>   last = i->size != 0U ? (unsigned int )(((i->sector + (sector_t )(i->size >> 9)) - 1UL) >> 13) : first;
> #line 319
>   if (first > last) {
> #line 319
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( first <= last ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared",
>             319);
>   } else {
> 
>   }
> #line 320
36747c36691
< #line 358
---
> #line 320
36749c36693,36698
< #line 360
---
> #line 322
>   enr = first;
> #line 322
>   goto ldv_51811;
>   ldv_51810: 
> #line 323
36751c36700
< #line 362
---
> #line 324
36753,36755c36702
< #line 363
<     spin_unlock_irqrestore(& mdev->al_lock, flags);
< #line 364
---
> #line 325
36758,36759c36705,36706
< #line 365
<     return;
---
> #line 326
>     goto ldv_51809;
36763,36768c36710,36719
< #line 368
<   tmp___0 = lc_put(mdev->act_log, extent);
< #line 368
<   if (tmp___0 == 0U) {
< #line 369
<     __wake_up(& mdev->al_wait, 3U, 1, 0);
---
> #line 328
>   lc_put(mdev->act_log, extent);
>   ldv_51809: 
> #line 322
>   enr = enr + 1U;
>   ldv_51811: ;
> #line 322
>   if (enr <= last) {
> #line 323
>     goto ldv_51810;
36772c36723
< #line 371
---
> #line 330
36774c36725,36727
< #line 372
---
> #line 331
>   __wake_up(& mdev->al_wait, 3U, 1, 0);
> #line 332
36778c36731
< #line 383 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
---
> #line 343 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared"
36784c36737
< #line 385
---
> #line 345
36788c36741
< #line 392 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
---
> #line 352 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared"
36794c36747
< #line 394
---
> #line 354
36798,36799c36751,36752
< #line 402 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
< int w_al_write_transaction(struct drbd_conf *mdev , struct drbd_work *w , int unused ) 
---
> #line 362 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared"
> static int _al_write_transaction(struct drbd_conf *mdev ) 
36801,36806c36754,36755
<   struct update_al_work *aw ;
<   struct drbd_work  const  *__mptr ;
<   struct lc_element *updated ;
<   unsigned int new_enr ;
<   unsigned int evicted ;
<   struct al_transaction *buffer ;
---
>   struct al_transaction_on_disk *buffer ;
>   struct lc_element *e ;
36809d36757
<   int n ;
36812c36760,36761
<   u32 xor_sum ;
---
>   unsigned int crc ;
>   int err ;
36815,36821c36764,36775
<   unsigned int tmp___1 ;
<   char const   *tmp___2 ;
<   void *tmp___3 ;
<   __u32 tmp___4 ;
<   unsigned int tmp___5 ;
<   __u32 tmp___6 ;
<   __u32 tmp___7 ;
---
>   char const   *tmp___1 ;
>   void *tmp___2 ;
>   __u32 tmp___3 ;
>   struct list_head  const  *__mptr ;
>   __u16 tmp___4 ;
>   __u32 tmp___5 ;
>   unsigned int tmp___6 ;
>   struct list_head  const  *__mptr___0 ;
>   long tmp___7 ;
>   __u16 tmp___8 ;
>   __u16 tmp___9 ;
>   __u16 tmp___10 ;
36825,36829c36779,36783
<   struct lc_element *tmp___8 ;
<   __u32 tmp___9 ;
<   __u32 tmp___10 ;
<   __u32 tmp___11 ;
<   int tmp___12 ;
---
>   struct lc_element *tmp___11 ;
>   __u32 tmp___12 ;
>   __u32 tmp___13 ;
>   int tmp___14 ;
>   int tmp___15 ;
36832,36844c36786,36790
< #line 404
<   __mptr = (struct drbd_work  const  *)w;
< #line 404
<   aw = (struct update_al_work *)__mptr;
< #line 405
<   updated = aw->al_ext;
< #line 406
<   new_enr = aw->enr;
< #line 407
<   evicted = aw->old_enr;
< #line 412
<   xor_sum = 0U;
< #line 414
---
> #line 369
>   crc = 0U;
> #line 370
>   err = 0;
> #line 372
36846c36792
< #line 414
---
> #line 372
36848,36865c36794,36800
< #line 415
<     tmp = drbd_disk_str((enum drbd_disk_state )mdev->state.ldv_39979.disk);
< #line 415
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "disk is %s, cannot start al transaction (-%d +%d)\n",
<             tmp, evicted, new_enr);
< #line 418
<     complete(& ((struct update_al_work *)w)->event);
< #line 419
<     return (1);
<   } else {
< 
<   }
< #line 427
<   if ((int )mdev->state.ldv_39979.conn <= 9 && evicted != 4294967295U) {
< #line 428
<     tmp___1 = al_extent_to_bm_page(evicted);
< #line 428
<     drbd_bm_write_page(mdev, tmp___1);
---
> #line 373
>     tmp = drbd_disk_str((enum drbd_disk_state )mdev->state.ldv_50103.disk);
> #line 373
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "disk is %s, cannot start al transaction\n",
>             tmp);
> #line 375
>     return (-5);
36869,36878c36804,36811
< #line 431
<   if ((int )mdev->state.ldv_39979.disk <= 3) {
< #line 432
<     tmp___2 = drbd_disk_str((enum drbd_disk_state )mdev->state.ldv_39979.disk);
< #line 432
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "disk is %s, cannot write al transaction (-%d +%d)\n",
<             tmp___2, evicted, new_enr);
< #line 435
<     complete(& ((struct update_al_work *)w)->event);
< #line 436
---
> #line 379
>   if ((int )mdev->state.ldv_50103.disk <= 3) {
> #line 380
>     tmp___1 = drbd_disk_str((enum drbd_disk_state )mdev->state.ldv_50103.disk);
> #line 380
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "disk is %s, cannot write al transaction\n",
>             tmp___1);
> #line 383
36880,36881c36813,36814
< #line 437
<     return (1);
---
> #line 384
>     return (-5);
36885,36891c36818,36824
< #line 440
<   tmp___3 = drbd_md_get_buffer(mdev);
< #line 440
<   buffer = (struct al_transaction *)tmp___3;
< #line 441
<   if ((unsigned long )buffer == (unsigned long )((struct al_transaction *)0)) {
< #line 442
---
> #line 387
>   tmp___2 = drbd_md_get_buffer(mdev);
> #line 387
>   buffer = (struct al_transaction_on_disk *)tmp___2;
> #line 388
>   if ((unsigned long )buffer == (unsigned long )((struct al_transaction_on_disk *)0)) {
> #line 389
36893,36895c36826
< #line 443
<     complete(& ((struct update_al_work *)w)->event);
< #line 444
---
> #line 390
36897,36898c36828,36829
< #line 445
<     return (1);
---
> #line 391
>     return (-19);
36902,36928c36833,36841
< #line 448
<   buffer->magic = 1728214147U;
< #line 449
<   tmp___4 = __fswab32(mdev->al_tr_number);
< #line 449
<   buffer->tr_number = tmp___4;
< #line 451
<   tmp___5 = lc_index_of(mdev->act_log, updated);
< #line 451
<   n = (int )tmp___5;
< #line 453
<   tmp___6 = __fswab32((__u32 )n);
< #line 453
<   buffer->updates[0].pos = tmp___6;
< #line 454
<   tmp___7 = __fswab32(new_enr);
< #line 454
<   buffer->updates[0].extent = tmp___7;
< #line 456
<   xor_sum = xor_sum ^ new_enr;
< #line 458
<   __min1 = 61;
< #line 458
<   __min2 = (int )((mdev->act_log)->nr_elements - (unsigned int )mdev->al_tr_cycle);
< #line 458
<   mx = __min1 < __min2 ? __min1 : __min2;
< #line 460
---
> #line 394
>   memset((void *)buffer, 0, 4096UL);
> #line 395
>   buffer->magic = 2724580201U;
> #line 396
>   tmp___3 = __fswab32(mdev->al_tr_number);
> #line 396
>   buffer->tr_number = tmp___3;
> #line 398
36930,36984c36843,36857
< #line 460
<   goto ldv_50656;
<   ldv_50655: 
< #line 461
<   idx = (unsigned int )(mdev->al_tr_cycle + i);
< #line 462
<   tmp___8 = lc_element_by_index(mdev->act_log, idx);
< #line 462
<   extent_nr = tmp___8->lc_number;
< #line 463
<   tmp___9 = __fswab32(idx);
< #line 463
<   buffer->updates[i + 1].pos = tmp___9;
< #line 464
<   tmp___10 = __fswab32(extent_nr);
< #line 464
<   buffer->updates[i + 1].extent = tmp___10;
< #line 465
<   xor_sum = xor_sum ^ extent_nr;
< #line 460
<   i = i + 1;
<   ldv_50656: ;
< #line 460
<   if (i < mx) {
< #line 461
<     goto ldv_50655;
<   } else {
< 
<   }
< 
< #line 467
<   goto ldv_50659;
<   ldv_50658: 
< #line 468
<   buffer->updates[i + 1].pos = 4294967295U;
< #line 469
<   buffer->updates[i + 1].extent = 4294967295U;
< #line 470
<   xor_sum = ~ xor_sum;
< #line 467
<   i = i + 1;
<   ldv_50659: ;
< #line 467
<   if (i <= 60) {
< #line 468
<     goto ldv_50658;
<   } else {
< 
<   }
< #line 472
<   mdev->al_tr_cycle = mdev->al_tr_cycle + 61;
< #line 473
<   if ((unsigned int )mdev->al_tr_cycle >= (mdev->act_log)->nr_elements) {
< #line 474
<     mdev->al_tr_cycle = 0;
---
> #line 404
>   spin_lock_irq(& mdev->al_lock);
> #line 405
>   __mptr = (struct list_head  const  *)(mdev->act_log)->to_be_changed.next;
> #line 405
>   e = (struct lc_element *)__mptr + 0xfffffffffffffff0UL;
> #line 405
>   goto ldv_51836;
>   ldv_51835: ;
> #line 406
>   if (i == 64) {
> #line 407
>     i = i + 1;
> #line 408
>     goto ldv_51834;
36988,36999c36861,36874
< #line 476
<   tmp___11 = __fswab32(xor_sum);
< #line 476
<   buffer->xor_sum = tmp___11;
< #line 478
<   sector = (sector_t )(((mdev->ldev)->md.md_offset + (u64 )(mdev->ldev)->md.al_offset) + (u64 )mdev->al_tr_pos);
< #line 481
<   tmp___12 = drbd_md_sync_page_io(mdev, mdev->ldev, sector, 1);
< #line 481
<   if (tmp___12 == 0) {
< #line 482
<     drbd_chk_io_error____0(mdev, 1, DRBD_META_IO_ERROR, "w_al_write_transaction");
---
> #line 410
>   tmp___4 = __fswab16((int )((__u16 )e->lc_index));
> #line 410
>   buffer->update_slot_nr[i] = tmp___4;
> #line 411
>   tmp___5 = __fswab32(e->lc_new_number);
> #line 411
>   buffer->update_extent_nr[i] = tmp___5;
> #line 412
>   if (e->lc_number != 4294967295U) {
> #line 413
>     tmp___6 = al_extent_to_bm_page(e->lc_number);
> #line 413
>     drbd_bm_mark_for_writeout(mdev, (int )tmp___6);
37003,37008c36878,36888
< #line 484
<   mdev->al_tr_pos = mdev->al_tr_pos + 1;
< #line 484
<   if ((unsigned int )mdev->al_tr_pos > (mdev->act_log)->nr_elements / 61U + ((mdev->act_log)->nr_elements % 61U != 0U ? 1U : 0U)) {
< #line 486
<     mdev->al_tr_pos = 0;
---
> #line 415
>   i = i + 1;
> #line 405
>   __mptr___0 = (struct list_head  const  *)e->list.next;
> #line 405
>   e = (struct lc_element *)__mptr___0 + 0xfffffffffffffff0UL;
>   ldv_51836: ;
> #line 405
>   if ((unsigned long )(& e->list) != (unsigned long )(& (mdev->act_log)->to_be_changed)) {
> #line 406
>     goto ldv_51835;
37012,37017c36892,36904
< #line 488
<   if (mdev->al_tr_pos > 63) {
< #line 488
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mdev->al_tr_pos < MD_AL_MAX_SIZE ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<             488);
---
>   ldv_51834: 
> #line 417
>   spin_unlock_irq(& mdev->al_lock);
> #line 418
>   tmp___7 = __builtin_expect(i > 64, 0L);
> #line 418
>   if (tmp___7 != 0L) {
> #line 418
>     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared"),
>                          "i" (418), "i" (12UL));
>     ldv_51837: ;
> #line 418
>     goto ldv_51837;
37021,37056c36908,36925
< #line 489
<   mdev->al_tr_number = mdev->al_tr_number + 1U;
< #line 491
<   drbd_md_put_buffer(mdev);
< #line 493
<   complete(& ((struct update_al_work *)w)->event);
< #line 494
<   put_ldev(mdev);
< #line 496
<   return (1);
< }
< }
< #line 508 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
< static int drbd_al_read_tr(struct drbd_conf *mdev , struct drbd_backing_dev *bdev ,
<                            struct al_transaction *b , int index ) 
< { 
<   sector_t sector ;
<   int rv ;
<   int i ;
<   u32 xor_sum ;
<   int tmp ;
<   __u32 tmp___0 ;
<   __u32 tmp___1 ;
<   __u32 tmp___2 ;
< 
<   {
< #line 515
<   xor_sum = 0U;
< #line 517
<   sector = (sector_t )((bdev->md.md_offset + (u64 )bdev->md.al_offset) + (u64 )index);
< #line 521
<   tmp = drbd_md_sync_page_io(mdev, bdev, sector, 0);
< #line 521
<   if (tmp == 0) {
< #line 522
<     return (-1);
---
> #line 420
>   tmp___8 = __fswab16((int )((__u16 )i));
> #line 420
>   buffer->n_updates = tmp___8;
> #line 421
>   goto ldv_51839;
>   ldv_51838: 
> #line 422
>   buffer->update_slot_nr[i] = 65535U;
> #line 423
>   buffer->update_extent_nr[i] = 4294967295U;
> #line 421
>   i = i + 1;
>   ldv_51839: ;
> #line 421
>   if (i <= 63) {
> #line 422
>     goto ldv_51838;
37060,37064c36929,36943
< #line 524
<   tmp___0 = __fswab32(b->magic);
< #line 524
<   rv = tmp___0 == 2205418087U;
< #line 526
---
> #line 426
>   tmp___9 = __fswab16((int )((__u16 )(mdev->act_log)->nr_elements));
> #line 426
>   buffer->context_size = tmp___9;
> #line 427
>   tmp___10 = __fswab16((int )((__u16 )mdev->al_tr_cycle));
> #line 427
>   buffer->context_start_slot_nr = tmp___10;
> #line 429
>   __min1 = 919;
> #line 429
>   __min2 = (int )((mdev->act_log)->nr_elements - (unsigned int )mdev->al_tr_cycle);
> #line 429
>   mx = __min1 < __min2 ? __min1 : __min2;
> #line 431
37066,37073c36945,36958
< #line 526
<   goto ldv_50673;
<   ldv_50672: 
< #line 527
<   tmp___1 = __fswab32(b->updates[i].extent);
< #line 527
<   xor_sum = tmp___1 ^ xor_sum;
< #line 526
---
> #line 431
>   goto ldv_51846;
>   ldv_51845: 
> #line 432
>   idx = (unsigned int )(mdev->al_tr_cycle + i);
> #line 433
>   tmp___11 = lc_element_by_index(mdev->act_log, idx);
> #line 433
>   extent_nr = tmp___11->lc_number;
> #line 434
>   tmp___12 = __fswab32(extent_nr);
> #line 434
>   buffer->context[i] = tmp___12;
> #line 431
37075,37141c36960,36964
<   ldv_50673: ;
< #line 526
<   if (i <= 61) {
< #line 527
<     goto ldv_50672;
<   } else {
< 
<   }
< #line 528
<   tmp___2 = __fswab32(b->xor_sum);
< #line 528
<   rv = (tmp___2 == xor_sum) & rv;
< #line 530
<   return (rv);
< }
< }
< #line 540 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
< int drbd_al_read_log(struct drbd_conf *mdev , struct drbd_backing_dev *bdev ) 
< { 
<   struct al_transaction *buffer ;
<   int i ;
<   int rv ;
<   int mx ;
<   int active_extents ;
<   int transactions ;
<   int found_valid ;
<   int from ;
<   int to ;
<   u32 from_tnr ;
<   u32 to_tnr ;
<   u32 cnr ;
<   void *tmp ;
<   __u32 tmp___0 ;
<   int j ;
<   int pos ;
<   unsigned int extent_nr ;
<   unsigned int trn ;
<   int _b ;
<   __u32 tmp___1 ;
<   __u32 tmp___2 ;
<   __u32 tmp___3 ;
< 
<   {
< #line 546
<   active_extents = 0;
< #line 547
<   transactions = 0;
< #line 548
<   found_valid = 0;
< #line 549
<   from = 0;
< #line 550
<   to = 0;
< #line 551
<   from_tnr = 0U;
< #line 552
<   to_tnr = 0U;
< #line 555
<   mx = (int )((mdev->act_log)->nr_elements / 61U + ((mdev->act_log)->nr_elements % 61U != 0U ? 1U : 0U));
< #line 560
<   tmp = drbd_md_get_buffer(mdev);
< #line 560
<   buffer = (struct al_transaction *)tmp;
< #line 561
<   if ((unsigned long )buffer == (unsigned long )((struct al_transaction *)0)) {
< #line 562
<     return (0);
---
>   ldv_51846: ;
> #line 431
>   if (i < mx) {
> #line 432
>     goto ldv_51845;
37145,37156d36967
< #line 565
<   i = 0;
< #line 565
<   goto ldv_50693;
<   ldv_50692: 
< #line 566
<   rv = drbd_al_read_tr(mdev, bdev, buffer, i);
< #line 567
<   if (rv == 0) {
< #line 568
<     goto ldv_50691;
<   } else {
37158,37164c36969,36980
<   }
< #line 569
<   if (rv == -1) {
< #line 570
<     drbd_md_put_buffer(mdev);
< #line 571
<     return (0);
---
> #line 436
>   goto ldv_51849;
>   ldv_51848: 
> #line 437
>   buffer->context[i] = 4294967295U;
> #line 436
>   i = i + 1;
>   ldv_51849: ;
> #line 436
>   if (i <= 918) {
> #line 437
>     goto ldv_51848;
37168,37185c36984,36989
< #line 573
<   tmp___0 = __fswab32(buffer->tr_number);
< #line 573
<   cnr = tmp___0;
< #line 575
<   found_valid = found_valid + 1;
< #line 575
<   if (found_valid == 1) {
< #line 576
<     from = i;
< #line 577
<     to = i;
< #line 578
<     from_tnr = cnr;
< #line 579
<     to_tnr = cnr;
< #line 580
<     goto ldv_50691;
---
> #line 439
>   mdev->al_tr_cycle = mdev->al_tr_cycle + 919;
> #line 440
>   if ((unsigned int )mdev->al_tr_cycle >= (mdev->act_log)->nr_elements) {
> #line 441
>     mdev->al_tr_cycle = 0;
37189,37203c36993,37006
< #line 582
<   if ((int )cnr - (int )from_tnr < 0) {
< #line 583
<     if (((from_tnr - cnr) + (u32 )i) - (u32 )from != (u32 )(mx + 1)) {
< #line 583
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( from_tnr - cnr + i - from == mx+1 ) in %s:%d\n",
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<               583);
<     } else {
< 
<     }
< #line 584
<     from = i;
< #line 585
<     from_tnr = cnr;
---
> #line 443
>   sector = (sector_t )(((mdev->ldev)->md.md_offset + (u64 )(mdev->ldev)->md.al_offset) + (u64 )(mdev->al_tr_pos * 8));
> #line 447
>   crc = crc32c(0U, (void const   *)buffer, 4096U);
> #line 448
>   tmp___13 = __fswab32(crc);
> #line 448
>   buffer->crc32c = tmp___13;
> #line 450
>   tmp___15 = drbd_bm_write_hinted(mdev);
> #line 450
>   if (tmp___15 != 0) {
> #line 451
>     err = -5;
37205,37214c37008,37015
< 
<   }
< #line 587
<   if ((int )cnr - (int )to_tnr > 0) {
< #line 588
<     if (cnr - to_tnr != (u32 )(i - to)) {
< #line 588
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( cnr - to_tnr == i - to ) in %s:%d\n",
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<               588);
---
> #line 453
>     tmp___14 = drbd_md_sync_page_io(mdev, mdev->ldev, sector, 1);
> #line 453
>     if (tmp___14 != 0) {
> #line 454
>       err = -5;
> #line 455
>       drbd_chk_io_error____0(mdev, 1, DRBD_META_IO_ERROR, "_al_write_transaction");
37216c37017,37020
< 
---
> #line 458
>       mdev->al_tr_pos = (mdev->al_tr_pos + 1) % 8;
> #line 459
>       mdev->al_tr_number = mdev->al_tr_number + 1U;
37218,37356d37021
< #line 589
<     to = i;
< #line 590
<     to_tnr = cnr;
<   } else {
< 
<   }
<   ldv_50691: 
< #line 565
<   i = i + 1;
<   ldv_50693: ;
< #line 565
<   if (i <= mx) {
< #line 566
<     goto ldv_50692;
<   } else {
< 
<   }
< 
< #line 594
<   if (found_valid == 0) {
< #line 595
<     dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "No usable activity log found.\n");
< #line 596
<     drbd_md_put_buffer(mdev);
< #line 597
<     return (1);
<   } else {
< 
<   }
< #line 602
<   i = from;
<   ldv_50708: 
< #line 608
<   rv = drbd_al_read_tr(mdev, bdev, buffer, i);
< #line 609
<   _b = rv == 0;
< #line 609
<   if (_b != 0) {
< #line 609
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_al_read_log", (char *)"rv == 0", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<             609);
<   } else {
< 
<   }
< #line 609
<   if (_b != 0) {
< #line 609
<     goto cancel;
<   } else {
< 
<   }
< #line 610
<   if (rv == -1) {
< #line 611
<     drbd_md_put_buffer(mdev);
< #line 612
<     return (0);
<   } else {
< 
<   }
< #line 615
<   tmp___1 = __fswab32(buffer->tr_number);
< #line 615
<   trn = tmp___1;
< #line 617
<   spin_lock_irq(& mdev->al_lock);
< #line 623
<   j = 61;
< #line 623
<   goto ldv_50705;
<   ldv_50704: 
< #line 624
<   tmp___2 = __fswab32(buffer->updates[j].pos);
< #line 624
<   pos = (int )tmp___2;
< #line 625
<   tmp___3 = __fswab32(buffer->updates[j].extent);
< #line 625
<   extent_nr = tmp___3;
< #line 627
<   if (extent_nr == 4294967295U) {
< #line 628
<     goto ldv_50703;
<   } else {
< 
<   }
< #line 630
<   lc_set(mdev->act_log, extent_nr, pos);
< #line 631
<   active_extents = active_extents + 1;
<   ldv_50703: 
< #line 623
<   j = j - 1;
<   ldv_50705: ;
< #line 623
<   if (j >= 0) {
< #line 624
<     goto ldv_50704;
<   } else {
< 
<   }
< #line 633
<   spin_unlock_irq(& mdev->al_lock);
< #line 635
<   transactions = transactions + 1;
<   cancel: ;
< #line 638
<   if (i == to) {
< #line 639
<     goto ldv_50707;
<   } else {
< 
<   }
< #line 640
<   i = i + 1;
< #line 641
<   if (i > mx) {
< #line 642
<     i = 0;
<   } else {
< 
<   }
< #line 643
<   goto ldv_50708;
<   ldv_50707: 
< #line 645
<   mdev->al_tr_number = to_tnr + 1U;
< #line 646
<   mdev->al_tr_pos = to;
< #line 647
<   mdev->al_tr_pos = mdev->al_tr_pos + 1;
< #line 647
<   if ((unsigned int )mdev->al_tr_pos > (mdev->act_log)->nr_elements / 61U + ((mdev->act_log)->nr_elements % 61U != 0U ? 1U : 0U)) {
< #line 649
<     mdev->al_tr_pos = 0;
<   } else {
< 
37358c37023
< #line 652
---
> #line 462
37360,37364c37025,37028
< #line 654
<   _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Found %d transactions (%d active extents) in activity log.\n",
<             transactions, active_extents);
< #line 657
<   return (1);
---
> #line 463
>   put_ldev(mdev);
> #line 465
>   return (err);
37367,37368c37031,37032
< #line 664 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
< void drbd_al_apply_to_bm(struct drbd_conf *mdev ) 
---
> #line 469 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared"
> static int w_al_write_transaction(struct drbd_work *w , int unused ) 
37370,37383c37034,37037
<   unsigned int enr ;
<   unsigned long add ;
<   char ppb[10U] ;
<   int i ;
<   int tmp ;
<   int tmp___0 ;
<   wait_queue_t __wait ;
<   struct task_struct *tmp___1 ;
<   int tmp___2 ;
<   struct lc_element *tmp___3 ;
<   unsigned long tmp___4 ;
<   struct _ddebug descriptor ;
<   long tmp___5 ;
<   char *tmp___6 ;
---
>   struct update_al_work *aw ;
>   struct drbd_work  const  *__mptr ;
>   struct drbd_conf *mdev ;
>   int err ;
37386,37468c37040,37061
< #line 667
<   add = 0UL;
< #line 671
<   tmp___0 = lc_try_lock(mdev->act_log);
< #line 671
<   if (tmp___0 != 0) {
< #line 671
<     goto ldv_50717;
<   } else {
< 
<   }
< #line 671
<   tmp___1 = get_current();
< #line 671
<   __wait.flags = 0U;
< #line 671
<   __wait.private = (void *)tmp___1;
< #line 671
<   __wait.func = & autoremove_wake_function;
< #line 671
<   __wait.task_list.next = & __wait.task_list;
< #line 671
<   __wait.task_list.prev = & __wait.task_list;
<   ldv_50720: 
< #line 671
<   prepare_to_wait(& mdev->al_wait, & __wait, 2);
< #line 671
<   tmp___2 = lc_try_lock(mdev->act_log);
< #line 671
<   if (tmp___2 != 0) {
< #line 671
<     goto ldv_50719;
<   } else {
< 
<   }
< #line 671
<   schedule();
< #line 671
<   goto ldv_50720;
<   ldv_50719: 
< #line 671
<   finish_wait(& mdev->al_wait, & __wait);
<   ldv_50717: 
< #line 673
<   i = 0;
< #line 673
<   goto ldv_50725;
<   ldv_50724: 
< #line 674
<   tmp___3 = lc_element_by_index(mdev->act_log, (unsigned int )i);
< #line 674
<   enr = tmp___3->lc_number;
< #line 675
<   if (enr == 4294967295U) {
< #line 676
<     goto ldv_50721;
<   } else {
< 
<   }
< #line 677
<   tmp___4 = drbd_bm_ALe_set_all(mdev, (unsigned long )enr);
< #line 677
<   tmp = (int )tmp___4;
< #line 678
<   descriptor.modname = "drbd";
< #line 678
<   descriptor.function = "drbd_al_apply_to_bm";
< #line 678
<   descriptor.filename = "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared";
< #line 678
<   descriptor.format = "AL: set %d bits in extent %u\n";
< #line 678
<   descriptor.lineno = 678U;
< #line 678
<   descriptor.flags = 0U;
< #line 678
<   tmp___5 = __builtin_expect((long )descriptor.flags & 1L, 0L);
< #line 678
<   if (tmp___5 != 0L) {
< #line 678
<     __dynamic_dev_dbg(& descriptor, (struct device  const  *)(& (mdev->vdisk)->part0.__dev),
<                       "AL: set %d bits in extent %u\n", tmp, enr);
<   } else {
---
> #line 471
>   __mptr = (struct drbd_work  const  *)w;
> #line 471
>   aw = (struct update_al_work *)__mptr;
> #line 472
>   mdev = w->ldv_50388.mdev;
> #line 475
>   err = _al_write_transaction(mdev);
> #line 476
>   aw->err = err;
> #line 477
>   complete(& aw->event);
> #line 479
>   return (err != -5 ? err : 0);
> }
> }
> #line 485 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared"
> static int al_write_transaction(struct drbd_conf *mdev ) 
> { 
>   struct update_al_work al_work ;
>   int tmp ;
>   struct task_struct *tmp___0 ;
37470,37480c37063,37071
<   }
< #line 679
<   add = (unsigned long )tmp + add;
<   ldv_50721: 
< #line 673
<   i = i + 1;
<   ldv_50725: ;
< #line 673
<   if ((unsigned int )i < (mdev->act_log)->nr_elements) {
< #line 674
<     goto ldv_50724;
---
>   {
> #line 489
>   tmp___0 = get_current();
> #line 489
>   if ((unsigned long )tmp___0 == (unsigned long )(mdev->tconn)->worker.task) {
> #line 490
>     tmp = _al_write_transaction(mdev);
> #line 490
>     return (tmp);
37484,37494c37075,37086
< #line 682
<   lc_unlock(mdev->act_log);
< #line 683
<   __wake_up(& mdev->al_wait, 3U, 1, 0);
< #line 685
<   tmp___6 = ppsize((char *)(& ppb), (unsigned long long )(add << 2));
< #line 685
<   _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Marked additional %s as out-of-sync based on AL.\n",
<             tmp___6);
< #line 686
<   return;
---
> #line 492
>   init_completion(& al_work.event);
> #line 493
>   al_work.w.cb = & w_al_write_transaction;
> #line 494
>   al_work.w.ldv_50388.mdev = mdev;
> #line 495
>   drbd_queue_work_front(& (mdev->tconn)->sender_work, & al_work.w);
> #line 496
>   wait_for_completion(& al_work.event);
> #line 498
>   return (al_work.err);
37497c37089
< #line 689 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
---
> #line 501 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared"
37504c37096
< #line 693
---
> #line 505
37506c37098
< #line 694
---
> #line 506
37508c37100
< #line 695
---
> #line 507
37510c37102
< #line 695
---
> #line 507
37512c37104
< #line 696
---
> #line 508
37517c37109
< #line 697
---
> #line 509
37519c37111
< #line 699
---
> #line 511
37523c37115
< #line 711 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
---
> #line 523 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared"
37535,37537c37127,37129
< #line 716
<   tmp = constant_test_bit(1U, (unsigned long const volatile   *)(& (mdev->act_log)->flags));
< #line 716
---
> #line 528
>   tmp = constant_test_bit(2U, (unsigned long const volatile   *)(& (mdev->act_log)->flags));
> #line 528
37539,37542c37131,37134
< #line 716
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( test_bit(__LC_DIRTY, &mdev->act_log->flags) ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<             716);
---
> #line 528
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( test_bit(__LC_LOCKED, &mdev->act_log->flags) ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared",
>             528);
37546c37138
< #line 718
---
> #line 530
37548,37551c37140,37143
< #line 718
<   goto ldv_50743;
<   ldv_50742: 
< #line 719
---
> #line 530
>   goto ldv_51881;
>   ldv_51880: 
> #line 531
37553c37145
< #line 720
---
> #line 532
37555,37556c37147,37148
< #line 721
<     goto ldv_50737;
---
> #line 533
>     goto ldv_51875;
37560c37152
< #line 722
---
> #line 534
37562c37154
< #line 722
---
> #line 534
37564,37565c37156,37157
< #line 722
<     goto ldv_50738;
---
> #line 534
>     goto ldv_51876;
37569c37161
< #line 722
---
> #line 534
37571c37163
< #line 722
---
> #line 534
37573c37165
< #line 722
---
> #line 534
37575c37167
< #line 722
---
> #line 534
37577c37169
< #line 722
---
> #line 534
37579c37171
< #line 722
---
> #line 534
37581,37582c37173,37174
<   ldv_50741: 
< #line 722
---
>   ldv_51879: 
> #line 534
37584c37176
< #line 722
---
> #line 534
37586c37178
< #line 722
---
> #line 534
37588,37589c37180,37181
< #line 722
<     goto ldv_50740;
---
> #line 534
>     goto ldv_51878;
37593c37185
< #line 722
---
> #line 534
37595,37598c37187,37190
< #line 722
<   goto ldv_50741;
<   ldv_50740: 
< #line 722
---
> #line 534
>   goto ldv_51879;
>   ldv_51878: 
> #line 534
37600,37602c37192,37194
<   ldv_50738: ;
<   ldv_50737: 
< #line 718
---
>   ldv_51876: ;
>   ldv_51875: 
> #line 530
37604,37605c37196,37197
<   ldv_50743: ;
< #line 718
---
>   ldv_51881: ;
> #line 530
37607,37608c37199,37200
< #line 719
<     goto ldv_50742;
---
> #line 531
>     goto ldv_51880;
37612c37204
< #line 725
---
> #line 537
37614c37206
< #line 726
---
> #line 538
37618,37619c37210,37211
< #line 728 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
< static int w_update_odbm(struct drbd_conf *mdev , struct drbd_work *w , int unused ) 
---
> #line 540 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared"
> static int w_update_odbm(struct drbd_work *w , int unused ) 
37622a37215,37216
>   struct drbd_conf *mdev ;
>   struct sib_info sib ;
37629c37223
< #line 730
---
> #line 542
37631c37225
< #line 730
---
> #line 542
37633c37227,37235
< #line 732
---
> #line 543
>   mdev = w->ldv_50388.mdev;
> #line 544
>   sib.sib_reason = SIB_SYNC_PROGRESS;
> #line 544
>   sib.ldv_51335.ldv_51330.helper_name = 0;
> #line 544
>   sib.ldv_51335.ldv_51330.helper_exit_code = 0U;
> #line 546
37635c37237
< #line 732
---
> #line 546
37637c37239
< #line 733
---
> #line 547
37639c37241
< #line 733
---
> #line 547
37641c37243
< #line 734
---
> #line 548
37646c37248
< #line 735
---
> #line 549
37648,37649c37250,37251
< #line 736
<     return (1);
---
> #line 550
>     return (0);
37653c37255
< #line 739
---
> #line 553
37655c37257
< #line 739
---
> #line 553
37657c37259
< #line 740
---
> #line 554
37659c37261
< #line 742
---
> #line 556
37661c37263
< #line 744
---
> #line 558
37663c37265
< #line 744
---
> #line 558
37665,37666c37267,37268
< #line 745
<     switch ((int )mdev->state.ldv_39979.conn) {
---
> #line 559
>     switch ((int )mdev->state.ldv_50103.conn) {
37671c37273
< #line 748
---
> #line 562
37674,37675c37276,37277
< #line 751
<     goto ldv_50759;
---
> #line 565
>     goto ldv_51898;
37677c37279
<     ldv_50759: ;
---
>     ldv_51898: ;
37681,37684c37283,37286
< #line 754
<   drbd_bcast_sync_progress(mdev);
< #line 756
<   return (1);
---
> #line 568
>   drbd_bcast_event(mdev, (struct sib_info  const  *)(& sib));
> #line 570
>   return (0);
37687c37289
< #line 766 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
---
> #line 580 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared"
37703c37305
< #line 774
---
> #line 588
37705c37307
< #line 774
---
> #line 588
37707c37309
< #line 774
---
> #line 588
37709,37710c37311,37312
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<             774);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared",
>             588);
37714c37316
< #line 778
---
> #line 592
37716c37318
< #line 780
---
> #line 594
37718c37320
< #line 781
---
> #line 595
37720c37322
< #line 782
---
> #line 596
37722c37324
< #line 782
---
> #line 596
37724c37326
< #line 783
---
> #line 597
37726c37328
< #line 784
---
> #line 598
37728c37330
< #line 785
---
> #line 599
37731c37333
< #line 787
---
> #line 601
37734c37336
< #line 788
---
> #line 602
37736,37738c37338,37340
< #line 789
<         tmp___0 = drbd_conn_str((enum drbd_conns )mdev->state.ldv_39979.conn);
< #line 789
---
> #line 603
>         tmp___0 = drbd_conn_str((enum drbd_conns )mdev->state.ldv_50103.conn);
> #line 603
37742c37344
< #line 802
---
> #line 616
37748c37350
< #line 811
---
> #line 625
37750c37352
< #line 811
---
> #line 625
37752c37354
< #line 812
---
> #line 626
37754c37356
< #line 813
---
> #line 627
37757c37359
< #line 817
---
> #line 631
37762c37364
< #line 819
---
> #line 633
37764c37366
< #line 820
---
> #line 634
37770c37372
< #line 824
---
> #line 638
37772c37374
< #line 825
---
> #line 639
37774,37775c37376,37377
< #line 826
<       lc_changed(mdev->resync, & ext->lce);
---
> #line 642
>       lc_committed(mdev->resync);
37777c37379
< #line 828
---
> #line 644
37779c37381
< #line 831
---
> #line 647
37781c37383
< #line 832
---
> #line 648
37783,37785c37385,37387
< #line 834
<       tmp___2 = kmalloc(32UL, 32U);
< #line 834
---
> #line 650
>       tmp___2 = kmalloc(40UL, 32U);
> #line 650
37787c37389
< #line 835
---
> #line 651
37789c37391
< #line 836
---
> #line 652
37791c37393
< #line 837
---
> #line 653
37793,37794c37395,37398
< #line 838
<         drbd_queue_work_front(& mdev->data.work, & udw->w);
---
> #line 654
>         udw->w.ldv_50388.mdev = mdev;
> #line 655
>         drbd_queue_work_front(& (mdev->tconn)->sender_work, & udw->w);
37796c37400
< #line 840
---
> #line 657
37803c37407
< #line 844
---
> #line 661
37807c37411
< #line 848
---
> #line 665
37811c37415
< #line 851 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
---
> #line 668 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared"
37819c37423
< #line 853
---
> #line 670
37821c37425
< #line 854
---
> #line 671
37823c37427
< #line 855
---
> #line 672
37825c37429
< #line 856
---
> #line 673
37827,37829c37431,37433
< #line 857
<     if ((mdev->rs_mark_left[mdev->rs_last_mark] != still_to_go && (unsigned int )*((unsigned short *)mdev + 1138UL) != 336U) && (unsigned int )*((unsigned short *)mdev + 1138UL) != 320U) {
< #line 860
---
> #line 674
>     if ((mdev->rs_mark_left[mdev->rs_last_mark] != still_to_go && (unsigned int )*((unsigned short *)mdev + 374UL) != 336U) && (unsigned int )*((unsigned short *)mdev + 374UL) != 320U) {
> #line 677
37831c37435
< #line 861
---
> #line 678
37833c37437
< #line 862
---
> #line 679
37841c37445
< #line 864
---
> #line 681
37845c37449
< #line 874 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
---
> #line 691 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared"
37857,37860c37461,37464
<   int _b ;
<   int _b___0 ;
<   long tmp ;
<   long tmp___0 ;
---
>   int tmp ;
>   bool _bool ;
>   int tmp___0 ;
>   bool _bool___0 ;
37862,37863c37466,37467
<   unsigned long tmp___2 ;
<   raw_spinlock_t *tmp___3 ;
---
>   long tmp___2 ;
>   long tmp___3 ;
37864a37469,37470
>   unsigned long tmp___5 ;
>   raw_spinlock_t *tmp___6 ;
37867c37473
< #line 879
---
> #line 696
37869c37475
< #line 881
---
> #line 698
37871,37873c37477,37479
< #line 884
<   if ((size <= 0 || (size & 511) != 0) || (unsigned int )size > 131072U) {
< #line 885
---
> #line 701
>   if ((size <= 0 || (size & 511) != 0) || (unsigned int )size > 1048576U) {
> #line 702
37876c37482
< #line 887
---
> #line 704
37881c37487,37496
< #line 889
---
> #line 707
>   tmp = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 707
>   if (tmp == 0) {
> #line 708
>     return;
>   } else {
> 
>   }
> #line 710
37883c37498
< #line 890
---
> #line 711
37885,37892c37500,37506
< #line 892
<   _b = sector >= nr_sectors;
< #line 892
<   if (_b != 0) {
< #line 892
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "__drbd_set_in_sync", (char *)"sector >= nr_sectors", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<             892);
---
> #line 713
>   _bool = sector < nr_sectors;
> #line 713
>   if (! _bool) {
> #line 713
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"sector < nr_sectors", "__drbd_set_in_sync");
37896,37899c37510,37521
< #line 892
<   if (_b != 0) {
< #line 892
<     return;
---
> #line 713
>   if (_bool) {
> #line 713
>     tmp___0 = 0;
>   } else {
> #line 713
>     tmp___0 = 1;
>   }
> #line 713
>   if (tmp___0) {
> #line 714
>     goto out;
37903,37910c37525,37531
< #line 893
<   _b___0 = esector >= nr_sectors;
< #line 893
<   if (_b___0 != 0) {
< #line 893
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "__drbd_set_in_sync", (char *)"esector >= nr_sectors", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<             893);
---
> #line 715
>   _bool___0 = esector < nr_sectors;
> #line 715
>   if (! _bool___0) {
> #line 715
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"esector < nr_sectors", "__drbd_set_in_sync");
37914,37916c37535,37545
< #line 893
<   if (_b___0 != 0) {
< #line 893
---
> #line 715
>   if (_bool___0) {
> #line 715
>     tmp___1 = 0;
>   } else {
> #line 715
>     tmp___1 = 1;
>   }
> #line 715
>   if (tmp___1) {
> #line 716
37921c37550
< #line 895
---
> #line 718
37923,37928c37552,37557
< #line 900
<   tmp = __builtin_expect(esector <= 6UL, 0L);
< #line 900
<   if (tmp != 0L) {
< #line 901
<     return;
---
> #line 723
>   tmp___2 = __builtin_expect(esector <= 6UL, 0L);
> #line 723
>   if (tmp___2 != 0L) {
> #line 724
>     goto out;
37932,37936c37561,37565
< #line 902
<   tmp___0 = __builtin_expect(nr_sectors - 1UL == esector, 0L);
< #line 902
<   if (tmp___0 != 0L) {
< #line 903
---
> #line 725
>   tmp___3 = __builtin_expect(nr_sectors - 1UL == esector, 0L);
> #line 725
>   if (tmp___3 != 0L) {
> #line 726
37939c37568
< #line 905
---
> #line 728
37942c37571
< #line 906
---
> #line 729
37944c37573
< #line 908
---
> #line 731
37946,37947c37575,37576
< #line 909
<     return;
---
> #line 732
>     goto out;
37951,37955c37580,37584
< #line 915
<   tmp___1 = drbd_bm_clear_bits(mdev, sbnr, ebnr);
< #line 915
<   count = (unsigned long )tmp___1;
< #line 916
---
> #line 738
>   tmp___4 = drbd_bm_clear_bits(mdev, sbnr, ebnr);
> #line 738
>   count = (unsigned long )tmp___4;
> #line 739
37957,37979c37586,37599
< #line 916
<     tmp___4 = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 916
<     if (tmp___4 != 0) {
< #line 917
<       tmp___2 = drbd_bm_total_weight(mdev);
< #line 917
<       drbd_advance_rs_marks(mdev, tmp___2);
< #line 918
<       tmp___3 = spinlock_check(& mdev->al_lock);
< #line 918
<       flags = _raw_spin_lock_irqsave(tmp___3);
< #line 919
<       drbd_try_clear_on_disk_bm(mdev, sector, (int )count, 1);
< #line 920
<       spin_unlock_irqrestore(& mdev->al_lock, flags);
< #line 924
<       wake_up = 1;
< #line 925
<       put_ldev(mdev);
<     } else {
< 
<     }
---
> #line 740
>     tmp___5 = drbd_bm_total_weight(mdev);
> #line 740
>     drbd_advance_rs_marks(mdev, tmp___5);
> #line 741
>     tmp___6 = spinlock_check(& mdev->al_lock);
> #line 741
>     flags = _raw_spin_lock_irqsave(tmp___6);
> #line 742
>     drbd_try_clear_on_disk_bm(mdev, sector, (int )count, 1);
> #line 743
>     spin_unlock_irqrestore(& mdev->al_lock, flags);
> #line 747
>     wake_up = 1;
37983c37603,37606
< #line 927
---
>   out: 
> #line 750
>   put_ldev(mdev);
> #line 751
37985c37608
< #line 928
---
> #line 752
37990c37613
< #line 929
---
> #line 753
37994c37617
< #line 939 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
---
> #line 763 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared"
38000d37622
<   unsigned long lbnr ;
38008,38010c37630,37632
<   int _b ;
<   int _b___0 ;
<   raw_spinlock_t *tmp___0 ;
---
>   bool _bool ;
>   int tmp___0 ;
>   bool _bool___0 ;
38011a37634,37635
>   raw_spinlock_t *tmp___2 ;
>   int tmp___3 ;
38016c37640
< #line 944
---
> #line 768
38018c37642
< #line 948
---
> #line 772
38020c37644
< #line 949
---
> #line 773
38025,38027c37649,37651
< #line 951
<   if ((size < 0 || (size & 511) != 0) || (unsigned int )size > 131072U) {
< #line 952
---
> #line 775
>   if ((size < 0 || (size & 511) != 0) || (unsigned int )size > 1048576U) {
> #line 776
38030c37654
< #line 954
---
> #line 778
38035c37659
< #line 957
---
> #line 781
38037c37661
< #line 957
---
> #line 781
38039c37663
< #line 958
---
> #line 782
38044c37668
< #line 960
---
> #line 784
38046c37670
< #line 961
---
> #line 785
38048,38055c37672,37678
< #line 963
<   _b = sector >= nr_sectors;
< #line 963
<   if (_b != 0) {
< #line 963
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "__drbd_set_out_of_sync", (char *)"sector >= nr_sectors", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<             963);
---
> #line 787
>   _bool = sector < nr_sectors;
> #line 787
>   if (! _bool) {
> #line 787
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"sector < nr_sectors", "__drbd_set_out_of_sync");
38059,38061c37682,37692
< #line 963
<   if (_b != 0) {
< #line 964
---
> #line 787
>   if (_bool) {
> #line 787
>     tmp___0 = 0;
>   } else {
> #line 787
>     tmp___0 = 1;
>   }
> #line 787
>   if (tmp___0) {
> #line 788
38066,38073c37697,37703
< #line 965
<   _b___0 = esector >= nr_sectors;
< #line 965
<   if (_b___0 != 0) {
< #line 965
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "__drbd_set_out_of_sync", (char *)"esector >= nr_sectors", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<             965);
---
> #line 789
>   _bool___0 = esector < nr_sectors;
> #line 789
>   if (! _bool___0) {
> #line 789
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"esector < nr_sectors", "__drbd_set_out_of_sync");
38077,38079c37707,37717
< #line 965
<   if (_b___0 != 0) {
< #line 966
---
> #line 789
>   if (_bool___0) {
> #line 789
>     tmp___1 = 0;
>   } else {
> #line 789
>     tmp___1 = 1;
>   }
> #line 789
>   if (tmp___1) {
> #line 790
38084,38086c37722
< #line 968
<   lbnr = (nr_sectors - 1UL) >> 3;
< #line 972
---
> #line 794
38088c37724
< #line 973
---
> #line 795
38090,38098c37726,37734
< #line 977
<   tmp___0 = spinlock_check(& mdev->al_lock);
< #line 977
<   flags = _raw_spin_lock_irqsave(tmp___0);
< #line 978
<   tmp___1 = drbd_bm_set_bits(mdev, sbnr, ebnr);
< #line 978
<   count = (unsigned int )tmp___1;
< #line 980
---
> #line 799
>   tmp___2 = spinlock_check(& mdev->al_lock);
> #line 799
>   flags = _raw_spin_lock_irqsave(tmp___2);
> #line 800
>   tmp___3 = drbd_bm_set_bits(mdev, sbnr, ebnr);
> #line 800
>   count = (unsigned int )tmp___3;
> #line 802
38100c37736
< #line 981
---
> #line 803
38102c37738
< #line 982
---
> #line 804
38104c37740
< #line 983
---
> #line 805
38106c37742
< #line 983
---
> #line 805
38108c37744
< #line 983
---
> #line 805
38113c37749
< #line 984
---
> #line 806
38116c37752
< #line 987
---
> #line 809
38118c37754
< #line 989
---
> #line 811
38122c37758
< #line 993 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
---
> #line 815 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared"
38133c37769
< #line 997
---
> #line 819
38135c37771
< #line 1000
---
> #line 822
38137c37773
< #line 1001
---
> #line 823
38139c37775
< #line 1002
---
> #line 824
38141c37777
< #line 1003
---
> #line 825
38146c37782
< #line 1005
---
> #line 827
38148c37784
< #line 1006
---
> #line 828
38150c37786
< #line 1006
---
> #line 828
38152c37788
< #line 1006
---
> #line 828
38155c37791
< #line 1006
---
> #line 828
38158c37794
< #line 1007
---
> #line 829
38160c37796
< #line 1008
---
> #line 830
38162c37798
< #line 1009
---
> #line 831
38164c37800
< #line 1010
---
> #line 832
38166,38168c37802,37804
< #line 1011
<       lc_changed(mdev->resync, & bm_ext->lce);
< #line 1012
---
> #line 833
>       lc_committed(mdev->resync);
> #line 834
38173c37809
< #line 1014
---
> #line 836
38175c37811
< #line 1015
---
> #line 837
38180c37816
< #line 1016
---
> #line 838
38185c37821
< #line 1018
---
> #line 840
38187c37823
< #line 1019
---
> #line 841
38189c37825
< #line 1020
---
> #line 842
38191c37827
< #line 1021
---
> #line 843
38196c37832
< #line 1023
---
> #line 845
38198,38200c37834,37836
< #line 1024
<     if ((rs_flags & 4UL) != 0UL) {
< #line 1025
---
> #line 846
>     if ((rs_flags & 8UL) != 0UL) {
> #line 847
38205,38207c37841,37843
< #line 1027
<     tmp = __builtin_expect((rs_flags & 2UL) != 0UL, 0L);
< #line 1027
---
> #line 849
>     tmp = __builtin_expect((rs_flags & 4UL) != 0UL, 0L);
> #line 849
38209,38214c37845,37850
< #line 1027
<       __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"),
<                            "i" (1027), "i" (12UL));
<       ldv_50846: ;
< #line 1027
<       goto ldv_50846;
---
> #line 849
>       __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared"),
>                            "i" (849), "i" (12UL));
>       ldv_51985: ;
> #line 849
>       goto ldv_51985;
38221c37857
< #line 1030
---
> #line 852
38225c37861
< #line 1033 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
---
> #line 855 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared"
38228d37863
<   struct lc_element *al_ext ;
38230c37865
<   long tmp ;
---
>   bool tmp ;
38233,38235c37868
< #line 1036
<   rv = 0;
< #line 1038
---
> #line 859
38237,38259c37870,37874
< #line 1039
<   tmp = __builtin_expect((mdev->act_log)->new_number == enr, 0L);
< #line 1039
<   if (tmp != 0L) {
< #line 1040
<     rv = 1;
<   } else {
< #line 1042
<     al_ext = lc_find(mdev->act_log, enr);
< #line 1043
<     if ((unsigned long )al_ext != (unsigned long )((struct lc_element *)0)) {
< #line 1044
<       if (al_ext->refcnt != 0U) {
< #line 1045
<         rv = 1;
<       } else {
< 
<       }
<     } else {
< 
<     }
<   }
< #line 1048
---
> #line 860
>   tmp = lc_is_used(mdev->act_log, enr);
> #line 860
>   rv = (int )tmp;
> #line 861
38261c37876
< #line 1055
---
> #line 863
38265c37880
< #line 1065 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
---
> #line 873 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared"
38293c37908
< #line 1067
---
> #line 875
38295c37910
< #line 1070
---
> #line 878
38298c37913
< #line 1074
---
> #line 882
38300c37915
< #line 1074
---
> #line 882
38302c37917
< #line 1074
---
> #line 882
38304c37919
< #line 1074
---
> #line 882
38306c37921
< #line 1074
---
> #line 882
38308c37923
< #line 1074
---
> #line 882
38310c37925
< #line 1074
---
> #line 882
38312c37927
< #line 1074
---
> #line 882
38314c37929
< #line 1074
---
> #line 882
38316,38317c37931,37932
<     ldv_50867: 
< #line 1074
---
>     ldv_52005: 
> #line 882
38319c37934
< #line 1074
---
> #line 882
38321c37936
< #line 1074
---
> #line 882
38323,38324c37938,37939
< #line 1074
<       goto ldv_50865;
---
> #line 882
>       goto ldv_52003;
38328c37943
< #line 1074
---
> #line 882
38330c37945
< #line 1074
---
> #line 882
38332c37947
< #line 1074
---
> #line 882
38334c37949
< #line 1074
---
> #line 882
38336,38337c37951,37952
< #line 1074
<       goto ldv_50866;
---
> #line 882
>       goto ldv_52004;
38341c37956
< #line 1074
---
> #line 882
38343,38349c37958,37964
< #line 1074
<     goto ldv_50865;
<     ldv_50866: ;
< #line 1074
<     goto ldv_50867;
<     ldv_50865: 
< #line 1074
---
> #line 882
>     goto ldv_52003;
>     ldv_52004: ;
> #line 882
>     goto ldv_52005;
>     ldv_52003: 
> #line 882
38354c37969
< #line 1074
---
> #line 882
38356c37971
< #line 1076
---
> #line 884
38358c37973
< #line 1077
---
> #line 885
38363c37978
< #line 1079
---
> #line 887
38365c37980
< #line 1079
---
> #line 887
38367c37982
< #line 1080
---
> #line 888
38372c37987
< #line 1082
---
> #line 890
38374,38377c37989,37992
< #line 1082
<   goto ldv_50876;
<   ldv_50875: 
< #line 1083
---
> #line 890
>   goto ldv_52014;
>   ldv_52013: 
> #line 891
38379c37994
< #line 1083
---
> #line 891
38381c37996
< #line 1083
---
> #line 891
38383c37998
< #line 1083
---
> #line 891
38385c38000
< #line 1083
---
> #line 891
38387c38002
< #line 1083
---
> #line 891
38389c38004
< #line 1083
---
> #line 891
38391c38006
< #line 1083
---
> #line 891
38393c38008
< #line 1083
---
> #line 891
38395c38010
< #line 1083
---
> #line 891
38397c38012
< #line 1083
---
> #line 891
38399,38400c38014,38015
<       ldv_50873: 
< #line 1083
---
>       ldv_52011: 
> #line 891
38402c38017
< #line 1083
---
> #line 891
38404c38019
< #line 1083
---
> #line 891
38406,38407c38021,38022
< #line 1083
<         goto ldv_50871;
---
> #line 891
>         goto ldv_52009;
38409c38024
< #line 1083
---
> #line 891
38411c38026
< #line 1083
---
> #line 891
38413,38414c38028,38029
< #line 1083
<           goto ldv_50871;
---
> #line 891
>           goto ldv_52009;
38419c38034
< #line 1083
---
> #line 891
38421c38036
< #line 1083
---
> #line 891
38423c38038
< #line 1083
---
> #line 891
38425c38040
< #line 1083
---
> #line 891
38427,38428c38042,38043
< #line 1083
<         goto ldv_50872;
---
> #line 891
>         goto ldv_52010;
38432c38047
< #line 1083
---
> #line 891
38434,38440c38049,38055
< #line 1083
<       goto ldv_50871;
<       ldv_50872: ;
< #line 1083
<       goto ldv_50873;
<       ldv_50871: 
< #line 1083
---
> #line 891
>       goto ldv_52009;
>       ldv_52010: ;
> #line 891
>       goto ldv_52011;
>       ldv_52009: 
> #line 891
38448c38063
< #line 1083
---
> #line 891
38450c38065
< #line 1087
---
> #line 895
38452c38067
< #line 1087
---
> #line 895
38455c38070
< #line 1087
---
> #line 895
38457c38072
< #line 1087
---
> #line 895
38460c38075
< #line 1088
---
> #line 896
38462c38077
< #line 1089
---
> #line 897
38464c38079
< #line 1089
---
> #line 897
38466c38081
< #line 1090
---
> #line 898
38468c38083
< #line 1091
---
> #line 899
38470c38085
< #line 1092
---
> #line 900
38475c38090
< #line 1094
---
> #line 902
38477c38092
< #line 1095
---
> #line 903
38479c38094
< #line 1096
---
> #line 904
38484c38099
< #line 1097
---
> #line 905
38486c38101
< #line 1097
---
> #line 905
38488c38103
< #line 1098
---
> #line 906
38493c38108
< #line 1099
---
> #line 907
38495c38110
< #line 1099
---
> #line 907
38497c38112
< #line 1099
---
> #line 907
38499c38114
< #line 1100
---
> #line 908
38507c38122
< #line 1102
---
> #line 910
38513c38128
< #line 1082
---
> #line 890
38515,38516c38130,38131
<   ldv_50876: ;
< #line 1082
---
>   ldv_52014: ;
> #line 890
38518,38519c38133,38134
< #line 1083
<     goto ldv_50875;
---
> #line 891
>     goto ldv_52013;
38523c38138
< #line 1105
---
> #line 913
38525c38140
< #line 1106
---
> #line 914
38529c38144
< #line 1118 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
---
> #line 926 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared"
38548,38549c38163
<   long tmp___6 ;
<   int tmp___7 ;
---
>   bool tmp___6 ;
38552c38166
< #line 1120
---
> #line 928
38554c38168
< #line 1121
---
> #line 929
38556c38170
< #line 1126
---
> #line 934
38558c38172
< #line 1127
---
> #line 935
38560c38174
< #line 1141
---
> #line 949
38562c38176
< #line 1142
---
> #line 950
38564c38178
< #line 1142
---
> #line 950
38566c38180
< #line 1142
---
> #line 950
38569c38183
< #line 1142
---
> #line 950
38572c38186
< #line 1143
---
> #line 951
38574c38188
< #line 1144
---
> #line 952
38576c38190
< #line 1144
---
> #line 952
38578c38192
< #line 1144
---
> #line 952
38580,38581c38194,38195
<                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<                 1144);
---
>                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared",
>                 952);
38585c38199
< #line 1145
---
> #line 953
38587c38201
< #line 1145
---
> #line 953
38589c38203
< #line 1145
---
> #line 953
38591,38592c38205,38206
<                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<                 1145);
---
>                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared",
>                 953);
38596c38210
< #line 1146
---
> #line 954
38598c38212
< #line 1147
---
> #line 955
38600c38214
< #line 1148
---
> #line 956
38602c38216
< #line 1148
---
> #line 956
38604c38218
< #line 1149
---
> #line 957
38609c38223
< #line 1150
---
> #line 958
38612c38226
< #line 1152
---
> #line 960
38618c38232
< #line 1156
---
> #line 964
38620c38234
< #line 1157
---
> #line 965
38622c38236
< #line 1157
---
> #line 965
38624c38238
< #line 1157
---
> #line 965
38627c38241
< #line 1157
---
> #line 965
38630c38244
< #line 1158
---
> #line 966
38632c38246
< #line 1159
---
> #line 967
38634c38248
< #line 1159
---
> #line 967
38636c38250
< #line 1160
---
> #line 968
38641c38255
< #line 1161
---
> #line 969
38643c38257
< #line 1161
---
> #line 969
38645c38259
< #line 1162
---
> #line 970
38648c38262
< #line 1168
---
> #line 976
38650c38264
< #line 1169
---
> #line 977
38652c38266
< #line 1169
---
> #line 977
38654,38655c38268,38269
<                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<                 1169);
---
>                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared",
>                 977);
38660c38274
< #line 1171
---
> #line 979
38663c38277
< #line 1174
---
> #line 982
38665c38279
< #line 1175
---
> #line 983
38670c38284
< #line 1177
---
> #line 985
38672c38286
< #line 1178
---
> #line 986
38674c38288
< #line 1178
---
> #line 986
38676c38290
< #line 1178
---
> #line 986
38679c38293
< #line 1178
---
> #line 986
38682c38296
< #line 1179
---
> #line 987
38684c38298
< #line 1180
---
> #line 988
38686,38688c38300,38302
< #line 1181
<       if ((rs_flags & 4UL) != 0UL) {
< #line 1182
---
> #line 989
>       if ((rs_flags & 8UL) != 0UL) {
> #line 990
38693,38695c38307,38309
< #line 1184
<       tmp___4 = __builtin_expect((rs_flags & 2UL) != 0UL, 0L);
< #line 1184
---
> #line 992
>       tmp___4 = __builtin_expect((rs_flags & 4UL) != 0UL, 0L);
> #line 992
38697,38702c38311,38316
< #line 1184
<         __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"),
<                              "i" (1184), "i" (12UL));
<         ldv_50897: ;
< #line 1184
<         goto ldv_50897;
---
> #line 992
>         __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared"),
>                              "i" (992), "i" (12UL));
>         ldv_52035: ;
> #line 992
>         goto ldv_52035;
38706c38320
< #line 1185
---
> #line 993
38711c38325
< #line 1187
---
> #line 995
38713c38327
< #line 1188
---
> #line 996
38715c38329
< #line 1189
---
> #line 997
38717,38719c38331,38333
< #line 1190
<       lc_changed(mdev->resync, & bm_ext->lce);
< #line 1191
---
> #line 998
>       lc_committed(mdev->resync);
> #line 999
38721c38335
< #line 1192
---
> #line 1000
38723c38337
< #line 1192
---
> #line 1000
38725c38339
< #line 1192
---
> #line 1000
38727,38728c38341,38342
<                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<                 1192);
---
>                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared",
>                 1000);
38735c38349
< #line 1194
---
> #line 1002
38737c38351
< #line 1195
---
> #line 1003
38739c38353
< #line 1195
---
> #line 1003
38741,38742c38355,38356
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<               1195);
---
>               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared",
>               1003);
38746c38360
< #line 1196
---
> #line 1004
38748c38362
< #line 1197
---
> #line 1005
38752c38366
< #line 1200
---
> #line 1008
38754,38771c38368,38375
< #line 1200
<   goto ldv_50899;
<   ldv_50898: 
< #line 1201
<   tmp___6 = __builtin_expect(al_enr + (unsigned int )i == (mdev->act_log)->new_number,
<                              0L);
< #line 1201
<   if (tmp___6 != 0L) {
< #line 1202
<     goto try_again;
<   } else {
< 
<   }
< #line 1203
<   tmp___7 = lc_is_used(mdev->act_log, al_enr + (unsigned int )i);
< #line 1203
<   if (tmp___7 != 0) {
< #line 1204
---
> #line 1008
>   goto ldv_52037;
>   ldv_52036: 
> #line 1009
>   tmp___6 = lc_is_used(mdev->act_log, al_enr + (unsigned int )i);
> #line 1009
>   if ((int )tmp___6) {
> #line 1010
38776c38380
< #line 1200
---
> #line 1008
38778,38779c38382,38383
<   ldv_50899: ;
< #line 1200
---
>   ldv_52037: ;
> #line 1008
38781,38782c38385,38386
< #line 1201
<     goto ldv_50898;
---
> #line 1009
>     goto ldv_52036;
38786c38390
< #line 1206
---
> #line 1012
38789c38393
< #line 1208
---
> #line 1014
38791c38395
< #line 1209
---
> #line 1015
38793c38397
< #line 1210
---
> #line 1016
38796c38400
< #line 1213
---
> #line 1019
38798c38402
< #line 1214
---
> #line 1020
38803c38407
< #line 1215
---
> #line 1021
38805c38409
< #line 1216
---
> #line 1022
38809c38413
< #line 1219 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
---
> #line 1025 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared"
38822c38426
< #line 1221
---
> #line 1027
38824c38428
< #line 1226
---
> #line 1032
38826c38430
< #line 1226
---
> #line 1032
38828c38432
< #line 1227
---
> #line 1033
38830c38434
< #line 1228
---
> #line 1034
38832c38436
< #line 1228
---
> #line 1034
38834c38438
< #line 1228
---
> #line 1034
38837c38441
< #line 1228
---
> #line 1034
38840c38444
< #line 1229
---
> #line 1035
38842c38446
< #line 1230
---
> #line 1036
38844c38448
< #line 1231
---
> #line 1037
38846c38450
< #line 1231
---
> #line 1037
38848c38452
< #line 1232
---
> #line 1038
38853c38457
< #line 1233
---
> #line 1039
38858c38462
< #line 1236
---
> #line 1042
38860c38464
< #line 1237
---
> #line 1043
38862c38466
< #line 1238
---
> #line 1044
38865c38469
< #line 1241
---
> #line 1047
38870c38474
< #line 1244
---
> #line 1050
38872c38476
< #line 1244
---
> #line 1050
38874c38478
< #line 1245
---
> #line 1051
38876c38480
< #line 1246
---
> #line 1052
38878c38482
< #line 1247
---
> #line 1053
38883c38487
< #line 1250
---
> #line 1056
38885c38489
< #line 1251
---
> #line 1057
38889c38493
< #line 1257 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
---
> #line 1063 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared"
38895c38499
< #line 1259
---
> #line 1065
38897c38501
< #line 1261
---
> #line 1067
38899c38503
< #line 1261
---
> #line 1067
38901c38505
< #line 1262
---
> #line 1068
38903c38507
< #line 1263
---
> #line 1069
38908c38512
< #line 1265
---
> #line 1071
38910c38514
< #line 1266
---
> #line 1072
38912c38516
< #line 1267
---
> #line 1073
38914c38518
< #line 1268
---
> #line 1074
38916c38520
< #line 1269
---
> #line 1075
38920c38524
< #line 1278 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
---
> #line 1084 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared"
38934c38538
< #line 1284
---
> #line 1090
38936c38540
< #line 1286
---
> #line 1092
38938c38542
< #line 1286
---
> #line 1092
38940c38544
< #line 1288
---
> #line 1094
38942,38945c38546,38549
< #line 1288
<     goto ldv_50928;
<     ldv_50927: 
< #line 1289
---
> #line 1094
>     goto ldv_52066;
>     ldv_52065: 
> #line 1095
38947c38551
< #line 1290
---
> #line 1096
38949c38553
< #line 1290
---
> #line 1096
38951c38555
< #line 1291
---
> #line 1097
38953,38954c38557,38558
< #line 1292
<       goto ldv_50926;
---
> #line 1098
>       goto ldv_52064;
38958c38562
< #line 1293
---
> #line 1099
38960c38564
< #line 1294
---
> #line 1100
38963c38567
< #line 1297
---
> #line 1103
38965c38569
< #line 1297
---
> #line 1103
38967c38571
< #line 1297
---
> #line 1103
38969,38970c38573,38574
<                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<                 1297);
---
>                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared",
>                 1103);
38974c38578
< #line 1298
---
> #line 1104
38976c38580
< #line 1298
---
> #line 1104
38978c38582
< #line 1298
---
> #line 1104
38980,38981c38584,38585
<                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<                 1298);
---
>                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared",
>                 1104);
38985c38589
< #line 1299
---
> #line 1105
38987c38591
< #line 1300
---
> #line 1106
38989c38593
< #line 1301
---
> #line 1107
38994c38598
< #line 1303
---
> #line 1109
38996c38600
< #line 1304
---
> #line 1110
38999c38603
< #line 1306
---
> #line 1112
39001c38605
< #line 1307
---
> #line 1113
39003c38607
< #line 1308
---
> #line 1114
39008c38612
< #line 1310
---
> #line 1116
39010c38614
< #line 1310
---
> #line 1116
39012c38616
< #line 1310
---
> #line 1116
39014,39015c38618,38619
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<               1310);
---
>               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared",
>               1116);
39019c38623
< #line 1311
---
> #line 1117
39021c38625
< #line 1311
---
> #line 1117
39023c38627
< #line 1311
---
> #line 1117
39025,39026c38629,38630
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<               1311);
---
>               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared",
>               1117);
39030c38634
< #line 1312
---
> #line 1118
39032,39033c38636,38637
<     ldv_50926: 
< #line 1288
---
>     ldv_52064: 
> #line 1094
39035,39036c38639,38640
<     ldv_50928: ;
< #line 1288
---
>     ldv_52066: ;
> #line 1094
39038,39039c38642,38643
< #line 1289
<       goto ldv_50927;
---
> #line 1095
>       goto ldv_52065;
39044c38648
< #line 1314
---
> #line 1120
39046c38650
< #line 1314
---
> #line 1120
39048,39049c38652,38653
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<               1314);
---
>               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared",
>               1120);
39053c38657
< #line 1315
---
> #line 1121
39058c38662
< #line 1317
---
> #line 1123
39060c38664
< #line 1318
---
> #line 1124
39062c38666
< #line 1320
---
> #line 1126
39066c38670
< #line 1329 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
---
> #line 1135 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared"
39076,39081c38680,38687
<   int _b ;
<   int _b___0 ;
<   long tmp ;
<   long tmp___0 ;
<   int tmp___1 ;
<   int tmp___2 ;
---
>   bool _bool ;
>   int tmp ;
>   bool _bool___0 ;
>   int tmp___0 ;
>   long tmp___1 ;
>   long tmp___2 ;
>   int tmp___3 ;
>   int tmp___4 ;
39084c38690
< #line 1335
---
> #line 1141
39086,39088c38692,38694
< #line 1337
<   if ((size <= 0 || (size & 511) != 0) || (unsigned int )size > 131072U) {
< #line 1338
---
> #line 1143
>   if ((size <= 0 || (size & 511) != 0) || (unsigned int )size > 1048576U) {
> #line 1144
39091c38697
< #line 1340
---
> #line 1146
39096c38702
< #line 1342
---
> #line 1148
39098c38704
< #line 1343
---
> #line 1149
39100,39107c38706,38712
< #line 1345
<   _b = sector >= nr_sectors;
< #line 1345
<   if (_b != 0) {
< #line 1345
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_rs_failed_io", (char *)"sector >= nr_sectors", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<             1345);
---
> #line 1151
>   _bool = sector < nr_sectors;
> #line 1151
>   if (! _bool) {
> #line 1151
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"sector < nr_sectors", "drbd_rs_failed_io");
39111,39113c38716,38726
< #line 1345
<   if (_b != 0) {
< #line 1345
---
> #line 1151
>   if (_bool) {
> #line 1151
>     tmp = 0;
>   } else {
> #line 1151
>     tmp = 1;
>   }
> #line 1151
>   if (tmp) {
> #line 1152
39118,39125c38731,38737
< #line 1346
<   _b___0 = esector >= nr_sectors;
< #line 1346
<   if (_b___0 != 0) {
< #line 1346
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_rs_failed_io", (char *)"esector >= nr_sectors", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<             1346);
---
> #line 1153
>   _bool___0 = esector < nr_sectors;
> #line 1153
>   if (! _bool___0) {
> #line 1153
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"esector < nr_sectors", "drbd_rs_failed_io");
39129,39131c38741,38751
< #line 1346
<   if (_b___0 != 0) {
< #line 1346
---
> #line 1153
>   if (_bool___0) {
> #line 1153
>     tmp___0 = 0;
>   } else {
> #line 1153
>     tmp___0 = 1;
>   }
> #line 1153
>   if (tmp___0) {
> #line 1154
39136c38756
< #line 1348
---
> #line 1156
39138,39142c38758,38762
< #line 1353
<   tmp = __builtin_expect(esector <= 6UL, 0L);
< #line 1353
<   if (tmp != 0L) {
< #line 1354
---
> #line 1161
>   tmp___1 = __builtin_expect(esector <= 6UL, 0L);
> #line 1161
>   if (tmp___1 != 0L) {
> #line 1162
39147,39151c38767,38771
< #line 1355
<   tmp___0 = __builtin_expect(nr_sectors - 1UL == esector, 0L);
< #line 1355
<   if (tmp___0 != 0L) {
< #line 1356
---
> #line 1163
>   tmp___2 = __builtin_expect(nr_sectors - 1UL == esector, 0L);
> #line 1163
>   if (tmp___2 != 0L) {
> #line 1164
39154c38774
< #line 1358
---
> #line 1166
39157c38777
< #line 1359
---
> #line 1167
39159c38779
< #line 1361
---
> #line 1169
39161c38781
< #line 1362
---
> #line 1170
39166c38786
< #line 1368
---
> #line 1176
39168,39172c38788,38792
< #line 1369
<   tmp___1 = drbd_bm_count_bits(mdev, sbnr, ebnr);
< #line 1369
<   count = (unsigned long )tmp___1;
< #line 1370
---
> #line 1177
>   tmp___3 = drbd_bm_count_bits(mdev, sbnr, ebnr);
> #line 1177
>   count = (unsigned long )tmp___3;
> #line 1178
39174c38794
< #line 1371
---
> #line 1179
39176,39180c38796,38800
< #line 1373
<     tmp___2 = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 1373
<     if (tmp___2 != 0) {
< #line 1374
---
> #line 1181
>     tmp___4 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 1181
>     if (tmp___4 != 0) {
> #line 1182
39182c38802
< #line 1375
---
> #line 1183
39187c38807
< #line 1380
---
> #line 1188
39192c38812
< #line 1382
---
> #line 1190
39194c38814
< #line 1383
---
> #line 1191
39196c38816
< #line 1384
---
> #line 1192
39201,39243c38821
< #line 1385
<   return;
< }
< }
< #line 1387 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
< void ldv_mutex_lock_165(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1392
<   ldv_mutex_lock_lock(ldv_func_arg1);
< #line 1394
<   mutex_lock(ldv_func_arg1);
< #line 1395
<   return;
< }
< }
< #line 1397 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
< void ldv_mutex_unlock_166(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1402
<   ldv_mutex_unlock_lock(ldv_func_arg1);
< #line 1404
<   mutex_unlock(ldv_func_arg1);
< #line 1405
<   return;
< }
< }
< #line 1407 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
< void ldv_mutex_lock_167(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1412
<   ldv_mutex_lock_mutex_of_device(ldv_func_arg1);
< #line 1414
<   mutex_lock(ldv_func_arg1);
< #line 1415
---
> #line 1193
39247,39248c38825,38826
< #line 1417 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
< int ldv_mutex_trylock_168(struct mutex *ldv_func_arg1 ) 
---
> #line 1232 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_actlog.c.prepared"
> void ldv_main5_sequence_infinite_withcheck_stateful(void) 
39250d38827
<   ldv_func_ret_type___2 ldv_func_res ;
39255,39382c38832,38855
< #line 1422
<   tmp = mutex_trylock(ldv_func_arg1);
< #line 1422
<   ldv_func_res = tmp;
< #line 1424
<   tmp___0 = ldv_mutex_trylock_mutex_of_device(ldv_func_arg1);
< #line 1424
<   return (tmp___0);
< #line 1426
<   return (ldv_func_res);
< }
< }
< #line 1429 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
< void ldv_mutex_unlock_169(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1434
<   ldv_mutex_unlock_mutex_of_device(ldv_func_arg1);
< #line 1436
<   mutex_unlock(ldv_func_arg1);
< #line 1437
<   return;
< }
< }
< #line 1439 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
< void ldv_mutex_lock_170(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1444
<   ldv_mutex_lock_mtx_of_percpu_rw_semaphore(ldv_func_arg1);
< #line 1446
<   mutex_lock(ldv_func_arg1);
< #line 1447
<   return;
< }
< }
< #line 1449 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
< void ldv_mutex_unlock_171(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1454
<   ldv_mutex_unlock_mtx_of_percpu_rw_semaphore(ldv_func_arg1);
< #line 1456
<   mutex_unlock(ldv_func_arg1);
< #line 1457
<   return;
< }
< }
< #line 1459 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
< void ldv_mutex_lock_172(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1464
<   ldv_mutex_lock_mtx_of_percpu_rw_semaphore(ldv_func_arg1);
< #line 1466
<   mutex_lock(ldv_func_arg1);
< #line 1467
<   return;
< }
< }
< #line 1469 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
< void ldv_mutex_unlock_173(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1474
<   ldv_mutex_unlock_mtx_of_percpu_rw_semaphore(ldv_func_arg1);
< #line 1476
<   mutex_unlock(ldv_func_arg1);
< #line 1477
<   return;
< }
< }
< #line 1479 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
< void ldv_mutex_lock_174(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1484
<   ldv_mutex_lock_cred_guard_mutex_of_signal_struct(ldv_func_arg1);
< #line 1486
<   mutex_lock(ldv_func_arg1);
< #line 1487
<   return;
< }
< }
< #line 1489 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
< void ldv_mutex_unlock_175(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1494
<   ldv_mutex_unlock_cred_guard_mutex_of_signal_struct(ldv_func_arg1);
< #line 1496
<   mutex_unlock(ldv_func_arg1);
< #line 1497
<   return;
< }
< }
< #line 1499 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
< void ldv_mutex_lock_176(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1504
<   ldv_mutex_lock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 1506
<   mutex_lock(ldv_func_arg1);
< #line 1507
<   return;
< }
< }
< #line 1509 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
< void ldv_mutex_unlock_177(struct mutex *ldv_func_arg1 ) 
< { 
< 
---
> #line 1244
>   LDV_IN_INTERRUPT = 1;
> #line 1253
>   ldv_initialize();
> #line 1255
>   goto ldv_52104;
>   ldv_52103: 
> #line 1258
>   tmp = nondet_int();
> #line 1258
>   switch (tmp) {
>   default: ;
> #line 1260
>   goto ldv_52102;
>   }
>   ldv_52102: ;
>   ldv_52104: 
> #line 1255
>   tmp___0 = nondet_int();
> #line 1255
>   if (tmp___0 != 0) {
> #line 1256
>     goto ldv_52103;
>   } else {
39384,39395c38857
<   {
< #line 1514
<   ldv_mutex_unlock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 1516
<   mutex_unlock(ldv_func_arg1);
< #line 1517
<   return;
< }
< }
< #line 1519 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
< void ldv_mutex_unlock_178(struct mutex *ldv_func_arg1 ) 
< { 
---
>   }
39398,39403c38860,38862
<   {
< #line 1524
<   ldv_mutex_unlock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 1526
<   mutex_unlock(ldv_func_arg1);
< #line 1527
---
> #line 1269
>   ldv_check_final_state();
> #line 1272
39417,39436c38876,38886
< #line 292 "include/linux/list.h"
< __inline static void list_splice(struct list_head  const  *list , struct list_head *head ) 
< { 
<   int tmp ;
< 
<   {
< #line 295
<   tmp = list_empty(list);
< #line 295
<   if (tmp == 0) {
< #line 296
<     __list_splice(list, head, head->next);
<   } else {
< 
<   }
< #line 297
<   return;
< }
< }
< #line 113 "include/linux/bitmap.h"
---
> #line 323 "include/linux/kernel.h"
> extern int sprintf(char * , char const   *  , ...) ;
> #line 326
> extern int snprintf(char * , size_t  , char const   *  , ...) ;
> #line 23 "include/linux/string.h"
> extern char *strncpy(char * , char const   * , __kernel_size_t  ) ;
> #line 115
> extern char *kstrdup(char const   * , gfp_t  ) ;
> #line 93 "include/linux/bitmap.h"
> extern int __bitmap_equal(unsigned long const   * , unsigned long const   * , int  ) ;
> #line 113
39437a38888,38890
> #line 125
> extern int __bitmap_parse(char const   * , unsigned int  , int  , unsigned long * ,
>                           int  ) ;
39456a38910,38941
> #line 179 "include/linux/bitmap.h"
> __inline static void bitmap_copy(unsigned long *dst , unsigned long const   *src ,
>                                  int nbits ) 
> { 
>   int len ;
>   size_t __len ;
>   void *__ret ;
> 
>   {
> #line 185
>   len = (int )((unsigned int )(((unsigned long )nbits + 63UL) / 64UL) * 8U);
> #line 186
>   __len = (size_t )len;
> #line 186
>   __ret = __builtin_memcpy((void *)dst, (void const   *)src, __len);
> #line 189
>   return;
> }
> }
> #line 233 "include/linux/bitmap.h"
> __inline static int bitmap_equal(unsigned long const   *src1 , unsigned long const   *src2 ,
>                                  int nbits ) 
> { 
>   int tmp ;
> 
>   {
> #line 239
>   tmp = __bitmap_equal(src1, src2, nbits);
> #line 239
>   return (tmp);
> }
> }
39468a38954,38966
> #line 301 "include/linux/bitmap.h"
> __inline static int bitmap_parse(char const   *buf , unsigned int buflen , unsigned long *maskp ,
>                                  int nmaskbits ) 
> { 
>   int tmp ;
> 
>   {
> #line 304
>   tmp = __bitmap_parse(buf, buflen, 0, maskp, nmaskbits);
> #line 304
>   return (tmp);
> }
> }
39496a38995,39007
> #line 404 "include/linux/cpumask.h"
> __inline static bool cpumask_equal(struct cpumask  const  *src1p , struct cpumask  const  *src2p ) 
> { 
>   int tmp ;
> 
>   {
> #line 407
>   tmp = bitmap_equal((unsigned long const   *)(& src1p->bits), (unsigned long const   *)(& src2p->bits),
>                      nr_cpu_ids);
> #line 407
>   return (tmp != 0);
> }
> }
39509,39594c39020,39021
< #line 653
< extern bool zalloc_cpumask_var(cpumask_var_t ** , gfp_t  ) ;
< #line 655
< extern void free_cpumask_var(cpumask_var_t  ) ;
< #line 171 "include/linux/mutex.h"
< int ldv_mutex_trylock_196(struct mutex *ldv_func_arg1 ) ;
< #line 176
< void ldv_mutex_unlock_194(struct mutex *ldv_func_arg1 ) ;
< #line 180
< void ldv_mutex_unlock_197(struct mutex *ldv_func_arg1 ) ;
< #line 184
< void ldv_mutex_unlock_199(struct mutex *ldv_func_arg1 ) ;
< #line 188
< void ldv_mutex_unlock_201(struct mutex *ldv_func_arg1 ) ;
< #line 192
< void ldv_mutex_unlock_203(struct mutex *ldv_func_arg1 ) ;
< #line 196
< void ldv_mutex_unlock_205(struct mutex *ldv_func_arg1 ) ;
< #line 200
< void ldv_mutex_unlock_206(struct mutex *ldv_func_arg1 ) ;
< #line 204
< void ldv_mutex_unlock_208(struct mutex *ldv_func_arg1 ) ;
< #line 208
< void ldv_mutex_unlock_211(struct mutex *ldv_func_arg1 ) ;
< #line 212
< void ldv_mutex_unlock_212(struct mutex *ldv_func_arg1 ) ;
< #line 216
< void ldv_mutex_unlock_214(struct mutex *ldv_func_arg1 ) ;
< #line 220
< void ldv_mutex_unlock_216(struct mutex *ldv_func_arg1 ) ;
< #line 224
< void ldv_mutex_unlock_218(struct mutex *ldv_func_arg1 ) ;
< #line 228
< void ldv_mutex_unlock_220(struct mutex *ldv_func_arg1 ) ;
< #line 232
< void ldv_mutex_unlock_222(struct mutex *ldv_func_arg1 ) ;
< #line 236
< void ldv_mutex_unlock_224(struct mutex *ldv_func_arg1 ) ;
< #line 240
< void ldv_mutex_unlock_226(struct mutex *ldv_func_arg1 ) ;
< #line 244
< void ldv_mutex_unlock_228(struct mutex *ldv_func_arg1 ) ;
< #line 10 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_lock_193(struct mutex *ldv_func_arg1 ) ;
< #line 14
< void ldv_mutex_lock_195(struct mutex *ldv_func_arg1 ) ;
< #line 18
< void ldv_mutex_lock_198(struct mutex *ldv_func_arg1 ) ;
< #line 22
< void ldv_mutex_lock_200(struct mutex *ldv_func_arg1 ) ;
< #line 26
< void ldv_mutex_lock_202(struct mutex *ldv_func_arg1 ) ;
< #line 30
< void ldv_mutex_lock_204(struct mutex *ldv_func_arg1 ) ;
< #line 34
< void ldv_mutex_lock_207(struct mutex *ldv_func_arg1 ) ;
< #line 38
< void ldv_mutex_lock_209(struct mutex *ldv_func_arg1 ) ;
< #line 42
< void ldv_mutex_lock_210(struct mutex *ldv_func_arg1 ) ;
< #line 46
< void ldv_mutex_lock_213(struct mutex *ldv_func_arg1 ) ;
< #line 50
< void ldv_mutex_lock_215(struct mutex *ldv_func_arg1 ) ;
< #line 54
< void ldv_mutex_lock_217(struct mutex *ldv_func_arg1 ) ;
< #line 58
< void ldv_mutex_lock_219(struct mutex *ldv_func_arg1 ) ;
< #line 62
< void ldv_mutex_lock_221(struct mutex *ldv_func_arg1 ) ;
< #line 66
< void ldv_mutex_lock_223(struct mutex *ldv_func_arg1 ) ;
< #line 70
< void ldv_mutex_lock_225(struct mutex *ldv_func_arg1 ) ;
< #line 74
< void ldv_mutex_lock_227(struct mutex *ldv_func_arg1 ) ;
< #line 95
< void ldv_mutex_lock_drbd_main_mutex(struct mutex *lock ) ;
< #line 99
< void ldv_mutex_unlock_drbd_main_mutex(struct mutex *lock ) ;
< #line 135
< void ldv_mutex_lock_state_mutex_of_drbd_conf(struct mutex *lock ) ;
< #line 139
< void ldv_mutex_unlock_state_mutex_of_drbd_conf(struct mutex *lock ) ;
< #line 208 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/thread_info.h"
< __inline static struct thread_info *current_thread_info___2(void) 
---
> #line 495 "include/linux/cpumask.h"
> __inline static void cpumask_copy(struct cpumask *dstp , struct cpumask  const  *srcp ) 
39596,39597c39023
<   struct thread_info *ti ;
<   unsigned long pfo_ret__ ;
---
> 
39600,39630c39026,39030
< #line 211
<   switch (8UL) {
<   case 1UL: 
< #line 211
<   __asm__  ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
< #line 211
<   goto ldv_6382;
<   case 2UL: 
< #line 211
<   __asm__  ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
< #line 211
<   goto ldv_6382;
<   case 4UL: 
< #line 211
<   __asm__  ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
< #line 211
<   goto ldv_6382;
<   case 8UL: 
< #line 211
<   __asm__  ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
< #line 211
<   goto ldv_6382;
<   default: 
< #line 211
<   __bad_percpu_size();
<   }
<   ldv_6382: 
< #line 211
<   ti = (struct thread_info *)(pfo_ret__ - 8152UL);
< #line 213
<   return (ti);
---
> #line 498
>   bitmap_copy((unsigned long *)(& dstp->bits), (unsigned long const   *)(& srcp->bits),
>               nr_cpu_ids);
> #line 499
>   return;
39632a39033,39039
> #line 653
> extern bool zalloc_cpumask_var(cpumask_var_t ** , gfp_t  ) ;
> #line 655
> extern void free_cpumask_var(cpumask_var_t  ) ;
> #line 279 "include/linux/lockdep.h"
> extern void lockdep_init_map(struct lockdep_map * , char const   * , struct lock_class_key * ,
>                              int  ) ;
39634a39042,39043
> #line 92 "include/linux/completion.h"
> extern void complete_all(struct completion * ) ;
39639a39049,39082
> #line 164 "include/linux/workqueue.h"
> extern void __init_work(struct work_struct * , int  ) ;
> #line 328
> extern struct workqueue_struct *__alloc_workqueue_key(char const   * , unsigned int  ,
>                                                       int  , struct lock_class_key * ,
>                                                       char const   *  , ...) ;
> #line 390
> extern void destroy_workqueue(struct workqueue_struct * ) ;
> #line 394
> extern bool queue_work(struct workqueue_struct * , struct work_struct * ) ;
> #line 345 "include/linux/gfp.h"
> extern unsigned long __get_free_pages(gfp_t  , unsigned int  ) ;
> #line 360
> extern void free_pages(unsigned long  , unsigned int  ) ;
> #line 468 "include/linux/module.h"
> bool ldv_try_module_get_4(struct module *ldv_func_arg1 ) ;
> #line 474
> void ldv_module_put_3(struct module *ldv_func_arg1 ) ;
> #line 478
> void ldv_module_put_5(struct module *ldv_func_arg1 ) ;
> #line 43 "include/linux/rculist.h"
> extern void __list_add_rcu(struct list_head * , struct list_head * , struct list_head * ) ;
> #line 84 "include/linux/rculist.h"
> __inline static void list_add_tail_rcu(struct list_head *new , struct list_head *head ) 
> { 
> 
> 
>   {
> #line 87
>   __list_add_rcu(new, head->prev, head);
> #line 88
>   return;
> }
> }
39681a39125,39134
> #line 105 "include/linux/idr.h"
> extern int idr_pre_get(struct idr * , gfp_t  ) ;
> #line 107
> extern int idr_get_new_above(struct idr * , void * , int  , int * ) ;
> #line 112
> extern void idr_remove(struct idr * , int  ) ;
> #line 114
> extern void idr_destroy(struct idr * ) ;
> #line 115
> extern void idr_init(struct idr * ) ;
39689c39142,39144
< #line 410 "include/linux/genhd.h"
---
> #line 409 "include/linux/genhd.h"
> extern void add_disk(struct gendisk * ) ;
> #line 410
39721c39176,39178
< #line 213 "include/linux/bio.h"
---
> #line 212 "include/linux/bio.h"
> extern struct bio_set *bioset_create(unsigned int  , unsigned int  ) ;
> #line 213
39723c39180,39190
< #line 895 "include/linux/blkdev.h"
---
> #line 787 "include/linux/blkdev.h"
> __inline static struct request_queue *bdev_get_queue(struct block_device *bdev ) 
> { 
> 
> 
>   {
> #line 789
>   return ((bdev->bd_disk)->queue);
> }
> }
> #line 895
39737c39204
< #line 244 "include/linux/lru_cache.h"
---
> #line 255 "include/linux/lru_cache.h"
39739c39206,39212
< #line 62 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 22 "include/linux/genl_magic_struct.h"
> int drbd_genl_register(void) ;
> #line 23
> void drbd_genl_unregister(void) ;
> #line 134 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_state.h"
> void drbd_resume_al(struct drbd_conf *mdev ) ;
> #line 66 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
39741,39744d39213
< #line 63 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< bool allow_oos  ;
< #line 64
< unsigned int cn_idx ;
39745a39215,39216
> bool allow_oos  ;
> #line 70 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
39747c39218
< #line 68 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 71 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
39749c39220
< #line 69 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 72 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
39751c39222
< #line 72
---
> #line 75
39753,39853c39224,39228
< #line 157 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct drbd_conf **minor_table  ;
< #line 591 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static void DCBP_set_code(struct p_compressed_bm *p , enum drbd_bitmap_code code ) 
< { 
<   long tmp ;
< 
<   {
< #line 593
<   tmp = __builtin_expect(((unsigned int )code & 4294967280U) != 0U, 0L);
< #line 593
<   if (tmp != 0L) {
< #line 593
<     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"),
<                          "i" (593), "i" (12UL));
<     ldv_50147: ;
< #line 593
<     goto ldv_50147;
<   } else {
< 
<   }
< #line 594
<   p->encoding = ((unsigned int )p->encoding & 240U) | (unsigned int )((u8 )code);
< #line 595
<   return;
< }
< }
< #line 604 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static void DCBP_set_start(struct p_compressed_bm *p , int set ) 
< { 
< 
< 
<   {
< #line 606
<   p->encoding = (u8 )(((int )((signed char )p->encoding) & 127) | (set != 0 ? -128 : 0));
< #line 607
<   return;
< }
< }
< #line 616 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static void DCBP_set_pad_bits(struct p_compressed_bm *p , int n ) 
< { 
<   long tmp ;
< 
<   {
< #line 618
<   tmp = __builtin_expect((n & -8) != 0, 0L);
< #line 618
<   if (tmp != 0L) {
< #line 618
<     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"),
<                          "i" (618), "i" (12UL));
<     ldv_50162: ;
< #line 618
<     goto ldv_50162;
<   } else {
< 
<   }
< #line 619
<   p->encoding = (u8 )(((int )((signed char )p->encoding) & -128) | (int )((signed char )(n << 4)));
< #line 620
<   return;
< }
< }
< #line 1196 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static int drbd_get_data_sock___0(struct drbd_conf *mdev ) 
< { 
<   long tmp ;
< 
<   {
< #line 1198
<   ldv_mutex_lock_204(& mdev->data.mutex);
< #line 1201
<   tmp = __builtin_expect((unsigned long )mdev->data.socket == (unsigned long )((struct socket *)0),
<                          0L);
< #line 1201
<   if (tmp != 0L) {
< #line 1202
<     ldv_mutex_unlock_205(& mdev->data.mutex);
< #line 1203
<     return (0);
<   } else {
< 
<   }
< #line 1205
<   return (1);
< }
< }
< #line 1208 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static void drbd_put_data_sock___0(struct drbd_conf *mdev ) 
< { 
< 
< 
<   {
< #line 1210
<   ldv_mutex_unlock_206(& mdev->data.mutex);
< #line 1211
<   return;
< }
< }
< #line 1232
---
> #line 167 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct idr minors  ;
> #line 168 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct list_head drbd_tconns  ;
> #line 1063
39855,39863c39230,39233
< #line 1246
< void print_st_err(struct drbd_conf *mdev , union drbd_state os , union drbd_state ns ,
<                   enum drbd_state_rv err ) ;
< #line 1252
< void drbd_calc_cpu_mask(struct drbd_conf *mdev ) ;
< #line 1257
< void drbd_free_resources(struct drbd_conf *mdev ) ;
< #line 1263
< int drbd_send(struct drbd_conf *mdev , struct socket *sock , void *buf , size_t size ,
---
> #line 1069
> void drbd_calc_cpu_mask(struct drbd_tconn *tconn ) ;
> #line 1078
> int drbd_send(struct drbd_tconn *tconn , struct socket *sock , void *buf , size_t size ,
39865c39235,39240
< #line 1267
---
> #line 1080
> int drbd_send_all(struct drbd_tconn *tconn , struct socket *sock , void *buffer ,
>                   size_t size , unsigned int msg_flags ) ;
> #line 1083
> int __drbd_send_protocol(struct drbd_tconn *tconn , enum drbd_packet cmd ) ;
> #line 1086
39867c39242
< #line 1270
---
> #line 1089
39869,39871c39244
< #line 1306
< int _drbd_send_bitmap(struct drbd_conf *mdev ) ;
< #line 1308
---
> #line 1116
39873c39246
< #line 1313
---
> #line 1122
39875c39248
< #line 1320
---
> #line 1129
39877c39250
< #line 1321
---
> #line 1130
39879c39252
< #line 1322
---
> #line 1131
39881c39254
< #line 1324
---
> #line 1133
39883c39256
< #line 1330
---
> #line 1139
39886c39259,39262
< #line 1531 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1146
> int drbd_bitmap_io_from_worker(struct drbd_conf *mdev , int (*io_fn)(struct drbd_conf * ) ,
>                                char *why , enum bm_flag flags ) ;
> #line 1365 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
39888c39264
< #line 1532 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1366 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
39890c39266
< #line 1533 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1367 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
39892c39268
< #line 1534 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1368 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
39894c39270
< #line 1535 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1369 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
39896c39272
< #line 1536 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1370 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
39898c39274
< #line 1551 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1385 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
39900c39276
< #line 1552 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1386 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
39902c39278
< #line 1553 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1387 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
39904c39280
< #line 1554 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1388 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
39906c39282
< #line 1562 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1396 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
39908c39284
< #line 1566 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1400 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
39910,39914c39286,39304
< #line 1572
< struct drbd_conf *drbd_new_device(unsigned int minor ) ;
< #line 1573
< void drbd_free_mdev(struct drbd_conf *mdev ) ;
< #line 1575 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1406
> int conn_lowest_minor(struct drbd_tconn *tconn ) ;
> #line 1407
> enum drbd_ret_code conn_new_minor(struct drbd_tconn *tconn , unsigned int minor ,
>                                   int vnr ) ;
> #line 1410
> int set_resource_options(struct drbd_tconn *tconn , struct res_opts *res_opts ) ;
> #line 1411
> struct drbd_tconn *conn_create(char const   *name , struct res_opts *res_opts ) ;
> #line 1412
> void conn_destroy(struct kref *kref ) ;
> #line 1413
> struct drbd_tconn *conn_get_by_name(char const   *name ) ;
> #line 1414
> struct drbd_tconn *conn_get_by_addrs(void *my_addr , int my_addr_len , void *peer_addr ,
>                                      int peer_addr_len ) ;
> #line 1416
> void conn_free_crypto(struct drbd_tconn *tconn ) ;
> #line 1418 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
39916c39306,39308
< #line 1585
---
> #line 1429
> int drbd_msg_put_info(char const   *info ) ;
> #line 1430
39918c39310
< #line 1586
---
> #line 1431
39920,39927c39312,39314
< #line 1753
< void drbd_nl_cleanup(void) ;
< #line 1754
< int drbd_nl_init(void) ;
< #line 1755
< void drbd_bcast_state(struct drbd_conf *mdev , union drbd_state state ) ;
< #line 1840 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static void drbd_state_lock___0(struct drbd_conf *mdev ) 
---
> #line 1675 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static void __drbd_chk_io_error____3(struct drbd_conf *mdev , enum drbd_force_detach_flags df ,
>                                               char const   *where ) 
39928a39316,39318
>   enum drbd_io_error_p ep ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
39930,39931c39320
<   wait_queue_t __wait ;
<   struct task_struct *tmp___0 ;
---
>   int tmp___0 ;
39932a39322,39323
>   union drbd_state __ns ;
>   union drbd_state __ns___0 ;
39935,39941c39326,39343
< #line 1842
<   tmp = drbd_test_and_set_flag(mdev, CLUSTER_ST_CHANGE);
< #line 1842
<   if (tmp == 0) {
< #line 1842
<     goto ldv_51288;
<   } else {
---
> #line 1681
>   rcu_read_lock();
> #line 1682
>   _________p1 = *((struct disk_conf * volatile  *)(& (mdev->ldev)->disk_conf));
> #line 1682
>   tmp = debug_lockdep_rcu_enabled();
> #line 1682
>   if (tmp != 0 && ! __warned) {
> #line 1682
>     tmp___0 = rcu_read_lock_held();
> #line 1682
>     if (tmp___0 == 0 && 1) {
> #line 1682
>       __warned = 1;
> #line 1682
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h",
>                              1682, "suspicious rcu_dereference_check() usage");
>     } else {
39943,39964c39345
<   }
< #line 1842
<   tmp___0 = get_current();
< #line 1842
<   __wait.flags = 0U;
< #line 1842
<   __wait.private = (void *)tmp___0;
< #line 1842
<   __wait.func = & autoremove_wake_function;
< #line 1842
<   __wait.task_list.next = & __wait.task_list;
< #line 1842
<   __wait.task_list.prev = & __wait.task_list;
<   ldv_51291: 
< #line 1842
<   prepare_to_wait(& mdev->misc_wait, & __wait, 2);
< #line 1842
<   tmp___1 = drbd_test_and_set_flag(mdev, CLUSTER_ST_CHANGE);
< #line 1842
<   if (tmp___1 == 0) {
< #line 1842
<     goto ldv_51290;
---
>     }
39968,39992c39349,39356
< #line 1842
<   schedule();
< #line 1842
<   goto ldv_51291;
<   ldv_51290: 
< #line 1842
<   finish_wait(& mdev->misc_wait, & __wait);
<   ldv_51288: ;
< #line 1845
<   return;
< }
< }
< #line 1890 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static void __drbd_chk_io_error____3(struct drbd_conf *mdev , enum drbd_force_detach_flags df ,
<                                               char const   *where ) 
< { 
<   int tmp ;
<   union drbd_state __ns ;
<   union drbd_state __ns___0 ;
< 
<   {
< #line 1894
<   switch ((mdev->ldev)->dc.on_io_error) {
<   case 0: ;
< #line 1896
---
> #line 1682
>   ep = (enum drbd_io_error_p )_________p1->on_io_error;
> #line 1683
>   rcu_read_unlock();
> #line 1684
>   switch ((unsigned int )ep) {
>   case 0U: ;
> #line 1686
39994,39998c39358,39362
< #line 1897
<     tmp = ___ratelimit(& drbd_ratelimit_state, "__drbd_chk_io_error_");
< #line 1897
<     if (tmp != 0) {
< #line 1898
---
> #line 1687
>     tmp___1 = ___ratelimit(& drbd_ratelimit_state, "__drbd_chk_io_error_");
> #line 1687
>     if (tmp___1 != 0) {
> #line 1688
40004,40010c39368,39374
< #line 1899
<     if ((int )mdev->state.ldv_39979.disk > 4) {
< #line 1900
<       __ns.i = mdev->state.i;
< #line 1900
<       __ns.ldv_39979.disk = 4U;
< #line 1900
---
> #line 1689
>     if ((int )mdev->state.ldv_50103.disk > 4) {
> #line 1690
>       __ns = drbd_read_state(mdev);
> #line 1690
>       __ns.ldv_40604.disk = 4U;
> #line 1690
40015,40016c39379,39380
< #line 1901
<     goto ldv_51321;
---
> #line 1691
>     goto ldv_51589;
40020,40024c39384,39388
<   case 2: ;
<   case 1: 
< #line 1926
<   drbd_set_flag(mdev, WAS_IO_ERROR);
< #line 1927
---
>   case 2U: ;
>   case 1U: 
> #line 1716
>   set_bit(12U, (unsigned long volatile   *)(& mdev->flags));
> #line 1717
40026,40027c39390,39391
< #line 1928
<     drbd_set_flag(mdev, WAS_READ_ERROR);
---
> #line 1718
>     set_bit(13U, (unsigned long volatile   *)(& mdev->flags));
40031c39395
< #line 1929
---
> #line 1719
40033,40034c39397,39398
< #line 1930
<     drbd_set_flag(mdev, FORCE_DETACH);
---
> #line 1720
>     set_bit(14U, (unsigned long volatile   *)(& mdev->flags));
40038,40044c39402,39408
< #line 1931
<   if ((int )mdev->state.ldv_39979.disk > 2) {
< #line 1932
<     __ns___0.i = mdev->state.i;
< #line 1932
<     __ns___0.ldv_39979.disk = 2U;
< #line 1932
---
> #line 1721
>   if ((int )mdev->state.ldv_50103.disk > 2) {
> #line 1722
>     __ns___0 = drbd_read_state(mdev);
> #line 1722
>     __ns___0.ldv_40604.disk = 2U;
> #line 1722
40046c39410
< #line 1933
---
> #line 1723
40052,40053c39416,39417
< #line 1936
<   goto ldv_51321;
---
> #line 1726
>   goto ldv_51589;
40055,40056c39419,39420
<   ldv_51321: ;
< #line 1939
---
>   ldv_51589: ;
> #line 1729
40060c39424
< #line 1949 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1739 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
40068c39432
< #line 1952
---
> #line 1742
40070,40072c39434,39436
< #line 1954
<     tmp = spinlock_check(& mdev->req_lock);
< #line 1954
---
> #line 1744
>     tmp = spinlock_check(& (mdev->tconn)->req_lock);
> #line 1744
40074c39438
< #line 1955
---
> #line 1745
40076,40077c39440,39441
< #line 1956
<     spin_unlock_irqrestore(& mdev->req_lock, flags);
---
> #line 1746
>     spin_unlock_irqrestore(& (mdev->tconn)->req_lock, flags);
40081c39445
< #line 1958
---
> #line 1748
40085c39449
< #line 2011 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1818 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
40088a39453,39457
>   int meta_dev_idx ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
40091,40092c39460,39461
<   sector_t tmp___0 ;
<   sector_t tmp___1 ;
---
>   sector_t tmp___2 ;
>   sector_t tmp___3 ;
40095c39464
<   sector_t tmp___2 ;
---
>   sector_t tmp___4 ;
40100c39469
<   sector_t tmp___3 ;
---
>   sector_t tmp___5 ;
40103,40104c39472,39500
< #line 2014
<   switch (bdev->dc.meta_dev_idx) {
---
> #line 1823
>   rcu_read_lock();
> #line 1824
>   _________p1 = *((struct disk_conf * volatile  *)(& bdev->disk_conf));
> #line 1824
>   tmp = debug_lockdep_rcu_enabled();
> #line 1824
>   if (tmp != 0 && ! __warned) {
> #line 1824
>     tmp___0 = rcu_read_lock_held();
> #line 1824
>     if (tmp___0 == 0 && 1) {
> #line 1824
>       __warned = 1;
> #line 1824
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h",
>                              1824, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1824
>   meta_dev_idx = _________p1->meta_dev_idx;
> #line 1825
>   rcu_read_unlock();
> #line 1827
>   switch (meta_dev_idx) {
40107,40111c39503,39507
< #line 2018
<   tmp___1 = drbd_get_capacity(bdev->backing_bdev);
< #line 2018
<   if (tmp___1 != 0UL) {
< #line 2018
---
> #line 1831
>   tmp___3 = drbd_get_capacity(bdev->backing_bdev);
> #line 1831
>   if (tmp___3 != 0UL) {
> #line 1831
40113,40117c39509,39513
< #line 2018
<     tmp___0 = drbd_md_first_sector(bdev);
< #line 2018
<     __min2 = tmp___0;
< #line 2018
---
> #line 1831
>     tmp___2 = _drbd_md_first_sector(meta_dev_idx, bdev);
> #line 1831
>     __min2 = tmp___2;
> #line 1831
40120c39516
< #line 2018
---
> #line 1831
40123,40124c39519,39520
< #line 2021
<   goto ldv_51362;
---
> #line 1834
>   goto ldv_51646;
40126c39522
< #line 2023
---
> #line 1836
40128,40132c39524,39528
< #line 2023
<   tmp___2 = drbd_get_capacity(bdev->backing_bdev);
< #line 2023
<   __min2___0 = tmp___2;
< #line 2023
---
> #line 1836
>   tmp___4 = drbd_get_capacity(bdev->backing_bdev);
> #line 1836
>   __min2___0 = tmp___4;
> #line 1836
40134c39530
< #line 2026
---
> #line 1839
40136c39532
< #line 2026
---
> #line 1839
40138c39534
< #line 2026
---
> #line 1839
40140,40141c39536,39537
< #line 2029
<   goto ldv_51362;
---
> #line 1842
>   goto ldv_51646;
40143c39539
< #line 2031
---
> #line 1844
40145,40149c39541,39545
< #line 2031
<   tmp___3 = drbd_get_capacity(bdev->backing_bdev);
< #line 2031
<   __min2___2 = tmp___3;
< #line 2031
---
> #line 1844
>   tmp___5 = drbd_get_capacity(bdev->backing_bdev);
> #line 1844
>   __min2___2 = tmp___5;
> #line 1844
40152,40153c39548,39549
<   ldv_51362: ;
< #line 2034
---
>   ldv_51646: ;
> #line 1847
40157c39553
< #line 2042 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1855 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
40159a39556,39558
>   int meta_dev_idx ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
40161c39560,39562
<   sector_t tmp___0 ;
---
>   int tmp___0 ;
>   int tmp___1 ;
>   sector_t tmp___2 ;
40164,40165c39565,39593
< #line 2045
<   switch (bdev->dc.meta_dev_idx) {
---
> #line 1860
>   rcu_read_lock();
> #line 1861
>   _________p1 = *((struct disk_conf * volatile  *)(& bdev->disk_conf));
> #line 1861
>   tmp = debug_lockdep_rcu_enabled();
> #line 1861
>   if (tmp != 0 && ! __warned) {
> #line 1861
>     tmp___0 = rcu_read_lock_held();
> #line 1861
>     if (tmp___0 == 0 && 1) {
> #line 1861
>       __warned = 1;
> #line 1861
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h",
>                              1861, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1861
>   meta_dev_idx = _________p1->meta_dev_idx;
> #line 1862
>   rcu_read_unlock();
> #line 1864
>   switch (meta_dev_idx) {
40167,40168c39595,39596
< #line 2047
<   return ((unsigned long )bdev->dc.meta_dev_idx * 262144UL);
---
> #line 1866
>   return ((unsigned long )meta_dev_idx * 262144UL);
40171c39599
< #line 2053
---
> #line 1872
40173,40177c39601,39605
< #line 2054
<     tmp = ___ratelimit(& drbd_ratelimit_state, "drbd_md_ss__");
< #line 2054
<     if (tmp != 0) {
< #line 2055
---
> #line 1873
>     tmp___1 = ___ratelimit(& drbd_ratelimit_state, "drbd_md_ss__");
> #line 1873
>     if (tmp___1 != 0) {
> #line 1874
40179c39607
< #line 2056
---
> #line 1875
40184c39612
< #line 2058
---
> #line 1877
40189,40192c39617,39620
< #line 2060
<   tmp___0 = drbd_get_capacity(bdev->backing_bdev);
< #line 2060
<   return ((sector_t )(((unsigned long long )tmp___0 & 0xfffffffffffffff8ULL) - 8ULL));
---
> #line 1879
>   tmp___2 = drbd_get_capacity(bdev->backing_bdev);
> #line 1879
>   return ((sector_t )(((unsigned long long )tmp___2 & 0xfffffffffffffff8ULL) - 8ULL));
40194c39622
< #line 2063
---
> #line 1882
40199,40223c39627,39631
< #line 2125 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static void drbd_thread_stop_nowait(struct drbd_thread *thi ) 
< { 
< 
< 
<   {
< #line 2127
<   _drbd_thread_stop(thi, 0, 0);
< #line 2128
<   return;
< }
< }
< #line 2130 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static void drbd_thread_restart_nowait(struct drbd_thread *thi ) 
< { 
< 
< 
<   {
< #line 2132
<   _drbd_thread_stop(thi, 1, 0);
< #line 2133
<   return;
< }
< }
< #line 2347 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1929
> int drbd_send_state_req(struct drbd_conf *mdev , union drbd_state mask , union drbd_state val ) ;
> #line 1930
> int conn_send_state_req(struct drbd_tconn *tconn , union drbd_state mask , union drbd_state val ) ;
> #line 2146 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
40226c39634
<   union drbd_state s ;
---
>   union drbd_dev_state s ;
40229c39637
< #line 2349
---
> #line 2148
40231,40232c39639,39640
< #line 2354
<   switch ((unsigned int )s.ldv_39979.conn) {
---
> #line 2153
>   switch ((unsigned int )s.ldv_50103.conn) {
40254,40255c39662,39663
< #line 2379
<   goto ldv_51493;
---
> #line 2178
>   goto ldv_51818;
40257,40259c39665,39667
< #line 2383
<   if (mdev->agreed_pro_version <= 95) {
< #line 2384
---
> #line 2182
>   if ((mdev->tconn)->agreed_pro_version <= 95) {
> #line 2183
40264,40265c39672,39673
< #line 2385
<   goto ldv_51493;
---
> #line 2184
>   goto ldv_51818;
40269c39677
< #line 2392
---
> #line 2191
40272,40274c39680,39682
<   ldv_51493: ;
< #line 2395
<   switch ((unsigned int )s.ldv_39979.disk) {
---
>   ldv_51818: ;
> #line 2194
>   switch ((unsigned int )s.ldv_50103.disk) {
40281,40282c39689,39690
< #line 2403
<   goto ldv_51504;
---
> #line 2202
>   goto ldv_51829;
40287c39695
< #line 2411
---
> #line 2210
40290,40291c39698,39699
<   ldv_51504: ;
< #line 2414
---
>   ldv_51829: ;
> #line 2213
40295c39703
< #line 2422 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 2223 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
40307c39715
< #line 2424
---
> #line 2225
40309c39717
< #line 2424
---
> #line 2225
40311,40313c39719,39721
< #line 2426
<   tmp___0 = is_susp(mdev->state);
< #line 2426
---
> #line 2227
>   tmp___0 = drbd_suspended(mdev);
> #line 2227
40315c39723
< #line 2427
---
> #line 2228
40320,40322c39728,39730
< #line 2428
<   tmp___1 = drbd_test_flag(mdev, SUSPEND_IO);
< #line 2428
---
> #line 2229
>   tmp___1 = constant_test_bit(8U, (unsigned long const volatile   *)(& mdev->flags));
> #line 2229
40324c39732
< #line 2429
---
> #line 2230
40329c39737
< #line 2436
---
> #line 2237
40331c39739
< #line 2436
---
> #line 2237
40333c39741
< #line 2437
---
> #line 2238
40338c39746
< #line 2441
---
> #line 2242
40340c39748
< #line 2441
---
> #line 2242
40342c39750
< #line 2442
---
> #line 2243
40347,40349c39755,39757
< #line 2443
<   tmp___4 = drbd_test_flag(mdev, BITMAP_IO);
< #line 2443
---
> #line 2244
>   tmp___4 = constant_test_bit(9U, (unsigned long const volatile   *)(& mdev->flags));
> #line 2244
40351c39759
< #line 2444
---
> #line 2245
40356c39764
< #line 2445
---
> #line 2246
40360,40361c39768,39769
< #line 2527 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static void drbd_update_congested(struct drbd_conf *mdev ) 
---
> #line 2249 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static bool inc_ap_bio_cond___0(struct drbd_conf *mdev ) 
40363c39771
<   struct sock *sk ;
---
>   bool rv ;
40366,40371c39774,39783
< #line 2529
<   sk = (mdev->data.socket)->sk;
< #line 2530
<   if (sk->sk_wmem_queued > (sk->sk_sndbuf * 4) / 5) {
< #line 2531
<     drbd_set_flag(mdev, NET_CONGESTED);
---
> #line 2251
>   rv = 0;
> #line 2253
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 2254
>   rv = may_inc_ap_bio___0(mdev);
> #line 2255
>   if ((int )rv) {
> #line 2256
>     atomic_inc(& mdev->ap_bio_cnt);
40375c39787,39843
< #line 2532
---
> #line 2257
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 2259
>   return (rv);
> }
> }
> #line 2262 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static void inc_ap_bio___0(struct drbd_conf *mdev ) 
> { 
>   bool tmp ;
>   wait_queue_t __wait ;
>   struct task_struct *tmp___0 ;
>   bool tmp___1 ;
> 
>   {
> #line 2272
>   tmp = inc_ap_bio_cond___0(mdev);
> #line 2272
>   if ((int )tmp) {
> #line 2272
>     goto ldv_51849;
>   } else {
> 
>   }
> #line 2272
>   tmp___0 = get_current();
> #line 2272
>   __wait.flags = 0U;
> #line 2272
>   __wait.private = (void *)tmp___0;
> #line 2272
>   __wait.func = & autoremove_wake_function;
> #line 2272
>   __wait.task_list.next = & __wait.task_list;
> #line 2272
>   __wait.task_list.prev = & __wait.task_list;
>   ldv_51852: 
> #line 2272
>   prepare_to_wait(& mdev->misc_wait, & __wait, 2);
> #line 2272
>   tmp___1 = inc_ap_bio_cond___0(mdev);
> #line 2272
>   if ((int )tmp___1) {
> #line 2272
>     goto ldv_51851;
>   } else {
> 
>   }
> #line 2272
>   schedule();
> #line 2272
>   goto ldv_51852;
>   ldv_51851: 
> #line 2272
>   finish_wait(& mdev->misc_wait, & __wait);
>   ldv_51849: ;
> #line 2275
40379c39847
< #line 2534 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 2307 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
40385c39853
< #line 2541
---
> #line 2314
40389,40390c39857,39860
< #line 331 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"
< void tl_restart(struct drbd_conf *mdev , enum drbd_req_event what ) ;
---
> #line 278 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"
> void tl_restart(struct drbd_tconn *tconn , enum drbd_req_event what ) ;
> #line 279
> void _tl_restart(struct drbd_tconn *tconn , enum drbd_req_event what ) ;
40634,40635c40104,40105
<   goto ldv_51758;
<   ldv_51757: 
---
>   goto ldv_52040;
>   ldv_52039: 
40644c40114
<   ldv_51758: ;
---
>   ldv_52040: ;
40648c40118
<     goto ldv_51757;
---
>     goto ldv_52039;
40686c40156
< #line 139 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 67 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
40691c40161
< #line 144
---
> #line 72
40693c40163
< #line 145
---
> #line 73
40695c40165
< #line 146
---
> #line 74
40697,40704c40167,40169
< #line 147
< static int w_after_state_ch(struct drbd_conf *mdev , struct drbd_work *w , int unused ) ;
< #line 148
< static void after_state_ch(struct drbd_conf *mdev , union drbd_state os , union drbd_state ns ,
<                            enum chg_state_flags flags ) ;
< #line 150
< static int w_md_sync(struct drbd_conf *mdev , struct drbd_work *w , int unused ) ;
< #line 151
---
> #line 75
> static int w_md_sync(struct drbd_work *w , int unused ) ;
> #line 76
40706,40712c40171,40175
< #line 152
< static int w_bitmap_io(struct drbd_conf *mdev , struct drbd_work *w , int unused ) ;
< #line 153
< static int w_go_diskless(struct drbd_conf *mdev , struct drbd_work *w , int unused ) ;
< #line 154
< static void _tl_clear(struct drbd_conf *mdev ) ;
< #line 179 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 77
> static int w_bitmap_io(struct drbd_work *w , int unused ) ;
> #line 78
> static int w_go_diskless(struct drbd_work *w , int unused ) ;
> #line 102 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
40714c40177
< #line 192 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 115 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
40716,40718c40179
< #line 195 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< unsigned int cn_idx  =    8U;
< #line 200 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 122 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
40720c40181
< #line 200
---
> #line 122
40725c40186
< #line 229 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 152 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
40729c40190
< #line 231 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 154 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
40731c40192
< #line 231
---
> #line 154
40733c40194
< #line 237 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 160 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
40735a40197
>   struct bio *bio ;
40737d40198
<   struct bio *tmp___0 ;
40740c40201
< #line 239
---
> #line 164
40742c40203
< #line 240
---
> #line 165
40744c40205
< #line 240
---
> #line 165
40749,40752c40210,40220
< #line 242
<   tmp___0 = bio_alloc_bioset(gfp_mask, 1, drbd_md_io_bio_set);
< #line 242
<   return (tmp___0);
---
> #line 167
>   bio = bio_alloc_bioset(gfp_mask, 1, drbd_md_io_bio_set);
> #line 168
>   if ((unsigned long )bio == (unsigned long )((struct bio *)0)) {
> #line 169
>     return (0);
>   } else {
> 
>   }
> #line 170
>   return (bio);
40755,40756c40223,40224
< #line 274 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static int tl_init(struct drbd_conf *mdev ) 
---
> #line 202 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> void tl_release(struct drbd_tconn *tconn , unsigned int barrier_nr , unsigned int set_size ) 
40758,40759c40226,40238
<   struct drbd_tl_epoch *b ;
<   void *tmp ;
---
>   struct drbd_request *r ;
>   struct drbd_request *req ;
>   int expect_epoch ;
>   int expect_size ;
>   struct list_head  const  *__mptr ;
>   unsigned int s ;
>   struct list_head  const  *__mptr___0 ;
>   struct list_head  const  *__mptr___1 ;
>   struct list_head  const  *__mptr___2 ;
>   struct list_head  const  *__mptr___3 ;
>   struct list_head  const  *__mptr___4 ;
>   union drbd_state val ;
>   union drbd_state mask ;
40762,40769c40241,40286
< #line 279
<   tmp = kmalloc(56UL, 208U);
< #line 279
<   b = (struct drbd_tl_epoch *)tmp;
< #line 280
<   if ((unsigned long )b == (unsigned long )((struct drbd_tl_epoch *)0)) {
< #line 281
<     return (0);
---
> #line 206
>   req = 0;
> #line 207
>   expect_epoch = 0;
> #line 208
>   expect_size = 0;
> #line 210
>   spin_lock_irq(& tconn->req_lock);
> #line 214
>   __mptr = (struct list_head  const  *)tconn->transfer_log.next;
> #line 214
>   r = (struct drbd_request *)__mptr + 0xffffffffffffff98UL;
> #line 214
>   goto ldv_52236;
>   ldv_52235: 
> #line 215
>   s = r->rq_state;
> #line 216
>   if ((unsigned long )req == (unsigned long )((struct drbd_request *)0)) {
> #line 217
>     if (((unsigned long )s & 2048UL) == 0UL) {
> #line 218
>       goto ldv_52233;
>     } else {
> 
>     }
> #line 219
>     if (((unsigned long )s & 1008UL) == 0UL) {
> #line 220
>       goto ldv_52233;
>     } else {
> 
>     }
> #line 221
>     if (((unsigned long )s & 128UL) != 0UL) {
> #line 222
>       goto ldv_52233;
>     } else {
> 
>     }
> #line 223
>     req = r;
> #line 224
>     expect_epoch = (int )req->epoch;
> #line 225
>     expect_size = expect_size + 1;
40770a40288,40299
> #line 227
>     if (r->epoch != (unsigned int )expect_epoch) {
> #line 228
>       goto ldv_52234;
>     } else {
> 
>     }
> #line 229
>     if (((unsigned long )s & 2048UL) == 0UL) {
> #line 230
>       goto ldv_52233;
>     } else {
40771a40301,40303
>     }
> #line 233
>     expect_size = expect_size + 1;
40773,40786c40305,40439
< #line 282
<   INIT_LIST_HEAD(& b->requests);
< #line 283
<   INIT_LIST_HEAD(& b->w.list);
< #line 284
<   b->next = 0;
< #line 285
<   b->br_number = 4711U;
< #line 286
<   b->n_writes = 0;
< #line 287
<   b->w.cb = 0;
< #line 289
<   mdev->oldest_tle = b;
---
>   ldv_52233: 
> #line 214
>   __mptr___0 = (struct list_head  const  *)r->tl_requests.next;
> #line 214
>   r = (struct drbd_request *)__mptr___0 + 0xffffffffffffff98UL;
>   ldv_52236: ;
> #line 214
>   if ((unsigned long )(& r->tl_requests) != (unsigned long )(& tconn->transfer_log)) {
> #line 215
>     goto ldv_52235;
>   } else {
> 
>   }
>   ldv_52234: ;
> #line 238
>   if ((unsigned long )req == (unsigned long )((struct drbd_request *)0)) {
> #line 239
>     printk("\vd-con %s: BAD! BarrierAck #%u received, but no epoch in tl!?\n", tconn->name,
>            barrier_nr);
> #line 241
>     goto bail;
>   } else {
> 
>   }
> #line 243
>   if ((unsigned int )expect_epoch != barrier_nr) {
> #line 244
>     printk("\vd-con %s: BAD! BarrierAck #%u received, expected #%u!\n", tconn->name,
>            barrier_nr, expect_epoch);
> #line 246
>     goto bail;
>   } else {
> 
>   }
> #line 249
>   if ((unsigned int )expect_size != set_size) {
> #line 250
>     printk("\vd-con %s: BAD! BarrierAck #%u received with n_writes=%u, expected n_writes=%u!\n",
>            tconn->name, barrier_nr, set_size, expect_size);
> #line 252
>     goto bail;
>   } else {
> 
>   }
> #line 259
>   __mptr___1 = (struct list_head  const  *)tconn->transfer_log.next;
> #line 259
>   req = (struct drbd_request *)__mptr___1 + 0xffffffffffffff98UL;
> #line 259
>   goto ldv_52244;
>   ldv_52243: ;
> #line 260
>   if (req->epoch == (unsigned int )expect_epoch) {
> #line 261
>     goto ldv_52242;
>   } else {
> 
>   }
> #line 259
>   __mptr___2 = (struct list_head  const  *)req->tl_requests.next;
> #line 259
>   req = (struct drbd_request *)__mptr___2 + 0xffffffffffffff98UL;
>   ldv_52244: ;
> #line 259
>   if ((unsigned long )(& req->tl_requests) != (unsigned long )(& tconn->transfer_log)) {
> #line 260
>     goto ldv_52243;
>   } else {
> 
>   }
>   ldv_52242: 
> #line 262
>   __mptr___3 = (struct list_head  const  *)req->tl_requests.next;
> #line 262
>   r = (struct drbd_request *)__mptr___3 + 0xffffffffffffff98UL;
> #line 262
>   goto ldv_52251;
>   ldv_52250: ;
> #line 263
>   if (req->epoch != (unsigned int )expect_epoch) {
> #line 264
>     goto ldv_52249;
>   } else {
> 
>   }
> #line 265
>   _req_mod(req, BARRIER_ACKED);
> #line 262
>   req = r;
> #line 262
>   __mptr___4 = (struct list_head  const  *)r->tl_requests.next;
> #line 262
>   r = (struct drbd_request *)__mptr___4 + 0xffffffffffffff98UL;
>   ldv_52251: ;
> #line 262
>   if ((unsigned long )(& req->tl_requests) != (unsigned long )(& tconn->transfer_log)) {
> #line 263
>     goto ldv_52250;
>   } else {
> 
>   }
>   ldv_52249: 
> #line 267
>   spin_unlock_irq(& tconn->req_lock);
> #line 269
>   return;
>   bail: 
> #line 272
>   spin_unlock_irq(& tconn->req_lock);
> #line 273
>   val.i = 0U;
> #line 273
>   val.ldv_40604.conn = 6U;
> #line 273
>   mask.i = 0U;
> #line 273
>   mask.ldv_40604.conn = 31U;
> #line 273
>   conn_request_state(tconn, mask, val, CS_HARD);
> #line 275
>   return;
> }
> }
> #line 286 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> void _tl_restart(struct drbd_tconn *tconn , enum drbd_req_event what ) 
> { 
>   struct drbd_request *req ;
>   struct drbd_request *r ;
>   struct list_head  const  *__mptr ;
>   struct list_head  const  *__mptr___0 ;
>   struct list_head  const  *__mptr___1 ;
> 
>   {
> #line 290
>   __mptr = (struct list_head  const  *)tconn->transfer_log.next;
40788c40441,40448
<   mdev->newest_tle = b;
---
>   req = (struct drbd_request *)__mptr + 0xffffffffffffff98UL;
> #line 290
>   __mptr___0 = (struct list_head  const  *)req->tl_requests.next;
> #line 290
>   r = (struct drbd_request *)__mptr___0 + 0xffffffffffffff98UL;
> #line 290
>   goto ldv_52269;
>   ldv_52268: 
40790,40794c40450,40465
<   INIT_LIST_HEAD(& mdev->out_of_sequence_requests);
< #line 292
<   INIT_LIST_HEAD(& mdev->barrier_acked_requests);
< #line 294
<   mdev->tl_hash = 0;
---
>   _req_mod(req, what);
> #line 290
>   req = r;
> #line 290
>   __mptr___1 = (struct list_head  const  *)r->tl_requests.next;
> #line 290
>   r = (struct drbd_request *)__mptr___1 + 0xffffffffffffff98UL;
>   ldv_52269: ;
> #line 290
>   if ((unsigned long )(& req->tl_requests) != (unsigned long )(& tconn->transfer_log)) {
> #line 291
>     goto ldv_52268;
>   } else {
> 
>   }
> 
40796,40798c40467
<   mdev->tl_hash_s = 0U;
< #line 297
<   return (1);
---
>   return;
40801,40802c40470,40471
< #line 300 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static void tl_cleanup(struct drbd_conf *mdev ) 
---
> #line 294 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> void tl_restart(struct drbd_tconn *tconn , enum drbd_req_event what ) 
40804c40473
<   int tmp ;
---
> 
40807,40813c40476,40488
< #line 302
<   if ((unsigned long )mdev->oldest_tle != (unsigned long )mdev->newest_tle) {
< #line 302
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mdev->oldest_tle == mdev->newest_tle ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             302);
<   } else {
---
> #line 296
>   spin_lock_irq(& tconn->req_lock);
> #line 297
>   _tl_restart(tconn, what);
> #line 298
>   spin_unlock_irq(& tconn->req_lock);
> #line 299
>   return;
> }
> }
> #line 309 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> void tl_clear(struct drbd_tconn *tconn ) 
> { 
40815,40824d40489
<   }
< #line 303
<   tmp = list_empty((struct list_head  const  *)(& mdev->out_of_sequence_requests));
< #line 303
<   if (tmp == 0) {
< #line 303
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( list_empty(&mdev->out_of_sequence_requests) ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             303);
<   } else {
40826,40840c40491
<   }
< #line 304
<   kfree((void const   *)mdev->oldest_tle);
< #line 305
<   mdev->oldest_tle = 0;
< #line 306
<   kfree((void const   *)mdev->unused_spare_tle);
< #line 307
<   mdev->unused_spare_tle = 0;
< #line 308
<   kfree((void const   *)mdev->tl_hash);
< #line 309
<   mdev->tl_hash = 0;
< #line 310
<   mdev->tl_hash_s = 0U;
---
>   {
40841a40493,40494
>   tl_restart(tconn, CONNECTION_LOST_WHILE_PENDING);
> #line 312
40845,40846c40498,40499
< #line 320 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void _tl_add_barrier(struct drbd_conf *mdev , struct drbd_tl_epoch *new ) 
---
> #line 318 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> void tl_abort_disk_io(struct drbd_conf *mdev ) 
40848c40501,40506
<   struct drbd_tl_epoch *newest_before ;
---
>   struct drbd_tconn *tconn ;
>   struct drbd_request *req ;
>   struct drbd_request *r ;
>   struct list_head  const  *__mptr ;
>   struct list_head  const  *__mptr___0 ;
>   struct list_head  const  *__mptr___1 ;
40850a40509,40514
> #line 320
>   tconn = mdev->tconn;
> #line 323
>   spin_lock_irq(& tconn->req_lock);
> #line 324
>   __mptr = (struct list_head  const  *)tconn->transfer_log.next;
40852c40516,40523
<   INIT_LIST_HEAD(& new->requests);
---
>   req = (struct drbd_request *)__mptr + 0xffffffffffffff98UL;
> #line 324
>   __mptr___0 = (struct list_head  const  *)req->tl_requests.next;
> #line 324
>   r = (struct drbd_request *)__mptr___0 + 0xffffffffffffff98UL;
> #line 324
>   goto ldv_52292;
>   ldv_52291: ;
40854c40525
<   INIT_LIST_HEAD(& new->w.list);
---
>   if (((unsigned long )req->rq_state & 1UL) == 0UL) {
40856c40527,40530
<   new->w.cb = 0;
---
>     goto ldv_52290;
>   } else {
> 
>   }
40858c40532
<   new->next = 0;
---
>   if ((unsigned long )req->w.ldv_50388.mdev != (unsigned long )mdev) {
40860,40870c40534
<   new->n_writes = 0;
< #line 330
<   newest_before = mdev->newest_tle;
< #line 331
<   new->br_number = newest_before->br_number + 1U;
< #line 332
<   if ((unsigned long )mdev->newest_tle != (unsigned long )new) {
< #line 333
<     (mdev->newest_tle)->next = new;
< #line 334
<     mdev->newest_tle = new;
---
>     goto ldv_52290;
40874c40538,40557
< #line 336
---
> #line 329
>   _req_mod(req, ABORT_DISK_IO);
>   ldv_52290: 
> #line 324
>   req = r;
> #line 324
>   __mptr___1 = (struct list_head  const  *)r->tl_requests.next;
> #line 324
>   r = (struct drbd_request *)__mptr___1 + 0xffffffffffffff98UL;
>   ldv_52292: ;
> #line 324
>   if ((unsigned long )(& req->tl_requests) != (unsigned long )(& tconn->transfer_log)) {
> #line 325
>     goto ldv_52291;
>   } else {
> 
>   }
> #line 331
>   spin_unlock_irq(& tconn->req_lock);
> #line 332
40878,40879c40561,40562
< #line 348 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void tl_release(struct drbd_conf *mdev , unsigned int barrier_nr , unsigned int set_size ) 
---
> #line 334 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> static int drbd_thread_setup(void *arg ) 
40881,40892c40564,40570
<   struct drbd_tl_epoch *b ;
<   struct drbd_tl_epoch *nob ;
<   struct list_head *le ;
<   struct list_head *tle ;
<   struct drbd_request *r ;
<   struct list_head  const  *__mptr ;
<   int tmp ;
<   int tmp___0 ;
<   int tmp___1 ;
<   int tmp___2 ;
<   union drbd_state val ;
<   union drbd_state mask ;
---
>   struct drbd_thread *thi ;
>   struct drbd_tconn *tconn ;
>   unsigned long flags ;
>   int retval ;
>   struct task_struct *tmp ;
>   raw_spinlock_t *tmp___0 ;
>   struct task_struct *tmp___1 ;
40895,40898c40573,40589
< #line 355
<   spin_lock_irq(& mdev->req_lock);
< #line 357
<   b = mdev->oldest_tle;
---
> #line 336
>   thi = (struct drbd_thread *)arg;
> #line 337
>   tconn = thi->tconn;
> #line 341
>   tmp = get_current();
> #line 341
>   snprintf((char *)(& tmp->comm), 16UL, "drbd_%c_%s", (int )thi->name[0], (thi->tconn)->name);
>   restart: 
> #line 345
>   retval = (*(thi->function))(thi);
> #line 347
>   tmp___0 = spinlock_check(& thi->t_lock);
> #line 347
>   flags = _raw_spin_lock_irqsave(tmp___0);
> #line 359
>   if ((unsigned int )thi->t_state == 3U) {
40900c40591
<   if ((unsigned long )b == (unsigned long )((struct drbd_tl_epoch *)0)) {
---
>     printk("\016d-con %s: Restarting %s thread\n", tconn->name, (char *)(& thi->name));
40902,40903c40593,40595
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "BAD! BarrierAck #%u received, but no epoch in tl!?\n",
<             barrier_nr);
---
>     thi->t_state = RUNNING;
> #line 362
>     spin_unlock_irqrestore(& thi->t_lock, flags);
40905c40597
<     goto bail;
---
>     goto restart;
40909,40910d40600
< #line 365
<   if (b->br_number != barrier_nr) {
40912,40913c40602,40604
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "BAD! BarrierAck #%u received, expected #%u!\n",
<             barrier_nr, b->br_number);
---
>   thi->task = 0;
> #line 367
>   thi->t_state = NONE;
40915,40918c40606,40608
<     goto bail;
<   } else {
< 
<   }
---
>   __asm__  volatile   ("mfence": : : "memory");
> #line 369
>   complete_all(& thi->stop);
40920,40946c40610,40616
<   if ((unsigned int )b->n_writes != set_size) {
< #line 371
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "BAD! BarrierAck #%u received with n_writes=%u, expected n_writes=%u!\n",
<             barrier_nr, set_size, b->n_writes);
< #line 373
<     goto bail;
<   } else {
< 
<   }
< #line 377
<   le = b->requests.next;
< #line 377
<   tle = le->next;
< #line 377
<   goto ldv_51993;
<   ldv_51992: 
< #line 378
<   __mptr = (struct list_head  const  *)le;
< #line 378
<   r = (struct drbd_request *)__mptr + 0xffffffffffffffb8UL;
< #line 379
<   _req_mod(r, barrier_acked);
< #line 377
<   le = tle;
< #line 377
<   tle = le->next;
<   ldv_51993: ;
---
>   spin_unlock_irqrestore(& thi->t_lock, flags);
> #line 372
>   tmp___1 = get_current();
> #line 372
>   printk("\016d-con %s: Terminating %s\n", tconn->name, (char *)(& tmp___1->comm));
> #line 376
>   kref_put(& tconn->kref, & conn_destroy);
40948c40618
<   if ((unsigned long )(& b->requests) != (unsigned long )le) {
---
>   ldv_module_put_3(& __this_module);
40950,40951c40620,40627
<     goto ldv_51992;
<   } else {
---
>   return (retval);
> }
> }
> #line 381 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> static void drbd_thread_init(struct drbd_tconn *tconn , struct drbd_thread *thi ,
>                              int (*func)(struct drbd_thread * ) , char *name ) 
> { 
>   struct lock_class_key __key ;
40953c40629,40665
<   }
---
>   {
> #line 384
>   spinlock_check(& thi->t_lock);
> #line 384
>   __raw_spin_lock_init(& thi->t_lock.ldv_6135.rlock, "&(&thi->t_lock)->rlock", & __key);
> #line 385
>   thi->task = 0;
> #line 386
>   thi->t_state = NONE;
> #line 387
>   thi->function = func;
> #line 388
>   thi->tconn = tconn;
> #line 389
>   strncpy((char *)(& thi->name), (char const   *)name, 9UL);
> #line 390
>   return;
> }
> }
> #line 392 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> int drbd_thread_start(struct drbd_thread *thi ) 
> { 
>   struct drbd_tconn *tconn ;
>   struct task_struct *nt ;
>   unsigned long flags ;
>   raw_spinlock_t *tmp ;
>   struct task_struct *tmp___0 ;
>   struct task_struct *tmp___1 ;
>   bool tmp___2 ;
>   int tmp___3 ;
>   struct task_struct *tmp___4 ;
>   long tmp___5 ;
>   raw_spinlock_t *tmp___6 ;
>   struct task_struct *tmp___7 ;
>   struct task_struct *tmp___8 ;
> 
>   {
40955,40965c40667
<   list_splice_init(& b->requests, & mdev->barrier_acked_requests);
< #line 396
<   nob = b->next;
< #line 397
<   tmp = drbd_test_and_clear_flag(mdev, CREATE_BARRIER);
< #line 397
<   if (tmp != 0) {
< #line 398
<     _tl_add_barrier(mdev, b);
< #line 399
<     if ((unsigned long )nob != (unsigned long )((struct drbd_tl_epoch *)0)) {
---
>   tconn = thi->tconn;
40967,40971c40669,40674
<       mdev->oldest_tle = nob;
<     } else {
< 
<     }
<   } else {
---
>   tmp = spinlock_check(& thi->t_lock);
> #line 400
>   flags = _raw_spin_lock_irqsave(tmp);
> #line 402
>   switch ((unsigned int )thi->t_state) {
>   case 0U: 
40973c40676
<     if ((unsigned long )nob == (unsigned long )((struct drbd_tl_epoch *)0)) {
---
>   tmp___0 = get_current();
40975,40993c40678,40687
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( nob != NULL ) in %s:%d\n",
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<               404);
<     } else {
< 
<     }
< #line 405
<     mdev->oldest_tle = nob;
< #line 406
<     kfree((void const   *)b);
<   }
< #line 409
<   spin_unlock_irq(& mdev->req_lock);
< #line 410
<   tmp___0 = atomic_dec_and_test(& mdev->ap_pending_cnt);
< #line 410
<   if (tmp___0 != 0) {
< #line 410
<     __wake_up(& mdev->misc_wait, 3U, 1, 0);
---
>   tmp___1 = get_current();
> #line 404
>   printk("\016d-con %s: Starting %s thread (from %s [%d])\n", tconn->name, (char *)(& thi->name),
>          (char *)(& tmp___1->comm), tmp___0->pid);
> #line 408
>   tmp___2 = ldv_try_module_get_4(& __this_module);
> #line 408
>   if (tmp___2) {
> #line 408
>     tmp___3 = 0;
40995c40689,40690
< 
---
> #line 408
>     tmp___3 = 1;
40996a40692,40695
> #line 408
>   if (tmp___3) {
> #line 409
>     printk("\vd-con %s: Failed to get module reference in drbd_thread_start\n", tconn->name);
40998,41005c40697,40699
<   tmp___2 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
< #line 410
<   if (tmp___2 < 0) {
< #line 410
<     tmp___1 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
< #line 410
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: ap_pending_cnt = %d < 0 !\n",
<             "tl_release", 410, tmp___1);
---
>     spin_unlock_irqrestore(& thi->t_lock, flags);
> #line 411
>     return (0);
41009,41021c40703,40704
< #line 412
<   return;
<   bail: 
< #line 415
<   spin_unlock_irq(& mdev->req_lock);
< #line 416
<   val.i = 0U;
< #line 416
<   val.ldv_39979.conn = 6U;
< #line 416
<   mask.i = 0U;
< #line 416
<   mask.ldv_39979.conn = 31U;
---
> #line 414
>   kref_get(& (thi->tconn)->kref);
41023c40706,40708
<   drbd_force_state(mdev, mask, val);
---
>   init_completion(& thi->stop);
> #line 417
>   thi->reset_cpu_mask = 1;
41025,41045c40710,40732
<   return;
< }
< }
< #line 428 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static void _tl_restart(struct drbd_conf *mdev , enum drbd_req_event what ) 
< { 
<   struct drbd_tl_epoch *b ;
<   struct drbd_tl_epoch *tmp ;
<   struct drbd_tl_epoch **pn ;
<   struct list_head *le ;
<   struct list_head *tle ;
<   struct list_head carry_reads ;
<   struct drbd_request *req ;
<   int rv ;
<   int n_writes ;
<   int n_reads ;
<   struct list_head  const  *__mptr ;
<   int tmp___0 ;
<   int tmp___1 ;
<   int tmp___2 ;
<   struct list_head  const  *__mptr___0 ;
---
>   thi->t_state = RUNNING;
> #line 419
>   spin_unlock_irqrestore(& thi->t_lock, flags);
> #line 420
>   tmp___4 = get_current();
> #line 420
>   flush_signals(tmp___4);
> #line 422
>   nt = kthread_create_on_node(& drbd_thread_setup, (void *)thi, -1, "drbd_%c_%s",
>                               (int )thi->name[0], (thi->tconn)->name);
> #line 425
>   tmp___5 = IS_ERR((void const   *)nt);
> #line 425
>   if (tmp___5 != 0L) {
> #line 426
>     printk("\vd-con %s: Couldn\'t start thread\n", tconn->name);
> #line 428
>     kref_put(& tconn->kref, & conn_destroy);
> #line 429
>     ldv_module_put_5(& __this_module);
> #line 430
>     return (0);
>   } else {
41047c40734,40742
<   {
---
>   }
> #line 432
>   tmp___6 = spinlock_check(& thi->t_lock);
> #line 432
>   flags = _raw_spin_lock_irqsave(tmp___6);
> #line 433
>   thi->task = nt;
> #line 434
>   thi->t_state = RUNNING;
41049c40744
<   b = mdev->oldest_tle;
---
>   spin_unlock_irqrestore(& thi->t_lock, flags);
41051c40746
<   pn = & mdev->oldest_tle;
---
>   wake_up_process(nt);
41053,41056c40748,40749
<   goto ldv_52028;
<   ldv_52027: 
< #line 438
<   n_writes = 0;
---
>   goto ldv_52328;
>   case 2U: 
41058c40751
<   n_reads = 0;
---
>   thi->t_state = RESTARTING;
41060,41075c40753,40761
<   INIT_LIST_HEAD(& carry_reads);
< #line 441
<   le = b->requests.next;
< #line 441
<   tle = le->next;
< #line 441
<   goto ldv_52020;
<   ldv_52019: 
< #line 442
<   __mptr = (struct list_head  const  *)le;
< #line 442
<   req = (struct drbd_request *)__mptr + 0xffffffffffffffb8UL;
< #line 443
<   rv = _req_mod(req, what);
< #line 445
<   n_writes = (rv & 1) + n_writes;
---
>   tmp___7 = get_current();
> #line 440
>   tmp___8 = get_current();
> #line 440
>   printk("\016d-con %s: Restarting %s thread (from %s [%d])\n", tconn->name, (char *)(& thi->name),
>          (char *)(& tmp___8->comm), tmp___7->pid);
>   case 1U: ;
>   case 3U: ;
>   default: 
41077,41088c40763,40765
<   n_reads = ((rv & 2) >> 1) + n_reads;
< #line 441
<   le = tle;
< #line 441
<   tle = le->next;
<   ldv_52020: ;
< #line 441
<   if ((unsigned long )(& b->requests) != (unsigned long )le) {
< #line 442
<     goto ldv_52019;
<   } else {
< 
---
>   spin_unlock_irqrestore(& thi->t_lock, flags);
> #line 447
>   goto ldv_52328;
41090,41091c40767
< #line 448
<   tmp = b->next;
---
>   ldv_52328: ;
41093,41113c40769,40778
<   if (n_writes != 0) {
< #line 451
<     if ((unsigned int )what == 24U) {
< #line 452
<       b->n_writes = n_writes;
< #line 453
<       if ((unsigned long )b->w.cb == (unsigned long )((int (*)(struct drbd_conf * ,
<                                                                struct drbd_work * ,
<                                                                int  ))0)) {
< #line 454
<         b->w.cb = & w_send_barrier;
< #line 455
<         inc_ap_pending(mdev);
< #line 456
<         drbd_set_flag(mdev, CREATE_BARRIER);
<       } else {
< 
<       }
< #line 459
<       drbd_queue_work(& mdev->data.work, & b->w);
<     } else {
---
>   return (1);
> }
> }
> #line 454 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> void _drbd_thread_stop(struct drbd_thread *thi , int restart , int wait ) 
> { 
>   unsigned long flags ;
>   enum drbd_thread_state ns ;
>   raw_spinlock_t *tmp ;
>   struct task_struct *tmp___0 ;
41115c40780,40782
<     }
---
>   {
> #line 458
>   ns = restart != 0 ? RESTARTING : EXITING;
41117,41118c40784,40786
<     pn = & b->next;
<   } else {
---
>   tmp = spinlock_check(& thi->t_lock);
> #line 461
>   flags = _raw_spin_lock_irqsave(tmp);
41120c40788
<     if (n_reads != 0) {
---
>   if ((unsigned int )thi->t_state == 0U) {
41122c40790,40794
<       list_add(& carry_reads, & b->requests);
---
>     spin_unlock_irqrestore(& thi->t_lock, flags);
> #line 465
>     if (restart != 0) {
> #line 466
>       drbd_thread_start(thi);
41127,41138c40799,40800
<     list_del(& b->requests);
< #line 472
<     if ((unsigned long )b->w.cb != (unsigned long )((int (*)(struct drbd_conf * ,
<                                                              struct drbd_work * ,
<                                                              int  ))0)) {
< #line 473
<       tmp___0 = atomic_dec_and_test(& mdev->ap_pending_cnt);
< #line 473
<       if (tmp___0 != 0) {
< #line 473
<         __wake_up(& mdev->misc_wait, 3U, 1, 0);
<       } else {
---
>     return;
>   } else {
41140,41146c40802,40808
<       }
< #line 473
<       tmp___2 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
< #line 473
<       if (tmp___2 < 0) {
< #line 473
<         tmp___1 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
---
>   }
> #line 470
>   if ((unsigned int )thi->t_state != (unsigned int )ns) {
> #line 471
>     if ((unsigned long )thi->task == (unsigned long )((struct task_struct *)0)) {
> #line 472
>       spin_unlock_irqrestore(& thi->t_lock, flags);
41148,41152c40810
<         dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: ap_pending_cnt = %d < 0 !\n",
<                 "_tl_restart", 473, tmp___1);
<       } else {
< 
<       }
---
>       return;
41156,41159c40814,40815
< #line 475
<     if ((unsigned long )mdev->newest_tle == (unsigned long )b) {
< #line 477
<       if ((unsigned long )tmp != (unsigned long )((struct drbd_tl_epoch *)0)) {
---
> #line 476
>     thi->t_state = ns;
41161,41166c40817
<         dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( tmp == NULL ) in %s:%d\n",
<                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<                 477);
<       } else {
< 
<       }
---
>     __asm__  volatile   ("mfence": : : "memory");
41168c40819,40821
<       INIT_LIST_HEAD(& b->requests);
---
>     init_completion(& thi->stop);
> #line 479
>     tmp___0 = get_current();
41170c40823
<       list_splice((struct list_head  const  *)(& carry_reads), & b->requests);
---
>     if ((unsigned long )thi->task != (unsigned long )tmp___0) {
41172,41182c40825
<       INIT_LIST_HEAD(& b->w.list);
< #line 481
<       b->w.cb = 0;
< #line 482
<       b->br_number = random32();
< #line 483
<       b->n_writes = 0;
< #line 485
<       *pn = b;
< #line 486
<       goto ldv_52026;
---
>       force_sig(1, thi->task);
41186,41199d40828
< #line 488
<     *pn = tmp;
< #line 489
<     kfree((void const   *)b);
<   }
< #line 491
<   b = tmp;
< #line 492
<   list_splice((struct list_head  const  *)(& carry_reads), & b->requests);
<   ldv_52028: ;
< #line 437
<   if ((unsigned long )b != (unsigned long )((struct drbd_tl_epoch *)0)) {
< #line 438
<     goto ldv_52027;
41203,41225c40832,40837
<   ldv_52026: 
< #line 498
<   le = mdev->barrier_acked_requests.next;
< #line 498
<   tle = le->next;
< #line 498
<   goto ldv_52032;
<   ldv_52031: 
< #line 499
<   __mptr___0 = (struct list_head  const  *)le;
< #line 499
<   req = (struct drbd_request *)__mptr___0 + 0xffffffffffffffb8UL;
< #line 500
<   _req_mod(req, what);
< #line 498
<   le = tle;
< #line 498
<   tle = le->next;
<   ldv_52032: ;
< #line 498
<   if ((unsigned long )(& mdev->barrier_acked_requests) != (unsigned long )le) {
< #line 499
<     goto ldv_52031;
---
> #line 483
>   spin_unlock_irqrestore(& thi->t_lock, flags);
> #line 485
>   if (wait != 0) {
> #line 486
>     wait_for_completion(& thi->stop);
41229,41230c40841
< 
< #line 503
---
> #line 487
41234,41235c40845,40846
< #line 513 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void tl_clear(struct drbd_conf *mdev ) 
---
> #line 489 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> static struct drbd_thread *drbd_task_to_thread(struct drbd_tconn *tconn , struct task_struct *task ) 
41236a40848
>   struct drbd_thread *thi ;
41237a40850,40861
>   {
> #line 491
>   thi = (unsigned long )tconn->receiver.task == (unsigned long )task ? & tconn->receiver : ((unsigned long )tconn->asender.task == (unsigned long )task ? & tconn->asender : ((unsigned long )tconn->worker.task == (unsigned long )task ? & tconn->worker : 0));
> #line 496
>   return (thi);
> }
> }
> #line 499 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> char *drbd_task_to_thread_name(struct drbd_tconn *tconn , struct task_struct *task ) 
> { 
>   struct drbd_thread *thi ;
>   struct drbd_thread *tmp ;
41240,41247c40864,40869
< #line 515
<   spin_lock_irq(& mdev->req_lock);
< #line 516
<   _tl_clear(mdev);
< #line 517
<   spin_unlock_irq(& mdev->req_lock);
< #line 518
<   return;
---
> #line 501
>   tmp = drbd_task_to_thread(tconn, task);
> #line 501
>   thi = tmp;
> #line 502
>   return ((unsigned long )thi != (unsigned long )((struct drbd_thread *)0) ? (char *)(& thi->name) : (char *)(& task->comm));
41250,41251c40872,40873
< #line 520 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static void _tl_clear(struct drbd_conf *mdev ) 
---
> #line 505 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> int conn_lowest_minor(struct drbd_tconn *tconn ) 
41253,41257c40875,40879
<   struct list_head *le ;
<   struct list_head *tle ;
<   struct drbd_request *r ;
<   int tmp ;
<   struct list_head  const  *__mptr ;
---
>   struct drbd_conf *mdev ;
>   int vnr ;
>   int m ;
>   void *tmp ;
>   unsigned int tmp___0 ;
41260,41269c40882,40895
< #line 525
<   _tl_restart(mdev, connection_lost_while_pending);
< #line 528
<   tmp = list_empty((struct list_head  const  *)(& mdev->out_of_sequence_requests));
< #line 528
<   if (tmp == 0) {
< #line 528
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( list_empty(&mdev->out_of_sequence_requests) ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             528);
---
> #line 508
>   vnr = 0;
> #line 510
>   rcu_read_lock();
> #line 511
>   tmp = idr_get_next(& tconn->volumes, & vnr);
> #line 511
>   mdev = (struct drbd_conf *)tmp;
> #line 512
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 512
>     tmp___0 = mdev_to_minor(mdev);
> #line 512
>     m = (int )tmp___0;
41271c40897,40898
< 
---
> #line 512
>     m = -1;
41272a40900,40917
> #line 513
>   rcu_read_unlock();
> #line 515
>   return (m);
> }
> }
> #line 526 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> void drbd_calc_cpu_mask(struct drbd_tconn *tconn ) 
> { 
>   int ord ;
>   int cpu ;
>   unsigned int tmp ;
>   int tmp___0 ;
>   unsigned int tmp___1 ;
>   int tmp___2 ;
>   unsigned int tmp___3 ;
> 
>   {
41274,41276c40919
<   le = mdev->out_of_sequence_requests.next;
< #line 531
<   tle = le->next;
---
>   tmp = cpumask_weight((struct cpumask  const  *)tconn->cpu_mask);
41278,41281c40921
<   goto ldv_52046;
<   ldv_52045: 
< #line 532
<   __mptr = (struct list_head  const  *)le;
---
>   if (tmp != 0U) {
41283c40923,40932
<   r = (struct drbd_request *)__mptr + 0xffffffffffffffb8UL;
---
>     return;
>   } else {
> 
>   }
> #line 534
>   tmp___0 = conn_lowest_minor(tconn);
> #line 534
>   tmp___1 = cpumask_weight(cpu_online_mask);
> #line 534
>   ord = (int )((unsigned int )tmp___0 % tmp___1);
41285,41294c40934,40959
<   _req_mod(r, connection_lost_while_pending);
< #line 531
<   le = tle;
< #line 531
<   tle = le->next;
<   ldv_52046: ;
< #line 531
<   if ((unsigned long )(& mdev->out_of_sequence_requests) != (unsigned long )le) {
< #line 532
<     goto ldv_52045;
---
>   cpu = -1;
> #line 535
>   goto ldv_52365;
>   ldv_52364: 
> #line 536
>   tmp___2 = ord;
> #line 536
>   ord = ord - 1;
> #line 536
>   if (tmp___2 == 0) {
> #line 537
>     cpumask_set_cpu((unsigned int )cpu, tconn->cpu_mask);
> #line 538
>     return;
>   } else {
> 
>   }
>   ldv_52365: 
> #line 535
>   tmp___3 = cpumask_next(cpu, cpu_online_mask);
> #line 535
>   cpu = (int )tmp___3;
> #line 535
>   if (cpu < nr_cpu_ids) {
> #line 536
>     goto ldv_52364;
41298,41301d40962
< #line 539
<   drbd_clear_flag(mdev, CREATE_BARRIER);
< #line 541
<   memset((void *)mdev->app_reads_hash, 0, 120UL);
41302a40964,40965
>   cpumask_setall(tconn->cpu_mask);
> #line 543
41306,41307c40969,40970
< #line 545 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void tl_restart(struct drbd_conf *mdev , enum drbd_req_event what ) 
---
> #line 553 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> void drbd_thread_current_set_cpu(struct drbd_thread *thi ) 
41309c40972,40973
< 
---
>   struct task_struct *p ;
>   struct task_struct *tmp ;
41312,41318c40976,40991
< #line 547
<   spin_lock_irq(& mdev->req_lock);
< #line 548
<   _tl_restart(mdev, what);
< #line 549
<   spin_unlock_irq(& mdev->req_lock);
< #line 550
---
> #line 555
>   tmp = get_current();
> #line 555
>   p = tmp;
> #line 557
>   if (thi->reset_cpu_mask == 0) {
> #line 558
>     return;
>   } else {
> 
>   }
> #line 559
>   thi->reset_cpu_mask = 0;
> #line 560
>   set_cpus_allowed_ptr(p, (struct cpumask  const  *)(thi->tconn)->cpu_mask);
> #line 561
41322,41323c40995,40996
< #line 556 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void tl_abort_disk_io(struct drbd_conf *mdev ) 
---
> #line 571 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> unsigned int drbd_header_size(struct drbd_tconn *tconn ) 
41325,41370d40997
<   struct drbd_tl_epoch *b ;
<   struct list_head *le ;
<   struct list_head *tle ;
<   struct drbd_request *req ;
<   struct list_head  const  *__mptr ;
<   struct list_head  const  *__mptr___0 ;
< 
<   {
< #line 562
<   spin_lock_irq(& mdev->req_lock);
< #line 563
<   b = mdev->oldest_tle;
< #line 564
<   goto ldv_52066;
<   ldv_52065: 
< #line 565
<   le = b->requests.next;
< #line 565
<   tle = le->next;
< #line 565
<   goto ldv_52063;
<   ldv_52062: 
< #line 566
<   __mptr = (struct list_head  const  *)le;
< #line 566
<   req = (struct drbd_request *)__mptr + 0xffffffffffffffb8UL;
< #line 567
<   if ((req->rq_state & 1UL) == 0UL) {
< #line 568
<     goto ldv_52061;
<   } else {
< 
<   }
< #line 569
<   _req_mod(req, abort_disk_io);
<   ldv_52061: 
< #line 565
<   le = tle;
< #line 565
<   tle = le->next;
<   ldv_52063: ;
< #line 565
<   if ((unsigned long )(& b->requests) != (unsigned long )le) {
< #line 566
<     goto ldv_52062;
<   } else {
41372,41380d40998
<   }
< #line 571
<   b = b->next;
<   ldv_52066: ;
< #line 564
<   if ((unsigned long )b != (unsigned long )((struct drbd_tl_epoch *)0)) {
< #line 565
<     goto ldv_52065;
<   } else {
41382,41391c41000,41002
<   }
< #line 574
<   le = mdev->barrier_acked_requests.next;
< #line 574
<   tle = le->next;
< #line 574
<   goto ldv_52072;
<   ldv_52071: 
< #line 575
<   __mptr___0 = (struct list_head  const  *)le;
---
>   {
> #line 573
>   if (tconn->agreed_pro_version > 99) {
41393,41397c41004
<   req = (struct drbd_request *)__mptr___0 + 0xffffffffffffffb8UL;
< #line 576
<   if ((req->rq_state & 1UL) == 0UL) {
< #line 577
<     goto ldv_52070;
---
>     return (16U);
41399c41006,41007
< 
---
> #line 580
>     return (8U);
41401,41413c41009,41016
< #line 578
<   _req_mod(req, abort_disk_io);
<   ldv_52070: 
< #line 574
<   le = tle;
< #line 574
<   tle = le->next;
<   ldv_52072: ;
< #line 574
<   if ((unsigned long )(& mdev->barrier_acked_requests) != (unsigned long )le) {
< #line 575
<     goto ldv_52071;
<   } else {
---
> }
> }
> #line 584 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> static unsigned int prepare_header80(struct p_header80 *h , enum drbd_packet cmd ,
>                                      int size ) 
> { 
>   __u16 tmp ;
>   __u16 tmp___0 ;
41415,41419c41018,41030
<   }
< #line 581
<   spin_unlock_irq(& mdev->req_lock);
< #line 582
<   return;
---
>   {
> #line 586
>   h->magic = 1728214147U;
> #line 587
>   tmp = __fswab16((int )((__u16 )cmd));
> #line 587
>   h->command = tmp;
> #line 588
>   tmp___0 = __fswab16((int )((__u16 )size));
> #line 588
>   h->length = tmp___0;
> #line 589
>   return (8U);
41422,41423c41033,41035
< #line 590 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static int cl_wide_st_chg(struct drbd_conf *mdev , union drbd_state os , union drbd_state ns ) 
---
> #line 592 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> static unsigned int prepare_header95(struct p_header95 *h , enum drbd_packet cmd ,
>                                      int size ) 
41424a41037,41038
>   __u16 tmp ;
>   __u32 tmp___0 ;
41425a41040,41061
>   {
> #line 594
>   h->magic = 23171U;
> #line 595
>   tmp = __fswab16((int )((__u16 )cmd));
> #line 595
>   h->command = tmp;
> #line 596
>   tmp___0 = __fswab32((__u32 )size);
> #line 596
>   h->length = tmp___0;
> #line 597
>   return (8U);
> }
> }
> #line 600 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> static unsigned int prepare_header100(struct p_header100 *h , enum drbd_packet cmd ,
>                                       int size , int vnr ) 
> { 
>   __u16 tmp ;
>   __u16 tmp___0 ;
>   __u32 tmp___1 ;
41428,41429c41064,41081
< #line 593
<   return (((((int )os.ldv_39979.conn > 9 && (int )ns.ldv_39979.conn > 9) && (((((unsigned int )*((unsigned char *)(& os) + 0UL) != 1U && (unsigned int )*((unsigned char *)(& ns) + 0UL) == 1U) || ((unsigned int )*((unsigned short *)(& os) + 0UL) != 192U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 192U)) || ((unsigned int )*((unsigned short *)(& os) + 0UL) != 176U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 176U)) || ((unsigned int )*((unsigned char *)(& os) + 1UL) != 4U && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 4U))) || ((int )os.ldv_39979.conn > 9 && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 16U)) || ((unsigned int )*((unsigned short *)(& os) + 0UL) == 160U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 288U));
---
> #line 603
>   h->magic = 552345734U;
> #line 604
>   tmp = __fswab16((int )((__u16 )vnr));
> #line 604
>   h->volume = tmp;
> #line 605
>   tmp___0 = __fswab16((int )((__u16 )cmd));
> #line 605
>   h->command = tmp___0;
> #line 606
>   tmp___1 = __fswab32((__u32 )size);
> #line 606
>   h->length = tmp___1;
> #line 607
>   h->pad = 0U;
> #line 608
>   return (16U);
41432,41434c41084,41086
< #line 603 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< enum drbd_state_rv drbd_change_state(struct drbd_conf *mdev , enum chg_state_flags f ,
<                                      union drbd_state mask , union drbd_state val ) 
---
> #line 611 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> static unsigned int prepare_header(struct drbd_tconn *tconn , int vnr , void *buffer ,
>                                    enum drbd_packet cmd , int size ) 
41436,41440c41088,41090
<   unsigned long flags ;
<   union drbd_state os ;
<   union drbd_state ns ;
<   enum drbd_state_rv rv ;
<   raw_spinlock_t *tmp ;
---
>   unsigned int tmp ;
>   unsigned int tmp___0 ;
>   unsigned int tmp___1 ;
41443,41452d41092
< #line 610
<   tmp = spinlock_check(& mdev->req_lock);
< #line 610
<   flags = _raw_spin_lock_irqsave(tmp);
< #line 611
<   os = mdev->state;
< #line 612
<   ns.i = (os.i & ~ mask.i) | val.i;
< #line 613
<   rv = _drbd_set_state(mdev, ns, f, 0);
41454c41094
<   ns = mdev->state;
---
>   if (tconn->agreed_pro_version > 99) {
41456,41458c41096,41111
<   spin_unlock_irqrestore(& mdev->req_lock, flags);
< #line 617
<   return (rv);
---
>     tmp = prepare_header100((struct p_header100 *)buffer, cmd, size, vnr);
> #line 615
>     return (tmp);
>   } else
> #line 616
>   if (tconn->agreed_pro_version > 94 && (unsigned int )size > 32768U) {
> #line 618
>     tmp___0 = prepare_header95((struct p_header95 *)buffer, cmd, size);
> #line 618
>     return (tmp___0);
>   } else {
> #line 620
>     tmp___1 = prepare_header80((struct p_header80 *)buffer, cmd, size);
> #line 620
>     return (tmp___1);
>   }
41461,41462c41114,41115
< #line 626 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void drbd_force_state(struct drbd_conf *mdev , union drbd_state mask , union drbd_state val ) 
---
> #line 623 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> static void *__conn_prepare_command(struct drbd_tconn *tconn , struct drbd_socket *sock ) 
41464c41117
< 
---
>   unsigned int tmp ;
41467,41470c41120,41130
< #line 629
<   drbd_change_state(mdev, CS_HARD, mask, val);
< #line 630
<   return;
---
> #line 626
>   if ((unsigned long )sock->socket == (unsigned long )((struct socket *)0)) {
> #line 627
>     return (0);
>   } else {
> 
>   }
> #line 628
>   tmp = drbd_header_size(tconn);
> #line 628
>   return (sock->sbuf + (unsigned long )tmp);
41473,41485c41133,41134
< #line 632
< static enum drbd_state_rv is_valid_state(struct drbd_conf *mdev , union drbd_state ns ) ;
< #line 633
< static enum drbd_state_rv is_valid_state_transition(struct drbd_conf *mdev , union drbd_state ns ,
<                                                     union drbd_state os ) ;
< #line 644
< static union drbd_state sanitize_state(struct drbd_conf *mdev , union drbd_state os ,
<                                        union drbd_state ns , enum sanitize_state_warnings *warn ) ;
< #line 646
< int drbd_send_state_req(struct drbd_conf *mdev , union drbd_state mask , union drbd_state val ) ;
< #line 650 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static enum drbd_state_rv _req_st_cond(struct drbd_conf *mdev , union drbd_state mask ,
<                                        union drbd_state val ) 
---
> #line 631 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> void *conn_prepare_command(struct drbd_tconn *tconn , struct drbd_socket *sock ) 
41487,41494c41136
<   union drbd_state os ;
<   union drbd_state ns ;
<   unsigned long flags ;
<   enum drbd_state_rv rv ;
<   int tmp ;
<   int tmp___0 ;
<   raw_spinlock_t *tmp___1 ;
<   int tmp___2 ;
---
>   void *p ;
41497,41502c41139,41146
< #line 657
<   tmp = drbd_test_and_clear_flag(mdev, CL_ST_CHG_SUCCESS);
< #line 657
<   if (tmp != 0) {
< #line 658
<     return (SS_CW_SUCCESS);
---
> #line 635
>   mutex_lock_nested(& sock->mutex, 0U);
> #line 636
>   p = __conn_prepare_command(tconn, sock);
> #line 637
>   if ((unsigned long )p == (unsigned long )((void *)0)) {
> #line 638
>     mutex_unlock(& sock->mutex);
41506,41512c41150,41157
< #line 660
<   tmp___0 = drbd_test_and_clear_flag(mdev, CL_ST_CHG_FAIL);
< #line 660
<   if (tmp___0 != 0) {
< #line 661
<     return (SS_CW_FAILED_BY_PEER);
<   } else {
---
> #line 640
>   return (p);
> }
> }
> #line 643 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> void *drbd_prepare_command(struct drbd_conf *mdev , struct drbd_socket *sock ) 
> { 
>   void *tmp ;
41514c41159,41175
<   }
---
>   {
> #line 645
>   tmp = conn_prepare_command(mdev->tconn, sock);
> #line 645
>   return (tmp);
> }
> }
> #line 648 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> static int __send_command(struct drbd_tconn *tconn , int vnr , struct drbd_socket *sock ,
>                           enum drbd_packet cmd , unsigned int header_size , void *data ,
>                           unsigned int size ) 
> { 
>   int msg_flags ;
>   int err ;
>   unsigned int tmp ;
> 
>   {
41516,41520c41177
<   rv = SS_UNKNOWN_ERROR;
< #line 664
<   tmp___1 = spinlock_check(& mdev->req_lock);
< #line 664
<   flags = _raw_spin_lock_irqsave(tmp___1);
---
>   msg_flags = (unsigned long )data != (unsigned long )((void *)0) ? 32768 : 0;
41522,41524c41179,41181
<   os = mdev->state;
< #line 666
<   ns.i = (os.i & ~ mask.i) | val.i;
---
>   tmp = prepare_header(tconn, vnr, sock->sbuf, cmd, (int )(header_size + size));
> #line 665
>   header_size = tmp + header_size;
41526,41528c41183
<   ns = sanitize_state(mdev, os, ns, 0);
< #line 669
<   tmp___2 = cl_wide_st_chg(mdev, os, ns);
---
>   err = drbd_send_all(tconn, sock->socket, sock->sbuf, (size_t )header_size, (unsigned int )msg_flags);
41530c41185
<   if (tmp___2 == 0) {
---
>   if ((unsigned long )data != (unsigned long )((void *)0) && err == 0) {
41532c41187
<     rv = SS_CW_NO_NEED;
---
>     err = drbd_send_all(tconn, sock->socket, data, (size_t )size, 0U);
41537,41548c41192,41200
<   if ((int )rv == 0) {
< #line 672
<     rv = is_valid_state(mdev, ns);
< #line 673
<     if ((int )rv == 1) {
< #line 674
<       rv = is_valid_state_transition(mdev, ns, os);
< #line 675
<       if ((int )rv == 1) {
< #line 676
<         rv = SS_UNKNOWN_ERROR;
<       } else {
---
>   return (err);
> }
> }
> #line 674 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> static int __conn_send_command(struct drbd_tconn *tconn , struct drbd_socket *sock ,
>                                enum drbd_packet cmd , unsigned int header_size , void *data ,
>                                unsigned int size ) 
> { 
>   int tmp ;
41550,41551c41202,41213
<       }
<     } else {
---
>   {
> #line 678
>   tmp = __send_command(tconn, 0, sock, cmd, header_size, data, size);
> #line 678
>   return (tmp);
> }
> }
> #line 681 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> int conn_send_command(struct drbd_tconn *tconn , struct drbd_socket *sock , enum drbd_packet cmd ,
>                       unsigned int header_size , void *data , unsigned int size ) 
> { 
>   int err ;
41553,41554c41215,41228
<     }
<   } else {
---
>   {
> #line 687
>   err = __conn_send_command(tconn, sock, cmd, header_size, data, size);
> #line 688
>   mutex_unlock(& sock->mutex);
> #line 689
>   return (err);
> }
> }
> #line 692 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> int drbd_send_command(struct drbd_conf *mdev , struct drbd_socket *sock , enum drbd_packet cmd ,
>                       unsigned int header_size , void *data , unsigned int size ) 
> { 
>   int err ;
41556,41560c41230,41236
<   }
< #line 679
<   spin_unlock_irqrestore(& mdev->req_lock, flags);
< #line 681
<   return (rv);
---
>   {
> #line 698
>   err = __send_command(mdev->tconn, mdev->vnr, sock, cmd, header_size, data, size);
> #line 700
>   mutex_unlock(& sock->mutex);
> #line 701
>   return (err);
41563,41565c41239,41240
< #line 695 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static enum drbd_state_rv drbd_req_state(struct drbd_conf *mdev , union drbd_state mask ,
<                                          union drbd_state val , enum chg_state_flags f ) 
---
> #line 704 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> int drbd_send_ping(struct drbd_tconn *tconn ) 
41567,41572c41242,41243
<   struct completion done ;
<   unsigned long flags ;
<   union drbd_state os ;
<   union drbd_state ns ;
<   enum drbd_state_rv rv ;
<   raw_spinlock_t *tmp ;
---
>   struct drbd_socket *sock ;
>   void *tmp ;
41574,41578d41244
<   wait_queue_t __wait ;
<   struct task_struct *tmp___1 ;
<   raw_spinlock_t *tmp___2 ;
<   int tmp___3 ;
<   struct task_struct *tmp___4 ;
41581,41589d41246
< #line 703
<   init_completion(& done);
< #line 705
<   if (((unsigned int )f & 8U) != 0U) {
< #line 706
<     ldv_mutex_lock_207(& mdev->state_mutex);
<   } else {
< 
<   }
41591,41593c41248
<   tmp = spinlock_check(& mdev->req_lock);
< #line 708
<   flags = _raw_spin_lock_irqsave(tmp);
---
>   sock = & tconn->meta;
41595c41250,41252
<   os = mdev->state;
---
>   tmp = conn_prepare_command(tconn, sock);
> #line 709
>   if ((unsigned long )tmp == (unsigned long )((void *)0)) {
41597c41254,41257
<   ns.i = (os.i & ~ mask.i) | val.i;
---
>     return (-5);
>   } else {
> 
>   }
41599,41610c41259,41269
<   ns = sanitize_state(mdev, os, ns, 0);
< #line 713
<   tmp___3 = cl_wide_st_chg(mdev, os, ns);
< #line 713
<   if (tmp___3 != 0) {
< #line 714
<     rv = is_valid_state(mdev, ns);
< #line 715
<     if ((int )rv == 1) {
< #line 716
<       rv = is_valid_state_transition(mdev, ns, os);
<     } else {
---
>   tmp___0 = conn_send_command(tconn, sock, P_PING, 0U, 0, 0U);
> #line 711
>   return (tmp___0);
> }
> }
> #line 714 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> int drbd_send_ping_ack(struct drbd_tconn *tconn ) 
> { 
>   struct drbd_socket *sock ;
>   void *tmp ;
>   int tmp___0 ;
41612,41614c41271,41273
<     }
< #line 717
<     spin_unlock_irqrestore(& mdev->req_lock, flags);
---
>   {
> #line 718
>   sock = & tconn->meta;
41616c41275,41277
<     if ((int )rv <= 0) {
---
>   tmp = conn_prepare_command(tconn, sock);
> #line 719
>   if ((unsigned long )tmp == (unsigned long )((void *)0)) {
41618,41621c41279,41280
<       if (((unsigned int )f & 2U) != 0U) {
< #line 721
<         print_st_err(mdev, os, ns, (int )rv);
<       } else {
---
>     return (-5);
>   } else {
41623,41626c41282,41311
<       }
< #line 722
<       goto abort;
<     } else {
---
>   }
> #line 721
>   tmp___0 = conn_send_command(tconn, sock, P_PING_ACK, 0U, 0, 0U);
> #line 721
>   return (tmp___0);
> }
> }
> #line 724 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> int drbd_send_sync_param(struct drbd_conf *mdev ) 
> { 
>   struct drbd_socket *sock ;
>   struct p_rs_param_95 *p ;
>   int size ;
>   int apv ;
>   enum drbd_packet cmd ;
>   struct net_conf *nc ;
>   struct disk_conf *dc ;
>   void *tmp ;
>   struct net_conf *_________p1 ;
>   bool __warned ;
>   int tmp___0 ;
>   int tmp___1 ;
>   size_t tmp___2 ;
>   int tmp___3 ;
>   struct disk_conf *_________p1___0 ;
>   bool __warned___0 ;
>   int tmp___4 ;
>   int tmp___5 ;
>   int tmp___6 ;
>   int tmp___7 ;
41628,41638c41313
<     }
< #line 725
<     drbd_state_lock___0(mdev);
< #line 726
<     tmp___0 = drbd_send_state_req(mdev, mask, val);
< #line 726
<     if (tmp___0 == 0) {
< #line 727
<       drbd_state_unlock(mdev);
< #line 728
<       rv = SS_CW_FAILED_BY_PEER;
---
>   {
41640,41650c41315
<       if (((unsigned int )f & 2U) != 0U) {
< #line 730
<         print_st_err(mdev, os, ns, (int )rv);
<       } else {
< 
<       }
< #line 731
<       goto abort;
<     } else {
< 
<     }
---
>   apv = (mdev->tconn)->agreed_pro_version;
41652c41317
<     if ((unsigned int )*((unsigned short *)(& mask) + 0UL) == 496U && (unsigned int )*((unsigned short *)(& val) + 0UL) == 16U) {
---
>   sock = & (mdev->tconn)->data;
41654,41661c41319,41323
<       drbd_set_flag(mdev, DISCONNECT_SENT);
<     } else {
< 
<     }
< #line 737
<     rv = _req_st_cond(mdev, mask, val);
< #line 737
<     if ((int )rv != 0) {
---
>   tmp = drbd_prepare_command(mdev, sock);
> #line 735
>   p = (struct p_rs_param_95 *)tmp;
> #line 736
>   if ((unsigned long )p == (unsigned long )((struct p_rs_param_95 *)0)) {
41663,41664c41325,41326
<       goto ldv_52147;
<     } else {
---
>     return (-5);
>   } else {
41666,41687c41328,41345
<     }
< #line 737
<     tmp___1 = get_current();
< #line 737
<     __wait.flags = 0U;
< #line 737
<     __wait.private = (void *)tmp___1;
< #line 737
<     __wait.func = & autoremove_wake_function;
< #line 737
<     __wait.task_list.next = & __wait.task_list;
< #line 737
<     __wait.task_list.prev = & __wait.task_list;
<     ldv_52150: 
< #line 737
<     prepare_to_wait(& mdev->state_wait, & __wait, 2);
< #line 737
<     rv = _req_st_cond(mdev, mask, val);
< #line 737
<     if ((int )rv != 0) {
< #line 737
<       goto ldv_52149;
---
>   }
> #line 739
>   rcu_read_lock();
> #line 740
>   _________p1 = *((struct net_conf * volatile  *)(& (mdev->tconn)->net_conf));
> #line 740
>   tmp___0 = debug_lockdep_rcu_enabled();
> #line 740
>   if (tmp___0 != 0 && ! __warned) {
> #line 740
>     tmp___1 = rcu_read_lock_held();
> #line 740
>     if (tmp___1 == 0 && 1) {
> #line 740
>       __warned = 1;
> #line 740
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared",
>                              740, "suspicious rcu_dereference_check() usage");
41691,41698c41349,41351
< #line 737
<     schedule();
< #line 737
<     goto ldv_52150;
<     ldv_52149: 
< #line 737
<     finish_wait(& mdev->state_wait, & __wait);
<     ldv_52147: ;
---
>   } else {
> 
>   }
41700,41702c41353
<     if ((int )rv <= 0) {
< #line 741
<       drbd_state_unlock(mdev);
---
>   nc = _________p1;
41704,41706c41355,41394
<       if (((unsigned int )f & 2U) != 0U) {
< #line 743
<         print_st_err(mdev, os, ns, (int )rv);
---
>   if (apv > 87) {
> #line 742
>     if (apv == 88) {
> #line 742
>       tmp___2 = strlen((char const   *)(& nc->verify_alg));
> #line 742
>       tmp___3 = (int )((unsigned int )tmp___2 + 5U);
>     } else {
> #line 742
>       tmp___3 = apv <= 94 ? 132 : 148;
>     }
> #line 742
>     size = tmp___3;
>   } else {
> #line 742
>     size = 4;
>   }
> #line 748
>   cmd = apv > 88 ? P_SYNC_PARAM89 : P_SYNC_PARAM;
> #line 751
>   memset((void *)(& p->verify_alg), 0, 128UL);
> #line 753
>   tmp___6 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 753
>   if (tmp___6 != 0) {
> #line 754
>     _________p1___0 = *((struct disk_conf * volatile  *)(& (mdev->ldev)->disk_conf));
> #line 754
>     tmp___4 = debug_lockdep_rcu_enabled();
> #line 754
>     if (tmp___4 != 0 && ! __warned___0) {
> #line 754
>       tmp___5 = rcu_read_lock_held();
> #line 754
>       if (tmp___5 == 0 && 1) {
> #line 754
>         __warned___0 = 1;
> #line 754
>         lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared",
>                                754, "suspicious rcu_dereference_check() usage");
41710,41711d41397
< #line 744
<       goto abort;
41715,41730c41401,41402
< #line 746
<     tmp___2 = spinlock_check(& mdev->req_lock);
< #line 746
<     flags = _raw_spin_lock_irqsave(tmp___2);
< #line 747
<     os = mdev->state;
< #line 748
<     ns.i = (os.i & ~ mask.i) | val.i;
< #line 749
<     rv = _drbd_set_state(mdev, ns, f, & done);
< #line 750
<     drbd_state_unlock(mdev);
<   } else {
< #line 752
<     rv = _drbd_set_state(mdev, ns, f, & done);
<   }
---
> #line 754
>     dc = _________p1___0;
41732c41404,41406
<   spin_unlock_irqrestore(& mdev->req_lock, flags);
---
>     p->resync_rate = __fswab32(dc->resync_rate);
> #line 756
>     p->c_plan_ahead = __fswab32(dc->c_plan_ahead);
41734,41738c41408
<   if (((unsigned int )f & 4U) != 0U && (int )rv == 1) {
< #line 758
<     tmp___4 = get_current();
< #line 758
<     if ((unsigned long )tmp___4 == (unsigned long )mdev->worker.task) {
---
>     p->c_delay_target = __fswab32(dc->c_delay_target);
41740,41745c41410
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( current != mdev->worker.task ) in %s:%d\n",
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<               758);
<     } else {
< 
<     }
---
>     p->c_fill_target = __fswab32(dc->c_fill_target);
41747c41412,41414
<     wait_for_completion(& done);
---
>     p->c_max_rate = __fswab32(dc->c_max_rate);
> #line 760
>     put_ldev(mdev);
41749,41751c41416,41417
< 
<   }
<   abort: ;
---
> #line 762
>     p->resync_rate = 4194304000U;
41753c41419
<   if (((unsigned int )f & 8U) != 0U) {
---
>     p->c_plan_ahead = 335544320U;
41755c41421,41430
<     ldv_mutex_unlock_208(& mdev->state_mutex);
---
>     p->c_delay_target = 167772160U;
> #line 765
>     p->c_fill_target = 1677721600U;
> #line 766
>     p->c_max_rate = 9437440U;
>   }
> #line 769
>   if (apv > 87) {
> #line 770
>     strcpy((char *)(& p->verify_alg), (char const   *)(& nc->verify_alg));
41759,41760c41434,41446
< #line 766
<   return (rv);
---
> #line 771
>   if (apv > 88) {
> #line 772
>     strcpy((char *)(& p->csums_alg), (char const   *)(& nc->csums_alg));
>   } else {
> 
>   }
> #line 773
>   rcu_read_unlock();
> #line 775
>   tmp___7 = drbd_send_command(mdev, sock, cmd, (unsigned int )size, 0, 0U);
> #line 775
>   return (tmp___7);
41763,41765c41449,41450
< #line 780 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< enum drbd_state_rv _drbd_request_state(struct drbd_conf *mdev , union drbd_state mask ,
<                                        union drbd_state val , enum chg_state_flags f ) 
---
> #line 778 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> int __drbd_send_protocol(struct drbd_tconn *tconn , enum drbd_packet cmd ) 
41767,41769c41452,41465
<   enum drbd_state_rv rv ;
<   wait_queue_t __wait ;
<   struct task_struct *tmp ;
---
>   struct drbd_socket *sock ;
>   struct p_protocol *p ;
>   struct net_conf *nc ;
>   int size ;
>   int cf ;
>   void *tmp ;
>   struct net_conf *_________p1 ;
>   bool __warned ;
>   int tmp___0 ;
>   int tmp___1 ;
>   size_t tmp___2 ;
>   __u32 tmp___3 ;
>   __u32 tmp___4 ;
>   int tmp___5 ;
41773,41777c41469,41477
<   rv = drbd_req_state(mdev, mask, val, f);
< #line 785
<   if ((int )rv != -18) {
< #line 785
<     goto ldv_52161;
---
>   sock = & tconn->data;
> #line 786
>   tmp = __conn_prepare_command(tconn, sock);
> #line 786
>   p = (struct p_protocol *)tmp;
> #line 787
>   if ((unsigned long )p == (unsigned long )((struct p_protocol *)0)) {
> #line 788
>     return (-5);
41781,41801c41481,41500
< #line 785
<   tmp = get_current();
< #line 785
<   __wait.flags = 0U;
< #line 785
<   __wait.private = (void *)tmp;
< #line 785
<   __wait.func = & autoremove_wake_function;
< #line 785
<   __wait.task_list.next = & __wait.task_list;
< #line 785
<   __wait.task_list.prev = & __wait.task_list;
<   ldv_52164: 
< #line 785
<   prepare_to_wait(& mdev->state_wait, & __wait, 2);
< #line 785
<   rv = drbd_req_state(mdev, mask, val, f);
< #line 785
<   if ((int )rv != -18) {
< #line 785
<     goto ldv_52163;
---
> #line 790
>   rcu_read_lock();
> #line 791
>   _________p1 = *((struct net_conf * volatile  *)(& tconn->net_conf));
> #line 791
>   tmp___0 = debug_lockdep_rcu_enabled();
> #line 791
>   if (tmp___0 != 0 && ! __warned) {
> #line 791
>     tmp___1 = rcu_read_lock_held();
> #line 791
>     if (tmp___1 == 0 && 1) {
> #line 791
>       __warned = 1;
> #line 791
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared",
>                              791, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
41805,41839c41504,41505
< #line 785
<   schedule();
< #line 785
<   goto ldv_52164;
<   ldv_52163: 
< #line 785
<   finish_wait(& mdev->state_wait, & __wait);
<   ldv_52161: ;
< #line 788
<   return (rv);
< }
< }
< #line 791 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static void print_st(struct drbd_conf *mdev , char *name , union drbd_state ns ) 
< { 
<   int tmp ;
<   char const   *tmp___0 ;
<   char const   *tmp___1 ;
<   char const   *tmp___2 ;
<   char const   *tmp___3 ;
<   char const   *tmp___4 ;
< 
<   {
< #line 793
<   tmp = is_susp(ns);
< #line 793
<   tmp___0 = drbd_disk_str((enum drbd_disk_state )ns.ldv_39979.pdsk);
< #line 793
<   tmp___1 = drbd_disk_str((enum drbd_disk_state )ns.ldv_39979.disk);
< #line 793
<   tmp___2 = drbd_role_str((enum drbd_role )ns.ldv_39979.peer);
< #line 793
<   tmp___3 = drbd_role_str((enum drbd_role )ns.ldv_39979.role);
< #line 793
<   tmp___4 = drbd_conn_str((enum drbd_conns )ns.ldv_39979.conn);
---
> #line 791
>   nc = _________p1;
41841,41853c41507,41516
<   dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), " %s = { cs:%s ro:%s/%s ds:%s/%s %c%c%c%c }\n",
<           name, tmp___4, tmp___3, tmp___2, tmp___1, tmp___0, tmp != 0 ? 115 : 114,
<           (unsigned int )*((unsigned char *)(& ns) + 2UL) != 0U ? 97 : 45, (unsigned int )*((unsigned char *)(& ns) + 2UL) != 0U ? 112 : 45,
<           (unsigned int )*((unsigned char *)(& ns) + 2UL) != 0U ? 117 : 45);
< #line 804
<   return;
< }
< }
< #line 807 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void print_st_err(struct drbd_conf *mdev , union drbd_state os , union drbd_state ns ,
<                   enum drbd_state_rv err ) 
< { 
<   char const   *tmp ;
---
>   if ((int )((signed char )nc->tentative) != 0 && tconn->agreed_pro_version <= 91) {
> #line 794
>     rcu_read_unlock();
> #line 795
>     mutex_unlock(& sock->mutex);
> #line 796
>     printk("\vd-con %s: --dry-run is not supported by peer", tconn->name);
> #line 797
>     return (-95);
>   } else {
41855c41518,41543
<   {
---
>   }
> #line 800
>   size = 24;
> #line 801
>   if (tconn->agreed_pro_version > 86) {
> #line 802
>     tmp___2 = strlen((char const   *)(& nc->integrity_alg));
> #line 802
>     size = (int )(((unsigned int )tmp___2 + (unsigned int )size) + 1U);
>   } else {
> 
>   }
> #line 804
>   p->protocol = __fswab32(nc->wire_protocol);
> #line 805
>   p->after_sb_0p = __fswab32(nc->after_sb_0p);
> #line 806
>   p->after_sb_1p = __fswab32(nc->after_sb_1p);
> #line 807
>   p->after_sb_2p = __fswab32(nc->after_sb_2p);
> #line 808
>   tmp___3 = __fswab32((__u32 )nc->two_primaries);
> #line 808
>   p->two_primaries = tmp___3;
> #line 809
>   cf = 0;
41857c41545
<   if ((int )err == -18) {
---
>   if ((int )((signed char )nc->discard_my_data) != 0) {
41859c41547
<     return;
---
>     cf = cf | 1;
41864,41867c41552
<   tmp = drbd_set_st_err_str(err);
< #line 812
<   dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "State change failed: %s\n",
<           tmp);
---
>   if ((int )((signed char )nc->tentative) != 0) {
41869c41554,41557
<   print_st(mdev, (char *)" state", os);
---
>     cf = cf | 2;
>   } else {
> 
>   }
41871,41873c41559,41574
<   print_st(mdev, (char *)"wanted", ns);
< #line 815
<   return;
---
>   tmp___4 = __fswab32((__u32 )cf);
> #line 814
>   p->conn_flags = tmp___4;
> #line 816
>   if (tconn->agreed_pro_version > 86) {
> #line 817
>     strcpy((char *)(& p->integrity_alg), (char const   *)(& nc->integrity_alg));
>   } else {
> 
>   }
> #line 818
>   rcu_read_unlock();
> #line 820
>   tmp___5 = __conn_send_command(tconn, sock, cmd, (unsigned int )size, 0, 0U);
> #line 820
>   return (tmp___5);
41876,41877c41577,41578
< #line 824 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static enum drbd_state_rv is_valid_state(struct drbd_conf *mdev , union drbd_state ns ) 
---
> #line 823 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> int drbd_send_protocol(struct drbd_tconn *tconn ) 
41879,41882c41580
<   enum drbd_fencing_p fp ;
<   enum drbd_state_rv rv ;
<   int tmp ;
<   int tmp___0 ;
---
>   int err ;
41884a41583,41586
> #line 827
>   mutex_lock_nested(& tconn->data.mutex, 0U);
> #line 828
>   err = __drbd_send_protocol(tconn, P_PROTOCOL);
41886c41588
<   rv = 1;
---
>   mutex_unlock(& tconn->data.mutex);
41888,41897c41590,41609
<   fp = FP_DONT_CARE;
< #line 832
<   tmp = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 832
<   if (tmp != 0) {
< #line 833
<     fp = (enum drbd_fencing_p )(mdev->ldev)->dc.fencing;
< #line 834
<     put_ldev(mdev);
<   } else {
---
>   return (err);
> }
> }
> #line 834 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> int _drbd_send_uuids(struct drbd_conf *mdev , u64 uuid_flags ) 
> { 
>   struct drbd_socket *sock ;
>   struct p_uuids *p ;
>   int i ;
>   int tmp ;
>   void *tmp___0 ;
>   __u64 tmp___1 ;
>   __u64 tmp___2 ;
>   struct net_conf *_________p1 ;
>   bool __warned ;
>   int tmp___3 ;
>   int tmp___4 ;
>   int tmp___5 ;
>   __u64 tmp___6 ;
>   int tmp___7 ;
41899,41905c41611
<   }
< #line 837
<   tmp___0 = get_net_conf(mdev);
< #line 837
<   if (tmp___0 != 0) {
< #line 838
<     if (((unsigned int )*((unsigned char *)mdev->net_conf + 540UL) == 0U && (unsigned int )*((unsigned char *)(& ns) + 0UL) == 1U) && (unsigned int )*((unsigned char *)(& ns) + 0UL) == 4U) {
---
>   {
41907,41910c41613,41615
<       rv = SS_TWO_PRIMARIES;
<     } else {
< 
<     }
---
>   tmp = _get_ldev_if_state(mdev, D_NEGOTIATING);
> #line 840
>   if (tmp == 0) {
41912c41617
<     put_net_conf(mdev);
---
>     return (0);
41915a41621,41622
> #line 843
>   sock = & (mdev->tconn)->data;
41917,41919c41624,41628
<   if ((int )rv <= 0) {
< 
<   } else
---
>   tmp___0 = drbd_prepare_command(mdev, sock);
> #line 844
>   p = (struct p_uuids *)tmp___0;
> #line 845
>   if ((unsigned long )p == (unsigned long )((struct p_uuids *)0)) {
41921c41630
<   if ((unsigned int )*((unsigned char *)(& ns) + 0UL) == 2U && mdev->open_cnt != 0) {
---
>     put_ldev(mdev);
41923,41924c41632,41635
<     rv = SS_DEVICE_IN_USE;
<   } else
---
>     return (-5);
>   } else {
> 
>   }
41926c41637
<   if (((unsigned int )*((unsigned char *)(& ns) + 0UL) == 1U && (int )ns.ldv_39979.conn <= 9) && (int )ns.ldv_39979.disk <= 7) {
---
>   spin_lock_irq(& (mdev->ldev)->md.uuid_lock);
41928,41929c41639,41662
<     rv = SS_NO_UP_TO_DATE_DISK;
<   } else
---
>   i = 0;
> #line 850
>   goto ldv_52495;
>   ldv_52494: ;
> #line 851
>   if ((unsigned long )mdev->ldev != (unsigned long )((struct drbd_backing_dev *)0)) {
> #line 851
>     tmp___1 = __fswab64((mdev->ldev)->md.uuid[i]);
> #line 851
>     p->uuid[i] = tmp___1;
>   } else {
> #line 851
>     p->uuid[i] = 0ULL;
>   }
> #line 850
>   i = i + 1;
>   ldv_52495: ;
> #line 850
>   if (i <= 3) {
> #line 851
>     goto ldv_52494;
>   } else {
> 
>   }
41931c41664
<   if ((((unsigned int )fp != 0U && (unsigned int )*((unsigned char *)(& ns) + 0UL) == 1U) && (int )ns.ldv_39979.conn <= 9) && (int )ns.ldv_39979.pdsk > 5) {
---
>   spin_unlock_irq(& (mdev->ldev)->md.uuid_lock);
41933,41934c41666,41670
<     rv = SS_PRIMARY_NOP;
<   } else
---
>   mdev->comm_bm_set = drbd_bm_total_weight(mdev);
> #line 855
>   tmp___2 = __fswab64((__u64 )mdev->comm_bm_set);
> #line 855
>   p->uuid[4] = tmp___2;
41936c41672
<   if (((unsigned int )*((unsigned char *)(& ns) + 0UL) == 1U && (int )ns.ldv_39979.disk <= 4) && (int )ns.ldv_39979.pdsk <= 4) {
---
>   rcu_read_lock();
41938,41939c41674,41699
<     rv = SS_NO_UP_TO_DATE_DISK;
<   } else
---
>   _________p1 = *((struct net_conf * volatile  *)(& (mdev->tconn)->net_conf));
> #line 857
>   tmp___3 = debug_lockdep_rcu_enabled();
> #line 857
>   if (tmp___3 != 0 && ! __warned) {
> #line 857
>     tmp___4 = rcu_read_lock_held();
> #line 857
>     if (tmp___4 == 0 && 1) {
> #line 857
>       __warned = 1;
> #line 857
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared",
>                              857, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 857
>   uuid_flags = ((int )((signed char )_________p1->discard_my_data) != 0 ? 1ULL : 0ULL) | uuid_flags;
> #line 858
>   rcu_read_unlock();
> #line 859
>   tmp___5 = constant_test_bit(5U, (unsigned long const volatile   *)(& mdev->flags));
41941c41701
<   if ((int )ns.ldv_39979.conn > 10 && (int )ns.ldv_39979.disk <= 3) {
---
>   uuid_flags = (tmp___5 != 0 ? 2ULL : 0ULL) | uuid_flags;
41943,41946c41703,41707
<     rv = SS_NO_LOCAL_DISK;
<   } else
< #line 862
<   if ((int )ns.ldv_39979.conn > 10 && (int )ns.ldv_39979.pdsk <= 3) {
---
>   uuid_flags = ((unsigned int )*((unsigned char *)mdev + 745UL) == 8U ? 4ULL : 0ULL) | uuid_flags;
> #line 861
>   tmp___6 = __fswab64(uuid_flags);
> #line 861
>   p->uuid[5] = tmp___6;
41948,41964c41709,41748
<     rv = SS_NO_REMOTE_DISK;
<   } else
< #line 865
<   if (((int )ns.ldv_39979.conn > 10 && (int )ns.ldv_39979.disk <= 7) && (int )ns.ldv_39979.pdsk <= 7) {
< #line 866
<     rv = SS_NO_UP_TO_DATE_DISK;
<   } else
< #line 868
<   if (((((unsigned int )*((unsigned short *)(& ns) + 0UL) == 160U || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 208U) || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 256U) || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 320U) && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 10U) {
< #line 873
<     rv = SS_CONNECTED_OUTDATES;
<   } else
< #line 875
<   if (((unsigned int )*((unsigned short *)(& ns) + 0UL) == 288U || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 304U) && (unsigned int )mdev->sync_conf.verify_alg[0] == 0U) {
< #line 877
<     rv = SS_NO_VERIFY_ALG;
<   } else
---
>   put_ldev(mdev);
> #line 864
>   tmp___7 = drbd_send_command(mdev, sock, P_UUIDS, 48U, 0, 0U);
> #line 864
>   return (tmp___7);
> }
> }
> #line 867 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> int drbd_send_uuids(struct drbd_conf *mdev ) 
> { 
>   int tmp ;
> 
>   {
> #line 869
>   tmp = _drbd_send_uuids(mdev, 0ULL);
> #line 869
>   return (tmp);
> }
> }
> #line 872 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> int drbd_send_uuids_skip_initial_sync(struct drbd_conf *mdev ) 
> { 
>   int tmp ;
> 
>   {
> #line 874
>   tmp = _drbd_send_uuids(mdev, 8ULL);
> #line 874
>   return (tmp);
> }
> }
> #line 877 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> void drbd_print_uuids(struct drbd_conf *mdev , char const   *text ) 
> { 
>   u64 *uuid ;
>   int tmp ;
> 
>   {
> #line 879
>   tmp = _get_ldev_if_state(mdev, D_NEGOTIATING);
41966c41750,41752
<   if (((unsigned int )*((unsigned short *)(& ns) + 0UL) == 288U || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 304U) && mdev->agreed_pro_version <= 87) {
---
>   if (tmp != 0) {
> #line 880
>     uuid = (u64 *)(& (mdev->ldev)->md.uuid);
41968,41973c41754,41757
<     rv = SS_NOT_SUPPORTED;
<   } else
< #line 883
<   if ((int )ns.ldv_39979.conn > 9 && *((unsigned int *)(& ns) + 0UL) == 49152U) {
< #line 884
<     rv = SS_CONNECTED_OUTDATES;
---
>     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "%s %016llX:%016llX:%016llX:%016llX\n",
>               text, *uuid, *(uuid + 1UL), *(uuid + 2UL), *(uuid + 3UL));
> #line 887
>     put_ldev(mdev);
41975c41759,41761
< 
---
> #line 889
>     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "%s effective data uuid: %016llX\n",
>               text, mdev->ed_uuid);
41977,41978c41763,41764
< #line 886
<   return (rv);
---
> #line 890
>   return;
41981,41983c41767,41768
< #line 896 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static enum drbd_state_rv is_valid_state_transition(struct drbd_conf *mdev , union drbd_state ns ,
<                                                     union drbd_state os ) 
---
> #line 895 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> void drbd_gen_and_send_sync_uuid(struct drbd_conf *mdev ) 
41985,41986c41770,41774
<   enum drbd_state_rv rv ;
<   int tmp ;
---
>   struct drbd_socket *sock ;
>   struct p_rs_uuid *p ;
>   u64 uuid ;
>   void *tmp ;
>   __u64 tmp___0 ;
41989,41990d41776
< #line 899
<   rv = 1;
41992,41994c41778,41782
<   if (((unsigned int )*((unsigned short *)(& ns) + 0UL) == 192U || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 176U) && (int )os.ldv_39979.conn > 10) {
< #line 903
<     rv = SS_RESYNC_RUNNING;
---
>   if ((unsigned int )*((unsigned char *)mdev + 749UL) != 16U) {
> #line 901
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mdev->state.disk == D_UP_TO_DATE ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared",
>             901);
41997a41786,41789
> #line 903
>   uuid = (mdev->ldev)->md.uuid[1];
> #line 904
>   if (uuid != 0ULL && uuid != 4ULL) {
41999,42001c41791
<   if ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 16U && (unsigned int )*((unsigned short *)(& os) + 0UL) == 0U) {
< #line 906
<     rv = SS_ALREADY_STANDALONE;
---
>     uuid = uuid + 281474976710656ULL;
42003c41793,41794
< 
---
> #line 907
>     get_random_bytes((void *)(& uuid), 8);
42006c41797
<   if ((int )ns.ldv_39979.disk > 1 && (unsigned int )*((unsigned char *)(& os) + 1UL) == 0U) {
---
>   drbd_uuid_set(mdev, 1, uuid);
42008,42013c41799,41801
<     rv = SS_IS_DISKLESS;
<   } else {
< 
<   }
< #line 911
<   if ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 128U && (int )os.ldv_39979.conn <= 1) {
---
>   drbd_print_uuids(mdev, "updated sync UUID");
> #line 910
>   drbd_md_sync(mdev);
42015,42018c41803,41807
<     rv = SS_NO_NET_CONFIG;
<   } else {
< 
<   }
---
>   sock = & (mdev->tconn)->data;
> #line 913
>   tmp = drbd_prepare_command(mdev, sock);
> #line 913
>   p = (struct p_rs_uuid *)tmp;
42020c41809
<   if (((unsigned int )*((unsigned char *)(& ns) + 1UL) == 10U && (int )os.ldv_39979.disk <= 4) && (unsigned int )*((unsigned char *)(& os) + 1UL) != 2U) {
---
>   if ((unsigned long )p != (unsigned long )((struct p_rs_uuid *)0)) {
42022c41811,41815
<     rv = SS_LOWER_THAN_OUTDATED;
---
>     tmp___0 = __fswab64(uuid);
> #line 915
>     p->uuid = tmp___0;
> #line 916
>     drbd_send_command(mdev, sock, P_SYNC_UUID, 8U, 0, 0U);
42026,42027d41818
< #line 917
<   if ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 16U && (unsigned int )*((unsigned short *)(& os) + 0UL) == 32U) {
42029,42037c41820,41853
<     rv = SS_IN_TRANSIENT_STATE;
<   } else {
< 
<   }
< #line 920
<   if ((int )ns.ldv_39979.conn == (int )os.ldv_39979.conn && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 144U) {
< #line 921
<     rv = SS_IN_TRANSIENT_STATE;
<   } else {
---
>   return;
> }
> }
> #line 920 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> int drbd_send_sizes(struct drbd_conf *mdev , int trigger_reply , enum dds_flags flags ) 
> { 
>   struct drbd_socket *sock ;
>   struct p_sizes *p ;
>   sector_t d_size ;
>   sector_t u_size ;
>   int q_order_type ;
>   unsigned int max_bio_size ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
>   unsigned int tmp___1 ;
>   unsigned int _min1 ;
>   unsigned int _min2 ;
>   int tmp___2 ;
>   void *tmp___3 ;
>   unsigned int _min1___0 ;
>   unsigned int _min2___0 ;
>   unsigned int _min1___1 ;
>   unsigned int _min2___1 ;
>   __u64 tmp___4 ;
>   __u64 tmp___5 ;
>   sector_t tmp___6 ;
>   __u64 tmp___7 ;
>   __u64 tmp___8 ;
>   __u32 tmp___9 ;
>   __u16 tmp___10 ;
>   __u16 tmp___11 ;
>   int tmp___12 ;
42039,42043c41855
<   }
< #line 925
<   tmp = drbd_test_flag(mdev, STATE_SENT);
< #line 925
<   if (tmp != 0 && ((unsigned int )*((unsigned short *)(& os) + 0UL) != 144U && ((unsigned int )*((unsigned short *)(& ns) + 0UL) != 144U || (unsigned int )*((unsigned short *)(& os) + 0UL) != 128U))) {
---
>   {
42045,42046c41857,41866
<     rv = SS_IN_TRANSIENT_STATE;
<   } else {
---
>   tmp___2 = _get_ldev_if_state(mdev, D_NEGOTIATING);
> #line 928
>   if (tmp___2 != 0) {
> #line 929
>     if ((unsigned long )(mdev->ldev)->backing_bdev == (unsigned long )((struct block_device *)0)) {
> #line 929
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mdev->ldev->backing_bdev ) in %s:%d\n",
>               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared",
>               929);
>     } else {
42048c41868
<   }
---
>     }
42050c41870
<   if (((unsigned int )*((unsigned short *)(& ns) + 0UL) == 288U || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 304U) && (int )os.ldv_39979.conn <= 9) {
---
>     d_size = drbd_get_max_capacity___0(mdev->ldev);
42052,42053c41872,41888
<     rv = SS_NEED_CONNECTION;
<   } else {
---
>     rcu_read_lock();
> #line 932
>     _________p1 = *((struct disk_conf * volatile  *)(& (mdev->ldev)->disk_conf));
> #line 932
>     tmp = debug_lockdep_rcu_enabled();
> #line 932
>     if (tmp != 0 && ! __warned) {
> #line 932
>       tmp___0 = rcu_read_lock_held();
> #line 932
>       if (tmp___0 == 0 && 1) {
> #line 932
>         __warned = 1;
> #line 932
>         lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared",
>                                932, "suspicious rcu_dereference_check() usage");
>       } else {
42055c41890,41895
<   }
---
>       }
>     } else {
> 
>     }
> #line 932
>     u_size = (sector_t )_________p1->disk_size;
42057c41897,41899
<   if ((((unsigned int )*((unsigned short *)(& ns) + 0UL) == 288U || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 304U) && (int )ns.ldv_39979.conn != (int )os.ldv_39979.conn) && (int )os.ldv_39979.conn > 10) {
---
>     rcu_read_unlock();
> #line 934
>     q_order_type = drbd_queue_order_type(mdev);
42059,42062c41901,41909
<     rv = SS_RESYNC_RUNNING;
<   } else {
< 
<   }
---
>     tmp___1 = queue_max_hw_sectors((((mdev->ldev)->backing_bdev)->bd_disk)->queue);
> #line 935
>     max_bio_size = tmp___1 << 9;
> #line 936
>     _min1 = max_bio_size;
> #line 936
>     _min2 = 1048576U;
> #line 936
>     max_bio_size = _min1 < _min2 ? _min1 : _min2;
42064c41911,41912
<   if (((unsigned int )*((unsigned short *)(& ns) + 0UL) == 176U || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 192U) && (int )os.ldv_39979.conn <= 9) {
---
>     put_ldev(mdev);
>   } else {
42066c41914,41931
<     rv = SS_NEED_CONNECTION;
---
>     d_size = 0UL;
> #line 940
>     u_size = 0UL;
> #line 941
>     q_order_type = 0;
> #line 942
>     max_bio_size = 1048576U;
>   }
> #line 945
>   sock = & (mdev->tconn)->data;
> #line 946
>   tmp___3 = drbd_prepare_command(mdev, sock);
> #line 946
>   p = (struct p_sizes *)tmp___3;
> #line 947
>   if ((unsigned long )p == (unsigned long )((struct p_sizes *)0)) {
> #line 948
>     return (-5);
42070,42073c41935,41951
< #line 941
<   if (((unsigned int )*((unsigned short *)(& ns) + 0UL) == 272U || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 256U) && (int )os.ldv_39979.conn <= 8) {
< #line 943
<     rv = SS_NEED_CONNECTION;
---
> #line 950
>   if ((mdev->tconn)->agreed_pro_version <= 94) {
> #line 951
>     _min1___0 = max_bio_size;
> #line 951
>     _min2___0 = 32768U;
> #line 951
>     max_bio_size = _min1___0 < _min2___0 ? _min1___0 : _min2___0;
>   } else
> #line 952
>   if ((mdev->tconn)->agreed_pro_version <= 99) {
> #line 953
>     _min1___1 = max_bio_size;
> #line 953
>     _min2___1 = 131072U;
> #line 953
>     max_bio_size = _min1___1 < _min2___1 ? _min1___1 : _min2___1;
42077,42078c41955,41992
< #line 945
<   return (rv);
---
> #line 955
>   tmp___4 = __fswab64((__u64 )d_size);
> #line 955
>   p->d_size = tmp___4;
> #line 956
>   tmp___5 = __fswab64((__u64 )u_size);
> #line 956
>   p->u_size = tmp___5;
> #line 957
>   if (trigger_reply == 0) {
> #line 957
>     tmp___6 = drbd_get_capacity(mdev->this_bdev);
> #line 957
>     tmp___7 = (__u64 )tmp___6;
>   } else {
> #line 957
>     tmp___7 = 0ULL;
>   }
> #line 957
>   tmp___8 = __fswab64(tmp___7);
> #line 957
>   p->c_size = tmp___8;
> #line 958
>   tmp___9 = __fswab32(max_bio_size);
> #line 958
>   p->max_bio_size = tmp___9;
> #line 959
>   tmp___10 = __fswab16((int )((__u16 )q_order_type));
> #line 959
>   p->queue_order_type = tmp___10;
> #line 960
>   tmp___11 = __fswab16((int )((__u16 )flags));
> #line 960
>   p->dds_flags = tmp___11;
> #line 961
>   tmp___12 = drbd_send_command(mdev, sock, P_SIZES, 32U, 0, 0U);
> #line 961
>   return (tmp___12);
42081,42082c41995,41996
< #line 948 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static void print_sanitize_warnings(struct drbd_conf *mdev , enum sanitize_state_warnings warn ) 
---
> #line 968 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> int drbd_send_current_state(struct drbd_conf *mdev ) 
42084c41998,42002
<   char const   *msg_table[6U] ;
---
>   struct drbd_socket *sock ;
>   struct p_state *p ;
>   void *tmp ;
>   __u32 tmp___0 ;
>   int tmp___1 ;
42087,42102c42005,42014
< #line 950
<   msg_table[0] = "";
< #line 950
<   msg_table[1] = "Online-verify aborted.";
< #line 950
<   msg_table[2] = "Resync aborted.";
< #line 950
<   msg_table[3] = "Connection lost while negotiating, no data!";
< #line 950
<   msg_table[4] = "Implicitly upgraded disk";
< #line 950
<   msg_table[5] = "Implicitly upgraded pdsk";
< #line 959
<   if ((unsigned int )warn != 0U) {
< #line 960
<     dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "%s\n", msg_table[(unsigned int )warn]);
---
> #line 973
>   sock = & (mdev->tconn)->data;
> #line 974
>   tmp = drbd_prepare_command(mdev, sock);
> #line 974
>   p = (struct p_state *)tmp;
> #line 975
>   if ((unsigned long )p == (unsigned long )((struct p_state *)0)) {
> #line 976
>     return (-5);
42106,42107c42018,42025
< #line 961
<   return;
---
> #line 977
>   tmp___0 = __fswab32(mdev->state.i);
> #line 977
>   p->state = tmp___0;
> #line 978
>   tmp___1 = drbd_send_command(mdev, sock, P_STATE, 4U, 0, 0U);
> #line 978
>   return (tmp___1);
42110,42112c42028,42029
< #line 973 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static union drbd_state sanitize_state(struct drbd_conf *mdev , union drbd_state os ,
<                                        union drbd_state ns , enum sanitize_state_warnings *warn ) 
---
> #line 991 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> int drbd_send_state(struct drbd_conf *mdev , union drbd_state state ) 
42114,42120c42031,42035
<   enum drbd_fencing_p fp ;
<   enum drbd_disk_state disk_min ;
<   enum drbd_disk_state disk_max ;
<   enum drbd_disk_state pdsk_min ;
<   enum drbd_disk_state pdsk_max ;
<   int tmp ;
<   int tmp___0 ;
---
>   struct drbd_socket *sock ;
>   struct p_state *p ;
>   void *tmp ;
>   __u32 tmp___0 ;
>   int tmp___1 ;
42123,42151c42038,42039
< #line 979
<   if ((unsigned long )warn != (unsigned long )((enum sanitize_state_warnings *)0)) {
< #line 980
<     *warn = NO_WARNING;
<   } else {
< 
<   }
< #line 982
<   fp = FP_DONT_CARE;
< #line 983
<   tmp = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 983
<   if (tmp != 0) {
< #line 984
<     fp = (enum drbd_fencing_p )(mdev->ldev)->dc.fencing;
< #line 985
<     put_ldev(mdev);
<   } else {
< 
<   }
< #line 989
<   if (((int )ns.ldv_39979.conn > 2 && (int )ns.ldv_39979.conn <= 7) && (int )os.ldv_39979.conn <= 1) {
< #line 991
<     ns.ldv_39979.conn = os.ldv_39979.conn;
<   } else {
< 
<   }
< #line 995
<   if (((((int )os.ldv_39979.conn > 2 && (int )os.ldv_39979.conn <= 7) && (unsigned int )*((unsigned short *)(& ns) + 0UL) != 32U) && (unsigned int )*((unsigned short *)(& ns) + 0UL) != 16U) && (int )ns.ldv_39979.conn <= 10) {
---
> #line 996
>   sock = & (mdev->tconn)->data;
42153c42041,42047
<     ns.ldv_39979.conn = os.ldv_39979.conn;
---
>   tmp = drbd_prepare_command(mdev, sock);
> #line 997
>   p = (struct p_state *)tmp;
> #line 998
>   if ((unsigned long )p == (unsigned long )((struct p_state *)0)) {
> #line 999
>     return (-5);
42158c42052,42054
<   if ((unsigned int )*((unsigned char *)(& ns) + 1UL) == 4U && (unsigned int )*((unsigned char *)(& os) + 1UL) == 0U) {
---
>   tmp___0 = __fswab32(state.i);
> #line 1000
>   p->state = tmp___0;
42160,42168c42056,42069
<     ns.ldv_39979.disk = 0U;
<   } else {
< 
<   }
< #line 1004
<   if ((unsigned int )*((unsigned short *)(& os) + 0UL) == 16U && (unsigned int )*((unsigned short *)(& ns) + 0UL) != 0U) {
< #line 1005
<     ns.ldv_39979.conn = os.ldv_39979.conn;
<   } else {
---
>   tmp___1 = drbd_send_command(mdev, sock, P_STATE, 4U, 0, 0U);
> #line 1001
>   return (tmp___1);
> }
> }
> #line 1004 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> int drbd_send_state_req(struct drbd_conf *mdev , union drbd_state mask , union drbd_state val ) 
> { 
>   struct drbd_socket *sock ;
>   struct p_req_state *p ;
>   void *tmp ;
>   __u32 tmp___0 ;
>   __u32 tmp___1 ;
>   int tmp___2 ;
42170,42174c42071
<   }
< #line 1007
<   if ((int )ns.ldv_39979.conn <= 9) {
< #line 1008
<     ns.ldv_39979.peer_isp = 0U;
---
>   {
42176c42073,42075
<     ns.ldv_39979.peer = 0U;
---
>   sock = & (mdev->tconn)->data;
> #line 1010
>   tmp = drbd_prepare_command(mdev, sock);
42178c42077
<     if ((int )ns.ldv_39979.pdsk > 6 || (int )ns.ldv_39979.pdsk <= 3) {
---
>   p = (struct p_req_state *)tmp;
42180,42183c42079,42081
<       ns.ldv_39979.pdsk = 6U;
<     } else {
< 
<     }
---
>   if ((unsigned long )p == (unsigned long )((struct p_req_state *)0)) {
> #line 1012
>     return (-5);
42186a42085,42092
> #line 1013
>   tmp___0 = __fswab32(mask.i);
> #line 1013
>   p->mask = tmp___0;
> #line 1014
>   tmp___1 = __fswab32(val.i);
> #line 1014
>   p->val = tmp___1;
42188,42200c42094,42108
<   if (((unsigned int )*((unsigned short *)(& ns) + 0UL) == 0U && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 0U) && (unsigned int )*((unsigned char *)(& ns) + 0UL) == 2U) {
< #line 1016
<     ns.ldv_39979.aftr_isp = 0U;
<   } else {
< 
<   }
< #line 1019
<   if (((int )os.ldv_39979.conn > 10 && (int )ns.ldv_39979.conn > 10) && ((int )ns.ldv_39979.disk <= 2 || (int )ns.ldv_39979.pdsk <= 2)) {
< #line 1021
<     if ((unsigned long )warn != (unsigned long )((enum sanitize_state_warnings *)0)) {
< #line 1022
<       *warn = (unsigned int )*((unsigned short *)(& os) + 0UL) == 288U || (unsigned int )*((unsigned short *)(& os) + 0UL) == 304U ? ABORTED_ONLINE_VERIFY : ABORTED_RESYNC;
<     } else {
---
>   tmp___2 = drbd_send_command(mdev, sock, P_STATE_CHG_REQ, 8U, 0, 0U);
> #line 1015
>   return (tmp___2);
> }
> }
> #line 1018 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> int conn_send_state_req(struct drbd_tconn *tconn , union drbd_state mask , union drbd_state val ) 
> { 
>   enum drbd_packet cmd ;
>   struct drbd_socket *sock ;
>   struct p_req_state *p ;
>   void *tmp ;
>   __u32 tmp___0 ;
>   __u32 tmp___1 ;
>   int tmp___2 ;
42202c42110
<     }
---
>   {
42204c42112,42122
<     ns.ldv_39979.conn = 10U;
---
>   cmd = tconn->agreed_pro_version <= 99 ? P_STATE_CHG_REQ : P_CONN_ST_CHG_REQ;
> #line 1025
>   sock = & tconn->data;
> #line 1026
>   tmp = conn_prepare_command(tconn, sock);
> #line 1026
>   p = (struct p_req_state *)tmp;
> #line 1027
>   if ((unsigned long )p == (unsigned long )((struct p_req_state *)0)) {
> #line 1028
>     return (-5);
42208,42213c42126,42129
< #line 1028
<   if ((int )ns.ldv_39979.conn <= 9 && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 6U) {
< #line 1028
<     tmp___0 = _get_ldev_if_state(mdev, D_NEGOTIATING);
< #line 1028
<     if (tmp___0 != 0) {
---
> #line 1029
>   tmp___0 = __fswab32(mask.i);
> #line 1029
>   p->mask = tmp___0;
42215c42131,42133
<       if (mdev->ed_uuid == (mdev->ldev)->md.uuid[0]) {
---
>   tmp___1 = __fswab32(val.i);
> #line 1030
>   p->val = tmp___1;
42217,42225c42135,42146
<         ns.ldv_39979.disk = mdev->new_state_tmp.ldv_39979.disk;
< #line 1032
<         ns.ldv_39979.pdsk = mdev->new_state_tmp.ldv_39979.pdsk;
<       } else {
< #line 1034
<         if ((unsigned long )warn != (unsigned long )((enum sanitize_state_warnings *)0)) {
< #line 1035
<           *warn = CONNECTION_LOST_NEGOTIATING;
<         } else {
---
>   tmp___2 = conn_send_command(tconn, sock, cmd, 8U, 0, 0U);
> #line 1031
>   return (tmp___2);
> }
> }
> #line 1034 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> void drbd_send_sr_reply(struct drbd_conf *mdev , enum drbd_state_rv retcode ) 
> { 
>   struct drbd_socket *sock ;
>   struct p_req_state_reply *p ;
>   void *tmp ;
>   __u32 tmp___0 ;
42227,42232c42148
<         }
< #line 1036
<         ns.ldv_39979.disk = 0U;
< #line 1037
<         ns.ldv_39979.pdsk = 6U;
<       }
---
>   {
42234,42237c42150,42162
<       put_ldev(mdev);
<     } else {
< 
<     }
---
>   sock = & (mdev->tconn)->meta;
> #line 1040
>   tmp = drbd_prepare_command(mdev, sock);
> #line 1040
>   p = (struct p_req_state_reply *)tmp;
> #line 1041
>   if ((unsigned long )p != (unsigned long )((struct p_req_state_reply *)0)) {
> #line 1042
>     tmp___0 = __fswab32((__u32 )retcode);
> #line 1042
>     p->retcode = tmp___0;
> #line 1043
>     drbd_send_command(mdev, sock, P_STATE_CHG_REPLY, 4U, 0, 0U);
42241,42244d42165
< #line 1043
<   if ((int )ns.ldv_39979.conn > 9 && (int )ns.ldv_39979.conn <= 21) {
< #line 1044
<     if ((unsigned int )*((unsigned char *)(& ns) + 1UL) == 14U || (unsigned int )*((unsigned char *)(& ns) + 1UL) == 10U) {
42246,42257c42167,42177
<       ns.ldv_39979.disk = 8U;
<     } else {
< 
<     }
< #line 1046
<     if (*((unsigned int *)(& ns) + 0UL) == 57344U || *((unsigned int *)(& ns) + 0UL) == 40960U) {
< #line 1047
<       ns.ldv_39979.pdsk = 8U;
<     } else {
< 
<     }
<   } else {
---
>   return;
> }
> }
> #line 1047 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> void conn_send_sr_reply(struct drbd_tconn *tconn , enum drbd_state_rv retcode ) 
> { 
>   struct drbd_socket *sock ;
>   struct p_req_state_reply *p ;
>   enum drbd_packet cmd ;
>   void *tmp ;
>   __u32 tmp___0 ;
42259c42179
<   }
---
>   {
42261,42263c42181
<   disk_min = D_DISKLESS;
< #line 1052
<   disk_max = D_UP_TO_DATE;
---
>   cmd = tconn->agreed_pro_version <= 99 ? P_STATE_CHG_REPLY : P_CONN_ST_CHG_REPLY;
42265c42183
<   pdsk_min = D_INCONSISTENT;
---
>   sock = & tconn->meta;
42267c42185,42187
<   pdsk_max = D_UNKNOWN;
---
>   tmp = conn_prepare_command(tconn, sock);
> #line 1054
>   p = (struct p_req_state_reply *)tmp;
42269,42278c42189,42208
<   switch ((unsigned int )ns.ldv_39979.conn) {
<   case 14U: ;
<   case 21U: ;
<   case 12U: ;
<   case 15U: ;
<   case 23U: 
< #line 1061
<   disk_min = D_INCONSISTENT;
< #line 1062
<   disk_max = D_OUTDATED;
---
>   if ((unsigned long )p != (unsigned long )((struct p_req_state_reply *)0)) {
> #line 1056
>     tmp___0 = __fswab32((__u32 )retcode);
> #line 1056
>     p->retcode = tmp___0;
> #line 1057
>     conn_send_command(tconn, sock, cmd, 4U, 0, 0U);
>   } else {
> 
>   }
> #line 1059
>   return;
> }
> }
> #line 1061 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> static void dcbp_set_code(struct p_compressed_bm *p , enum drbd_bitmap_code code ) 
> { 
>   long tmp ;
> 
>   {
42280c42210,42221
<   pdsk_min = D_UP_TO_DATE;
---
>   tmp = __builtin_expect(((unsigned int )code & 4294967280U) != 0U, 0L);
> #line 1063
>   if (tmp != 0L) {
> #line 1063
>     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"),
>                          "i" (1063), "i" (12UL));
>     ldv_52583: ;
> #line 1063
>     goto ldv_52583;
>   } else {
> 
>   }
42282c42223
<   pdsk_max = D_UP_TO_DATE;
---
>   p->encoding = ((unsigned int )p->encoding & 240U) | (unsigned int )((u8 )code);
42284,42288c42225,42233
<   goto ldv_52209;
<   case 18U: ;
<   case 19U: 
< #line 1068
<   disk_min = D_UP_TO_DATE;
---
>   return;
> }
> }
> #line 1067 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> static void dcbp_set_start(struct p_compressed_bm *p , int set ) 
> { 
> 
> 
>   {
42290c42235
<   disk_max = D_UP_TO_DATE;
---
>   p->encoding = (u8 )(((int )((signed char )p->encoding) & 127) | (set != 0 ? -128 : 0));
42292,42297c42237,42245
<   pdsk_min = D_UP_TO_DATE;
< #line 1071
<   pdsk_max = D_UP_TO_DATE;
< #line 1072
<   goto ldv_52209;
<   case 10U: 
---
>   return;
> }
> }
> #line 1072 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> static void dcbp_set_pad_bits(struct p_compressed_bm *p , int n ) 
> { 
>   long tmp ;
> 
>   {
42299c42247,42258
<   disk_min = D_DISKLESS;
---
>   tmp = __builtin_expect((n & -8) != 0, 0L);
> #line 1074
>   if (tmp != 0L) {
> #line 1074
>     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"),
>                          "i" (1074), "i" (12UL));
>     ldv_52592: ;
> #line 1074
>     goto ldv_52592;
>   } else {
> 
>   }
42301c42260
<   disk_max = D_UP_TO_DATE;
---
>   p->encoding = (u8 )(((int )((signed char )p->encoding) & -128) | (int )((signed char )(n << 4)));
42303,42328c42262,42284
<   pdsk_min = D_DISKLESS;
< #line 1077
<   pdsk_max = D_UP_TO_DATE;
< #line 1078
<   goto ldv_52209;
<   case 13U: ;
<   case 20U: ;
<   case 11U: ;
<   case 22U: 
< #line 1083
<   disk_min = D_UP_TO_DATE;
< #line 1084
<   disk_max = D_UP_TO_DATE;
< #line 1085
<   pdsk_min = D_INCONSISTENT;
< #line 1086
<   pdsk_max = D_CONSISTENT;
< #line 1087
<   goto ldv_52209;
<   case 17U: 
< #line 1089
<   disk_min = D_INCONSISTENT;
< #line 1090
<   disk_max = D_INCONSISTENT;
< #line 1091
<   pdsk_min = D_UP_TO_DATE;
---
>   return;
> }
> }
> #line 1078 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> int fill_bitmap_rle_bits(struct drbd_conf *mdev , struct p_compressed_bm *p , unsigned int size ,
>                          struct bm_xfer_ctx *c ) 
> { 
>   struct bitstream bs ;
>   unsigned long plain_bits ;
>   unsigned long tmp ;
>   unsigned long rl ;
>   unsigned int len ;
>   unsigned int toggle ;
>   int bits ;
>   int use_rle ;
>   struct net_conf *_________p1 ;
>   bool __warned ;
>   int tmp___0 ;
>   int tmp___1 ;
>   unsigned long tmp___2 ;
>   unsigned long tmp___3 ;
> 
>   {
42330c42286
<   pdsk_max = D_UP_TO_DATE;
---
>   rcu_read_lock();
42332,42333c42288,42311
<   goto ldv_52209;
<   case 16U: 
---
>   _________p1 = *((struct net_conf * volatile  *)(& (mdev->tconn)->net_conf));
> #line 1093
>   tmp___0 = debug_lockdep_rcu_enabled();
> #line 1093
>   if (tmp___0 != 0 && ! __warned) {
> #line 1093
>     tmp___1 = rcu_read_lock_held();
> #line 1093
>     if (tmp___1 == 0 && 1) {
> #line 1093
>       __warned = 1;
> #line 1093
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared",
>                              1093, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1093
>   use_rle = (int )_________p1->use_rle;
> #line 1094
>   rcu_read_unlock();
42335c42313
<   disk_min = D_UP_TO_DATE;
---
>   if (use_rle == 0 || (mdev->tconn)->agreed_pro_version <= 89) {
42337,42339c42315,42318
<   disk_max = D_UP_TO_DATE;
< #line 1097
<   pdsk_min = D_INCONSISTENT;
---
>     return (0);
>   } else {
> 
>   }
42341c42320
<   pdsk_max = D_INCONSISTENT;
---
>   if (c->bit_offset >= c->bm_bits) {
42343,42362c42322
<   goto ldv_52209;
<   case 0U: ;
<   case 1U: ;
<   case 2U: ;
<   case 3U: ;
<   case 4U: ;
<   case 5U: ;
<   case 6U: ;
<   case 7U: ;
<   case 8U: ;
<   case 9U: ;
<   case 31U: ;
< #line 1111
<   goto ldv_52209;
<   }
<   ldv_52209: ;
< #line 1113
<   if ((unsigned int )ns.ldv_39979.disk > (unsigned int )disk_max) {
< #line 1114
<     ns.ldv_39979.disk = (unsigned char )disk_max;
---
>     return (0);
42366,42367c42326,42346
< #line 1116
<   if ((unsigned int )ns.ldv_39979.disk < (unsigned int )disk_min) {
---
> #line 1102
>   bitstream_init(& bs, (void *)(& p->code), (size_t )size, 0U);
> #line 1103
>   memset((void *)(& p->code), 0, (size_t )size);
> #line 1105
>   plain_bits = 0UL;
> #line 1110
>   toggle = 2U;
>   ldv_52612: ;
> #line 1115
>   if (toggle == 0U) {
> #line 1115
>     tmp___2 = _drbd_bm_find_next_zero(mdev, c->bit_offset);
> #line 1115
>     tmp = tmp___2;
>   } else {
> #line 1115
>     tmp___3 = _drbd_bm_find_next(mdev, c->bit_offset);
> #line 1115
>     tmp = tmp___3;
>   }
42369c42348
<     if ((unsigned long )warn != (unsigned long )((enum sanitize_state_warnings *)0)) {
---
>   if (tmp == 0xffffffffffffffffUL) {
42371,42376c42350
<       *warn = IMPLICITLY_UPGRADED_DISK;
<     } else {
< 
<     }
< #line 1119
<     ns.ldv_39979.disk = (unsigned char )disk_min;
---
>     tmp = c->bm_bits;
42379a42354,42355
> #line 1119
>   rl = tmp - c->bit_offset;
42381c42357
<   if ((unsigned int )ns.ldv_39979.pdsk > (unsigned int )pdsk_max) {
---
>   if (toggle == 2U) {
42383,42388c42359
<     ns.ldv_39979.pdsk = (unsigned char )pdsk_max;
<   } else {
< 
<   }
< #line 1124
<   if ((unsigned int )ns.ldv_39979.pdsk < (unsigned int )pdsk_min) {
---
>     if (rl == 0UL) {
42390,42392c42361,42365
<     if ((unsigned long )warn != (unsigned long )((enum sanitize_state_warnings *)0)) {
< #line 1126
<       *warn = IMPLICITLY_UPGRADED_PDSK;
---
>       dcbp_set_start(p, 1);
> #line 1127
>       toggle = toggle == 0U;
> #line 1128
>       goto ldv_52610;
42396,42400d42368
< #line 1127
<     ns.ldv_39979.pdsk = (unsigned char )pdsk_min;
<   } else {
< 
<   }
42402,42404c42370
<   if (((unsigned int )fp == 2U && (((unsigned int )*((unsigned char *)(& ns) + 0UL) == 1U && (int )ns.ldv_39979.conn <= 9) && (int )ns.ldv_39979.pdsk > 5)) && (((unsigned int )*((unsigned char *)(& os) + 0UL) != 1U || (int )os.ldv_39979.conn > 9) || (int )os.ldv_39979.pdsk <= 5)) {
< #line 1133
<     ns.ldv_39979.susp_fen = 1U;
---
>     dcbp_set_start(p, 0);
42409c42375,42378
<   if ((mdev->sync_conf.on_no_data == 1 && (((unsigned int )*((unsigned char *)(& ns) + 0UL) == 1U && (int )ns.ldv_39979.disk <= 7) && (int )ns.ldv_39979.pdsk <= 7)) && (((unsigned int )*((unsigned char *)(& os) + 0UL) != 1U || (int )os.ldv_39979.disk > 7) || (int )os.ldv_39979.pdsk > 7)) {
---
>   if (rl == 0UL) {
> #line 1136
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "unexpected zero runlength while encoding bitmap t:%u bo:%lu\n",
>             toggle, c->bit_offset);
42411c42380
<     ns.ldv_39979.susp_nod = 1U;
---
>     return (-1);
42415,42416d42383
< #line 1140
<   if (((unsigned int )*((unsigned char *)(& ns) + 2UL) != 0U || (unsigned int )*((unsigned char *)(& ns) + 2UL) != 0U) || (unsigned int )*((unsigned char *)(& ns) + 2UL) != 0U) {
42418c42385
<     if ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 256U) {
---
>   bits = vli_encode_bits(& bs, (u64 )rl);
42420,42423c42387
<       ns.ldv_39979.conn = 20U;
<     } else {
< 
<     }
---
>   if (bits == -105) {
42425,42430c42389
<     if ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 272U) {
< #line 1144
<       ns.ldv_39979.conn = 21U;
<     } else {
< 
<     }
---
>     goto ldv_52611;
42432,42436d42390
< #line 1146
<     if ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 320U) {
< #line 1147
<       ns.ldv_39979.conn = 16U;
<     } else {
42438,42443c42392,42400
<     }
< #line 1148
<     if ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 336U) {
< #line 1149
<       ns.ldv_39979.conn = 17U;
<     } else {
---
>   }
> #line 1144
>   if (bits <= 0) {
> #line 1145
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "error while encoding bitmap: %d\n",
>             bits);
> #line 1146
>     return (0);
>   } else {
42445d42401
<     }
42446a42403,42409
> #line 1149
>   toggle = toggle == 0U;
> #line 1150
>   plain_bits = plain_bits + rl;
> #line 1151
>   c->bit_offset = tmp;
>   ldv_52610: ;
42448,42460c42411,42413
<   return (ns);
< }
< }
< #line 1156 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static void set_ov_position(struct drbd_conf *mdev , enum drbd_conns cs ) 
< { 
<   unsigned long bit ;
< 
<   {
< #line 1158
<   if (mdev->agreed_pro_version <= 89) {
< #line 1159
<     mdev->ov_start_sector = 0UL;
---
>   if (c->bit_offset < c->bm_bits) {
> #line 1153
>     goto ldv_52612;
42463a42417,42423
>   ldv_52611: 
> #line 1154
>   len = ((unsigned int )((long )bs.cur.b) - (unsigned int )((long )(& p->code))) + (unsigned int )(bs.cur.bit != 0U);
> #line 1156
>   if ((unsigned long )(len << 3) > plain_bits) {
> #line 1159
>     c->bit_offset = c->bit_offset - plain_bits;
42465c42425
<   mdev->rs_total = drbd_bm_bits(mdev);
---
>     bm_xfer_ctx_bit_to_word_offset(c);
42467c42427
<   mdev->ov_position = 0UL;
---
>     c->bit_offset = c->word_offset * 64UL;
42469,42471c42429
<   if ((unsigned int )cs == 19U) {
< #line 1168
<     mdev->ov_start_sector = 0xffffffffffffffffUL;
---
>     return (0);
42472a42431,42434
> 
>   }
> #line 1167
>   bm_xfer_ctx_bit_to_word_offset(c);
42474,42476c42436
<     bit = mdev->ov_start_sector >> 3;
< #line 1171
<     if (mdev->rs_total <= bit) {
---
>   dcbp_set_pad_bits(p, (int )(- bs.cur.bit) & 7);
42478,42491c42438
<       mdev->ov_start_sector = (mdev->rs_total - 1UL) << 3;
< #line 1174
<       mdev->rs_total = 1UL;
<     } else {
< #line 1176
<       mdev->rs_total = mdev->rs_total - bit;
<     }
< #line 1177
<     mdev->ov_position = mdev->ov_start_sector;
<   }
< #line 1179
<   mdev->ov_left = mdev->rs_total;
< #line 1180
<   return;
---
>   return ((int )len);
42494,42495c42441,42442
< #line 1182 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static void drbd_resume_al(struct drbd_conf *mdev ) 
---
> #line 1182 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> static int send_bitmap_rle_or_plain(struct drbd_conf *mdev , struct bm_xfer_ctx *c ) 
42497c42444,42454
<   int tmp ;
---
>   struct drbd_socket *sock ;
>   unsigned int header_size ;
>   unsigned int tmp ;
>   struct p_compressed_bm *p ;
>   int len ;
>   int err ;
>   unsigned int data_size ;
>   unsigned long num_words ;
>   unsigned long *p___0 ;
>   size_t __min1 ;
>   size_t __min2 ;
42501,42503c42458
<   tmp = drbd_test_and_clear_flag(mdev, AL_SUSPENDED);
< #line 1184
<   if (tmp != 0) {
---
>   sock = & (mdev->tconn)->data;
42505c42460,42470
<     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Resumed AL updates\n");
---
>   tmp = drbd_header_size(mdev->tconn);
> #line 1185
>   header_size = tmp;
> #line 1186
>   p = (struct p_compressed_bm *)sock->sbuf + (unsigned long )header_size;
> #line 1189
>   len = fill_bitmap_rle_bits(mdev, p, 4095U - header_size, c);
> #line 1191
>   if (len < 0) {
> #line 1192
>     return (-5);
42509,42556c42474,42484
< #line 1186
<   return;
< }
< }
< #line 1198 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< enum drbd_state_rv __drbd_set_state(struct drbd_conf *mdev , union drbd_state ns ,
<                                     enum chg_state_flags flags , struct completion *done ) 
< { 
<   union drbd_state os ;
<   enum drbd_state_rv rv ;
<   enum sanitize_state_warnings ssw ;
<   struct after_state_chg_work *ascw ;
<   enum drbd_state_rv tmp ;
<   char *pbp ;
<   char pb[300U] ;
<   char const   *tmp___0 ;
<   char const   *tmp___1 ;
<   int tmp___2 ;
<   char const   *tmp___3 ;
<   char const   *tmp___4 ;
<   int tmp___5 ;
<   char const   *tmp___6 ;
<   char const   *tmp___7 ;
<   int tmp___8 ;
<   char const   *tmp___9 ;
<   char const   *tmp___10 ;
<   int tmp___11 ;
<   char const   *tmp___12 ;
<   char const   *tmp___13 ;
<   int tmp___14 ;
<   int tmp___15 ;
<   int tmp___16 ;
<   int tmp___17 ;
<   int tmp___18 ;
<   int tmp___19 ;
<   int tmp___20 ;
<   int tmp___21 ;
<   int tmp___22 ;
<   int tmp___23 ;
<   unsigned long tmp___24 ;
<   unsigned long now ;
<   int i ;
<   u32 mdf ;
<   int tmp___25 ;
<   int tmp___26 ;
<   void *tmp___27 ;
< 
<   {
---
> #line 1194
>   if (len != 0) {
> #line 1195
>     dcbp_set_code(p, RLE_VLI_Bits);
> #line 1196
>     err = __send_command(mdev->tconn, mdev->vnr, sock, P_COMPRESSED_BITMAP, (unsigned int )len + 1U,
>                          0, 0U);
> #line 1199
>     c->packets[0] = c->packets[0] + 1U;
> #line 1200
>     c->bytes[0] = (c->bytes[0] + (header_size + (unsigned int )len)) + 1U;
42558,42566c42486,42491
<   rv = 1;
< #line 1206
<   os = mdev->state;
< #line 1208
<   ns = sanitize_state(mdev, os, ns, & ssw);
< #line 1210
<   if (ns.i == os.i) {
< #line 1211
<     return (SS_NOTHING_TO_DO);
---
>     if (c->bit_offset >= c->bm_bits) {
> #line 1203
>       len = 0;
>     } else {
> 
>     }
42567a42493,42509
> #line 1209
>     p___0 = (unsigned long *)sock->sbuf + (unsigned long )header_size;
> #line 1211
>     data_size = 4096U - header_size;
> #line 1212
>     __min1 = (unsigned long )(data_size / 8U);
> #line 1212
>     __min2 = c->bm_words - c->word_offset;
> #line 1212
>     num_words = __min1 < __min2 ? __min1 : __min2;
> #line 1214
>     len = (int )((unsigned int )num_words * 8U);
> #line 1215
>     if (len != 0) {
> #line 1216
>       drbd_bm_get_lel(mdev, c->word_offset, num_words, p___0);
>     } else {
42569,42571c42511
<   }
< #line 1213
<   if (((unsigned int )flags & 1U) == 0U) {
---
>     }
42573c42513,42514
<     rv = is_valid_state(mdev, ns);
---
>     err = __send_command(mdev->tconn, mdev->vnr, sock, P_BITMAP, (unsigned int )len,
>                          0, 0U);
42575,42577c42516,42520
<     if ((int )rv <= 0) {
< #line 1222
<       tmp = is_valid_state(mdev, os);
---
>     c->word_offset = c->word_offset + num_words;
> #line 1219
>     c->bit_offset = c->word_offset * 64UL;
> #line 1221
>     c->packets[1] = c->packets[1] + 1U;
42579,42582c42522,42524
<       if ((int )tmp == (int )rv) {
< #line 1223
<         rv = is_valid_state_transition(mdev, ns, os);
<       } else {
---
>     c->bytes[1] = c->bytes[1] + (header_size + (unsigned int )len);
> #line 1224
>     if (c->bit_offset > c->bm_bits) {
42584,42585c42526
<         rv = is_valid_state_transition(mdev, ns, os);
<       }
---
>       c->bit_offset = c->bm_bits;
42589,42590d42529
<   } else {
< 
42591a42531,42532
> #line 1227
>   if (err == 0) {
42593c42534
<   if ((int )rv <= 0) {
---
>     if (len == 0) {
42595c42536
<     if (((unsigned int )flags & 2U) != 0U) {
---
>       INFO_bm_xfer_stats(mdev, "send", c);
42597c42538
<       print_st_err(mdev, os, ns, rv);
---
>       return (0);
42599c42540,42541
< 
---
> #line 1232
>       return (1);
42601,42602d42542
< #line 1231
<     return (rv);
42607,42622c42547,42562
<   print_sanitize_warnings(mdev, ssw);
< #line 1238
<   pbp = (char *)(& pb);
< #line 1239
<   *pbp = 0;
< #line 1240
<   if ((int )ns.ldv_39979.role != (int )os.ldv_39979.role) {
< #line 1241
<     tmp___0 = drbd_role_str((enum drbd_role )ns.ldv_39979.role);
< #line 1241
<     tmp___1 = drbd_role_str((enum drbd_role )os.ldv_39979.role);
< #line 1241
<     tmp___2 = sprintf(pbp, "role( %s -> %s ) ", tmp___1, tmp___0);
< #line 1241
<     pbp = pbp + (unsigned long )tmp___2;
<   } else {
---
>   return (-5);
> }
> }
> #line 1238 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> static int _drbd_send_bitmap(struct drbd_conf *mdev ) 
> { 
>   struct bm_xfer_ctx c ;
>   int err ;
>   bool _bool ;
>   int tmp ;
>   int tmp___0 ;
>   int tmp___1 ;
>   int tmp___2 ;
>   struct bm_xfer_ctx __constr_expr_0 ;
>   unsigned long tmp___3 ;
>   size_t tmp___4 ;
42624,42634c42564,42571
<   }
< #line 1244
<   if ((int )ns.ldv_39979.peer != (int )os.ldv_39979.peer) {
< #line 1245
<     tmp___3 = drbd_role_str((enum drbd_role )ns.ldv_39979.peer);
< #line 1245
<     tmp___4 = drbd_role_str((enum drbd_role )os.ldv_39979.peer);
< #line 1245
<     tmp___5 = sprintf(pbp, "peer( %s -> %s ) ", tmp___4, tmp___3);
< #line 1245
<     pbp = pbp + (unsigned long )tmp___5;
---
>   {
> #line 1243
>   _bool = (unsigned long )mdev->bitmap != (unsigned long )((struct drbd_bitmap *)0);
> #line 1243
>   if (! _bool) {
> #line 1243
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"mdev->bitmap", "_drbd_send_bitmap");
42638,42647c42575,42578
< #line 1248
<   if ((int )ns.ldv_39979.conn != (int )os.ldv_39979.conn) {
< #line 1249
<     tmp___6 = drbd_conn_str((enum drbd_conns )ns.ldv_39979.conn);
< #line 1249
<     tmp___7 = drbd_conn_str((enum drbd_conns )os.ldv_39979.conn);
< #line 1249
<     tmp___8 = sprintf(pbp, "conn( %s -> %s ) ", tmp___7, tmp___6);
< #line 1249
<     pbp = pbp + (unsigned long )tmp___8;
---
> #line 1243
>   if (_bool) {
> #line 1243
>     tmp = 0;
42649c42580,42581
< 
---
> #line 1243
>     tmp = 1;
42651,42660c42583,42586
< #line 1252
<   if ((int )ns.ldv_39979.disk != (int )os.ldv_39979.disk) {
< #line 1253
<     tmp___9 = drbd_disk_str((enum drbd_disk_state )ns.ldv_39979.disk);
< #line 1253
<     tmp___10 = drbd_disk_str((enum drbd_disk_state )os.ldv_39979.disk);
< #line 1253
<     tmp___11 = sprintf(pbp, "disk( %s -> %s ) ", tmp___10, tmp___9);
< #line 1253
<     pbp = pbp + (unsigned long )tmp___11;
---
> #line 1243
>   if (tmp) {
> #line 1244
>     return (0);
42663a42590,42608
> #line 1246
>   tmp___2 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 1246
>   if (tmp___2 != 0) {
> #line 1247
>     tmp___1 = drbd_md_test_flag(mdev->ldev, 8);
> #line 1247
>     if (tmp___1 != 0) {
> #line 1248
>       _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Writing the whole bitmap, MDF_FullSync was set.\n");
> #line 1249
>       drbd_bm_set_all(mdev);
> #line 1250
>       tmp___0 = drbd_bm_write(mdev);
> #line 1250
>       if (tmp___0 != 0) {
> #line 1254
>         dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Failed to write bitmap to disk!\n");
>       } else {
42665,42671c42610
<   if ((int )ns.ldv_39979.pdsk != (int )os.ldv_39979.pdsk) {
< #line 1257
<     tmp___12 = drbd_disk_str((enum drbd_disk_state )ns.ldv_39979.pdsk);
< #line 1257
<     tmp___13 = drbd_disk_str((enum drbd_disk_state )os.ldv_39979.pdsk);
< #line 1257
<     tmp___14 = sprintf(pbp, "pdsk( %s -> %s ) ", tmp___13, tmp___12);
---
>         drbd_md_clear_flag(mdev, 8);
42673,42674c42612,42614
<     pbp = pbp + (unsigned long )tmp___14;
<   } else {
---
>         drbd_md_sync(mdev);
>       }
>     } else {
42676,42680c42616
<   }
< #line 1260
<   tmp___18 = is_susp(ns);
< #line 1260
<   tmp___19 = is_susp(os);
---
>     }
42682,42700c42618
<   if (tmp___18 != tmp___19) {
< #line 1261
<     tmp___15 = is_susp(ns);
< #line 1261
<     tmp___16 = is_susp(os);
< #line 1261
<     tmp___17 = sprintf(pbp, "susp( %d -> %d ) ", tmp___16, tmp___15);
< #line 1261
<     pbp = pbp + (unsigned long )tmp___17;
<   } else {
< 
<   }
< #line 1264
<   if ((int )ns.ldv_39979.aftr_isp != (int )os.ldv_39979.aftr_isp) {
< #line 1265
<     tmp___20 = sprintf(pbp, "aftr_isp( %d -> %d ) ", (int )os.ldv_39979.aftr_isp,
<                        (int )ns.ldv_39979.aftr_isp);
< #line 1265
<     pbp = pbp + (unsigned long )tmp___20;
---
>     put_ldev(mdev);
42704,42708c42622,42644
< #line 1268
<   if ((int )ns.ldv_39979.peer_isp != (int )os.ldv_39979.peer_isp) {
< #line 1269
<     tmp___21 = sprintf(pbp, "peer_isp( %d -> %d ) ", (int )os.ldv_39979.peer_isp,
<                        (int )ns.ldv_39979.peer_isp);
---
> #line 1263
>   tmp___3 = drbd_bm_bits(mdev);
> #line 1263
>   tmp___4 = drbd_bm_words(mdev);
> #line 1263
>   __constr_expr_0.bm_bits = tmp___3;
> #line 1263
>   __constr_expr_0.bm_words = tmp___4;
> #line 1263
>   __constr_expr_0.bit_offset = 0UL;
> #line 1263
>   __constr_expr_0.word_offset = 0UL;
> #line 1263
>   __constr_expr_0.packets[0] = 0U;
> #line 1263
>   __constr_expr_0.packets[1] = 0U;
> #line 1263
>   __constr_expr_0.bytes[0] = 0U;
> #line 1263
>   __constr_expr_0.bytes[1] = 0U;
> #line 1263
>   c = __constr_expr_0;
>   ldv_52637: 
42710c42646,42650
<     pbp = pbp + (unsigned long )tmp___21;
---
>   err = send_bitmap_rle_or_plain(mdev, & c);
> #line 1270
>   if (err > 0) {
> #line 1271
>     goto ldv_52637;
42713a42654
> 
42715,42720c42656,42678
<   if ((int )ns.ldv_39979.user_isp != (int )os.ldv_39979.user_isp) {
< #line 1273
<     tmp___22 = sprintf(pbp, "user_isp( %d -> %d ) ", (int )os.ldv_39979.user_isp,
<                        (int )ns.ldv_39979.user_isp);
< #line 1273
<     pbp = pbp + (unsigned long )tmp___22;
---
>   return (err == 0);
> }
> }
> #line 1275 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> int drbd_send_bitmap(struct drbd_conf *mdev ) 
> { 
>   struct drbd_socket *sock ;
>   int err ;
>   int tmp ;
> 
>   {
> #line 1277
>   sock = & (mdev->tconn)->data;
> #line 1278
>   err = -1;
> #line 1280
>   mutex_lock_nested(& sock->mutex, 0U);
> #line 1281
>   if ((unsigned long )sock->socket != (unsigned long )((struct socket *)0)) {
> #line 1282
>     tmp = _drbd_send_bitmap(mdev);
> #line 1282
>     err = tmp == 0;
42724,42734c42682,42694
< #line 1276
<   _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "%s\n", (char *)(& pb));
< #line 1287
<   if (((unsigned int )*((unsigned char *)(& ns) + 1UL) == 0U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 0U) && (unsigned int )*((unsigned char *)(& ns) + 0UL) == 2U) {
< #line 1287
<     tmp___23 = drbd_test_and_set_flag(mdev, CONFIG_PENDING);
< #line 1287
<     if (tmp___23 == 0) {
< #line 1291
<       drbd_set_flag(mdev, DEVICE_DYING);
<     } else {
---
> #line 1283
>   mutex_unlock(& sock->mutex);
> #line 1284
>   return (err);
> }
> }
> #line 1287 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> void drbd_send_b_ack(struct drbd_tconn *tconn , u32 barrier_nr , u32 set_size ) 
> { 
>   struct drbd_socket *sock ;
>   struct p_barrier_ack *p ;
>   void *tmp ;
>   __u32 tmp___0 ;
42736c42696,42700
<     }
---
>   {
> #line 1292
>   if ((unsigned int )tconn->cstate <= 8U) {
> #line 1293
>     return;
42739a42704,42709
> #line 1295
>   sock = & tconn->meta;
> #line 1296
>   tmp = conn_prepare_command(tconn, sock);
> #line 1296
>   p = (struct p_barrier_ack *)tmp;
42741,42743c42711,42713
<   if (((unsigned int )*((unsigned char *)(& os) + 1UL) != 4U && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 4U) || ((unsigned int )*((unsigned char *)(& os) + 1UL) != 0U && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 0U)) {
< #line 1299
<     atomic_inc(& mdev->local_cnt);
---
>   if ((unsigned long )p == (unsigned long )((struct p_barrier_ack *)0)) {
> #line 1298
>     return;
42746a42717,42722
> #line 1299
>   p->barrier = barrier_nr;
> #line 1300
>   tmp___0 = __fswab32(set_size);
> #line 1300
>   p->set_size = tmp___0;
42748,42771c42724,42738
<   mdev->state = ns;
< #line 1303
<   if ((unsigned int )*((unsigned char *)(& os) + 1UL) == 2U && (int )ns.ldv_39979.disk > 2) {
< #line 1304
<     drbd_print_uuids(mdev, "attached to UUIDs");
<   } else {
< 
<   }
< #line 1306
<   __wake_up(& mdev->misc_wait, 3U, 1, 0);
< #line 1307
<   __wake_up(& mdev->state_wait, 3U, 1, 0);
< #line 1311
<   if (((unsigned int )*((unsigned short *)(& os) + 0UL) == 288U || (unsigned int )*((unsigned short *)(& os) + 0UL) == 304U) && (int )ns.ldv_39979.conn <= 10) {
< #line 1313
<     tmp___24 = drbd_bm_bits(mdev);
< #line 1313
<     mdev->ov_start_sector = (tmp___24 - mdev->ov_left) << 3;
< #line 1315
<     if (mdev->ov_left != 0UL) {
< #line 1316
<       _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Online Verify reached sector %llu\n",
<                 (unsigned long long )mdev->ov_start_sector);
<     } else {
---
>   conn_send_command(tconn, sock, P_BARRIER_ACK, 8U, 0, 0U);
> #line 1302
>   return;
> }
> }
> #line 1312 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> static int _drbd_send_ack(struct drbd_conf *mdev , enum drbd_packet cmd , u64 sector ,
>                           u32 blksize , u64 block_id ) 
> { 
>   struct drbd_socket *sock ;
>   struct p_block_ack *p ;
>   void *tmp ;
>   int tmp___0 ;
>   __u32 tmp___1 ;
>   int tmp___2 ;
42773c42740,42744
<     }
---
>   {
> #line 1318
>   if ((int )mdev->state.ldv_50103.conn <= 9) {
> #line 1319
>     return (-5);
42777,42778c42748,42749
< #line 1320
<   if (((unsigned int )*((unsigned short *)(& os) + 0UL) == 336U || (unsigned int )*((unsigned short *)(& os) + 0UL) == 320U) && ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 272U || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 256U)) {
---
> #line 1321
>   sock = & (mdev->tconn)->meta;
42780c42751,42753
<     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Syncer continues.\n");
---
>   tmp = drbd_prepare_command(mdev, sock);
> #line 1322
>   p = (struct p_block_ack *)tmp;
42782,42789c42755,42757
<     mdev->rs_paused = mdev->rs_paused + (unsigned long )((long )jiffies - (long )mdev->rs_mark_time[mdev->rs_last_mark]);
< #line 1325
<     if ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 272U) {
< #line 1326
<       mod_timer(& mdev->resync_timer, jiffies);
<     } else {
< 
<     }
---
>   if ((unsigned long )p == (unsigned long )((struct p_block_ack *)0)) {
> #line 1324
>     return (-5);
42792a42761,42772
> #line 1325
>   p->sector = sector;
> #line 1326
>   p->block_id = block_id;
> #line 1327
>   p->blksize = blksize;
> #line 1328
>   tmp___0 = atomic_add_return(1, & mdev->packet_seq);
> #line 1328
>   tmp___1 = __fswab32((__u32 )tmp___0);
> #line 1328
>   p->seq_num = tmp___1;
42794,42798c42774,42792
<   if (((unsigned int )*((unsigned short *)(& os) + 0UL) == 272U || (unsigned int )*((unsigned short *)(& os) + 0UL) == 256U) && ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 336U || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 320U)) {
< #line 1331
<     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Resync suspended\n");
< #line 1332
<     mdev->rs_mark_time[mdev->rs_last_mark] = jiffies;
---
>   tmp___2 = drbd_send_command(mdev, sock, cmd, 24U, 0, 0U);
> #line 1329
>   return (tmp___2);
> }
> }
> #line 1335 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> void drbd_send_ack_dp(struct drbd_conf *mdev , enum drbd_packet cmd , struct p_data *dp ,
>                       int data_size ) 
> { 
>   unsigned int tmp ;
>   __u32 tmp___0 ;
> 
>   {
> #line 1338
>   if ((unsigned long )(mdev->tconn)->peer_integrity_tfm != (unsigned long )((struct crypto_hash *)0)) {
> #line 1339
>     tmp = crypto_hash_digestsize((mdev->tconn)->peer_integrity_tfm);
> #line 1339
>     data_size = (int )((unsigned int )data_size - tmp);
42802,42805d42795
< #line 1335
<   if ((unsigned int )*((unsigned short *)(& os) + 0UL) == 160U && ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 288U || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 304U)) {
< #line 1337
<     now = jiffies;
42807,42809c42797,42799
<     set_ov_position(mdev, (enum drbd_conns )ns.ldv_39979.conn);
< #line 1341
<     mdev->rs_start = now;
---
>   tmp___0 = __fswab32((__u32 )data_size);
> #line 1340
>   _drbd_send_ack(mdev, cmd, dp->sector, tmp___0, dp->block_id);
42811,42834c42801,42806
<     mdev->rs_last_events = 0;
< #line 1343
<     mdev->rs_last_sect_ev = 0;
< #line 1344
<     mdev->ov_last_oos_size = 0UL;
< #line 1345
<     mdev->ov_last_oos_start = 0UL;
< #line 1347
<     i = 0;
< #line 1347
<     goto ldv_52253;
<     ldv_52252: 
< #line 1348
<     mdev->rs_mark_left[i] = mdev->ov_left;
< #line 1349
<     mdev->rs_mark_time[i] = now;
< #line 1347
<     i = i + 1;
<     ldv_52253: ;
< #line 1347
<     if (i <= 7) {
< #line 1348
<       goto ldv_52252;
<     } else {
---
>   return;
> }
> }
> #line 1344 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> void drbd_send_ack_rp(struct drbd_conf *mdev , enum drbd_packet cmd , struct p_block_req *rp ) 
> { 
42836,42846d42807
<     }
< #line 1352
<     drbd_rs_controller_reset(mdev);
< #line 1354
<     if ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 288U) {
< #line 1355
<       _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Starting Online Verify from sector %llu\n",
<                 (unsigned long long )mdev->ov_position);
< #line 1357
<       mod_timer(& mdev->resync_timer, jiffies);
<     } else {
42848,42849c42809,42821
<     }
<   } else {
---
>   {
> #line 1347
>   _drbd_send_ack(mdev, cmd, rp->sector, rp->blksize, rp->block_id);
> #line 1348
>   return;
> }
> }
> #line 1356 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> int drbd_send_ack(struct drbd_conf *mdev , enum drbd_packet cmd , struct drbd_peer_request *peer_req ) 
> { 
>   __u32 tmp ;
>   __u64 tmp___0 ;
>   int tmp___1 ;
42851,42864c42823,42841
<   }
< #line 1361
<   tmp___26 = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 1361
<   if (tmp___26 != 0) {
< #line 1362
<     mdf = (mdev->ldev)->md.flags & 4294967176U;
< #line 1366
<     tmp___25 = drbd_test_flag(mdev, CRASHED_PRIMARY);
< #line 1366
<     if (tmp___25 != 0) {
< #line 1367
<       mdf = mdf | 64U;
<     } else {
---
>   {
> #line 1359
>   tmp = __fswab32(peer_req->i.size);
> #line 1359
>   tmp___0 = __fswab64((__u64 )peer_req->i.sector);
> #line 1359
>   tmp___1 = _drbd_send_ack(mdev, cmd, tmp___0, tmp, peer_req->ldv_50490.block_id);
> #line 1359
>   return (tmp___1);
> }
> }
> #line 1367 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> int drbd_send_ack_ex(struct drbd_conf *mdev , enum drbd_packet cmd , sector_t sector ,
>                      int blksize , u64 block_id ) 
> { 
>   __u64 tmp ;
>   __u32 tmp___0 ;
>   __u64 tmp___1 ;
>   int tmp___2 ;
42866,42868c42843
<     }
< #line 1368
<     if ((unsigned int )*((unsigned char *)mdev + 2276UL) == 1U || ((int )mdev->state.ldv_39979.pdsk <= 3 && (unsigned int )*((unsigned char *)mdev + 2276UL) == 4U)) {
---
>   {
42870,42908c42845,42865
<       mdf = mdf | 2U;
<     } else {
< 
<     }
< #line 1371
<     if ((int )mdev->state.ldv_39979.conn > 9) {
< #line 1372
<       mdf = mdf | 4U;
<     } else {
< 
<     }
< #line 1373
<     if ((int )mdev->state.ldv_39979.disk > 4) {
< #line 1374
<       mdf = mdf | 1U;
<     } else {
< 
<     }
< #line 1375
<     if ((int )mdev->state.ldv_39979.disk > 5) {
< #line 1376
<       mdf = mdf | 16U;
<     } else {
< 
<     }
< #line 1377
<     if ((int )mdev->state.ldv_39979.pdsk <= 5 && (int )mdev->state.ldv_39979.pdsk > 3) {
< #line 1378
<       mdf = mdf | 32U;
<     } else {
< 
<     }
< #line 1379
<     if ((mdev->ldev)->md.flags != mdf) {
< #line 1380
<       (mdev->ldev)->md.flags = mdf;
< #line 1381
<       drbd_md_mark_dirty(mdev);
<     } else {
---
>   tmp = __fswab64(block_id);
> #line 1370
>   tmp___0 = __fswab32((__u32 )blksize);
> #line 1370
>   tmp___1 = __fswab64((__u64 )sector);
> #line 1370
>   tmp___2 = _drbd_send_ack(mdev, cmd, tmp___1, tmp___0, tmp);
> #line 1370
>   return (tmp___2);
> }
> }
> #line 1376 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> int drbd_send_drequest(struct drbd_conf *mdev , int cmd , sector_t sector , int size ,
>                        u64 block_id ) 
> { 
>   struct drbd_socket *sock ;
>   struct p_block_req *p ;
>   void *tmp ;
>   __u64 tmp___0 ;
>   __u32 tmp___1 ;
>   int tmp___2 ;
42910c42867,42869
<     }
---
>   {
> #line 1382
>   sock = & (mdev->tconn)->data;
42912c42871,42873
<     if ((int )os.ldv_39979.disk <= 6 && (int )ns.ldv_39979.disk > 6) {
---
>   tmp = drbd_prepare_command(mdev, sock);
> #line 1383
>   p = (struct p_block_req *)tmp;
42914,42917c42875
<       drbd_set_ed_uuid(mdev, (mdev->ldev)->md.uuid[0]);
<     } else {
< 
<     }
---
>   if ((unsigned long )p == (unsigned long )((struct p_block_req *)0)) {
42919c42877
<     put_ldev(mdev);
---
>     return (-5);
42922a42881,42890
> #line 1386
>   tmp___0 = __fswab64((__u64 )sector);
> #line 1386
>   p->sector = tmp___0;
> #line 1387
>   p->block_id = block_id;
> #line 1388
>   tmp___1 = __fswab32((__u32 )size);
> #line 1388
>   p->blksize = tmp___1;
42924,42941c42892,42906
<   if ((((unsigned int )*((unsigned char *)(& os) + 1UL) == 8U && *((unsigned int *)(& os) + 0UL) == 32768U) && (unsigned int )*((unsigned char *)(& os) + 0UL) == 8U) && (unsigned int )*((unsigned char *)(& ns) + 0UL) == 4U) {
< #line 1391
<     drbd_set_flag(mdev, CONSIDER_RESYNC);
<   } else {
< 
<   }
< #line 1394
<   if ((unsigned int )*((unsigned short *)(& os) + 0UL) != 16U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 16U) {
< #line 1395
<     drbd_thread_stop_nowait(& mdev->receiver);
<   } else {
< 
<   }
< #line 1398
<   if ((unsigned int )*((unsigned short *)(& os) + 0UL) != 0U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 0U) {
< #line 1399
<     drbd_thread_stop_nowait(& mdev->receiver);
<   } else {
---
>   tmp___2 = drbd_send_command(mdev, sock, (enum drbd_packet )cmd, 24U, 0, 0U);
> #line 1389
>   return (tmp___2);
> }
> }
> #line 1392 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> int drbd_send_drequest_csum(struct drbd_conf *mdev , sector_t sector , int size ,
>                             void *digest , int digest_size , enum drbd_packet cmd ) 
> { 
>   struct drbd_socket *sock ;
>   struct p_block_req *p ;
>   void *tmp ;
>   __u64 tmp___0 ;
>   __u32 tmp___1 ;
>   int tmp___2 ;
42943c42908,42914
<   }
---
>   {
> #line 1400
>   sock = & (mdev->tconn)->data;
> #line 1401
>   tmp = drbd_prepare_command(mdev, sock);
> #line 1401
>   p = (struct p_block_req *)tmp;
42945,42947c42916,42918
<   if (((int )os.ldv_39979.conn > 8 && (int )ns.ldv_39979.conn <= 7) && (int )ns.ldv_39979.conn > 2) {
< #line 1404
<     drbd_thread_restart_nowait(& mdev->receiver);
---
>   if ((unsigned long )p == (unsigned long )((struct p_block_req *)0)) {
> #line 1403
>     return (-5);
42950a42922,42931
> #line 1404
>   tmp___0 = __fswab64((__u64 )sector);
> #line 1404
>   p->sector = tmp___0;
> #line 1405
>   p->block_id = 0xffffffffffffffffULL;
> #line 1406
>   tmp___1 = __fswab32((__u32 )size);
> #line 1406
>   p->blksize = tmp___1;
42952,42962c42933,42946
<   if ((int )os.ldv_39979.conn <= 9 && (int )ns.ldv_39979.conn > 9) {
< #line 1408
<     drbd_resume_al(mdev);
<   } else {
< 
<   }
< #line 1413
<   if ((unsigned int )*((unsigned short *)(& os) + 0UL) != 144U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 144U) {
< #line 1414
<     mdev->last_reconnect_jif = jiffies;
<   } else {
---
>   tmp___2 = drbd_send_command(mdev, sock, cmd, 24U, digest, (unsigned int )digest_size);
> #line 1407
>   return (tmp___2);
> }
> }
> #line 1411 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> int drbd_send_ov_request(struct drbd_conf *mdev , sector_t sector , int size ) 
> { 
>   struct drbd_socket *sock ;
>   struct p_block_req *p ;
>   void *tmp ;
>   __u64 tmp___0 ;
>   __u32 tmp___1 ;
>   int tmp___2 ;
42964,42966c42948,42950
<   }
< #line 1415
<   if (((unsigned int )*((unsigned char *)(& os) + 1UL) == 2U || (unsigned int )*((unsigned char *)(& os) + 1UL) == 6U) && (int )ns.ldv_39979.disk > 3) {
---
>   {
> #line 1416
>   sock = & (mdev->tconn)->data;
42968c42952,42958
<     mdev->last_reattach_jif = jiffies;
---
>   tmp = drbd_prepare_command(mdev, sock);
> #line 1417
>   p = (struct p_block_req *)tmp;
> #line 1418
>   if ((unsigned long )p == (unsigned long )((struct p_block_req *)0)) {
> #line 1419
>     return (-5);
42972,42975d42961
< #line 1419
<   tmp___27 = kmalloc(48UL, 32U);
< #line 1419
<   ascw = (struct after_state_chg_work *)tmp___27;
42977c42963,42965
<   if ((unsigned long )ascw != (unsigned long )((struct after_state_chg_work *)0)) {
---
>   tmp___0 = __fswab64((__u64 )sector);
> #line 1420
>   p->sector = tmp___0;
42979c42967
<     ascw->os = os;
---
>   p->block_id = 0xffffffffffffffffULL;
42981c42969,42971
<     ascw->ns = ns;
---
>   tmp___1 = __fswab32((__u32 )size);
> #line 1422
>   p->blksize = tmp___1;
42983,42995c42973,42975
<     ascw->flags = flags;
< #line 1424
<     ascw->w.cb = & w_after_state_ch;
< #line 1425
<     ascw->done = done;
< #line 1426
<     drbd_queue_work(& mdev->data.work, & ascw->w);
<   } else {
< #line 1428
<     dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Could not kmalloc an ascw\n");
<   }
< #line 1431
<   return (rv);
---
>   tmp___2 = drbd_send_command(mdev, sock, P_OV_REQUEST, 24U, 0, 0U);
> #line 1423
>   return (tmp___2);
42998,42999c42978,42979
< #line 1434 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static int w_after_state_ch(struct drbd_conf *mdev , struct drbd_work *w , int unused ) 
---
> #line 1430 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> static int we_should_drop_the_connection(struct drbd_tconn *tconn , struct socket *sock ) 
43001,43002c42981,42985
<   struct after_state_chg_work *ascw ;
<   struct drbd_work  const  *__mptr ;
---
>   int drop_it ;
>   enum drbd_thread_state tmp ;
>   int tmp___0 ;
>   struct task_struct *tmp___1 ;
>   struct task_struct *tmp___2 ;
43005,43018c42988,43003
< #line 1437
<   __mptr = (struct drbd_work  const  *)w;
< #line 1437
<   ascw = (struct after_state_chg_work *)__mptr;
< #line 1438
<   after_state_ch(mdev, ascw->os, ascw->ns, ascw->flags);
< #line 1439
<   if (((unsigned int )ascw->flags & 4U) != 0U) {
< #line 1440
<     if ((unsigned long )ascw->done == (unsigned long )((struct completion *)0)) {
< #line 1440
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( ascw->done != NULL ) in %s:%d\n",
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<               1440);
---
> #line 1435
>   if ((unsigned long )tconn->meta.socket == (unsigned long )sock || (unsigned long )tconn->asender.task == (unsigned long )((struct task_struct *)0)) {
> #line 1435
>     tmp___0 = 1;
>   } else {
> #line 1435
>     tmp = get_t_state(& tconn->asender);
> #line 1435
>     if ((unsigned int )tmp != 1U) {
> #line 1435
>       tmp___0 = 1;
>     } else
> #line 1435
>     if ((unsigned int )tconn->cstate <= 8U) {
> #line 1435
>       tmp___0 = 1;
43020c43005,43006
< 
---
> #line 1435
>       tmp___0 = 0;
43021a43008,43012
>   }
> #line 1435
>   drop_it = tmp___0;
> #line 1440
>   if (drop_it != 0) {
43023c43014
<     complete(ascw->done);
---
>     return (1);
43028c43019,43023
<   kfree((void const   *)ascw);
---
>   tconn->ko_count = tconn->ko_count - 1U;
> #line 1443
>   drop_it = tconn->ko_count == 0U;
> #line 1444
>   if (drop_it == 0) {
43030c43025,43037
<   return (1);
---
>     tmp___1 = get_current();
> #line 1445
>     tmp___2 = get_current();
> #line 1445
>     printk("\vd-con %s: [%s/%d] sock_sendmsg time expired, ko = %u\n", tconn->name,
>            (char *)(& tmp___2->comm), tmp___1->pid, tconn->ko_count);
> #line 1447
>     request_ping(tconn);
>   } else {
> 
>   }
> #line 1450
>   return (drop_it);
43033,43034c43040,43041
< #line 1448 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static void abw_start_sync(struct drbd_conf *mdev , int rv ) 
---
> #line 1453 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> static void drbd_update_congested(struct drbd_tconn *tconn ) 
43036,43039c43043
<   union drbd_state val ;
<   union drbd_state mask ;
<   union drbd_state val___0 ;
<   union drbd_state mask___0 ;
---
>   struct sock *sk ;
43042,43057c43046,43051
< #line 1450
<   if (rv != 0) {
< #line 1451
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Writing the bitmap failed not starting resync.\n");
< #line 1452
<     val.i = 0U;
< #line 1452
<     val.ldv_39979.conn = 10U;
< #line 1452
<     mask.i = 0U;
< #line 1452
<     mask.ldv_39979.conn = 31U;
< #line 1452
<     _drbd_request_state(mdev, mask, val, CS_VERBOSE);
< #line 1453
<     return;
---
> #line 1455
>   sk = (tconn->data.socket)->sk;
> #line 1456
>   if (sk->sk_wmem_queued > (sk->sk_sndbuf * 4) / 5) {
> #line 1457
>     set_bit(0U, (unsigned long volatile   *)(& tconn->flags));
43061,43067d43054
< #line 1456
<   switch ((int )mdev->state.ldv_39979.conn) {
<   case 12: 
< #line 1458
<   val___0.i = 0U;
< #line 1458
<   val___0.ldv_39979.conn = 15U;
43069,43083d43055
<   mask___0.i = 0U;
< #line 1458
<   mask___0.ldv_39979.conn = 31U;
< #line 1458
<   _drbd_request_state(mdev, mask___0, val___0, CS_VERBOSE);
< #line 1459
<   goto ldv_52277;
<   case 11: 
< #line 1461
<   drbd_start_resync(mdev, C_SYNC_SOURCE);
< #line 1462
<   goto ldv_52277;
<   }
<   ldv_52277: ;
< #line 1465
43087,43089c43059,43061
< #line 1466 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< int drbd_bitmap_io_from_worker(struct drbd_conf *mdev , int (*io_fn)(struct drbd_conf * ) ,
<                                char *why , enum bm_flag flags ) 
---
> #line 1481 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> static int _drbd_no_send_page(struct drbd_conf *mdev , struct page *page , int offset ,
>                               size_t size , unsigned int msg_flags ) 
43091,43092c43063,43066
<   int rv ;
<   struct task_struct *tmp ;
---
>   struct socket *socket ;
>   void *addr ;
>   int err ;
>   void *tmp ;
43095,43102c43069,43082
< #line 1472
<   tmp = get_current();
< #line 1472
<   if ((unsigned long )tmp != (unsigned long )mdev->worker.task) {
< #line 1472
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( current == mdev->worker.task ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             1472);
---
> #line 1488
>   socket = (mdev->tconn)->data.socket;
> #line 1489
>   tmp = kmap(page);
> #line 1489
>   addr = tmp + (unsigned long )offset;
> #line 1490
>   err = drbd_send_all(mdev->tconn, socket, addr, size, msg_flags);
> #line 1491
>   kunmap(page);
> #line 1492
>   if (err == 0) {
> #line 1493
>     mdev->send_cnt = mdev->send_cnt + (unsigned int )(size >> 9);
43106,43117c43086,43087
< #line 1475
<   drbd_set_flag(mdev, SUSPEND_IO);
< #line 1477
<   drbd_bm_lock(mdev, why, flags);
< #line 1478
<   rv = (*io_fn)(mdev);
< #line 1479
<   drbd_bm_unlock(mdev);
< #line 1481
<   drbd_resume_io(mdev);
< #line 1483
<   return (rv);
---
> #line 1494
>   return (err);
43120,43122c43090,43092
< #line 1493 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static void after_state_ch(struct drbd_conf *mdev , union drbd_state os , union drbd_state ns ,
<                            enum chg_state_flags flags ) 
---
> #line 1497 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> static int _drbd_send_page(struct drbd_conf *mdev , struct page *page , int offset ,
>                            size_t size , unsigned int msg_flags ) 
43124,43127c43094,43098
<   enum drbd_fencing_p fp ;
<   enum drbd_req_event what ;
<   union drbd_state nsm ;
<   int tmp ;
---
>   struct socket *socket ;
>   mm_segment_t oldfs ;
>   struct thread_info *tmp ;
>   int len ;
>   int err ;
43129d43099
<   union drbd_state __ns ;
43132,43133c43102,43105
<   int tmp___3 ;
<   int tmp___4 ;
---
>   struct thread_info *tmp___3 ;
>   mm_segment_t __constr_expr_0 ;
>   int sent ;
>   ssize_t tmp___4 ;
43135,43143c43107
<   enum drbd_io_error_p eh ;
<   int tmp___6 ;
<   int tmp___7 ;
<   char const   *tmp___8 ;
<   char const   *tmp___9 ;
<   int tmp___10 ;
<   int tmp___11 ;
<   int tmp___12 ;
<   int tmp___13 ;
---
>   struct thread_info *tmp___6 ;
43146,43149d43109
< #line 1497
<   what = nothing;
< #line 1498
<   nsm.i = 4294967295U;
43151c43111,43113
<   if ((unsigned int )*((unsigned short *)(& os) + 0UL) != 160U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 160U) {
---
>   socket = (mdev->tconn)->data.socket;
> #line 1501
>   tmp = current_thread_info();
43153c43115
<     drbd_clear_flag(mdev, CRASHED_PRIMARY);
---
>   oldfs = tmp->addr_limit;
43155c43117
<     if ((unsigned long )mdev->p_uuid != (unsigned long )((u64 *)0)) {
---
>   len = (int )size;
43157c43119,43134
<       *(mdev->p_uuid + 5UL) = *(mdev->p_uuid + 5UL) & 0xfffffffffffffffdULL;
---
>   err = -5;
> #line 1511
>   if ((int )disable_sendpage) {
> #line 1512
>     tmp___0 = _drbd_no_send_page(mdev, page, offset, size, msg_flags);
> #line 1512
>     return (tmp___0);
>   } else {
> #line 1511
>     tmp___1 = page_count(page);
> #line 1511
>     if (tmp___1 <= 0) {
> #line 1512
>       tmp___0 = _drbd_no_send_page(mdev, page, offset, size, msg_flags);
> #line 1512
>       return (tmp___0);
43158a43136,43144
> #line 1511
>       tmp___2 = PageSlab((struct page  const  *)page);
> #line 1511
>       if (tmp___2 != 0) {
> #line 1512
>         tmp___0 = _drbd_no_send_page(mdev, page, offset, size, msg_flags);
> #line 1512
>         return (tmp___0);
>       } else {
43159a43146
>       }
43161,43175d43147
<   } else {
< 
<   }
< #line 1506
<   fp = FP_DONT_CARE;
< #line 1507
<   tmp = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 1507
<   if (tmp != 0) {
< #line 1508
<     fp = (enum drbd_fencing_p )(mdev->ldev)->dc.fencing;
< #line 1509
<     put_ldev(mdev);
<   } else {
< 
43177,43178c43149,43150
< #line 1513
<   drbd_bcast_state(mdev, ns);
---
> #line 1514
>   msg_flags = msg_flags | 16384U;
43180,43185c43152,43165
<   if ((((unsigned int )*((unsigned char *)(& os) + 0UL) != 1U || (int )os.ldv_39979.disk > 7) || (int )os.ldv_39979.pdsk > 7) && (((unsigned int )*((unsigned char *)(& ns) + 0UL) == 1U && (int )ns.ldv_39979.disk <= 7) && (int )ns.ldv_39979.pdsk <= 7)) {
< #line 1517
<     drbd_khelper(mdev, (char *)"pri-on-incon-degr");
<   } else {
< 
<   }
---
>   drbd_update_congested(mdev->tconn);
> #line 1516
>   tmp___3 = current_thread_info();
> #line 1516
>   __constr_expr_0.seg = 0xffffffffffffffffUL;
> #line 1516
>   tmp___3->addr_limit = __constr_expr_0;
>   ldv_52744: 
> #line 1520
>   tmp___4 = (*((socket->ops)->sendpage))(socket, page, offset, (size_t )len, (int )msg_flags);
> #line 1520
>   sent = (int )tmp___4;
> #line 1521
>   if (sent <= 0) {
43187c43167
<   if ((int )os.ldv_39979.disk <= 3 && (int )ns.ldv_39979.disk > 3) {
---
>     if (sent == -11) {
43189,43190c43169,43174
<     mod_timer(& mdev->request_timer, (unsigned long )jiffies + 250UL);
<   } else {
---
>       tmp___5 = we_should_drop_the_connection(mdev->tconn, socket);
> #line 1523
>       if (tmp___5 != 0) {
> #line 1524
>         goto ldv_52741;
>       } else {
43192c43176
<   }
---
>       }
43194,43200c43178
<   nsm.i = 4294967295U;
< #line 1526
<   if ((unsigned int )*((unsigned char *)(& ns) + 2UL) != 0U) {
< #line 1527
<     if ((int )os.ldv_39979.conn <= 9 && (int )ns.ldv_39979.conn > 9) {
< #line 1528
<       what = resend;
---
>       goto ldv_52742;
43203a43182,43186
> #line 1527
>     dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "%s: size=%d len=%d sent=%d\n",
>              "_drbd_send_page", (int )size, len, sent);
> #line 1529
>     if (sent < 0) {
43205,43207c43188
<     if (((unsigned int )*((unsigned char *)(& os) + 1UL) == 2U || (unsigned int )*((unsigned char *)(& os) + 1UL) == 6U) && (int )ns.ldv_39979.disk > 3) {
< #line 1532
<       what = restart_frozen_disk_io;
---
>       err = sent;
43210a43192,43198
> #line 1531
>     goto ldv_52741;
>   } else {
> 
>   }
> #line 1533
>   len = len - sent;
43212c43200,43201
<     if ((unsigned int )what != 27U) {
---
>   offset = offset + sent;
>   ldv_52742: ;
43214,43217c43203,43205
<       nsm.ldv_39979.susp_nod = 0U;
<     } else {
< 
<     }
---
>   if (len > 0) {
> #line 1536
>     goto ldv_52744;
43221,43222c43209,43217
< #line 1538
<   if ((unsigned int )*((unsigned char *)(& ns) + 2UL) != 0U) {
---
>   ldv_52741: 
> #line 1536
>   tmp___6 = current_thread_info();
> #line 1536
>   tmp___6->addr_limit = oldfs;
> #line 1537
>   clear_bit(0, (unsigned long volatile   *)(& (mdev->tconn)->flags));
> #line 1539
>   if (len == 0) {
43224c43219
<     if ((int )os.ldv_39979.pdsk > 5 && (int )ns.ldv_39979.pdsk <= 5) {
---
>     err = 0;
43226,43233c43221,43222
<       tmp___0 = drbd_test_flag(mdev, NEW_CUR_UUID);
< #line 1541
<       if (tmp___0 != 0) {
< #line 1542
<         drbd_uuid_new_current(mdev);
< #line 1543
<         drbd_clear_flag(mdev, NEW_CUR_UUID);
<       } else {
---
>     mdev->send_cnt = mdev->send_cnt + (unsigned int )(size >> 9);
>   } else {
43235,43248c43224,43234
<       }
< #line 1545
<       spin_lock_irq(& mdev->req_lock);
< #line 1546
<       _tl_clear(mdev);
< #line 1547
<       __ns.i = mdev->state.i;
< #line 1547
<       __ns.ldv_39979.susp_fen = 0U;
< #line 1547
<       _drbd_set_state(mdev, __ns, CS_VERBOSE, 0);
< #line 1548
<       spin_unlock_irq(& mdev->req_lock);
<     } else {
---
>   }
> #line 1543
>   return (err);
> }
> }
> #line 1546 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> static int _drbd_send_bio(struct drbd_conf *mdev , struct bio *bio ) 
> { 
>   struct bio_vec *bvec ;
>   int i ;
>   int err ;
43250c43236
<     }
---
>   {
43252,43256c43238,43243
<     if ((int )os.ldv_39979.conn <= 9 && (int )ns.ldv_39979.conn > 9) {
< #line 1552
<       drbd_clear_flag(mdev, NEW_CUR_UUID);
< #line 1553
<       what = resend;
---
>   bvec = bio->bi_io_vec + (unsigned long )bio->bi_idx;
> #line 1551
>   i = (int )bio->bi_idx;
> #line 1551
>   goto ldv_52753;
>   ldv_52752: 
43258,43261c43245,43250
<       nsm.ldv_39979.susp_fen = 0U;
<     } else {
< 
<     }
---
>   err = _drbd_no_send_page(mdev, bvec->bv_page, (int )bvec->bv_offset, (size_t )bvec->bv_len,
>                            (int )bio->bi_vcnt + -1 == i ? 0U : 32768U);
> #line 1557
>   if (err != 0) {
> #line 1558
>     return (err);
43265,43276c43254,43262
< #line 1558
<   if ((unsigned int )what != 27U) {
< #line 1559
<     spin_lock_irq(& mdev->req_lock);
< #line 1560
<     _tl_restart(mdev, what);
< #line 1561
<     nsm.i = nsm.i & mdev->state.i;
< #line 1562
<     _drbd_set_state(mdev, nsm, CS_VERBOSE, 0);
< #line 1563
<     spin_unlock_irq(& mdev->req_lock);
---
> #line 1551
>   bvec = bvec + 1;
> #line 1551
>   i = i + 1;
>   ldv_52753: ;
> #line 1551
>   if ((int )bio->bi_vcnt > i) {
> #line 1552
>     goto ldv_52752;
43280,43287c43266,43288
< #line 1570
<   if ((((unsigned int )*((unsigned short *)(& os) + 0UL) != 256U && (unsigned int )*((unsigned short *)(& os) + 0UL) != 320U) && ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 256U || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 320U)) && mdev->agreed_pro_version > 95) {
< #line 1570
<     tmp___1 = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 1570
<     if (tmp___1 != 0) {
< #line 1573
<       drbd_gen_and_send_sync_uuid(mdev);
---
> 
> #line 1560
>   return (0);
> }
> }
> #line 1563 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> static int _drbd_send_zc_bio(struct drbd_conf *mdev , struct bio *bio ) 
> { 
>   struct bio_vec *bvec ;
>   int i ;
>   int err ;
> 
>   {
> #line 1568
>   bvec = bio->bi_io_vec + (unsigned long )bio->bi_idx;
> #line 1568
>   i = (int )bio->bi_idx;
> #line 1568
>   goto ldv_52763;
>   ldv_52762: 
> #line 1571
>   err = _drbd_send_page(mdev, bvec->bv_page, (int )bvec->bv_offset, (size_t )bvec->bv_len,
>                         (int )bio->bi_vcnt + -1 == i ? 0U : 32768U);
43289,43290c43290,43293
<       put_ldev(mdev);
<     } else {
---
>   if (err != 0) {
> #line 1575
>     return (err);
>   } else {
43292c43295,43304
<     }
---
>   }
> #line 1568
>   bvec = bvec + 1;
> #line 1568
>   i = i + 1;
>   ldv_52763: ;
> #line 1568
>   if ((int )bio->bi_vcnt > i) {
> #line 1569
>     goto ldv_52762;
43296,43301c43308,43325
< #line 1578
<   if (*((unsigned int *)(& os) + 0UL) == 0U && (int )ns.ldv_39979.pdsk > 0) {
< #line 1581
<     mdev->rs_total = 0UL;
< #line 1582
<     mdev->rs_failed = 0UL;
---
> 
> #line 1577
>   return (0);
> }
> }
> #line 1580 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> static int _drbd_send_zc_ee(struct drbd_conf *mdev , struct drbd_peer_request *peer_req ) 
> { 
>   struct page *page ;
>   unsigned int len ;
>   int err ;
>   unsigned int l ;
>   unsigned int __min1 ;
>   unsigned int __min2 ;
>   struct page *tmp ;
>   struct page *tmp___0 ;
> 
>   {
43303c43327
<     atomic_set(& mdev->rs_pending_cnt, 0);
---
>   page = peer_req->pages;
43305,43309c43329,43346
<     drbd_rs_cancel_all(mdev);
< #line 1586
<     drbd_send_uuids(mdev);
< #line 1587
<     drbd_send_state(mdev, ns);
---
>   len = peer_req->i.size;
> #line 1588
>   goto ldv_52778;
>   ldv_52777: 
> #line 1589
>   __min1 = len;
> #line 1589
>   __min2 = 4096U;
> #line 1589
>   l = __min1 < __min2 ? __min1 : __min2;
> #line 1591
>   tmp = page_chain_next(page);
> #line 1591
>   err = _drbd_send_page(mdev, page, 0, (size_t )l, (unsigned long )tmp != (unsigned long )((struct page *)0) ? 32768U : 0U);
> #line 1593
>   if (err != 0) {
> #line 1594
>     return (err);
43313,43317c43350,43368
< #line 1592
<   if (((unsigned int )*((unsigned short *)(& os) + 0UL) != 208U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 208U) && (unsigned int )*((unsigned short *)mdev + 1138UL) == 208U) {
< #line 1594
<     drbd_queue_bitmap_io(mdev, & drbd_send_bitmap, 0, (char *)"send_bitmap (WFBitMapS)",
<                          BM_LOCKED_TEST_ALLOWED);
---
> #line 1595
>   len = len - l;
> #line 1588
>   page = page_chain_next(page);
>   ldv_52778: ;
> #line 1588
>   if ((unsigned long )page != (unsigned long )((struct page *)0)) {
> #line 1588
>     tmp___0 = page_chain_next(page);
> #line 1588
>     __builtin_prefetch((void const   *)tmp___0);
> #line 1588
>     if (1 != 0) {
> #line 1589
>       goto ldv_52777;
>     } else {
> #line 1591
>       goto ldv_52779;
>     }
43321,43341c43372,43379
< #line 1599
<   if ((((int )os.ldv_39979.pdsk > 3 && *((unsigned int *)(& os) + 0UL) != 49152U) && *((unsigned int *)(& os) + 0UL) != 40960U) && (((int )ns.ldv_39979.pdsk <= 3 || *((unsigned int *)(& ns) + 0UL) == 49152U) || *((unsigned int *)(& ns) + 0UL) == 40960U)) {
< #line 1605
<     tmp___3 = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 1605
<     if (tmp___3 != 0) {
< #line 1606
<       if ((((unsigned int )*((unsigned char *)(& ns) + 0UL) == 1U || (unsigned int )*((unsigned char *)(& ns) + 0UL) == 4U) && (mdev->ldev)->md.uuid[1] == 0ULL) && (int )ns.ldv_39979.disk > 7) {
< #line 1608
<         tmp___2 = is_susp(mdev->state);
< #line 1608
<         if (tmp___2 != 0) {
< #line 1609
<           drbd_set_flag(mdev, NEW_CUR_UUID);
<         } else {
< #line 1611
<           drbd_uuid_new_current(mdev);
< #line 1612
<           drbd_send_uuids(mdev);
<         }
<       } else {
---
>   ldv_52779: ;
> #line 1597
>   return (0);
> }
> }
> #line 1600 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> static u32 bio_flags_to_wire(struct drbd_conf *mdev , unsigned long bi_rw ) 
> { 
43343,43346d43380
<       }
< #line 1615
<       put_ldev(mdev);
<     } else {
43348c43382,43386
<     }
---
>   {
> #line 1602
>   if ((mdev->tconn)->agreed_pro_version > 94) {
> #line 1603
>     return ((u32 )(((((bi_rw & 16UL) != 0UL ? 2 : 0) | ((bi_rw & 2048UL) != 0UL ? 16 : 0)) | ((bi_rw & 4096UL) != 0UL ? 32 : 0)) | ((bi_rw & 128UL) != 0UL ? 64 : 0)));
43350c43388,43389
< 
---
> #line 1608
>     return ((bi_rw & 16UL) != 0UL ? 2U : 0U);
43352,43359c43391,43412
< #line 1619
<   if ((int )ns.ldv_39979.pdsk <= 3) {
< #line 1619
<     tmp___4 = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 1619
<     if (tmp___4 != 0) {
< #line 1620
<       if ((((unsigned int )*((unsigned char *)(& os) + 0UL) == 8U && (unsigned int )*((unsigned char *)(& ns) + 0UL) == 4U) && (mdev->ldev)->md.uuid[1] == 0ULL) && (int )ns.ldv_39979.disk > 7) {
---
> }
> }
> #line 1614 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> int drbd_send_dblock(struct drbd_conf *mdev , struct drbd_request *req ) 
> { 
>   struct drbd_socket *sock ;
>   struct p_data *p ;
>   unsigned int dp_flags ;
>   int dgs ;
>   int err ;
>   void *tmp ;
>   unsigned int tmp___0 ;
>   __u64 tmp___1 ;
>   int tmp___2 ;
>   __u32 tmp___3 ;
>   __u32 tmp___4 ;
>   unsigned char digest[64U] ;
>   int tmp___5 ;
> 
>   {
> #line 1618
>   dp_flags = 0U;
43361c43414
<         drbd_uuid_new_current(mdev);
---
>   sock = & (mdev->tconn)->data;
43363,43366c43416,43428
<         drbd_send_uuids(mdev);
<       } else {
< 
<       }
---
>   tmp = drbd_prepare_command(mdev, sock);
> #line 1623
>   p = (struct p_data *)tmp;
> #line 1624
>   if ((unsigned long )(mdev->tconn)->integrity_tfm != (unsigned long )((struct crypto_hash *)0)) {
> #line 1624
>     tmp___0 = crypto_hash_digestsize((mdev->tconn)->integrity_tfm);
> #line 1624
>     dgs = (int )tmp___0;
>   } else {
> #line 1624
>     dgs = 0;
>   }
43368,43372c43430,43433
<       if ((unsigned int )*((unsigned char *)(& os) + 0UL) == 4U && (unsigned int )*((unsigned char *)(& ns) + 0UL) == 8U) {
< #line 1630
<         drbd_bitmap_io_from_worker(mdev, & drbd_bm_write, (char *)"demote diskless peer",
<                                    BM_LOCKED_SET_ALLOWED);
<       } else {
---
>   if ((unsigned long )p == (unsigned long )((struct p_data *)0)) {
> #line 1627
>     return (-5);
>   } else {
43374c43435,43449
<       }
---
>   }
> #line 1628
>   tmp___1 = __fswab64((__u64 )req->i.sector);
> #line 1628
>   p->sector = tmp___1;
> #line 1629
>   p->block_id = (u64 )req;
> #line 1630
>   tmp___2 = atomic_add_return(1, & mdev->packet_seq);
> #line 1630
>   tmp___3 = __fswab32((__u32 )tmp___2);
> #line 1630
>   p->seq_num = tmp___3;
> #line 1631
>   dp_flags = bio_flags_to_wire(mdev, (req->master_bio)->bi_rw);
43376,43379c43451,43453
<       put_ldev(mdev);
<     } else {
< 
<     }
---
>   if ((int )mdev->state.ldv_50103.conn > 15 && (int )mdev->state.ldv_50103.conn <= 21) {
> #line 1634
>     dp_flags = dp_flags | 4U;
43382a43457,43465
> #line 1635
>   if ((mdev->tconn)->agreed_pro_version > 99) {
> #line 1636
>     if (((unsigned long )req->rq_state & 32768UL) != 0UL) {
> #line 1637
>       dp_flags = dp_flags | 128U;
>     } else {
> 
>     }
43384,43392c43467,43469
<   if (((unsigned int )*((unsigned char *)(& os) + 0UL) == 1U && (unsigned int )*((unsigned char *)(& ns) + 0UL) == 2U) && (int )mdev->state.ldv_39979.conn <= 10) {
< #line 1638
<     tmp___5 = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 1638
<     if (tmp___5 != 0) {
< #line 1642
<       drbd_bitmap_io_from_worker(mdev, & drbd_bm_write, (char *)"demote", BM_LOCKED_TEST_ALLOWED);
< #line 1644
<       put_ldev(mdev);
---
>     if (((unsigned long )req->rq_state & 65536UL) != 0UL) {
> #line 1639
>       dp_flags = dp_flags | 256U;
43399,43406c43476,43483
< #line 1648
<   if (((int )ns.ldv_39979.conn > 9 && (unsigned int )*((unsigned char *)(& os) + 1UL) == 2U) && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 6U) {
< #line 1650
<     drbd_send_sizes(mdev, 0, 0);
< #line 1651
<     drbd_send_uuids(mdev);
< #line 1652
<     drbd_send_state(mdev, ns);
---
> #line 1641
>   tmp___4 = __fswab32(dp_flags);
> #line 1641
>   p->dp_flags = tmp___4;
> #line 1642
>   if (dgs != 0) {
> #line 1643
>     drbd_csum_bio(mdev, (mdev->tconn)->integrity_tfm, req->master_bio, (void *)p + 1U);
43410,43414c43487,43511
< #line 1656
<   if ((int )ns.ldv_39979.conn > 9 && ((int )os.ldv_39979.aftr_isp != (int )ns.ldv_39979.aftr_isp || (int )os.ldv_39979.user_isp != (int )ns.ldv_39979.user_isp)) {
< #line 1659
<     drbd_send_state(mdev, ns);
<   } else {
---
> #line 1644
>   err = __send_command(mdev->tconn, mdev->vnr, sock, P_DATA, (unsigned int )dgs + 24U,
>                        0, req->i.size);
> #line 1645
>   if (err == 0) {
> #line 1657
>     if (((unsigned long )req->rq_state & 98304UL) == 0UL || dgs != 0) {
> #line 1658
>       err = _drbd_send_bio(mdev, req->master_bio);
>     } else {
> #line 1660
>       err = _drbd_send_zc_bio(mdev, req->master_bio);
>     }
> #line 1663
>     if (dgs > 0 && dgs <= 64) {
> #line 1667
>       drbd_csum_bio(mdev, (mdev->tconn)->integrity_tfm, req->master_bio, (void *)(& digest));
> #line 1668
>       tmp___5 = memcmp((void const   *)p + 1U, (void const   *)(& digest), (size_t )dgs);
> #line 1668
>       if (tmp___5 != 0) {
> #line 1669
>         dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Digest mismatch, buffer modified by upper layers during write: %llus +%u\n",
>                  (unsigned long long )req->i.sector, req->i.size);
>       } else {
43416,43420c43513,43516
<   }
< #line 1662
<   if ((((unsigned int )*((unsigned char *)(& os) + 2UL) == 0U && (unsigned int )*((unsigned char *)(& os) + 2UL) == 0U) && (unsigned int )*((unsigned char *)(& os) + 2UL) == 0U) && (((unsigned int )*((unsigned char *)(& ns) + 2UL) != 0U || (unsigned int )*((unsigned char *)(& ns) + 2UL) != 0U) || (unsigned int )*((unsigned char *)(& ns) + 2UL) != 0U)) {
< #line 1664
<     suspend_other_sg(mdev);
---
>       }
>     } else {
> 
>     }
43424,43428c43520,43535
< #line 1668
<   if ((unsigned int )*((unsigned short *)(& os) + 0UL) == 144U && (int )ns.ldv_39979.conn > 9) {
< #line 1669
<     drbd_send_state(mdev, ns);
<   } else {
---
> #line 1677
>   mutex_unlock(& sock->mutex);
> #line 1679
>   return (err);
> }
> }
> #line 1686 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> int drbd_send_block(struct drbd_conf *mdev , enum drbd_packet cmd , struct drbd_peer_request *peer_req ) 
> { 
>   struct drbd_socket *sock ;
>   struct p_data *p ;
>   int err ;
>   int dgs ;
>   void *tmp ;
>   unsigned int tmp___0 ;
>   __u64 tmp___1 ;
43429a43537,43552
>   {
> #line 1694
>   sock = & (mdev->tconn)->data;
> #line 1695
>   tmp = drbd_prepare_command(mdev, sock);
> #line 1695
>   p = (struct p_data *)tmp;
> #line 1697
>   if ((unsigned long )(mdev->tconn)->integrity_tfm != (unsigned long )((struct crypto_hash *)0)) {
> #line 1697
>     tmp___0 = crypto_hash_digestsize((mdev->tconn)->integrity_tfm);
> #line 1697
>     dgs = (int )tmp___0;
>   } else {
> #line 1697
>     dgs = 0;
43431,43434c43554,43557
< #line 1671
<   if ((unsigned int )*((unsigned short *)(& os) + 0UL) != 352U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 352U) {
< #line 1672
<     drbd_send_state(mdev, ns);
---
> #line 1699
>   if ((unsigned long )p == (unsigned long )((struct p_data *)0)) {
> #line 1700
>     return (-5);
43438,43442c43561,43574
< #line 1675
<   if (((unsigned int )*((unsigned short *)(& os) + 0UL) != 192U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 192U) || ((unsigned int )*((unsigned short *)(& os) + 0UL) != 176U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 176U)) {
< #line 1678
<     drbd_queue_bitmap_io(mdev, & drbd_bmio_set_n_write, & abw_start_sync, (char *)"set_n_write from StartingSync",
<                          BM_LOCKED_TEST_ALLOWED);
---
> #line 1701
>   tmp___1 = __fswab64((__u64 )peer_req->i.sector);
> #line 1701
>   p->sector = tmp___1;
> #line 1702
>   p->block_id = peer_req->ldv_50490.block_id;
> #line 1703
>   p->seq_num = 0U;
> #line 1704
>   p->dp_flags = 0U;
> #line 1705
>   if (dgs != 0) {
> #line 1706
>     drbd_csum_ee(mdev, (mdev->tconn)->integrity_tfm, peer_req, (void *)p + 1U);
43446,43450c43578,43584
< #line 1683
<   if ((((int )os.ldv_39979.conn <= 9 && (int )ns.ldv_39979.conn <= 9) && (int )os.ldv_39979.disk > 4) && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 8U) {
< #line 1686
<     drbd_queue_bitmap_io(mdev, & drbd_bmio_set_n_write, 0, (char *)"set_n_write from invalidate",
<                          BM_LOCKED_MASK);
---
> #line 1707
>   err = __send_command(mdev->tconn, mdev->vnr, sock, cmd, (unsigned int )dgs + 24U,
>                        0, peer_req->i.size);
> #line 1708
>   if (err == 0) {
> #line 1709
>     err = _drbd_send_zc_ee(mdev, peer_req);
43454,43471c43588,43602
< #line 1691
<   if ((unsigned int )*((unsigned char *)(& os) + 1UL) != 4U && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 4U) {
< #line 1696
<     if ((unsigned long )mdev->ldev != (unsigned long )((struct drbd_backing_dev *)0)) {
< #line 1697
<       eh = (enum drbd_io_error_p )(mdev->ldev)->dc.on_io_error;
< #line 1705
<       if ((unsigned int )eh == 1U) {
< #line 1705
<         tmp___6 = drbd_test_flag(mdev, WAS_IO_ERROR);
< #line 1705
<         if (tmp___6 != 0) {
< #line 1706
<           drbd_khelper(mdev, (char *)"local-io-error");
<         } else {
< 
<         }
<       } else {
---
> #line 1710
>   mutex_unlock(& sock->mutex);
> #line 1712
>   return (err);
> }
> }
> #line 1715 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> int drbd_send_out_of_sync(struct drbd_conf *mdev , struct drbd_request *req ) 
> { 
>   struct drbd_socket *sock ;
>   struct p_block_desc *p ;
>   void *tmp ;
>   __u64 tmp___0 ;
>   __u32 tmp___1 ;
>   int tmp___2 ;
43473c43604,43606
<       }
---
>   {
> #line 1720
>   sock = & (mdev->tconn)->data;
43475c43608
<       tmp___7 = drbd_test_flag(mdev, FORCE_DETACH);
---
>   tmp = drbd_prepare_command(mdev, sock);
43477c43610
<       if (tmp___7 != 0) {
---
>   p = (struct p_block_desc *)tmp;
43479,43508c43612,43614
<         tl_abort_disk_io(mdev);
<       } else {
< 
<       }
< #line 1727
<       if ((unsigned int )*((unsigned char *)mdev + 2277UL) != 4U) {
< #line 1728
<         tmp___8 = drbd_disk_str((enum drbd_disk_state )mdev->state.ldv_39979.disk);
< #line 1728
<         dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: disk is %s during detach\n",
<                 tmp___8);
<       } else {
< 
<       }
< #line 1732
<       if ((int )ns.ldv_39979.conn > 9) {
< #line 1733
<         drbd_send_state(mdev, ns);
<       } else {
< 
<       }
< #line 1735
<       drbd_rs_cancel_all(mdev);
< #line 1740
<       drbd_md_sync(mdev);
<     } else {
< 
<     }
< #line 1742
<     put_ldev(mdev);
---
>   if ((unsigned long )p == (unsigned long )((struct p_block_desc *)0)) {
> #line 1723
>     return (-5);
43512,43528c43618,43649
< #line 1748
<   if ((unsigned int )*((unsigned char *)(& os) + 1UL) != 0U && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 0U) {
< #line 1751
<     if ((unsigned int )*((unsigned char *)mdev + 2277UL) != 0U) {
< #line 1752
<       tmp___9 = drbd_disk_str((enum drbd_disk_state )mdev->state.ldv_39979.disk);
< #line 1752
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: disk is %s while going diskless\n",
<               tmp___9);
<     } else {
< 
<     }
< #line 1756
<     if ((int )ns.ldv_39979.conn > 9) {
< #line 1757
<       drbd_send_state(mdev, ns);
<     } else {
---
> #line 1724
>   tmp___0 = __fswab64((__u64 )req->i.sector);
> #line 1724
>   p->sector = tmp___0;
> #line 1725
>   tmp___1 = __fswab32(req->i.size);
> #line 1725
>   p->blksize = tmp___1;
> #line 1726
>   tmp___2 = drbd_send_command(mdev, sock, P_OUT_OF_SYNC, 16U, 0, 0U);
> #line 1726
>   return (tmp___2);
> }
> }
> #line 1745 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> int drbd_send(struct drbd_tconn *tconn , struct socket *sock , void *buf , size_t size ,
>               unsigned int msg_flags ) 
> { 
>   struct kvec iov ;
>   struct msghdr msg ;
>   int rv ;
>   int sent ;
>   struct net_conf *_________p1 ;
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
>   int tmp___1 ;
>   struct task_struct *tmp___2 ;
>   union drbd_state val ;
>   union drbd_state mask ;
>   union drbd_state val___0 ;
>   union drbd_state mask___0 ;
43530,43532c43651,43657
<     }
< #line 1761
<     put_ldev(mdev);
---
>   {
> #line 1750
>   sent = 0;
> #line 1752
>   if ((unsigned long )sock == (unsigned long )((struct socket *)0)) {
> #line 1753
>     return (-53);
43536,43537c43661,43674
< #line 1765
<   if (((unsigned int )*((unsigned char *)(& os) + 1UL) == 16U && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 8U) && (int )ns.ldv_39979.conn > 9) {
---
> #line 1757
>   iov.iov_base = buf;
> #line 1758
>   iov.iov_len = size;
> #line 1760
>   msg.msg_name = 0;
> #line 1761
>   msg.msg_namelen = 0;
> #line 1762
>   msg.msg_control = 0;
> #line 1763
>   msg.msg_controllen = 0UL;
> #line 1764
>   msg.msg_flags = msg_flags | 16384U;
43539,43552c43676,43693
<     drbd_send_state(mdev, ns);
<   } else {
< 
<   }
< #line 1769
<   if ((int )ns.ldv_39979.disk > 3 && (int )ns.ldv_39979.pdsk > 3) {
< #line 1769
<     tmp___10 = drbd_test_and_clear_flag(mdev, RESYNC_AFTER_NEG);
< #line 1769
<     if (tmp___10 != 0) {
< #line 1771
<       if ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 160U) {
< #line 1772
<         resync_after_online_grow(mdev);
---
>   if ((unsigned long )tconn->data.socket == (unsigned long )sock) {
> #line 1767
>     rcu_read_lock();
> #line 1768
>     _________p1 = *((struct net_conf * volatile  *)(& tconn->net_conf));
> #line 1768
>     tmp = debug_lockdep_rcu_enabled();
> #line 1768
>     if (tmp != 0 && ! __warned) {
> #line 1768
>       tmp___0 = rcu_read_lock_held();
> #line 1768
>       if (tmp___0 == 0 && 1) {
> #line 1768
>         __warned = 1;
> #line 1768
>         lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared",
>                                1768, "suspicious rcu_dereference_check() usage");
43558a43700,43705
> #line 1768
>     tconn->ko_count = _________p1->ko_count;
> #line 1769
>     rcu_read_unlock();
> #line 1770
>     drbd_update_congested(tconn);
43562,43568c43709,43711
< #line 1776
<   if ((((int )os.ldv_39979.conn > 10 && (int )ns.ldv_39979.conn <= 10) || ((unsigned int )*((unsigned char *)(& os) + 2UL) != 0U && (unsigned int )*((unsigned char *)(& ns) + 2UL) == 0U)) || ((unsigned int )*((unsigned char *)(& os) + 2UL) != 0U && (unsigned int )*((unsigned char *)(& ns) + 2UL) == 0U)) {
< #line 1779
<     resume_next_sg(mdev);
<   } else {
< 
<   }
---
>   ldv_52825: 
> #line 1782
>   rv = kernel_sendmsg(sock, & msg, & iov, 1UL, size);
43570c43713
<   if (((int )os.ldv_39979.disk <= 7 && (int )os.ldv_39979.conn > 15) && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 160U) {
---
>   if (rv == -11) {
43572c43715,43723
<     drbd_send_state(mdev, ns);
---
>     tmp___1 = we_should_drop_the_connection(tconn, sock);
> #line 1784
>     if (tmp___1 != 0) {
> #line 1785
>       goto ldv_52823;
>     } else {
> #line 1787
>       goto ldv_52824;
>     }
43577c43728,43732
<   if (((unsigned int )*((unsigned short *)(& os) + 0UL) == 288U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 160U) && mdev->agreed_pro_version > 96) {
---
>   if (rv == -4) {
> #line 1790
>     tmp___2 = get_current();
> #line 1790
>     flush_signals(tmp___2);
43579c43734
<     drbd_send_state(mdev, ns);
---
>     rv = 0;
43582a43738,43739
> #line 1793
>   if (rv < 0) {
43584c43741,43744
<   if ((unsigned int )*((unsigned short *)(& os) + 0UL) == 144U && (unsigned int )*((unsigned short *)(& ns) + 0UL) != 144U) {
---
>     goto ldv_52823;
>   } else {
> 
>   }
43586c43746
<     drbd_clear_flag(mdev, STATE_SENT);
---
>   sent = sent + rv;
43588c43748,43755
<     __wake_up(& mdev->state_wait, 3U, 1, 0);
---
>   iov.iov_base = iov.iov_base + (unsigned long )rv;
> #line 1797
>   iov.iov_len = iov.iov_len - (size_t )rv;
>   ldv_52824: ;
> #line 1798
>   if ((size_t )sent < size) {
> #line 1799
>     goto ldv_52825;
43592,43605c43759,43763
< #line 1806
<   if ((int )os.ldv_39979.conn > 10 && (int )ns.ldv_39979.conn <= 10) {
< #line 1806
<     tmp___11 = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 1806
<     if (tmp___11 != 0) {
< #line 1807
<       drbd_queue_bitmap_io(mdev, & drbd_bm_write_copy_pages, 0, (char *)"write from resync_finished",
<                            BM_IS_LOCKED);
< #line 1809
<       put_ldev(mdev);
<     } else {
< 
<     }
---
>   ldv_52823: ;
> #line 1800
>   if ((unsigned long )tconn->data.socket == (unsigned long )sock) {
> #line 1801
>     clear_bit(0, (unsigned long volatile   *)(& tconn->flags));
43609,43621c43767,43783
< #line 1813
<   if ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 0U) {
< #line 1813
<     tmp___12 = is_susp(ns);
< #line 1813
<     if (tmp___12 == 0) {
< #line 1813
<       if ((unsigned long )mdev->tl_hash != (unsigned long )((struct hlist_head *)0)) {
< #line 1814
<         drbd_free_tl_hash(mdev);
<       } else {
< 
<       }
---
> #line 1803
>   if (rv <= 0) {
> #line 1804
>     if (rv != -11) {
> #line 1805
>       printk("\vd-con %s: %s_sendmsg returned %d\n", tconn->name, (unsigned long )tconn->meta.socket == (unsigned long )sock ? (char *)"msock" : (char *)"sock",
>              rv);
> #line 1808
>       val.i = 0U;
> #line 1808
>       val.ldv_40604.conn = 4U;
> #line 1808
>       mask.i = 0U;
> #line 1808
>       mask.ldv_40604.conn = 31U;
> #line 1808
>       conn_request_state(tconn, mask, val, CS_HARD);
43623c43785,43794
< 
---
> #line 1810
>       val___0.i = 0U;
> #line 1810
>       val___0.ldv_40604.conn = 3U;
> #line 1810
>       mask___0.i = 0U;
> #line 1810
>       mask___0.ldv_40604.conn = 31U;
> #line 1810
>       conn_request_state(tconn, mask___0, val___0, CS_HARD);
43628,43632c43799,43807
< #line 1817
<   if ((unsigned int )*((unsigned short *)(& os) + 0UL) == 0U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 32U) {
< #line 1818
<     drbd_thread_start(& mdev->receiver);
<   } else {
---
> #line 1813
>   return (sent);
> }
> }
> #line 1821 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> int drbd_send_all(struct drbd_tconn *tconn , struct socket *sock , void *buffer ,
>                   size_t size , unsigned int msg_flags ) 
> { 
>   int err ;
43634,43638c43809
<   }
< #line 1822
<   if (((unsigned int )*((unsigned char *)(& ns) + 1UL) == 0U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 0U) && (unsigned int )*((unsigned char *)(& ns) + 0UL) == 2U) {
< #line 1825
<     if ((int )os.ldv_39979.aftr_isp != (int )ns.ldv_39979.aftr_isp) {
---
>   {
43640,43645c43811,43813
<       resume_next_sg(mdev);
<     } else {
< 
<     }
< #line 1828
<     tmp___13 = drbd_test_flag(mdev, DEVICE_DYING);
---
>   err = drbd_send(tconn, sock, buffer, size, msg_flags);
> #line 1827
>   if (err < 0) {
43647,43650c43815,43816
<     if (tmp___13 != 0) {
< #line 1829
<       drbd_thread_stop_nowait(& mdev->worker);
<     } else {
---
>     return (err);
>   } else {
43652c43818,43822
<     }
---
>   }
> #line 1829
>   if ((size_t )err != size) {
> #line 1830
>     return (-5);
43656,43659c43826,43827
< #line 1832
<   drbd_md_sync(mdev);
< #line 1833
<   return;
---
> #line 1831
>   return (0);
43662,43663c43830,43831
< #line 1836 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static int drbd_thread_setup(void *arg ) 
---
> #line 1834 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> static int drbd_open(struct block_device *bdev , fmode_t mode ) 
43665d43832
<   struct drbd_thread *thi ;
43668c43835
<   int retval ;
---
>   int rv ;
43670,43671d43836
<   struct task_struct *tmp___0 ;
<   struct task_struct *tmp___1 ;
43673a43839,43840
> #line 1836
>   mdev = (struct drbd_conf *)(bdev->bd_disk)->private_data;
43675,43683c43842,43847
<   thi = (struct drbd_thread *)arg;
< #line 1839
<   mdev = thi->mdev;
<   restart: 
< #line 1844
<   retval = (*(thi->function))(thi);
< #line 1846
<   tmp = spinlock_check(& thi->t_lock);
< #line 1846
---
>   rv = 0;
> #line 1840
>   mutex_lock_nested(& drbd_main_mutex, 0U);
> #line 1841
>   tmp = spinlock_check(& (mdev->tconn)->req_lock);
> #line 1841
43685,43697c43849,43869
< #line 1858
<   if ((unsigned int )thi->t_state == 3U) {
< #line 1859
<     tmp___0 = get_current();
< #line 1859
<     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Restarting %s\n",
<               (char *)(& tmp___0->comm));
< #line 1860
<     thi->t_state = Running;
< #line 1861
<     spin_unlock_irqrestore(& thi->t_lock, flags);
< #line 1862
<     goto restart;
---
> #line 1845
>   if ((unsigned int )*((unsigned char *)mdev + 748UL) != 1U) {
> #line 1846
>     if ((mode & 2U) != 0U) {
> #line 1847
>       rv = -30;
>     } else
> #line 1848
>     if (! allow_oos) {
> #line 1849
>       rv = -124;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1852
>   if (rv == 0) {
> #line 1853
>     mdev->open_cnt = mdev->open_cnt + 1;
43700a43873,43892
> #line 1854
>   spin_unlock_irqrestore(& (mdev->tconn)->req_lock, flags);
> #line 1855
>   mutex_unlock(& drbd_main_mutex);
> #line 1857
>   return (rv);
> }
> }
> #line 1860 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> static int drbd_release(struct gendisk *gd , fmode_t mode ) 
> { 
>   struct drbd_conf *mdev ;
> 
>   {
> #line 1862
>   mdev = (struct drbd_conf *)gd->private_data;
> #line 1863
>   mutex_lock_nested(& drbd_main_mutex, 0U);
> #line 1864
>   mdev->open_cnt = mdev->open_cnt - 1;
43702c43894
<   thi->task = 0;
---
>   mutex_unlock(& drbd_main_mutex);
43704,43719c43896
<   thi->t_state = None;
< #line 1867
<   __asm__  volatile   ("mfence": : : "memory");
< #line 1868
<   complete(& thi->stop);
< #line 1869
<   spin_unlock_irqrestore(& thi->t_lock, flags);
< #line 1871
<   tmp___1 = get_current();
< #line 1871
<   _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Terminating %s\n",
<             (char *)(& tmp___1->comm));
< #line 1874
<   module_put(& __this_module);
< #line 1875
<   return (retval);
---
>   return (0);
43722,43723c43899,43900
< #line 1878 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static void drbd_thread_init(struct drbd_conf *mdev , struct drbd_thread *thi , int (*func)(struct drbd_thread * ) ) 
---
> #line 1869 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> static void drbd_set_defaults(struct drbd_conf *mdev ) 
43725c43902
<   struct lock_class_key __key ;
---
>   union drbd_dev_state __constr_expr_0 ;
43728,43740c43905,43927
< #line 1881
<   spinlock_check(& thi->t_lock);
< #line 1881
<   __raw_spin_lock_init(& thi->t_lock.ldv_5957.rlock, "&(&thi->t_lock)->rlock", & __key);
< #line 1882
<   thi->task = 0;
< #line 1883
<   thi->t_state = None;
< #line 1884
<   thi->function = func;
< #line 1885
<   thi->mdev = mdev;
< #line 1886
---
> #line 1873
>   __constr_expr_0.ldv_50103.role = 2U;
> #line 1873
>   __constr_expr_0.ldv_50103.peer = 0U;
> #line 1873
>   __constr_expr_0.ldv_50103.conn = 0U;
> #line 1873
>   __constr_expr_0.ldv_50103.disk = 0U;
> #line 1873
>   __constr_expr_0.ldv_50103.pdsk = 6U;
> #line 1873
>   __constr_expr_0.ldv_50103._unused = (unsigned char)0;
> #line 1873
>   __constr_expr_0.ldv_50103.aftr_isp = (unsigned char)0;
> #line 1873
>   __constr_expr_0.ldv_50103.peer_isp = (unsigned char)0;
> #line 1873
>   __constr_expr_0.ldv_50103.user_isp = (unsigned char)0;
> #line 1873
>   __constr_expr_0.ldv_50103._pad = (unsigned short)0;
> #line 1873
>   mdev->state = __constr_expr_0;
> #line 1874
43744,46769c43931,43932
< #line 1888 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< int drbd_thread_start(struct drbd_thread *thi ) 
< { 
<   struct drbd_conf *mdev ;
<   struct task_struct *nt ;
<   unsigned long flags ;
<   char const   *me ;
<   raw_spinlock_t *tmp ;
<   struct task_struct *tmp___0 ;
<   struct task_struct *tmp___1 ;
<   bool tmp___2 ;
<   int tmp___3 ;
<   struct task_struct *tmp___4 ;
<   unsigned int tmp___5 ;
<   long tmp___6 ;
<   raw_spinlock_t *tmp___7 ;
<   struct task_struct *tmp___8 ;
<   struct task_struct *tmp___9 ;
< 
<   {
< #line 1890
<   mdev = thi->mdev;
< #line 1894
<   me = (unsigned long )(& mdev->receiver) != (unsigned long )thi ? ((unsigned long )(& mdev->asender) != (unsigned long )thi ? ((unsigned long )(& mdev->worker) == (unsigned long )thi ? "worker" : "NONSENSE") : "asender") : "receiver";
< #line 1901
<   tmp = spinlock_check(& thi->t_lock);
< #line 1901
<   flags = _raw_spin_lock_irqsave(tmp);
< #line 1903
<   switch ((unsigned int )thi->t_state) {
<   case 0U: 
< #line 1905
<   tmp___0 = get_current();
< #line 1905
<   tmp___1 = get_current();
< #line 1905
<   _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Starting %s thread (from %s [%d])\n",
<             me, (char *)(& tmp___1->comm), tmp___0->pid);
< #line 1909
<   tmp___2 = try_module_get(& __this_module);
< #line 1909
<   if (tmp___2) {
< #line 1909
<     tmp___3 = 0;
<   } else {
< #line 1909
<     tmp___3 = 1;
<   }
< #line 1909
<   if (tmp___3) {
< #line 1910
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Failed to get module reference in drbd_thread_start\n");
< #line 1911
<     spin_unlock_irqrestore(& thi->t_lock, flags);
< #line 1912
<     return (0);
<   } else {
< 
<   }
< #line 1915
<   init_completion(& thi->stop);
< #line 1916
<   if ((unsigned long )thi->task != (unsigned long )((struct task_struct *)0)) {
< #line 1916
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( thi->task == NULL ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             1916);
<   } else {
< 
<   }
< #line 1917
<   thi->reset_cpu_mask = 1;
< #line 1918
<   thi->t_state = Running;
< #line 1919
<   spin_unlock_irqrestore(& thi->t_lock, flags);
< #line 1920
<   tmp___4 = get_current();
< #line 1920
<   flush_signals(tmp___4);
< #line 1922
<   tmp___5 = mdev_to_minor(mdev);
< #line 1922
<   nt = kthread_create_on_node(& drbd_thread_setup, (void *)thi, -1, "drbd%d_%s", tmp___5,
<                               me);
< #line 1925
<   tmp___6 = IS_ERR((void const   *)nt);
< #line 1925
<   if (tmp___6 != 0L) {
< #line 1926
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Couldn\'t start thread\n");
< #line 1928
<     module_put(& __this_module);
< #line 1929
<     return (0);
<   } else {
< 
<   }
< #line 1931
<   tmp___7 = spinlock_check(& thi->t_lock);
< #line 1931
<   flags = _raw_spin_lock_irqsave(tmp___7);
< #line 1932
<   thi->task = nt;
< #line 1933
<   thi->t_state = Running;
< #line 1934
<   spin_unlock_irqrestore(& thi->t_lock, flags);
< #line 1935
<   wake_up_process(nt);
< #line 1936
<   goto ldv_52332;
<   case 2U: 
< #line 1938
<   thi->t_state = Restarting;
< #line 1939
<   tmp___8 = get_current();
< #line 1939
<   tmp___9 = get_current();
< #line 1939
<   _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Restarting %s thread (from %s [%d])\n",
<             me, (char *)(& tmp___9->comm), tmp___8->pid);
<   case 1U: ;
<   case 3U: ;
<   default: 
< #line 1945
<   spin_unlock_irqrestore(& thi->t_lock, flags);
< #line 1946
<   goto ldv_52332;
<   }
<   ldv_52332: ;
< #line 1949
<   return (1);
< }
< }
< #line 1953 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void _drbd_thread_stop(struct drbd_thread *thi , int restart , int wait ) 
< { 
<   unsigned long flags ;
<   enum drbd_thread_state ns ;
<   raw_spinlock_t *tmp ;
<   struct task_struct *tmp___0 ;
< 
<   {
< #line 1957
<   ns = restart != 0 ? Restarting : Exiting;
< #line 1960
<   tmp = spinlock_check(& thi->t_lock);
< #line 1960
<   flags = _raw_spin_lock_irqsave(tmp);
< #line 1962
<   if ((unsigned int )thi->t_state == 0U) {
< #line 1963
<     spin_unlock_irqrestore(& thi->t_lock, flags);
< #line 1964
<     if (restart != 0) {
< #line 1965
<       drbd_thread_start(thi);
<     } else {
< 
<     }
< #line 1966
<     return;
<   } else {
< 
<   }
< #line 1969
<   if ((unsigned int )thi->t_state != (unsigned int )ns) {
< #line 1970
<     if ((unsigned long )thi->task == (unsigned long )((struct task_struct *)0)) {
< #line 1971
<       spin_unlock_irqrestore(& thi->t_lock, flags);
< #line 1972
<       return;
<     } else {
< 
<     }
< #line 1975
<     thi->t_state = ns;
< #line 1976
<     __asm__  volatile   ("mfence": : : "memory");
< #line 1977
<     init_completion(& thi->stop);
< #line 1978
<     tmp___0 = get_current();
< #line 1978
<     if ((unsigned long )thi->task != (unsigned long )tmp___0) {
< #line 1979
<       force_sig(1, thi->task);
<     } else {
< 
<     }
<   } else {
< 
<   }
< #line 1983
<   spin_unlock_irqrestore(& thi->t_lock, flags);
< #line 1985
<   if (wait != 0) {
< #line 1986
<     wait_for_completion(& thi->stop);
<   } else {
< 
<   }
< #line 1987
<   return;
< }
< }
< #line 1997 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void drbd_calc_cpu_mask(struct drbd_conf *mdev ) 
< { 
<   int ord ;
<   int cpu ;
<   unsigned int tmp ;
<   unsigned int tmp___0 ;
<   unsigned int tmp___1 ;
<   int tmp___2 ;
<   unsigned int tmp___3 ;
< 
<   {
< #line 2002
<   tmp = cpumask_weight((struct cpumask  const  *)mdev->cpu_mask);
< #line 2002
<   if (tmp != 0U) {
< #line 2003
<     return;
<   } else {
< 
<   }
< #line 2005
<   tmp___0 = mdev_to_minor(mdev);
< #line 2005
<   tmp___1 = cpumask_weight(cpu_online_mask);
< #line 2005
<   ord = (int )(tmp___0 % tmp___1);
< #line 2006
<   cpu = -1;
< #line 2006
<   goto ldv_52353;
<   ldv_52352: 
< #line 2007
<   tmp___2 = ord;
< #line 2007
<   ord = ord - 1;
< #line 2007
<   if (tmp___2 == 0) {
< #line 2008
<     cpumask_set_cpu((unsigned int )cpu, mdev->cpu_mask);
< #line 2009
<     return;
<   } else {
< 
<   }
<   ldv_52353: 
< #line 2006
<   tmp___3 = cpumask_next(cpu, cpu_online_mask);
< #line 2006
<   cpu = (int )tmp___3;
< #line 2006
<   if (cpu < nr_cpu_ids) {
< #line 2007
<     goto ldv_52352;
<   } else {
< 
<   }
< #line 2013
<   cpumask_setall(mdev->cpu_mask);
< #line 2014
<   return;
< }
< }
< #line 2023 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void drbd_thread_current_set_cpu(struct drbd_conf *mdev ) 
< { 
<   struct task_struct *p ;
<   struct task_struct *tmp ;
<   struct drbd_thread *thi ;
<   int _b ;
< 
<   {
< #line 2025
<   tmp = get_current();
< #line 2025
<   p = tmp;
< #line 2026
<   thi = (unsigned long )mdev->asender.task == (unsigned long )p ? & mdev->asender : ((unsigned long )mdev->receiver.task == (unsigned long )p ? & mdev->receiver : ((unsigned long )mdev->worker.task == (unsigned long )p ? & mdev->worker : 0));
< #line 2031
<   _b = (unsigned long )thi == (unsigned long )((struct drbd_thread *)0);
< #line 2031
<   if (_b != 0) {
< #line 2031
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_thread_current_set_cpu", (char *)"thi == NULL", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             2031);
<   } else {
< 
<   }
< #line 2031
<   if (_b != 0) {
< #line 2032
<     return;
<   } else {
< 
<   }
< #line 2033
<   if (thi->reset_cpu_mask == 0) {
< #line 2034
<     return;
<   } else {
< 
<   }
< #line 2035
<   thi->reset_cpu_mask = 0;
< #line 2036
<   set_cpus_allowed_ptr(p, (struct cpumask  const  *)mdev->cpu_mask);
< #line 2037
<   return;
< }
< }
< #line 2041 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< int _drbd_send_cmd(struct drbd_conf *mdev , struct socket *sock , enum drbd_packets cmd ,
<                    struct p_header80 *h , size_t size , unsigned int msg_flags ) 
< { 
<   int sent ;
<   int ok ;
<   int _b ;
<   int _b___0 ;
<   __u16 tmp ;
<   __u16 tmp___0 ;
<   char const   *tmp___1 ;
<   struct task_struct *tmp___2 ;
<   int tmp___3 ;
< 
<   {
< #line 2047
<   _b = (unsigned long )h == (unsigned long )((struct p_header80 *)0);
< #line 2047
<   if (_b != 0) {
< #line 2047
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "_drbd_send_cmd", (char *)"!h", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             2047);
<   } else {
< 
<   }
< #line 2047
<   if (_b != 0) {
< #line 2047
<     return (0);
<   } else {
< 
<   }
< #line 2048
<   _b___0 = size == 0UL;
< #line 2048
<   if (_b___0 != 0) {
< #line 2048
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "_drbd_send_cmd", (char *)"!size", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             2048);
<   } else {
< 
<   }
< #line 2048
<   if (_b___0 != 0) {
< #line 2048
<     return (0);
<   } else {
< 
<   }
< #line 2050
<   h->magic = 1728214147U;
< #line 2051
<   tmp = __fswab16((int )((__u16 )cmd));
< #line 2051
<   h->command = tmp;
< #line 2052
<   tmp___0 = __fswab16((int )((unsigned int )((__u16 )size) - 8U));
< #line 2052
<   h->length = tmp___0;
< #line 2054
<   sent = drbd_send(mdev, sock, (void *)h, size, msg_flags);
< #line 2056
<   ok = (size_t )sent == size;
< #line 2057
<   if (ok == 0) {
< #line 2057
<     tmp___2 = get_current();
< #line 2057
<     tmp___3 = signal_pending(tmp___2);
< #line 2057
<     if (tmp___3 == 0) {
< #line 2058
<       tmp___1 = cmdname(cmd);
< #line 2058
<       dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "short sent %s size=%d sent=%d\n",
<                tmp___1, (int )size, sent);
<     } else {
< 
<     }
<   } else {
< 
<   }
< #line 2060
<   return (ok);
< }
< }
< #line 2066 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< int drbd_send_cmd(struct drbd_conf *mdev , int use_data_socket , enum drbd_packets cmd ,
<                   struct p_header80 *h , size_t size ) 
< { 
<   int ok ;
<   struct socket *sock ;
<   long tmp ;
< 
<   {
< #line 2069
<   ok = 0;
< #line 2072
<   if (use_data_socket != 0) {
< #line 2073
<     ldv_mutex_lock_209(& mdev->data.mutex);
< #line 2074
<     sock = mdev->data.socket;
<   } else {
< #line 2076
<     ldv_mutex_lock_210(& mdev->meta.mutex);
< #line 2077
<     sock = mdev->meta.socket;
<   }
< #line 2082
<   tmp = __builtin_expect((unsigned long )sock != (unsigned long )((struct socket *)0),
<                          1L);
< #line 2082
<   if (tmp != 0L) {
< #line 2083
<     ok = _drbd_send_cmd(mdev, sock, cmd, h, size, 0U);
<   } else {
< 
<   }
< #line 2085
<   if (use_data_socket != 0) {
< #line 2086
<     ldv_mutex_unlock_211(& mdev->data.mutex);
<   } else {
< #line 2088
<     ldv_mutex_unlock_212(& mdev->meta.mutex);
<   }
< #line 2089
<   return (ok);
< }
< }
< #line 2092 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< int drbd_send_cmd2(struct drbd_conf *mdev , enum drbd_packets cmd , char *data , size_t size ) 
< { 
<   struct p_header80 h ;
<   int ok ;
<   __u16 tmp ;
<   __u16 tmp___0 ;
<   int tmp___1 ;
<   int tmp___2 ;
<   int tmp___3 ;
<   int tmp___4 ;
< 
<   {
< #line 2098
<   h.magic = 1728214147U;
< #line 2099
<   tmp = __fswab16((int )((__u16 )cmd));
< #line 2099
<   h.command = tmp;
< #line 2100
<   tmp___0 = __fswab16((int )((__u16 )size));
< #line 2100
<   h.length = tmp___0;
< #line 2102
<   tmp___1 = drbd_get_data_sock___0(mdev);
< #line 2102
<   if (tmp___1 == 0) {
< #line 2103
<     return (0);
<   } else {
< 
<   }
< #line 2105
<   tmp___2 = drbd_send(mdev, mdev->data.socket, (void *)(& h), 8UL, 0U);
< #line 2105
<   ok = tmp___2 == 8;
< #line 2107
<   if (ok != 0) {
< #line 2107
<     tmp___3 = drbd_send(mdev, mdev->data.socket, (void *)data, size, 0U);
< #line 2107
<     if ((size_t )tmp___3 == size) {
< #line 2107
<       tmp___4 = 1;
<     } else {
< #line 2107
<       tmp___4 = 0;
<     }
<   } else {
< #line 2107
<     tmp___4 = 0;
<   }
< #line 2107
<   ok = tmp___4;
< #line 2110
<   drbd_put_data_sock___0(mdev);
< #line 2112
<   return (ok);
< }
< }
< #line 2115 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< int drbd_send_sync_param(struct drbd_conf *mdev , struct syncer_conf *sc ) 
< { 
<   struct p_rs_param_95 *p ;
<   struct socket *sock ;
<   int size ;
<   int rv ;
<   int apv ;
<   size_t tmp ;
<   int tmp___0 ;
<   enum drbd_packets cmd ;
<   __u32 tmp___1 ;
<   __u32 tmp___2 ;
<   __u32 tmp___3 ;
<   __u32 tmp___4 ;
<   __u32 tmp___5 ;
<   long tmp___6 ;
< 
<   {
< #line 2120
<   apv = mdev->agreed_pro_version;
< #line 2122
<   if (apv > 87) {
< #line 2122
<     if (apv == 88) {
< #line 2122
<       tmp = strlen((char const   *)(& mdev->sync_conf.verify_alg));
< #line 2122
<       tmp___0 = (int )((unsigned int )tmp + 13U);
<     } else {
< #line 2122
<       tmp___0 = apv <= 94 ? 140 : 156;
<     }
< #line 2122
<     size = tmp___0;
<   } else {
< #line 2122
<     size = 12;
<   }
< #line 2131
<   ldv_mutex_lock_213(& mdev->data.mutex);
< #line 2132
<   sock = mdev->data.socket;
< #line 2134
<   tmp___6 = __builtin_expect((unsigned long )sock != (unsigned long )((struct socket *)0),
<                              1L);
< #line 2134
<   if (tmp___6 != 0L) {
< #line 2135
<     cmd = apv > 88 ? P_SYNC_PARAM89 : P_SYNC_PARAM;
< #line 2137
<     p = & mdev->data.sbuf.rs_param_95;
< #line 2140
<     memset((void *)(& p->verify_alg), 0, 128UL);
< #line 2142
<     tmp___1 = __fswab32((__u32 )sc->rate);
< #line 2142
<     p->rate = tmp___1;
< #line 2143
<     tmp___2 = __fswab32((__u32 )sc->c_plan_ahead);
< #line 2143
<     p->c_plan_ahead = tmp___2;
< #line 2144
<     tmp___3 = __fswab32((__u32 )sc->c_delay_target);
< #line 2144
<     p->c_delay_target = tmp___3;
< #line 2145
<     tmp___4 = __fswab32((__u32 )sc->c_fill_target);
< #line 2145
<     p->c_fill_target = tmp___4;
< #line 2146
<     tmp___5 = __fswab32((__u32 )sc->c_max_rate);
< #line 2146
<     p->c_max_rate = tmp___5;
< #line 2148
<     if (apv > 87) {
< #line 2149
<       strcpy((char *)(& p->verify_alg), (char const   *)(& mdev->sync_conf.verify_alg));
<     } else {
< 
<     }
< #line 2150
<     if (apv > 88) {
< #line 2151
<       strcpy((char *)(& p->csums_alg), (char const   *)(& mdev->sync_conf.csums_alg));
<     } else {
< 
<     }
< #line 2153
<     rv = _drbd_send_cmd(mdev, sock, cmd, & p->head, (size_t )size, 0U);
<   } else {
< #line 2155
<     rv = 0;
<   }
< #line 2157
<   ldv_mutex_unlock_214(& mdev->data.mutex);
< #line 2159
<   return (rv);
< }
< }
< #line 2162 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< int drbd_send_protocol(struct drbd_conf *mdev ) 
< { 
<   struct p_protocol *p ;
<   int size ;
<   int cf ;
<   int rv ;
<   size_t tmp ;
<   void *tmp___0 ;
<   __u32 tmp___1 ;
<   __u32 tmp___2 ;
<   __u32 tmp___3 ;
<   __u32 tmp___4 ;
<   __u32 tmp___5 ;
<   __u32 tmp___6 ;
< 
<   {
< #line 2167
<   size = 32;
< #line 2169
<   if (mdev->agreed_pro_version > 86) {
< #line 2170
<     tmp = strlen((char const   *)(& (mdev->net_conf)->integrity_alg));
< #line 2170
<     size = (int )(((unsigned int )tmp + (unsigned int )size) + 1U);
<   } else {
< 
<   }
< #line 2174
<   tmp___0 = kmalloc((size_t )size, 16U);
< #line 2174
<   p = (struct p_protocol *)tmp___0;
< #line 2175
<   if ((unsigned long )p == (unsigned long )((struct p_protocol *)0)) {
< #line 2176
<     return (0);
<   } else {
< 
<   }
< #line 2178
<   tmp___1 = __fswab32((__u32 )(mdev->net_conf)->wire_protocol);
< #line 2178
<   p->protocol = tmp___1;
< #line 2179
<   tmp___2 = __fswab32((__u32 )(mdev->net_conf)->after_sb_0p);
< #line 2179
<   p->after_sb_0p = tmp___2;
< #line 2180
<   tmp___3 = __fswab32((__u32 )(mdev->net_conf)->after_sb_1p);
< #line 2180
<   p->after_sb_1p = tmp___3;
< #line 2181
<   tmp___4 = __fswab32((__u32 )(mdev->net_conf)->after_sb_2p);
< #line 2181
<   p->after_sb_2p = tmp___4;
< #line 2182
<   tmp___5 = __fswab32((__u32 )(mdev->net_conf)->two_primaries);
< #line 2182
<   p->two_primaries = tmp___5;
< #line 2184
<   cf = 0;
< #line 2185
<   if ((unsigned int )*((unsigned char *)mdev->net_conf + 540UL) != 0U) {
< #line 2186
<     cf = cf | 1;
<   } else {
< 
<   }
< #line 2187
<   if ((unsigned int )*((unsigned char *)mdev->net_conf + 540UL) != 0U) {
< #line 2188
<     if (mdev->agreed_pro_version > 91) {
< #line 2189
<       cf = cf | 2;
<     } else {
< #line 2191
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "--dry-run is not supported by peer");
< #line 2192
<       kfree((void const   *)p);
< #line 2193
<       return (-1);
<     }
<   } else {
< 
<   }
< #line 2196
<   tmp___6 = __fswab32((__u32 )cf);
< #line 2196
<   p->conn_flags = tmp___6;
< #line 2198
<   if (mdev->agreed_pro_version > 86) {
< #line 2199
<     strcpy((char *)(& p->integrity_alg), (char const   *)(& (mdev->net_conf)->integrity_alg));
<   } else {
< 
<   }
< #line 2201
<   rv = drbd_send_cmd(mdev, 1, P_PROTOCOL, (struct p_header80 *)p, (size_t )size);
< #line 2203
<   kfree((void const   *)p);
< #line 2204
<   return (rv);
< }
< }
< #line 2207 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< int _drbd_send_uuids(struct drbd_conf *mdev , u64 uuid_flags ) 
< { 
<   struct p_uuids p ;
<   int i ;
<   int tmp ;
<   __u64 tmp___0 ;
<   __u64 tmp___1 ;
<   int tmp___2 ;
<   __u64 tmp___3 ;
<   int tmp___4 ;
< 
<   {
< #line 2212
<   tmp = _get_ldev_if_state(mdev, D_NEGOTIATING);
< #line 2212
<   if (tmp == 0) {
< #line 2213
<     return (1);
<   } else {
< 
<   }
< #line 2215
<   spin_lock_irq(& (mdev->ldev)->md.uuid_lock);
< #line 2216
<   i = 0;
< #line 2216
<   goto ldv_52419;
<   ldv_52418: ;
< #line 2217
<   if ((unsigned long )mdev->ldev != (unsigned long )((struct drbd_backing_dev *)0)) {
< #line 2217
<     tmp___0 = __fswab64((mdev->ldev)->md.uuid[i]);
< #line 2217
<     p.uuid[i] = tmp___0;
<   } else {
< #line 2217
<     p.uuid[i] = 0ULL;
<   }
< #line 2216
<   i = i + 1;
<   ldv_52419: ;
< #line 2216
<   if (i <= 3) {
< #line 2217
<     goto ldv_52418;
<   } else {
< 
<   }
< #line 2218
<   spin_unlock_irq(& (mdev->ldev)->md.uuid_lock);
< #line 2220
<   mdev->comm_bm_set = drbd_bm_total_weight(mdev);
< #line 2221
<   tmp___1 = __fswab64((__u64 )mdev->comm_bm_set);
< #line 2221
<   p.uuid[4] = tmp___1;
< #line 2222
<   uuid_flags = ((unsigned int )*((unsigned char *)mdev->net_conf + 540UL) != 0U ? 1ULL : 0ULL) | uuid_flags;
< #line 2223
<   tmp___2 = drbd_test_flag(mdev, CRASHED_PRIMARY);
< #line 2223
<   uuid_flags = (tmp___2 != 0 ? 2ULL : 0ULL) | uuid_flags;
< #line 2224
<   uuid_flags = ((unsigned int )*((unsigned char *)mdev + 2273UL) == 8U ? 4ULL : 0ULL) | uuid_flags;
< #line 2225
<   tmp___3 = __fswab64(uuid_flags);
< #line 2225
<   p.uuid[5] = tmp___3;
< #line 2227
<   put_ldev(mdev);
< #line 2229
<   tmp___4 = drbd_send_cmd(mdev, 1, P_UUIDS, (struct p_header80 *)(& p), 56UL);
< #line 2229
<   return (tmp___4);
< }
< }
< #line 2233 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< int drbd_send_uuids(struct drbd_conf *mdev ) 
< { 
<   int tmp ;
< 
<   {
< #line 2235
<   tmp = _drbd_send_uuids(mdev, 0ULL);
< #line 2235
<   return (tmp);
< }
< }
< #line 2238 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< int drbd_send_uuids_skip_initial_sync(struct drbd_conf *mdev ) 
< { 
<   int tmp ;
< 
<   {
< #line 2240
<   tmp = _drbd_send_uuids(mdev, 8ULL);
< #line 2240
<   return (tmp);
< }
< }
< #line 2243 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void drbd_print_uuids(struct drbd_conf *mdev , char const   *text ) 
< { 
<   u64 *uuid ;
<   int tmp ;
< 
<   {
< #line 2245
<   tmp = _get_ldev_if_state(mdev, D_NEGOTIATING);
< #line 2245
<   if (tmp != 0) {
< #line 2246
<     uuid = (u64 *)(& (mdev->ldev)->md.uuid);
< #line 2247
<     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "%s %016llX:%016llX:%016llX:%016llX\n",
<               text, *uuid, *(uuid + 1UL), *(uuid + 2UL), *(uuid + 3UL));
< #line 2253
<     put_ldev(mdev);
<   } else {
< #line 2255
<     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "%s effective data uuid: %016llX\n",
<               text, mdev->ed_uuid);
<   }
< #line 2256
<   return;
< }
< }
< #line 2261 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< int drbd_gen_and_send_sync_uuid(struct drbd_conf *mdev ) 
< { 
<   struct p_rs_uuid p ;
<   u64 uuid ;
<   __u64 tmp ;
<   int tmp___0 ;
< 
<   {
< #line 2266
<   if ((unsigned int )*((unsigned char *)mdev + 2277UL) != 16U) {
< #line 2266
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mdev->state.disk == D_UP_TO_DATE ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             2266);
<   } else {
< 
<   }
< #line 2268
<   uuid = (mdev->ldev)->md.uuid[1];
< #line 2269
<   if (uuid != 0ULL && uuid != 4ULL) {
< #line 2270
<     uuid = uuid + 281474976710656ULL;
<   } else {
< #line 2272
<     get_random_bytes((void *)(& uuid), 8);
<   }
< #line 2273
<   drbd_uuid_set(mdev, 1, uuid);
< #line 2274
<   drbd_print_uuids(mdev, "updated sync UUID");
< #line 2275
<   drbd_md_sync(mdev);
< #line 2276
<   tmp = __fswab64(uuid);
< #line 2276
<   p.uuid = tmp;
< #line 2278
<   tmp___0 = drbd_send_cmd(mdev, 1, P_SYNC_UUID, (struct p_header80 *)(& p), 16UL);
< #line 2278
<   return (tmp___0);
< }
< }
< #line 2282 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< int drbd_send_sizes(struct drbd_conf *mdev , int trigger_reply , enum dds_flags flags ) 
< { 
<   struct p_sizes p ;
<   sector_t d_size ;
<   sector_t u_size ;
<   int q_order_type ;
<   unsigned int max_bio_size ;
<   int ok ;
<   unsigned int tmp ;
<   unsigned int _min1 ;
<   unsigned int _min2 ;
<   int tmp___0 ;
<   unsigned int _min1___0 ;
<   unsigned int _min2___0 ;
<   __u64 tmp___1 ;
<   __u64 tmp___2 ;
<   sector_t tmp___3 ;
<   __u64 tmp___4 ;
<   __u64 tmp___5 ;
<   __u32 tmp___6 ;
<   __u16 tmp___7 ;
<   __u16 tmp___8 ;
< 
<   {
< #line 2290
<   tmp___0 = _get_ldev_if_state(mdev, D_NEGOTIATING);
< #line 2290
<   if (tmp___0 != 0) {
< #line 2291
<     if ((unsigned long )(mdev->ldev)->backing_bdev == (unsigned long )((struct block_device *)0)) {
< #line 2291
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mdev->ldev->backing_bdev ) in %s:%d\n",
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<               2291);
<     } else {
< 
<     }
< #line 2292
<     d_size = drbd_get_max_capacity___0(mdev->ldev);
< #line 2293
<     u_size = (sector_t )(mdev->ldev)->dc.disk_size;
< #line 2294
<     q_order_type = drbd_queue_order_type(mdev);
< #line 2295
<     tmp = queue_max_hw_sectors((((mdev->ldev)->backing_bdev)->bd_disk)->queue);
< #line 2295
<     max_bio_size = tmp << 9;
< #line 2296
<     _min1 = max_bio_size;
< #line 2296
<     _min2 = 131072U;
< #line 2296
<     max_bio_size = _min1 < _min2 ? _min1 : _min2;
< #line 2297
<     put_ldev(mdev);
<   } else {
< #line 2299
<     d_size = 0UL;
< #line 2300
<     u_size = 0UL;
< #line 2301
<     q_order_type = 0;
< #line 2302
<     max_bio_size = 131072U;
<   }
< #line 2306
<   if (mdev->agreed_pro_version <= 94) {
< #line 2307
<     _min1___0 = max_bio_size;
< #line 2307
<     _min2___0 = 32768U;
< #line 2307
<     max_bio_size = _min1___0 < _min2___0 ? _min1___0 : _min2___0;
<   } else {
< 
<   }
< #line 2309
<   tmp___1 = __fswab64((__u64 )d_size);
< #line 2309
<   p.d_size = tmp___1;
< #line 2310
<   tmp___2 = __fswab64((__u64 )u_size);
< #line 2310
<   p.u_size = tmp___2;
< #line 2311
<   if (trigger_reply == 0) {
< #line 2311
<     tmp___3 = drbd_get_capacity(mdev->this_bdev);
< #line 2311
<     tmp___4 = (__u64 )tmp___3;
<   } else {
< #line 2311
<     tmp___4 = 0ULL;
<   }
< #line 2311
<   tmp___5 = __fswab64(tmp___4);
< #line 2311
<   p.c_size = tmp___5;
< #line 2312
<   tmp___6 = __fswab32(max_bio_size);
< #line 2312
<   p.max_bio_size = tmp___6;
< #line 2313
<   tmp___7 = __fswab16((int )((__u16 )q_order_type));
< #line 2313
<   p.queue_order_type = tmp___7;
< #line 2314
<   tmp___8 = __fswab16((int )((__u16 )flags));
< #line 2314
<   p.dds_flags = tmp___8;
< #line 2316
<   ok = drbd_send_cmd(mdev, 1, P_SIZES, (struct p_header80 *)(& p), 40UL);
< #line 2318
<   return (ok);
< }
< }
< #line 2325 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< int drbd_send_current_state(struct drbd_conf *mdev ) 
< { 
<   struct socket *sock ;
<   struct p_state p ;
<   int ok ;
<   __u32 tmp ;
<   long tmp___0 ;
< 
<   {
< #line 2329
<   ok = 0;
< #line 2333
<   drbd_state_lock___0(mdev);
< #line 2335
<   ldv_mutex_lock_215(& mdev->data.mutex);
< #line 2337
<   tmp = __fswab32(mdev->state.i);
< #line 2337
<   p.state = tmp;
< #line 2338
<   sock = mdev->data.socket;
< #line 2340
<   tmp___0 = __builtin_expect((unsigned long )sock != (unsigned long )((struct socket *)0),
<                              1L);
< #line 2340
<   if (tmp___0 != 0L) {
< #line 2341
<     ok = _drbd_send_cmd(mdev, sock, P_STATE, (struct p_header80 *)(& p), 12UL, 0U);
<   } else {
< 
<   }
< #line 2345
<   ldv_mutex_unlock_216(& mdev->data.mutex);
< #line 2347
<   drbd_state_unlock(mdev);
< #line 2348
<   return (ok);
< }
< }
< #line 2361 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< int drbd_send_state(struct drbd_conf *mdev , union drbd_state state ) 
< { 
<   struct socket *sock ;
<   struct p_state p ;
<   int ok ;
<   __u32 tmp ;
<   long tmp___0 ;
< 
<   {
< #line 2365
<   ok = 0;
< #line 2367
<   ldv_mutex_lock_217(& mdev->data.mutex);
< #line 2369
<   tmp = __fswab32(state.i);
< #line 2369
<   p.state = tmp;
< #line 2370
<   sock = mdev->data.socket;
< #line 2372
<   tmp___0 = __builtin_expect((unsigned long )sock != (unsigned long )((struct socket *)0),
<                              1L);
< #line 2372
<   if (tmp___0 != 0L) {
< #line 2373
<     ok = _drbd_send_cmd(mdev, sock, P_STATE, (struct p_header80 *)(& p), 12UL, 0U);
<   } else {
< 
<   }
< #line 2377
<   ldv_mutex_unlock_218(& mdev->data.mutex);
< #line 2379
<   return (ok);
< }
< }
< #line 2382 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< int drbd_send_state_req(struct drbd_conf *mdev , union drbd_state mask , union drbd_state val ) 
< { 
<   struct p_req_state p ;
<   __u32 tmp ;
<   __u32 tmp___0 ;
<   int tmp___1 ;
< 
<   {
< #line 2387
<   tmp = __fswab32(mask.i);
< #line 2387
<   p.mask = tmp;
< #line 2388
<   tmp___0 = __fswab32(val.i);
< #line 2388
<   p.val = tmp___0;
< #line 2390
<   tmp___1 = drbd_send_cmd(mdev, 1, P_STATE_CHG_REQ, (struct p_header80 *)(& p), 16UL);
< #line 2390
<   return (tmp___1);
< }
< }
< #line 2394 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< int drbd_send_sr_reply(struct drbd_conf *mdev , enum drbd_state_rv retcode ) 
< { 
<   struct p_req_state_reply p ;
<   __u32 tmp ;
<   int tmp___0 ;
< 
<   {
< #line 2398
<   tmp = __fswab32((__u32 )retcode);
< #line 2398
<   p.retcode = tmp;
< #line 2400
<   tmp___0 = drbd_send_cmd(mdev, 0, P_STATE_CHG_REPLY, (struct p_header80 *)(& p),
<                           12UL);
< #line 2400
<   return (tmp___0);
< }
< }
< #line 2404 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< int fill_bitmap_rle_bits(struct drbd_conf *mdev , struct p_compressed_bm *p , struct bm_xfer_ctx *c ) 
< { 
<   struct bitstream bs ;
<   unsigned long plain_bits ;
<   unsigned long tmp ;
<   unsigned long rl ;
<   unsigned int len ;
<   unsigned int toggle ;
<   int bits ;
<   unsigned long tmp___0 ;
<   unsigned long tmp___1 ;
< 
<   {
< #line 2417
<   if ((unsigned int )*((unsigned char *)mdev + 200UL) == 0U || mdev->agreed_pro_version <= 89) {
< #line 2419
<     return (0);
<   } else {
< 
<   }
< #line 2421
<   if (c->bit_offset >= c->bm_bits) {
< #line 2422
<     return (0);
<   } else {
< 
<   }
< #line 2425
<   bitstream_init(& bs, (void *)(& p->code), 4087UL, 0U);
< #line 2426
<   memset((void *)(& p->code), 0, 4087UL);
< #line 2428
<   plain_bits = 0UL;
< #line 2433
<   toggle = 2U;
<   ldv_52492: ;
< #line 2438
<   if (toggle == 0U) {
< #line 2438
<     tmp___0 = _drbd_bm_find_next_zero(mdev, c->bit_offset);
< #line 2438
<     tmp = tmp___0;
<   } else {
< #line 2438
<     tmp___1 = _drbd_bm_find_next(mdev, c->bit_offset);
< #line 2438
<     tmp = tmp___1;
<   }
< #line 2440
<   if (tmp == 0xffffffffffffffffUL) {
< #line 2441
<     tmp = c->bm_bits;
<   } else {
< 
<   }
< #line 2442
<   rl = tmp - c->bit_offset;
< #line 2444
<   if (toggle == 2U) {
< #line 2445
<     if (rl == 0UL) {
< #line 2448
<       DCBP_set_start(p, 1);
< #line 2450
<       toggle = toggle == 0U;
< #line 2451
<       goto ldv_52490;
<     } else {
< 
<     }
< #line 2453
<     DCBP_set_start(p, 0);
<   } else {
< 
<   }
< #line 2458
<   if (rl == 0UL) {
< #line 2459
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "unexpected zero runlength while encoding bitmap t:%u bo:%lu\n",
<             toggle, c->bit_offset);
< #line 2461
<     return (-1);
<   } else {
< 
<   }
< #line 2464
<   bits = vli_encode_bits(& bs, (u64 )rl);
< #line 2465
<   if (bits == -105) {
< #line 2466
<     goto ldv_52491;
<   } else {
< 
<   }
< #line 2467
<   if (bits <= 0) {
< #line 2468
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "error while encoding bitmap: %d\n",
<             bits);
< #line 2469
<     return (0);
<   } else {
< 
<   }
< #line 2472
<   toggle = toggle == 0U;
< #line 2473
<   plain_bits = plain_bits + rl;
< #line 2474
<   c->bit_offset = tmp;
<   ldv_52490: ;
< #line 2475
<   if (c->bit_offset < c->bm_bits) {
< #line 2476
<     goto ldv_52492;
<   } else {
< 
<   }
<   ldv_52491: 
< #line 2477
<   len = ((unsigned int )((long )bs.cur.b) - (unsigned int )((long )(& p->code))) + (unsigned int )(bs.cur.bit != 0U);
< #line 2479
<   if ((unsigned long )(len << 3) > plain_bits) {
< #line 2482
<     c->bit_offset = c->bit_offset - plain_bits;
< #line 2483
<     bm_xfer_ctx_bit_to_word_offset(c);
< #line 2484
<     c->bit_offset = c->word_offset * 64UL;
< #line 2485
<     return (0);
<   } else {
< 
<   }
< #line 2490
<   bm_xfer_ctx_bit_to_word_offset(c);
< #line 2493
<   DCBP_set_pad_bits(p, (int )(- bs.cur.bit) & 7);
< #line 2495
<   return ((int )len);
< }
< }
< #line 2505 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static int send_bitmap_rle_or_plain(struct drbd_conf *mdev , struct p_header80 *h ,
<                                     struct bm_xfer_ctx *c ) 
< { 
<   struct p_compressed_bm *p ;
<   unsigned long num_words ;
<   int len ;
<   int ok ;
<   size_t __min1 ;
<   size_t __min2 ;
< 
<   {
< #line 2508
<   p = (struct p_compressed_bm *)h;
< #line 2513
<   len = fill_bitmap_rle_bits(mdev, p, c);
< #line 2515
<   if (len < 0) {
< #line 2516
<     return (-5);
<   } else {
< 
<   }
< #line 2518
<   if (len != 0) {
< #line 2519
<     DCBP_set_code(p, RLE_VLI_Bits);
< #line 2520
<     ok = _drbd_send_cmd(mdev, mdev->data.socket, P_COMPRESSED_BITMAP, h, (unsigned long )len + 9UL,
<                         0U);
< #line 2523
<     c->packets[0] = c->packets[0] + 1U;
< #line 2524
<     c->bytes[0] = (c->bytes[0] + (unsigned int )len) + 9U;
< #line 2526
<     if (c->bit_offset >= c->bm_bits) {
< #line 2527
<       len = 0;
<     } else {
< 
<     }
<   } else {
< #line 2531
<     __min1 = 511UL;
< #line 2531
<     __min2 = c->bm_words - c->word_offset;
< #line 2531
<     num_words = __min1 < __min2 ? __min1 : __min2;
< #line 2532
<     len = (int )((unsigned int )num_words * 8U);
< #line 2533
<     if (len != 0) {
< #line 2534
<       drbd_bm_get_lel(mdev, c->word_offset, num_words, (unsigned long *)(& h->payload));
<     } else {
< 
<     }
< #line 2535
<     ok = _drbd_send_cmd(mdev, mdev->data.socket, P_BITMAP, h, (unsigned long )len + 8UL,
<                         0U);
< #line 2537
<     c->word_offset = c->word_offset + num_words;
< #line 2538
<     c->bit_offset = c->word_offset * 64UL;
< #line 2540
<     c->packets[1] = c->packets[1] + 1U;
< #line 2541
<     c->bytes[1] = (c->bytes[1] + (unsigned int )len) + 8U;
< #line 2543
<     if (c->bit_offset > c->bm_bits) {
< #line 2544
<       c->bit_offset = c->bm_bits;
<     } else {
< 
<     }
<   }
< #line 2546
<   if (ok != 0) {
< #line 2547
<     if (len == 0) {
< #line 2548
<       INFO_bm_xfer_stats(mdev, "send", c);
< #line 2549
<       return (0);
<     } else {
< #line 2551
<       return (1);
<     }
<   } else {
< 
<   }
< #line 2553
<   return (-5);
< }
< }
< #line 2557 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< int _drbd_send_bitmap(struct drbd_conf *mdev ) 
< { 
<   struct bm_xfer_ctx c ;
<   struct p_header80 *p ;
<   int err ;
<   int _b ;
<   unsigned long tmp ;
<   int tmp___0 ;
<   int tmp___1 ;
<   int tmp___2 ;
<   struct bm_xfer_ctx __constr_expr_0 ;
<   unsigned long tmp___3 ;
<   size_t tmp___4 ;
< 
<   {
< #line 2563
<   _b = (unsigned long )mdev->bitmap == (unsigned long )((struct drbd_bitmap *)0);
< #line 2563
<   if (_b != 0) {
< #line 2563
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "_drbd_send_bitmap", (char *)"!mdev->bitmap", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             2563);
<   } else {
< 
<   }
< #line 2563
<   if (_b != 0) {
< #line 2563
<     return (0);
<   } else {
< 
<   }
< #line 2567
<   tmp = __get_free_pages(16U, 0U);
< #line 2567
<   p = (struct p_header80 *)tmp;
< #line 2568
<   if ((unsigned long )p == (unsigned long )((struct p_header80 *)0)) {
< #line 2569
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "failed to allocate one page buffer in %s\n",
<             "_drbd_send_bitmap");
< #line 2570
<     return (0);
<   } else {
< 
<   }
< #line 2573
<   tmp___2 = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 2573
<   if (tmp___2 != 0) {
< #line 2574
<     tmp___1 = drbd_md_test_flag(mdev->ldev, 8);
< #line 2574
<     if (tmp___1 != 0) {
< #line 2575
<       _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Writing the whole bitmap, MDF_FullSync was set.\n");
< #line 2576
<       drbd_bm_set_all(mdev);
< #line 2577
<       tmp___0 = drbd_bm_write(mdev);
< #line 2577
<       if (tmp___0 != 0) {
< #line 2581
<         dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Failed to write bitmap to disk!\n");
<       } else {
< #line 2583
<         drbd_md_clear_flag(mdev, 8);
< #line 2584
<         drbd_md_sync(mdev);
<       }
<     } else {
< 
<     }
< #line 2587
<     put_ldev(mdev);
<   } else {
< 
<   }
< #line 2590
<   tmp___3 = drbd_bm_bits(mdev);
< #line 2590
<   tmp___4 = drbd_bm_words(mdev);
< #line 2590
<   __constr_expr_0.bm_bits = tmp___3;
< #line 2590
<   __constr_expr_0.bm_words = tmp___4;
< #line 2590
<   __constr_expr_0.bit_offset = 0UL;
< #line 2590
<   __constr_expr_0.word_offset = 0UL;
< #line 2590
<   __constr_expr_0.packets[0] = 0U;
< #line 2590
<   __constr_expr_0.packets[1] = 0U;
< #line 2590
<   __constr_expr_0.bytes[0] = 0U;
< #line 2590
<   __constr_expr_0.bytes[1] = 0U;
< #line 2590
<   c = __constr_expr_0;
<   ldv_52515: 
< #line 2596
<   err = send_bitmap_rle_or_plain(mdev, p, & c);
< #line 2597
<   if (err > 0) {
< #line 2598
<     goto ldv_52515;
<   } else {
< 
<   }
< #line 2599
<   free_pages((unsigned long )p, 0U);
< #line 2600
<   return (err == 0);
< }
< }
< #line 2603 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< int drbd_send_bitmap(struct drbd_conf *mdev ) 
< { 
<   int err ;
<   int tmp ;
<   int tmp___0 ;
< 
<   {
< #line 2607
<   tmp = drbd_get_data_sock___0(mdev);
< #line 2607
<   if (tmp == 0) {
< #line 2608
<     return (-1);
<   } else {
< 
<   }
< #line 2609
<   tmp___0 = _drbd_send_bitmap(mdev);
< #line 2609
<   err = tmp___0 == 0;
< #line 2610
<   drbd_put_data_sock___0(mdev);
< #line 2611
<   return (err);
< }
< }
< #line 2614 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< int drbd_send_b_ack(struct drbd_conf *mdev , u32 barrier_nr , u32 set_size ) 
< { 
<   int ok ;
<   struct p_barrier_ack p ;
<   __u32 tmp ;
< 
<   {
< #line 2619
<   p.barrier = barrier_nr;
< #line 2620
<   tmp = __fswab32(set_size);
< #line 2620
<   p.set_size = tmp;
< #line 2622
<   if ((int )mdev->state.ldv_39979.conn <= 9) {
< #line 2623
<     return (0);
<   } else {
< 
<   }
< #line 2624
<   ok = drbd_send_cmd(mdev, 0, P_BARRIER_ACK, (struct p_header80 *)(& p), 16UL);
< #line 2626
<   return (ok);
< }
< }
< #line 2637 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static int _drbd_send_ack(struct drbd_conf *mdev , enum drbd_packets cmd , u64 sector ,
<                           u32 blksize , u64 block_id ) 
< { 
<   int ok ;
<   struct p_block_ack p ;
<   int tmp ;
<   __u32 tmp___0 ;
< 
<   {
< #line 2645
<   p.sector = sector;
< #line 2646
<   p.block_id = block_id;
< #line 2647
<   p.blksize = blksize;
< #line 2648
<   tmp = atomic_add_return(1, & mdev->packet_seq);
< #line 2648
<   tmp___0 = __fswab32((__u32 )tmp);
< #line 2648
<   p.seq_num = tmp___0;
< #line 2650
<   if ((unsigned long )mdev->meta.socket == (unsigned long )((struct socket *)0) || (int )mdev->state.ldv_39979.conn <= 9) {
< #line 2651
<     return (0);
<   } else {
< 
<   }
< #line 2652
<   ok = drbd_send_cmd(mdev, 0, cmd, (struct p_header80 *)(& p), 32UL);
< #line 2654
<   return (ok);
< }
< }
< #line 2660 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< int drbd_send_ack_dp(struct drbd_conf *mdev , enum drbd_packets cmd , struct p_data *dp ,
<                      int data_size ) 
< { 
<   unsigned int tmp ;
<   unsigned int tmp___0 ;
<   __u32 tmp___1 ;
<   int tmp___2 ;
< 
<   {
< #line 2663
<   if (mdev->agreed_pro_version > 86 && (unsigned long )mdev->integrity_r_tfm != (unsigned long )((struct crypto_hash *)0)) {
< #line 2663
<     tmp = crypto_hash_digestsize(mdev->integrity_r_tfm);
< #line 2663
<     tmp___0 = tmp;
<   } else {
< #line 2663
<     tmp___0 = 0U;
<   }
< #line 2663
<   data_size = (int )((unsigned int )data_size - tmp___0);
< #line 2665
<   tmp___1 = __fswab32((__u32 )data_size);
< #line 2665
<   tmp___2 = _drbd_send_ack(mdev, cmd, dp->sector, tmp___1, dp->block_id);
< #line 2665
<   return (tmp___2);
< }
< }
< #line 2669 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< int drbd_send_ack_rp(struct drbd_conf *mdev , enum drbd_packets cmd , struct p_block_req *rp ) 
< { 
<   int tmp ;
< 
<   {
< #line 2672
<   tmp = _drbd_send_ack(mdev, cmd, rp->sector, rp->blksize, rp->block_id);
< #line 2672
<   return (tmp);
< }
< }
< #line 2681 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< int drbd_send_ack(struct drbd_conf *mdev , enum drbd_packets cmd , struct drbd_epoch_entry *e ) 
< { 
<   __u32 tmp ;
<   __u64 tmp___0 ;
<   int tmp___1 ;
< 
<   {
< #line 2684
<   tmp = __fswab32(e->size);
< #line 2684
<   tmp___0 = __fswab64((__u64 )e->sector);
< #line 2684
<   tmp___1 = _drbd_send_ack(mdev, cmd, tmp___0, tmp, e->ldv_49189.block_id);
< #line 2684
<   return (tmp___1);
< }
< }
< #line 2692 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< int drbd_send_ack_ex(struct drbd_conf *mdev , enum drbd_packets cmd , sector_t sector ,
<                      int blksize , u64 block_id ) 
< { 
<   __u64 tmp ;
<   __u32 tmp___0 ;
<   __u64 tmp___1 ;
<   int tmp___2 ;
< 
<   {
< #line 2695
<   tmp = __fswab64(block_id);
< #line 2695
<   tmp___0 = __fswab32((__u32 )blksize);
< #line 2695
<   tmp___1 = __fswab64((__u64 )sector);
< #line 2695
<   tmp___2 = _drbd_send_ack(mdev, cmd, tmp___1, tmp___0, tmp);
< #line 2695
<   return (tmp___2);
< }
< }
< #line 2701 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< int drbd_send_drequest(struct drbd_conf *mdev , int cmd , sector_t sector , int size ,
<                        u64 block_id ) 
< { 
<   int ok ;
<   struct p_block_req p ;
<   __u64 tmp ;
<   __u32 tmp___0 ;
< 
<   {
< #line 2707
<   tmp = __fswab64((__u64 )sector);
< #line 2707
<   p.sector = tmp;
< #line 2708
<   p.block_id = block_id;
< #line 2709
<   tmp___0 = __fswab32((__u32 )size);
< #line 2709
<   p.blksize = tmp___0;
< #line 2711
<   ok = drbd_send_cmd(mdev, 1, (enum drbd_packets )cmd, (struct p_header80 *)(& p),
<                      32UL);
< #line 2713
<   return (ok);
< }
< }
< #line 2716 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< int drbd_send_drequest_csum(struct drbd_conf *mdev , sector_t sector , int size ,
<                             void *digest , int digest_size , enum drbd_packets cmd ) 
< { 
<   int ok ;
<   struct p_block_req p ;
<   __u64 tmp ;
<   __u32 tmp___0 ;
<   __u16 tmp___1 ;
<   __u16 tmp___2 ;
<   int tmp___3 ;
<   int tmp___4 ;
<   int tmp___5 ;
< 
<   {
< #line 2724
<   tmp = __fswab64((__u64 )sector);
< #line 2724
<   p.sector = tmp;
< #line 2725
<   p.block_id = 1728263026ULL;
< #line 2726
<   tmp___0 = __fswab32((__u32 )size);
< #line 2726
<   p.blksize = tmp___0;
< #line 2728
<   p.head.magic = 1728214147U;
< #line 2729
<   tmp___1 = __fswab16((int )((__u16 )cmd));
< #line 2729
<   p.head.command = tmp___1;
< #line 2730
<   tmp___2 = __fswab16((int )((unsigned int )((__u16 )digest_size) + 24U));
< #line 2730
<   p.head.length = tmp___2;
< #line 2732
<   ldv_mutex_lock_219(& mdev->data.mutex);
< #line 2734
<   tmp___3 = drbd_send(mdev, mdev->data.socket, (void *)(& p), 32UL, 0U);
< #line 2734
<   ok = tmp___3 == 32;
< #line 2735
<   if (ok != 0) {
< #line 2735
<     tmp___4 = drbd_send(mdev, mdev->data.socket, digest, (size_t )digest_size, 0U);
< #line 2735
<     if (tmp___4 == digest_size) {
< #line 2735
<       tmp___5 = 1;
<     } else {
< #line 2735
<       tmp___5 = 0;
<     }
<   } else {
< #line 2735
<     tmp___5 = 0;
<   }
< #line 2735
<   ok = tmp___5;
< #line 2737
<   ldv_mutex_unlock_220(& mdev->data.mutex);
< #line 2739
<   return (ok);
< }
< }
< #line 2742 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< int drbd_send_ov_request(struct drbd_conf *mdev , sector_t sector , int size ) 
< { 
<   int ok ;
<   struct p_block_req p ;
<   __u64 tmp ;
<   __u32 tmp___0 ;
< 
<   {
< #line 2747
<   tmp = __fswab64((__u64 )sector);
< #line 2747
<   p.sector = tmp;
< #line 2748
<   p.block_id = 1728261953ULL;
< #line 2749
<   tmp___0 = __fswab32((__u32 )size);
< #line 2749
<   p.blksize = tmp___0;
< #line 2751
<   ok = drbd_send_cmd(mdev, 1, P_OV_REQUEST, (struct p_header80 *)(& p), 32UL);
< #line 2753
<   return (ok);
< }
< }
< #line 2760 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static int we_should_drop_the_connection(struct drbd_conf *mdev , struct socket *sock ) 
< { 
<   int drop_it ;
<   enum drbd_thread_state tmp ;
<   int tmp___0 ;
<   struct task_struct *tmp___1 ;
<   struct task_struct *tmp___2 ;
< 
<   {
< #line 2765
<   if ((unsigned long )mdev->meta.socket == (unsigned long )sock || (unsigned long )mdev->asender.task == (unsigned long )((struct task_struct *)0)) {
< #line 2765
<     tmp___0 = 1;
<   } else {
< #line 2765
<     tmp = get_t_state(& mdev->asender);
< #line 2765
<     if ((unsigned int )tmp != 1U) {
< #line 2765
<       tmp___0 = 1;
<     } else
< #line 2765
<     if ((int )mdev->state.ldv_39979.conn <= 9) {
< #line 2765
<       tmp___0 = 1;
<     } else {
< #line 2765
<       tmp___0 = 0;
<     }
<   }
< #line 2765
<   drop_it = tmp___0;
< #line 2770
<   if (drop_it != 0) {
< #line 2771
<     return (1);
<   } else {
< 
<   }
< #line 2773
<   mdev->ko_count = mdev->ko_count - 1U;
< #line 2773
<   drop_it = mdev->ko_count == 0U;
< #line 2774
<   if (drop_it == 0) {
< #line 2775
<     tmp___1 = get_current();
< #line 2775
<     tmp___2 = get_current();
< #line 2775
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "[%s/%d] sock_sendmsg time expired, ko = %u\n",
<             (char *)(& tmp___2->comm), tmp___1->pid, mdev->ko_count);
< #line 2777
<     request_ping(mdev);
<   } else {
< 
<   }
< #line 2780
<   return (drop_it);
< }
< }
< #line 2804 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static int _drbd_no_send_page(struct drbd_conf *mdev , struct page *page , int offset ,
<                               size_t size , unsigned int msg_flags ) 
< { 
<   int sent ;
<   void *tmp ;
<   int tmp___0 ;
< 
<   {
< #line 2807
<   tmp = kmap(page);
< #line 2807
<   tmp___0 = drbd_send(mdev, mdev->data.socket, tmp + (unsigned long )offset, size,
<                       msg_flags);
< #line 2807
<   sent = tmp___0;
< #line 2808
<   kunmap(page);
< #line 2809
<   if ((size_t )sent == size) {
< #line 2810
<     mdev->send_cnt = mdev->send_cnt + (unsigned int )(size >> 9);
<   } else {
< 
<   }
< #line 2811
<   return ((size_t )sent == size);
< }
< }
< #line 2814 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static int _drbd_send_page(struct drbd_conf *mdev , struct page *page , int offset ,
<                            size_t size , unsigned int msg_flags ) 
< { 
<   mm_segment_t oldfs ;
<   struct thread_info *tmp ;
<   int sent ;
<   int ok ;
<   int len ;
<   int tmp___0 ;
<   int tmp___1 ;
<   int tmp___2 ;
<   struct thread_info *tmp___3 ;
<   mm_segment_t __constr_expr_0 ;
<   ssize_t tmp___4 ;
<   int tmp___5 ;
<   struct thread_info *tmp___6 ;
<   long tmp___7 ;
< 
<   {
< #line 2817
<   tmp = current_thread_info___2();
< #line 2817
<   oldfs = tmp->addr_limit;
< #line 2819
<   len = (int )size;
< #line 2827
<   if ((int )disable_sendpage) {
< #line 2828
<     tmp___0 = _drbd_no_send_page(mdev, page, offset, size, msg_flags);
< #line 2828
<     return (tmp___0);
<   } else {
< #line 2827
<     tmp___1 = page_count(page);
< #line 2827
<     if (tmp___1 <= 0) {
< #line 2828
<       tmp___0 = _drbd_no_send_page(mdev, page, offset, size, msg_flags);
< #line 2828
<       return (tmp___0);
<     } else {
< #line 2827
<       tmp___2 = PageSlab((struct page  const  *)page);
< #line 2827
<       if (tmp___2 != 0) {
< #line 2828
<         tmp___0 = _drbd_no_send_page(mdev, page, offset, size, msg_flags);
< #line 2828
<         return (tmp___0);
<       } else {
< 
<       }
<     }
<   }
< #line 2830
<   msg_flags = msg_flags | 16384U;
< #line 2831
<   drbd_update_congested(mdev);
< #line 2832
<   tmp___3 = current_thread_info___2();
< #line 2832
<   __constr_expr_0.seg = 0xffffffffffffffffUL;
< #line 2832
<   tmp___3->addr_limit = __constr_expr_0;
<   ldv_52614: 
< #line 2834
<   tmp___4 = (*(((mdev->data.socket)->ops)->sendpage))(mdev->data.socket, page, offset,
<                                                       (size_t )len, (int )msg_flags);
< #line 2834
<   sent = (int )tmp___4;
< #line 2837
<   if (sent == -11) {
< #line 2838
<     tmp___5 = we_should_drop_the_connection(mdev, mdev->data.socket);
< #line 2838
<     if (tmp___5 != 0) {
< #line 2840
<       goto ldv_52611;
<     } else {
< #line 2842
<       goto ldv_52612;
<     }
<   } else {
< 
<   }
< #line 2844
<   if (sent <= 0) {
< #line 2845
<     dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "%s: size=%d len=%d sent=%d\n",
<              "_drbd_send_page", (int )size, len, sent);
< #line 2847
<     goto ldv_52611;
<   } else {
< 
<   }
< #line 2849
<   len = len - sent;
< #line 2850
<   offset = offset + sent;
<   ldv_52612: ;
< #line 2851
<   if (len > 0) {
< #line 2852
<     goto ldv_52614;
<   } else {
< 
<   }
<   ldv_52611: 
< #line 2852
<   tmp___6 = current_thread_info___2();
< #line 2852
<   tmp___6->addr_limit = oldfs;
< #line 2853
<   drbd_clear_flag(mdev, NET_CONGESTED);
< #line 2855
<   ok = len == 0;
< #line 2856
<   tmp___7 = __builtin_expect(ok != 0, 1L);
< #line 2856
<   if (tmp___7 != 0L) {
< #line 2857
<     mdev->send_cnt = mdev->send_cnt + (unsigned int )(size >> 9);
<   } else {
< 
<   }
< #line 2858
<   return (ok);
< }
< }
< #line 2861 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static int _drbd_send_bio(struct drbd_conf *mdev , struct bio *bio ) 
< { 
<   struct bio_vec *bvec ;
<   int i ;
<   int tmp ;
< 
<   {
< #line 2866
<   bvec = bio->bi_io_vec + (unsigned long )bio->bi_idx;
< #line 2866
<   i = (int )bio->bi_idx;
< #line 2866
<   goto ldv_52622;
<   ldv_52621: 
< #line 2867
<   tmp = _drbd_no_send_page(mdev, bvec->bv_page, (int )bvec->bv_offset, (size_t )bvec->bv_len,
<                            (int )bio->bi_vcnt + -1 == i ? 0U : 32768U);
< #line 2867
<   if (tmp == 0) {
< #line 2870
<     return (0);
<   } else {
< 
<   }
< #line 2866
<   bvec = bvec + 1;
< #line 2866
<   i = i + 1;
<   ldv_52622: ;
< #line 2866
<   if ((int )bio->bi_vcnt > i) {
< #line 2867
<     goto ldv_52621;
<   } else {
< 
<   }
< 
< #line 2872
<   return (1);
< }
< }
< #line 2875 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static int _drbd_send_zc_bio(struct drbd_conf *mdev , struct bio *bio ) 
< { 
<   struct bio_vec *bvec ;
<   int i ;
<   int tmp ;
< 
<   {
< #line 2880
<   bvec = bio->bi_io_vec + (unsigned long )bio->bi_idx;
< #line 2880
<   i = (int )bio->bi_idx;
< #line 2880
<   goto ldv_52631;
<   ldv_52630: 
< #line 2881
<   tmp = _drbd_send_page(mdev, bvec->bv_page, (int )bvec->bv_offset, (size_t )bvec->bv_len,
<                         (int )bio->bi_vcnt + -1 == i ? 0U : 32768U);
< #line 2881
<   if (tmp == 0) {
< #line 2884
<     return (0);
<   } else {
< 
<   }
< #line 2880
<   bvec = bvec + 1;
< #line 2880
<   i = i + 1;
<   ldv_52631: ;
< #line 2880
<   if ((int )bio->bi_vcnt > i) {
< #line 2881
<     goto ldv_52630;
<   } else {
< 
<   }
< 
< #line 2886
<   return (1);
< }
< }
< #line 2889 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static int _drbd_send_zc_ee(struct drbd_conf *mdev , struct drbd_epoch_entry *e ) 
< { 
<   struct page *page ;
<   unsigned int len ;
<   unsigned int l ;
<   unsigned int __min1 ;
<   unsigned int __min2 ;
<   struct page *tmp ;
<   int tmp___0 ;
<   struct page *tmp___1 ;
< 
<   {
< #line 2891
<   page = e->pages;
< #line 2892
<   len = e->size;
< #line 2894
<   goto ldv_52645;
<   ldv_52644: 
< #line 2895
<   __min1 = len;
< #line 2895
<   __min2 = 4096U;
< #line 2895
<   l = __min1 < __min2 ? __min1 : __min2;
< #line 2896
<   tmp = page_chain_next(page);
< #line 2896
<   tmp___0 = _drbd_send_page(mdev, page, 0, (size_t )l, (unsigned long )tmp != (unsigned long )((struct page *)0) ? 32768U : 0U);
< #line 2896
<   if (tmp___0 == 0) {
< #line 2898
<     return (0);
<   } else {
< 
<   }
< #line 2899
<   len = len - l;
< #line 2894
<   page = page_chain_next(page);
<   ldv_52645: ;
< #line 2894
<   if ((unsigned long )page != (unsigned long )((struct page *)0)) {
< #line 2894
<     tmp___1 = page_chain_next(page);
< #line 2894
<     __builtin_prefetch((void const   *)tmp___1);
< #line 2894
<     if (1 != 0) {
< #line 2895
<       goto ldv_52644;
<     } else {
< #line 2897
<       goto ldv_52646;
<     }
<   } else {
< 
<   }
<   ldv_52646: ;
< #line 2901
<   return (1);
< }
< }
< #line 2904 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static u32 bio_flags_to_wire(struct drbd_conf *mdev , unsigned long bi_rw ) 
< { 
< 
< 
<   {
< #line 2906
<   if (mdev->agreed_pro_version > 94) {
< #line 2907
<     return ((u32 )(((((bi_rw & 16UL) != 0UL ? 2 : 0) | ((bi_rw & 2048UL) != 0UL ? 16 : 0)) | ((bi_rw & 4096UL) != 0UL ? 32 : 0)) | ((bi_rw & 128UL) != 0UL ? 64 : 0)));
<   } else {
< #line 2912
<     return ((bi_rw & 16UL) != 0UL ? 2U : 0U);
<   }
< }
< }
< #line 2918 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< int drbd_send_dblock(struct drbd_conf *mdev , struct drbd_request *req ) 
< { 
<   int ok ;
<   struct p_data p ;
<   unsigned int dp_flags ;
<   void *dgb ;
<   int dgs ;
<   int tmp ;
<   unsigned int tmp___0 ;
<   __u16 tmp___1 ;
<   __u32 tmp___2 ;
<   __u64 tmp___3 ;
<   int tmp___4 ;
<   __u32 tmp___5 ;
<   __u32 tmp___6 ;
<   int tmp___7 ;
<   int tmp___8 ;
<   unsigned char digest[64U] ;
<   int tmp___9 ;
< 
<   {
< #line 2920
<   ok = 1;
< #line 2922
<   dp_flags = 0U;
< #line 2926
<   tmp = drbd_get_data_sock___0(mdev);
< #line 2926
<   if (tmp == 0) {
< #line 2927
<     return (0);
<   } else {
< 
<   }
< #line 2929
<   if (mdev->agreed_pro_version > 86 && (unsigned long )mdev->integrity_w_tfm != (unsigned long )((struct crypto_hash *)0)) {
< #line 2929
<     tmp___0 = crypto_hash_digestsize(mdev->integrity_w_tfm);
< #line 2929
<     dgs = (int )tmp___0;
<   } else {
< #line 2929
<     dgs = 0;
<   }
< #line 2932
<   if (req->size <= 32768U) {
< #line 2933
<     p.head.h80.magic = 1728214147U;
< #line 2934
<     p.head.h80.command = 0U;
< #line 2935
<     tmp___1 = __fswab16((int )((unsigned int )((int )((__u16 )dgs) + (int )((__u16 )req->size)) + 24U));
< #line 2935
<     p.head.h80.length = tmp___1;
<   } else {
< #line 2938
<     p.head.h95.magic = 23171U;
< #line 2939
<     p.head.h95.command = 0U;
< #line 2940
<     tmp___2 = __fswab32((req->size + (__u32 )dgs) + 24U);
< #line 2940
<     p.head.h95.length = tmp___2;
<   }
< #line 2944
<   tmp___3 = __fswab64((__u64 )req->sector);
< #line 2944
<   p.sector = tmp___3;
< #line 2945
<   p.block_id = (u64 )req;
< #line 2946
<   tmp___4 = atomic_add_return(1, & mdev->packet_seq);
< #line 2946
<   tmp___5 = __fswab32((__u32 )tmp___4);
< #line 2946
<   p.seq_num = tmp___5;
< #line 2948
<   dp_flags = bio_flags_to_wire(mdev, (req->master_bio)->bi_rw);
< #line 2950
<   if ((int )mdev->state.ldv_39979.conn > 15 && (int )mdev->state.ldv_39979.conn <= 21) {
< #line 2952
<     dp_flags = dp_flags | 4U;
<   } else {
< 
<   }
< #line 2954
<   tmp___6 = __fswab32(dp_flags);
< #line 2954
<   p.dp_flags = tmp___6;
< #line 2955
<   drbd_set_flag(mdev, UNPLUG_REMOTE);
< #line 2956
<   tmp___7 = drbd_send(mdev, mdev->data.socket, (void *)(& p), 32UL, dgs != 0 ? 32768U : 0U);
< #line 2956
<   ok = tmp___7 == 32;
< #line 2958
<   if (ok != 0 && dgs != 0) {
< #line 2959
<     dgb = mdev->int_dig_out;
< #line 2960
<     drbd_csum_bio(mdev, mdev->integrity_w_tfm, req->master_bio, dgb);
< #line 2961
<     tmp___8 = drbd_send(mdev, mdev->data.socket, dgb, (size_t )dgs, 0U);
< #line 2961
<     ok = tmp___8 == dgs;
<   } else {
< 
<   }
< #line 2963
<   if (ok != 0) {
< #line 2975
<     if ((mdev->net_conf)->wire_protocol == 1 || dgs != 0) {
< #line 2976
<       ok = _drbd_send_bio(mdev, req->master_bio);
<     } else {
< #line 2978
<       ok = _drbd_send_zc_bio(mdev, req->master_bio);
<     }
< #line 2981
<     if (dgs > 0 && dgs <= 64) {
< #line 2985
<       drbd_csum_bio(mdev, mdev->integrity_w_tfm, req->master_bio, (void *)(& digest));
< #line 2986
<       tmp___9 = memcmp((void const   *)mdev->int_dig_out, (void const   *)(& digest),
<                        (size_t )dgs);
< #line 2986
<       if (tmp___9 != 0) {
< #line 2987
<         dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Digest mismatch, buffer modified by upper layers during write: %llus +%u\n",
<                  (unsigned long long )req->sector, req->size);
<       } else {
< 
<       }
<     } else {
< 
<     }
<   } else {
< 
<   }
< #line 2996
<   drbd_put_data_sock___0(mdev);
< #line 2998
<   return (ok);
< }
< }
< #line 3005 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< int drbd_send_block(struct drbd_conf *mdev , enum drbd_packets cmd , struct drbd_epoch_entry *e ) 
< { 
<   int ok ;
<   struct p_data p ;
<   void *dgb ;
<   int dgs ;
<   unsigned int tmp ;
<   __u16 tmp___0 ;
<   __u16 tmp___1 ;
<   __u16 tmp___2 ;
<   __u32 tmp___3 ;
<   __u64 tmp___4 ;
<   int tmp___5 ;
<   int tmp___6 ;
<   int tmp___7 ;
< 
<   {
< #line 3013
<   if (mdev->agreed_pro_version > 86 && (unsigned long )mdev->integrity_w_tfm != (unsigned long )((struct crypto_hash *)0)) {
< #line 3013
<     tmp = crypto_hash_digestsize(mdev->integrity_w_tfm);
< #line 3013
<     dgs = (int )tmp;
<   } else {
< #line 3013
<     dgs = 0;
<   }
< #line 3016
<   if (e->size <= 32768U) {
< #line 3017
<     p.head.h80.magic = 1728214147U;
< #line 3018
<     tmp___0 = __fswab16((int )((__u16 )cmd));
< #line 3018
<     p.head.h80.command = tmp___0;
< #line 3019
<     tmp___1 = __fswab16((int )((unsigned int )((int )((__u16 )dgs) + (int )((__u16 )e->size)) + 24U));
< #line 3019
<     p.head.h80.length = tmp___1;
<   } else {
< #line 3022
<     p.head.h95.magic = 23171U;
< #line 3023
<     tmp___2 = __fswab16((int )((__u16 )cmd));
< #line 3023
<     p.head.h95.command = tmp___2;
< #line 3024
<     tmp___3 = __fswab32((e->size + (__u32 )dgs) + 24U);
< #line 3024
<     p.head.h95.length = tmp___3;
<   }
< #line 3028
<   tmp___4 = __fswab64((__u64 )e->sector);
< #line 3028
<   p.sector = tmp___4;
< #line 3029
<   p.block_id = e->ldv_49189.block_id;
< #line 3036
<   tmp___5 = drbd_get_data_sock___0(mdev);
< #line 3036
<   if (tmp___5 == 0) {
< #line 3037
<     return (0);
<   } else {
< 
<   }
< #line 3039
<   tmp___6 = drbd_send(mdev, mdev->data.socket, (void *)(& p), 32UL, dgs != 0 ? 32768U : 0U);
< #line 3039
<   ok = tmp___6 == 32;
< #line 3040
<   if (ok != 0 && dgs != 0) {
< #line 3041
<     dgb = mdev->int_dig_out;
< #line 3042
<     drbd_csum_ee(mdev, mdev->integrity_w_tfm, e, dgb);
< #line 3043
<     tmp___7 = drbd_send(mdev, mdev->data.socket, dgb, (size_t )dgs, 0U);
< #line 3043
<     ok = tmp___7 == dgs;
<   } else {
< 
<   }
< #line 3045
<   if (ok != 0) {
< #line 3046
<     ok = _drbd_send_zc_ee(mdev, e);
<   } else {
< 
<   }
< #line 3048
<   drbd_put_data_sock___0(mdev);
< #line 3050
<   return (ok);
< }
< }
< #line 3053 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< int drbd_send_oos(struct drbd_conf *mdev , struct drbd_request *req ) 
< { 
<   struct p_block_desc p ;
<   __u64 tmp ;
<   __u32 tmp___0 ;
<   int tmp___1 ;
< 
<   {
< #line 3057
<   tmp = __fswab64((__u64 )req->sector);
< #line 3057
<   p.sector = tmp;
< #line 3058
<   tmp___0 = __fswab32(req->size);
< #line 3058
<   p.blksize = tmp___0;
< #line 3060
<   tmp___1 = drbd_send_cmd(mdev, 1, P_OUT_OF_SYNC, & p.head, 24UL);
< #line 3060
<   return (tmp___1);
< }
< }
< #line 3079 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< int drbd_send(struct drbd_conf *mdev , struct socket *sock , void *buf , size_t size ,
<               unsigned int msg_flags ) 
< { 
<   struct kvec iov ;
<   struct msghdr msg ;
<   int rv ;
<   int sent ;
<   int tmp ;
<   struct task_struct *tmp___0 ;
<   union drbd_state val ;
<   union drbd_state mask ;
<   union drbd_state val___0 ;
<   union drbd_state mask___0 ;
< 
<   {
< #line 3084
<   sent = 0;
< #line 3086
<   if ((unsigned long )sock == (unsigned long )((struct socket *)0)) {
< #line 3087
<     return (-1000);
<   } else {
< 
<   }
< #line 3091
<   iov.iov_base = buf;
< #line 3092
<   iov.iov_len = size;
< #line 3094
<   msg.msg_name = 0;
< #line 3095
<   msg.msg_namelen = 0;
< #line 3096
<   msg.msg_control = 0;
< #line 3097
<   msg.msg_controllen = 0UL;
< #line 3098
<   msg.msg_flags = msg_flags | 16384U;
< #line 3100
<   if ((unsigned long )mdev->data.socket == (unsigned long )sock) {
< #line 3101
<     mdev->ko_count = (unsigned int )(mdev->net_conf)->ko_count;
< #line 3102
<     drbd_update_congested(mdev);
<   } else {
< 
<   }
<   ldv_52688: 
< #line 3114
<   rv = kernel_sendmsg(sock, & msg, & iov, 1UL, size);
< #line 3115
<   if (rv == -11) {
< #line 3116
<     tmp = we_should_drop_the_connection(mdev, sock);
< #line 3116
<     if (tmp != 0) {
< #line 3117
<       goto ldv_52686;
<     } else {
< #line 3119
<       goto ldv_52687;
<     }
<   } else {
< 
<   }
< #line 3121
<   if (rv == 0) {
< #line 3121
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( rv != 0 ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             3121);
<   } else {
< 
<   }
< #line 3122
<   if (rv == -4) {
< #line 3123
<     tmp___0 = get_current();
< #line 3123
<     flush_signals(tmp___0);
< #line 3124
<     rv = 0;
<   } else {
< 
<   }
< #line 3126
<   if (rv < 0) {
< #line 3127
<     goto ldv_52686;
<   } else {
< 
<   }
< #line 3128
<   sent = sent + rv;
< #line 3129
<   iov.iov_base = iov.iov_base + (unsigned long )rv;
< #line 3130
<   iov.iov_len = iov.iov_len - (size_t )rv;
<   ldv_52687: ;
< #line 3131
<   if ((size_t )sent < size) {
< #line 3132
<     goto ldv_52688;
<   } else {
< 
<   }
<   ldv_52686: ;
< #line 3133
<   if ((unsigned long )mdev->data.socket == (unsigned long )sock) {
< #line 3134
<     drbd_clear_flag(mdev, NET_CONGESTED);
<   } else {
< 
<   }
< #line 3136
<   if (rv <= 0) {
< #line 3137
<     if (rv != -11) {
< #line 3138
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "%s_sendmsg returned %d\n",
<               (unsigned long )mdev->meta.socket == (unsigned long )sock ? (char *)"msock" : (char *)"sock",
<               rv);
< #line 3141
<       val.i = 0U;
< #line 3141
<       val.ldv_39979.conn = 4U;
< #line 3141
<       mask.i = 0U;
< #line 3141
<       mask.ldv_39979.conn = 31U;
< #line 3141
<       drbd_force_state(mdev, mask, val);
<     } else {
< #line 3143
<       val___0.i = 0U;
< #line 3143
<       val___0.ldv_39979.conn = 3U;
< #line 3143
<       mask___0.i = 0U;
< #line 3143
<       mask___0.ldv_39979.conn = 31U;
< #line 3143
<       drbd_force_state(mdev, mask___0, val___0);
<     }
<   } else {
< 
<   }
< #line 3146
<   return (sent);
< }
< }
< #line 3149 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static int drbd_open(struct block_device *bdev , fmode_t mode ) 
< { 
<   struct drbd_conf *mdev ;
<   unsigned long flags ;
<   int rv ;
<   raw_spinlock_t *tmp ;
< 
<   {
< #line 3151
<   mdev = (struct drbd_conf *)(bdev->bd_disk)->private_data;
< #line 3153
<   rv = 0;
< #line 3155
<   ldv_mutex_lock_221(& drbd_main_mutex);
< #line 3156
<   tmp = spinlock_check(& mdev->req_lock);
< #line 3156
<   flags = _raw_spin_lock_irqsave(tmp);
< #line 3160
<   if ((unsigned int )*((unsigned char *)mdev + 2276UL) != 1U) {
< #line 3161
<     if ((mode & 2U) != 0U) {
< #line 3162
<       rv = -30;
<     } else
< #line 3163
<     if (! allow_oos) {
< #line 3164
<       rv = -124;
<     } else {
< 
<     }
<   } else {
< 
<   }
< #line 3167
<   if (rv == 0) {
< #line 3168
<     mdev->open_cnt = mdev->open_cnt + 1;
<   } else {
< 
<   }
< #line 3169
<   spin_unlock_irqrestore(& mdev->req_lock, flags);
< #line 3170
<   ldv_mutex_unlock_222(& drbd_main_mutex);
< #line 3172
<   return (rv);
< }
< }
< #line 3175 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static int drbd_release(struct gendisk *gd , fmode_t mode ) 
< { 
<   struct drbd_conf *mdev ;
< 
<   {
< #line 3177
<   mdev = (struct drbd_conf *)gd->private_data;
< #line 3178
<   ldv_mutex_lock_223(& drbd_main_mutex);
< #line 3179
<   mdev->open_cnt = mdev->open_cnt - 1;
< #line 3180
<   ldv_mutex_unlock_224(& drbd_main_mutex);
< #line 3181
<   return (0);
< }
< }
< #line 3184 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static void drbd_set_defaults(struct drbd_conf *mdev ) 
< { 
<   struct syncer_conf __constr_expr_0 ;
<   union drbd_state __constr_expr_1 ;
< 
<   {
< #line 3188
<   __constr_expr_0.rate = 250;
< #line 3188
<   __constr_expr_0.after = -1;
< #line 3188
<   __constr_expr_0.al_extents = 127;
< #line 3188
<   __constr_expr_0.verify_alg[0] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[1] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[2] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[3] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[4] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[5] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[6] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[7] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[8] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[9] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[10] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[11] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[12] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[13] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[14] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[15] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[16] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[17] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[18] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[19] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[20] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[21] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[22] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[23] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[24] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[25] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[26] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[27] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[28] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[29] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[30] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[31] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[32] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[33] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[34] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[35] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[36] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[37] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[38] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[39] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[40] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[41] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[42] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[43] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[44] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[45] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[46] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[47] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[48] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[49] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[50] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[51] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[52] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[53] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[54] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[55] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[56] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[57] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[58] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[59] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[60] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[61] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[62] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[63] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg_len = 0;
< #line 3188
<   __constr_expr_0.cpu_mask[0] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[1] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[2] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[3] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[4] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[5] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[6] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[7] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[8] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[9] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[10] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[11] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[12] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[13] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[14] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[15] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[16] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[17] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[18] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[19] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[20] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[21] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[22] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[23] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[24] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[25] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[26] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[27] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[28] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[29] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[30] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[31] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask_len = 0;
< #line 3188
<   __constr_expr_0.csums_alg[0] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[1] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[2] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[3] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[4] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[5] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[6] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[7] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[8] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[9] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[10] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[11] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[12] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[13] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[14] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[15] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[16] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[17] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[18] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[19] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[20] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[21] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[22] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[23] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[24] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[25] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[26] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[27] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[28] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[29] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[30] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[31] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[32] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[33] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[34] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[35] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[36] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[37] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[38] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[39] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[40] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[41] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[42] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[43] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[44] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[45] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[46] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[47] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[48] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[49] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[50] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[51] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[52] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[53] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[54] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[55] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[56] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[57] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[58] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[59] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[60] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[61] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[62] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[63] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg_len = 0;
< #line 3188
<   __constr_expr_0.use_rle = 0U;
< #line 3188
<   __constr_expr_0.on_no_data = 0;
< #line 3188
<   __constr_expr_0.c_plan_ahead = 0;
< #line 3188
<   __constr_expr_0.c_delay_target = 10;
< #line 3188
<   __constr_expr_0.c_fill_target = 0;
< #line 3188
<   __constr_expr_0.c_max_rate = 102400;
< #line 3188
<   __constr_expr_0.c_min_rate = 4096;
< #line 3188
<   mdev->sync_conf = __constr_expr_0;
< #line 3206
<   __constr_expr_1.ldv_39979.role = 2U;
< #line 3206
<   __constr_expr_1.ldv_39979.peer = 0U;
< #line 3206
<   __constr_expr_1.ldv_39979.conn = 0U;
< #line 3206
<   __constr_expr_1.ldv_39979.disk = 0U;
< #line 3206
<   __constr_expr_1.ldv_39979.pdsk = 6U;
< #line 3206
<   __constr_expr_1.ldv_39979.susp = 0U;
< #line 3206
<   __constr_expr_1.ldv_39979.aftr_isp = (unsigned char)0;
< #line 3206
<   __constr_expr_1.ldv_39979.peer_isp = (unsigned char)0;
< #line 3206
<   __constr_expr_1.ldv_39979.user_isp = (unsigned char)0;
< #line 3206
<   __constr_expr_1.ldv_39979.susp_nod = 0U;
< #line 3206
<   __constr_expr_1.ldv_39979.susp_fen = 0U;
< #line 3206
<   __constr_expr_1.ldv_39979._pad = (unsigned short)0;
< #line 3206
<   mdev->state = __constr_expr_1;
< #line 3207
<   return;
< }
< }
< #line 3218 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void drbd_init_set_defaults(struct drbd_conf *mdev ) 
---
> #line 1882 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> void drbd_init_set_defaults(struct drbd_conf *mdev ) 
46783,46789d43945
<   struct lock_class_key __key___11 ;
<   struct lock_class_key __key___12 ;
<   struct lock_class_key __key___13 ;
<   struct lock_class_key __key___14 ;
<   struct lock_class_key __key___15 ;
<   struct lock_class_key __key___16 ;
<   struct lock_class_key __key___17 ;
46792c43948
< #line 3223
---
> #line 1887
46794c43950
< #line 3225
---
> #line 1889
46796c43952
< #line 3226
---
> #line 1890
46798c43954
< #line 3227
---
> #line 1891
46800c43956
< #line 3228
---
> #line 1892
46802c43958
< #line 3229
---
> #line 1893
46804,46810c43960
< #line 3230
<   atomic_set(& mdev->net_cnt, 0);
< #line 3231
<   atomic_set(& mdev->packet_seq, 0);
< #line 3232
<   atomic_set(& mdev->pp_in_use, 0);
< #line 3233
---
> #line 1894
46812c43962
< #line 3234
---
> #line 1895
46814c43964
< #line 3235
---
> #line 1896
46816c43966
< #line 3236
---
> #line 1897
46818c43968
< #line 3237
---
> #line 1898
46820,46840c43970,43974
< #line 3239
<   __mutex_init(& mdev->data.mutex, "&mdev->data.mutex", & __key);
< #line 3240
<   __mutex_init(& mdev->meta.mutex, "&mdev->meta.mutex", & __key___0);
< #line 3241
<   sema_init(& mdev->data.work.s, 0);
< #line 3242
<   sema_init(& mdev->meta.work.s, 0);
< #line 3243
<   __mutex_init(& mdev->state_mutex, "&mdev->state_mutex", & __key___1);
< #line 3245
<   spinlock_check(& mdev->data.work.q_lock);
< #line 3245
<   __raw_spin_lock_init(& mdev->data.work.q_lock.ldv_5957.rlock, "&(&mdev->data.work.q_lock)->rlock",
<                        & __key___2);
< #line 3246
<   spinlock_check(& mdev->meta.work.q_lock);
< #line 3246
<   __raw_spin_lock_init(& mdev->meta.work.q_lock.ldv_5957.rlock, "&(&mdev->meta.work.q_lock)->rlock",
<                        & __key___3);
< #line 3248
---
> #line 1900
>   __mutex_init(& mdev->own_state_mutex, "&mdev->own_state_mutex", & __key);
> #line 1901
>   mdev->state_mutex = & mdev->own_state_mutex;
> #line 1903
46842,46850c43976,43979
< #line 3248
<   __raw_spin_lock_init(& mdev->al_lock.ldv_5957.rlock, "&(&mdev->al_lock)->rlock",
<                        & __key___4);
< #line 3249
<   spinlock_check(& mdev->req_lock);
< #line 3249
<   __raw_spin_lock_init(& mdev->req_lock.ldv_5957.rlock, "&(&mdev->req_lock)->rlock",
<                        & __key___5);
< #line 3250
---
> #line 1903
>   __raw_spin_lock_init(& mdev->al_lock.ldv_6135.rlock, "&(&mdev->al_lock)->rlock",
>                        & __key___0);
> #line 1904
46852,46860c43981,43984
< #line 3250
<   __raw_spin_lock_init(& mdev->peer_seq_lock.ldv_5957.rlock, "&(&mdev->peer_seq_lock)->rlock",
<                        & __key___6);
< #line 3251
<   spinlock_check(& mdev->epoch_lock);
< #line 3251
<   __raw_spin_lock_init(& mdev->epoch_lock.ldv_5957.rlock, "&(&mdev->epoch_lock)->rlock",
<                        & __key___7);
< #line 3253
---
> #line 1904
>   __raw_spin_lock_init(& mdev->peer_seq_lock.ldv_6135.rlock, "&(&mdev->peer_seq_lock)->rlock",
>                        & __key___1);
> #line 1906
46862c43986
< #line 3254
---
> #line 1907
46864c43988
< #line 3255
---
> #line 1908
46866c43990
< #line 3256
---
> #line 1909
46868c43992
< #line 3257
---
> #line 1910
46870c43994
< #line 3258
---
> #line 1911
46872,46876c43996
< #line 3259
<   INIT_LIST_HEAD(& mdev->data.work.q);
< #line 3260
<   INIT_LIST_HEAD(& mdev->meta.work.q);
< #line 3261
---
> #line 1912
46878c43998
< #line 3262
---
> #line 1913
46880c44000
< #line 3263
---
> #line 1914
46882c44002
< #line 3264
---
> #line 1915
46884c44004
< #line 3265
---
> #line 1916
46886c44006
< #line 3266
---
> #line 1917
46888c44008
< #line 3268
---
> #line 1919
46890c44010
< #line 3269
---
> #line 1920
46892c44012
< #line 3270
---
> #line 1921
46894c44014
< #line 3271
---
> #line 1922
46896c44016
< #line 3272
---
> #line 1923
46898c44018
< #line 3273
---
> #line 1924
46900,46908c44020,44040
< #line 3274
<   init_timer_key(& mdev->resync_timer, 0U, "(&mdev->resync_timer)", & __key___8);
< #line 3275
<   init_timer_key(& mdev->md_sync_timer, 0U, "(&mdev->md_sync_timer)", & __key___9);
< #line 3276
<   init_timer_key(& mdev->start_resync_timer, 0U, "(&mdev->start_resync_timer)", & __key___10);
< #line 3277
<   init_timer_key(& mdev->request_timer, 0U, "(&mdev->request_timer)", & __key___11);
< #line 3278
---
> #line 1926
>   mdev->resync_work.ldv_50388.mdev = mdev;
> #line 1927
>   mdev->unplug_work.ldv_50388.mdev = mdev;
> #line 1928
>   mdev->go_diskless.ldv_50388.mdev = mdev;
> #line 1929
>   mdev->md_sync_work.ldv_50388.mdev = mdev;
> #line 1930
>   mdev->bm_io_work.w.ldv_50388.mdev = mdev;
> #line 1931
>   mdev->start_resync_work.ldv_50388.mdev = mdev;
> #line 1933
>   init_timer_key(& mdev->resync_timer, 0U, "(&mdev->resync_timer)", & __key___2);
> #line 1934
>   init_timer_key(& mdev->md_sync_timer, 0U, "(&mdev->md_sync_timer)", & __key___3);
> #line 1935
>   init_timer_key(& mdev->start_resync_timer, 0U, "(&mdev->start_resync_timer)", & __key___4);
> #line 1936
>   init_timer_key(& mdev->request_timer, 0U, "(&mdev->request_timer)", & __key___5);
> #line 1937
46910c44042
< #line 3279
---
> #line 1938
46912c44044
< #line 3280
---
> #line 1939
46914c44046
< #line 3281
---
> #line 1940
46916c44048
< #line 3282
---
> #line 1941
46918c44050
< #line 3283
---
> #line 1942
46920c44052
< #line 3284
---
> #line 1943
46922c44054
< #line 3285
---
> #line 1944
46924,46946c44056,44066
< #line 3287
<   __init_waitqueue_head(& mdev->misc_wait, "&mdev->misc_wait", & __key___12);
< #line 3288
<   __init_waitqueue_head(& mdev->state_wait, "&mdev->state_wait", & __key___13);
< #line 3289
<   __init_waitqueue_head(& mdev->net_cnt_wait, "&mdev->net_cnt_wait", & __key___14);
< #line 3290
<   __init_waitqueue_head(& mdev->ee_wait, "&mdev->ee_wait", & __key___15);
< #line 3291
<   __init_waitqueue_head(& mdev->al_wait, "&mdev->al_wait", & __key___16);
< #line 3292
<   __init_waitqueue_head(& mdev->seq_wait, "&mdev->seq_wait", & __key___17);
< #line 3294
<   drbd_thread_init(mdev, & mdev->receiver, & drbdd_init);
< #line 3295
<   drbd_thread_init(mdev, & mdev->worker, & drbd_worker);
< #line 3296
<   drbd_thread_init(mdev, & mdev->asender, & drbd_asender);
< #line 3298
<   mdev->agreed_pro_version = 97;
< #line 3299
<   mdev->write_ordering = WO_bdev_flush;
< #line 3300
---
> #line 1946
>   __init_waitqueue_head(& mdev->misc_wait, "&mdev->misc_wait", & __key___6);
> #line 1947
>   __init_waitqueue_head(& mdev->state_wait, "&mdev->state_wait", & __key___7);
> #line 1948
>   __init_waitqueue_head(& mdev->ee_wait, "&mdev->ee_wait", & __key___8);
> #line 1949
>   __init_waitqueue_head(& mdev->al_wait, "&mdev->al_wait", & __key___9);
> #line 1950
>   __init_waitqueue_head(& mdev->seq_wait, "&mdev->seq_wait", & __key___10);
> #line 1952
46948c44068
< #line 3301
---
> #line 1953
46950c44070
< #line 3302
---
> #line 1954
46952c44072
< #line 3303
---
> #line 1955
46956c44076
< #line 3305 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 1957 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
46960,46961c44080,44081
<   int tmp ;
<   int tmp___0 ;
---
>   unsigned int tmp ;
>   unsigned int tmp___0 ;
46965,46967c44085,44087
<   unsigned int tmp___4 ;
<   unsigned int tmp___5 ;
<   sector_t tmp___6 ;
---
>   sector_t tmp___4 ;
>   unsigned long tmp___5 ;
>   unsigned long tmp___6 ;
46969,46970c44089,44090
<   unsigned long tmp___8 ;
<   unsigned long tmp___9 ;
---
>   int tmp___8 ;
>   int tmp___9 ;
46979,46981d44098
<   int tmp___18 ;
<   int tmp___19 ;
<   int tmp___20 ;
46984,46986c44101,44103
< #line 3308
<   if ((unsigned int )mdev->receiver.t_state != 0U) {
< #line 3309
---
> #line 1960
>   if ((unsigned int )(mdev->tconn)->receiver.t_state != 0U) {
> #line 1961
46988,47000c44105
<             (unsigned int )mdev->receiver.t_state);
<   } else {
< 
<   }
< #line 3313
<   tmp___0 = atomic_read((atomic_t const   *)(& (mdev->current_epoch)->epoch_size));
< #line 3313
<   if (tmp___0 != 0) {
< #line 3314
<     tmp = atomic_read((atomic_t const   *)(& (mdev->current_epoch)->epoch_size));
< #line 3314
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "epoch_size:%d\n",
<             tmp);
---
>             (unsigned int )(mdev->tconn)->receiver.t_state);
47004,47016c44109,44113
< #line 3315
<   tmp___9 = 0UL;
< #line 3315
<   mdev->rs_failed = tmp___9;
< #line 3315
<   tmp___8 = tmp___9;
< #line 3315
<   mdev->rs_total = tmp___8;
< #line 3315
<   tmp___7 = tmp___8;
< #line 3315
<   mdev->rs_start = tmp___7;
< #line 3315
---
> #line 1964
>   tmp___7 = 0UL;
> #line 1964
>   mdev->rs_failed = tmp___7;
> #line 1964
47018,47024c44115,44121
< #line 3315
<   mdev->p_size = tmp___6;
< #line 3315
<   tmp___5 = (unsigned int )tmp___6;
< #line 3315
<   mdev->writ_cnt = tmp___5;
< #line 3315
---
> #line 1964
>   mdev->rs_total = tmp___6;
> #line 1964
>   tmp___5 = tmp___6;
> #line 1964
>   mdev->rs_start = tmp___5;
> #line 1964
47026,47032c44123,44129
< #line 3315
<   mdev->send_cnt = tmp___4;
< #line 3315
<   tmp___3 = tmp___4;
< #line 3315
<   mdev->recv_cnt = tmp___3;
< #line 3315
---
> #line 1964
>   mdev->p_size = tmp___4;
> #line 1964
>   tmp___3 = (unsigned int )tmp___4;
> #line 1964
>   mdev->writ_cnt = tmp___3;
> #line 1964
47034,47036c44131,44133
< #line 3315
<   mdev->read_cnt = tmp___2;
< #line 3315
---
> #line 1964
>   mdev->send_cnt = tmp___2;
> #line 1964
47038,47042c44135,44147
< #line 3315
<   mdev->bm_writ_cnt = tmp___1;
< #line 3315
<   mdev->al_writ_cnt = tmp___1;
< #line 3325
---
> #line 1964
>   mdev->recv_cnt = tmp___1;
> #line 1964
>   tmp___0 = tmp___1;
> #line 1964
>   mdev->read_cnt = tmp___0;
> #line 1964
>   tmp = tmp___0;
> #line 1964
>   mdev->bm_writ_cnt = tmp;
> #line 1964
>   mdev->al_writ_cnt = tmp;
> #line 1974
47044c44149
< #line 3326
---
> #line 1975
47046c44151
< #line 3327
---
> #line 1976
47048,47051c44153,44156
< #line 3327
<   goto ldv_52744;
<   ldv_52743: 
< #line 3328
---
> #line 1976
>   goto ldv_52881;
>   ldv_52880: 
> #line 1977
47053c44158
< #line 3329
---
> #line 1978
47055c44160
< #line 3327
---
> #line 1976
47057,47058c44162,44163
<   ldv_52744: ;
< #line 3327
---
>   ldv_52881: ;
> #line 1976
47060,47061c44165,44166
< #line 3328
<     goto ldv_52743;
---
> #line 1977
>     goto ldv_52880;
47066,47071c44171,44176
< #line 3331
<   if ((unsigned long )mdev->net_conf != (unsigned long )((struct net_conf *)0)) {
< #line 3331
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mdev->net_conf == NULL ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             3331);
---
> #line 1980
>   if ((unsigned long )(mdev->tconn)->net_conf != (unsigned long )((struct net_conf *)0)) {
> #line 1980
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mdev->tconn->net_conf == NULL ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared",
>             1980);
47075c44180
< #line 3333
---
> #line 1982
47077c44182
< #line 3334
---
> #line 1983
47079c44184
< #line 3336
---
> #line 1985
47081c44186
< #line 3337
---
> #line 1986
47086,47094c44191,44201
< #line 3340
<   drbd_free_resources(mdev);
< #line 3341
<   drbd_clear_flag(mdev, AL_SUSPENDED);
< #line 3347
<   tmp___10 = list_empty((struct list_head  const  *)(& mdev->active_ee));
< #line 3347
<   if (tmp___10 == 0) {
< #line 3347
---
> #line 1989
>   drbd_free_bc(mdev->ldev);
> #line 1990
>   mdev->ldev = 0;
> #line 1992
>   clear_bit(18, (unsigned long volatile   *)(& mdev->flags));
> #line 1994
>   tmp___8 = list_empty((struct list_head  const  *)(& mdev->active_ee));
> #line 1994
>   if (tmp___8 == 0) {
> #line 1994
47096,47097c44203,44204
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             3347);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared",
>             1994);
47101,47105c44208,44212
< #line 3348
<   tmp___11 = list_empty((struct list_head  const  *)(& mdev->sync_ee));
< #line 3348
<   if (tmp___11 == 0) {
< #line 3348
---
> #line 1995
>   tmp___9 = list_empty((struct list_head  const  *)(& mdev->sync_ee));
> #line 1995
>   if (tmp___9 == 0) {
> #line 1995
47107,47108c44214,44215
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             3348);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared",
>             1995);
47112,47116c44219,44223
< #line 3349
<   tmp___12 = list_empty((struct list_head  const  *)(& mdev->done_ee));
< #line 3349
<   if (tmp___12 == 0) {
< #line 3349
---
> #line 1996
>   tmp___10 = list_empty((struct list_head  const  *)(& mdev->done_ee));
> #line 1996
>   if (tmp___10 == 0) {
> #line 1996
47118,47119c44225,44226
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             3349);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared",
>             1996);
47123,47127c44230,44234
< #line 3350
<   tmp___13 = list_empty((struct list_head  const  *)(& mdev->read_ee));
< #line 3350
<   if (tmp___13 == 0) {
< #line 3350
---
> #line 1997
>   tmp___11 = list_empty((struct list_head  const  *)(& mdev->read_ee));
> #line 1997
>   if (tmp___11 == 0) {
> #line 1997
47129,47130c44236,44237
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             3350);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared",
>             1997);
47134,47138c44241,44245
< #line 3351
<   tmp___14 = list_empty((struct list_head  const  *)(& mdev->net_ee));
< #line 3351
<   if (tmp___14 == 0) {
< #line 3351
---
> #line 1998
>   tmp___12 = list_empty((struct list_head  const  *)(& mdev->net_ee));
> #line 1998
>   if (tmp___12 == 0) {
> #line 1998
47140,47141c44247,44248
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             3351);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared",
>             1998);
47145,47149c44252,44256
< #line 3352
<   tmp___15 = list_empty((struct list_head  const  *)(& mdev->resync_reads));
< #line 3352
<   if (tmp___15 == 0) {
< #line 3352
---
> #line 1999
>   tmp___13 = list_empty((struct list_head  const  *)(& mdev->resync_reads));
> #line 1999
>   if (tmp___13 == 0) {
> #line 1999
47151,47163c44258,44259
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             3352);
<   } else {
< 
<   }
< #line 3353
<   tmp___16 = list_empty((struct list_head  const  *)(& mdev->data.work.q));
< #line 3353
<   if (tmp___16 == 0) {
< #line 3353
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( list_empty(&mdev->data.work.q) ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             3353);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared",
>             1999);
47167,47174c44263,44270
< #line 3354
<   tmp___17 = list_empty((struct list_head  const  *)(& mdev->meta.work.q));
< #line 3354
<   if (tmp___17 == 0) {
< #line 3354
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( list_empty(&mdev->meta.work.q) ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             3354);
---
> #line 2000
>   tmp___14 = list_empty((struct list_head  const  *)(& (mdev->tconn)->sender_work.q));
> #line 2000
>   if (tmp___14 == 0) {
> #line 2000
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( list_empty(&mdev->tconn->sender_work.q) ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared",
>             2000);
47178,47182c44274,44278
< #line 3355
<   tmp___18 = list_empty((struct list_head  const  *)(& mdev->resync_work.list));
< #line 3355
<   if (tmp___18 == 0) {
< #line 3355
---
> #line 2001
>   tmp___15 = list_empty((struct list_head  const  *)(& mdev->resync_work.list));
> #line 2001
>   if (tmp___15 == 0) {
> #line 2001
47184,47185c44280,44281
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             3355);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared",
>             2001);
47189,47193c44285,44289
< #line 3356
<   tmp___19 = list_empty((struct list_head  const  *)(& mdev->unplug_work.list));
< #line 3356
<   if (tmp___19 == 0) {
< #line 3356
---
> #line 2002
>   tmp___16 = list_empty((struct list_head  const  *)(& mdev->unplug_work.list));
> #line 2002
>   if (tmp___16 == 0) {
> #line 2002
47195,47196c44291,44292
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             3356);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared",
>             2002);
47200,47204c44296,44300
< #line 3357
<   tmp___20 = list_empty((struct list_head  const  *)(& mdev->go_diskless.list));
< #line 3357
<   if (tmp___20 == 0) {
< #line 3357
---
> #line 2003
>   tmp___17 = list_empty((struct list_head  const  *)(& mdev->go_diskless.list));
> #line 2003
>   if (tmp___17 == 0) {
> #line 2003
47206,47207c44302,44303
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             3357);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared",
>             2003);
47211c44307
< #line 3359
---
> #line 2005
47213c44309
< #line 3360
---
> #line 2006
47217c44313
< #line 3363 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 2009 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
47223,47226c44319,44322
< #line 3367
<   goto ldv_52751;
<   ldv_52750: 
< #line 3368
---
> #line 2013
>   goto ldv_52888;
>   ldv_52887: 
> #line 2014
47228,47230c44324,44326
< #line 3369
<   drbd_pp_pool = (struct page *)page->ldv_14722.private;
< #line 3370
---
> #line 2015
>   drbd_pp_pool = (struct page *)page->ldv_16348.private;
> #line 2016
47232c44328
< #line 3371
---
> #line 2017
47234,47235c44330,44331
<   ldv_52751: ;
< #line 3367
---
>   ldv_52888: ;
> #line 2013
47237,47238c44333,44334
< #line 3368
<     goto ldv_52750;
---
> #line 2014
>     goto ldv_52887;
47243c44339
< #line 3376
---
> #line 2022
47245c44341
< #line 3377
---
> #line 2023
47250c44346
< #line 3378
---
> #line 2024
47252c44348
< #line 3379
---
> #line 2025
47257c44353
< #line 3380
---
> #line 2026
47259c44355
< #line 3381
---
> #line 2027
47264c44360
< #line 3382
---
> #line 2028
47266c44362
< #line 3383
---
> #line 2029
47271c44367
< #line 3384
---
> #line 2030
47273c44369
< #line 3385
---
> #line 2031
47278c44374
< #line 3386
---
> #line 2032
47280c44376
< #line 3387
---
> #line 2033
47285c44381
< #line 3388
---
> #line 2034
47287c44383
< #line 3389
---
> #line 2035
47292c44388
< #line 3390
---
> #line 2036
47294c44390
< #line 3391
---
> #line 2037
47299c44395
< #line 3393
---
> #line 2039
47301c44397
< #line 3394
---
> #line 2040
47303c44399
< #line 3395
---
> #line 2041
47305c44401
< #line 3396
---
> #line 2042
47307c44403
< #line 3397
---
> #line 2043
47309c44405
< #line 3398
---
> #line 2044
47311c44407
< #line 3399
---
> #line 2045
47313c44409
< #line 3400
---
> #line 2046
47315c44411
< #line 3402
---
> #line 2048
47319c44415
< #line 3405 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 2051 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
47328,47330c44424,44426
< #line 3408
<   number = (int const   )(minor_count * 32U);
< #line 3412
---
> #line 2054
>   number = (int const   )(minor_count * 256U);
> #line 2058
47332c44428
< #line 3413
---
> #line 2059
47334c44430
< #line 3414
---
> #line 2060
47336c44432
< #line 3415
---
> #line 2061
47338c44434
< #line 3416
---
> #line 2062
47340c44436
< #line 3417
---
> #line 2063
47342c44438
< #line 3418
---
> #line 2064
47344c44440
< #line 3419
---
> #line 2065
47346,47348c44442,44444
< #line 3422
<   drbd_request_cache = kmem_cache_create("drbd_req", 112UL, 0UL, 0UL, 0);
< #line 3424
---
> #line 2068
>   drbd_request_cache = kmem_cache_create("drbd_req", 152UL, 0UL, 0UL, 0);
> #line 2070
47350c44446
< #line 3425
---
> #line 2071
47355,47357c44451,44453
< #line 3427
<   drbd_ee_cache = kmem_cache_create("drbd_ee", 96UL, 0UL, 0UL, 0);
< #line 3429
---
> #line 2073
>   drbd_ee_cache = kmem_cache_create("drbd_ee", 128UL, 0UL, 0UL, 0);
> #line 2075
47359c44455
< #line 3430
---
> #line 2076
47364c44460
< #line 3432
---
> #line 2078
47366c44462
< #line 3434
---
> #line 2080
47368c44464
< #line 3435
---
> #line 2081
47373c44469
< #line 3437
---
> #line 2083
47375c44471
< #line 3439
---
> #line 2085
47377c44473
< #line 3440
---
> #line 2086
47382c44478,44487
< #line 3449
---
> #line 2089
>   drbd_md_io_bio_set = bioset_create(128U, 0U);
> #line 2090
>   if ((unsigned long )drbd_md_io_bio_set == (unsigned long )((struct bio_set *)0)) {
> #line 2091
>     goto Enomem;
>   } else {
> 
>   }
> #line 2093
47384c44489
< #line 3450
---
> #line 2094
47386c44491
< #line 3451
---
> #line 2095
47391c44496
< #line 3453
---
> #line 2097
47394c44499
< #line 3455
---
> #line 2099
47396c44501
< #line 3456
---
> #line 2100
47401c44506
< #line 3458
---
> #line 2102
47404c44509
< #line 3460
---
> #line 2104
47406c44511
< #line 3461
---
> #line 2105
47411c44516
< #line 3464
---
> #line 2108
47413,47415c44518,44520
< #line 3464
<   __raw_spin_lock_init(& drbd_pp_lock.ldv_5957.rlock, "&(&drbd_pp_lock)->rlock", & __key);
< #line 3466
---
> #line 2108
>   __raw_spin_lock_init(& drbd_pp_lock.ldv_6135.rlock, "&(&drbd_pp_lock)->rlock", & __key);
> #line 2110
47417,47420c44522,44525
< #line 3466
<   goto ldv_52762;
<   ldv_52761: 
< #line 3467
---
> #line 2110
>   goto ldv_52899;
>   ldv_52898: 
> #line 2111
47422c44527
< #line 3468
---
> #line 2112
47424c44529
< #line 3469
---
> #line 2113
47429,47431c44534,44536
< #line 3470
<   page->ldv_14722.private = (unsigned long )drbd_pp_pool;
< #line 3471
---
> #line 2114
>   page->ldv_16348.private = (unsigned long )drbd_pp_pool;
> #line 2115
47433c44538
< #line 3466
---
> #line 2110
47435,47436c44540,44541
<   ldv_52762: ;
< #line 3466
---
>   ldv_52899: ;
> #line 2110
47438,47439c44543,44544
< #line 3467
<     goto ldv_52761;
---
> #line 2111
>     goto ldv_52898;
47443c44548
< #line 3473
---
> #line 2117
47445c44550
< #line 3475
---
> #line 2119
47448c44553
< #line 3478
---
> #line 2122
47450c44555
< #line 3479
---
> #line 2123
47454c44559
< #line 3482 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 2126 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
47460c44565
< #line 3489
---
> #line 2133
47464c44569
< #line 3492 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 2136 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
47466,47467c44571,44572
< #line 3496 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static void drbd_release_ee_lists(struct drbd_conf *mdev ) 
---
> #line 2140 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> static void drbd_release_all_peer_reqs(struct drbd_conf *mdev ) 
47472,47474c44577,44579
< #line 3500
<   rr = drbd_release_ee(mdev, & mdev->active_ee);
< #line 3501
---
> #line 2144
>   rr = drbd_free_peer_reqs(mdev, & mdev->active_ee);
> #line 2145
47476c44581
< #line 3502
---
> #line 2146
47482,47484c44587,44589
< #line 3504
<   rr = drbd_release_ee(mdev, & mdev->sync_ee);
< #line 3505
---
> #line 2148
>   rr = drbd_free_peer_reqs(mdev, & mdev->sync_ee);
> #line 2149
47486c44591
< #line 3506
---
> #line 2150
47492,47494c44597,44599
< #line 3508
<   rr = drbd_release_ee(mdev, & mdev->read_ee);
< #line 3509
---
> #line 2152
>   rr = drbd_free_peer_reqs(mdev, & mdev->read_ee);
> #line 2153
47496c44601
< #line 3510
---
> #line 2154
47502,47504c44607,44609
< #line 3512
<   rr = drbd_release_ee(mdev, & mdev->done_ee);
< #line 3513
---
> #line 2156
>   rr = drbd_free_peer_reqs(mdev, & mdev->done_ee);
> #line 2157
47506c44611
< #line 3514
---
> #line 2158
47512,47514c44617,44619
< #line 3516
<   rr = drbd_release_ee(mdev, & mdev->net_ee);
< #line 3517
---
> #line 2160
>   rr = drbd_free_peer_reqs(mdev, & mdev->net_ee);
> #line 2161
47516c44621
< #line 3518
---
> #line 2162
47522c44627
< #line 3519
---
> #line 2163
47526,47527c44631,44632
< #line 3523 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static void drbd_delete_device(unsigned int minor ) 
---
> #line 2166 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> void drbd_minor_destroy(struct kref *kref ) 
47530,47533c44635,44636
<   struct drbd_conf *tmp ;
<   struct list_head *lp ;
<   int _b ;
<   int tmp___0 ;
---
>   struct kref  const  *__mptr ;
>   struct drbd_tconn *tconn ;
47536,47543c44639,44652
< #line 3525
<   tmp = minor_to_mdev(minor);
< #line 3525
<   mdev = tmp;
< #line 3527
<   if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
< #line 3528
<     return;
---
> #line 2168
>   __mptr = (struct kref  const  *)kref;
> #line 2168
>   mdev = (struct drbd_conf *)__mptr + 0xfffffffffffffff4UL;
> #line 2169
>   tconn = mdev->tconn;
> #line 2171
>   del_timer_sync(& mdev->request_timer);
> #line 2174
>   if (mdev->open_cnt != 0) {
> #line 2174
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mdev->open_cnt == 0 ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared",
>             2174);
47547,47554c44656,44659
< #line 3530
<   del_timer_sync(& mdev->request_timer);
< #line 3533
<   if (mdev->open_cnt != 0) {
< #line 3534
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "open_cnt = %d in %s:%u",
<             mdev->open_cnt, (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             3535);
---
> #line 2180
>   if ((unsigned long )mdev->this_bdev != (unsigned long )((struct block_device *)0)) {
> #line 2181
>     bdput(mdev->this_bdev);
47558,47567c44663,44678
< #line 3537
<   tmp___0 = list_empty((struct list_head  const  *)(& mdev->data.work.q));
< #line 3537
<   _b = tmp___0 == 0;
< #line 3537
<   if (_b != 0) {
< #line 3537
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_delete_device", (char *)"!list_empty(&mdev->data.work.q)", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             3537);
---
> #line 2183
>   drbd_free_bc(mdev->ldev);
> #line 2184
>   mdev->ldev = 0;
> #line 2186
>   drbd_release_all_peer_reqs(mdev);
> #line 2188
>   lc_destroy(mdev->act_log);
> #line 2189
>   lc_destroy(mdev->resync);
> #line 2191
>   kfree((void const   *)mdev->p_uuid);
> #line 2194
>   if ((unsigned long )mdev->bitmap != (unsigned long )((struct drbd_bitmap *)0)) {
> #line 2195
>     drbd_bm_cleanup(mdev);
47571,47587c44682,44774
< #line 3537
<   if (_b != 0) {
< #line 3539
<     lp = mdev->data.work.q.next;
< #line 3539
<     goto ldv_52783;
<     ldv_52782: 
< #line 3540
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "lp = %p\n",
<             lp);
< #line 3539
<     lp = lp->next;
<     ldv_52783: ;
< #line 3539
<     if ((unsigned long )(& mdev->data.work.q) != (unsigned long )lp) {
< #line 3540
<       goto ldv_52782;
---
> #line 2196
>   __free_pages(mdev->md_io_page, 0U);
> #line 2197
>   put_disk(mdev->vdisk);
> #line 2198
>   blk_cleanup_queue(mdev->rq_queue);
> #line 2199
>   kfree((void const   *)mdev->rs_plan_s);
> #line 2200
>   kfree((void const   *)mdev);
> #line 2202
>   kref_put(& tconn->kref, & conn_destroy);
> #line 2203
>   return;
> }
> }
> #line 2214 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> static struct retry_worker retry  ;
> #line 2216 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> static void do_retry(struct work_struct *ws ) 
> { 
>   struct retry_worker *retry___0 ;
>   struct work_struct  const  *__mptr ;
>   struct list_head writes ;
>   struct drbd_request *req ;
>   struct drbd_request *tmp ;
>   struct list_head  const  *__mptr___0 ;
>   struct list_head  const  *__mptr___1 ;
>   struct drbd_conf *mdev ;
>   struct bio *bio ;
>   unsigned long start_time ;
>   bool expected ;
>   bool _bool ;
>   int tmp___0 ;
>   bool _bool___0 ;
>   bool _bool___1 ;
>   int tmp___1 ;
>   int tmp___2 ;
>   struct list_head  const  *__mptr___2 ;
> 
>   {
> #line 2218
>   __mptr = (struct work_struct  const  *)ws;
> #line 2218
>   retry___0 = (struct retry_worker *)__mptr + 0xfffffffffffffff8UL;
> #line 2219
>   writes.next = & writes;
> #line 2219
>   writes.prev = & writes;
> #line 2222
>   spin_lock_irq(& retry___0->lock);
> #line 2223
>   list_splice_init(& retry___0->writes, & writes);
> #line 2224
>   spin_unlock_irq(& retry___0->lock);
> #line 2226
>   __mptr___0 = (struct list_head  const  *)writes.next;
> #line 2226
>   req = (struct drbd_request *)__mptr___0 + 0xffffffffffffff98UL;
> #line 2226
>   __mptr___1 = (struct list_head  const  *)req->tl_requests.next;
> #line 2226
>   tmp = (struct drbd_request *)__mptr___1 + 0xffffffffffffff98UL;
> #line 2226
>   goto ldv_52951;
>   ldv_52950: 
> #line 2227
>   mdev = req->w.ldv_50388.mdev;
> #line 2228
>   bio = req->master_bio;
> #line 2229
>   start_time = req->start_time;
> #line 2233
>   tmp___0 = atomic_read((atomic_t const   *)(& req->completion_ref));
> #line 2233
>   _bool = tmp___0 == 0;
> #line 2233
>   if (! _bool) {
> #line 2233
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"atomic_read(&req->completion_ref) == 0", "do_retry");
>   } else {
> 
>   }
> #line 2235
>   if ((int )_bool) {
> #line 2234
>     _bool___0 = ((unsigned long )req->rq_state & 8192UL) != 0UL;
> #line 2234
>     if (! _bool___0) {
> #line 2234
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>               (char *)"req->rq_state & RQ_POSTPONED", "do_retry");
47590a44778,44788
> #line 2235
>     if ((int )_bool___0) {
> #line 2235
>       _bool___1 = (bool )(((unsigned long )req->rq_state & 1UL) == 0UL || ((unsigned long )req->rq_state & 8UL) != 0UL);
> #line 2235
>       if (! _bool___1) {
> #line 2235
>         dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>                 (char *)"(req->rq_state & RQ_LOCAL_PENDING) == 0 || (req->rq_state & RQ_LOCAL_ABORTED) != 0",
>                 "do_retry");
>       } else {
47591a44790,44815
>       }
> #line 2235
>       if ((int )_bool___1) {
> #line 2235
>         tmp___1 = 1;
>       } else {
> #line 2235
>         tmp___1 = 0;
>       }
>     } else {
> #line 2235
>       tmp___1 = 0;
>     }
>   } else {
> #line 2235
>     tmp___1 = 0;
>   }
> #line 2235
>   expected = (bool )tmp___1;
> #line 2238
>   if (! expected) {
> #line 2239
>     tmp___2 = atomic_read((atomic_t const   *)(& req->completion_ref));
> #line 2239
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "req=%p completion_ref=%d rq_state=%x\n",
>             req, tmp___2, req->rq_state);
47595,47600c44819,44835
< #line 3545
<   del_gendisk(mdev->vdisk);
< #line 3550
<   if ((unsigned long )mdev->this_bdev != (unsigned long )((struct block_device *)0)) {
< #line 3551
<     bdput(mdev->this_bdev);
---
> #line 2248
>   kref_put(& req->kref, & drbd_req_destroy);
> #line 2263
>   inc_ap_bio___0(mdev);
> #line 2264
>   __drbd_make_request(mdev, bio, start_time);
> #line 2226
>   req = tmp;
> #line 2226
>   __mptr___2 = (struct list_head  const  *)tmp->tl_requests.next;
> #line 2226
>   tmp = (struct drbd_request *)__mptr___2 + 0xffffffffffffff98UL;
>   ldv_52951: ;
> #line 2226
>   if ((unsigned long )(& req->tl_requests) != (unsigned long )(& writes)) {
> #line 2227
>     goto ldv_52950;
47604,47624c44839,44863
< #line 3553
<   drbd_free_resources(mdev);
< #line 3555
<   drbd_release_ee_lists(mdev);
< #line 3558
<   kfree((void const   *)mdev->ee_hash);
< #line 3564
<   lc_destroy(mdev->act_log);
< #line 3565
<   lc_destroy(mdev->resync);
< #line 3567
<   kfree((void const   *)mdev->p_uuid);
< #line 3570
<   kfree((void const   *)mdev->int_dig_out);
< #line 3571
<   kfree((void const   *)mdev->int_dig_in);
< #line 3572
<   kfree((void const   *)mdev->int_dig_vv);
< #line 3577
<   drbd_free_mdev(mdev);
< #line 3578
---
> 
> #line 2231
>   return;
> }
> }
> #line 2268 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> void drbd_restart_request(struct drbd_request *req ) 
> { 
>   unsigned long flags ;
>   raw_spinlock_t *tmp ;
> 
>   {
> #line 2271
>   tmp = spinlock_check(& retry.lock);
> #line 2271
>   flags = _raw_spin_lock_irqsave(tmp);
> #line 2272
>   list_move_tail(& req->tl_requests, & retry.writes);
> #line 2273
>   spin_unlock_irqrestore(& retry.lock, flags);
> #line 2278
>   dec_ap_bio(req->w.ldv_50388.mdev);
> #line 2280
>   queue_work(retry.wq, & retry.worker);
> #line 2281
47628c44867
< #line 3580 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 2284 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
47632c44871,44879
<   unsigned int tmp ;
---
>   struct drbd_conf *mdev ;
>   struct drbd_tconn *tconn ;
>   struct drbd_tconn *tmp ;
>   void *tmp___0 ;
>   unsigned int tmp___1 ;
>   void *tmp___2 ;
>   struct list_head  const  *__mptr ;
>   struct list_head  const  *__mptr___0 ;
>   struct list_head  const  *__mptr___1 ;
47635c44882
< #line 3584
---
> #line 2290
47637c44884
< #line 3594
---
> #line 2300
47639c44886
< #line 3595
---
> #line 2301
47644,47664c44891,44895
< #line 3597
<   drbd_nl_cleanup();
< #line 3599
<   if ((unsigned long )minor_table != (unsigned long )((struct drbd_conf **)0)) {
< #line 3600
<     i = minor_count;
< #line 3601
<     goto ldv_52790;
<     ldv_52789: 
< #line 3602
<     drbd_delete_device(i);
<     ldv_52790: 
< #line 3601
<     tmp = i;
< #line 3601
<     i = i - 1U;
< #line 3601
<     if (tmp != 0U) {
< #line 3602
<       goto ldv_52789;
<     } else {
---
> #line 2303
>   if ((unsigned long )retry.wq != (unsigned long )((struct workqueue_struct *)0)) {
> #line 2304
>     destroy_workqueue(retry.wq);
>   } else {
47666,47668c44897,44929
<     }
< #line 3603
<     drbd_destroy_mempools();
---
>   }
> #line 2306
>   drbd_genl_unregister();
> #line 2308
>   i = 0U;
> #line 2308
>   tmp___0 = idr_get_next(& minors, (int *)(& i));
> #line 2308
>   mdev = (struct drbd_conf *)tmp___0;
> #line 2308
>   goto ldv_52968;
>   ldv_52967: 
> #line 2309
>   tmp___1 = mdev_to_minor(mdev);
> #line 2309
>   idr_remove(& minors, (int )tmp___1);
> #line 2310
>   idr_remove(& (mdev->tconn)->volumes, mdev->vnr);
> #line 2311
>   del_gendisk(mdev->vdisk);
> #line 2313
>   kref_put(& mdev->kref, & drbd_minor_destroy);
> #line 2308
>   i = i + 1U;
> #line 2308
>   tmp___2 = idr_get_next(& minors, (int *)(& i));
> #line 2308
>   mdev = (struct drbd_conf *)tmp___2;
>   ldv_52968: ;
> #line 2308
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 2309
>     goto ldv_52967;
47672,47674c44933,44964
< #line 3606
<   kfree((void const   *)minor_table);
< #line 3608
---
> #line 2317
>   __mptr = (struct list_head  const  *)drbd_tconns.next;
> #line 2317
>   tconn = (struct drbd_tconn *)__mptr + 0xfffffffffffffff8UL;
> #line 2317
>   __mptr___0 = (struct list_head  const  *)tconn->all_tconn.next;
> #line 2317
>   tmp = (struct drbd_tconn *)__mptr___0 + 0xfffffffffffffff8UL;
> #line 2317
>   goto ldv_52977;
>   ldv_52976: 
> #line 2318
>   list_del(& tconn->all_tconn);
> #line 2320
>   kref_put(& tconn->kref, & conn_destroy);
> #line 2317
>   tconn = tmp;
> #line 2317
>   __mptr___1 = (struct list_head  const  *)tmp->all_tconn.next;
> #line 2317
>   tmp = (struct drbd_tconn *)__mptr___1 + 0xfffffffffffffff8UL;
>   ldv_52977: ;
> #line 2317
>   if ((unsigned long )(& tconn->all_tconn) != (unsigned long )(& drbd_tconns)) {
> #line 2318
>     goto ldv_52976;
>   } else {
> 
>   }
> #line 2323
>   drbd_destroy_mempools();
> #line 2324
47676c44966,44968
< #line 3610
---
> #line 2326
>   idr_destroy(& minors);
> #line 2328
47678c44970
< #line 3611
---
> #line 2329
47682c44974
< #line 3620 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 2338 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
47697c44989
< #line 3622
---
> #line 2340
47699c44991
< #line 3624
---
> #line 2342
47701c44993
< #line 3625
---
> #line 2343
47703c44995
< #line 3627
---
> #line 2345
47705c44997
< #line 3627
---
> #line 2345
47707c44999
< #line 3627
---
> #line 2345
47710c45002
< #line 3627
---
> #line 2345
47713c45005
< #line 3627
---
> #line 2345
47715c45007
< #line 3629
---
> #line 2347
47717c45009
< #line 3630
---
> #line 2348
47719c45011
< #line 3631
---
> #line 2349
47724,47726c45016,45018
< #line 3634
<   tmp___2 = drbd_test_flag(mdev, CALLBACK_PENDING);
< #line 3634
---
> #line 2352
>   tmp___2 = constant_test_bit(11U, (unsigned long const volatile   *)(& (mdev->tconn)->flags));
> #line 2352
47728c45020
< #line 3635
---
> #line 2353
47730c45022
< #line 3641
---
> #line 2359
47732c45024
< #line 3641
---
> #line 2359
47734c45026
< #line 3642
---
> #line 2360
47737c45029
< #line 3644
---
> #line 2362
47740c45032
< #line 3645
---
> #line 2363
47742c45034
< #line 3646
---
> #line 2364
47744c45036
< #line 3647
---
> #line 2365
47749c45041
< #line 3650
---
> #line 2368
47751c45043
< #line 3650
---
> #line 2368
47753c45045
< #line 3651
---
> #line 2369
47755c45047
< #line 3652
---
> #line 2370
47757c45049
< #line 3653
---
> #line 2371
47759c45051
< #line 3654
---
> #line 2372
47761c45053
< #line 3655
---
> #line 2373
47769c45061
< #line 3658
---
> #line 2376
47771,47773c45063,45065
< #line 3658
<     tmp___4 = drbd_test_flag(mdev, NET_CONGESTED);
< #line 3658
---
> #line 2376
>     tmp___4 = constant_test_bit(0U, (unsigned long const volatile   *)(& (mdev->tconn)->flags));
> #line 2376
47775c45067
< #line 3659
---
> #line 2377
47777c45069
< #line 3660
---
> #line 2378
47786c45078
< #line 3664
---
> #line 2382
47788c45080
< #line 3665
---
> #line 2383
47792,47793c45084,45085
< #line 3668 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< struct drbd_conf *drbd_new_device(unsigned int minor ) 
---
> #line 2386 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> static void drbd_init_workqueue(struct drbd_work_queue *wq ) 
47795,47799c45087,45204
<   struct drbd_conf *mdev ;
<   struct gendisk *disk ;
<   struct request_queue *q ;
<   void *tmp ;
<   bool tmp___0 ;
---
>   struct lock_class_key __key ;
>   struct lock_class_key __key___0 ;
> 
>   {
> #line 2388
>   spinlock_check(& wq->q_lock);
> #line 2388
>   __raw_spin_lock_init(& wq->q_lock.ldv_6135.rlock, "&(&wq->q_lock)->rlock", & __key);
> #line 2389
>   INIT_LIST_HEAD(& wq->q);
> #line 2390
>   __init_waitqueue_head(& wq->q_wait, "&wq->q_wait", & __key___0);
> #line 2392
>   return;
> }
> }
> #line 2393 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> struct drbd_tconn *conn_get_by_name(char const   *name ) 
> { 
>   struct drbd_tconn *tconn ;
>   struct list_head *__ptr ;
>   struct list_head  const  *__mptr ;
>   struct list_head *_________p1 ;
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
>   struct list_head *__ptr___0 ;
>   struct list_head  const  *__mptr___0 ;
>   struct list_head *_________p1___0 ;
>   bool __warned___0 ;
>   int tmp___1 ;
> 
>   {
> #line 2397
>   if ((unsigned long )name == (unsigned long )((char const   *)0) || (int )((signed char )*name) == 0) {
> #line 2398
>     return (0);
>   } else {
> 
>   }
> #line 2400
>   rcu_read_lock();
> #line 2401
>   __ptr = drbd_tconns.next;
> #line 2401
>   _________p1 = *((struct list_head * volatile  *)(& __ptr));
> #line 2401
>   tmp = debug_lockdep_rcu_enabled();
> #line 2401
>   if (tmp != 0 && ! __warned) {
> #line 2401
>     rcu_read_lock_held();
>   } else {
> 
>   }
> #line 2401
>   __mptr = (struct list_head  const  *)_________p1;
> #line 2401
>   tconn = (struct drbd_tconn *)__mptr + 0xfffffffffffffff8UL;
> #line 2401
>   goto ldv_53013;
>   ldv_53012: 
> #line 2402
>   tmp___0 = strcmp((char const   *)tconn->name, name);
> #line 2402
>   if (tmp___0 == 0) {
> #line 2403
>     kref_get(& tconn->kref);
> #line 2404
>     goto found;
>   } else {
> 
>   }
> #line 2401
>   __ptr___0 = tconn->all_tconn.next;
> #line 2401
>   _________p1___0 = *((struct list_head * volatile  *)(& __ptr___0));
> #line 2401
>   tmp___1 = debug_lockdep_rcu_enabled();
> #line 2401
>   if (tmp___1 != 0 && ! __warned___0) {
> #line 2401
>     rcu_read_lock_held();
>   } else {
> 
>   }
> #line 2401
>   __mptr___0 = (struct list_head  const  *)_________p1___0;
> #line 2401
>   tconn = (struct drbd_tconn *)__mptr___0 + 0xfffffffffffffff8UL;
>   ldv_53013: ;
> #line 2401
>   if ((unsigned long )(& tconn->all_tconn) != (unsigned long )(& drbd_tconns)) {
> #line 2402
>     goto ldv_53012;
>   } else {
> 
>   }
> #line 2407
>   tconn = 0;
>   found: 
> #line 2409
>   rcu_read_unlock();
> #line 2410
>   return (tconn);
> }
> }
> #line 2413 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> struct drbd_tconn *conn_get_by_addrs(void *my_addr , int my_addr_len , void *peer_addr ,
>                                      int peer_addr_len ) 
> { 
>   struct drbd_tconn *tconn ;
>   struct list_head *__ptr ;
>   struct list_head  const  *__mptr ;
>   struct list_head *_________p1 ;
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
47800a45206,45388
>   struct list_head *__ptr___0 ;
>   struct list_head  const  *__mptr___0 ;
>   struct list_head *_________p1___0 ;
>   bool __warned___0 ;
>   int tmp___2 ;
> 
>   {
> #line 2418
>   rcu_read_lock();
> #line 2419
>   __ptr = drbd_tconns.next;
> #line 2419
>   _________p1 = *((struct list_head * volatile  *)(& __ptr));
> #line 2419
>   tmp = debug_lockdep_rcu_enabled();
> #line 2419
>   if (tmp != 0 && ! __warned) {
> #line 2419
>     rcu_read_lock_held();
>   } else {
> 
>   }
> #line 2419
>   __mptr = (struct list_head  const  *)_________p1;
> #line 2419
>   tconn = (struct drbd_tconn *)__mptr + 0xfffffffffffffff8UL;
> #line 2419
>   goto ldv_53038;
>   ldv_53037: ;
> #line 2420
>   if (tconn->my_addr_len == my_addr_len && tconn->peer_addr_len == peer_addr_len) {
> #line 2420
>     tmp___0 = memcmp((void const   *)(& tconn->my_addr), (void const   *)my_addr,
>                      (size_t )my_addr_len);
> #line 2420
>     if (tmp___0 == 0) {
> #line 2420
>       tmp___1 = memcmp((void const   *)(& tconn->peer_addr), (void const   *)peer_addr,
>                        (size_t )peer_addr_len);
> #line 2420
>       if (tmp___1 == 0) {
> #line 2424
>         kref_get(& tconn->kref);
> #line 2425
>         goto found;
>       } else {
> 
>       }
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 2419
>   __ptr___0 = tconn->all_tconn.next;
> #line 2419
>   _________p1___0 = *((struct list_head * volatile  *)(& __ptr___0));
> #line 2419
>   tmp___2 = debug_lockdep_rcu_enabled();
> #line 2419
>   if (tmp___2 != 0 && ! __warned___0) {
> #line 2419
>     rcu_read_lock_held();
>   } else {
> 
>   }
> #line 2419
>   __mptr___0 = (struct list_head  const  *)_________p1___0;
> #line 2419
>   tconn = (struct drbd_tconn *)__mptr___0 + 0xfffffffffffffff8UL;
>   ldv_53038: ;
> #line 2419
>   if ((unsigned long )(& tconn->all_tconn) != (unsigned long )(& drbd_tconns)) {
> #line 2420
>     goto ldv_53037;
>   } else {
> 
>   }
> #line 2428
>   tconn = 0;
>   found: 
> #line 2430
>   rcu_read_unlock();
> #line 2431
>   return (tconn);
> }
> }
> #line 2434 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> static int drbd_alloc_socket(struct drbd_socket *socket ) 
> { 
>   unsigned long tmp ;
>   unsigned long tmp___0 ;
> 
>   {
> #line 2436
>   tmp = __get_free_pages(208U, 0U);
> #line 2436
>   socket->rbuf = (void *)tmp;
> #line 2437
>   if ((unsigned long )socket->rbuf == (unsigned long )((void *)0)) {
> #line 2438
>     return (-12);
>   } else {
> 
>   }
> #line 2439
>   tmp___0 = __get_free_pages(208U, 0U);
> #line 2439
>   socket->sbuf = (void *)tmp___0;
> #line 2440
>   if ((unsigned long )socket->sbuf == (unsigned long )((void *)0)) {
> #line 2441
>     return (-12);
>   } else {
> 
>   }
> #line 2442
>   return (0);
> }
> }
> #line 2445 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> static void drbd_free_socket(struct drbd_socket *socket ) 
> { 
> 
> 
>   {
> #line 2447
>   free_pages((unsigned long )socket->sbuf, 0U);
> #line 2448
>   free_pages((unsigned long )socket->rbuf, 0U);
> #line 2449
>   return;
> }
> }
> #line 2451 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> void conn_free_crypto(struct drbd_tconn *tconn ) 
> { 
> 
> 
>   {
> #line 2453
>   drbd_free_sock(tconn);
> #line 2455
>   crypto_free_hash(tconn->csums_tfm);
> #line 2456
>   crypto_free_hash(tconn->verify_tfm);
> #line 2457
>   crypto_free_hash(tconn->cram_hmac_tfm);
> #line 2458
>   crypto_free_hash(tconn->integrity_tfm);
> #line 2459
>   crypto_free_hash(tconn->peer_integrity_tfm);
> #line 2460
>   kfree((void const   *)tconn->int_dig_in);
> #line 2461
>   kfree((void const   *)tconn->int_dig_vv);
> #line 2463
>   tconn->csums_tfm = 0;
> #line 2464
>   tconn->verify_tfm = 0;
> #line 2465
>   tconn->cram_hmac_tfm = 0;
> #line 2466
>   tconn->integrity_tfm = 0;
> #line 2467
>   tconn->peer_integrity_tfm = 0;
> #line 2468
>   tconn->int_dig_in = 0;
> #line 2469
>   tconn->int_dig_vv = 0;
> #line 2470
>   return;
> }
> }
> #line 2472 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> int set_resource_options(struct drbd_tconn *tconn , struct res_opts *res_opts ) 
> { 
>   cpumask_var_t new_cpu_mask ;
>   int err ;
>   bool tmp ;
>   int tmp___0 ;
>   bool tmp___1 ;
47801a45390,45469
> 
>   {
> #line 2477
>   tmp = zalloc_cpumask_var(& new_cpu_mask, 208U);
> #line 2477
>   if (tmp) {
> #line 2477
>     tmp___0 = 0;
>   } else {
> #line 2477
>     tmp___0 = 1;
>   }
> #line 2477
>   if (tmp___0) {
> #line 2478
>     return (-12);
>   } else {
> 
>   }
> #line 2485
>   if (nr_cpu_ids > 1 && (int )((signed char )res_opts->cpu_mask[0]) != 0) {
> #line 2487
>     err = bitmap_parse((char const   *)(& res_opts->cpu_mask), 32U, (unsigned long *)(& new_cpu_mask->bits),
>                        nr_cpu_ids);
> #line 2489
>     if (err != 0) {
> #line 2490
>       printk("\fd-con %s: bitmap_parse() failed with %d\n", tconn->name, err);
> #line 2492
>       goto fail;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 2495
>   tconn->res_opts = *res_opts;
> #line 2496
>   tmp___1 = cpumask_equal((struct cpumask  const  *)tconn->cpu_mask, (struct cpumask  const  *)new_cpu_mask);
> #line 2496
>   if (tmp___1) {
> #line 2496
>     tmp___2 = 0;
>   } else {
> #line 2496
>     tmp___2 = 1;
>   }
> #line 2496
>   if (tmp___2) {
> #line 2497
>     cpumask_copy(tconn->cpu_mask, (struct cpumask  const  *)new_cpu_mask);
> #line 2498
>     drbd_calc_cpu_mask(tconn);
> #line 2499
>     tconn->receiver.reset_cpu_mask = 1;
> #line 2500
>     tconn->asender.reset_cpu_mask = 1;
> #line 2501
>     tconn->worker.reset_cpu_mask = 1;
>   } else {
> 
>   }
> #line 2503
>   err = 0;
>   fail: 
> #line 2506
>   free_cpumask_var(new_cpu_mask);
> #line 2507
>   return (err);
> }
> }
> #line 2512 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> struct drbd_tconn *conn_create(char const   *name , struct res_opts *res_opts ) 
> { 
>   struct drbd_tconn *tconn ;
>   void *tmp ;
>   int tmp___0 ;
>   int tmp___1 ;
>   bool tmp___2 ;
47803c45471
<   void *tmp___4 ;
---
>   int tmp___4 ;
47804a45473,45479
>   struct lock_class_key __key ;
>   struct lock_class_key __key___0 ;
>   struct lock_class_key __key___1 ;
>   struct lock_class_key __key___2 ;
>   struct lock_class_key __key___3 ;
>   struct lock_class_key __key___4 ;
>   struct lock_class_key __key___5 ;
47807,47813c45482,45488
< #line 3675
<   tmp = kzalloc(4736UL, 208U);
< #line 3675
<   mdev = (struct drbd_conf *)tmp;
< #line 3676
<   if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
< #line 3677
---
> #line 2516
>   tmp = kzalloc(2392UL, 208U);
> #line 2516
>   tconn = (struct drbd_tconn *)tmp;
> #line 2517
>   if ((unsigned long )tconn == (unsigned long )((struct drbd_tconn *)0)) {
> #line 2518
47818,47823c45493,45498
< #line 3678
<   tmp___0 = zalloc_cpumask_var(& mdev->cpu_mask, 208U);
< #line 3678
<   if (tmp___0) {
< #line 3678
<     tmp___1 = 0;
---
> #line 2520
>   tconn->name = kstrdup(name, 208U);
> #line 2521
>   if ((unsigned long )tconn->name == (unsigned long )((char *)0)) {
> #line 2522
>     goto fail;
47825,47826c45500
< #line 3678
<     tmp___1 = 1;
---
> 
47828,47831c45502,45714
< #line 3678
<   if (tmp___1) {
< #line 3679
<     goto out_no_cpumask;
---
> #line 2524
>   tmp___0 = drbd_alloc_socket(& tconn->data);
> #line 2524
>   if (tmp___0 != 0) {
> #line 2525
>     goto fail;
>   } else {
> 
>   }
> #line 2526
>   tmp___1 = drbd_alloc_socket(& tconn->meta);
> #line 2526
>   if (tmp___1 != 0) {
> #line 2527
>     goto fail;
>   } else {
> 
>   }
> #line 2529
>   tmp___2 = zalloc_cpumask_var(& tconn->cpu_mask, 208U);
> #line 2529
>   if (tmp___2) {
> #line 2529
>     tmp___3 = 0;
>   } else {
> #line 2529
>     tmp___3 = 1;
>   }
> #line 2529
>   if (tmp___3) {
> #line 2530
>     goto fail;
>   } else {
> 
>   }
> #line 2532
>   tmp___4 = set_resource_options(tconn, res_opts);
> #line 2532
>   if (tmp___4 != 0) {
> #line 2533
>     goto fail;
>   } else {
> 
>   }
> #line 2535
>   tmp___5 = kzalloc(48UL, 208U);
> #line 2535
>   tconn->current_epoch = (struct drbd_epoch *)tmp___5;
> #line 2536
>   if ((unsigned long )tconn->current_epoch == (unsigned long )((struct drbd_epoch *)0)) {
> #line 2537
>     goto fail;
>   } else {
> 
>   }
> #line 2539
>   INIT_LIST_HEAD(& tconn->transfer_log);
> #line 2541
>   INIT_LIST_HEAD(& (tconn->current_epoch)->list);
> #line 2542
>   tconn->epochs = 1U;
> #line 2543
>   spinlock_check(& tconn->epoch_lock);
> #line 2543
>   __raw_spin_lock_init(& tconn->epoch_lock.ldv_6135.rlock, "&(&tconn->epoch_lock)->rlock",
>                        & __key);
> #line 2544
>   tconn->write_ordering = WO_bdev_flush;
> #line 2546
>   tconn->send.seen_any_write_yet = 0;
> #line 2547
>   tconn->send.current_epoch_nr = 0;
> #line 2548
>   tconn->send.current_epoch_writes = 0U;
> #line 2550
>   tconn->cstate = C_STANDALONE;
> #line 2551
>   __mutex_init(& tconn->cstate_mutex, "&tconn->cstate_mutex", & __key___0);
> #line 2552
>   spinlock_check(& tconn->req_lock);
> #line 2552
>   __raw_spin_lock_init(& tconn->req_lock.ldv_6135.rlock, "&(&tconn->req_lock)->rlock",
>                        & __key___1);
> #line 2553
>   __mutex_init(& tconn->conf_update, "&tconn->conf_update", & __key___2);
> #line 2554
>   __init_waitqueue_head(& tconn->ping_wait, "&tconn->ping_wait", & __key___3);
> #line 2555
>   idr_init(& tconn->volumes);
> #line 2557
>   drbd_init_workqueue(& tconn->sender_work);
> #line 2558
>   __mutex_init(& tconn->data.mutex, "&tconn->data.mutex", & __key___4);
> #line 2559
>   __mutex_init(& tconn->meta.mutex, "&tconn->meta.mutex", & __key___5);
> #line 2561
>   drbd_thread_init(tconn, & tconn->receiver, & drbdd_init, (char *)"receiver");
> #line 2562
>   drbd_thread_init(tconn, & tconn->worker, & drbd_worker, (char *)"worker");
> #line 2563
>   drbd_thread_init(tconn, & tconn->asender, & drbd_asender, (char *)"asender");
> #line 2565
>   kref_init(& tconn->kref);
> #line 2566
>   list_add_tail_rcu(& tconn->all_tconn, & drbd_tconns);
> #line 2568
>   return (tconn);
>   fail: 
> #line 2571
>   kfree((void const   *)tconn->current_epoch);
> #line 2572
>   free_cpumask_var(tconn->cpu_mask);
> #line 2573
>   drbd_free_socket(& tconn->meta);
> #line 2574
>   drbd_free_socket(& tconn->data);
> #line 2575
>   kfree((void const   *)tconn->name);
> #line 2576
>   kfree((void const   *)tconn);
> #line 2578
>   return (0);
> }
> }
> #line 2581 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> void conn_destroy(struct kref *kref ) 
> { 
>   struct drbd_tconn *tconn ;
>   struct kref  const  *__mptr ;
>   int tmp ;
>   int tmp___0 ;
> 
>   {
> #line 2583
>   __mptr = (struct kref  const  *)kref;
> #line 2583
>   tconn = (struct drbd_tconn *)__mptr + 0xffffffffffffffe8UL;
> #line 2585
>   tmp___0 = atomic_read((atomic_t const   *)(& (tconn->current_epoch)->epoch_size));
> #line 2585
>   if (tmp___0 != 0) {
> #line 2586
>     tmp = atomic_read((atomic_t const   *)(& (tconn->current_epoch)->epoch_size));
> #line 2586
>     printk("\vd-con %s: epoch_size:%d\n", tconn->name, tmp);
>   } else {
> 
>   }
> #line 2587
>   kfree((void const   *)tconn->current_epoch);
> #line 2589
>   idr_destroy(& tconn->volumes);
> #line 2591
>   free_cpumask_var(tconn->cpu_mask);
> #line 2592
>   drbd_free_socket(& tconn->meta);
> #line 2593
>   drbd_free_socket(& tconn->data);
> #line 2594
>   kfree((void const   *)tconn->name);
> #line 2595
>   kfree((void const   *)tconn->int_dig_in);
> #line 2596
>   kfree((void const   *)tconn->int_dig_vv);
> #line 2597
>   kfree((void const   *)tconn);
> #line 2598
>   return;
> }
> }
> #line 2600 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> enum drbd_ret_code conn_new_minor(struct drbd_tconn *tconn , unsigned int minor ,
>                                   int vnr ) 
> { 
>   struct drbd_conf *mdev ;
>   struct gendisk *disk ;
>   struct request_queue *q ;
>   int vnr_got ;
>   int minor_got ;
>   enum drbd_ret_code err ;
>   void *tmp ;
>   int tmp___0 ;
>   struct rb_root __constr_expr_0 ;
>   struct rb_root __constr_expr_1 ;
>   int tmp___1 ;
>   int tmp___2 ;
>   int tmp___3 ;
>   int tmp___4 ;
> 
>   {
> #line 2605
>   vnr_got = vnr;
> #line 2606
>   minor_got = (int )minor;
> #line 2607
>   err = ERR_NOMEM;
> #line 2609
>   mdev = minor_to_mdev(minor);
> #line 2610
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 2611
>     return (ERR_MINOR_EXISTS);
>   } else {
> 
>   }
> #line 2614
>   tmp = kzalloc(2160UL, 208U);
> #line 2614
>   mdev = (struct drbd_conf *)tmp;
> #line 2615
>   if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
> #line 2616
>     return (ERR_NOMEM);
47835c45718,45722
< #line 3681
---
> #line 2618
>   kref_get(& tconn->kref);
> #line 2619
>   mdev->tconn = tconn;
> #line 2621
47837c45724,45726
< #line 3683
---
> #line 2622
>   mdev->vnr = vnr;
> #line 2624
47839c45728
< #line 3685
---
> #line 2626
47841c45730
< #line 3686
---
> #line 2627
47843c45732
< #line 3687
---
> #line 2628
47848c45737
< #line 3688
---
> #line 2629
47850c45739
< #line 3689
---
> #line 2630
47852c45741
< #line 3691
---
> #line 2632
47854c45743
< #line 3692
---
> #line 2633
47856c45745
< #line 3693
---
> #line 2634
47861c45750
< #line 3694
---
> #line 2635
47863c45752
< #line 3696
---
> #line 2637
47865c45754
< #line 3698
---
> #line 2639
47867c45756
< #line 3699
---
> #line 2640
47869c45758
< #line 3700
---
> #line 2641
47871c45760
< #line 3701
---
> #line 2642
47873c45762
< #line 3702
---
> #line 2643
47875c45764
< #line 3703
---
> #line 2644
47877c45766
< #line 3705
---
> #line 2646
47879c45768
< #line 3707
---
> #line 2648
47881c45770
< #line 3709
---
> #line 2650
47883c45772
< #line 3710
---
> #line 2651
47885c45774
< #line 3712
---
> #line 2653
47887c45776
< #line 3713
---
> #line 2654
47889c45778
< #line 3716
---
> #line 2657
47891c45780
< #line 3717
---
> #line 2658
47893c45782
< #line 3718
---
> #line 2659
47895,47897c45784,45786
< #line 3719
<   q->queue_lock = & mdev->req_lock;
< #line 3721
---
> #line 2660
>   q->queue_lock = & (mdev->tconn)->req_lock;
> #line 2662
47899c45788
< #line 3722
---
> #line 2663
47901c45790
< #line 3723
---
> #line 2664
47906,47910c45795,45799
< #line 3725
<   tmp___2 = drbd_bm_init(mdev);
< #line 3725
<   if (tmp___2 != 0) {
< #line 3726
---
> #line 2666
>   tmp___0 = drbd_bm_init(mdev);
> #line 2666
>   if (tmp___0 != 0) {
> #line 2667
47915,47917c45804,45843
< #line 3728
<   tmp___3 = tl_init(mdev);
< #line 3728
---
> #line 2668
>   __constr_expr_0.rb_node = 0;
> #line 2668
>   mdev->read_requests = __constr_expr_0;
> #line 2669
>   __constr_expr_1.rb_node = 0;
> #line 2669
>   mdev->write_requests = __constr_expr_1;
> #line 2671
>   tmp___1 = idr_pre_get(& minors, 208U);
> #line 2671
>   if (tmp___1 == 0) {
> #line 2672
>     goto out_no_minor_idr;
>   } else {
> 
>   }
> #line 2673
>   tmp___2 = idr_get_new_above(& minors, (void *)mdev, (int )minor, & minor_got);
> #line 2673
>   if (tmp___2 != 0) {
> #line 2674
>     goto out_no_minor_idr;
>   } else {
> 
>   }
> #line 2675
>   if ((unsigned int )minor_got != minor) {
> #line 2676
>     err = ERR_MINOR_EXISTS;
> #line 2677
>     drbd_msg_put_info("requested minor exists already");
> #line 2678
>     goto out_idr_remove_minor;
>   } else {
> 
>   }
> #line 2681
>   tmp___3 = idr_pre_get(& tconn->volumes, 208U);
> #line 2681
47919,47920c45845,45846
< #line 3729
<     goto out_no_tl;
---
> #line 2682
>     goto out_idr_remove_minor;
47924,47931c45850,45866
< #line 3731
<   tmp___4 = kzalloc(120UL, 208U);
< #line 3731
<   mdev->app_reads_hash = (struct hlist_head *)tmp___4;
< #line 3732
<   if ((unsigned long )mdev->app_reads_hash == (unsigned long )((struct hlist_head *)0)) {
< #line 3733
<     goto out_no_app_reads;
---
> #line 2683
>   tmp___4 = idr_get_new_above(& tconn->volumes, (void *)mdev, vnr, & vnr_got);
> #line 2683
>   if (tmp___4 != 0) {
> #line 2684
>     goto out_idr_remove_minor;
>   } else {
> 
>   }
> #line 2685
>   if (vnr_got != vnr) {
> #line 2686
>     err = ERR_INVALID_REQUEST;
> #line 2687
>     drbd_msg_put_info("requested volume exists already");
> #line 2688
>     goto out_idr_remove_vol;
47935,47942c45870,45879
< #line 3735
<   tmp___5 = kzalloc(40UL, 208U);
< #line 3735
<   mdev->current_epoch = (struct drbd_epoch *)tmp___5;
< #line 3736
<   if ((unsigned long )mdev->current_epoch == (unsigned long )((struct drbd_epoch *)0)) {
< #line 3737
<     goto out_no_epoch;
---
> #line 2690
>   add_disk(disk);
> #line 2691
>   kref_init(& mdev->kref);
> #line 2694
>   mdev->state.ldv_50103.conn = (unsigned char )tconn->cstate;
> #line 2695
>   if ((unsigned int )*((unsigned short *)mdev + 374UL) == 144U) {
> #line 2696
>     drbd_connected(mdev);
47946,47959c45883,45894
< #line 3739
<   INIT_LIST_HEAD(& (mdev->current_epoch)->list);
< #line 3740
<   mdev->epochs = 1U;
< #line 3742
<   return (mdev);
<   out_no_epoch: 
< #line 3747
<   kfree((void const   *)mdev->app_reads_hash);
<   out_no_app_reads: 
< #line 3749
<   tl_cleanup(mdev);
<   out_no_tl: 
< #line 3751
---
> #line 2698
>   return (NO_ERROR);
>   out_idr_remove_vol: 
> #line 2701
>   idr_remove(& tconn->volumes, vnr_got);
>   out_idr_remove_minor: 
> #line 2703
>   idr_remove(& minors, minor_got);
> #line 2704
>   synchronize_rcu();
>   out_no_minor_idr: 
> #line 2706
47962c45897
< #line 3753
---
> #line 2708
47965c45900
< #line 3755
---
> #line 2710
47968c45903
< #line 3757
---
> #line 2712
47971,48009c45906
< #line 3759
<   free_cpumask_var(mdev->cpu_mask);
<   out_no_cpumask: 
< #line 3761
<   kfree((void const   *)mdev);
< #line 3762
<   return (0);
< }
< }
< #line 3767 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void drbd_free_mdev(struct drbd_conf *mdev ) 
< { 
< 
< 
<   {
< #line 3769
<   kfree((void const   *)mdev->current_epoch);
< #line 3770
<   kfree((void const   *)mdev->app_reads_hash);
< #line 3771
<   tl_cleanup(mdev);
< #line 3772
<   if ((unsigned long )mdev->bitmap != (unsigned long )((struct drbd_bitmap *)0)) {
< #line 3773
<     drbd_bm_cleanup(mdev);
<   } else {
< 
<   }
< #line 3774
<   __free_pages(mdev->md_io_page, 0U);
< #line 3775
<   put_disk(mdev->vdisk);
< #line 3776
<   blk_cleanup_queue(mdev->rq_queue);
< #line 3777
<   free_cpumask_var(mdev->cpu_mask);
< #line 3778
<   drbd_free_tl_hash(mdev);
< #line 3779
---
> #line 2714
48011,48012c45908,45911
< #line 3780
<   return;
---
> #line 2715
>   kref_put(& tconn->kref, & conn_destroy);
> #line 2716
>   return (err);
48015c45914
< #line 3783 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 2719 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
48020d45918
<   void *tmp ;
48021a45920,45925
>   struct lock_class_key __key___1 ;
>   char const   *__lock_name ;
>   struct workqueue_struct *tmp ;
>   struct lock_class_key __key___2 ;
>   atomic_long_t __constr_expr_0 ;
>   struct lock_class_key __key___3 ;
48025,48027c45929,45931
< #line 3794
<   if (minor_count == 0U || minor_count > 256U) {
< #line 3795
---
> #line 2723
>   if (minor_count == 0U || minor_count > 255U) {
> #line 2724
48029c45933
< #line 3798
---
> #line 2727
48034,48036c45938,45940
< #line 3804
<   err = drbd_nl_init();
< #line 3805
---
> #line 2733
>   err = register_blkdev(147U, "drbd");
> #line 2734
48038c45942,45944
< #line 3806
---
> #line 2735
>     printk("\vdrbd: unable to register block device major %d\n", 147);
> #line 2738
48043,48045c45949,45951
< #line 3808
<   err = register_blkdev(147U, "drbd");
< #line 3809
---
> #line 2741
>   err = drbd_genl_register();
> #line 2742
48047,48050c45953,45956
< #line 3810
<     printk("\vdrbd: unable to register block device major %d\n", 147);
< #line 3813
<     return (err);
---
> #line 2743
>     printk("\vdrbd: unable to register generic netlink family\n");
> #line 2744
>     goto fail;
48054c45960
< #line 3816
---
> #line 2748
48056c45962
< #line 3821
---
> #line 2753
48058c45964
< #line 3823
---
> #line 2755
48060c45966
< #line 3825
---
> #line 2757
48062,48073c45968,45970
< #line 3826
<   tmp = kzalloc((unsigned long )minor_count * 8UL, 208U);
< #line 3826
<   minor_table = (struct drbd_conf **)tmp;
< #line 3828
<   if ((unsigned long )minor_table == (unsigned long )((struct drbd_conf **)0)) {
< #line 3829
<     goto Enomem;
<   } else {
< 
<   }
< #line 3831
---
> #line 2758
>   idr_init(& minors);
> #line 2760
48075c45972
< #line 3832
---
> #line 2761
48077,48078c45974,45975
< #line 3833
<     goto Enomem;
---
> #line 2762
>     goto fail;
48082c45979
< #line 3835
---
> #line 2764
48084c45981
< #line 3836
---
> #line 2765
48086c45983
< #line 3837
---
> #line 2766
48088,48089c45985,45986
< #line 3838
<     goto Enomem;
---
> #line 2767
>     goto fail;
48093c45990
< #line 3841
---
> #line 2770
48095,48098c45992,46029
< #line 3843
<   printk("\016drbd: initialized. Version: 8.3.13 (api:%d/proto:%d-%d)\n", 88, 86,
<          97);
< #line 3846
---
> #line 2771
>   INIT_LIST_HEAD(& drbd_tconns);
> #line 2773
>   __lock_name = "drbd-reissue";
> #line 2773
>   tmp = __alloc_workqueue_key("drbd-reissue", 10U, 1, & __key___1, __lock_name);
> #line 2773
>   retry.wq = tmp;
> #line 2774
>   if ((unsigned long )retry.wq == (unsigned long )((struct workqueue_struct *)0)) {
> #line 2775
>     printk("\vdrbd: unable to create retry workqueue\n");
> #line 2776
>     goto fail;
>   } else {
> 
>   }
> #line 2778
>   __init_work(& retry.worker, 0);
> #line 2778
>   __constr_expr_0.counter = 4195328L;
> #line 2778
>   retry.worker.data = __constr_expr_0;
> #line 2778
>   lockdep_init_map(& retry.worker.lockdep_map, "(&retry.worker)", & __key___2, 0);
> #line 2778
>   INIT_LIST_HEAD(& retry.worker.entry);
> #line 2778
>   retry.worker.func = & do_retry;
> #line 2779
>   spinlock_check(& retry.lock);
> #line 2779
>   __raw_spin_lock_init(& retry.lock.ldv_6135.rlock, "&(&retry.lock)->rlock", & __key___3);
> #line 2780
>   INIT_LIST_HEAD(& retry.writes);
> #line 2782
>   printk("\016drbd: initialized. Version: 8.4.2 (api:%d/proto:%d-%d)\n", 1, 86, 101);
> #line 2785
48100c46031
< #line 3846
---
> #line 2785
48102c46033
< #line 3847
---
> #line 2786
48104,48106c46035
< #line 3849
<   printk("\016drbd: minor_table @ 0x%p\n", minor_table);
< #line 3851
---
> #line 2789
48108,48109c46037,46038
<   Enomem: 
< #line 3854
---
>   fail: 
> #line 2792
48111c46040
< #line 3855
---
> #line 2793
48113c46042
< #line 3857
---
> #line 2795
48116c46045
< #line 3859
---
> #line 2797
48119c46048
< #line 3860
---
> #line 2798
48123c46052
< #line 3863 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 2801 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
48129c46058
< #line 3865
---
> #line 2803
48131c46060
< #line 3866
---
> #line 2804
48136c46065
< #line 3868
---
> #line 2806
48138c46067
< #line 3869
---
> #line 2807
48140c46069
< #line 3871
---
> #line 2809
48142c46071
< #line 3872
---
> #line 2810
48146,48147c46075,46076
< #line 3874 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void drbd_free_sock(struct drbd_conf *mdev ) 
---
> #line 2812 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> void drbd_free_sock(struct drbd_tconn *tconn ) 
48152,48163c46081,46092
< #line 3876
<   if ((unsigned long )mdev->data.socket != (unsigned long )((struct socket *)0)) {
< #line 3877
<     ldv_mutex_lock_225(& mdev->data.mutex);
< #line 3878
<     kernel_sock_shutdown(mdev->data.socket, SHUT_RDWR);
< #line 3879
<     sock_release(mdev->data.socket);
< #line 3880
<     mdev->data.socket = 0;
< #line 3881
<     ldv_mutex_unlock_226(& mdev->data.mutex);
---
> #line 2814
>   if ((unsigned long )tconn->data.socket != (unsigned long )((struct socket *)0)) {
> #line 2815
>     mutex_lock_nested(& tconn->data.mutex, 0U);
> #line 2816
>     kernel_sock_shutdown(tconn->data.socket, SHUT_RDWR);
> #line 2817
>     sock_release(tconn->data.socket);
> #line 2818
>     tconn->data.socket = 0;
> #line 2819
>     mutex_unlock(& tconn->data.mutex);
48167,48178c46096,46107
< #line 3883
<   if ((unsigned long )mdev->meta.socket != (unsigned long )((struct socket *)0)) {
< #line 3884
<     ldv_mutex_lock_227(& mdev->meta.mutex);
< #line 3885
<     kernel_sock_shutdown(mdev->meta.socket, SHUT_RDWR);
< #line 3886
<     sock_release(mdev->meta.socket);
< #line 3887
<     mdev->meta.socket = 0;
< #line 3888
<     ldv_mutex_unlock_228(& mdev->meta.mutex);
---
> #line 2821
>   if ((unsigned long )tconn->meta.socket != (unsigned long )((struct socket *)0)) {
> #line 2822
>     mutex_lock_nested(& tconn->meta.mutex, 0U);
> #line 2823
>     kernel_sock_shutdown(tconn->meta.socket, SHUT_RDWR);
> #line 2824
>     sock_release(tconn->meta.socket);
> #line 2825
>     tconn->meta.socket = 0;
> #line 2826
>     mutex_unlock(& tconn->meta.mutex);
48182c46111
< #line 3890
---
> #line 2828
48186,48187c46115,46116
< #line 3893 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void drbd_free_resources(struct drbd_conf *mdev ) 
---
> #line 2832 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> void conn_md_sync(struct drbd_tconn *tconn ) 
48189c46118,46121
< 
---
>   struct drbd_conf *mdev ;
>   int vnr ;
>   void *tmp ;
>   void *tmp___0 ;
48192,48218c46124,46161
< #line 3895
<   crypto_free_hash(mdev->csums_tfm);
< #line 3896
<   mdev->csums_tfm = 0;
< #line 3897
<   crypto_free_hash(mdev->verify_tfm);
< #line 3898
<   mdev->verify_tfm = 0;
< #line 3899
<   crypto_free_hash(mdev->cram_hmac_tfm);
< #line 3900
<   mdev->cram_hmac_tfm = 0;
< #line 3901
<   crypto_free_hash(mdev->integrity_w_tfm);
< #line 3902
<   mdev->integrity_w_tfm = 0;
< #line 3903
<   crypto_free_hash(mdev->integrity_r_tfm);
< #line 3904
<   mdev->integrity_r_tfm = 0;
< #line 3906
<   drbd_free_sock(mdev);
< #line 3908
<   drbd_free_bc(mdev->ldev);
< #line 3908
<   mdev->ldev = 0;
< #line 3909
---
> #line 2837
>   rcu_read_lock();
> #line 2838
>   vnr = 0;
> #line 2838
>   tmp = idr_get_next(& tconn->volumes, & vnr);
> #line 2838
>   mdev = (struct drbd_conf *)tmp;
> #line 2838
>   goto ldv_53120;
>   ldv_53119: 
> #line 2839
>   kref_get(& mdev->kref);
> #line 2840
>   rcu_read_unlock();
> #line 2841
>   drbd_md_sync(mdev);
> #line 2842
>   kref_put(& mdev->kref, & drbd_minor_destroy);
> #line 2843
>   rcu_read_lock();
> #line 2838
>   vnr = vnr + 1;
> #line 2838
>   tmp___0 = idr_get_next(& tconn->volumes, & vnr);
> #line 2838
>   mdev = (struct drbd_conf *)tmp___0;
>   ldv_53120: ;
> #line 2838
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 2839
>     goto ldv_53119;
>   } else {
> 
>   }
> #line 2845
>   rcu_read_unlock();
> #line 2846
48222c46165
< #line 3937 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 2870 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
48246c46189
< #line 3943
---
> #line 2876
48248,48250c46191,46193
< #line 3945
<   tmp = drbd_test_and_clear_flag(mdev, MD_DIRTY);
< #line 3945
---
> #line 2878
>   tmp = test_and_clear_bit(1, (unsigned long volatile   *)(& mdev->flags));
> #line 2878
48252c46195
< #line 3946
---
> #line 2879
48257c46200
< #line 3950
---
> #line 2883
48259c46202
< #line 3950
---
> #line 2883
48261c46204
< #line 3951
---
> #line 2884
48266c46209
< #line 3953
---
> #line 2886
48268c46211
< #line 3953
---
> #line 2886
48270c46213
< #line 3954
---
> #line 2887
48272c46215
< #line 3955
---
> #line 2888
48277c46220
< #line 3957
---
> #line 2890
48279c46222
< #line 3959
---
> #line 2892
48281c46224
< #line 3959
---
> #line 2892
48283c46226
< #line 3959
---
> #line 2892
48285c46228
< #line 3960
---
> #line 2893
48287,48290c46230,46233
< #line 3960
<   goto ldv_52856;
<   ldv_52855: 
< #line 3961
---
> #line 2893
>   goto ldv_53144;
>   ldv_53143: 
> #line 2894
48292c46235
< #line 3961
---
> #line 2894
48294c46237
< #line 3960
---
> #line 2893
48296,48297c46239,46240
<   ldv_52856: ;
< #line 3960
---
>   ldv_53144: ;
> #line 2893
48299,48300c46242,46243
< #line 3961
<     goto ldv_52855;
---
> #line 2894
>     goto ldv_53143;
48304c46247
< #line 3962
---
> #line 2895
48306c46249
< #line 3962
---
> #line 2895
48308,48310c46251,46253
< #line 3963
<   buffer->magic = 1795323011U;
< #line 3965
---
> #line 2896
>   buffer->magic = 1812100227U;
> #line 2898
48312c46255
< #line 3965
---
> #line 2898
48314c46257
< #line 3966
---
> #line 2899
48316c46259
< #line 3966
---
> #line 2899
48318c46261
< #line 3967
---
> #line 2900
48320c46263
< #line 3967
---
> #line 2900
48322c46265
< #line 3968
---
> #line 2901
48324c46267
< #line 3969
---
> #line 2902
48326c46269
< #line 3969
---
> #line 2902
48328c46271
< #line 3971
---
> #line 2904
48330c46273
< #line 3971
---
> #line 2904
48332c46275
< #line 3972
---
> #line 2905
48334c46277
< #line 3972
---
> #line 2905
48336c46279
< #line 3974
---
> #line 2907
48338c46281
< #line 3974
---
> #line 2907
48340c46283
< #line 3974
---
> #line 2907
48342,48343c46285,46286
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             3974);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared",
>             2907);
48347c46290
< #line 3975
---
> #line 2908
48349c46292
< #line 3977
---
> #line 2910
48351,48353c46294,46296
< #line 3977
<   if (tmp___13 == 0) {
< #line 3979
---
> #line 2910
>   if (tmp___13 != 0) {
> #line 2912
48355c46298
< #line 3980
---
> #line 2913
48360c46303
< #line 3985
---
> #line 2918
48362c46305
< #line 3985
---
> #line 2918
48364c46307
< #line 3987
---
> #line 2920
48367c46310
< #line 3989
---
> #line 2922
48369c46312
< #line 3990
---
> #line 2923
48373c46316
< #line 4000 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 2933 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
48376a46320,46321
>   u32 magic ;
>   u32 flags ;
48391c46336
<   __u64 tmp___11 ;
---
>   __u32 tmp___11 ;
48393c46338
<   __u32 tmp___13 ;
---
>   __u64 tmp___13 ;
48402c46347
< #line 4003
---
> #line 2937
48404c46349
< #line 4005
---
> #line 2939
48406c46351
< #line 4005
---
> #line 2939
48408c46353
< #line 4006
---
> #line 2940
48413c46358
< #line 4008
---
> #line 2942
48415c46360
< #line 4008
---
> #line 2942
48417c46362
< #line 4009
---
> #line 2943
48419c46364
< #line 4010
---
> #line 2944
48424c46369
< #line 4012
---
> #line 2946
48426,48428c46371,46373
< #line 4012
<   if (tmp___1 == 0) {
< #line 4015
---
> #line 2946
>   if (tmp___1 != 0) {
> #line 2949
48430c46375
< #line 4016
---
> #line 2950
48432c46377
< #line 4017
---
> #line 2951
48437c46382
< #line 4020
---
> #line 2954
48439,48443c46384,46411
< #line 4020
<   if (tmp___2 != 2205418091U) {
< #line 4021
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Error while reading metadata, magic not found.\n");
< #line 4022
---
> #line 2954
>   magic = tmp___2;
> #line 2955
>   tmp___3 = __fswab32(buffer->flags);
> #line 2955
>   flags = tmp___3;
> #line 2956
>   if (magic == 2205418092U || (magic == 2205418091U && (flags & 128U) == 0U)) {
> #line 2959
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Found unclean meta data. Did you \"drbdadm apply-al\"?\n");
> #line 2960
>     rv = 165;
> #line 2961
>     goto err;
>   } else {
> 
>   }
> #line 2963
>   if (magic != 2205418091U) {
> #line 2964
>     if (magic == 2205418090U) {
> #line 2965
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Found old (0.7) meta data magic. Did you \"drbdadm create-md\"?\n");
>     } else {
> #line 2967
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Meta data magic not found. Did you \"drbdadm create-md\"?\n");
>     }
> #line 2968
48445c46413
< #line 4023
---
> #line 2969
48450,48456c46418,46424
< #line 4025
<   tmp___4 = __fswab32(buffer->al_offset);
< #line 4025
<   if (tmp___4 != (unsigned int )bdev->md.al_offset) {
< #line 4026
<     tmp___3 = __fswab32(buffer->al_offset);
< #line 4026
---
> #line 2971
>   tmp___5 = __fswab32(buffer->al_offset);
> #line 2971
>   if (tmp___5 != (unsigned int )bdev->md.al_offset) {
> #line 2972
>     tmp___4 = __fswab32(buffer->al_offset);
> #line 2972
48458,48459c46426,46427
<             tmp___3, bdev->md.al_offset);
< #line 4028
---
>             tmp___4, bdev->md.al_offset);
> #line 2974
48461c46429
< #line 4029
---
> #line 2975
48466,48472c46434,46440
< #line 4031
<   tmp___6 = __fswab32(buffer->bm_offset);
< #line 4031
<   if (tmp___6 != (unsigned int )bdev->md.bm_offset) {
< #line 4032
<     tmp___5 = __fswab32(buffer->bm_offset);
< #line 4032
---
> #line 2977
>   tmp___7 = __fswab32(buffer->bm_offset);
> #line 2977
>   if (tmp___7 != (unsigned int )bdev->md.bm_offset) {
> #line 2978
>     tmp___6 = __fswab32(buffer->bm_offset);
> #line 2978
48474,48475c46442,46443
<             tmp___5, bdev->md.bm_offset);
< #line 4034
---
>             tmp___6, bdev->md.bm_offset);
> #line 2980
48477c46445
< #line 4035
---
> #line 2981
48482,48488c46450,46456
< #line 4037
<   tmp___8 = __fswab32(buffer->md_size_sect);
< #line 4037
<   if (tmp___8 != bdev->md.md_size_sect) {
< #line 4038
<     tmp___7 = __fswab32(buffer->md_size_sect);
< #line 4038
---
> #line 2983
>   tmp___9 = __fswab32(buffer->md_size_sect);
> #line 2983
>   if (tmp___9 != bdev->md.md_size_sect) {
> #line 2984
>     tmp___8 = __fswab32(buffer->md_size_sect);
> #line 2984
48490,48491c46458,46459
<             tmp___7, bdev->md.md_size_sect);
< #line 4040
---
>             tmp___8, bdev->md.md_size_sect);
> #line 2986
48493c46461
< #line 4041
---
> #line 2987
48498,48504c46466,46472
< #line 4044
<   tmp___10 = __fswab32(buffer->bm_bytes_per_bit);
< #line 4044
<   if (tmp___10 != 4096U) {
< #line 4045
<     tmp___9 = __fswab32(buffer->bm_bytes_per_bit);
< #line 4045
---
> #line 2990
>   tmp___11 = __fswab32(buffer->bm_bytes_per_bit);
> #line 2990
>   if (tmp___11 != 4096U) {
> #line 2991
>     tmp___10 = __fswab32(buffer->bm_bytes_per_bit);
> #line 2991
48506,48507c46474,46475
<             tmp___9, 4096);
< #line 4047
---
>             tmp___10, 4096);
> #line 2993
48509c46477
< #line 4048
---
> #line 2994
48514,48518c46482,46486
< #line 4051
<   tmp___11 = __fswab64(buffer->la_size);
< #line 4051
<   bdev->md.la_size_sect = tmp___11;
< #line 4052
---
> #line 2997
>   tmp___12 = __fswab64(buffer->la_size);
> #line 2997
>   bdev->md.la_size_sect = tmp___12;
> #line 2998
48520,48527c46488,46495
< #line 4052
<   goto ldv_52869;
<   ldv_52868: 
< #line 4053
<   tmp___12 = __fswab64(buffer->uuid[i]);
< #line 4053
<   bdev->md.uuid[i] = tmp___12;
< #line 4052
---
> #line 2998
>   goto ldv_53159;
>   ldv_53158: 
> #line 2999
>   tmp___13 = __fswab64(buffer->uuid[i]);
> #line 2999
>   bdev->md.uuid[i] = tmp___13;
> #line 2998
48529,48530c46497,46498
<   ldv_52869: ;
< #line 4052
---
>   ldv_53159: ;
> #line 2998
48532,48533c46500,46501
< #line 4053
<     goto ldv_52868;
---
> #line 2999
>     goto ldv_53158;
48537,48545c46505,46509
< #line 4054
<   tmp___13 = __fswab32(buffer->flags);
< #line 4054
<   bdev->md.flags = tmp___13;
< #line 4055
<   tmp___14 = __fswab32(buffer->al_nr_extents);
< #line 4055
<   mdev->sync_conf.al_extents = (int )tmp___14;
< #line 4056
---
> #line 3000
>   tmp___14 = __fswab32(buffer->flags);
> #line 3000
>   bdev->md.flags = tmp___14;
> #line 3001
48547c46511
< #line 4056
---
> #line 3001
48549,48553c46513,46517
< #line 4058
<   spin_lock_irq(& mdev->req_lock);
< #line 4059
<   if ((int )mdev->state.ldv_39979.conn <= 9) {
< #line 4061
---
> #line 3003
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 3004
>   if ((int )mdev->state.ldv_50103.conn <= 9) {
> #line 3006
48555c46519
< #line 4061
---
> #line 3006
48557c46521
< #line 4062
---
> #line 3007
48559c46523
< #line 4062
---
> #line 3007
48561c46525
< #line 4062
---
> #line 3007
48563c46527
< #line 4063
---
> #line 3008
48568,48576c46532,46533
< #line 4065
<   spin_unlock_irq(& mdev->req_lock);
< #line 4067
<   if (mdev->sync_conf.al_extents <= 6) {
< #line 4068
<     mdev->sync_conf.al_extents = 127;
<   } else {
< 
<   }
---
> #line 3010
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
48578c46535
< #line 4071
---
> #line 3013
48581c46538
< #line 4073
---
> #line 3015
48583c46540
< #line 4075
---
> #line 3017
48587c46544
< #line 4096 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 3038 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
48593,48595c46550,46552
< #line 4098
<   tmp = drbd_test_and_set_flag(mdev, MD_DIRTY);
< #line 4098
---
> #line 3040
>   tmp = test_and_set_bit(1, (unsigned long volatile   *)(& mdev->flags));
> #line 3040
48597c46554
< #line 4099
---
> #line 3041
48602c46559
< #line 4100
---
> #line 3042
48606c46563
< #line 4103 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 3045 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
48612c46569
< #line 4107
---
> #line 3049
48614,48617c46571,46574
< #line 4107
<   goto ldv_52883;
<   ldv_52882: 
< #line 4108
---
> #line 3049
>   goto ldv_53173;
>   ldv_53172: 
> #line 3050
48619c46576
< #line 4107
---
> #line 3049
48621,48622c46578,46579
<   ldv_52883: ;
< #line 4107
---
>   ldv_53173: ;
> #line 3049
48624,48625c46581,46582
< #line 4108
<     goto ldv_52882;
---
> #line 3050
>     goto ldv_53172;
48630c46587
< #line 4112
---
> #line 3054
48634c46591
< #line 4111 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 3053 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
48640c46597
< #line 4113
---
> #line 3055
48642,48644c46599,46601
< #line 4114
<     if ((unsigned int )*((unsigned char *)mdev + 2276UL) == 1U) {
< #line 4115
---
> #line 3056
>     if ((unsigned int )*((unsigned char *)mdev + 748UL) == 1U) {
> #line 3057
48647c46604
< #line 4117
---
> #line 3059
48650c46607
< #line 4119
---
> #line 3061
48655c46612
< #line 4122
---
> #line 3064
48657c46614
< #line 4123
---
> #line 3065
48659c46616
< #line 4124
---
> #line 3066
48663c46620
< #line 4126 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 3068 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
48670c46627
< #line 4129
---
> #line 3071
48672c46629
< #line 4129
---
> #line 3071
48674c46631
< #line 4130
---
> #line 3072
48676c46633
< #line 4131
---
> #line 3073
48678c46635
< #line 4132
---
> #line 3074
48682c46639
< #line 4134 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 3076 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
48689c46646
< #line 4137
---
> #line 3079
48691c46648
< #line 4137
---
> #line 3079
48693c46650
< #line 4138
---
> #line 3080
48695c46652
< #line 4139
---
> #line 3081
48697c46654
< #line 4140
---
> #line 3082
48702c46659
< #line 4142
---
> #line 3084
48704c46661
< #line 4143
---
> #line 3085
48706c46663
< #line 4144
---
> #line 3086
48710c46667
< #line 4153 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 3095 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
48717c46674
< #line 4158
---
> #line 3100
48719c46676
< #line 4160
---
> #line 3102
48721c46678
< #line 4161
---
> #line 3103
48723c46680
< #line 4163
---
> #line 3105
48725c46682
< #line 4164
---
> #line 3106
48731c46688
< #line 4166
---
> #line 3108
48733c46690
< #line 4167
---
> #line 3109
48735c46692
< #line 4168
---
> #line 3110
48737c46694
< #line 4170
---
> #line 3112
48739c46696
< #line 4172
---
> #line 3114
48741c46698
< #line 4173
---
> #line 3115
48745c46702
< #line 4175 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 3117 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
48753c46710
< #line 4178
---
> #line 3120
48755c46712
< #line 4179
---
> #line 3121
48760c46717
< #line 4181
---
> #line 3123
48762c46719
< #line 4181
---
> #line 3123
48764c46721
< #line 4182
---
> #line 3124
48766c46723
< #line 4183
---
> #line 3125
48768c46725
< #line 4184
---
> #line 3126
48770c46727
< #line 4185
---
> #line 3127
48773c46730
< #line 4187
---
> #line 3129
48775c46732
< #line 4188
---
> #line 3130
48777c46734
< #line 4189
---
> #line 3131
48783c46740
< #line 4191
---
> #line 3133
48786c46743
< #line 4193
---
> #line 3135
48788c46745
< #line 4195
---
> #line 3137
48790c46747
< #line 4196
---
> #line 3138
48794c46751
< #line 4204 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 3146 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
48801c46758
< #line 4206
---
> #line 3148
48803c46760
< #line 4208
---
> #line 3150
48805c46762
< #line 4208
---
> #line 3150
48807c46764
< #line 4209
---
> #line 3151
48809c46766
< #line 4210
---
> #line 3152
48811c46768
< #line 4211
---
> #line 3153
48813c46770
< #line 4213
---
> #line 3155
48815c46772
< #line 4215
---
> #line 3157
48817c46774
< #line 4216
---
> #line 3158
48819c46776
< #line 4217
---
> #line 3159
48824c46781
< #line 4220
---
> #line 3162
48829c46786
< #line 4223
---
> #line 3165
48833c46790
< #line 4232 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 3174 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
48840c46797
< #line 4234
---
> #line 3176
48842c46799
< #line 4236
---
> #line 3178
48844c46801
< #line 4237
---
> #line 3179
48846c46803
< #line 4237
---
> #line 3179
48848c46805
< #line 4238
---
> #line 3180
48850c46807
< #line 4239
---
> #line 3181
48852c46809
< #line 4240
---
> #line 3182
48857c46814
< #line 4243
---
> #line 3185
48861,48862c46818,46819
< #line 4246 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static int w_bitmap_io(struct drbd_conf *mdev , struct drbd_work *w , int unused ) 
---
> #line 3188 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> static int w_bitmap_io(struct drbd_work *w , int unused ) 
48865a46823
>   struct drbd_conf *mdev ;
48871c46829
< #line 4248
---
> #line 3190
48873c46831
< #line 4248
---
> #line 3190
48875c46833,46835
< #line 4249
---
> #line 3191
>   mdev = w->ldv_50388.mdev;
> #line 3192
48877c46837
< #line 4251
---
> #line 3194
48879c46839
< #line 4251
---
> #line 3194
48881c46841
< #line 4251
---
> #line 3194
48883,48884c46843,46844
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             4251);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared",
>             3194);
48888c46848
< #line 4253
---
> #line 3196
48890c46850
< #line 4253
---
> #line 3196
48892c46852
< #line 4254
---
> #line 3197
48894c46854
< #line 4255
---
> #line 3198
48896c46856
< #line 4256
---
> #line 3199
48898c46858
< #line 4257
---
> #line 3200
48903,48907c46863,46865
< #line 4260
<   drbd_clear_flag(mdev, BITMAP_IO);
< #line 4261
<   __asm__  volatile   ("": : : "memory");
< #line 4262
---
> #line 3203
>   clear_bit_unlock(9U, (unsigned long volatile   *)(& mdev->flags));
> #line 3204
48909c46867
< #line 4264
---
> #line 3206
48912c46870
< #line 4265
---
> #line 3207
48917,48919c46875,46877
< #line 4267
<   drbd_clear_flag(mdev, BITMAP_IO_QUEUED);
< #line 4268
---
> #line 3209
>   clear_bit(10, (unsigned long volatile   *)(& mdev->flags));
> #line 3210
48921c46879
< #line 4269
---
> #line 3211
48923,48924c46881,46882
< #line 4271
<   return (1);
---
> #line 3213
>   return (0);
48927c46885
< #line 4274 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 3216 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
48933c46891
< #line 4276
---
> #line 3218
48935c46893
< #line 4277
---
> #line 3219
48937c46895
< #line 4278
---
> #line 3220
48939c46897
< #line 4279
---
> #line 3221
48941c46899
< #line 4280
---
> #line 3222
48943c46901
< #line 4280
---
> #line 3222
48945,48956c46903,46905
< #line 4284
<   if ((unsigned long )mdev->md_io_tmpp != (unsigned long )((struct page *)0)) {
< #line 4285
<     __free_pages(mdev->md_io_tmpp, 0U);
< #line 4286
<     mdev->md_io_tmpp = 0;
<   } else {
< 
<   }
< #line 4288
<   drbd_clear_flag(mdev, GO_DISKLESS);
< #line 4289
---
> #line 3226
>   clear_bit(11, (unsigned long volatile   *)(& mdev->flags));
> #line 3227
48960,48961c46909,46910
< #line 4291 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static int w_go_diskless(struct drbd_conf *mdev , struct drbd_work *w , int unused ) 
---
> #line 3229 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> static int w_go_diskless(struct drbd_work *w , int unused ) 
48962a46912
>   struct drbd_conf *mdev ;
48969,48971c46919,46923
< #line 4293
<   if ((unsigned int )*((unsigned char *)mdev + 2277UL) != 4U) {
< #line 4293
---
> #line 3231
>   mdev = w->ldv_50388.mdev;
> #line 3233
>   if ((unsigned int )*((unsigned char *)mdev + 749UL) != 4U) {
> #line 3233
48973,48974c46925,46926
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             4293);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared",
>             3233);
48978,48980c46930,46932
< #line 4308
<   if ((unsigned long )mdev->bitmap != (unsigned long )((struct drbd_bitmap *)0)) {
< #line 4309
---
> #line 3252
>   if ((unsigned long )mdev->bitmap != (unsigned long )((struct drbd_bitmap *)0) && (unsigned long )mdev->ldev != (unsigned long )((struct drbd_backing_dev *)0)) {
> #line 3253
48983c46935
< #line 4309
---
> #line 3253
48985,48987c46937,46939
< #line 4311
<       tmp = drbd_test_flag(mdev, WAS_READ_ERROR);
< #line 4311
---
> #line 3255
>       tmp = constant_test_bit(13U, (unsigned long const volatile   *)(& mdev->flags));
> #line 3255
48989c46941
< #line 4312
---
> #line 3256
48991c46943
< #line 4313
---
> #line 3257
49002c46954
< #line 4318
---
> #line 3262
49004,49006c46956,46958
< #line 4318
<   val.ldv_39979.disk = 0U;
< #line 4318
---
> #line 3262
>   val.ldv_40604.disk = 0U;
> #line 3262
49008,49010c46960,46962
< #line 4318
<   mask.ldv_39979.disk = 15U;
< #line 4318
---
> #line 3262
>   mask.ldv_40604.disk = 15U;
> #line 3262
49012,49013c46964,46965
< #line 4319
<   return (1);
---
> #line 3263
>   return (0);
49016c46968
< #line 4322 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 3266 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
49022,49024c46974,46976
< #line 4324
<   if ((unsigned int )*((unsigned char *)mdev + 2277UL) != 4U) {
< #line 4324
---
> #line 3268
>   if ((unsigned int )*((unsigned char *)mdev + 749UL) != 4U) {
> #line 3268
49026,49027c46978,46979
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             4324);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared",
>             3268);
49031,49033c46983,46985
< #line 4325
<   tmp = drbd_test_and_set_flag(mdev, GO_DISKLESS);
< #line 4325
---
> #line 3269
>   tmp = test_and_set_bit(11, (unsigned long volatile   *)(& mdev->flags));
> #line 3269
49035,49036c46987,46988
< #line 4326
<     drbd_queue_work(& mdev->data.work, & mdev->go_diskless);
---
> #line 3270
>     drbd_queue_work(& (mdev->tconn)->sender_work, & mdev->go_diskless);
49040c46992
< #line 4327
---
> #line 3271
49044c46996
< #line 4341 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 3285 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
49056c47008
< #line 4346
---
> #line 3290
49058,49063c47010,47015
< #line 4346
<   if ((unsigned long )tmp != (unsigned long )mdev->worker.task) {
< #line 4346
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( current == mdev->worker.task ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             4346);
---
> #line 3290
>   if ((unsigned long )tmp != (unsigned long )(mdev->tconn)->worker.task) {
> #line 3290
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( current == mdev->tconn->worker.task ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared",
>             3290);
49067,49069c47019,47021
< #line 4348
<   tmp___0 = drbd_test_flag(mdev, BITMAP_IO_QUEUED);
< #line 4348
---
> #line 3292
>   tmp___0 = constant_test_bit(10U, (unsigned long const volatile   *)(& mdev->flags));
> #line 3292
49071,49074c47023,47026
< #line 4348
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( !drbd_test_flag(mdev, BITMAP_IO_QUEUED) ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             4348);
---
> #line 3292
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( !test_bit(BITMAP_IO_QUEUED, &mdev->flags) ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared",
>             3292);
49078,49080c47030,47032
< #line 4349
<   tmp___1 = drbd_test_flag(mdev, BITMAP_IO);
< #line 4349
---
> #line 3293
>   tmp___1 = constant_test_bit(9U, (unsigned long const volatile   *)(& mdev->flags));
> #line 3293
49082,49085c47034,47037
< #line 4349
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( !drbd_test_flag(mdev, BITMAP_IO) ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             4349);
---
> #line 3293
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( !test_bit(BITMAP_IO, &mdev->flags) ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared",
>             3293);
49089c47041
< #line 4350
---
> #line 3294
49091c47043
< #line 4350
---
> #line 3294
49093c47045
< #line 4350
---
> #line 3294
49095,49096c47047,47048
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             4350);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared",
>             3294);
49100c47052
< #line 4351
---
> #line 3295
49102c47054
< #line 4352
---
> #line 3296
49108c47060
< #line 4355
---
> #line 3299
49110c47062
< #line 4356
---
> #line 3300
49112c47064
< #line 4357
---
> #line 3301
49114c47066
< #line 4358
---
> #line 3302
49116,49120c47068,47072
< #line 4360
<   spin_lock_irq(& mdev->req_lock);
< #line 4361
<   drbd_set_flag(mdev, BITMAP_IO);
< #line 4362
---
> #line 3304
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 3305
>   set_bit(9U, (unsigned long volatile   *)(& mdev->flags));
> #line 3306
49122c47074
< #line 4362
---
> #line 3306
49124,49126c47076,47078
< #line 4363
<     tmp___3 = drbd_test_and_set_flag(mdev, BITMAP_IO_QUEUED);
< #line 4363
---
> #line 3307
>     tmp___3 = test_and_set_bit(10, (unsigned long volatile   *)(& mdev->flags));
> #line 3307
49128,49129c47080,47081
< #line 4364
<       drbd_queue_work(& mdev->data.work, & mdev->bm_io_work.w);
---
> #line 3308
>       drbd_queue_work(& (mdev->tconn)->sender_work, & mdev->bm_io_work.w);
49136,49138c47088,47090
< #line 4366
<   spin_unlock_irq(& mdev->req_lock);
< #line 4367
---
> #line 3310
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 3311
49142c47094
< #line 4378 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 3322 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
49150c47102
< #line 4383
---
> #line 3327
49152,49157c47104,47109
< #line 4383
<   if ((unsigned long )tmp == (unsigned long )mdev->worker.task) {
< #line 4383
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( current != mdev->worker.task ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             4383);
---
> #line 3327
>   if ((unsigned long )tmp == (unsigned long )(mdev->tconn)->worker.task) {
> #line 3327
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( current != mdev->tconn->worker.task ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared",
>             3327);
49161c47113
< #line 4385
---
> #line 3329
49163c47115
< #line 4386
---
> #line 3330
49168c47120
< #line 4388
---
> #line 3332
49170c47122
< #line 4389
---
> #line 3333
49172c47124
< #line 4390
---
> #line 3334
49174c47126
< #line 4392
---
> #line 3336
49176c47128
< #line 4393
---
> #line 3337
49181c47133
< #line 4395
---
> #line 3339
49185c47137
< #line 4398 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 3342 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
49191c47143
< #line 4400
---
> #line 3344
49193c47145
< #line 4401
---
> #line 3345
49195c47147
< #line 4402
---
> #line 3346
49200c47152
< #line 4404
---
> #line 3348
49204c47156
< #line 4406 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 3350 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
49210c47162
< #line 4408
---
> #line 3352
49212c47164
< #line 4409
---
> #line 3353
49214c47166
< #line 4410
---
> #line 3354
49219c47171
< #line 4412
---
> #line 3356
49223c47175
< #line 4413 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 3357 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
49229c47181
< #line 4415
---
> #line 3359
49233c47185
< #line 4418 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 3362 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
49236a47189
>   int tmp ;
49239c47192
< #line 4420
---
> #line 3364
49241,49280c47194,47199
< #line 4422
<   drbd_queue_work_front(& mdev->data.work, & mdev->md_sync_work);
< #line 4423
<   return;
< }
< }
< #line 4425 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static int w_md_sync(struct drbd_conf *mdev , struct drbd_work *w , int unused ) 
< { 
< 
< 
<   {
< #line 4427
<   dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "md_sync_timer expired! Worker calls drbd_md_sync().\n");
< #line 4432
<   drbd_md_sync(mdev);
< #line 4433
<   return (1);
< }
< }
< #line 4453 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static unsigned long _drbd_fault_random(struct fault_random_state *rsp ) 
< { 
<   long refresh ;
<   unsigned long tmp ;
<   __u32 tmp___0 ;
< 
<   {
< #line 4457
<   tmp = rsp->count;
< #line 4457
<   rsp->count = rsp->count - 1UL;
< #line 4457
<   if (tmp == 0UL) {
< #line 4458
<     get_random_bytes((void *)(& refresh), 8);
< #line 4459
<     rsp->state = rsp->state + (unsigned long )refresh;
< #line 4460
<     rsp->count = 10000UL;
---
> #line 3367
>   tmp = list_empty((struct list_head  const  *)(& mdev->md_sync_work.list));
> #line 3367
>   if (tmp != 0) {
> #line 3368
>     drbd_queue_work_front(& (mdev->tconn)->sender_work, & mdev->md_sync_work);
49284,49289c47203,47204
< #line 4462
<   rsp->state = rsp->state * 39916801UL + 479001701UL;
< #line 4463
<   tmp___0 = __fswahw32((__u32 )rsp->state);
< #line 4463
<   return ((unsigned long )tmp___0);
---
> #line 3369
>   return;
49292,49293c47207,47208
< #line 4467 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static char *_drbd_fault_str(unsigned int type ) 
---
> #line 3371 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> static int w_md_sync(struct drbd_work *w , int unused ) 
49295c47210
<   char *_faults[10U] ;
---
>   struct drbd_conf *mdev ;
49298,49319c47213,47220
< #line 4468
<   _faults[0] = (char *)"Meta-data write";
< #line 4468
<   _faults[1] = (char *)"Meta-data read";
< #line 4468
<   _faults[2] = (char *)"Resync write";
< #line 4468
<   _faults[3] = (char *)"Resync read";
< #line 4468
<   _faults[4] = (char *)"Data write";
< #line 4468
<   _faults[5] = (char *)"Data read";
< #line 4468
<   _faults[6] = (char *)"Data read ahead";
< #line 4468
<   _faults[7] = (char *)"BM allocation";
< #line 4468
<   _faults[8] = (char *)"EE allocation";
< #line 4468
<   _faults[9] = (char *)"receive data corruption";
< #line 4481
<   return (type <= 9U ? _faults[type] : (char *)"**Unknown**");
---
> #line 3373
>   mdev = w->ldv_50388.mdev;
> #line 3375
>   dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "md_sync_timer expired! Worker calls drbd_md_sync().\n");
> #line 3380
>   drbd_md_sync(mdev);
> #line 3381
>   return (0);
49322,49323c47223,47224
< #line 4485 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< unsigned int _drbd_insert_fault(struct drbd_conf *mdev , unsigned int type ) 
---
> #line 3384 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> char const   *cmdname(enum drbd_packet cmd ) 
49325,49331c47226
<   struct fault_random_state rrs ;
<   unsigned int ret ;
<   unsigned int tmp ;
<   unsigned long tmp___0 ;
<   int tmp___1 ;
<   char *tmp___2 ;
<   int tmp___3 ;
---
>   char const   *cmdnames[46U] ;
49334,49359c47229,47550
< #line 4487
<   rrs.state = 0UL;
< #line 4487
<   rrs.count = 0UL;
< #line 4489
<   if (fault_devs == 0) {
< #line 4489
<     goto _L;
<   } else {
< #line 4489
<     tmp = mdev_to_minor(mdev);
< #line 4489
<     if ((fault_devs >> (int )tmp) & 1) {
<       _L: /* CIL Label */ 
< #line 4489
<       tmp___0 = _drbd_fault_random(& rrs);
< #line 4489
<       if (tmp___0 % 100UL + 1UL <= (unsigned long )fault_rate) {
< #line 4489
<         tmp___1 = 1;
<       } else {
< #line 4489
<         tmp___1 = 0;
<       }
<     } else {
< #line 4489
---
> #line 3389
>   cmdnames[0] = "Data";
> #line 3389
>   cmdnames[1] = "DataReply";
> #line 3389
>   cmdnames[2] = "RSDataReply";
> #line 3389
>   cmdnames[3] = "Barrier";
> #line 3389
>   cmdnames[4] = "ReportBitMap";
> #line 3389
>   cmdnames[5] = "BecomeSyncTarget";
> #line 3389
>   cmdnames[6] = "BecomeSyncSource";
> #line 3389
>   cmdnames[7] = "UnplugRemote";
> #line 3389
>   cmdnames[8] = "DataRequest";
> #line 3389
>   cmdnames[9] = "RSDataRequest";
> #line 3389
>   cmdnames[10] = "SyncParam";
> #line 3389
>   cmdnames[11] = "ReportProtocol";
> #line 3389
>   cmdnames[12] = "ReportUUIDs";
> #line 3389
>   cmdnames[13] = "ReportSizes";
> #line 3389
>   cmdnames[14] = "ReportState";
> #line 3389
>   cmdnames[15] = "ReportSyncUUID";
> #line 3389
>   cmdnames[16] = "AuthChallenge";
> #line 3389
>   cmdnames[17] = "AuthResponse";
> #line 3389
>   cmdnames[18] = "StateChgRequest";
> #line 3389
>   cmdnames[19] = "Ping";
> #line 3389
>   cmdnames[20] = "PingAck";
> #line 3389
>   cmdnames[21] = "RecvAck";
> #line 3389
>   cmdnames[22] = "WriteAck";
> #line 3389
>   cmdnames[23] = "RSWriteAck";
> #line 3389
>   cmdnames[24] = "Superseded";
> #line 3389
>   cmdnames[25] = "NegAck";
> #line 3389
>   cmdnames[26] = "NegDReply";
> #line 3389
>   cmdnames[27] = "NegRSDReply";
> #line 3389
>   cmdnames[28] = "BarrierAck";
> #line 3389
>   cmdnames[29] = "StateChgReply";
> #line 3389
>   cmdnames[30] = "OVRequest";
> #line 3389
>   cmdnames[31] = "OVReply";
> #line 3389
>   cmdnames[32] = "OVResult";
> #line 3389
>   cmdnames[33] = "CsumRSRequest";
> #line 3389
>   cmdnames[34] = "CsumRSIsInSync";
> #line 3389
>   cmdnames[35] = "SyncParam89";
> #line 3389
>   cmdnames[36] = "CBitmap";
> #line 3389
>   cmdnames[37] = 0;
> #line 3389
>   cmdnames[38] = 0;
> #line 3389
>   cmdnames[39] = "DelayProbe";
> #line 3389
>   cmdnames[40] = "OutOfSync";
> #line 3389
>   cmdnames[41] = "RSCancel";
> #line 3389
>   cmdnames[42] = "conn_st_chg_req";
> #line 3389
>   cmdnames[43] = "conn_st_chg_reply";
> #line 3389
>   cmdnames[44] = "retry_write";
> #line 3389
>   cmdnames[45] = "protocol_update";
> #line 3443
>   if ((unsigned int )cmd == 65521U) {
> #line 3444
>     return ("InitialMeta");
>   } else {
> 
>   }
> #line 3445
>   if ((unsigned int )cmd == 65522U) {
> #line 3446
>     return ("InitialData");
>   } else {
> 
>   }
> #line 3447
>   if ((unsigned int )cmd == 65534U) {
> #line 3448
>     return ("ConnectionFeatures");
>   } else {
> 
>   }
> #line 3449
>   if ((unsigned int )cmd > (unsigned int )P_PROTOCOL_UPDATE) {
> #line 3450
>     return ("Unknown");
>   } else {
> 
>   }
> #line 3451
>   return (cmdnames[(unsigned int )cmd]);
> }
> }
> #line 3460 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> int drbd_wait_misc(struct drbd_conf *mdev , struct drbd_interval *i ) 
> { 
>   struct net_conf *nc ;
>   wait_queue_t wait ;
>   struct task_struct *tmp ;
>   long timeout ;
>   struct net_conf *_________p1 ;
>   bool __warned ;
>   int tmp___0 ;
>   int tmp___1 ;
>   struct task_struct *tmp___2 ;
>   int tmp___3 ;
> 
>   {
> #line 3463
>   tmp = get_current();
> #line 3463
>   wait.flags = 0U;
> #line 3463
>   wait.private = (void *)tmp;
> #line 3463
>   wait.func = & autoremove_wake_function;
> #line 3463
>   wait.task_list.next = & wait.task_list;
> #line 3463
>   wait.task_list.prev = & wait.task_list;
> #line 3466
>   rcu_read_lock();
> #line 3467
>   _________p1 = *((struct net_conf * volatile  *)(& (mdev->tconn)->net_conf));
> #line 3467
>   tmp___0 = debug_lockdep_rcu_enabled();
> #line 3467
>   if (tmp___0 != 0 && ! __warned) {
> #line 3467
>     tmp___1 = rcu_read_lock_held();
> #line 3467
>     if (tmp___1 == 0 && 1) {
> #line 3467
>       __warned = 1;
> #line 3467
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared",
>                              3467, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 3467
>   nc = _________p1;
> #line 3468
>   if ((unsigned long )nc == (unsigned long )((struct net_conf *)0)) {
> #line 3469
>     rcu_read_unlock();
> #line 3470
>     return (-110);
>   } else {
> 
>   }
> #line 3472
>   timeout = nc->ko_count != 0U ? (long )(((nc->timeout * 250U) / 10U) * nc->ko_count) : 9223372036854775807L;
> #line 3473
>   rcu_read_unlock();
> #line 3476
>   i->waiting = -1;
> #line 3477
>   prepare_to_wait(& mdev->misc_wait, & wait, 1);
> #line 3478
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 3479
>   timeout = schedule_timeout(timeout);
> #line 3480
>   finish_wait(& mdev->misc_wait, & wait);
> #line 3481
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 3482
>   if (timeout == 0L || (int )mdev->state.ldv_50103.conn <= 9) {
> #line 3483
>     return (-110);
>   } else {
> 
>   }
> #line 3484
>   tmp___2 = get_current();
> #line 3484
>   tmp___3 = signal_pending(tmp___2);
> #line 3484
>   if (tmp___3 != 0) {
> #line 3485
>     return (-512);
>   } else {
> 
>   }
> #line 3486
>   return (0);
> }
> }
> #line 3506 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> static unsigned long _drbd_fault_random(struct fault_random_state *rsp ) 
> { 
>   long refresh ;
>   unsigned long tmp ;
>   __u32 tmp___0 ;
> 
>   {
> #line 3510
>   tmp = rsp->count;
> #line 3510
>   rsp->count = rsp->count - 1UL;
> #line 3510
>   if (tmp == 0UL) {
> #line 3511
>     get_random_bytes((void *)(& refresh), 8);
> #line 3512
>     rsp->state = rsp->state + (unsigned long )refresh;
> #line 3513
>     rsp->count = 10000UL;
>   } else {
> 
>   }
> #line 3515
>   rsp->state = rsp->state * 39916801UL + 479001701UL;
> #line 3516
>   tmp___0 = __fswahw32((__u32 )rsp->state);
> #line 3516
>   return ((unsigned long )tmp___0);
> }
> }
> #line 3520 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> static char *_drbd_fault_str(unsigned int type ) 
> { 
>   char *_faults[10U] ;
> 
>   {
> #line 3521
>   _faults[0] = (char *)"Meta-data write";
> #line 3521
>   _faults[1] = (char *)"Meta-data read";
> #line 3521
>   _faults[2] = (char *)"Resync write";
> #line 3521
>   _faults[3] = (char *)"Resync read";
> #line 3521
>   _faults[4] = (char *)"Data write";
> #line 3521
>   _faults[5] = (char *)"Data read";
> #line 3521
>   _faults[6] = (char *)"Data read ahead";
> #line 3521
>   _faults[7] = (char *)"BM allocation";
> #line 3521
>   _faults[8] = (char *)"EE allocation";
> #line 3521
>   _faults[9] = (char *)"receive data corruption";
> #line 3534
>   return (type <= 9U ? _faults[type] : (char *)"**Unknown**");
> }
> }
> #line 3538 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> unsigned int _drbd_insert_fault(struct drbd_conf *mdev , unsigned int type ) 
> { 
>   struct fault_random_state rrs ;
>   unsigned int ret ;
>   unsigned int tmp ;
>   unsigned long tmp___0 ;
>   int tmp___1 ;
>   char *tmp___2 ;
>   int tmp___3 ;
> 
>   {
> #line 3540
>   rrs.state = 0UL;
> #line 3540
>   rrs.count = 0UL;
> #line 3542
>   if (fault_devs == 0) {
> #line 3542
>     goto _L;
>   } else {
> #line 3542
>     tmp = mdev_to_minor(mdev);
> #line 3542
>     if ((fault_devs >> (int )tmp) & 1) {
>       _L: /* CIL Label */ 
> #line 3542
>       tmp___0 = _drbd_fault_random(& rrs);
> #line 3542
>       if (tmp___0 % 100UL + 1UL <= (unsigned long )fault_rate) {
> #line 3542
>         tmp___1 = 1;
>       } else {
> #line 3542
>         tmp___1 = 0;
>       }
>     } else {
> #line 3542
49363c47554
< #line 4489
---
> #line 3542
49365c47556
< #line 4494
---
> #line 3547
49367c47558
< #line 4495
---
> #line 3548
49369c47560
< #line 4497
---
> #line 3550
49371c47562
< #line 4497
---
> #line 3550
49373c47564
< #line 4498
---
> #line 3551
49375c47566
< #line 4498
---
> #line 3551
49384c47575
< #line 4502
---
> #line 3555
49388c47579
< #line 4506 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 3559 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
49395c47586
< #line 4511
---
> #line 3564
49397c47588
< #line 4511
---
> #line 3564
49399c47590
< #line 4511
---
> #line 3564
49401c47592
< #line 4511
---
> #line 3564
49403c47594
< #line 4511
---
> #line 3564
49408c47599
< #line 4511
---
> #line 3564
49410c47601
< #line 4511
---
> #line 3564
49413c47604
< #line 4513
---
> #line 3566
49415c47606
< #line 4515
---
> #line 3568
49420c47611
< #line 4521
---
> #line 3574
49424c47615
< #line 4569 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 3622 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
49435c47626
<   unsigned long var_md_sync_timer_fn_110_p0 ;
---
>   unsigned long var_md_sync_timer_fn_120_p0 ;
49442c47633
< #line 4768
---
> #line 3811
49444c47635
< #line 4725
---
> #line 3770
49446c47637
< #line 4734
---
> #line 3779
49448c47639
< #line 4750
---
> #line 3793
49450c47641
< #line 4751
---
> #line 3794
49452c47643
< #line 4751
---
> #line 3794
49454c47645
< #line 4752
---
> #line 3795
49459,49462c47650,47653
< #line 4775
<   goto ldv_53080;
<   ldv_53079: 
< #line 4779
---
> #line 3818
>   goto ldv_53386;
>   ldv_53385: 
> #line 3822
49464c47655
< #line 4779
---
> #line 3822
49467c47658
< #line 4784
---
> #line 3827
49469c47660
< #line 4797
---
> #line 3840
49471c47662
< #line 4798
---
> #line 3841
49473c47664
< #line 4799
---
> #line 3842
49475c47666
< #line 4800
---
> #line 3843
49477c47668
< #line 4801
---
> #line 3844
49482c47673
< #line 4822
---
> #line 3863
49487,49488c47678,47679
< #line 4828
<   goto ldv_53074;
---
> #line 3869
>   goto ldv_53380;
49490c47681
< #line 4832
---
> #line 3873
49492c47683
< #line 4845
---
> #line 3886
49494c47685
< #line 4846
---
> #line 3887
49496c47687
< #line 4867
---
> #line 3906
49501,49502c47692,47693
< #line 4873
<   goto ldv_53074;
---
> #line 3912
>   goto ldv_53380;
49504c47695
< #line 4892
---
> #line 3929
49506c47697
< #line 4893
---
> #line 3930
49508,49509c47699,47700
< #line 4918
<   goto ldv_53074;
---
> #line 3955
>   goto ldv_53380;
49511c47702
< #line 4943
---
> #line 3978
49513,49516c47704,47707
< #line 4944
<   md_sync_timer_fn(var_md_sync_timer_fn_110_p0);
< #line 4963
<   goto ldv_53074;
---
> #line 3979
>   md_sync_timer_fn(var_md_sync_timer_fn_120_p0);
> #line 3998
>   goto ldv_53380;
49518,49519c47709,47710
< #line 4964
<   goto ldv_53074;
---
> #line 3999
>   goto ldv_53380;
49521,49523c47712,47714
<   ldv_53074: ;
<   ldv_53080: 
< #line 4775
---
>   ldv_53380: ;
>   ldv_53386: 
> #line 3818
49525c47716
< #line 4775
---
> #line 3818
49527,49528c47718,47719
< #line 4777
<     goto ldv_53079;
---
> #line 3820
>     goto ldv_53385;
49534c47725
< #line 4986
---
> #line 4019
49536c47727
< #line 4987
---
> #line 4020
49539c47730
< #line 5008
---
> #line 4041
49541c47732
< #line 5011
---
> #line 4044
49545,49546c47736,47737
< #line 5015 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_lock_193(struct mutex *ldv_func_arg1 ) 
---
> #line 4048 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> void ldv_module_put_3(struct module *ldv_func_arg1 ) 
49551,49555c47742,47744
< #line 5020
<   ldv_mutex_lock_lock(ldv_func_arg1);
< #line 5022
<   mutex_lock(ldv_func_arg1);
< #line 5023
---
> #line 4053
>   ldv_module_put(ldv_func_arg1);
> #line 4054
49559,49560c47748,47749
< #line 5025 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_unlock_194(struct mutex *ldv_func_arg1 ) 
---
> #line 4056 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> bool ldv_try_module_get_4(struct module *ldv_func_arg1 ) 
49562c47751
< 
---
>   int tmp ;
49565,49570c47754,47757
< #line 5030
<   ldv_mutex_unlock_lock(ldv_func_arg1);
< #line 5032
<   mutex_unlock(ldv_func_arg1);
< #line 5033
<   return;
---
> #line 4061
>   tmp = ldv_try_module_get(ldv_func_arg1);
> #line 4061
>   return (tmp != 0);
49573,49574c47760,47761
< #line 5035 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_lock_195(struct mutex *ldv_func_arg1 ) 
---
> #line 4064 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_main.c.prepared"
> void ldv_module_put_5(struct module *ldv_func_arg1 ) 
49579,49583c47766,47768
< #line 5040
<   ldv_mutex_lock_mutex_of_device(ldv_func_arg1);
< #line 5042
<   mutex_lock(ldv_func_arg1);
< #line 5043
---
> #line 4069
>   ldv_module_put(ldv_func_arg1);
> #line 4070
49587,49588c47772,47799
< #line 5045 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< int ldv_mutex_trylock_196(struct mutex *ldv_func_arg1 ) 
---
> #line 35 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_strings.c.prepared"
> static char const   *drbd_conn_s_names[24U]  = 
> #line 35 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_strings.c.prepared"
>   {      "StandAlone",      "Disconnecting",      "Unconnected",      "Timeout", 
>         "BrokenPipe",      "NetworkFailure",      "ProtocolError",      "TearDown", 
>         "WFConnection",      "WFReportParams",      "Connected",      "StartingSyncS", 
>         "StartingSyncT",      "WFBitMapS",      "WFBitMapT",      "WFSyncUUID", 
>         "SyncSource",      "SyncTarget",      "VerifyS",      "VerifyT", 
>         "PausedSyncS",      "PausedSyncT",      "Ahead",      "Behind"};
> #line 62 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_strings.c.prepared"
> static char const   *drbd_role_s_names[3U]  = {      "Unknown",      "Primary",      "Secondary"};
> #line 68 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_strings.c.prepared"
> static char const   *drbd_disk_s_names[9U]  = 
> #line 68
>   {      "Diskless",      "Attaching",      "Failed",      "Negotiating", 
>         "Inconsistent",      "Outdated",      "DUnknown",      "Consistent", 
>         "UpToDate"};
> #line 80 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_strings.c.prepared"
> static char const   *drbd_state_sw_errors[21U]  = 
> #line 80
>   {      0,      "Multiple primaries not allowed by config",      "Need access to UpToDate data",      0, 
>         "Can not resync without local disk",      "Can not resync without remote disk",      "Refusing to be Outdated while Connected",      "Refusing to be Primary while peer is not outdated", 
>         "Can not start OV/resync since it is already active",      "Can not disconnect a StandAlone device",      "State change was refused by peer node",      "Device is diskless, the requested operation requires a disk", 
>         "Device is held open by someone",      "Have no net/connection configuration",      "Need a verify algorithm to start online verify",      "Need a connection to start verify or resync", 
>         "Disk state is lower than outdated",      "Peer does not support protocol",      "In transient state, retry after next state change",      "Concurrent state changes detected and aborted", 
>         "Other vol primary on peer not allowed by config"};
> #line 102 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_strings.c.prepared"
> char const   *drbd_conn_str(enum drbd_conns s ) 
49590,49592c47801
<   ldv_func_ret_type___2 ldv_func_res ;
<   int tmp ;
<   int tmp___0 ;
---
> 
49595,49604c47804,47805
< #line 5050
<   tmp = mutex_trylock(ldv_func_arg1);
< #line 5050
<   ldv_func_res = tmp;
< #line 5052
<   tmp___0 = ldv_mutex_trylock_mutex_of_device(ldv_func_arg1);
< #line 5052
<   return (tmp___0);
< #line 5054
<   return (ldv_func_res);
---
> #line 105
>   return ((unsigned int )s <= 23U ? drbd_conn_s_names[(unsigned int )s] : "TOO_LARGE");
49607,49608c47808,47809
< #line 5057 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_unlock_197(struct mutex *ldv_func_arg1 ) 
---
> #line 108 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_strings.c.prepared"
> char const   *drbd_role_str(enum drbd_role s ) 
49613,49618c47814,47815
< #line 5062
<   ldv_mutex_unlock_mutex_of_device(ldv_func_arg1);
< #line 5064
<   mutex_unlock(ldv_func_arg1);
< #line 5065
<   return;
---
> #line 110
>   return ((unsigned int )s <= 2U ? drbd_role_s_names[(unsigned int )s] : "TOO_LARGE");
49621,49622c47818,47819
< #line 5067 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_lock_198(struct mutex *ldv_func_arg1 ) 
---
> #line 113 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_strings.c.prepared"
> char const   *drbd_disk_str(enum drbd_disk_state s ) 
49627,49632c47824,47825
< #line 5072
<   ldv_mutex_lock_mtx_of_percpu_rw_semaphore(ldv_func_arg1);
< #line 5074
<   mutex_lock(ldv_func_arg1);
< #line 5075
<   return;
---
> #line 115
>   return ((unsigned int )s <= 8U ? drbd_disk_s_names[(unsigned int )s] : "TOO_LARGE");
49635,49636c47828,47829
< #line 5077 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_unlock_199(struct mutex *ldv_func_arg1 ) 
---
> #line 118 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_strings.c.prepared"
> char const   *drbd_set_st_err_str(enum drbd_state_rv err ) 
49641,49646c47834,47835
< #line 5082
<   ldv_mutex_unlock_mtx_of_percpu_rw_semaphore(ldv_func_arg1);
< #line 5084
<   mutex_unlock(ldv_func_arg1);
< #line 5085
<   return;
---
> #line 120
>   return ((int )err >= -20 ? ((int )err < 0 ? drbd_state_sw_errors[- ((int )err)] : "TOO_LARGE") : "TOO_SMALL");
49649,49650c47838,47845
< #line 5087 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_lock_200(struct mutex *ldv_func_arg1 ) 
---
> #line 53 "include/linux/string.h"
> extern char *strchr(char const   * , int  ) ;
> #line 70 "include/linux/kmod.h"
> extern int call_usermodehelper_fns(char * , char ** , char ** , int  , int (*)(struct subprocess_info * ,
>                                                                                struct cred * ) ,
>                                    void (*)(struct subprocess_info * ) , void * ) ;
> #line 75 "include/linux/kmod.h"
> __inline static int call_usermodehelper(char *path , char **argv , char **envp , int wait ) 
49652c47847
< 
---
>   int tmp ;
49655,49660c47850,47853
< #line 5092
<   ldv_mutex_lock_mtx_of_percpu_rw_semaphore(ldv_func_arg1);
< #line 5094
<   mutex_lock(ldv_func_arg1);
< #line 5095
<   return;
---
> #line 77
>   tmp = call_usermodehelper_fns(path, argv, envp, wait, 0, 0, 0);
> #line 77
>   return (tmp);
49663,49664c47856,47859
< #line 5097 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_unlock_201(struct mutex *ldv_func_arg1 ) 
---
> #line 207 "include/linux/kobject.h"
> extern int kobject_uevent(struct kobject * , enum kobject_action  ) ;
> #line 114 "include/linux/rculist.h"
> __inline static void list_del_rcu(struct list_head *entry ) 
49669,49673c47864,47868
< #line 5102
<   ldv_mutex_unlock_mtx_of_percpu_rw_semaphore(ldv_func_arg1);
< #line 5104
<   mutex_unlock(ldv_func_arg1);
< #line 5105
---
> #line 116
>   __list_del_entry(entry);
> #line 117
>   entry->prev = 0xdead000000200200UL;
> #line 118
49677,49678c47872,47881
< #line 5107 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_lock_202(struct mutex *ldv_func_arg1 ) 
---
> #line 210 "include/linux/capability.h"
> extern bool capable(int  ) ;
> #line 2093 "include/linux/fs.h"
> extern struct block_device *blkdev_get_by_path(char const   * , fmode_t  , void * ) ;
> #line 568 "include/linux/skbuff.h"
> extern void kfree_skb(struct sk_buff * ) ;
> #line 577
> extern struct sk_buff *__alloc_skb(unsigned int  , gfp_t  , int  , int  ) ;
> #line 580 "include/linux/skbuff.h"
> __inline static struct sk_buff *alloc_skb(unsigned int size , gfp_t priority ) 
49680c47883
< 
---
>   struct sk_buff *tmp ;
49683,49688c47886,47889
< #line 5112
<   ldv_mutex_lock_cred_guard_mutex_of_signal_struct(ldv_func_arg1);
< #line 5114
<   mutex_lock(ldv_func_arg1);
< #line 5115
<   return;
---
> #line 583
>   tmp = __alloc_skb(size, priority, 0, -1);
> #line 583
>   return (tmp);
49691,49692c47892,47893
< #line 5117 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_unlock_203(struct mutex *ldv_func_arg1 ) 
---
> #line 1295 "include/linux/skbuff.h"
> __inline static unsigned char *skb_tail_pointer(struct sk_buff  const  *skb ) 
49697,49702c47898,47899
< #line 5122
<   ldv_mutex_unlock_cred_guard_mutex_of_signal_struct(ldv_func_arg1);
< #line 5124
<   mutex_unlock(ldv_func_arg1);
< #line 5125
<   return;
---
> #line 1297
>   return ((unsigned char *)skb->head + (unsigned long )skb->tail);
49705,49706c47902,47907
< #line 5127 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_lock_204(struct mutex *ldv_func_arg1 ) 
---
> #line 1644
> extern void skb_trim(struct sk_buff * , unsigned int  ) ;
> #line 7 "include/linux/seq_file_net.h"
> extern struct net init_net ;
> #line 238 "include/net/net_namespace.h"
> __inline static struct net *read_pnet(struct net * const  *pnet ) 
49711,49716c47912,47913
< #line 5132
<   ldv_mutex_lock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 5134
<   mutex_lock(ldv_func_arg1);
< #line 5135
<   return;
---
> #line 240
>   return ((struct net *)*pnet);
49719,49720c47916,47917
< #line 5137 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_unlock_205(struct mutex *ldv_func_arg1 ) 
---
> #line 13 "include/linux/netlink.h"
> __inline static struct nlmsghdr *nlmsg_hdr(struct sk_buff  const  *skb ) 
49725,49730c47922,47923
< #line 5142
<   ldv_mutex_unlock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 5144
<   mutex_unlock(ldv_func_arg1);
< #line 5145
<   return;
---
> #line 15
>   return ((struct nlmsghdr *)skb->data);
49733,49734c47926,47942
< #line 5147 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_unlock_206(struct mutex *ldv_func_arg1 ) 
---
> #line 60
> extern int netlink_unicast(struct sock * , struct sk_buff * , __u32  , int  ) ;
> #line 61
> extern int netlink_broadcast(struct sock * , struct sk_buff * , __u32  , __u32  ,
>                              gfp_t  ) ;
> #line 242 "include/net/netlink.h"
> extern struct nlattr *nla_find(struct nlattr  const  * , int  , int  ) ;
> #line 244
> extern size_t nla_strlcpy(char * , struct nlattr  const  * , size_t  ) ;
> #line 246
> extern int nla_memcpy(void * , struct nlattr  const  * , int  ) ;
> #line 260
> extern int nla_put(struct sk_buff * , int  , int  , void const   * ) ;
> #line 262
> extern int nla_put_nohdr(struct sk_buff * , int  , void const   * ) ;
> #line 275 "include/net/netlink.h"
> __inline static int nlmsg_msg_size(int payload ) 
49739,49744c47947,47948
< #line 5152
<   ldv_mutex_unlock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 5154
<   mutex_unlock(ldv_func_arg1);
< #line 5155
<   return;
---
> #line 277
>   return (payload + 16);
49747,49748c47951,47952
< #line 5157 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_lock_207(struct mutex *ldv_func_arg1 ) 
---
> #line 284 "include/net/netlink.h"
> __inline static int nlmsg_total_size(int payload ) 
49750c47954
< 
---
>   int tmp ;
49753,49758c47957,47960
< #line 5162
<   ldv_mutex_lock_state_mutex_of_drbd_conf(ldv_func_arg1);
< #line 5164
<   mutex_lock(ldv_func_arg1);
< #line 5165
<   return;
---
> #line 286
>   tmp = nlmsg_msg_size(payload);
> #line 286
>   return ((int )((unsigned int )tmp + 3U) & -4);
49761,49762c47963,47964
< #line 5167 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_unlock_208(struct mutex *ldv_func_arg1 ) 
---
> #line 302 "include/net/netlink.h"
> __inline static void *nlmsg_data(struct nlmsghdr  const  *nlh ) 
49767,49772c47969,47970
< #line 5172
<   ldv_mutex_unlock_state_mutex_of_drbd_conf(ldv_func_arg1);
< #line 5174
<   mutex_unlock(ldv_func_arg1);
< #line 5175
<   return;
---
> #line 304
>   return ((void *)nlh + 16U);
49775,49776c47973,47974
< #line 5177 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_lock_209(struct mutex *ldv_func_arg1 ) 
---
> #line 311 "include/net/netlink.h"
> __inline static int nlmsg_len(struct nlmsghdr  const  *nlh ) 
49781,49786c47979,47980
< #line 5182
<   ldv_mutex_lock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 5184
<   mutex_lock(ldv_func_arg1);
< #line 5185
<   return;
---
> #line 313
>   return ((int )((unsigned int )nlh->nlmsg_len - 16U));
49789,49790c47983,47984
< #line 5187 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_lock_210(struct mutex *ldv_func_arg1 ) 
---
> #line 321 "include/net/netlink.h"
> __inline static struct nlattr *nlmsg_attrdata(struct nlmsghdr  const  *nlh , int hdrlen ) 
49792c47986,47987
< 
---
>   unsigned char *data ;
>   void *tmp ;
49795,49800c47990,47995
< #line 5192
<   ldv_mutex_lock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 5194
<   mutex_lock(ldv_func_arg1);
< #line 5195
<   return;
---
> #line 324
>   tmp = nlmsg_data(nlh);
> #line 324
>   data = (unsigned char *)tmp;
> #line 325
>   return ((struct nlattr *)(data + ((unsigned long )((unsigned int )hdrlen + 3U) & 4294967292UL)));
49803,49804c47998,47999
< #line 5197 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_unlock_211(struct mutex *ldv_func_arg1 ) 
---
> #line 333 "include/net/netlink.h"
> __inline static int nlmsg_attrlen(struct nlmsghdr  const  *nlh , int hdrlen ) 
49806c48001
< 
---
>   int tmp ;
49809,49814c48004,48007
< #line 5202
<   ldv_mutex_unlock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 5204
<   mutex_unlock(ldv_func_arg1);
< #line 5205
<   return;
---
> #line 335
>   tmp = nlmsg_len(nlh);
> #line 335
>   return ((int )((unsigned int )tmp - (((unsigned int )hdrlen + 3U) & 4294967292U)));
49817,49818c48010,48011
< #line 5207 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_unlock_212(struct mutex *ldv_func_arg1 ) 
---
> #line 493 "include/net/netlink.h"
> __inline static struct sk_buff *nlmsg_new(size_t payload , gfp_t flags ) 
49820c48013,48014
< 
---
>   int tmp ;
>   struct sk_buff *tmp___0 ;
49823,49828c48017,48022
< #line 5212
<   ldv_mutex_unlock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 5214
<   mutex_unlock(ldv_func_arg1);
< #line 5215
<   return;
---
> #line 495
>   tmp = nlmsg_total_size((int )payload);
> #line 495
>   tmp___0 = alloc_skb((unsigned int )tmp, flags);
> #line 495
>   return (tmp___0);
49831,49832c48025,48026
< #line 5217 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_lock_213(struct mutex *ldv_func_arg1 ) 
---
> #line 509 "include/net/netlink.h"
> __inline static int nlmsg_end(struct sk_buff *skb , struct nlmsghdr *nlh ) 
49834c48028
< 
---
>   unsigned char *tmp ;
49837,49842c48031,48036
< #line 5222
<   ldv_mutex_lock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 5224
<   mutex_lock(ldv_func_arg1);
< #line 5225
<   return;
---
> #line 511
>   tmp = skb_tail_pointer((struct sk_buff  const  *)skb);
> #line 511
>   nlh->nlmsg_len = (__u32 )((long )tmp) - (__u32 )((long )nlh);
> #line 513
>   return ((int )skb->len);
49845,49846c48039,48040
< #line 5227 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_unlock_214(struct mutex *ldv_func_arg1 ) 
---
> #line 534 "include/net/netlink.h"
> __inline static void nlmsg_trim(struct sk_buff *skb , void const   *mark ) 
49851,49855c48045,48052
< #line 5232
<   ldv_mutex_unlock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 5234
<   mutex_unlock(ldv_func_arg1);
< #line 5235
---
> #line 536
>   if ((unsigned long )mark != (unsigned long )((void const   *)0)) {
> #line 537
>     skb_trim(skb, (unsigned int )((long )mark) - (unsigned int )((long )skb->data));
>   } else {
> 
>   }
> #line 538
49859,49860c48056,48057
< #line 5237 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_lock_215(struct mutex *ldv_func_arg1 ) 
---
> #line 548 "include/net/netlink.h"
> __inline static void nlmsg_cancel(struct sk_buff *skb , struct nlmsghdr *nlh ) 
49865,49869c48062,48064
< #line 5242
<   ldv_mutex_lock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 5244
<   mutex_lock(ldv_func_arg1);
< #line 5245
---
> #line 550
>   nlmsg_trim(skb, (void const   *)nlh);
> #line 551
49873,49874c48068,48069
< #line 5247 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_unlock_216(struct mutex *ldv_func_arg1 ) 
---
> #line 557 "include/net/netlink.h"
> __inline static void nlmsg_free(struct sk_buff *skb ) 
49879,49883c48074,48076
< #line 5252
<   ldv_mutex_unlock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 5254
<   mutex_unlock(ldv_func_arg1);
< #line 5255
---
> #line 559
>   kfree_skb(skb);
> #line 560
49887,49888c48080,48082
< #line 5257 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_lock_217(struct mutex *ldv_func_arg1 ) 
---
> #line 570 "include/net/netlink.h"
> __inline static int nlmsg_multicast(struct sock *sk , struct sk_buff *skb , u32 portid ,
>                                     unsigned int group , gfp_t flags ) 
49890c48084
< 
---
>   int err ;
49893,49898c48087,48099
< #line 5262
<   ldv_mutex_lock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 5264
<   mutex_lock(ldv_func_arg1);
< #line 5265
<   return;
---
> #line 575
>   ((struct netlink_skb_parms *)(& skb->cb))->dst_group = group;
> #line 577
>   err = netlink_broadcast(sk, skb, portid, group, flags);
> #line 578
>   if (err > 0) {
> #line 579
>     err = 0;
>   } else {
> 
>   }
> #line 581
>   return (err);
49901,49902c48102,48103
< #line 5267 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_unlock_218(struct mutex *ldv_func_arg1 ) 
---
> #line 590 "include/net/netlink.h"
> __inline static int nlmsg_unicast(struct sock *sk , struct sk_buff *skb , u32 portid ) 
49904c48105
< 
---
>   int err ;
49907,49912c48108,48118
< #line 5272
<   ldv_mutex_unlock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 5274
<   mutex_unlock(ldv_func_arg1);
< #line 5275
<   return;
---
> #line 594
>   err = netlink_unicast(sk, skb, portid, 64);
> #line 595
>   if (err > 0) {
> #line 596
>     err = 0;
>   } else {
> 
>   }
> #line 598
>   return (err);
49915,49916c48121,48122
< #line 5277 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_lock_219(struct mutex *ldv_func_arg1 ) 
---
> #line 681 "include/net/netlink.h"
> __inline static void *nla_data(struct nlattr  const  *nla ) 
49921,49926c48127,48128
< #line 5282
<   ldv_mutex_lock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 5284
<   mutex_lock(ldv_func_arg1);
< #line 5285
<   return;
---
> #line 683
>   return ((void *)nla + 4U);
49929,49930c48131,48132
< #line 5287 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_unlock_220(struct mutex *ldv_func_arg1 ) 
---
> #line 690 "include/net/netlink.h"
> __inline static int nla_len(struct nlattr  const  *nla ) 
49935,49940c48137,48138
< #line 5292
<   ldv_mutex_unlock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 5294
<   mutex_unlock(ldv_func_arg1);
< #line 5295
<   return;
---
> #line 692
>   return ((int )nla->nla_len + -4);
49943,49944c48141,48142
< #line 5297 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_lock_221(struct mutex *ldv_func_arg1 ) 
---
> #line 758 "include/net/netlink.h"
> __inline static int nla_put_u8(struct sk_buff *skb , int attrtype , u8 value ) 
49946c48144
< 
---
>   int tmp ;
49949,49954c48147,48150
< #line 5302
<   ldv_mutex_lock_drbd_main_mutex(ldv_func_arg1);
< #line 5304
<   mutex_lock(ldv_func_arg1);
< #line 5305
<   return;
---
> #line 760
>   tmp = nla_put(skb, attrtype, 1, (void const   *)(& value));
> #line 760
>   return (tmp);
49957,49958c48153,48154
< #line 5307 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_unlock_222(struct mutex *ldv_func_arg1 ) 
---
> #line 813 "include/net/netlink.h"
> __inline static int nla_put_u32(struct sk_buff *skb , int attrtype , u32 value ) 
49960c48156
< 
---
>   int tmp ;
49963,49968c48159,48162
< #line 5312
<   ldv_mutex_unlock_drbd_main_mutex(ldv_func_arg1);
< #line 5314
<   mutex_unlock(ldv_func_arg1);
< #line 5315
<   return;
---
> #line 815
>   tmp = nla_put(skb, attrtype, 4, (void const   *)(& value));
> #line 815
>   return (tmp);
49971,49972c48165,48166
< #line 5317 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_lock_223(struct mutex *ldv_func_arg1 ) 
---
> #line 857 "include/net/netlink.h"
> __inline static int nla_put_u64(struct sk_buff *skb , int attrtype , u64 value ) 
49974c48168
< 
---
>   int tmp ;
49977,49982c48171,48174
< #line 5322
<   ldv_mutex_lock_drbd_main_mutex(ldv_func_arg1);
< #line 5324
<   mutex_lock(ldv_func_arg1);
< #line 5325
<   return;
---
> #line 859
>   tmp = nla_put(skb, attrtype, 8, (void const   *)(& value));
> #line 859
>   return (tmp);
49985,49986c48177,48178
< #line 5327 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_unlock_224(struct mutex *ldv_func_arg1 ) 
---
> #line 945 "include/net/netlink.h"
> __inline static int nla_put_string(struct sk_buff *skb , int attrtype , char const   *str ) 
49988c48180,48181
< 
---
>   size_t tmp ;
>   int tmp___0 ;
49991,49996c48184,48189
< #line 5332
<   ldv_mutex_unlock_drbd_main_mutex(ldv_func_arg1);
< #line 5334
<   mutex_unlock(ldv_func_arg1);
< #line 5335
<   return;
---
> #line 948
>   tmp = strlen(str);
> #line 948
>   tmp___0 = nla_put(skb, attrtype, (int )((unsigned int )tmp + 1U), (void const   *)str);
> #line 948
>   return (tmp___0);
49999,50000c48192,48193
< #line 5337 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_lock_225(struct mutex *ldv_func_arg1 ) 
---
> #line 978 "include/net/netlink.h"
> __inline static u32 nla_get_u32(struct nlattr  const  *nla ) 
50002c48195
< 
---
>   void *tmp ;
50005,50010c48198,48201
< #line 5342
<   ldv_mutex_lock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 5344
<   mutex_lock(ldv_func_arg1);
< #line 5345
<   return;
---
> #line 980
>   tmp = nla_data(nla);
> #line 980
>   return (*((u32 *)tmp));
50013,50014c48204,48205
< #line 5347 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_unlock_226(struct mutex *ldv_func_arg1 ) 
---
> #line 1023 "include/net/netlink.h"
> __inline static u8 nla_get_u8(struct nlattr  const  *nla ) 
50016c48207
< 
---
>   void *tmp ;
50019,50024c48210,48213
< #line 5352
<   ldv_mutex_unlock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 5354
<   mutex_unlock(ldv_func_arg1);
< #line 5355
<   return;
---
> #line 1025
>   tmp = nla_data(nla);
> #line 1025
>   return (*((u8 *)tmp));
50027,50028c48216,48217
< #line 5357 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_lock_227(struct mutex *ldv_func_arg1 ) 
---
> #line 1032 "include/net/netlink.h"
> __inline static u64 nla_get_u64(struct nlattr  const  *nla ) 
50030c48219
< 
---
>   u64 tmp ;
50033,50038c48222,48225
< #line 5362
<   ldv_mutex_lock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 5364
<   mutex_lock(ldv_func_arg1);
< #line 5365
<   return;
---
> #line 1036
>   nla_memcpy((void *)(& tmp), nla, 8);
> #line 1038
>   return (tmp);
50041,50042c48228,48229
< #line 5367 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_unlock_228(struct mutex *ldv_func_arg1 ) 
---
> #line 1123 "include/net/netlink.h"
> __inline static struct nlattr *nla_nest_start(struct sk_buff *skb , int attrtype ) 
50044c48231,48233
< 
---
>   struct nlattr *start ;
>   unsigned char *tmp ;
>   int tmp___0 ;
50047,50052c48236,48250
< #line 5372
<   ldv_mutex_unlock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 5374
<   mutex_unlock(ldv_func_arg1);
< #line 5375
<   return;
---
> #line 1125
>   tmp = skb_tail_pointer((struct sk_buff  const  *)skb);
> #line 1125
>   start = (struct nlattr *)tmp;
> #line 1127
>   tmp___0 = nla_put(skb, attrtype, 0, 0);
> #line 1127
>   if (tmp___0 < 0) {
> #line 1128
>     return (0);
>   } else {
> 
>   }
> #line 1130
>   return (start);
50055,50103c48253,48254
< #line 171 "include/linux/mutex.h"
< int ldv_mutex_trylock_268(struct mutex *ldv_func_arg1 ) ;
< #line 176
< void ldv_mutex_unlock_266(struct mutex *ldv_func_arg1 ) ;
< #line 180
< void ldv_mutex_unlock_269(struct mutex *ldv_func_arg1 ) ;
< #line 184
< void ldv_mutex_unlock_271(struct mutex *ldv_func_arg1 ) ;
< #line 188
< void ldv_mutex_unlock_273(struct mutex *ldv_func_arg1 ) ;
< #line 192
< void ldv_mutex_unlock_275(struct mutex *ldv_func_arg1 ) ;
< #line 10 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
< void ldv_mutex_lock_265(struct mutex *ldv_func_arg1 ) ;
< #line 14
< void ldv_mutex_lock_267(struct mutex *ldv_func_arg1 ) ;
< #line 18
< void ldv_mutex_lock_270(struct mutex *ldv_func_arg1 ) ;
< #line 22
< void ldv_mutex_lock_272(struct mutex *ldv_func_arg1 ) ;
< #line 26
< void ldv_mutex_lock_274(struct mutex *ldv_func_arg1 ) ;
< #line 99 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
< static char const   *drbd_conn_s_names[24U]  = 
< #line 99
<   {      "StandAlone",      "Disconnecting",      "Unconnected",      "Timeout", 
<         "BrokenPipe",      "NetworkFailure",      "ProtocolError",      "TearDown", 
<         "WFConnection",      "WFReportParams",      "Connected",      "StartingSyncS", 
<         "StartingSyncT",      "WFBitMapS",      "WFBitMapT",      "WFSyncUUID", 
<         "SyncSource",      "SyncTarget",      "VerifyS",      "VerifyT", 
<         "PausedSyncS",      "PausedSyncT",      "Ahead",      "Behind"};
< #line 126 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
< static char const   *drbd_role_s_names[3U]  = {      "Unknown",      "Primary",      "Secondary"};
< #line 132 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
< static char const   *drbd_disk_s_names[9U]  = 
< #line 132
<   {      "Diskless",      "Attaching",      "Failed",      "Negotiating", 
<         "Inconsistent",      "Outdated",      "DUnknown",      "Consistent", 
<         "UpToDate"};
< #line 144 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
< static char const   *drbd_state_sw_errors[20U]  = 
< #line 144
<   {      0,      "Multiple primaries not allowed by config",      "Need access to UpToDate data",      0, 
<         "Can not resync without local disk",      "Can not resync without remote disk",      "Refusing to be Outdated while Connected",      "Refusing to be Primary while peer is not outdated", 
<         "Can not start OV/resync since it is already active",      "Can not disconnect a StandAlone device",      "State change was refused by peer node",      "Device is diskless, the requested operation requires a disk", 
<         "Device is held open by someone",      "Have no net/connection configuration",      "Need a verify algorithm to start online verify",      "Need a connection to start verify or resync", 
<         "Disk state is lower than outdated",      "Peer does not support protocol",      "In transient state, retry after next state change",      "Concurrent state changes detected and aborted"};
< #line 165 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
< char const   *drbd_conn_str(enum drbd_conns s ) 
---
> #line 1143 "include/net/netlink.h"
> __inline static int nla_nest_end(struct sk_buff *skb , struct nlattr *start ) 
50105c48256
< 
---
>   unsigned char *tmp ;
50108,50109c48259,48264
< #line 168
<   return ((unsigned int )s <= 23U ? drbd_conn_s_names[(unsigned int )s] : "TOO_LARGE");
---
> #line 1145
>   tmp = skb_tail_pointer((struct sk_buff  const  *)skb);
> #line 1145
>   start->nla_len = (int )((__u16 )((long )tmp)) - (int )((__u16 )((long )start));
> #line 1146
>   return ((int )skb->len);
50112,50113c48267,48268
< #line 171 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
< char const   *drbd_role_str(enum drbd_role s ) 
---
> #line 1157 "include/net/netlink.h"
> __inline static void nla_nest_cancel(struct sk_buff *skb , struct nlattr *start ) 
50118,50119c48273,48276
< #line 173
<   return ((unsigned int )s <= 2U ? drbd_role_s_names[(unsigned int )s] : "TOO_LARGE");
---
> #line 1159
>   nlmsg_trim(skb, (void const   *)start);
> #line 1160
>   return;
50122,50123c48279,48296
< #line 176 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
< char const   *drbd_disk_str(enum drbd_disk_state s ) 
---
> #line 900 "include/linux/blkdev.h"
> extern void blk_queue_max_segments(struct request_queue * , unsigned short  ) ;
> #line 906
> extern void blk_queue_logical_block_size(struct request_queue * , unsigned short  ) ;
> #line 922
> extern void blk_queue_stack_limits(struct request_queue * , struct request_queue * ) ;
> #line 929
> extern void blk_queue_segment_boundary(struct request_queue * , unsigned long  ) ;
> #line 251 "include/linux/lru_cache.h"
> extern struct lru_cache *lc_create(char const   * , struct kmem_cache * , unsigned int  ,
>                                    unsigned int  , size_t  , size_t  ) ;
> #line 293
> extern int lc_try_lock(struct lru_cache * ) ;
> #line 135 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_state.h"
> bool conn_all_vols_unconf(struct drbd_tconn *tconn ) ;
> #line 147 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_state.h"
> __inline static int drbd_request_state(struct drbd_conf *mdev , union drbd_state mask ,
>                                        union drbd_state val ) 
50125c48298
< 
---
>   enum drbd_state_rv tmp ;
50128,50129c48301,48304
< #line 178
<   return ((unsigned int )s <= 8U ? drbd_disk_s_names[(unsigned int )s] : "TOO_LARGE");
---
> #line 151
>   tmp = _drbd_request_state(mdev, mask, val, 14);
> #line 151
>   return ((int )tmp);
50132,50133c48307,48314
< #line 181 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
< char const   *drbd_set_st_err_str(enum drbd_state_rv err ) 
---
> #line 155
> enum drbd_role conn_highest_peer(struct drbd_tconn *tconn ) ;
> #line 156
> enum drbd_disk_state conn_highest_disk(struct drbd_tconn *tconn ) ;
> #line 1441 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> bool conn_try_outdate_peer(struct drbd_tconn *tconn ) ;
> #line 1818 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static sector_t drbd_get_max_capacity___1(struct drbd_backing_dev *bdev ) 
50135c48316,48333
< 
---
>   sector_t s ;
>   int meta_dev_idx ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
>   sector_t __min1 ;
>   sector_t __min2 ;
>   sector_t tmp___2 ;
>   sector_t tmp___3 ;
>   sector_t __min1___0 ;
>   sector_t __min2___0 ;
>   sector_t tmp___4 ;
>   sector_t __min1___1 ;
>   sector_t __min2___1 ;
>   sector_t __min1___2 ;
>   sector_t __min2___2 ;
>   sector_t tmp___5 ;
50138,50144c48336,48353
< #line 183
<   return ((int )err >= -19 ? ((int )err < 0 ? drbd_state_sw_errors[- ((int )err)] : "TOO_LARGE") : "TOO_SMALL");
< }
< }
< #line 188 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
< void ldv_mutex_lock_265(struct mutex *ldv_func_arg1 ) 
< { 
---
> #line 1823
>   rcu_read_lock();
> #line 1824
>   _________p1 = *((struct disk_conf * volatile  *)(& bdev->disk_conf));
> #line 1824
>   tmp = debug_lockdep_rcu_enabled();
> #line 1824
>   if (tmp != 0 && ! __warned) {
> #line 1824
>     tmp___0 = rcu_read_lock_held();
> #line 1824
>     if (tmp___0 == 0 && 1) {
> #line 1824
>       __warned = 1;
> #line 1824
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h",
>                              1824, "suspicious rcu_dereference_check() usage");
>     } else {
50145a48355,48356
>     }
>   } else {
50147,50153c48358,48414
<   {
< #line 193
<   ldv_mutex_lock_lock(ldv_func_arg1);
< #line 195
<   mutex_lock(ldv_func_arg1);
< #line 196
<   return;
---
>   }
> #line 1824
>   meta_dev_idx = _________p1->meta_dev_idx;
> #line 1825
>   rcu_read_unlock();
> #line 1827
>   switch (meta_dev_idx) {
>   case -1: ;
>   case -3: 
> #line 1831
>   tmp___3 = drbd_get_capacity(bdev->backing_bdev);
> #line 1831
>   if (tmp___3 != 0UL) {
> #line 1831
>     __min1 = 2251799813685248UL;
> #line 1831
>     tmp___2 = _drbd_md_first_sector(meta_dev_idx, bdev);
> #line 1831
>     __min2 = tmp___2;
> #line 1831
>     s = __min1 < __min2 ? __min1 : __min2;
>   } else {
> #line 1831
>     s = 0UL;
>   }
> #line 1834
>   goto ldv_51507;
>   case -2: 
> #line 1836
>   __min1___0 = 2251799813685248UL;
> #line 1836
>   tmp___4 = drbd_get_capacity(bdev->backing_bdev);
> #line 1836
>   __min2___0 = tmp___4;
> #line 1836
>   s = __min1___0 < __min2___0 ? __min1___0 : __min2___0;
> #line 1839
>   __min1___1 = s;
> #line 1839
>   __min2___1 = (unsigned long )(bdev->md.md_size_sect - (u32 )bdev->md.bm_offset) << 15;
> #line 1839
>   s = __min1___1 < __min2___1 ? __min1___1 : __min2___1;
> #line 1842
>   goto ldv_51507;
>   default: 
> #line 1844
>   __min1___2 = 8587575296UL;
> #line 1844
>   tmp___5 = drbd_get_capacity(bdev->backing_bdev);
> #line 1844
>   __min2___2 = tmp___5;
> #line 1844
>   s = __min1___2 < __min2___2 ? __min1___2 : __min2___2;
>   }
>   ldv_51507: ;
> #line 1847
>   return (s);
50156,50157c48417,48418
< #line 198 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
< void ldv_mutex_unlock_266(struct mutex *ldv_func_arg1 ) 
---
> #line 89 "include/net/genetlink.h"
> __inline static struct net *genl_info_net(struct genl_info *info ) 
50159c48420
< 
---
>   struct net *tmp ;
50162,50167c48423,48426
< #line 203
<   ldv_mutex_unlock_lock(ldv_func_arg1);
< #line 205
<   mutex_unlock(ldv_func_arg1);
< #line 206
<   return;
---
> #line 91
>   tmp = read_pnet((struct net * const  *)(& info->_net));
> #line 91
>   return (tmp);
50170,50171c48429,48441
< #line 208 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
< void ldv_mutex_lock_267(struct mutex *ldv_func_arg1 ) 
---
> #line 124
> extern int genl_register_family_with_ops(struct genl_family * , struct genl_ops * ,
>                                          size_t  ) ;
> #line 126
> extern int genl_unregister_family(struct genl_family * ) ;
> #line 129
> extern int genl_register_mc_group(struct genl_family * , struct genl_multicast_group * ) ;
> #line 136
> extern void *genlmsg_put(struct sk_buff * , u32  , u32  , struct genl_family * , int  ,
>                          u8  ) ;
> #line 181 "include/net/genetlink.h"
> __inline static void *genlmsg_put_reply(struct sk_buff *skb , struct genl_info *info ,
>                                         struct genl_family *family , int flags , u8 cmd ) 
50173c48443
< 
---
>   void *tmp ;
50176,50181c48446,48449
< #line 213
<   ldv_mutex_lock_mutex_of_device(ldv_func_arg1);
< #line 215
<   mutex_lock(ldv_func_arg1);
< #line 216
<   return;
---
> #line 186
>   tmp = genlmsg_put(skb, info->snd_portid, info->snd_seq, family, flags, (int )cmd);
> #line 186
>   return (tmp);
50184,50185c48452,48453
< #line 218 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
< int ldv_mutex_trylock_268(struct mutex *ldv_func_arg1 ) 
---
> #line 195 "include/net/genetlink.h"
> __inline static int genlmsg_end(struct sk_buff *skb , void *hdr ) 
50187d48454
<   ldv_func_ret_type___2 ldv_func_res ;
50189d48455
<   int tmp___0 ;
50192,50201c48458,48461
< #line 223
<   tmp = mutex_trylock(ldv_func_arg1);
< #line 223
<   ldv_func_res = tmp;
< #line 225
<   tmp___0 = ldv_mutex_trylock_mutex_of_device(ldv_func_arg1);
< #line 225
<   return (tmp___0);
< #line 227
<   return (ldv_func_res);
---
> #line 197
>   tmp = nlmsg_end(skb, (struct nlmsghdr *)hdr + 0xffffffffffffffecUL);
> #line 197
>   return (tmp);
50204,50205c48464,48465
< #line 230 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
< void ldv_mutex_unlock_269(struct mutex *ldv_func_arg1 ) 
---
> #line 205 "include/net/genetlink.h"
> __inline static void genlmsg_cancel(struct sk_buff *skb , void *hdr ) 
50210,50214c48470,48477
< #line 235
<   ldv_mutex_unlock_mutex_of_device(ldv_func_arg1);
< #line 237
<   mutex_unlock(ldv_func_arg1);
< #line 238
---
> #line 207
>   if ((unsigned long )hdr != (unsigned long )((void *)0)) {
> #line 208
>     nlmsg_cancel(skb, (struct nlmsghdr *)hdr + 0xffffffffffffffecUL);
>   } else {
> 
>   }
> #line 209
50218,50219c48481,48483
< #line 240 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
< void ldv_mutex_lock_270(struct mutex *ldv_func_arg1 ) 
---
> #line 219 "include/net/genetlink.h"
> __inline static int genlmsg_multicast_netns(struct net *net , struct sk_buff *skb ,
>                                             u32 portid , unsigned int group , gfp_t flags ) 
50221c48485
< 
---
>   int tmp ;
50224,50229c48488,48491
< #line 245
<   ldv_mutex_lock_mtx_of_percpu_rw_semaphore(ldv_func_arg1);
< #line 247
<   mutex_lock(ldv_func_arg1);
< #line 248
<   return;
---
> #line 222
>   tmp = nlmsg_multicast(net->genl_sock, skb, portid, group, flags);
> #line 222
>   return (tmp);
50232,50233c48494,48496
< #line 250 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
< void ldv_mutex_unlock_271(struct mutex *ldv_func_arg1 ) 
---
> #line 232 "include/net/genetlink.h"
> __inline static int genlmsg_multicast(struct sk_buff *skb , u32 portid , unsigned int group ,
>                                       gfp_t flags ) 
50234a48498
>   int tmp ;
50235a48500,48510
>   {
> #line 235
>   tmp = genlmsg_multicast_netns(& init_net, skb, portid, group, flags);
> #line 235
>   return (tmp);
> }
> }
> #line 255 "include/net/genetlink.h"
> __inline static int genlmsg_unicast(struct net *net , struct sk_buff *skb , u32 portid ) 
> { 
>   int tmp ;
50238,50239d48512
< #line 255
<   ldv_mutex_unlock_mtx_of_percpu_rw_semaphore(ldv_func_arg1);
50241,50243c48514,48516
<   mutex_unlock(ldv_func_arg1);
< #line 258
<   return;
---
>   tmp = nlmsg_unicast(net->genl_sock, skb, portid);
> #line 257
>   return (tmp);
50246,50247c48519,48520
< #line 260 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
< void ldv_mutex_lock_272(struct mutex *ldv_func_arg1 ) 
---
> #line 265 "include/net/genetlink.h"
> __inline static int genlmsg_reply(struct sk_buff *skb , struct genl_info *info ) 
50249c48522,48523
< 
---
>   struct net *tmp ;
>   int tmp___0 ;
50252,50253d48525
< #line 265
<   ldv_mutex_lock_mtx_of_percpu_rw_semaphore(ldv_func_arg1);
50255,50257c48527,48531
<   mutex_lock(ldv_func_arg1);
< #line 268
<   return;
---
>   tmp = genl_info_net(info);
> #line 267
>   tmp___0 = genlmsg_unicast(tmp, skb, info->snd_portid);
> #line 267
>   return (tmp___0);
50260,50261c48534,48535
< #line 270 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
< void ldv_mutex_unlock_273(struct mutex *ldv_func_arg1 ) 
---
> #line 274 "include/net/genetlink.h"
> __inline static void *genlmsg_data(struct genlmsghdr  const  *gnlh ) 
50266,50271c48540,48541
< #line 275
<   ldv_mutex_unlock_mtx_of_percpu_rw_semaphore(ldv_func_arg1);
< #line 277
<   mutex_unlock(ldv_func_arg1);
< #line 278
<   return;
---
> #line 276
>   return ((void *)gnlh + 4U);
50274,50275c48544,48545
< #line 280 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
< void ldv_mutex_lock_274(struct mutex *ldv_func_arg1 ) 
---
> #line 294 "include/net/genetlink.h"
> __inline static int genlmsg_msg_size(int payload ) 
50280,50285c48550,48551
< #line 285
<   ldv_mutex_lock_cred_guard_mutex_of_signal_struct(ldv_func_arg1);
< #line 287
<   mutex_lock(ldv_func_arg1);
< #line 288
<   return;
---
> #line 296
>   return ((int )((unsigned int )payload + 4U));
50288,50289c48554,48555
< #line 290 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
< void ldv_mutex_unlock_275(struct mutex *ldv_func_arg1 ) 
---
> #line 303 "include/net/genetlink.h"
> __inline static int genlmsg_total_size(int payload ) 
50291c48557
< 
---
>   int tmp ;
50294,50299c48560,48563
< #line 295
<   ldv_mutex_unlock_cred_guard_mutex_of_signal_struct(ldv_func_arg1);
< #line 297
<   mutex_unlock(ldv_func_arg1);
< #line 298
<   return;
---
> #line 305
>   tmp = genlmsg_msg_size(payload);
> #line 305
>   return ((int )((unsigned int )tmp + 3U) & -4);
50302,50303c48566,48567
< #line 47 "include/uapi/linux/byteorder/little_endian.h"
< __inline static __u64 __le64_to_cpup(__le64 const   *p ) 
---
> #line 313 "include/net/genetlink.h"
> __inline static struct sk_buff *genlmsg_new(size_t payload , gfp_t flags ) 
50305c48569,48570
< 
---
>   int tmp ;
>   struct sk_buff *tmp___0 ;
50308,50309c48573,48578
< #line 49
<   return ((__u64 )*p);
---
> #line 315
>   tmp = genlmsg_total_size((int )payload);
> #line 315
>   tmp___0 = nlmsg_new((size_t )tmp, flags);
> #line 315
>   return (tmp___0);
50312,50315c48581,48759
< #line 55 "include/uapi/linux/byteorder/little_endian.h"
< __inline static __u32 __le32_to_cpup(__le32 const   *p ) 
< { 
< 
---
> #line 54 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_add_minor(struct sk_buff *skb , struct genl_info *info ) ;
> #line 55
> int drbd_adm_delete_minor(struct sk_buff *skb , struct genl_info *info ) ;
> #line 57
> int drbd_adm_new_resource(struct sk_buff *skb , struct genl_info *info ) ;
> #line 58
> int drbd_adm_del_resource(struct sk_buff *skb , struct genl_info *info ) ;
> #line 59
> int drbd_adm_down(struct sk_buff *skb , struct genl_info *info ) ;
> #line 61
> int drbd_adm_set_role(struct sk_buff *skb , struct genl_info *info ) ;
> #line 62
> int drbd_adm_attach(struct sk_buff *skb , struct genl_info *info ) ;
> #line 63
> int drbd_adm_disk_opts(struct sk_buff *skb , struct genl_info *info ) ;
> #line 64
> int drbd_adm_detach(struct sk_buff *skb , struct genl_info *info ) ;
> #line 65
> int drbd_adm_connect(struct sk_buff *skb , struct genl_info *info ) ;
> #line 66
> int drbd_adm_net_opts(struct sk_buff *skb , struct genl_info *info ) ;
> #line 67
> int drbd_adm_resize(struct sk_buff *skb , struct genl_info *info ) ;
> #line 68
> int drbd_adm_start_ov(struct sk_buff *skb , struct genl_info *info ) ;
> #line 69
> int drbd_adm_new_c_uuid(struct sk_buff *skb , struct genl_info *info ) ;
> #line 70
> int drbd_adm_disconnect(struct sk_buff *skb , struct genl_info *info ) ;
> #line 71
> int drbd_adm_invalidate(struct sk_buff *skb , struct genl_info *info ) ;
> #line 72
> int drbd_adm_invalidate_peer(struct sk_buff *skb , struct genl_info *info ) ;
> #line 73
> int drbd_adm_pause_sync(struct sk_buff *skb , struct genl_info *info ) ;
> #line 74
> int drbd_adm_resume_sync(struct sk_buff *skb , struct genl_info *info ) ;
> #line 75
> int drbd_adm_suspend_io(struct sk_buff *skb , struct genl_info *info ) ;
> #line 76
> int drbd_adm_resume_io(struct sk_buff *skb , struct genl_info *info ) ;
> #line 77
> int drbd_adm_outdate(struct sk_buff *skb , struct genl_info *info ) ;
> #line 78
> int drbd_adm_resource_opts(struct sk_buff *skb , struct genl_info *info ) ;
> #line 79
> int drbd_adm_get_status(struct sk_buff *skb , struct genl_info *info ) ;
> #line 80
> int drbd_adm_get_timeout_type(struct sk_buff *skb , struct genl_info *info ) ;
> #line 82
> int drbd_adm_get_status_all(struct sk_buff *skb , struct netlink_callback *cb ) ;
> #line 4 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_nla.h"
> int drbd_nla_parse_nested(struct nlattr **tb , int maxtype , struct nlattr *nla ,
>                           struct nla_policy  const  *policy ) ;
> #line 6
> struct nlattr *drbd_nla_find_nested(int maxtype , struct nlattr *nla , int attrtype ) ;
> #line 24 "include/linux/genl_magic_func.h"
> static struct nla_policy drbd_tla_nl_policy[14U]  = 
> #line 24 "include/linux/genl_magic_func.h"
>   {      {(unsigned short)0, (unsigned short)0}, 
>         {8U, (unsigned short)0}, 
>         {8U, (unsigned short)0}, 
>         {8U, (unsigned short)0}, 
>         {8U, (unsigned short)0}, 
>         {8U, (unsigned short)0}, 
>         {8U, (unsigned short)0}, 
>         {8U, (unsigned short)0}, 
>         {8U, (unsigned short)0}, 
>         {8U, (unsigned short)0}, 
>         {8U, (unsigned short)0}, 
>         {8U, (unsigned short)0}, 
>         {8U, (unsigned short)0}, 
>         {8U, (unsigned short)0}};
> #line 102 "include/linux/drbd_genl.h"
> static struct nla_policy drbd_cfg_context_nl_policy[5U]  = {      {(unsigned short)0, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {10U, 127U}, 
>         {11U, 128U}, 
>         {11U, 128U}};
> #line 135 "include/linux/drbd_genl.h"
> static struct nla_policy disk_conf_nl_policy[24U]  = 
> #line 135
>   {      {(unsigned short)0, (unsigned short)0}, 
>         {10U, 127U}, 
>         {10U, 127U}, 
>         {3U, (unsigned short)0}, 
>         {4U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {1U, (unsigned short)0}, 
>         {1U, (unsigned short)0}, 
>         {1U, (unsigned short)0}, 
>         {1U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {(unsigned short)0, (unsigned short)0}, 
>         {1U, (unsigned short)0}};
> #line 140 "include/linux/drbd_genl.h"
> static struct nla_policy res_opts_nl_policy[3U]  = {      {(unsigned short)0, (unsigned short)0}, 
>         {10U, 31U}, 
>         {3U, (unsigned short)0}};
> #line 174 "include/linux/drbd_genl.h"
> static struct nla_policy net_conf_nl_policy[30U]  = 
> #line 174
>   {      {(unsigned short)0, (unsigned short)0}, 
>         {10U, 63U}, 
>         {10U, 63U}, 
>         {10U, 63U}, 
>         {10U, 63U}, 
>         {10U, 63U}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {1U, (unsigned short)0}, 
>         {1U, (unsigned short)0}, 
>         {1U, (unsigned short)0}, 
>         {1U, (unsigned short)0}, 
>         {1U, (unsigned short)0}, 
>         {1U, (unsigned short)0}};
> #line 178 "include/linux/drbd_genl.h"
> static struct nla_policy set_role_parms_nl_policy[2U]  = {      {(unsigned short)0, (unsigned short)0}, 
>         {1U, (unsigned short)0}};
> #line 184 "include/linux/drbd_genl.h"
> static struct nla_policy resize_parms_nl_policy[4U]  = {      {(unsigned short)0, (unsigned short)0}, 
>         {4U, (unsigned short)0}, 
>         {1U, (unsigned short)0}, 
>         {1U, (unsigned short)0}};
> #line 229 "include/linux/drbd_genl.h"
> static struct nla_policy start_ov_parms_nl_policy[3U]  = {      {(unsigned short)0, (unsigned short)0}, 
>         {4U, (unsigned short)0}, 
>         {4U, (unsigned short)0}};
> #line 233 "include/linux/drbd_genl.h"
> static struct nla_policy new_c_uuid_parms_nl_policy[2U]  = {      {(unsigned short)0, (unsigned short)0}, 
>         {1U, (unsigned short)0}};
> #line 241 "include/linux/drbd_genl.h"
> static struct nla_policy disconnect_parms_nl_policy[2U]  = {      {(unsigned short)0, (unsigned short)0}, 
>         {1U, (unsigned short)0}};
> #line 245 "include/linux/drbd_genl.h"
> static struct nla_policy detach_parms_nl_policy[2U]  = {      {(unsigned short)0, (unsigned short)0}, 
>         {1U, (unsigned short)0}};
> #line 132 "include/linux/genl_magic_func.h"
> static struct nlattr *nested_attr_tb[128U]  ;
> #line 102 "include/linux/drbd_genl.h"
> static int __drbd_cfg_context_from_attrs(struct drbd_cfg_context *s , struct genl_info *info ,
>                                          bool exclude_invariants ) 
> { 
>   int maxtype ;
>   struct nlattr *tla ;
>   struct nlattr **ntb ;
>   struct nlattr *nla ;
>   int err ;
>   size_t tmp ;
>   int tmp___0 ;
>   int tmp___1 ;
50318,50319c48762,48850
< #line 57
<   return ((__u32 )*p);
---
> #line 97
>   maxtype = 4;
> #line 97
>   tla = *(info->attrs + 2UL);
> #line 97
>   ntb = (struct nlattr **)(& nested_attr_tb);
> #line 97
>   if ((unsigned long )tla == (unsigned long )((struct nlattr *)0)) {
> #line 97
>     return (-42);
>   } else {
> 
>   }
> #line 97
>   err = drbd_nla_parse_nested(ntb, maxtype, tla, (struct nla_policy  const  *)(& drbd_cfg_context_nl_policy));
> #line 97
>   if (err != 0) {
> #line 97
>     return (err);
>   } else {
> 
>   }
> #line 97
>   nla = *(ntb + 1UL);
> #line 97
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 97
>     if ((unsigned long )s != (unsigned long )((struct drbd_cfg_context *)0)) {
> #line 97
>       s->ctx_volume = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 97
>   nla = *(ntb + 2UL);
> #line 97
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 97
>     if ((unsigned long )s != (unsigned long )((struct drbd_cfg_context *)0)) {
> #line 97
>       tmp = nla_strlcpy((char *)(& s->ctx_resource_name), (struct nlattr  const  *)nla,
>                         128UL);
> #line 97
>       s->ctx_resource_name_len = (__u32 )tmp;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 97
>   nla = *(ntb + 3UL);
> #line 97
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 97
>     if ((unsigned long )s != (unsigned long )((struct drbd_cfg_context *)0)) {
> #line 97
>       tmp___0 = nla_memcpy((void *)(& s->ctx_my_addr), (struct nlattr  const  *)nla,
>                            128);
> #line 97
>       s->ctx_my_addr_len = (__u32 )tmp___0;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 97
>   nla = *(ntb + 4UL);
> #line 97
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 97
>     if ((unsigned long )s != (unsigned long )((struct drbd_cfg_context *)0)) {
> #line 97
>       tmp___1 = nla_memcpy((void *)(& s->ctx_peer_addr), (struct nlattr  const  *)nla,
>                            128);
> #line 97
>       s->ctx_peer_addr_len = (__u32 )tmp___1;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 97
>   return (0);
50322,50323c48853,48854
< #line 63 "include/uapi/linux/byteorder/little_endian.h"
< __inline static __u16 __le16_to_cpup(__le16 const   *p ) 
---
> #line 102 "include/linux/drbd_genl.h"
> static int drbd_cfg_context_from_attrs(struct drbd_cfg_context *s , struct genl_info *info ) 
50325c48856
< 
---
>   int tmp ;
50328,50329c48859,48862
< #line 65
<   return ((__u16 )*p);
---
> #line 97
>   tmp = __drbd_cfg_context_from_attrs(s, info, 0);
> #line 97
>   return (tmp);
50332,50341c48865,48866
< #line 326 "include/linux/kernel.h"
< extern int snprintf(char * , size_t  , char const   *  , ...) ;
< #line 93 "include/linux/bitmap.h"
< extern int __bitmap_equal(unsigned long const   * , unsigned long const   * , int  ) ;
< #line 125
< extern int __bitmap_parse(char const   * , unsigned int  , int  , unsigned long * ,
<                           int  ) ;
< #line 179 "include/linux/bitmap.h"
< __inline static void bitmap_copy(unsigned long *dst , unsigned long const   *src ,
<                                  int nbits ) 
---
> #line 135 "include/linux/drbd_genl.h"
> static int __disk_conf_from_attrs(struct disk_conf *s , struct genl_info *info , bool exclude_invariants ) 
50343,50345c48868,48881
<   int len ;
<   size_t __len ;
<   void *__ret ;
---
>   int maxtype ;
>   struct nlattr *tla ;
>   struct nlattr **ntb ;
>   struct nlattr *nla ;
>   int err ;
>   size_t tmp ;
>   size_t tmp___0 ;
>   u32 tmp___1 ;
>   u32 tmp___2 ;
>   u8 tmp___3 ;
>   u8 tmp___4 ;
>   u8 tmp___5 ;
>   u8 tmp___6 ;
>   u8 tmp___7 ;
50348,50355c48884,49301
< #line 185
<   len = (int )((unsigned int )(((unsigned long )nbits + 63UL) / 64UL) * 8U);
< #line 186
<   __len = (size_t )len;
< #line 186
<   __ret = __builtin_memcpy((void *)dst, (void const   *)src, __len);
< #line 189
<   return;
---
> #line 104
>   maxtype = 23;
> #line 104
>   tla = *(info->attrs + 3UL);
> #line 104
>   ntb = (struct nlattr **)(& nested_attr_tb);
> #line 104
>   if ((unsigned long )tla == (unsigned long )((struct nlattr *)0)) {
> #line 104
>     return (-42);
>   } else {
> 
>   }
> #line 104
>   err = drbd_nla_parse_nested(ntb, maxtype, tla, (struct nla_policy  const  *)(& disk_conf_nl_policy));
> #line 104
>   if (err != 0) {
> #line 104
>     return (err);
>   } else {
> 
>   }
> #line 104
>   nla = *(ntb + 1UL);
> #line 104
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 104
>     if ((int )exclude_invariants) {
> #line 104
>       printk("\016<< must not change invariant attr: %s\n", (char *)"backing_dev");
> #line 104
>       return (-17);
>     } else {
> 
>     }
> #line 104
>     if ((unsigned long )s != (unsigned long )((struct disk_conf *)0)) {
> #line 104
>       tmp = nla_strlcpy((char *)(& s->backing_dev), (struct nlattr  const  *)nla,
>                         128UL);
> #line 104
>       s->backing_dev_len = (__u32 )tmp;
>     } else {
> 
>     }
>   } else
> #line 104
>   if ((int )exclude_invariants) {
> 
>   } else {
> #line 104
>     printk("\016<< missing attr: %s\n", (char *)"backing_dev");
> #line 104
>     return (-42);
>   }
> #line 104
>   nla = *(ntb + 2UL);
> #line 104
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 104
>     if ((int )exclude_invariants) {
> #line 104
>       printk("\016<< must not change invariant attr: %s\n", (char *)"meta_dev");
> #line 104
>       return (-17);
>     } else {
> 
>     }
> #line 104
>     if ((unsigned long )s != (unsigned long )((struct disk_conf *)0)) {
> #line 104
>       tmp___0 = nla_strlcpy((char *)(& s->meta_dev), (struct nlattr  const  *)nla,
>                             128UL);
> #line 104
>       s->meta_dev_len = (__u32 )tmp___0;
>     } else {
> 
>     }
>   } else
> #line 104
>   if ((int )exclude_invariants) {
> 
>   } else {
> #line 104
>     printk("\016<< missing attr: %s\n", (char *)"meta_dev");
> #line 104
>     return (-42);
>   }
> #line 104
>   nla = *(ntb + 3UL);
> #line 104
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 104
>     if ((int )exclude_invariants) {
> #line 104
>       printk("\016<< must not change invariant attr: %s\n", (char *)"meta_dev_idx");
> #line 104
>       return (-17);
>     } else {
> 
>     }
> #line 104
>     if ((unsigned long )s != (unsigned long )((struct disk_conf *)0)) {
> #line 104
>       tmp___1 = nla_get_u32((struct nlattr  const  *)nla);
> #line 104
>       s->meta_dev_idx = (__s32 )tmp___1;
>     } else {
> 
>     }
>   } else
> #line 104
>   if ((int )exclude_invariants) {
> 
>   } else {
> #line 104
>     printk("\016<< missing attr: %s\n", (char *)"meta_dev_idx");
> #line 104
>     return (-42);
>   }
> #line 104
>   nla = *(ntb + 4UL);
> #line 104
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 104
>     if ((int )exclude_invariants) {
> #line 104
>       printk("\016<< must not change invariant attr: %s\n", (char *)"disk_size");
> #line 104
>       return (-17);
>     } else {
> 
>     }
> #line 104
>     if ((unsigned long )s != (unsigned long )((struct disk_conf *)0)) {
> #line 104
>       s->disk_size = nla_get_u64((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 104
>   nla = *(ntb + 5UL);
> #line 104
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 104
>     if ((int )exclude_invariants) {
> #line 104
>       printk("\016<< must not change invariant attr: %s\n", (char *)"max_bio_bvecs");
> #line 104
>       return (-17);
>     } else {
> 
>     }
> #line 104
>     if ((unsigned long )s != (unsigned long )((struct disk_conf *)0)) {
> #line 104
>       s->max_bio_bvecs = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 104
>   nla = *(ntb + 6UL);
> #line 104
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 104
>     if ((unsigned long )s != (unsigned long )((struct disk_conf *)0)) {
> #line 104
>       s->on_io_error = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 104
>   nla = *(ntb + 7UL);
> #line 104
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 104
>     if ((unsigned long )s != (unsigned long )((struct disk_conf *)0)) {
> #line 104
>       s->fencing = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 104
>   nla = *(ntb + 8UL);
> #line 104
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 104
>     if ((unsigned long )s != (unsigned long )((struct disk_conf *)0)) {
> #line 104
>       s->resync_rate = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 104
>   nla = *(ntb + 9UL);
> #line 104
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 104
>     if ((unsigned long )s != (unsigned long )((struct disk_conf *)0)) {
> #line 104
>       tmp___2 = nla_get_u32((struct nlattr  const  *)nla);
> #line 104
>       s->resync_after = (__s32 )tmp___2;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 104
>   nla = *(ntb + 10UL);
> #line 104
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 104
>     if ((unsigned long )s != (unsigned long )((struct disk_conf *)0)) {
> #line 104
>       s->al_extents = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 104
>   nla = *(ntb + 11UL);
> #line 104
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 104
>     if ((unsigned long )s != (unsigned long )((struct disk_conf *)0)) {
> #line 104
>       s->c_plan_ahead = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 104
>   nla = *(ntb + 12UL);
> #line 104
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 104
>     if ((unsigned long )s != (unsigned long )((struct disk_conf *)0)) {
> #line 104
>       s->c_delay_target = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 104
>   nla = *(ntb + 13UL);
> #line 104
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 104
>     if ((unsigned long )s != (unsigned long )((struct disk_conf *)0)) {
> #line 104
>       s->c_fill_target = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 104
>   nla = *(ntb + 14UL);
> #line 104
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 104
>     if ((unsigned long )s != (unsigned long )((struct disk_conf *)0)) {
> #line 104
>       s->c_max_rate = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 104
>   nla = *(ntb + 15UL);
> #line 104
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 104
>     if ((unsigned long )s != (unsigned long )((struct disk_conf *)0)) {
> #line 104
>       s->c_min_rate = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 104
>   nla = *(ntb + 16UL);
> #line 104
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 104
>     if ((unsigned long )s != (unsigned long )((struct disk_conf *)0)) {
> #line 104
>       tmp___3 = nla_get_u8((struct nlattr  const  *)nla);
> #line 104
>       s->disk_barrier = (char )tmp___3;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 104
>   nla = *(ntb + 17UL);
> #line 104
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 104
>     if ((unsigned long )s != (unsigned long )((struct disk_conf *)0)) {
> #line 104
>       tmp___4 = nla_get_u8((struct nlattr  const  *)nla);
> #line 104
>       s->disk_flushes = (char )tmp___4;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 104
>   nla = *(ntb + 18UL);
> #line 104
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 104
>     if ((unsigned long )s != (unsigned long )((struct disk_conf *)0)) {
> #line 104
>       tmp___5 = nla_get_u8((struct nlattr  const  *)nla);
> #line 104
>       s->disk_drain = (char )tmp___5;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 104
>   nla = *(ntb + 19UL);
> #line 104
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 104
>     if ((unsigned long )s != (unsigned long )((struct disk_conf *)0)) {
> #line 104
>       tmp___6 = nla_get_u8((struct nlattr  const  *)nla);
> #line 104
>       s->md_flushes = (char )tmp___6;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 104
>   nla = *(ntb + 20UL);
> #line 104
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 104
>     if ((unsigned long )s != (unsigned long )((struct disk_conf *)0)) {
> #line 104
>       s->disk_timeout = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 104
>   nla = *(ntb + 21UL);
> #line 104
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 104
>     if ((unsigned long )s != (unsigned long )((struct disk_conf *)0)) {
> #line 104
>       s->read_balancing = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 104
>   nla = *(ntb + 23UL);
> #line 104
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 104
>     if ((unsigned long )s != (unsigned long )((struct disk_conf *)0)) {
> #line 104
>       tmp___7 = nla_get_u8((struct nlattr  const  *)nla);
> #line 104
>       s->al_updates = (char )tmp___7;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 104
>   return (0);
50358,50360c49304,49305
< #line 233 "include/linux/bitmap.h"
< __inline static int bitmap_equal(unsigned long const   *src1 , unsigned long const   *src2 ,
<                                  int nbits ) 
---
> #line 135 "include/linux/drbd_genl.h"
> static int disk_conf_from_attrs(struct disk_conf *s , struct genl_info *info ) 
50365,50367c49310,49312
< #line 239
<   tmp = __bitmap_equal(src1, src2, nbits);
< #line 239
---
> #line 104
>   tmp = __disk_conf_from_attrs(s, info, 0);
> #line 104
50371,50373c49316,49317
< #line 301 "include/linux/bitmap.h"
< __inline static int bitmap_parse(char const   *buf , unsigned int buflen , unsigned long *maskp ,
<                                  int nmaskbits ) 
---
> #line 135 "include/linux/drbd_genl.h"
> static int disk_conf_from_attrs_for_change(struct disk_conf *s , struct genl_info *info ) 
50378,50380c49322,49324
< #line 304
<   tmp = __bitmap_parse(buf, buflen, 0, maskp, nmaskbits);
< #line 304
---
> #line 104
>   tmp = __disk_conf_from_attrs(s, info, 1);
> #line 104
50384,50385c49328,49329
< #line 404 "include/linux/cpumask.h"
< __inline static bool cpumask_equal(struct cpumask  const  *src1p , struct cpumask  const  *src2p ) 
---
> #line 140 "include/linux/drbd_genl.h"
> static int __res_opts_from_attrs(struct res_opts *s , struct genl_info *info , bool exclude_invariants ) 
50387c49331,49336
<   int tmp ;
---
>   int maxtype ;
>   struct nlattr *tla ;
>   struct nlattr **ntb ;
>   struct nlattr *nla ;
>   int err ;
>   size_t tmp ;
50390,50394c49339,49392
< #line 407
<   tmp = bitmap_equal((unsigned long const   *)(& src1p->bits), (unsigned long const   *)(& src2p->bits),
<                      nr_cpu_ids);
< #line 407
<   return (tmp != 0);
---
> #line 137
>   maxtype = 2;
> #line 137
>   tla = *(info->attrs + 4UL);
> #line 137
>   ntb = (struct nlattr **)(& nested_attr_tb);
> #line 137
>   if ((unsigned long )tla == (unsigned long )((struct nlattr *)0)) {
> #line 137
>     return (-42);
>   } else {
> 
>   }
> #line 137
>   err = drbd_nla_parse_nested(ntb, maxtype, tla, (struct nla_policy  const  *)(& res_opts_nl_policy));
> #line 137
>   if (err != 0) {
> #line 137
>     return (err);
>   } else {
> 
>   }
> #line 137
>   nla = *(ntb + 1UL);
> #line 137
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 137
>     if ((unsigned long )s != (unsigned long )((struct res_opts *)0)) {
> #line 137
>       tmp = nla_strlcpy((char *)(& s->cpu_mask), (struct nlattr  const  *)nla, 32UL);
> #line 137
>       s->cpu_mask_len = (__u32 )tmp;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 137
>   nla = *(ntb + 2UL);
> #line 137
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 137
>     if ((unsigned long )s != (unsigned long )((struct res_opts *)0)) {
> #line 137
>       s->on_no_data = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 137
>   return (0);
50397,50398c49395,49396
< #line 495 "include/linux/cpumask.h"
< __inline static void cpumask_copy(struct cpumask *dstp , struct cpumask  const  *srcp ) 
---
> #line 140 "include/linux/drbd_genl.h"
> static int res_opts_from_attrs(struct res_opts *s , struct genl_info *info ) 
50400c49398
< 
---
>   int tmp ;
50403,50407c49401,49404
< #line 498
<   bitmap_copy((unsigned long *)(& dstp->bits), (unsigned long const   *)(& srcp->bits),
<               nr_cpu_ids);
< #line 499
<   return;
---
> #line 137
>   tmp = __res_opts_from_attrs(s, info, 0);
> #line 137
>   return (tmp);
50410,50447c49407,49408
< #line 171 "include/linux/mutex.h"
< int ldv_mutex_trylock_290(struct mutex *ldv_func_arg1 ) ;
< #line 176
< void ldv_mutex_unlock_288(struct mutex *ldv_func_arg1 ) ;
< #line 180
< void ldv_mutex_unlock_291(struct mutex *ldv_func_arg1 ) ;
< #line 184
< void ldv_mutex_unlock_293(struct mutex *ldv_func_arg1 ) ;
< #line 188
< void ldv_mutex_unlock_295(struct mutex *ldv_func_arg1 ) ;
< #line 192
< void ldv_mutex_unlock_297(struct mutex *ldv_func_arg1 ) ;
< #line 196
< void ldv_mutex_unlock_299(struct mutex *ldv_func_arg1 ) ;
< #line 200
< void ldv_mutex_unlock_300(struct mutex *ldv_func_arg1 ) ;
< #line 204
< void ldv_mutex_unlock_302(struct mutex *ldv_func_arg1 ) ;
< #line 208
< void ldv_mutex_unlock_304(struct mutex *ldv_func_arg1 ) ;
< #line 10 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void ldv_mutex_lock_287(struct mutex *ldv_func_arg1 ) ;
< #line 14
< void ldv_mutex_lock_289(struct mutex *ldv_func_arg1 ) ;
< #line 18
< void ldv_mutex_lock_292(struct mutex *ldv_func_arg1 ) ;
< #line 22
< void ldv_mutex_lock_294(struct mutex *ldv_func_arg1 ) ;
< #line 26
< void ldv_mutex_lock_296(struct mutex *ldv_func_arg1 ) ;
< #line 30
< void ldv_mutex_lock_298(struct mutex *ldv_func_arg1 ) ;
< #line 34
< void ldv_mutex_lock_301(struct mutex *ldv_func_arg1 ) ;
< #line 38
< void ldv_mutex_lock_303(struct mutex *ldv_func_arg1 ) ;
< #line 208 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/thread_info.h"
< __inline static struct thread_info *current_thread_info___3(void) 
---
> #line 174 "include/linux/drbd_genl.h"
> static int __net_conf_from_attrs(struct net_conf *s , struct genl_info *info , bool exclude_invariants ) 
50449,50450c49410,49438
<   struct thread_info *ti ;
<   unsigned long pfo_ret__ ;
---
>   int maxtype ;
>   struct nlattr *tla ;
>   struct nlattr **ntb ;
>   struct nlattr *nla ;
>   int err ;
>   size_t tmp ;
>   size_t tmp___0 ;
>   size_t tmp___1 ;
>   size_t tmp___2 ;
>   size_t tmp___3 ;
>   u8 tmp___4 ;
>   u8 tmp___5 ;
>   u8 tmp___6 ;
>   u8 tmp___7 ;
>   u8 tmp___8 ;
>   u8 tmp___9 ;
> 
>   {
> #line 142
>   maxtype = 29;
> #line 142
>   tla = *(info->attrs + 5UL);
> #line 142
>   ntb = (struct nlattr **)(& nested_attr_tb);
> #line 142
>   if ((unsigned long )tla == (unsigned long )((struct nlattr *)0)) {
> #line 142
>     return (-42);
>   } else {
50452,50477d49439
<   {
< #line 211
<   switch (8UL) {
<   case 1UL: 
< #line 211
<   __asm__  ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
< #line 211
<   goto ldv_6310;
<   case 2UL: 
< #line 211
<   __asm__  ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
< #line 211
<   goto ldv_6310;
<   case 4UL: 
< #line 211
<   __asm__  ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
< #line 211
<   goto ldv_6310;
<   case 8UL: 
< #line 211
<   __asm__  ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
< #line 211
<   goto ldv_6310;
<   default: 
< #line 211
<   __bad_percpu_size();
50479,50483c49441,49902
<   ldv_6310: 
< #line 211
<   ti = (struct thread_info *)(pfo_ret__ - 8152UL);
< #line 213
<   return (ti);
---
> #line 142
>   err = drbd_nla_parse_nested(ntb, maxtype, tla, (struct nla_policy  const  *)(& net_conf_nl_policy));
> #line 142
>   if (err != 0) {
> #line 142
>     return (err);
>   } else {
> 
>   }
> #line 142
>   nla = *(ntb + 1UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       tmp = nla_strlcpy((char *)(& s->shared_secret), (struct nlattr  const  *)nla,
>                         64UL);
> #line 142
>       s->shared_secret_len = (__u32 )tmp;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 142
>   nla = *(ntb + 2UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       tmp___0 = nla_strlcpy((char *)(& s->cram_hmac_alg), (struct nlattr  const  *)nla,
>                             64UL);
> #line 142
>       s->cram_hmac_alg_len = (__u32 )tmp___0;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 142
>   nla = *(ntb + 3UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       tmp___1 = nla_strlcpy((char *)(& s->integrity_alg), (struct nlattr  const  *)nla,
>                             64UL);
> #line 142
>       s->integrity_alg_len = (__u32 )tmp___1;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 142
>   nla = *(ntb + 4UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       tmp___2 = nla_strlcpy((char *)(& s->verify_alg), (struct nlattr  const  *)nla,
>                             64UL);
> #line 142
>       s->verify_alg_len = (__u32 )tmp___2;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 142
>   nla = *(ntb + 5UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       tmp___3 = nla_strlcpy((char *)(& s->csums_alg), (struct nlattr  const  *)nla,
>                             64UL);
> #line 142
>       s->csums_alg_len = (__u32 )tmp___3;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 142
>   nla = *(ntb + 6UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       s->wire_protocol = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 142
>   nla = *(ntb + 7UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       s->connect_int = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 142
>   nla = *(ntb + 8UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       s->timeout = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 142
>   nla = *(ntb + 9UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       s->ping_int = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 142
>   nla = *(ntb + 10UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       s->ping_timeo = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 142
>   nla = *(ntb + 11UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       s->sndbuf_size = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 142
>   nla = *(ntb + 12UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       s->rcvbuf_size = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 142
>   nla = *(ntb + 13UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       s->ko_count = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 142
>   nla = *(ntb + 14UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       s->max_buffers = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 142
>   nla = *(ntb + 15UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       s->max_epoch_size = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 142
>   nla = *(ntb + 16UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       s->unplug_watermark = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 142
>   nla = *(ntb + 17UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       s->after_sb_0p = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 142
>   nla = *(ntb + 18UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       s->after_sb_1p = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 142
>   nla = *(ntb + 19UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       s->after_sb_2p = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 142
>   nla = *(ntb + 20UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       s->rr_conflict = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 142
>   nla = *(ntb + 21UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       s->on_congestion = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 142
>   nla = *(ntb + 22UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       s->cong_fill = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 142
>   nla = *(ntb + 23UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       s->cong_extents = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 142
>   nla = *(ntb + 24UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       tmp___4 = nla_get_u8((struct nlattr  const  *)nla);
> #line 142
>       s->two_primaries = (char )tmp___4;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 142
>   nla = *(ntb + 25UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((int )exclude_invariants) {
> #line 142
>       printk("\016<< must not change invariant attr: %s\n", (char *)"discard_my_data");
> #line 142
>       return (-17);
>     } else {
> 
>     }
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       tmp___5 = nla_get_u8((struct nlattr  const  *)nla);
> #line 142
>       s->discard_my_data = (char )tmp___5;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 142
>   nla = *(ntb + 26UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       tmp___6 = nla_get_u8((struct nlattr  const  *)nla);
> #line 142
>       s->tcp_cork = (char )tmp___6;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 142
>   nla = *(ntb + 27UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       tmp___7 = nla_get_u8((struct nlattr  const  *)nla);
> #line 142
>       s->always_asbp = (char )tmp___7;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 142
>   nla = *(ntb + 28UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((int )exclude_invariants) {
> #line 142
>       printk("\016<< must not change invariant attr: %s\n", (char *)"tentative");
> #line 142
>       return (-17);
>     } else {
> 
>     }
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       tmp___8 = nla_get_u8((struct nlattr  const  *)nla);
> #line 142
>       s->tentative = (char )tmp___8;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 142
>   nla = *(ntb + 29UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       tmp___9 = nla_get_u8((struct nlattr  const  *)nla);
> #line 142
>       s->use_rle = (char )tmp___9;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 142
>   return (0);
50486,50491c49905,49906
< #line 70 "include/linux/kmod.h"
< extern int call_usermodehelper_fns(char * , char ** , char ** , int  , int (*)(struct subprocess_info * ,
<                                                                                struct cred * ) ,
<                                    void (*)(struct subprocess_info * ) , void * ) ;
< #line 75 "include/linux/kmod.h"
< __inline static int call_usermodehelper(char *path , char **argv , char **envp , int wait ) 
---
> #line 174 "include/linux/drbd_genl.h"
> static int net_conf_from_attrs(struct net_conf *s , struct genl_info *info ) 
50496,50498c49911,49913
< #line 77
<   tmp = call_usermodehelper_fns(path, argv, envp, wait, 0, 0, 0);
< #line 77
---
> #line 142
>   tmp = __net_conf_from_attrs(s, info, 0);
> #line 142
50502,50509c49917,49918
< #line 207 "include/linux/kobject.h"
< extern int kobject_uevent(struct kobject * , enum kobject_action  ) ;
< #line 210 "include/linux/capability.h"
< extern bool capable(int  ) ;
< #line 2093 "include/linux/fs.h"
< extern struct block_device *blkdev_get_by_path(char const   * , fmode_t  , void * ) ;
< #line 16 "include/linux/uaccess.h"
< __inline static void pagefault_disable___0(void) 
---
> #line 174 "include/linux/drbd_genl.h"
> static int net_conf_from_attrs_for_change(struct net_conf *s , struct genl_info *info ) 
50511c49920
<   struct thread_info *tmp ;
---
>   int tmp ;
50514,50521c49923,49926
< #line 18
<   tmp = current_thread_info___3();
< #line 18
<   tmp->preempt_count = tmp->preempt_count + 1;
< #line 23
<   __asm__  volatile   ("": : : "memory");
< #line 24
<   return;
---
> #line 142
>   tmp = __net_conf_from_attrs(s, info, 1);
> #line 142
>   return (tmp);
50524,50527c49929,49938
< #line 26 "include/linux/uaccess.h"
< __inline static void pagefault_enable___0(void) 
< { 
<   struct thread_info *tmp ;
---
> #line 178 "include/linux/drbd_genl.h"
> static int __set_role_parms_from_attrs(struct set_role_parms *s , struct genl_info *info ,
>                                        bool exclude_invariants ) 
> { 
>   int maxtype ;
>   struct nlattr *tla ;
>   struct nlattr **ntb ;
>   struct nlattr *nla ;
>   int err ;
>   u8 tmp ;
50530,50539c49941,49980
< #line 32
<   __asm__  volatile   ("": : : "memory");
< #line 33
<   tmp = current_thread_info___3();
< #line 33
<   tmp->preempt_count = tmp->preempt_count + -1;
< #line 37
<   __asm__  volatile   ("": : : "memory");
< #line 38
<   return;
---
> #line 176
>   maxtype = 1;
> #line 176
>   tla = *(info->attrs + 6UL);
> #line 176
>   ntb = (struct nlattr **)(& nested_attr_tb);
> #line 176
>   if ((unsigned long )tla == (unsigned long )((struct nlattr *)0)) {
> #line 176
>     return (-42);
>   } else {
> 
>   }
> #line 176
>   err = drbd_nla_parse_nested(ntb, maxtype, tla, (struct nla_policy  const  *)(& set_role_parms_nl_policy));
> #line 176
>   if (err != 0) {
> #line 176
>     return (err);
>   } else {
> 
>   }
> #line 176
>   nla = *(ntb + 1UL);
> #line 176
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 176
>     if ((unsigned long )s != (unsigned long )((struct set_role_parms *)0)) {
> #line 176
>       tmp = nla_get_u8((struct nlattr  const  *)nla);
> #line 176
>       s->assume_uptodate = (char )tmp;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 176
>   return (0);
50542,50552c49983,49984
< #line 71 "include/linux/connector.h"
< extern int cn_add_callback(struct cb_id * , char const   * , void (*)(struct cn_msg * ,
<                                                                       struct netlink_skb_parms * ) ) ;
< #line 73
< extern void cn_del_callback(struct cb_id * ) ;
< #line 74
< extern int cn_netlink_send(struct cn_msg * , u32  , gfp_t  ) ;
< #line 409 "include/linux/genhd.h"
< extern void add_disk(struct gendisk * ) ;
< #line 66 "include/linux/highmem.h"
< __inline static void *kmap_atomic___0(struct page *page ) 
---
> #line 178 "include/linux/drbd_genl.h"
> static int set_role_parms_from_attrs(struct set_role_parms *s , struct genl_info *info ) 
50554c49986
<   void *tmp ;
---
>   int tmp ;
50557,50561c49989,49991
< #line 68
<   pagefault_disable___0();
< #line 69
<   tmp = lowmem_page_address((struct page  const  *)page);
< #line 69
---
> #line 176
>   tmp = __set_role_parms_from_attrs(s, info, 0);
> #line 176
50565,50568c49995,50005
< #line 73 "include/linux/highmem.h"
< __inline static void __kunmap_atomic___0(void *addr ) 
< { 
< 
---
> #line 184 "include/linux/drbd_genl.h"
> static int __resize_parms_from_attrs(struct resize_parms *s , struct genl_info *info ,
>                                      bool exclude_invariants ) 
> { 
>   int maxtype ;
>   struct nlattr *tla ;
>   struct nlattr **ntb ;
>   struct nlattr *nla ;
>   int err ;
>   u8 tmp ;
>   u8 tmp___0 ;
50571,50605c50008,50018
< #line 75
<   pagefault_enable___0();
< #line 76
<   return;
< }
< }
< #line 900 "include/linux/blkdev.h"
< extern void blk_queue_max_segments(struct request_queue * , unsigned short  ) ;
< #line 906
< extern void blk_queue_logical_block_size(struct request_queue * , unsigned short  ) ;
< #line 922
< extern void blk_queue_stack_limits(struct request_queue * , struct request_queue * ) ;
< #line 929
< extern void blk_queue_segment_boundary(struct request_queue * , unsigned long  ) ;
< #line 241 "include/linux/lru_cache.h"
< extern struct lru_cache *lc_create(char const   * , struct kmem_cache * , unsigned int  ,
<                                    size_t  , size_t  ) ;
< #line 1596 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< enum drbd_disk_state drbd_try_outdate_peer(struct drbd_conf *mdev ) ;
< #line 2011 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static sector_t drbd_get_max_capacity___1(struct drbd_backing_dev *bdev ) 
< { 
<   sector_t s ;
<   sector_t __min1 ;
<   sector_t __min2 ;
<   sector_t tmp___0 ;
<   sector_t tmp___1 ;
<   sector_t __min1___0 ;
<   sector_t __min2___0 ;
<   sector_t tmp___2 ;
<   sector_t __min1___1 ;
<   sector_t __min2___1 ;
<   sector_t __min1___2 ;
<   sector_t __min2___2 ;
<   sector_t tmp___3 ;
---
> #line 180
>   maxtype = 3;
> #line 180
>   tla = *(info->attrs + 7UL);
> #line 180
>   ntb = (struct nlattr **)(& nested_attr_tb);
> #line 180
>   if ((unsigned long )tla == (unsigned long )((struct nlattr *)0)) {
> #line 180
>     return (-42);
>   } else {
50607,50623c50020,50026
<   {
< #line 2014
<   switch (bdev->dc.meta_dev_idx) {
<   case -1: ;
<   case -3: 
< #line 2018
<   tmp___1 = drbd_get_capacity(bdev->backing_bdev);
< #line 2018
<   if (tmp___1 != 0UL) {
< #line 2018
<     __min1 = 2251799813685248UL;
< #line 2018
<     tmp___0 = drbd_md_first_sector(bdev);
< #line 2018
<     __min2 = tmp___0;
< #line 2018
<     s = __min1 < __min2 ? __min1 : __min2;
---
>   }
> #line 180
>   err = drbd_nla_parse_nested(ntb, maxtype, tla, (struct nla_policy  const  *)(& resize_parms_nl_policy));
> #line 180
>   if (err != 0) {
> #line 180
>     return (err);
50625,50626c50028
< #line 2018
<     s = 0UL;
---
> 
50628,50655c50030,50042
< #line 2021
<   goto ldv_51163;
<   case -2: 
< #line 2023
<   __min1___0 = 2251799813685248UL;
< #line 2023
<   tmp___2 = drbd_get_capacity(bdev->backing_bdev);
< #line 2023
<   __min2___0 = tmp___2;
< #line 2023
<   s = __min1___0 < __min2___0 ? __min1___0 : __min2___0;
< #line 2026
<   __min1___1 = s;
< #line 2026
<   __min2___1 = (unsigned long )(bdev->md.md_size_sect - (u32 )bdev->md.bm_offset) << 15;
< #line 2026
<   s = __min1___1 < __min2___1 ? __min1___1 : __min2___1;
< #line 2029
<   goto ldv_51163;
<   default: 
< #line 2031
<   __min1___2 = 8587575296UL;
< #line 2031
<   tmp___3 = drbd_get_capacity(bdev->backing_bdev);
< #line 2031
<   __min2___2 = tmp___3;
< #line 2031
<   s = __min1___2 < __min2___2 ? __min1___2 : __min2___2;
---
> #line 180
>   nla = *(ntb + 1UL);
> #line 180
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 180
>     if ((unsigned long )s != (unsigned long )((struct resize_parms *)0)) {
> #line 180
>       s->resize_size = nla_get_u64((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
50657,50659c50044,50077
<   ldv_51163: ;
< #line 2034
<   return (s);
---
> #line 180
>   nla = *(ntb + 2UL);
> #line 180
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 180
>     if ((unsigned long )s != (unsigned long )((struct resize_parms *)0)) {
> #line 180
>       tmp = nla_get_u8((struct nlattr  const  *)nla);
> #line 180
>       s->resize_force = (char )tmp;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 180
>   nla = *(ntb + 3UL);
> #line 180
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 180
>     if ((unsigned long )s != (unsigned long )((struct resize_parms *)0)) {
> #line 180
>       tmp___0 = nla_get_u8((struct nlattr  const  *)nla);
> #line 180
>       s->no_resync = (char )tmp___0;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 180
>   return (0);
50662,50663c50080,50081
< #line 7 "include/linux/unaligned/access_ok.h"
< __inline static u16 get_unaligned_le16(void const   *p ) 
---
> #line 184 "include/linux/drbd_genl.h"
> static int resize_parms_from_attrs(struct resize_parms *s , struct genl_info *info ) 
50665c50083
<   __u16 tmp ;
---
>   int tmp ;
50668,50670c50086,50088
< #line 9
<   tmp = __le16_to_cpup((__le16 const   *)p);
< #line 9
---
> #line 180
>   tmp = __resize_parms_from_attrs(s, info, 0);
> #line 180
50674,50677c50092,50100
< #line 12 "include/linux/unaligned/access_ok.h"
< __inline static u32 get_unaligned_le32(void const   *p ) 
< { 
<   __u32 tmp ;
---
> #line 229 "include/linux/drbd_genl.h"
> static int __start_ov_parms_from_attrs(struct start_ov_parms *s , struct genl_info *info ,
>                                        bool exclude_invariants ) 
> { 
>   int maxtype ;
>   struct nlattr *tla ;
>   struct nlattr **ntb ;
>   struct nlattr *nla ;
>   int err ;
50680,50683c50103,50154
< #line 14
<   tmp = __le32_to_cpup((__le32 const   *)p);
< #line 14
<   return (tmp);
---
> #line 226
>   maxtype = 2;
> #line 226
>   tla = *(info->attrs + 9UL);
> #line 226
>   ntb = (struct nlattr **)(& nested_attr_tb);
> #line 226
>   if ((unsigned long )tla == (unsigned long )((struct nlattr *)0)) {
> #line 226
>     return (-42);
>   } else {
> 
>   }
> #line 226
>   err = drbd_nla_parse_nested(ntb, maxtype, tla, (struct nla_policy  const  *)(& start_ov_parms_nl_policy));
> #line 226
>   if (err != 0) {
> #line 226
>     return (err);
>   } else {
> 
>   }
> #line 226
>   nla = *(ntb + 1UL);
> #line 226
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 226
>     if ((unsigned long )s != (unsigned long )((struct start_ov_parms *)0)) {
> #line 226
>       s->ov_start_sector = nla_get_u64((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 226
>   nla = *(ntb + 2UL);
> #line 226
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 226
>     if ((unsigned long )s != (unsigned long )((struct start_ov_parms *)0)) {
> #line 226
>       s->ov_stop_sector = nla_get_u64((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 226
>   return (0);
50686,50687c50157,50158
< #line 17 "include/linux/unaligned/access_ok.h"
< __inline static u64 get_unaligned_le64(void const   *p ) 
---
> #line 229 "include/linux/drbd_genl.h"
> static int start_ov_parms_from_attrs(struct start_ov_parms *s , struct genl_info *info ) 
50689c50160
<   __u64 tmp ;
---
>   int tmp ;
50692,50694c50163,50165
< #line 19
<   tmp = __le64_to_cpup((__le64 const   *)p);
< #line 19
---
> #line 226
>   tmp = __start_ov_parms_from_attrs(s, info, 0);
> #line 226
50698,50701c50169,50178
< #line 37 "include/linux/unaligned/access_ok.h"
< __inline static void put_unaligned_le16(u16 val , void *p ) 
< { 
< 
---
> #line 233 "include/linux/drbd_genl.h"
> static int __new_c_uuid_parms_from_attrs(struct new_c_uuid_parms *s , struct genl_info *info ,
>                                          bool exclude_invariants ) 
> { 
>   int maxtype ;
>   struct nlattr *tla ;
>   struct nlattr **ntb ;
>   struct nlattr *nla ;
>   int err ;
>   u8 tmp ;
50704,50712c50181,50191
< #line 39
<   *((__le16 *)p) = val;
< #line 40
<   return;
< }
< }
< #line 42 "include/linux/unaligned/access_ok.h"
< __inline static void put_unaligned_le32(u32 val , void *p ) 
< { 
---
> #line 231
>   maxtype = 1;
> #line 231
>   tla = *(info->attrs + 10UL);
> #line 231
>   ntb = (struct nlattr **)(& nested_attr_tb);
> #line 231
>   if ((unsigned long )tla == (unsigned long )((struct nlattr *)0)) {
> #line 231
>     return (-42);
>   } else {
50713a50193,50200
>   }
> #line 231
>   err = drbd_nla_parse_nested(ntb, maxtype, tla, (struct nla_policy  const  *)(& new_c_uuid_parms_nl_policy));
> #line 231
>   if (err != 0) {
> #line 231
>     return (err);
>   } else {
50715,50719c50202,50220
<   {
< #line 44
<   *((__le32 *)p) = val;
< #line 45
<   return;
---
>   }
> #line 231
>   nla = *(ntb + 1UL);
> #line 231
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 231
>     if ((unsigned long )s != (unsigned long )((struct new_c_uuid_parms *)0)) {
> #line 231
>       tmp = nla_get_u8((struct nlattr  const  *)nla);
> #line 231
>       s->clear_bm = (char )tmp;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 231
>   return (0);
50722,50723c50223,50224
< #line 47 "include/linux/unaligned/access_ok.h"
< __inline static void put_unaligned_le64(u64 val , void *p ) 
---
> #line 233 "include/linux/drbd_genl.h"
> static int new_c_uuid_parms_from_attrs(struct new_c_uuid_parms *s , struct genl_info *info ) 
50725c50226
< 
---
>   int tmp ;
50728,50731c50229,50232
< #line 49
<   *((__le64 *)p) = val;
< #line 50
<   return;
---
> #line 231
>   tmp = __new_c_uuid_parms_from_attrs(s, info, 0);
> #line 231
>   return (tmp);
50734,50849c50235,50244
< #line 8 "include/linux/unaligned/generic.h"
< extern void __bad_unaligned_access_size(void) ;
< #line 76 "include/linux/drbd_tag_magic.h"
< static struct tag  const  tag_descriptions[91U]  = 
< #line 76 "include/linux/drbd_tag_magic.h"
<   {      {0, 0, 0}, 
<         {"primary_force", 32768, 4}, 
<         {"disk_size", 16384, 8}, 
<         {"backing_dev", 57344, 128}, 
<         {"meta_dev", 57344, 128}, 
<         {"meta_dev_idx", 8192, 4}, 
<         {"on_io_error", 0, 4}, 
<         {"fencing", 0, 4}, 
<         {"my_addr", 57344, 128}, 
<         {"peer_addr", 57344, 128}, 
<         {"shared_secret", 49152, 64}, 
<         {"cram_hmac_alg", 49152, 64}, 
<         {0, 0, 0}, 
<         {0, 0, 0}, 
<         {"timeout", 0, 4}, 
<         {"wire_protocol", 8192, 4}, 
<         {"try_connect_int", 0, 4}, 
<         {"ping_int", 0, 4}, 
<         {"max_epoch_size", 0, 4}, 
<         {"max_buffers", 0, 4}, 
<         {"unplug_watermark", 0, 4}, 
<         {"sndbuf_size", 0, 4}, 
<         {"ko_count", 0, 4}, 
<         {0, 0, 0}, 
<         {"after_sb_0p", 0, 4}, 
<         {"after_sb_1p", 0, 4}, 
<         {"after_sb_2p", 0, 4}, 
<         {"want_lose", 32768, 4}, 
<         {"two_primaries", 32768, 4}, 
<         {"resize_size", 16384, 8}, 
<         {"rate", 0, 4}, 
<         {"after", 0, 4}, 
<         {"al_extents", 0, 4}, 
<         {"state_i", 0, 4}, 
<         {"uuids", 49152, 32}, 
<         {"uuids_flags", 0, 4}, 
<         {"use_degraded", 32768, 4}, 
<         {"use_bmbv", 32768, 4}, 
<         {"helper", 49152, 32}, 
<         {"rr_conflict", 0, 4}, 
<         {"ping_timeo", 0, 4}, 
<         {"always_asbp", 32768, 4}, 
<         {0, 0, 0}, 
<         {"sync_progress", 0, 4}, 
<         {"integrity_alg", 49152, 64}, 
<         {"dump_ee_reason", 49152, 32}, 
<         {"seen_digest", 49152, 64}, 
<         {"calc_digest", 49152, 64}, 
<         {"ee_sector", 16384, 8}, 
<         {"ee_block_id", 16384, 8}, 
<         {"ee_data", 49152, 32768}, 
<         {"cpu_mask", 49152, 32}, 
<         {"verify_alg", 49152, 64}, 
<         {"no_disk_flush", 32768, 4}, 
<         {"no_md_flush", 32768, 4}, 
<         {0, 0, 0}, 
<         {"max_bio_bvecs", 0, 4}, 
<         {"no_disk_barrier", 32768, 4}, 
<         {"no_disk_drain", 32768, 4}, 
<         {0, 0, 0}, 
<         {"mind_af", 40960, 4}, 
<         {"no_cork", 32768, 4}, 
<         {"auto_sndbuf_size", 40960, 4}, 
<         {"clear_bm", 40960, 4}, 
<         {"csums_alg", 49152, 64}, 
<         {"use_rle", 32768, 4}, 
<         {"start_sector", 16384, 8}, 
<         {"rcvbuf_size", 0, 4}, 
<         {"resize_force", 32768, 4}, 
<         {"no_resync", 40960, 4}, 
<         {"dry_run", 40960, 4}, 
<         {0, 0, 0}, 
<         {0, 0, 0}, 
<         {0, 0, 0}, 
<         {0, 0, 0}, 
<         {"on_no_data", 0, 4}, 
<         {"c_plan_ahead", 0, 4}, 
<         {"c_delay_target", 0, 4}, 
<         {"c_fill_target", 0, 4}, 
<         {"c_max_rate", 0, 4}, 
<         {"c_min_rate", 0, 4}, 
<         {"on_congestion", 0, 4}, 
<         {"cong_fill", 0, 4}, 
<         {"cong_extents", 0, 4}, 
<         {"force", 32768, 4}, 
<         {0, 0, 0}, 
<         {0, 0, 0}, 
<         {0, 0, 0}, 
<         {"detach_force", 40960, 4}, 
<         {"disk_timeout", 0, 4}, 
<         {"stop_sector", 24576, 8}};
< #line 116 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static unsigned short *tl_add_blob(unsigned short *tl , enum drbd_tags tag , void const   *data ,
<                                    int len ) ;
< #line 117
< static unsigned short *tl_add_str(unsigned short *tl , enum drbd_tags tag , char const   *str ) ;
< #line 118
< static unsigned short *tl_add_int(unsigned short *tl , enum drbd_tags tag , void const   *val ) ;
< #line 121 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static char *drbd_m_holder  =    (char *)"Hands off! this is DRBD\'s meta data device.";
< #line 16 "include/linux/drbd_nl.h"
< static int primary_from_tags(struct drbd_conf *mdev , unsigned short *tags , struct primary *arg ) ;
< #line 16 "include/linux/drbd_nl.h"
< static int primary_from_tags(struct drbd_conf *mdev , unsigned short *tags , struct primary *arg ) 
< { 
<   int tag ;
<   int dlen ;
<   unsigned short *tmp ;
<   u16 tmp___0 ;
<   unsigned short *tmp___1 ;
<   u16 tmp___2 ;
---
> #line 241 "include/linux/drbd_genl.h"
> static int __disconnect_parms_from_attrs(struct disconnect_parms *s , struct genl_info *info ,
>                                          bool exclude_invariants ) 
> { 
>   int maxtype ;
>   struct nlattr *tla ;
>   struct nlattr **ntb ;
>   struct nlattr *nla ;
>   int err ;
>   u8 tmp ;
50852,50877c50247,50256
< #line 14
<   goto ldv_51963;
<   ldv_51962: 
< #line 14
<   tmp = tags;
< #line 14
<   tags = tags + 1;
< #line 14
<   tmp___0 = get_unaligned_le16((void const   *)tmp);
< #line 14
<   dlen = (int )tmp___0;
< #line 14
<   switch (tag & 8191) {
<   case 1: 
< #line 14
<   arg->primary_force = (int )((signed char )*((char *)tags)) != 0;
< #line 14
<   goto ldv_51960;
<   default: ;
< #line 14
<   if ((tag & 8192) != 0) {
< #line 14
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Unknown tag: %d\n",
<             tag & 8191);
< #line 14
<     return (0);
---
> #line 239
>   maxtype = 1;
> #line 239
>   tla = *(info->attrs + 12UL);
> #line 239
>   ntb = (struct nlattr **)(& nested_attr_tb);
> #line 239
>   if ((unsigned long )tla == (unsigned long )((struct nlattr *)0)) {
> #line 239
>     return (-42);
50880a50260,50267
> #line 239
>   err = drbd_nla_parse_nested(ntb, maxtype, tla, (struct nla_policy  const  *)(& disconnect_parms_nl_policy));
> #line 239
>   if (err != 0) {
> #line 239
>     return (err);
>   } else {
> 
50882,50897c50269,50281
<   ldv_51960: 
< #line 14
<   tags = tags + (unsigned long )dlen;
<   ldv_51963: 
< #line 14
<   tmp___1 = tags;
< #line 14
<   tags = tags + 1;
< #line 14
<   tmp___2 = get_unaligned_le16((void const   *)tmp___1);
< #line 14
<   tag = (int )tmp___2;
< #line 14
<   if (tag != 0) {
< #line 15
<     goto ldv_51962;
---
> #line 239
>   nla = *(ntb + 1UL);
> #line 239
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 239
>     if ((unsigned long )s != (unsigned long )((struct disconnect_parms *)0)) {
> #line 239
>       tmp = nla_get_u8((struct nlattr  const  *)nla);
> #line 239
>       s->force_disconnect = (char )tmp;
>     } else {
> 
>     }
50900a50285,50292
> #line 239
>   return (0);
> }
> }
> #line 241 "include/linux/drbd_genl.h"
> static int disconnect_parms_from_attrs(struct disconnect_parms *s , struct genl_info *info ) 
> { 
>   int tmp ;
50902,50903c50294,50298
< #line 14
<   return (1);
---
>   {
> #line 239
>   tmp = __disconnect_parms_from_attrs(s, info, 0);
> #line 239
>   return (tmp);
50906,50929c50301,50310
< #line 35
< static int disk_conf_from_tags(struct drbd_conf *mdev , unsigned short *tags , struct disk_conf *arg ) ;
< #line 35 "include/linux/drbd_nl.h"
< static int disk_conf_from_tags(struct drbd_conf *mdev , unsigned short *tags , struct disk_conf *arg ) 
< { 
<   int tag ;
<   int dlen ;
<   unsigned short *tmp ;
<   u16 tmp___0 ;
<   size_t __len ;
<   size_t __min1 ;
<   size_t __min2 ;
<   void *__ret ;
<   size_t __len___0 ;
<   size_t __min1___0 ;
<   size_t __min2___0 ;
<   void *__ret___0 ;
<   u32 tmp___1 ;
<   u32 tmp___2 ;
<   u32 tmp___3 ;
<   u32 tmp___4 ;
<   u32 tmp___5 ;
<   unsigned short *tmp___6 ;
<   u16 tmp___7 ;
---
> #line 245 "include/linux/drbd_genl.h"
> static int __detach_parms_from_attrs(struct detach_parms *s , struct genl_info *info ,
>                                      bool exclude_invariants ) 
> { 
>   int maxtype ;
>   struct nlattr *tla ;
>   struct nlattr **ntb ;
>   struct nlattr *nla ;
>   int err ;
>   u8 tmp ;
50932,50957c50313,50322
< #line 20
<   goto ldv_52025;
<   ldv_52024: 
< #line 20
<   tmp = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   tmp___0 = get_unaligned_le16((void const   *)tmp);
< #line 20
<   dlen = (int )tmp___0;
< #line 20
<   switch (tag & 8191) {
<   case 2: 
< #line 20
<   arg->disk_size = get_unaligned_le64((void const   *)tags);
< #line 20
<   goto ldv_51992;
<   case 3: ;
< #line 20
<   if (dlen > 128) {
< #line 20
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "arg too long: %s (%u wanted, max len: %u bytes)\n",
<             (char *)"backing_dev", dlen, 128U);
< #line 20
<     return (0);
---
> #line 243
>   maxtype = 1;
> #line 243
>   tla = *(info->attrs + 13UL);
> #line 243
>   ntb = (struct nlattr **)(& nested_attr_tb);
> #line 243
>   if ((unsigned long )tla == (unsigned long )((struct nlattr *)0)) {
> #line 243
>     return (-42);
50961,50980c50326,50331
< #line 20
<   arg->backing_dev_len = dlen;
< #line 20
<   __min1 = (size_t )dlen;
< #line 20
<   __min2 = 128UL;
< #line 20
<   __len = __min1 < __min2 ? __min1 : __min2;
< #line 20
<   __ret = __builtin_memcpy((void *)(& arg->backing_dev), (void const   *)tags, __len);
< #line 20
<   goto ldv_51992;
<   case 4: ;
< #line 20
<   if (dlen > 128) {
< #line 20
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "arg too long: %s (%u wanted, max len: %u bytes)\n",
<             (char *)"meta_dev", dlen, 128U);
< #line 20
<     return (0);
---
> #line 243
>   err = drbd_nla_parse_nested(ntb, maxtype, tla, (struct nla_policy  const  *)(& detach_parms_nl_policy));
> #line 243
>   if (err != 0) {
> #line 243
>     return (err);
50984,51064c50335,50345
< #line 20
<   arg->meta_dev_len = dlen;
< #line 20
<   __min1___0 = (size_t )dlen;
< #line 20
<   __min2___0 = 128UL;
< #line 20
<   __len___0 = __min1___0 < __min2___0 ? __min1___0 : __min2___0;
< #line 20
<   __ret___0 = __builtin_memcpy((void *)(& arg->meta_dev), (void const   *)tags, __len___0);
< #line 20
<   goto ldv_51992;
<   case 5: 
< #line 20
<   tmp___1 = get_unaligned_le32((void const   *)tags);
< #line 20
<   arg->meta_dev_idx = (int )tmp___1;
< #line 20
<   goto ldv_51992;
<   case 6: 
< #line 20
<   tmp___2 = get_unaligned_le32((void const   *)tags);
< #line 20
<   arg->on_io_error = (int )tmp___2;
< #line 20
<   goto ldv_51992;
<   case 7: 
< #line 20
<   tmp___3 = get_unaligned_le32((void const   *)tags);
< #line 20
<   arg->fencing = (int )tmp___3;
< #line 20
<   goto ldv_51992;
<   case 37: 
< #line 20
<   arg->use_bmbv = (int )((signed char )*((char *)tags)) != 0;
< #line 20
<   goto ldv_51992;
<   case 53: 
< #line 20
<   arg->no_disk_flush = (int )((signed char )*((char *)tags)) != 0;
< #line 20
<   goto ldv_51992;
<   case 54: 
< #line 20
<   arg->no_md_flush = (int )((signed char )*((char *)tags)) != 0;
< #line 20
<   goto ldv_51992;
<   case 56: 
< #line 20
<   tmp___4 = get_unaligned_le32((void const   *)tags);
< #line 20
<   arg->max_bio_bvecs = (int )tmp___4;
< #line 20
<   goto ldv_51992;
<   case 57: 
< #line 20
<   arg->no_disk_barrier = (int )((signed char )*((char *)tags)) != 0;
< #line 20
<   goto ldv_51992;
<   case 58: 
< #line 20
<   arg->no_disk_drain = (int )((signed char )*((char *)tags)) != 0;
< #line 20
<   goto ldv_51992;
<   case 89: 
< #line 20
<   tmp___5 = get_unaligned_le32((void const   *)tags);
< #line 20
<   arg->disk_timeout = (int )tmp___5;
< #line 20
<   goto ldv_51992;
<   default: ;
< #line 20
<   if ((tag & 8192) != 0) {
< #line 20
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Unknown tag: %d\n",
<             tag & 8191);
< #line 20
<     return (0);
<   } else {
---
> #line 243
>   nla = *(ntb + 1UL);
> #line 243
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 243
>     if ((unsigned long )s != (unsigned long )((struct detach_parms *)0)) {
> #line 243
>       tmp = nla_get_u8((struct nlattr  const  *)nla);
> #line 243
>       s->force_detach = (char )tmp;
>     } else {
51066,51083c50347
<   }
<   }
<   ldv_51992: 
< #line 20
<   tags = tags + (unsigned long )dlen;
<   ldv_52025: 
< #line 20
<   tmp___6 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   tmp___7 = get_unaligned_le16((void const   *)tmp___6);
< #line 20
<   tag = (int )tmp___7;
< #line 20
<   if (tag != 0) {
< #line 21
<     goto ldv_52024;
---
>     }
51086a50351,50358
> #line 243
>   return (0);
> }
> }
> #line 245 "include/linux/drbd_genl.h"
> static int detach_parms_from_attrs(struct detach_parms *s , struct genl_info *info ) 
> { 
>   int tmp ;
51088,51089c50360,50364
< #line 20
<   return (1);
---
>   {
> #line 243
>   tmp = __detach_parms_from_attrs(s, info, 0);
> #line 243
>   return (tmp);
51092,51102c50367,50370
< #line 39
< static int detach_from_tags(struct drbd_conf *mdev , unsigned short *tags , struct detach *arg ) ;
< #line 39 "include/linux/drbd_nl.h"
< static int detach_from_tags(struct drbd_conf *mdev , unsigned short *tags , struct detach *arg ) 
< { 
<   int tag ;
<   int dlen ;
<   unsigned short *tmp ;
<   u16 tmp___0 ;
<   unsigned short *tmp___1 ;
<   u16 tmp___2 ;
---
> #line 221 "include/linux/genl_magic_func.h"
> char const   *drbd_genl_cmd_to_str(__u8 cmd ) 
> { 
> 
51105,51122c50373,50452
< #line 37
<   goto ldv_52042;
<   ldv_52041: 
< #line 37
<   tmp = tags;
< #line 37
<   tags = tags + 1;
< #line 37
<   tmp___0 = get_unaligned_le16((void const   *)tmp);
< #line 37
<   dlen = (int )tmp___0;
< #line 37
<   switch (tag & 8191) {
<   case 88: 
< #line 37
<   arg->detach_force = (int )((signed char )*((char *)tags)) != 0;
< #line 37
<   goto ldv_52039;
---
> #line 223
>   switch ((int )cmd) {
>   case 2: ;
> #line 263 "include/linux/drbd_genl.h"
>   return ("DRBD_ADM_GET_STATUS");
>   case 5: ;
> #line 277
>   return ("DRBD_ADM_NEW_MINOR");
>   case 6: ;
> #line 279
>   return ("DRBD_ADM_DEL_MINOR");
>   case 7: ;
> #line 283
>   return ("DRBD_ADM_NEW_RESOURCE");
>   case 8: ;
> #line 285
>   return ("DRBD_ADM_DEL_RESOURCE");
>   case 9: ;
> #line 288
>   return ("DRBD_ADM_RESOURCE_OPTS");
>   case 10: ;
> #line 294
>   return ("DRBD_ADM_CONNECT");
>   case 29: ;
> #line 301
>   return ("DRBD_ADM_CHG_NET_OPTS");
>   case 11: ;
> #line 308
>   return ("DRBD_ADM_DISCONNECT");
>   case 12: ;
> #line 311
>   return ("DRBD_ADM_ATTACH");
>   case 28: ;
> #line 317
>   return ("DRBD_ADM_CHG_DISK_OPTS");
>   case 13: ;
> #line 323
>   return ("DRBD_ADM_RESIZE");
>   case 14: ;
> #line 330
>   return ("DRBD_ADM_PRIMARY");
>   case 15: ;
> #line 337
>   return ("DRBD_ADM_SECONDARY");
>   case 16: ;
> #line 344
>   return ("DRBD_ADM_NEW_C_UUID");
>   case 17: ;
> #line 351
>   return ("DRBD_ADM_START_OV");
>   case 18: ;
> #line 357
>   return ("DRBD_ADM_DETACH");
>   case 19: ;
> #line 361
>   return ("DRBD_ADM_INVALIDATE");
>   case 20: ;
> #line 363
>   return ("DRBD_ADM_INVAL_PEER");
>   case 21: ;
> #line 365
>   return ("DRBD_ADM_PAUSE_SYNC");
>   case 22: ;
> #line 367
>   return ("DRBD_ADM_RESUME_SYNC");
>   case 23: ;
> #line 369
>   return ("DRBD_ADM_SUSPEND_IO");
>   case 24: ;
> #line 371
>   return ("DRBD_ADM_RESUME_IO");
>   case 25: ;
> #line 373
>   return ("DRBD_ADM_OUTDATE");
>   case 26: ;
> #line 375
>   return ("DRBD_ADM_GET_TIMEOUT_TYPE");
>   case 27: ;
> #line 377
>   return ("DRBD_ADM_DOWN");
51124,51130c50454,50534
< #line 37
<   if ((tag & 8192) != 0) {
< #line 37
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Unknown tag: %d\n",
<             tag & 8191);
< #line 37
<     return (0);
---
> #line 229 "include/linux/genl_magic_func.h"
>   return ("unknown");
>   }
> }
> }
> #line 249 "include/linux/genl_magic_func.h"
> static struct genl_ops drbd_genl_ops[26U]  = 
> #line 249
>   {      {2U, (unsigned char)0, 0U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_get_status, & drbd_adm_get_status_all, 0, {0, 0}}, 
>         {5U, (unsigned char)0, 1U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_add_minor, 0, 0, {0, 0}}, 
>         {6U, (unsigned char)0, 1U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_delete_minor, 0, 0, {0, 0}}, 
>         {7U, (unsigned char)0, 1U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_new_resource, 0, 0, {0, 0}}, 
>         {8U, (unsigned char)0, 1U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_del_resource, 0, 0, {0, 0}}, 
>         {9U, (unsigned char)0, 1U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_resource_opts, 0, 0, {0, 0}}, 
>         {10U, (unsigned char)0, 1U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_connect, 0, 0, {0, 0}}, 
>         {29U, (unsigned char)0, 1U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_net_opts, 0, 0, {0, 0}}, 
>         {11U, (unsigned char)0, 1U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_disconnect, 0, 0, {0, 0}}, 
>         {12U, (unsigned char)0, 1U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_attach, 0, 0, {0, 0}}, 
>         {28U, (unsigned char)0, 1U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_disk_opts, 0, 0, {0, 0}}, 
>         {13U, (unsigned char)0, 1U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_resize, 0, 0, {0, 0}}, 
>         {14U, (unsigned char)0, 1U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_set_role, 0, 0, {0, 0}}, 
>         {15U, (unsigned char)0, 1U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_set_role, 0, 0, {0, 0}}, 
>         {16U, (unsigned char)0, 1U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_new_c_uuid, 0, 0, {0, 0}}, 
>         {17U, (unsigned char)0, 1U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_start_ov, 0, 0, {0, 0}}, 
>         {18U, (unsigned char)0, 1U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_detach, 0, 0, {0, 0}}, 
>         {19U, (unsigned char)0, 1U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_invalidate, 0, 0, {0, 0}}, 
>         {20U, (unsigned char)0, 1U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_invalidate_peer, 0, 0, {0, 0}}, 
>         {21U, (unsigned char)0, 1U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_pause_sync, 0, 0, {0, 0}}, 
>         {22U, (unsigned char)0, 1U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_resume_sync, 0, 0, {0, 0}}, 
>         {23U, (unsigned char)0, 1U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_suspend_io, 0, 0, {0, 0}}, 
>         {24U, (unsigned char)0, 1U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_resume_io, 0, 0, {0, 0}}, 
>         {25U, (unsigned char)0, 1U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_outdate, 0, 0, {0, 0}}, 
>         {26U, (unsigned char)0, 1U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_get_timeout_type, 0, 0, {0, 0}}, 
>         {27U, (unsigned char)0, 1U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_down, 0, 0, {0, 0}}};
> #line 262 "include/linux/genl_magic_func.h"
> static struct genl_family drbd_genl_family  = 
> #line 262
>      {0U, 8U, {'d', 'r', 'b', 'd', '\000'}, 1U, 13U, (_Bool)0, 0, 0, 0, {0, 0}, {0,
>                                                                                0},
>     {0, 0}};
> #line 250 "include/linux/drbd_genl.h"
> static struct genl_multicast_group drbd_mcg_events  =    {0, {0, 0}, {'e', 'v', 'e', 'n', 't', 's', '\000'}, 0U};
> #line 250 "include/linux/drbd_genl.h"
> static int drbd_genl_multicast_events(struct sk_buff *skb , gfp_t flags ) 
> { 
>   unsigned int group_id ;
>   int tmp ;
> 
>   {
> #line 250
>   group_id = drbd_mcg_events.id;
> #line 250
>   if (group_id == 0U) {
> #line 250
>     return (-22);
51134,51150c50538,50559
<   }
<   ldv_52039: 
< #line 37
<   tags = tags + (unsigned long )dlen;
<   ldv_52042: 
< #line 37
<   tmp___1 = tags;
< #line 37
<   tags = tags + 1;
< #line 37
<   tmp___2 = get_unaligned_le16((void const   *)tmp___1);
< #line 37
<   tag = (int )tmp___2;
< #line 37
<   if (tag != 0) {
< #line 38
<     goto ldv_52041;
---
> #line 250
>   tmp = genlmsg_multicast(skb, 0U, group_id, flags);
> #line 250
>   return (tmp);
> }
> }
> #line 294 "include/linux/genl_magic_func.h"
> int drbd_genl_register(void) 
> { 
>   int err ;
>   int tmp ;
> 
>   {
> #line 296
>   tmp = genl_register_family_with_ops(& drbd_genl_family, (struct genl_ops *)(& drbd_genl_ops),
>                                       26UL);
> #line 296
>   err = tmp;
> #line 298
>   if (err != 0) {
> #line 299
>     return (err);
51153a50563,50584
> #line 250 "include/linux/drbd_genl.h"
>   err = genl_register_mc_group(& drbd_genl_family, & drbd_mcg_events);
> #line 250
>   if (err != 0) {
> #line 250
>     goto fail;
>   } else {
> #line 250
>     printk("\016%s: mcg %s: %u\n", (char *)"events", (char *)"drbd", drbd_mcg_events.id);
>   }
> #line 315 "include/linux/genl_magic_func.h"
>   return (0);
>   fail: 
> #line 317
>   genl_unregister_family(& drbd_genl_family);
> #line 318
>   return (err);
> }
> }
> #line 321 "include/linux/genl_magic_func.h"
> void drbd_genl_unregister(void) 
> { 
51155,51156c50586,50591
< #line 37
<   return (1);
---
> 
>   {
> #line 323
>   genl_unregister_family(& drbd_genl_family);
> #line 324
>   return;
51159,51207c50594,50624
< #line 73
< static int net_conf_from_tags(struct drbd_conf *mdev , unsigned short *tags , struct net_conf *arg ) ;
< #line 73 "include/linux/drbd_nl.h"
< static int net_conf_from_tags(struct drbd_conf *mdev , unsigned short *tags , struct net_conf *arg ) 
< { 
<   int tag ;
<   int dlen ;
<   unsigned short *tmp ;
<   u16 tmp___0 ;
<   size_t __len ;
<   size_t __min1 ;
<   size_t __min2 ;
<   void *__ret ;
<   size_t __len___0 ;
<   size_t __min1___0 ;
<   size_t __min2___0 ;
<   void *__ret___0 ;
<   size_t __len___1 ;
<   size_t __min1___1 ;
<   size_t __min2___1 ;
<   void *__ret___1 ;
<   size_t __len___2 ;
<   size_t __min1___2 ;
<   size_t __min2___2 ;
<   void *__ret___2 ;
<   size_t __len___3 ;
<   size_t __min1___3 ;
<   size_t __min2___3 ;
<   void *__ret___3 ;
<   u32 tmp___1 ;
<   u32 tmp___2 ;
<   u32 tmp___3 ;
<   u32 tmp___4 ;
<   u32 tmp___5 ;
<   u32 tmp___6 ;
<   u32 tmp___7 ;
<   u32 tmp___8 ;
<   u32 tmp___9 ;
<   u32 tmp___10 ;
<   u32 tmp___11 ;
<   u32 tmp___12 ;
<   u32 tmp___13 ;
<   u32 tmp___14 ;
<   u32 tmp___15 ;
<   u32 tmp___16 ;
<   u32 tmp___17 ;
<   u32 tmp___18 ;
<   unsigned short *tmp___19 ;
<   u16 tmp___20 ;
---
> #line 135 "include/linux/drbd_genl.h"
> static int disk_conf_to_skb(struct sk_buff *skb , struct disk_conf *s , bool const   exclude_sensitive ) 
> { 
>   struct nlattr *tla ;
>   struct nlattr *tmp ;
>   int __min1 ;
>   int __min2 ;
>   int tmp___0 ;
>   int __min1___0 ;
>   int __min2___0 ;
>   int tmp___1 ;
>   int tmp___2 ;
>   int tmp___3 ;
>   int tmp___4 ;
>   int tmp___5 ;
>   int tmp___6 ;
>   int tmp___7 ;
>   int tmp___8 ;
>   int tmp___9 ;
>   int tmp___10 ;
>   int tmp___11 ;
>   int tmp___12 ;
>   int tmp___13 ;
>   int tmp___14 ;
>   int tmp___15 ;
>   int tmp___16 ;
>   int tmp___17 ;
>   int tmp___18 ;
>   int tmp___19 ;
>   int tmp___20 ;
>   int tmp___21 ;
51210,51230c50627,50634
< #line 41
<   goto ldv_52133;
<   ldv_52132: 
< #line 41
<   tmp = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   tmp___0 = get_unaligned_le16((void const   *)tmp);
< #line 41
<   dlen = (int )tmp___0;
< #line 41
<   switch (tag & 8191) {
<   case 8: ;
< #line 41
<   if (dlen > 128) {
< #line 41
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "arg too long: %s (%u wanted, max len: %u bytes)\n",
<             (char *)"my_addr", dlen, 128U);
< #line 41
<     return (0);
---
> #line 104
>   tmp = nla_nest_start(skb, 3);
> #line 104
>   tla = tmp;
> #line 104
>   if ((unsigned long )tla == (unsigned long )((struct nlattr *)0)) {
> #line 104
>     goto nla_put_failure;
51234,51253c50638,50647
< #line 41
<   arg->my_addr_len = dlen;
< #line 41
<   __min1 = (size_t )dlen;
< #line 41
<   __min2 = 128UL;
< #line 41
<   __len = __min1 < __min2 ? __min1 : __min2;
< #line 41
<   __ret = __builtin_memcpy((void *)(& arg->my_addr), (void const   *)tags, __len);
< #line 41
<   goto ldv_52065;
<   case 9: ;
< #line 41
<   if (dlen > 128) {
< #line 41
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "arg too long: %s (%u wanted, max len: %u bytes)\n",
<             (char *)"peer_addr", dlen, 128U);
< #line 41
<     return (0);
---
> #line 104
>   __min1 = 128;
> #line 104
>   __min2 = (int )(s->backing_dev_len + 1U);
> #line 104
>   tmp___0 = nla_put(skb, 1, __min1 < __min2 ? __min1 : __min2, (void const   *)(& s->backing_dev));
> #line 104
>   if (tmp___0 != 0) {
> #line 104
>     goto nla_put_failure;
51257,51276c50651,50660
< #line 41
<   arg->peer_addr_len = dlen;
< #line 41
<   __min1___0 = (size_t )dlen;
< #line 41
<   __min2___0 = 128UL;
< #line 41
<   __len___0 = __min1___0 < __min2___0 ? __min1___0 : __min2___0;
< #line 41
<   __ret___0 = __builtin_memcpy((void *)(& arg->peer_addr), (void const   *)tags, __len___0);
< #line 41
<   goto ldv_52065;
<   case 10: ;
< #line 41
<   if (dlen > 64) {
< #line 41
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "arg too long: %s (%u wanted, max len: %u bytes)\n",
<             (char *)"shared_secret", dlen, 64U);
< #line 41
<     return (0);
---
> #line 104
>   __min1___0 = 128;
> #line 104
>   __min2___0 = (int )(s->meta_dev_len + 1U);
> #line 104
>   tmp___1 = nla_put(skb, 2, __min1___0 < __min2___0 ? __min1___0 : __min2___0, (void const   *)(& s->meta_dev));
> #line 104
>   if (tmp___1 != 0) {
> #line 104
>     goto nla_put_failure;
51280,51300c50664,50669
< #line 41
<   arg->shared_secret_len = dlen;
< #line 41
<   __min1___1 = (size_t )dlen;
< #line 41
<   __min2___1 = 64UL;
< #line 41
<   __len___1 = __min1___1 < __min2___1 ? __min1___1 : __min2___1;
< #line 41
<   __ret___1 = __builtin_memcpy((void *)(& arg->shared_secret), (void const   *)tags,
<                                __len___1);
< #line 41
<   goto ldv_52065;
<   case 11: ;
< #line 41
<   if (dlen > 64) {
< #line 41
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "arg too long: %s (%u wanted, max len: %u bytes)\n",
<             (char *)"cram_hmac_alg", dlen, 64U);
< #line 41
<     return (0);
---
> #line 104
>   tmp___2 = nla_put_u32(skb, 3, (u32 )s->meta_dev_idx);
> #line 104
>   if (tmp___2 != 0) {
> #line 104
>     goto nla_put_failure;
51304,51324c50673,50678
< #line 41
<   arg->cram_hmac_alg_len = dlen;
< #line 41
<   __min1___2 = (size_t )dlen;
< #line 41
<   __min2___2 = 64UL;
< #line 41
<   __len___2 = __min1___2 < __min2___2 ? __min1___2 : __min2___2;
< #line 41
<   __ret___2 = __builtin_memcpy((void *)(& arg->cram_hmac_alg), (void const   *)tags,
<                                __len___2);
< #line 41
<   goto ldv_52065;
<   case 44: ;
< #line 41
<   if (dlen > 64) {
< #line 41
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "arg too long: %s (%u wanted, max len: %u bytes)\n",
<             (char *)"integrity_alg", dlen, 64U);
< #line 41
<     return (0);
---
> #line 104
>   tmp___3 = nla_put_u64(skb, 4, s->disk_size);
> #line 104
>   if (tmp___3 != 0) {
> #line 104
>     goto nla_put_failure;
51328,51509c50682,50687
< #line 41
<   arg->integrity_alg_len = dlen;
< #line 41
<   __min1___3 = (size_t )dlen;
< #line 41
<   __min2___3 = 64UL;
< #line 41
<   __len___3 = __min1___3 < __min2___3 ? __min1___3 : __min2___3;
< #line 41
<   __ret___3 = __builtin_memcpy((void *)(& arg->integrity_alg), (void const   *)tags,
<                                __len___3);
< #line 41
<   goto ldv_52065;
<   case 14: 
< #line 41
<   tmp___1 = get_unaligned_le32((void const   *)tags);
< #line 41
<   arg->timeout = (int )tmp___1;
< #line 41
<   goto ldv_52065;
<   case 15: 
< #line 41
<   tmp___2 = get_unaligned_le32((void const   *)tags);
< #line 41
<   arg->wire_protocol = (int )tmp___2;
< #line 41
<   goto ldv_52065;
<   case 16: 
< #line 41
<   tmp___3 = get_unaligned_le32((void const   *)tags);
< #line 41
<   arg->try_connect_int = (int )tmp___3;
< #line 41
<   goto ldv_52065;
<   case 17: 
< #line 41
<   tmp___4 = get_unaligned_le32((void const   *)tags);
< #line 41
<   arg->ping_int = (int )tmp___4;
< #line 41
<   goto ldv_52065;
<   case 18: 
< #line 41
<   tmp___5 = get_unaligned_le32((void const   *)tags);
< #line 41
<   arg->max_epoch_size = (int )tmp___5;
< #line 41
<   goto ldv_52065;
<   case 19: 
< #line 41
<   tmp___6 = get_unaligned_le32((void const   *)tags);
< #line 41
<   arg->max_buffers = (int )tmp___6;
< #line 41
<   goto ldv_52065;
<   case 20: 
< #line 41
<   tmp___7 = get_unaligned_le32((void const   *)tags);
< #line 41
<   arg->unplug_watermark = (int )tmp___7;
< #line 41
<   goto ldv_52065;
<   case 21: 
< #line 41
<   tmp___8 = get_unaligned_le32((void const   *)tags);
< #line 41
<   arg->sndbuf_size = (int )tmp___8;
< #line 41
<   goto ldv_52065;
<   case 22: 
< #line 41
<   tmp___9 = get_unaligned_le32((void const   *)tags);
< #line 41
<   arg->ko_count = (int )tmp___9;
< #line 41
<   goto ldv_52065;
<   case 24: 
< #line 41
<   tmp___10 = get_unaligned_le32((void const   *)tags);
< #line 41
<   arg->after_sb_0p = (int )tmp___10;
< #line 41
<   goto ldv_52065;
<   case 25: 
< #line 41
<   tmp___11 = get_unaligned_le32((void const   *)tags);
< #line 41
<   arg->after_sb_1p = (int )tmp___11;
< #line 41
<   goto ldv_52065;
<   case 26: 
< #line 41
<   tmp___12 = get_unaligned_le32((void const   *)tags);
< #line 41
<   arg->after_sb_2p = (int )tmp___12;
< #line 41
<   goto ldv_52065;
<   case 39: 
< #line 41
<   tmp___13 = get_unaligned_le32((void const   *)tags);
< #line 41
<   arg->rr_conflict = (int )tmp___13;
< #line 41
<   goto ldv_52065;
<   case 40: 
< #line 41
<   tmp___14 = get_unaligned_le32((void const   *)tags);
< #line 41
<   arg->ping_timeo = (int )tmp___14;
< #line 41
<   goto ldv_52065;
<   case 67: 
< #line 41
<   tmp___15 = get_unaligned_le32((void const   *)tags);
< #line 41
<   arg->rcvbuf_size = (int )tmp___15;
< #line 41
<   goto ldv_52065;
<   case 81: 
< #line 41
<   tmp___16 = get_unaligned_le32((void const   *)tags);
< #line 41
<   arg->on_congestion = (int )tmp___16;
< #line 41
<   goto ldv_52065;
<   case 82: 
< #line 41
<   tmp___17 = get_unaligned_le32((void const   *)tags);
< #line 41
<   arg->cong_fill = (int )tmp___17;
< #line 41
<   goto ldv_52065;
<   case 83: 
< #line 41
<   tmp___18 = get_unaligned_le32((void const   *)tags);
< #line 41
<   arg->cong_extents = (int )tmp___18;
< #line 41
<   goto ldv_52065;
<   case 60: 
< #line 41
<   arg->mind_af = (int )((signed char )*((char *)tags)) != 0;
< #line 41
<   goto ldv_52065;
<   case 27: 
< #line 41
<   arg->want_lose = (int )((signed char )*((char *)tags)) != 0;
< #line 41
<   goto ldv_52065;
<   case 28: 
< #line 41
<   arg->two_primaries = (int )((signed char )*((char *)tags)) != 0;
< #line 41
<   goto ldv_52065;
<   case 41: 
< #line 41
<   arg->always_asbp = (int )((signed char )*((char *)tags)) != 0;
< #line 41
<   goto ldv_52065;
<   case 61: 
< #line 41
<   arg->no_cork = (int )((signed char )*((char *)tags)) != 0;
< #line 41
<   goto ldv_52065;
<   case 62: 
< #line 41
<   arg->auto_sndbuf_size = (int )((signed char )*((char *)tags)) != 0;
< #line 41
<   goto ldv_52065;
<   case 70: 
< #line 41
<   arg->dry_run = (int )((signed char )*((char *)tags)) != 0;
< #line 41
<   goto ldv_52065;
<   default: ;
< #line 41
<   if ((tag & 8192) != 0) {
< #line 41
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Unknown tag: %d\n",
<             tag & 8191);
< #line 41
<     return (0);
---
> #line 104
>   tmp___4 = nla_put_u32(skb, 5, s->max_bio_bvecs);
> #line 104
>   if (tmp___4 != 0) {
> #line 104
>     goto nla_put_failure;
51513,51529c50691,50696
<   }
<   ldv_52065: 
< #line 41
<   tags = tags + (unsigned long )dlen;
<   ldv_52133: 
< #line 41
<   tmp___19 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   tmp___20 = get_unaligned_le16((void const   *)tmp___19);
< #line 41
<   tag = (int )tmp___20;
< #line 41
<   if (tag != 0) {
< #line 42
<     goto ldv_52132;
---
> #line 104
>   tmp___5 = nla_put_u32(skb, 6, s->on_io_error);
> #line 104
>   if (tmp___5 != 0) {
> #line 104
>     goto nla_put_failure;
51533,51576c50700,50705
< 
< #line 41
<   return (1);
< }
< }
< #line 77
< static int disconnect_from_tags(struct drbd_conf *mdev , unsigned short *tags , struct disconnect *arg ) ;
< #line 77 "include/linux/drbd_nl.h"
< static int disconnect_from_tags(struct drbd_conf *mdev , unsigned short *tags , struct disconnect *arg ) 
< { 
<   int tag ;
<   int dlen ;
<   unsigned short *tmp ;
<   u16 tmp___0 ;
<   unsigned short *tmp___1 ;
<   u16 tmp___2 ;
< 
<   {
< #line 75
<   goto ldv_52150;
<   ldv_52149: 
< #line 75
<   tmp = tags;
< #line 75
<   tags = tags + 1;
< #line 75
<   tmp___0 = get_unaligned_le16((void const   *)tmp);
< #line 75
<   dlen = (int )tmp___0;
< #line 75
<   switch (tag & 8191) {
<   case 84: 
< #line 75
<   arg->force = (int )((signed char )*((char *)tags)) != 0;
< #line 75
<   goto ldv_52147;
<   default: ;
< #line 75
<   if ((tag & 8192) != 0) {
< #line 75
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Unknown tag: %d\n",
<             tag & 8191);
< #line 75
<     return (0);
---
> #line 104
>   tmp___6 = nla_put_u32(skb, 7, s->fencing);
> #line 104
>   if (tmp___6 != 0) {
> #line 104
>     goto nla_put_failure;
51579a50709,50716
> #line 104
>   tmp___7 = nla_put_u32(skb, 8, s->resync_rate);
> #line 104
>   if (tmp___7 != 0) {
> #line 104
>     goto nla_put_failure;
>   } else {
> 
51581,51596c50718,50723
<   ldv_52147: 
< #line 75
<   tags = tags + (unsigned long )dlen;
<   ldv_52150: 
< #line 75
<   tmp___1 = tags;
< #line 75
<   tags = tags + 1;
< #line 75
<   tmp___2 = get_unaligned_le16((void const   *)tmp___1);
< #line 75
<   tag = (int )tmp___2;
< #line 75
<   if (tag != 0) {
< #line 76
<     goto ldv_52149;
---
> #line 104
>   tmp___8 = nla_put_u32(skb, 9, (u32 )s->resync_after);
> #line 104
>   if (tmp___8 != 0) {
> #line 104
>     goto nla_put_failure;
51599a50727,50733
> #line 104
>   tmp___9 = nla_put_u32(skb, 10, s->al_extents);
> #line 104
>   if (tmp___9 != 0) {
> #line 104
>     goto nla_put_failure;
>   } else {
51601,51615c50735,50742
< #line 75
<   return (1);
< }
< }
< #line 83
< static int resize_from_tags(struct drbd_conf *mdev , unsigned short *tags , struct resize *arg ) ;
< #line 83 "include/linux/drbd_nl.h"
< static int resize_from_tags(struct drbd_conf *mdev , unsigned short *tags , struct resize *arg ) 
< { 
<   int tag ;
<   int dlen ;
<   unsigned short *tmp ;
<   u16 tmp___0 ;
<   unsigned short *tmp___1 ;
<   u16 tmp___2 ;
---
>   }
> #line 104
>   tmp___10 = nla_put_u32(skb, 11, s->c_plan_ahead);
> #line 104
>   if (tmp___10 != 0) {
> #line 104
>     goto nla_put_failure;
>   } else {
51617,51653c50744,50750
<   {
< #line 79
<   goto ldv_52169;
<   ldv_52168: 
< #line 79
<   tmp = tags;
< #line 79
<   tags = tags + 1;
< #line 79
<   tmp___0 = get_unaligned_le16((void const   *)tmp);
< #line 79
<   dlen = (int )tmp___0;
< #line 79
<   switch (tag & 8191) {
<   case 29: 
< #line 79
<   arg->resize_size = get_unaligned_le64((void const   *)tags);
< #line 79
<   goto ldv_52164;
<   case 68: 
< #line 79
<   arg->resize_force = (int )((signed char )*((char *)tags)) != 0;
< #line 79
<   goto ldv_52164;
<   case 69: 
< #line 79
<   arg->no_resync = (int )((signed char )*((char *)tags)) != 0;
< #line 79
<   goto ldv_52164;
<   default: ;
< #line 79
<   if ((tag & 8192) != 0) {
< #line 79
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Unknown tag: %d\n",
<             tag & 8191);
< #line 79
<     return (0);
---
>   }
> #line 104
>   tmp___11 = nla_put_u32(skb, 12, s->c_delay_target);
> #line 104
>   if (tmp___11 != 0) {
> #line 104
>     goto nla_put_failure;
51656a50754,50761
> #line 104
>   tmp___12 = nla_put_u32(skb, 13, s->c_fill_target);
> #line 104
>   if (tmp___12 != 0) {
> #line 104
>     goto nla_put_failure;
>   } else {
> 
51658,51673c50763,50768
<   ldv_52164: 
< #line 79
<   tags = tags + (unsigned long )dlen;
<   ldv_52169: 
< #line 79
<   tmp___1 = tags;
< #line 79
<   tags = tags + 1;
< #line 79
<   tmp___2 = get_unaligned_le16((void const   *)tmp___1);
< #line 79
<   tag = (int )tmp___2;
< #line 79
<   if (tag != 0) {
< #line 80
<     goto ldv_52168;
---
> #line 104
>   tmp___13 = nla_put_u32(skb, 14, s->c_max_rate);
> #line 104
>   if (tmp___13 != 0) {
> #line 104
>     goto nla_put_failure;
51676a50772,50778
> #line 104
>   tmp___14 = nla_put_u32(skb, 15, s->c_min_rate);
> #line 104
>   if (tmp___14 != 0) {
> #line 104
>     goto nla_put_failure;
>   } else {
51678,51681c50780
< #line 79
<   return (1);
< }
< }
---
>   }
51683,51713c50782,50787
< static int syncer_conf_from_tags(struct drbd_conf *mdev , unsigned short *tags , struct syncer_conf *arg ) ;
< #line 104 "include/linux/drbd_nl.h"
< static int syncer_conf_from_tags(struct drbd_conf *mdev , unsigned short *tags , struct syncer_conf *arg ) 
< { 
<   int tag ;
<   int dlen ;
<   unsigned short *tmp ;
<   u16 tmp___0 ;
<   u32 tmp___1 ;
<   u32 tmp___2 ;
<   u32 tmp___3 ;
<   size_t __len ;
<   size_t __min1 ;
<   size_t __min2 ;
<   void *__ret ;
<   size_t __len___0 ;
<   size_t __min1___0 ;
<   size_t __min2___0 ;
<   void *__ret___0 ;
<   size_t __len___1 ;
<   size_t __min1___1 ;
<   size_t __min2___1 ;
<   void *__ret___1 ;
<   u32 tmp___4 ;
<   u32 tmp___5 ;
<   u32 tmp___6 ;
<   u32 tmp___7 ;
<   u32 tmp___8 ;
<   u32 tmp___9 ;
<   unsigned short *tmp___10 ;
<   u16 tmp___11 ;
---
>   tmp___15 = nla_put_u8(skb, 16, (int )((u8 )s->disk_barrier));
> #line 104
>   if (tmp___15 != 0) {
> #line 104
>     goto nla_put_failure;
>   } else {
51715,51757c50789,50795
<   {
< #line 85
<   goto ldv_52225;
<   ldv_52224: 
< #line 85
<   tmp = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   tmp___0 = get_unaligned_le16((void const   *)tmp);
< #line 85
<   dlen = (int )tmp___0;
< #line 85
<   switch (tag & 8191) {
<   case 30: 
< #line 85
<   tmp___1 = get_unaligned_le32((void const   *)tags);
< #line 85
<   arg->rate = (int )tmp___1;
< #line 85
<   goto ldv_52183;
<   case 31: 
< #line 85
<   tmp___2 = get_unaligned_le32((void const   *)tags);
< #line 85
<   arg->after = (int )tmp___2;
< #line 85
<   goto ldv_52183;
<   case 32: 
< #line 85
<   tmp___3 = get_unaligned_le32((void const   *)tags);
< #line 85
<   arg->al_extents = (int )tmp___3;
< #line 85
<   goto ldv_52183;
<   case 52: ;
< #line 85
<   if (dlen > 64) {
< #line 85
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "arg too long: %s (%u wanted, max len: %u bytes)\n",
<             (char *)"verify_alg", dlen, 64U);
< #line 85
<     return (0);
---
>   }
> #line 104
>   tmp___16 = nla_put_u8(skb, 17, (int )((u8 )s->disk_flushes));
> #line 104
>   if (tmp___16 != 0) {
> #line 104
>     goto nla_put_failure;
51761,51780c50799,50804
< #line 85
<   arg->verify_alg_len = dlen;
< #line 85
<   __min1 = (size_t )dlen;
< #line 85
<   __min2 = 64UL;
< #line 85
<   __len = __min1 < __min2 ? __min1 : __min2;
< #line 85
<   __ret = __builtin_memcpy((void *)(& arg->verify_alg), (void const   *)tags, __len);
< #line 85
<   goto ldv_52183;
<   case 51: ;
< #line 85
<   if (dlen > 32) {
< #line 85
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "arg too long: %s (%u wanted, max len: %u bytes)\n",
<             (char *)"cpu_mask", dlen, 32U);
< #line 85
<     return (0);
---
> #line 104
>   tmp___17 = nla_put_u8(skb, 18, (int )((u8 )s->disk_drain));
> #line 104
>   if (tmp___17 != 0) {
> #line 104
>     goto nla_put_failure;
51784,51803c50808,50813
< #line 85
<   arg->cpu_mask_len = dlen;
< #line 85
<   __min1___0 = (size_t )dlen;
< #line 85
<   __min2___0 = 32UL;
< #line 85
<   __len___0 = __min1___0 < __min2___0 ? __min1___0 : __min2___0;
< #line 85
<   __ret___0 = __builtin_memcpy((void *)(& arg->cpu_mask), (void const   *)tags, __len___0);
< #line 85
<   goto ldv_52183;
<   case 64: ;
< #line 85
<   if (dlen > 64) {
< #line 85
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "arg too long: %s (%u wanted, max len: %u bytes)\n",
<             (char *)"csums_alg", dlen, 64U);
< #line 85
<     return (0);
---
> #line 104
>   tmp___18 = nla_put_u8(skb, 19, (int )((u8 )s->md_flushes));
> #line 104
>   if (tmp___18 != 0) {
> #line 104
>     goto nla_put_failure;
51807,51873c50817,50822
< #line 85
<   arg->csums_alg_len = dlen;
< #line 85
<   __min1___1 = (size_t )dlen;
< #line 85
<   __min2___1 = 64UL;
< #line 85
<   __len___1 = __min1___1 < __min2___1 ? __min1___1 : __min2___1;
< #line 85
<   __ret___1 = __builtin_memcpy((void *)(& arg->csums_alg), (void const   *)tags, __len___1);
< #line 85
<   goto ldv_52183;
<   case 65: 
< #line 85
<   arg->use_rle = (int )((signed char )*((char *)tags)) != 0;
< #line 85
<   goto ldv_52183;
<   case 75: 
< #line 85
<   tmp___4 = get_unaligned_le32((void const   *)tags);
< #line 85
<   arg->on_no_data = (int )tmp___4;
< #line 85
<   goto ldv_52183;
<   case 76: 
< #line 85
<   tmp___5 = get_unaligned_le32((void const   *)tags);
< #line 85
<   arg->c_plan_ahead = (int )tmp___5;
< #line 85
<   goto ldv_52183;
<   case 77: 
< #line 85
<   tmp___6 = get_unaligned_le32((void const   *)tags);
< #line 85
<   arg->c_delay_target = (int )tmp___6;
< #line 85
<   goto ldv_52183;
<   case 78: 
< #line 85
<   tmp___7 = get_unaligned_le32((void const   *)tags);
< #line 85
<   arg->c_fill_target = (int )tmp___7;
< #line 85
<   goto ldv_52183;
<   case 79: 
< #line 85
<   tmp___8 = get_unaligned_le32((void const   *)tags);
< #line 85
<   arg->c_max_rate = (int )tmp___8;
< #line 85
<   goto ldv_52183;
<   case 80: 
< #line 85
<   tmp___9 = get_unaligned_le32((void const   *)tags);
< #line 85
<   arg->c_min_rate = (int )tmp___9;
< #line 85
<   goto ldv_52183;
<   default: ;
< #line 85
<   if ((tag & 8192) != 0) {
< #line 85
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Unknown tag: %d\n",
<             tag & 8191);
< #line 85
<     return (0);
---
> #line 104
>   tmp___19 = nla_put_u32(skb, 20, s->disk_timeout);
> #line 104
>   if (tmp___19 != 0) {
> #line 104
>     goto nla_put_failure;
51876a50826,50833
> #line 104
>   tmp___20 = nla_put_u32(skb, 21, s->read_balancing);
> #line 104
>   if (tmp___20 != 0) {
> #line 104
>     goto nla_put_failure;
>   } else {
> 
51878,51893c50835,50840
<   ldv_52183: 
< #line 85
<   tags = tags + (unsigned long )dlen;
<   ldv_52225: 
< #line 85
<   tmp___10 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   tmp___11 = get_unaligned_le16((void const   *)tmp___10);
< #line 85
<   tag = (int )tmp___11;
< #line 85
<   if (tag != 0) {
< #line 86
<     goto ldv_52224;
---
> #line 104
>   tmp___21 = nla_put_u8(skb, 23, (int )((u8 )s->al_updates));
> #line 104
>   if (tmp___21 != 0) {
> #line 104
>     goto nla_put_failure;
51896a50844,50853
> #line 104
>   nla_nest_end(skb, tla);
> #line 104
>   return (0);
>   nla_put_failure: ;
> #line 104
>   if ((unsigned long )tla != (unsigned long )((struct nlattr *)0)) {
> #line 104
>     nla_nest_cancel(skb, tla);
>   } else {
51898,51899c50855,50857
< #line 85
<   return (1);
---
>   }
> #line 104
>   return (-90);
51902,51912c50860,50868
< #line 149
< static int start_ov_from_tags(struct drbd_conf *mdev , unsigned short *tags , struct start_ov *arg ) ;
< #line 149 "include/linux/drbd_nl.h"
< static int start_ov_from_tags(struct drbd_conf *mdev , unsigned short *tags , struct start_ov *arg ) 
< { 
<   int tag ;
<   int dlen ;
<   unsigned short *tmp ;
<   u16 tmp___0 ;
<   unsigned short *tmp___1 ;
<   u16 tmp___2 ;
---
> #line 140 "include/linux/drbd_genl.h"
> static int res_opts_to_skb(struct sk_buff *skb , struct res_opts *s , bool const   exclude_sensitive ) 
> { 
>   struct nlattr *tla ;
>   struct nlattr *tmp ;
>   int __min1 ;
>   int __min2 ;
>   int tmp___0 ;
>   int tmp___1 ;
51915,51945c50871,50878
< #line 146
<   goto ldv_52525;
<   ldv_52524: 
< #line 146
<   tmp = tags;
< #line 146
<   tags = tags + 1;
< #line 146
<   tmp___0 = get_unaligned_le16((void const   *)tmp);
< #line 146
<   dlen = (int )tmp___0;
< #line 146
<   switch (tag & 8191) {
<   case 66: 
< #line 146
<   arg->start_sector = get_unaligned_le64((void const   *)tags);
< #line 146
<   goto ldv_52521;
<   case 90: 
< #line 146
<   arg->stop_sector = get_unaligned_le64((void const   *)tags);
< #line 146
<   goto ldv_52521;
<   default: ;
< #line 146
<   if ((tag & 8192) != 0) {
< #line 146
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Unknown tag: %d\n",
<             tag & 8191);
< #line 146
<     return (0);
---
> #line 137
>   tmp = nla_nest_start(skb, 4);
> #line 137
>   tla = tmp;
> #line 137
>   if ((unsigned long )tla == (unsigned long )((struct nlattr *)0)) {
> #line 137
>     goto nla_put_failure;
51948a50882,50893
> #line 137
>   __min1 = 32;
> #line 137
>   __min2 = (int )(s->cpu_mask_len + 1U);
> #line 137
>   tmp___0 = nla_put(skb, 1, __min1 < __min2 ? __min1 : __min2, (void const   *)(& s->cpu_mask));
> #line 137
>   if (tmp___0 != 0) {
> #line 137
>     goto nla_put_failure;
>   } else {
> 
51950,51965c50895,50900
<   ldv_52521: 
< #line 146
<   tags = tags + (unsigned long )dlen;
<   ldv_52525: 
< #line 146
<   tmp___1 = tags;
< #line 146
<   tags = tags + 1;
< #line 146
<   tmp___2 = get_unaligned_le16((void const   *)tmp___1);
< #line 146
<   tag = (int )tmp___2;
< #line 146
<   if (tag != 0) {
< #line 147
<     goto ldv_52524;
---
> #line 137
>   tmp___1 = nla_put_u32(skb, 2, s->on_no_data);
> #line 137
>   if (tmp___1 != 0) {
> #line 137
>     goto nla_put_failure;
51968a50904,50913
> #line 137
>   nla_nest_end(skb, tla);
> #line 137
>   return (0);
>   nla_put_failure: ;
> #line 137
>   if ((unsigned long )tla != (unsigned long )((struct nlattr *)0)) {
> #line 137
>     nla_nest_cancel(skb, tla);
>   } else {
51970,51971c50915,50917
< #line 146
<   return (1);
---
>   }
> #line 137
>   return (-90);
51974,51984c50920,50963
< #line 153
< static int new_c_uuid_from_tags(struct drbd_conf *mdev , unsigned short *tags , struct new_c_uuid *arg ) ;
< #line 153 "include/linux/drbd_nl.h"
< static int new_c_uuid_from_tags(struct drbd_conf *mdev , unsigned short *tags , struct new_c_uuid *arg ) 
< { 
<   int tag ;
<   int dlen ;
<   unsigned short *tmp ;
<   u16 tmp___0 ;
<   unsigned short *tmp___1 ;
<   u16 tmp___2 ;
---
> #line 174 "include/linux/drbd_genl.h"
> static int net_conf_to_skb(struct sk_buff *skb , struct net_conf *s , bool const   exclude_sensitive ) 
> { 
>   struct nlattr *tla ;
>   struct nlattr *tmp ;
>   int __min1 ;
>   int __min2 ;
>   int tmp___0 ;
>   int __min1___0 ;
>   int __min2___0 ;
>   int tmp___1 ;
>   int __min1___1 ;
>   int __min2___1 ;
>   int tmp___2 ;
>   int __min1___2 ;
>   int __min2___2 ;
>   int tmp___3 ;
>   int __min1___3 ;
>   int __min2___3 ;
>   int tmp___4 ;
>   int tmp___5 ;
>   int tmp___6 ;
>   int tmp___7 ;
>   int tmp___8 ;
>   int tmp___9 ;
>   int tmp___10 ;
>   int tmp___11 ;
>   int tmp___12 ;
>   int tmp___13 ;
>   int tmp___14 ;
>   int tmp___15 ;
>   int tmp___16 ;
>   int tmp___17 ;
>   int tmp___18 ;
>   int tmp___19 ;
>   int tmp___20 ;
>   int tmp___21 ;
>   int tmp___22 ;
>   int tmp___23 ;
>   int tmp___24 ;
>   int tmp___25 ;
>   int tmp___26 ;
>   int tmp___27 ;
>   int tmp___28 ;
51987,52012c50966,50973
< #line 151
<   goto ldv_52542;
<   ldv_52541: 
< #line 151
<   tmp = tags;
< #line 151
<   tags = tags + 1;
< #line 151
<   tmp___0 = get_unaligned_le16((void const   *)tmp);
< #line 151
<   dlen = (int )tmp___0;
< #line 151
<   switch (tag & 8191) {
<   case 63: 
< #line 151
<   arg->clear_bm = (int )((signed char )*((char *)tags)) != 0;
< #line 151
<   goto ldv_52539;
<   default: ;
< #line 151
<   if ((tag & 8192) != 0) {
< #line 151
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Unknown tag: %d\n",
<             tag & 8191);
< #line 151
<     return (0);
---
> #line 142
>   tmp = nla_nest_start(skb, 5);
> #line 142
>   tla = tmp;
> #line 142
>   if ((unsigned long )tla == (unsigned long )((struct nlattr *)0)) {
> #line 142
>     goto nla_put_failure;
52016,52032c50977,50991
<   }
<   ldv_52539: 
< #line 151
<   tags = tags + (unsigned long )dlen;
<   ldv_52542: 
< #line 151
<   tmp___1 = tags;
< #line 151
<   tags = tags + 1;
< #line 151
<   tmp___2 = get_unaligned_le16((void const   *)tmp___1);
< #line 151
<   tag = (int )tmp___2;
< #line 151
<   if (tag != 0) {
< #line 152
<     goto ldv_52541;
---
> #line 142
>   if (! ((_Bool )exclude_sensitive)) {
> #line 142
>     __min1 = 64;
> #line 142
>     __min2 = (int )(s->shared_secret_len + 1U);
> #line 142
>     tmp___0 = nla_put(skb, 1, __min1 < __min2 ? __min1 : __min2, (void const   *)(& s->shared_secret));
> #line 142
>     if (tmp___0 != 0) {
> #line 142
>       goto nla_put_failure;
>     } else {
> 
>     }
52035a50995,51005
> #line 142
>   __min1___0 = 64;
> #line 142
>   __min2___0 = (int )(s->cram_hmac_alg_len + 1U);
> #line 142
>   tmp___1 = nla_put(skb, 2, __min1___0 < __min2___0 ? __min1___0 : __min2___0, (void const   *)(& s->cram_hmac_alg));
> #line 142
>   if (tmp___1 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
52037,52144d51006
< #line 151
<   return (1);
< }
< }
< #line 35
< static unsigned short *disk_conf_to_tags(struct drbd_conf *mdev , struct disk_conf *arg ,
<                                          unsigned short *tags ) ;
< #line 35 "include/linux/drbd_nl.h"
< static unsigned short *disk_conf_to_tags(struct drbd_conf *mdev , struct disk_conf *arg ,
<                                          unsigned short *tags ) 
< { 
<   void *__gu_p ;
<   unsigned short *tmp ;
<   void *__gu_p___0 ;
<   unsigned short *tmp___0 ;
<   void *__gu_p___1 ;
<   void *__gu_p___2 ;
<   unsigned short *tmp___1 ;
<   void *__gu_p___3 ;
<   unsigned short *tmp___2 ;
<   size_t __len ;
<   void *__ret ;
<   void *__gu_p___4 ;
<   unsigned short *tmp___3 ;
<   void *__gu_p___5 ;
<   unsigned short *tmp___4 ;
<   size_t __len___0 ;
<   void *__ret___0 ;
<   void *__gu_p___6 ;
<   unsigned short *tmp___5 ;
<   void *__gu_p___7 ;
<   unsigned short *tmp___6 ;
<   void *__gu_p___8 ;
<   void *__gu_p___9 ;
<   unsigned short *tmp___7 ;
<   void *__gu_p___10 ;
<   unsigned short *tmp___8 ;
<   void *__gu_p___11 ;
<   void *__gu_p___12 ;
<   unsigned short *tmp___9 ;
<   void *__gu_p___13 ;
<   unsigned short *tmp___10 ;
<   void *__gu_p___14 ;
<   void *__gu_p___15 ;
<   unsigned short *tmp___11 ;
<   void *__gu_p___16 ;
<   unsigned short *tmp___12 ;
<   void *__gu_p___17 ;
<   unsigned short *tmp___13 ;
<   void *__gu_p___18 ;
<   unsigned short *tmp___14 ;
<   void *__gu_p___19 ;
<   unsigned short *tmp___15 ;
<   void *__gu_p___20 ;
<   unsigned short *tmp___16 ;
<   void *__gu_p___21 ;
<   unsigned short *tmp___17 ;
<   void *__gu_p___22 ;
<   unsigned short *tmp___18 ;
<   void *__gu_p___23 ;
<   void *__gu_p___24 ;
<   unsigned short *tmp___19 ;
<   void *__gu_p___25 ;
<   unsigned short *tmp___20 ;
<   void *__gu_p___26 ;
<   unsigned short *tmp___21 ;
<   void *__gu_p___27 ;
<   unsigned short *tmp___22 ;
<   void *__gu_p___28 ;
<   unsigned short *tmp___23 ;
<   void *__gu_p___29 ;
<   unsigned short *tmp___24 ;
<   void *__gu_p___30 ;
< 
<   {
< #line 20
<   tmp = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p = (void *)tmp;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p) = 2U;
< #line 20
<   goto ldv_52587;
<   case 2UL: 
< #line 20
<   put_unaligned_le16(16386, __gu_p);
< #line 20
<   goto ldv_52587;
<   case 4UL: 
< #line 20
<   put_unaligned_le32(16386U, __gu_p);
< #line 20
<   goto ldv_52587;
<   case 8UL: 
< #line 20
<   put_unaligned_le64(16386ULL, __gu_p);
< #line 20
<   goto ldv_52587;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52587;
52146,52179c51008,51019
<   ldv_52587: 
< #line 20
<   tmp___0 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p___0 = (void *)tmp___0;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___0) = 8U;
< #line 20
<   goto ldv_52594;
<   case 2UL: 
< #line 20
<   put_unaligned_le16(8, __gu_p___0);
< #line 20
<   goto ldv_52594;
<   case 4UL: 
< #line 20
<   put_unaligned_le32(8U, __gu_p___0);
< #line 20
<   goto ldv_52594;
<   case 8UL: 
< #line 20
<   put_unaligned_le64(8ULL, __gu_p___0);
< #line 20
<   goto ldv_52594;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52594;
---
> #line 142
>   __min1___1 = 64;
> #line 142
>   __min2___1 = (int )(s->integrity_alg_len + 1U);
> #line 142
>   tmp___2 = nla_put(skb, 3, __min1___1 < __min2___1 ? __min1___1 : __min2___1, (void const   *)(& s->integrity_alg));
> #line 142
>   if (tmp___2 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
52181,52210c51021,51032
<   ldv_52594: 
< #line 20
<   __gu_p___1 = (void *)tags;
< #line 20
<   switch (8UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___1) = (unsigned char )arg->disk_size;
< #line 20
<   goto ldv_52601;
<   case 2UL: 
< #line 20
<   put_unaligned_le16((int )((unsigned short )arg->disk_size), __gu_p___1);
< #line 20
<   goto ldv_52601;
<   case 4UL: 
< #line 20
<   put_unaligned_le32((unsigned int )arg->disk_size, __gu_p___1);
< #line 20
<   goto ldv_52601;
<   case 8UL: 
< #line 20
<   put_unaligned_le64(arg->disk_size, __gu_p___1);
< #line 20
<   goto ldv_52601;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52601;
---
> #line 142
>   __min1___2 = 64;
> #line 142
>   __min2___2 = (int )(s->verify_alg_len + 1U);
> #line 142
>   tmp___3 = nla_put(skb, 4, __min1___2 < __min2___2 ? __min1___2 : __min2___2, (void const   *)(& s->verify_alg));
> #line 142
>   if (tmp___3 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
52212,52247c51034,51045
<   ldv_52601: 
< #line 20
<   tags = tags + 8U;
< #line 20
<   tmp___1 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p___2 = (void *)tmp___1;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___2) = 3U;
< #line 20
<   goto ldv_52608;
<   case 2UL: 
< #line 20
<   put_unaligned_le16(57347, __gu_p___2);
< #line 20
<   goto ldv_52608;
<   case 4UL: 
< #line 20
<   put_unaligned_le32(57347U, __gu_p___2);
< #line 20
<   goto ldv_52608;
<   case 8UL: 
< #line 20
<   put_unaligned_le64(57347ULL, __gu_p___2);
< #line 20
<   goto ldv_52608;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52608;
---
> #line 142
>   __min1___3 = 64;
> #line 142
>   __min2___3 = (int )(s->csums_alg_len + 1U);
> #line 142
>   tmp___4 = nla_put(skb, 5, __min1___3 < __min2___3 ? __min1___3 : __min2___3, (void const   *)(& s->csums_alg));
> #line 142
>   if (tmp___4 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
52249,52282c51047,51054
<   ldv_52608: 
< #line 20
<   tmp___2 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p___3 = (void *)tmp___2;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___3) = (unsigned char )arg->backing_dev_len;
< #line 20
<   goto ldv_52615;
<   case 2UL: 
< #line 20
<   put_unaligned_le16((int )((unsigned short )arg->backing_dev_len), __gu_p___3);
< #line 20
<   goto ldv_52615;
<   case 4UL: 
< #line 20
<   put_unaligned_le32((unsigned int )arg->backing_dev_len, __gu_p___3);
< #line 20
<   goto ldv_52615;
<   case 8UL: 
< #line 20
<   put_unaligned_le64((unsigned long long )arg->backing_dev_len, __gu_p___3);
< #line 20
<   goto ldv_52615;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52615;
---
> #line 142
>   tmp___5 = nla_put_u32(skb, 6, s->wire_protocol);
> #line 142
>   if (tmp___5 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
52284,52323c51056,51063
<   ldv_52615: 
< #line 20
<   __len = (size_t )arg->backing_dev_len;
< #line 20
<   __ret = __builtin_memcpy((void *)tags, (void const   *)(& arg->backing_dev), __len);
< #line 20
<   tags = tags + (unsigned long )arg->backing_dev_len;
< #line 20
<   tmp___3 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p___4 = (void *)tmp___3;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___4) = 4U;
< #line 20
<   goto ldv_52625;
<   case 2UL: 
< #line 20
<   put_unaligned_le16(57348, __gu_p___4);
< #line 20
<   goto ldv_52625;
<   case 4UL: 
< #line 20
<   put_unaligned_le32(57348U, __gu_p___4);
< #line 20
<   goto ldv_52625;
<   case 8UL: 
< #line 20
<   put_unaligned_le64(57348ULL, __gu_p___4);
< #line 20
<   goto ldv_52625;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52625;
---
> #line 142
>   tmp___6 = nla_put_u32(skb, 7, s->connect_int);
> #line 142
>   if (tmp___6 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
52325,52358c51065,51072
<   ldv_52625: 
< #line 20
<   tmp___4 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p___5 = (void *)tmp___4;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___5) = (unsigned char )arg->meta_dev_len;
< #line 20
<   goto ldv_52632;
<   case 2UL: 
< #line 20
<   put_unaligned_le16((int )((unsigned short )arg->meta_dev_len), __gu_p___5);
< #line 20
<   goto ldv_52632;
<   case 4UL: 
< #line 20
<   put_unaligned_le32((unsigned int )arg->meta_dev_len, __gu_p___5);
< #line 20
<   goto ldv_52632;
<   case 8UL: 
< #line 20
<   put_unaligned_le64((unsigned long long )arg->meta_dev_len, __gu_p___5);
< #line 20
<   goto ldv_52632;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52632;
---
> #line 142
>   tmp___7 = nla_put_u32(skb, 8, s->timeout);
> #line 142
>   if (tmp___7 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
52360,52399c51074,51081
<   ldv_52632: 
< #line 20
<   __len___0 = (size_t )arg->meta_dev_len;
< #line 20
<   __ret___0 = __builtin_memcpy((void *)tags, (void const   *)(& arg->meta_dev), __len___0);
< #line 20
<   tags = tags + (unsigned long )arg->meta_dev_len;
< #line 20
<   tmp___5 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p___6 = (void *)tmp___5;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___6) = 5U;
< #line 20
<   goto ldv_52642;
<   case 2UL: 
< #line 20
<   put_unaligned_le16(8197, __gu_p___6);
< #line 20
<   goto ldv_52642;
<   case 4UL: 
< #line 20
<   put_unaligned_le32(8197U, __gu_p___6);
< #line 20
<   goto ldv_52642;
<   case 8UL: 
< #line 20
<   put_unaligned_le64(8197ULL, __gu_p___6);
< #line 20
<   goto ldv_52642;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52642;
---
> #line 142
>   tmp___8 = nla_put_u32(skb, 9, s->ping_int);
> #line 142
>   if (tmp___8 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
52401,52434c51083,51090
<   ldv_52642: 
< #line 20
<   tmp___6 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p___7 = (void *)tmp___6;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___7) = 4U;
< #line 20
<   goto ldv_52649;
<   case 2UL: 
< #line 20
<   put_unaligned_le16(4, __gu_p___7);
< #line 20
<   goto ldv_52649;
<   case 4UL: 
< #line 20
<   put_unaligned_le32(4U, __gu_p___7);
< #line 20
<   goto ldv_52649;
<   case 8UL: 
< #line 20
<   put_unaligned_le64(4ULL, __gu_p___7);
< #line 20
<   goto ldv_52649;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52649;
---
> #line 142
>   tmp___9 = nla_put_u32(skb, 10, s->ping_timeo);
> #line 142
>   if (tmp___9 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
52436,52465c51092,51099
<   ldv_52649: 
< #line 20
<   __gu_p___8 = (void *)tags;
< #line 20
<   switch (4UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___8) = (unsigned char )arg->meta_dev_idx;
< #line 20
<   goto ldv_52656;
<   case 2UL: 
< #line 20
<   put_unaligned_le16((int )((unsigned short )arg->meta_dev_idx), __gu_p___8);
< #line 20
<   goto ldv_52656;
<   case 4UL: 
< #line 20
<   put_unaligned_le32((unsigned int )arg->meta_dev_idx, __gu_p___8);
< #line 20
<   goto ldv_52656;
<   case 8UL: 
< #line 20
<   put_unaligned_le64((unsigned long long )arg->meta_dev_idx, __gu_p___8);
< #line 20
<   goto ldv_52656;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52656;
---
> #line 142
>   tmp___10 = nla_put_u32(skb, 11, s->sndbuf_size);
> #line 142
>   if (tmp___10 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
52467,52502c51101,51108
<   ldv_52656: 
< #line 20
<   tags = tags + 4U;
< #line 20
<   tmp___7 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p___9 = (void *)tmp___7;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___9) = 6U;
< #line 20
<   goto ldv_52663;
<   case 2UL: 
< #line 20
<   put_unaligned_le16(6, __gu_p___9);
< #line 20
<   goto ldv_52663;
<   case 4UL: 
< #line 20
<   put_unaligned_le32(6U, __gu_p___9);
< #line 20
<   goto ldv_52663;
<   case 8UL: 
< #line 20
<   put_unaligned_le64(6ULL, __gu_p___9);
< #line 20
<   goto ldv_52663;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52663;
---
> #line 142
>   tmp___11 = nla_put_u32(skb, 12, s->rcvbuf_size);
> #line 142
>   if (tmp___11 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
52504,52537c51110,51117
<   ldv_52663: 
< #line 20
<   tmp___8 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p___10 = (void *)tmp___8;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___10) = 4U;
< #line 20
<   goto ldv_52670;
<   case 2UL: 
< #line 20
<   put_unaligned_le16(4, __gu_p___10);
< #line 20
<   goto ldv_52670;
<   case 4UL: 
< #line 20
<   put_unaligned_le32(4U, __gu_p___10);
< #line 20
<   goto ldv_52670;
<   case 8UL: 
< #line 20
<   put_unaligned_le64(4ULL, __gu_p___10);
< #line 20
<   goto ldv_52670;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52670;
---
> #line 142
>   tmp___12 = nla_put_u32(skb, 13, s->ko_count);
> #line 142
>   if (tmp___12 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
52539,52568c51119,51126
<   ldv_52670: 
< #line 20
<   __gu_p___11 = (void *)tags;
< #line 20
<   switch (4UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___11) = (unsigned char )arg->on_io_error;
< #line 20
<   goto ldv_52677;
<   case 2UL: 
< #line 20
<   put_unaligned_le16((int )((unsigned short )arg->on_io_error), __gu_p___11);
< #line 20
<   goto ldv_52677;
<   case 4UL: 
< #line 20
<   put_unaligned_le32((unsigned int )arg->on_io_error, __gu_p___11);
< #line 20
<   goto ldv_52677;
<   case 8UL: 
< #line 20
<   put_unaligned_le64((unsigned long long )arg->on_io_error, __gu_p___11);
< #line 20
<   goto ldv_52677;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52677;
---
> #line 142
>   tmp___13 = nla_put_u32(skb, 14, s->max_buffers);
> #line 142
>   if (tmp___13 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
52570,52605c51128,51135
<   ldv_52677: 
< #line 20
<   tags = tags + 4U;
< #line 20
<   tmp___9 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p___12 = (void *)tmp___9;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___12) = 7U;
< #line 20
<   goto ldv_52684;
<   case 2UL: 
< #line 20
<   put_unaligned_le16(7, __gu_p___12);
< #line 20
<   goto ldv_52684;
<   case 4UL: 
< #line 20
<   put_unaligned_le32(7U, __gu_p___12);
< #line 20
<   goto ldv_52684;
<   case 8UL: 
< #line 20
<   put_unaligned_le64(7ULL, __gu_p___12);
< #line 20
<   goto ldv_52684;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52684;
---
> #line 142
>   tmp___14 = nla_put_u32(skb, 15, s->max_epoch_size);
> #line 142
>   if (tmp___14 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
52607,52640c51137,51144
<   ldv_52684: 
< #line 20
<   tmp___10 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p___13 = (void *)tmp___10;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___13) = 4U;
< #line 20
<   goto ldv_52691;
<   case 2UL: 
< #line 20
<   put_unaligned_le16(4, __gu_p___13);
< #line 20
<   goto ldv_52691;
<   case 4UL: 
< #line 20
<   put_unaligned_le32(4U, __gu_p___13);
< #line 20
<   goto ldv_52691;
<   case 8UL: 
< #line 20
<   put_unaligned_le64(4ULL, __gu_p___13);
< #line 20
<   goto ldv_52691;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52691;
---
> #line 142
>   tmp___15 = nla_put_u32(skb, 16, s->unplug_watermark);
> #line 142
>   if (tmp___15 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
52642,52671c51146,51153
<   ldv_52691: 
< #line 20
<   __gu_p___14 = (void *)tags;
< #line 20
<   switch (4UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___14) = (unsigned char )arg->fencing;
< #line 20
<   goto ldv_52698;
<   case 2UL: 
< #line 20
<   put_unaligned_le16((int )((unsigned short )arg->fencing), __gu_p___14);
< #line 20
<   goto ldv_52698;
<   case 4UL: 
< #line 20
<   put_unaligned_le32((unsigned int )arg->fencing, __gu_p___14);
< #line 20
<   goto ldv_52698;
<   case 8UL: 
< #line 20
<   put_unaligned_le64((unsigned long long )arg->fencing, __gu_p___14);
< #line 20
<   goto ldv_52698;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52698;
---
> #line 142
>   tmp___16 = nla_put_u32(skb, 17, s->after_sb_0p);
> #line 142
>   if (tmp___16 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
52673,52708c51155,51162
<   ldv_52698: 
< #line 20
<   tags = tags + 4U;
< #line 20
<   tmp___11 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p___15 = (void *)tmp___11;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___15) = 37U;
< #line 20
<   goto ldv_52705;
<   case 2UL: 
< #line 20
<   put_unaligned_le16(32805, __gu_p___15);
< #line 20
<   goto ldv_52705;
<   case 4UL: 
< #line 20
<   put_unaligned_le32(32805U, __gu_p___15);
< #line 20
<   goto ldv_52705;
<   case 8UL: 
< #line 20
<   put_unaligned_le64(32805ULL, __gu_p___15);
< #line 20
<   goto ldv_52705;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52705;
---
> #line 142
>   tmp___17 = nla_put_u32(skb, 18, s->after_sb_1p);
> #line 142
>   if (tmp___17 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
52710,52743c51164,51171
<   ldv_52705: 
< #line 20
<   tmp___12 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p___16 = (void *)tmp___12;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___16) = 1U;
< #line 20
<   goto ldv_52712;
<   case 2UL: 
< #line 20
<   put_unaligned_le16(1, __gu_p___16);
< #line 20
<   goto ldv_52712;
<   case 4UL: 
< #line 20
<   put_unaligned_le32(1U, __gu_p___16);
< #line 20
<   goto ldv_52712;
<   case 8UL: 
< #line 20
<   put_unaligned_le64(1ULL, __gu_p___16);
< #line 20
<   goto ldv_52712;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52712;
---
> #line 142
>   tmp___18 = nla_put_u32(skb, 19, s->after_sb_2p);
> #line 142
>   if (tmp___18 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
52745,52782c51173,51180
<   ldv_52712: 
< #line 20
<   *((char *)tags) = (char )arg->use_bmbv;
< #line 20
<   tags = tags + 1U;
< #line 20
<   tmp___13 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p___17 = (void *)tmp___13;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___17) = 53U;
< #line 20
<   goto ldv_52719;
<   case 2UL: 
< #line 20
<   put_unaligned_le16(32821, __gu_p___17);
< #line 20
<   goto ldv_52719;
<   case 4UL: 
< #line 20
<   put_unaligned_le32(32821U, __gu_p___17);
< #line 20
<   goto ldv_52719;
<   case 8UL: 
< #line 20
<   put_unaligned_le64(32821ULL, __gu_p___17);
< #line 20
<   goto ldv_52719;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52719;
---
> #line 142
>   tmp___19 = nla_put_u32(skb, 20, s->rr_conflict);
> #line 142
>   if (tmp___19 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
52784,52817c51182,51189
<   ldv_52719: 
< #line 20
<   tmp___14 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p___18 = (void *)tmp___14;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___18) = 1U;
< #line 20
<   goto ldv_52726;
<   case 2UL: 
< #line 20
<   put_unaligned_le16(1, __gu_p___18);
< #line 20
<   goto ldv_52726;
<   case 4UL: 
< #line 20
<   put_unaligned_le32(1U, __gu_p___18);
< #line 20
<   goto ldv_52726;
<   case 8UL: 
< #line 20
<   put_unaligned_le64(1ULL, __gu_p___18);
< #line 20
<   goto ldv_52726;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52726;
---
> #line 142
>   tmp___20 = nla_put_u32(skb, 21, s->on_congestion);
> #line 142
>   if (tmp___20 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
52819,52856c51191,51198
<   ldv_52726: 
< #line 20
<   *((char *)tags) = (char )arg->no_disk_flush;
< #line 20
<   tags = tags + 1U;
< #line 20
<   tmp___15 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p___19 = (void *)tmp___15;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___19) = 54U;
< #line 20
<   goto ldv_52733;
<   case 2UL: 
< #line 20
<   put_unaligned_le16(32822, __gu_p___19);
< #line 20
<   goto ldv_52733;
<   case 4UL: 
< #line 20
<   put_unaligned_le32(32822U, __gu_p___19);
< #line 20
<   goto ldv_52733;
<   case 8UL: 
< #line 20
<   put_unaligned_le64(32822ULL, __gu_p___19);
< #line 20
<   goto ldv_52733;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52733;
---
> #line 142
>   tmp___21 = nla_put_u32(skb, 22, s->cong_fill);
> #line 142
>   if (tmp___21 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
52858,52891c51200,51207
<   ldv_52733: 
< #line 20
<   tmp___16 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p___20 = (void *)tmp___16;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___20) = 1U;
< #line 20
<   goto ldv_52740;
<   case 2UL: 
< #line 20
<   put_unaligned_le16(1, __gu_p___20);
< #line 20
<   goto ldv_52740;
<   case 4UL: 
< #line 20
<   put_unaligned_le32(1U, __gu_p___20);
< #line 20
<   goto ldv_52740;
<   case 8UL: 
< #line 20
<   put_unaligned_le64(1ULL, __gu_p___20);
< #line 20
<   goto ldv_52740;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52740;
---
> #line 142
>   tmp___22 = nla_put_u32(skb, 23, s->cong_extents);
> #line 142
>   if (tmp___22 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
52893,52930c51209,51216
<   ldv_52740: 
< #line 20
<   *((char *)tags) = (char )arg->no_md_flush;
< #line 20
<   tags = tags + 1U;
< #line 20
<   tmp___17 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p___21 = (void *)tmp___17;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___21) = 56U;
< #line 20
<   goto ldv_52747;
<   case 2UL: 
< #line 20
<   put_unaligned_le16(56, __gu_p___21);
< #line 20
<   goto ldv_52747;
<   case 4UL: 
< #line 20
<   put_unaligned_le32(56U, __gu_p___21);
< #line 20
<   goto ldv_52747;
<   case 8UL: 
< #line 20
<   put_unaligned_le64(56ULL, __gu_p___21);
< #line 20
<   goto ldv_52747;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52747;
---
> #line 142
>   tmp___23 = nla_put_u8(skb, 24, (int )((u8 )s->two_primaries));
> #line 142
>   if (tmp___23 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
52932,52965c51218,51225
<   ldv_52747: 
< #line 20
<   tmp___18 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p___22 = (void *)tmp___18;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___22) = 4U;
< #line 20
<   goto ldv_52754;
<   case 2UL: 
< #line 20
<   put_unaligned_le16(4, __gu_p___22);
< #line 20
<   goto ldv_52754;
<   case 4UL: 
< #line 20
<   put_unaligned_le32(4U, __gu_p___22);
< #line 20
<   goto ldv_52754;
<   case 8UL: 
< #line 20
<   put_unaligned_le64(4ULL, __gu_p___22);
< #line 20
<   goto ldv_52754;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52754;
---
> #line 142
>   tmp___24 = nla_put_u8(skb, 25, (int )((u8 )s->discard_my_data));
> #line 142
>   if (tmp___24 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
52967,52996c51227,51234
<   ldv_52754: 
< #line 20
<   __gu_p___23 = (void *)tags;
< #line 20
<   switch (4UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___23) = (unsigned char )arg->max_bio_bvecs;
< #line 20
<   goto ldv_52761;
<   case 2UL: 
< #line 20
<   put_unaligned_le16((int )((unsigned short )arg->max_bio_bvecs), __gu_p___23);
< #line 20
<   goto ldv_52761;
<   case 4UL: 
< #line 20
<   put_unaligned_le32((unsigned int )arg->max_bio_bvecs, __gu_p___23);
< #line 20
<   goto ldv_52761;
<   case 8UL: 
< #line 20
<   put_unaligned_le64((unsigned long long )arg->max_bio_bvecs, __gu_p___23);
< #line 20
<   goto ldv_52761;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52761;
---
> #line 142
>   tmp___25 = nla_put_u8(skb, 26, (int )((u8 )s->tcp_cork));
> #line 142
>   if (tmp___25 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
52998,53033c51236,51243
<   ldv_52761: 
< #line 20
<   tags = tags + 4U;
< #line 20
<   tmp___19 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p___24 = (void *)tmp___19;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___24) = 57U;
< #line 20
<   goto ldv_52768;
<   case 2UL: 
< #line 20
<   put_unaligned_le16(32825, __gu_p___24);
< #line 20
<   goto ldv_52768;
<   case 4UL: 
< #line 20
<   put_unaligned_le32(32825U, __gu_p___24);
< #line 20
<   goto ldv_52768;
<   case 8UL: 
< #line 20
<   put_unaligned_le64(32825ULL, __gu_p___24);
< #line 20
<   goto ldv_52768;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52768;
---
> #line 142
>   tmp___26 = nla_put_u8(skb, 27, (int )((u8 )s->always_asbp));
> #line 142
>   if (tmp___26 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
53035,53068c51245,51252
<   ldv_52768: 
< #line 20
<   tmp___20 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p___25 = (void *)tmp___20;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___25) = 1U;
< #line 20
<   goto ldv_52775;
<   case 2UL: 
< #line 20
<   put_unaligned_le16(1, __gu_p___25);
< #line 20
<   goto ldv_52775;
<   case 4UL: 
< #line 20
<   put_unaligned_le32(1U, __gu_p___25);
< #line 20
<   goto ldv_52775;
<   case 8UL: 
< #line 20
<   put_unaligned_le64(1ULL, __gu_p___25);
< #line 20
<   goto ldv_52775;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52775;
---
> #line 142
>   tmp___27 = nla_put_u8(skb, 28, (int )((u8 )s->tentative));
> #line 142
>   if (tmp___27 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
53070,53107c51254,51261
<   ldv_52775: 
< #line 20
<   *((char *)tags) = (char )arg->no_disk_barrier;
< #line 20
<   tags = tags + 1U;
< #line 20
<   tmp___21 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p___26 = (void *)tmp___21;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___26) = 58U;
< #line 20
<   goto ldv_52782;
<   case 2UL: 
< #line 20
<   put_unaligned_le16(32826, __gu_p___26);
< #line 20
<   goto ldv_52782;
<   case 4UL: 
< #line 20
<   put_unaligned_le32(32826U, __gu_p___26);
< #line 20
<   goto ldv_52782;
<   case 8UL: 
< #line 20
<   put_unaligned_le64(32826ULL, __gu_p___26);
< #line 20
<   goto ldv_52782;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52782;
---
> #line 142
>   tmp___28 = nla_put_u8(skb, 29, (int )((u8 )s->use_rle));
> #line 142
>   if (tmp___28 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
53109,53142c51263,51273
<   ldv_52782: 
< #line 20
<   tmp___22 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p___27 = (void *)tmp___22;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___27) = 1U;
< #line 20
<   goto ldv_52789;
<   case 2UL: 
< #line 20
<   put_unaligned_le16(1, __gu_p___27);
< #line 20
<   goto ldv_52789;
<   case 4UL: 
< #line 20
<   put_unaligned_le32(1U, __gu_p___27);
< #line 20
<   goto ldv_52789;
<   case 8UL: 
< #line 20
<   put_unaligned_le64(1ULL, __gu_p___27);
< #line 20
<   goto ldv_52789;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52789;
---
> #line 142
>   nla_nest_end(skb, tla);
> #line 142
>   return (0);
>   nla_put_failure: ;
> #line 142
>   if ((unsigned long )tla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     nla_nest_cancel(skb, tla);
>   } else {
> 
53144,53181c51275,51296
<   ldv_52789: 
< #line 20
<   *((char *)tags) = (char )arg->no_disk_drain;
< #line 20
<   tags = tags + 1U;
< #line 20
<   tmp___23 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p___28 = (void *)tmp___23;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___28) = 89U;
< #line 20
<   goto ldv_52796;
<   case 2UL: 
< #line 20
<   put_unaligned_le16(89, __gu_p___28);
< #line 20
<   goto ldv_52796;
<   case 4UL: 
< #line 20
<   put_unaligned_le32(89U, __gu_p___28);
< #line 20
<   goto ldv_52796;
<   case 8UL: 
< #line 20
<   put_unaligned_le64(89ULL, __gu_p___28);
< #line 20
<   goto ldv_52796;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52796;
---
> #line 142
>   return (-90);
> }
> }
> #line 237 "include/linux/drbd_genl.h"
> static int timeout_parms_to_skb(struct sk_buff *skb , struct timeout_parms *s , bool const   exclude_sensitive ) 
> { 
>   struct nlattr *tla ;
>   struct nlattr *tmp ;
>   int tmp___0 ;
> 
>   {
> #line 235
>   tmp = nla_nest_start(skb, 11);
> #line 235
>   tla = tmp;
> #line 235
>   if ((unsigned long )tla == (unsigned long )((struct nlattr *)0)) {
> #line 235
>     goto nla_put_failure;
>   } else {
> 
53183,53216c51298,51305
<   ldv_52796: 
< #line 20
<   tmp___24 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p___29 = (void *)tmp___24;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___29) = 4U;
< #line 20
<   goto ldv_52803;
<   case 2UL: 
< #line 20
<   put_unaligned_le16(4, __gu_p___29);
< #line 20
<   goto ldv_52803;
<   case 4UL: 
< #line 20
<   put_unaligned_le32(4U, __gu_p___29);
< #line 20
<   goto ldv_52803;
<   case 8UL: 
< #line 20
<   put_unaligned_le64(4ULL, __gu_p___29);
< #line 20
<   goto ldv_52803;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52803;
---
> #line 235
>   tmp___0 = nla_put_u32(skb, 1, s->timeout_type);
> #line 235
>   if (tmp___0 != 0) {
> #line 235
>     goto nla_put_failure;
>   } else {
> 
53218,53247c51307,51317
<   ldv_52803: 
< #line 20
<   __gu_p___30 = (void *)tags;
< #line 20
<   switch (4UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___30) = (unsigned char )arg->disk_timeout;
< #line 20
<   goto ldv_52810;
<   case 2UL: 
< #line 20
<   put_unaligned_le16((int )((unsigned short )arg->disk_timeout), __gu_p___30);
< #line 20
<   goto ldv_52810;
<   case 4UL: 
< #line 20
<   put_unaligned_le32((unsigned int )arg->disk_timeout, __gu_p___30);
< #line 20
<   goto ldv_52810;
<   case 8UL: 
< #line 20
<   put_unaligned_le64((unsigned long long )arg->disk_timeout, __gu_p___30);
< #line 20
<   goto ldv_52810;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52810;
---
> #line 235
>   nla_nest_end(skb, tla);
> #line 235
>   return (0);
>   nla_put_failure: ;
> #line 235
>   if ((unsigned long )tla != (unsigned long )((struct nlattr *)0)) {
> #line 235
>     nla_nest_cancel(skb, tla);
>   } else {
> 
53249,53253c51319,51320
<   ldv_52810: 
< #line 20
<   tags = tags + 4U;
< #line 20
<   return (tags);
---
> #line 235
>   return (-90);
53256,53410c51323,51326
< #line 73
< static unsigned short *net_conf_to_tags(struct drbd_conf *mdev , struct net_conf *arg ,
<                                         unsigned short *tags ) ;
< #line 73 "include/linux/drbd_nl.h"
< static unsigned short *net_conf_to_tags(struct drbd_conf *mdev , struct net_conf *arg ,
<                                         unsigned short *tags ) 
< { 
<   void *__gu_p ;
<   unsigned short *tmp ;
<   void *__gu_p___0 ;
<   unsigned short *tmp___0 ;
<   size_t __len ;
<   void *__ret ;
<   void *__gu_p___1 ;
<   unsigned short *tmp___1 ;
<   void *__gu_p___2 ;
<   unsigned short *tmp___2 ;
<   size_t __len___0 ;
<   void *__ret___0 ;
<   void *__gu_p___3 ;
<   unsigned short *tmp___3 ;
<   void *__gu_p___4 ;
<   unsigned short *tmp___4 ;
<   size_t __len___1 ;
<   void *__ret___1 ;
<   void *__gu_p___5 ;
<   unsigned short *tmp___5 ;
<   void *__gu_p___6 ;
<   unsigned short *tmp___6 ;
<   size_t __len___2 ;
<   void *__ret___2 ;
<   void *__gu_p___7 ;
<   unsigned short *tmp___7 ;
<   void *__gu_p___8 ;
<   unsigned short *tmp___8 ;
<   size_t __len___3 ;
<   void *__ret___3 ;
<   void *__gu_p___9 ;
<   unsigned short *tmp___9 ;
<   void *__gu_p___10 ;
<   unsigned short *tmp___10 ;
<   void *__gu_p___11 ;
<   void *__gu_p___12 ;
<   unsigned short *tmp___11 ;
<   void *__gu_p___13 ;
<   unsigned short *tmp___12 ;
<   void *__gu_p___14 ;
<   void *__gu_p___15 ;
<   unsigned short *tmp___13 ;
<   void *__gu_p___16 ;
<   unsigned short *tmp___14 ;
<   void *__gu_p___17 ;
<   void *__gu_p___18 ;
<   unsigned short *tmp___15 ;
<   void *__gu_p___19 ;
<   unsigned short *tmp___16 ;
<   void *__gu_p___20 ;
<   void *__gu_p___21 ;
<   unsigned short *tmp___17 ;
<   void *__gu_p___22 ;
<   unsigned short *tmp___18 ;
<   void *__gu_p___23 ;
<   void *__gu_p___24 ;
<   unsigned short *tmp___19 ;
<   void *__gu_p___25 ;
<   unsigned short *tmp___20 ;
<   void *__gu_p___26 ;
<   void *__gu_p___27 ;
<   unsigned short *tmp___21 ;
<   void *__gu_p___28 ;
<   unsigned short *tmp___22 ;
<   void *__gu_p___29 ;
<   void *__gu_p___30 ;
<   unsigned short *tmp___23 ;
<   void *__gu_p___31 ;
<   unsigned short *tmp___24 ;
<   void *__gu_p___32 ;
<   void *__gu_p___33 ;
<   unsigned short *tmp___25 ;
<   void *__gu_p___34 ;
<   unsigned short *tmp___26 ;
<   void *__gu_p___35 ;
<   void *__gu_p___36 ;
<   unsigned short *tmp___27 ;
<   void *__gu_p___37 ;
<   unsigned short *tmp___28 ;
<   void *__gu_p___38 ;
<   void *__gu_p___39 ;
<   unsigned short *tmp___29 ;
<   void *__gu_p___40 ;
<   unsigned short *tmp___30 ;
<   void *__gu_p___41 ;
<   void *__gu_p___42 ;
<   unsigned short *tmp___31 ;
<   void *__gu_p___43 ;
<   unsigned short *tmp___32 ;
<   void *__gu_p___44 ;
<   void *__gu_p___45 ;
<   unsigned short *tmp___33 ;
<   void *__gu_p___46 ;
<   unsigned short *tmp___34 ;
<   void *__gu_p___47 ;
<   void *__gu_p___48 ;
<   unsigned short *tmp___35 ;
<   void *__gu_p___49 ;
<   unsigned short *tmp___36 ;
<   void *__gu_p___50 ;
<   void *__gu_p___51 ;
<   unsigned short *tmp___37 ;
<   void *__gu_p___52 ;
<   unsigned short *tmp___38 ;
<   void *__gu_p___53 ;
<   void *__gu_p___54 ;
<   unsigned short *tmp___39 ;
<   void *__gu_p___55 ;
<   unsigned short *tmp___40 ;
<   void *__gu_p___56 ;
<   void *__gu_p___57 ;
<   unsigned short *tmp___41 ;
<   void *__gu_p___58 ;
<   unsigned short *tmp___42 ;
<   void *__gu_p___59 ;
<   void *__gu_p___60 ;
<   unsigned short *tmp___43 ;
<   void *__gu_p___61 ;
<   unsigned short *tmp___44 ;
<   void *__gu_p___62 ;
<   void *__gu_p___63 ;
<   unsigned short *tmp___45 ;
<   void *__gu_p___64 ;
<   unsigned short *tmp___46 ;
<   void *__gu_p___65 ;
<   unsigned short *tmp___47 ;
<   void *__gu_p___66 ;
<   unsigned short *tmp___48 ;
<   void *__gu_p___67 ;
<   unsigned short *tmp___49 ;
<   void *__gu_p___68 ;
<   unsigned short *tmp___50 ;
<   void *__gu_p___69 ;
<   unsigned short *tmp___51 ;
<   void *__gu_p___70 ;
<   unsigned short *tmp___52 ;
<   void *__gu_p___71 ;
<   unsigned short *tmp___53 ;
<   void *__gu_p___72 ;
<   unsigned short *tmp___54 ;
<   void *__gu_p___73 ;
<   unsigned short *tmp___55 ;
<   void *__gu_p___74 ;
<   unsigned short *tmp___56 ;
<   void *__gu_p___75 ;
<   unsigned short *tmp___57 ;
<   void *__gu_p___76 ;
<   unsigned short *tmp___58 ;
---
> #line 237 "include/linux/drbd_genl.h"
> __inline static int timeout_parms_to_priv_skb(struct sk_buff *skb , struct timeout_parms *s ) 
> { 
>   int tmp ;
53413,53445c51329,51503
< #line 41
<   tmp = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p = (void *)tmp;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p) = 8U;
< #line 41
<   goto ldv_52849;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(57352, __gu_p);
< #line 41
<   goto ldv_52849;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(57352U, __gu_p);
< #line 41
<   goto ldv_52849;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(57352ULL, __gu_p);
< #line 41
<   goto ldv_52849;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_52849;
---
> #line 235
>   tmp = timeout_parms_to_skb(skb, s, 0);
> #line 235
>   return (tmp);
> }
> }
> #line 135
> static void set_disk_conf_defaults(struct disk_conf *x ) ;
> #line 135 "include/linux/drbd_genl.h"
> static void set_disk_conf_defaults(struct disk_conf *x ) 
> { 
> 
> 
>   {
> #line 104
>   x->on_io_error = 2U;
> #line 104
>   x->fencing = 0U;
> #line 104
>   x->resync_rate = 250U;
> #line 104
>   x->resync_after = -1;
> #line 104
>   x->al_extents = 1237U;
> #line 104
>   x->c_plan_ahead = 20U;
> #line 104
>   x->c_delay_target = 10U;
> #line 104
>   x->c_fill_target = 100U;
> #line 104
>   x->c_max_rate = 102400U;
> #line 104
>   x->c_min_rate = 250U;
> #line 104
>   x->disk_barrier = 0;
> #line 104
>   x->disk_flushes = 1;
> #line 104
>   x->disk_drain = 1;
> #line 104
>   x->md_flushes = 1;
> #line 104
>   x->disk_timeout = 0U;
> #line 104
>   x->read_balancing = 0U;
> #line 104
>   x->al_updates = 1;
> #line 105
>   return;
> }
> }
> #line 140
> static void set_res_opts_defaults(struct res_opts *x ) ;
> #line 140 "include/linux/drbd_genl.h"
> static void set_res_opts_defaults(struct res_opts *x ) 
> { 
> 
> 
>   {
> #line 137
>   memset((void *)(& x->cpu_mask), 0, 32UL);
> #line 137
>   x->cpu_mask_len = 0U;
> #line 137
>   x->on_no_data = 0U;
> #line 138
>   return;
> }
> }
> #line 174
> static void set_net_conf_defaults(struct net_conf *x ) ;
> #line 174 "include/linux/drbd_genl.h"
> static void set_net_conf_defaults(struct net_conf *x ) 
> { 
> 
> 
>   {
> #line 142
>   memset((void *)(& x->shared_secret), 0, 64UL);
> #line 142
>   x->shared_secret_len = 0U;
> #line 142
>   memset((void *)(& x->cram_hmac_alg), 0, 64UL);
> #line 142
>   x->cram_hmac_alg_len = 0U;
> #line 142
>   memset((void *)(& x->integrity_alg), 0, 64UL);
> #line 142
>   x->integrity_alg_len = 0U;
> #line 142
>   memset((void *)(& x->verify_alg), 0, 64UL);
> #line 142
>   x->verify_alg_len = 0U;
> #line 142
>   memset((void *)(& x->csums_alg), 0, 64UL);
> #line 142
>   x->csums_alg_len = 0U;
> #line 142
>   x->wire_protocol = 3U;
> #line 142
>   x->connect_int = 10U;
> #line 142
>   x->timeout = 60U;
> #line 142
>   x->ping_int = 10U;
> #line 142
>   x->ping_timeo = 5U;
> #line 142
>   x->sndbuf_size = 0U;
> #line 142
>   x->rcvbuf_size = 0U;
> #line 142
>   x->ko_count = 7U;
> #line 142
>   x->max_buffers = 2048U;
> #line 142
>   x->max_epoch_size = 2048U;
> #line 142
>   x->unplug_watermark = 128U;
> #line 142
>   x->after_sb_0p = 0U;
> #line 142
>   x->after_sb_1p = 0U;
> #line 142
>   x->after_sb_2p = 0U;
> #line 142
>   x->rr_conflict = 0U;
> #line 142
>   x->on_congestion = 0U;
> #line 142
>   x->cong_fill = 0U;
> #line 142
>   x->cong_extents = 1237U;
> #line 142
>   x->two_primaries = 0;
> #line 142
>   x->tcp_cork = 1;
> #line 142
>   x->always_asbp = 0;
> #line 142
>   x->use_rle = 1;
> #line 143
>   return;
> }
> }
> #line 89 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> static char *drbd_m_holder  =    (char *)"Hands off! this is DRBD\'s meta data device.";
> #line 114 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> static struct drbd_config_context adm_ctx  ;
> #line 116 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> static void drbd_adm_send_reply(struct sk_buff *skb , struct genl_info *info ) 
> { 
>   struct nlmsghdr *tmp ;
>   void *tmp___0 ;
>   void *tmp___1 ;
>   int tmp___2 ;
> 
>   {
> #line 118
>   tmp = nlmsg_hdr((struct sk_buff  const  *)skb);
> #line 118
>   tmp___0 = nlmsg_data((struct nlmsghdr  const  *)tmp);
> #line 118
>   tmp___1 = genlmsg_data((struct genlmsghdr  const  *)tmp___0);
> #line 118
>   genlmsg_end(skb, tmp___1);
> #line 119
>   tmp___2 = genlmsg_reply(skb, info);
> #line 119
>   if (tmp___2 != 0) {
> #line 120
>     printk("\vdrbd: error sending genl reply\n");
>   } else {
> 
53447,53480c51505,51526
<   ldv_52849: 
< #line 41
<   tmp___0 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___0 = (void *)tmp___0;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___0) = (unsigned char )arg->my_addr_len;
< #line 41
<   goto ldv_52856;
<   case 2UL: 
< #line 41
<   put_unaligned_le16((int )((unsigned short )arg->my_addr_len), __gu_p___0);
< #line 41
<   goto ldv_52856;
<   case 4UL: 
< #line 41
<   put_unaligned_le32((unsigned int )arg->my_addr_len, __gu_p___0);
< #line 41
<   goto ldv_52856;
<   case 8UL: 
< #line 41
<   put_unaligned_le64((unsigned long long )arg->my_addr_len, __gu_p___0);
< #line 41
<   goto ldv_52856;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_52856;
---
> #line 121
>   return;
> }
> }
> #line 125 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_msg_put_info(char const   *info ) 
> { 
>   struct sk_buff *skb ;
>   struct nlattr *nla ;
>   int err ;
> 
>   {
> #line 127
>   skb = adm_ctx.reply_skb;
> #line 129
>   err = -90;
> #line 131
>   if ((unsigned long )info == (unsigned long )((char const   *)0) || (int )((signed char )*info) == 0) {
> #line 132
>     return (0);
>   } else {
> 
53482,53521c51528,51535
<   ldv_52856: 
< #line 41
<   __len = (size_t )arg->my_addr_len;
< #line 41
<   __ret = __builtin_memcpy((void *)tags, (void const   *)(& arg->my_addr), __len);
< #line 41
<   tags = tags + (unsigned long )arg->my_addr_len;
< #line 41
<   tmp___1 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___1 = (void *)tmp___1;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___1) = 9U;
< #line 41
<   goto ldv_52866;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(57353, __gu_p___1);
< #line 41
<   goto ldv_52866;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(57353U, __gu_p___1);
< #line 41
<   goto ldv_52866;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(57353ULL, __gu_p___1);
< #line 41
<   goto ldv_52866;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_52866;
---
> #line 134
>   nla = nla_nest_start(skb, 1);
> #line 135
>   if ((unsigned long )nla == (unsigned long )((struct nlattr *)0)) {
> #line 136
>     return (err);
>   } else {
> 
53523,53556c51537,51547
<   ldv_52866: 
< #line 41
<   tmp___2 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___2 = (void *)tmp___2;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___2) = (unsigned char )arg->peer_addr_len;
< #line 41
<   goto ldv_52873;
<   case 2UL: 
< #line 41
<   put_unaligned_le16((int )((unsigned short )arg->peer_addr_len), __gu_p___2);
< #line 41
<   goto ldv_52873;
<   case 4UL: 
< #line 41
<   put_unaligned_le32((unsigned int )arg->peer_addr_len, __gu_p___2);
< #line 41
<   goto ldv_52873;
<   case 8UL: 
< #line 41
<   put_unaligned_le64((unsigned long long )arg->peer_addr_len, __gu_p___2);
< #line 41
<   goto ldv_52873;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_52873;
---
> #line 138
>   err = nla_put_string(skb, 16385, info);
> #line 139
>   if (err != 0) {
> #line 140
>     nla_nest_cancel(skb, nla);
> #line 141
>     return (err);
>   } else {
> #line 143
>     nla_nest_end(skb, nla);
53558,53597c51549,51598
<   ldv_52873: 
< #line 41
<   __len___0 = (size_t )arg->peer_addr_len;
< #line 41
<   __ret___0 = __builtin_memcpy((void *)tags, (void const   *)(& arg->peer_addr), __len___0);
< #line 41
<   tags = tags + (unsigned long )arg->peer_addr_len;
< #line 41
<   tmp___3 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___3 = (void *)tmp___3;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___3) = 10U;
< #line 41
<   goto ldv_52883;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(49162, __gu_p___3);
< #line 41
<   goto ldv_52883;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(49162U, __gu_p___3);
< #line 41
<   goto ldv_52883;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(49162ULL, __gu_p___3);
< #line 41
<   goto ldv_52883;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_52883;
---
> #line 144
>   return (0);
> }
> }
> #line 155 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> static int drbd_adm_prepare(struct sk_buff *skb , struct genl_info *info , unsigned int flags ) 
> { 
>   struct drbd_genlmsghdr *d_in ;
>   u8 cmd ;
>   int err ;
>   bool tmp ;
>   int tmp___0 ;
>   void *tmp___1 ;
>   struct nlattr *nla ;
>   void *tmp___2 ;
>   int tmp___3 ;
>   int tmp___4 ;
>   int tmp___5 ;
>   void *tmp___6 ;
>   int tmp___7 ;
>   void *tmp___8 ;
> 
>   {
> #line 158
>   d_in = (struct drbd_genlmsghdr *)info->userhdr;
> #line 159
>   cmd = (info->genlhdr)->cmd;
> #line 162
>   memset((void *)(& adm_ctx), 0, 64UL);
> #line 165
>   if ((unsigned int )cmd != 2U) {
> #line 165
>     tmp = capable(12);
> #line 165
>     if (tmp) {
> #line 165
>       tmp___0 = 0;
>     } else {
> #line 165
>       tmp___0 = 1;
>     }
> #line 165
>     if (tmp___0) {
> #line 166
>       return (-1);
>     } else {
> 
>     }
>   } else {
> 
53599,53632c51600,51609
<   ldv_52883: 
< #line 41
<   tmp___4 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___4 = (void *)tmp___4;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___4) = (unsigned char )arg->shared_secret_len;
< #line 41
<   goto ldv_52890;
<   case 2UL: 
< #line 41
<   put_unaligned_le16((int )((unsigned short )arg->shared_secret_len), __gu_p___4);
< #line 41
<   goto ldv_52890;
<   case 4UL: 
< #line 41
<   put_unaligned_le32((unsigned int )arg->shared_secret_len, __gu_p___4);
< #line 41
<   goto ldv_52890;
<   case 8UL: 
< #line 41
<   put_unaligned_le64((unsigned long long )arg->shared_secret_len, __gu_p___4);
< #line 41
<   goto ldv_52890;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_52890;
---
> #line 168
>   adm_ctx.reply_skb = genlmsg_new(3776UL, 208U);
> #line 169
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 170
>     err = -12;
> #line 171
>     goto fail;
>   } else {
> 
53634,53674c51611,51622
<   ldv_52890: 
< #line 41
<   __len___1 = (size_t )arg->shared_secret_len;
< #line 41
<   __ret___1 = __builtin_memcpy((void *)tags, (void const   *)(& arg->shared_secret),
<                                __len___1);
< #line 41
<   tags = tags + (unsigned long )arg->shared_secret_len;
< #line 41
<   tmp___5 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___5 = (void *)tmp___5;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___5) = 11U;
< #line 41
<   goto ldv_52900;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(49163, __gu_p___5);
< #line 41
<   goto ldv_52900;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(49163U, __gu_p___5);
< #line 41
<   goto ldv_52900;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(49163ULL, __gu_p___5);
< #line 41
<   goto ldv_52900;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_52900;
---
> #line 174
>   tmp___1 = genlmsg_put_reply(adm_ctx.reply_skb, info, & drbd_genl_family, 0, (int )cmd);
> #line 174
>   adm_ctx.reply_dh = (struct drbd_genlmsghdr *)tmp___1;
> #line 178
>   if ((unsigned long )adm_ctx.reply_dh == (unsigned long )((struct drbd_genlmsghdr *)0)) {
> #line 179
>     err = -12;
> #line 180
>     goto fail;
>   } else {
> 
53676,53709c51624,51708
<   ldv_52900: 
< #line 41
<   tmp___6 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___6 = (void *)tmp___6;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___6) = (unsigned char )arg->cram_hmac_alg_len;
< #line 41
<   goto ldv_52907;
<   case 2UL: 
< #line 41
<   put_unaligned_le16((int )((unsigned short )arg->cram_hmac_alg_len), __gu_p___6);
< #line 41
<   goto ldv_52907;
<   case 4UL: 
< #line 41
<   put_unaligned_le32((unsigned int )arg->cram_hmac_alg_len, __gu_p___6);
< #line 41
<   goto ldv_52907;
<   case 8UL: 
< #line 41
<   put_unaligned_le64((unsigned long long )arg->cram_hmac_alg_len, __gu_p___6);
< #line 41
<   goto ldv_52907;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_52907;
---
> #line 183
>   (adm_ctx.reply_dh)->minor = d_in->minor;
> #line 184
>   (adm_ctx.reply_dh)->ldv_49550.ret_code = 101;
> #line 186
>   adm_ctx.volume = 4294967295U;
> #line 187
>   if ((unsigned long )*(info->attrs + 2UL) != (unsigned long )((struct nlattr *)0)) {
> #line 190
>     err = drbd_cfg_context_from_attrs(0, info);
> #line 191
>     if (err != 0) {
> #line 192
>       goto fail;
>     } else {
> 
>     }
> #line 196
>     err = nla_put_nohdr(adm_ctx.reply_skb, (int )(*(info->attrs + 2UL))->nla_len,
>                         (void const   *)*(info->attrs + 2UL));
> #line 199
>     if (err != 0) {
> #line 200
>       goto fail;
>     } else {
> 
>     }
> #line 203
>     nla = nested_attr_tb[1];
> #line 204
>     if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 205
>       adm_ctx.volume = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
> #line 206
>     nla = nested_attr_tb[2];
> #line 207
>     if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 208
>       tmp___2 = nla_data((struct nlattr  const  *)nla);
> #line 208
>       adm_ctx.resource_name = (char *)tmp___2;
>     } else {
> 
>     }
> #line 209
>     adm_ctx.my_addr = nested_attr_tb[3];
> #line 210
>     adm_ctx.peer_addr = nested_attr_tb[4];
> #line 211
>     if ((unsigned long )adm_ctx.my_addr != (unsigned long )((struct nlattr *)0)) {
> #line 211
>       tmp___3 = nla_len((struct nlattr  const  *)adm_ctx.my_addr);
> #line 211
>       if ((unsigned int )tmp___3 > 128U) {
> #line 215
>         err = -22;
> #line 216
>         goto fail;
>       } else {
> #line 211
>         goto _L;
>       }
>     } else
>     _L: /* CIL Label */ 
> #line 211
>     if ((unsigned long )adm_ctx.peer_addr != (unsigned long )((struct nlattr *)0)) {
> #line 211
>       tmp___4 = nla_len((struct nlattr  const  *)adm_ctx.peer_addr);
> #line 211
>       if ((unsigned int )tmp___4 > 128U) {
> #line 215
>         err = -22;
> #line 216
>         goto fail;
>       } else {
> 
>       }
>     } else {
> 
>     }
>   } else {
> 
53711,53751c51710,51723
<   ldv_52907: 
< #line 41
<   __len___2 = (size_t )arg->cram_hmac_alg_len;
< #line 41
<   __ret___2 = __builtin_memcpy((void *)tags, (void const   *)(& arg->cram_hmac_alg),
<                                __len___2);
< #line 41
<   tags = tags + (unsigned long )arg->cram_hmac_alg_len;
< #line 41
<   tmp___7 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___7 = (void *)tmp___7;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___7) = 44U;
< #line 41
<   goto ldv_52917;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(49196, __gu_p___7);
< #line 41
<   goto ldv_52917;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(49196U, __gu_p___7);
< #line 41
<   goto ldv_52917;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(49196ULL, __gu_p___7);
< #line 41
<   goto ldv_52917;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_52917;
---
> #line 220
>   adm_ctx.minor = d_in->minor;
> #line 221
>   adm_ctx.mdev = minor_to_mdev(d_in->minor);
> #line 222
>   adm_ctx.tconn = conn_get_by_name((char const   *)adm_ctx.resource_name);
> #line 224
>   if ((unsigned long )adm_ctx.mdev == (unsigned long )((struct drbd_conf *)0) && (int )flags & 1) {
> #line 225
>     drbd_msg_put_info("unknown minor");
> #line 226
>     return (127);
>   } else {
> 
53753,53786c51725,51732
<   ldv_52917: 
< #line 41
<   tmp___8 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___8 = (void *)tmp___8;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___8) = (unsigned char )arg->integrity_alg_len;
< #line 41
<   goto ldv_52924;
<   case 2UL: 
< #line 41
<   put_unaligned_le16((int )((unsigned short )arg->integrity_alg_len), __gu_p___8);
< #line 41
<   goto ldv_52924;
<   case 4UL: 
< #line 41
<   put_unaligned_le32((unsigned int )arg->integrity_alg_len, __gu_p___8);
< #line 41
<   goto ldv_52924;
<   case 8UL: 
< #line 41
<   put_unaligned_le64((unsigned long long )arg->integrity_alg_len, __gu_p___8);
< #line 41
<   goto ldv_52924;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_52924;
---
> #line 228
>   if ((unsigned long )adm_ctx.tconn == (unsigned long )((struct drbd_tconn *)0) && (flags & 2U) != 0U) {
> #line 229
>     drbd_msg_put_info("unknown resource");
> #line 230
>     return (162);
>   } else {
> 
53788,53828c51734,51779
<   ldv_52924: 
< #line 41
<   __len___3 = (size_t )arg->integrity_alg_len;
< #line 41
<   __ret___3 = __builtin_memcpy((void *)tags, (void const   *)(& arg->integrity_alg),
<                                __len___3);
< #line 41
<   tags = tags + (unsigned long )arg->integrity_alg_len;
< #line 41
<   tmp___9 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___9 = (void *)tmp___9;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___9) = 14U;
< #line 41
<   goto ldv_52934;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(14, __gu_p___9);
< #line 41
<   goto ldv_52934;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(14U, __gu_p___9);
< #line 41
<   goto ldv_52934;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(14ULL, __gu_p___9);
< #line 41
<   goto ldv_52934;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_52934;
---
> #line 233
>   if ((flags & 4U) != 0U) {
> #line 234
>     if ((unsigned long )adm_ctx.tconn != (unsigned long )((struct drbd_tconn *)0) && (flags & 2U) == 0U) {
> #line 235
>       drbd_msg_put_info("no resource name expected");
> #line 236
>       return (162);
>     } else {
> 
>     }
> #line 238
>     if ((unsigned long )adm_ctx.mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 239
>       drbd_msg_put_info("no minor number expected");
> #line 240
>       return (162);
>     } else {
> 
>     }
> #line 242
>     if ((unsigned long )adm_ctx.my_addr != (unsigned long )((struct nlattr *)0) && (unsigned long )adm_ctx.peer_addr != (unsigned long )((struct nlattr *)0)) {
> #line 243
>       tmp___5 = nla_len((struct nlattr  const  *)adm_ctx.peer_addr);
> #line 243
>       tmp___6 = nla_data((struct nlattr  const  *)adm_ctx.peer_addr);
> #line 243
>       tmp___7 = nla_len((struct nlattr  const  *)adm_ctx.my_addr);
> #line 243
>       tmp___8 = nla_data((struct nlattr  const  *)adm_ctx.my_addr);
> #line 243
>       adm_ctx.tconn = conn_get_by_addrs(tmp___8, tmp___7, tmp___6, tmp___5);
>     } else {
> 
>     }
> #line 247
>     if ((unsigned long )adm_ctx.tconn == (unsigned long )((struct drbd_tconn *)0)) {
> #line 248
>       drbd_msg_put_info("unknown connection");
> #line 249
>       return (162);
>     } else {
> 
>     }
>   } else {
> 
53830,53863c51781,51791
<   ldv_52934: 
< #line 41
<   tmp___10 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___10 = (void *)tmp___10;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___10) = 4U;
< #line 41
<   goto ldv_52941;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(4, __gu_p___10);
< #line 41
<   goto ldv_52941;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(4U, __gu_p___10);
< #line 41
<   goto ldv_52941;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(4ULL, __gu_p___10);
< #line 41
<   goto ldv_52941;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_52941;
---
> #line 254
>   if (((unsigned long )adm_ctx.mdev != (unsigned long )((struct drbd_conf *)0) && (unsigned long )adm_ctx.tconn != (unsigned long )((struct drbd_tconn *)0)) && (unsigned long )(adm_ctx.mdev)->tconn != (unsigned long )adm_ctx.tconn) {
> #line 256
>     printk("\frequest: minor=%u, resource=%s; but that minor belongs to connection %s\n",
>            adm_ctx.minor, adm_ctx.resource_name, ((adm_ctx.mdev)->tconn)->name);
> #line 259
>     drbd_msg_put_info("minor exists in different resource");
> #line 260
>     return (162);
>   } else {
> 
53865,53894c51793,51803
<   ldv_52941: 
< #line 41
<   __gu_p___11 = (void *)tags;
< #line 41
<   switch (4UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___11) = (unsigned char )arg->timeout;
< #line 41
<   goto ldv_52948;
<   case 2UL: 
< #line 41
<   put_unaligned_le16((int )((unsigned short )arg->timeout), __gu_p___11);
< #line 41
<   goto ldv_52948;
<   case 4UL: 
< #line 41
<   put_unaligned_le32((unsigned int )arg->timeout, __gu_p___11);
< #line 41
<   goto ldv_52948;
<   case 8UL: 
< #line 41
<   put_unaligned_le64((unsigned long long )arg->timeout, __gu_p___11);
< #line 41
<   goto ldv_52948;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_52948;
---
> #line 262
>   if (((unsigned long )adm_ctx.mdev != (unsigned long )((struct drbd_conf *)0) && adm_ctx.volume != 4294967295U) && adm_ctx.volume != (unsigned int )(adm_ctx.mdev)->vnr) {
> #line 265
>     printk("\frequest: minor=%u, volume=%u; but that minor is volume %u in %s\n",
>            adm_ctx.minor, adm_ctx.volume, (adm_ctx.mdev)->vnr, ((adm_ctx.mdev)->tconn)->name);
> #line 268
>     drbd_msg_put_info("minor exists as different volume");
> #line 269
>     return (162);
>   } else {
> 
53896,53931c51805,51829
<   ldv_52948: 
< #line 41
<   tags = tags + 4U;
< #line 41
<   tmp___11 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___12 = (void *)tmp___11;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___12) = 15U;
< #line 41
<   goto ldv_52955;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(8207, __gu_p___12);
< #line 41
<   goto ldv_52955;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(8207U, __gu_p___12);
< #line 41
<   goto ldv_52955;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(8207ULL, __gu_p___12);
< #line 41
<   goto ldv_52955;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_52955;
---
> #line 272
>   return (101);
>   fail: 
> #line 275
>   nlmsg_free(adm_ctx.reply_skb);
> #line 276
>   adm_ctx.reply_skb = 0;
> #line 277
>   return (err);
> }
> }
> #line 280 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> static int drbd_adm_finish(struct genl_info *info , int retcode ) 
> { 
> 
> 
>   {
> #line 282
>   if ((unsigned long )adm_ctx.tconn != (unsigned long )((struct drbd_tconn *)0)) {
> #line 283
>     kref_put(& (adm_ctx.tconn)->kref, & conn_destroy);
> #line 284
>     adm_ctx.tconn = 0;
>   } else {
> 
53933,53966c51831,51836
<   ldv_52955: 
< #line 41
<   tmp___12 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___13 = (void *)tmp___12;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___13) = 4U;
< #line 41
<   goto ldv_52962;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(4, __gu_p___13);
< #line 41
<   goto ldv_52962;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(4U, __gu_p___13);
< #line 41
<   goto ldv_52962;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(4ULL, __gu_p___13);
< #line 41
<   goto ldv_52962;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_52962;
---
> #line 287
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 288
>     return (-12);
>   } else {
> 
53968,53997c51838,51857
<   ldv_52962: 
< #line 41
<   __gu_p___14 = (void *)tags;
< #line 41
<   switch (4UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___14) = (unsigned char )arg->wire_protocol;
< #line 41
<   goto ldv_52969;
<   case 2UL: 
< #line 41
<   put_unaligned_le16((int )((unsigned short )arg->wire_protocol), __gu_p___14);
< #line 41
<   goto ldv_52969;
<   case 4UL: 
< #line 41
<   put_unaligned_le32((unsigned int )arg->wire_protocol, __gu_p___14);
< #line 41
<   goto ldv_52969;
<   case 8UL: 
< #line 41
<   put_unaligned_le64((unsigned long long )arg->wire_protocol, __gu_p___14);
< #line 41
<   goto ldv_52969;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_52969;
---
> #line 290
>   (adm_ctx.reply_dh)->ldv_49550.ret_code = retcode;
> #line 291
>   drbd_adm_send_reply(adm_ctx.reply_skb, info);
> #line 292
>   return (0);
> }
> }
> #line 295 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> static void setup_khelper_env(struct drbd_tconn *tconn , char **envp ) 
> { 
>   char *afs ;
> 
>   {
> #line 300
>   if (tconn->my_addr_len == 0 || tconn->peer_addr_len == 0) {
> #line 301
>     return;
>   } else {
> 
53999,54029c51859,51874
<   ldv_52969: 
< #line 41
<   tags = tags + 4U;
< #line 41
<   tmp___13 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___15 = (void *)tmp___13;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___15) = 16U;
< #line 41
<   goto ldv_52976;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(16, __gu_p___15);
< #line 41
<   goto ldv_52976;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(16U, __gu_p___15);
< #line 41
<   goto ldv_52976;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(16ULL, __gu_p___15);
< #line 41
<   goto ldv_52976;
---
> #line 303
>   switch ((int )((struct sockaddr *)(& tconn->peer_addr))->sa_family) {
>   case 10: 
> #line 305
>   afs = (char *)"ipv6";
> #line 306
>   snprintf(*(envp + 4UL), 60UL, "DRBD_PEER_ADDRESS=%pI6", & ((struct sockaddr_in6 *)(& tconn->peer_addr))->sin6_addr);
> #line 308
>   goto ldv_52883;
>   case 2: 
> #line 310
>   afs = (char *)"ipv4";
> #line 311
>   snprintf(*(envp + 4UL), 60UL, "DRBD_PEER_ADDRESS=%pI4", & ((struct sockaddr_in *)(& tconn->peer_addr))->sin_addr);
> #line 313
>   goto ldv_52883;
54031,54034c51876,51879
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_52976;
---
> #line 315
>   afs = (char *)"ssocks";
> #line 316
>   snprintf(*(envp + 4UL), 60UL, "DRBD_PEER_ADDRESS=%pI4", & ((struct sockaddr_in *)(& tconn->peer_addr))->sin_addr);
54036,57599c51881,51885
<   ldv_52976: 
< #line 41
<   tmp___14 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___16 = (void *)tmp___14;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___16) = 4U;
< #line 41
<   goto ldv_52983;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(4, __gu_p___16);
< #line 41
<   goto ldv_52983;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(4U, __gu_p___16);
< #line 41
<   goto ldv_52983;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(4ULL, __gu_p___16);
< #line 41
<   goto ldv_52983;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_52983;
<   }
<   ldv_52983: 
< #line 41
<   __gu_p___17 = (void *)tags;
< #line 41
<   switch (4UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___17) = (unsigned char )arg->try_connect_int;
< #line 41
<   goto ldv_52990;
<   case 2UL: 
< #line 41
<   put_unaligned_le16((int )((unsigned short )arg->try_connect_int), __gu_p___17);
< #line 41
<   goto ldv_52990;
<   case 4UL: 
< #line 41
<   put_unaligned_le32((unsigned int )arg->try_connect_int, __gu_p___17);
< #line 41
<   goto ldv_52990;
<   case 8UL: 
< #line 41
<   put_unaligned_le64((unsigned long long )arg->try_connect_int, __gu_p___17);
< #line 41
<   goto ldv_52990;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_52990;
<   }
<   ldv_52990: 
< #line 41
<   tags = tags + 4U;
< #line 41
<   tmp___15 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___18 = (void *)tmp___15;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___18) = 17U;
< #line 41
<   goto ldv_52997;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(17, __gu_p___18);
< #line 41
<   goto ldv_52997;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(17U, __gu_p___18);
< #line 41
<   goto ldv_52997;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(17ULL, __gu_p___18);
< #line 41
<   goto ldv_52997;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_52997;
<   }
<   ldv_52997: 
< #line 41
<   tmp___16 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___19 = (void *)tmp___16;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___19) = 4U;
< #line 41
<   goto ldv_53004;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(4, __gu_p___19);
< #line 41
<   goto ldv_53004;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(4U, __gu_p___19);
< #line 41
<   goto ldv_53004;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(4ULL, __gu_p___19);
< #line 41
<   goto ldv_53004;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53004;
<   }
<   ldv_53004: 
< #line 41
<   __gu_p___20 = (void *)tags;
< #line 41
<   switch (4UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___20) = (unsigned char )arg->ping_int;
< #line 41
<   goto ldv_53011;
<   case 2UL: 
< #line 41
<   put_unaligned_le16((int )((unsigned short )arg->ping_int), __gu_p___20);
< #line 41
<   goto ldv_53011;
<   case 4UL: 
< #line 41
<   put_unaligned_le32((unsigned int )arg->ping_int, __gu_p___20);
< #line 41
<   goto ldv_53011;
<   case 8UL: 
< #line 41
<   put_unaligned_le64((unsigned long long )arg->ping_int, __gu_p___20);
< #line 41
<   goto ldv_53011;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53011;
<   }
<   ldv_53011: 
< #line 41
<   tags = tags + 4U;
< #line 41
<   tmp___17 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___21 = (void *)tmp___17;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___21) = 18U;
< #line 41
<   goto ldv_53018;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(18, __gu_p___21);
< #line 41
<   goto ldv_53018;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(18U, __gu_p___21);
< #line 41
<   goto ldv_53018;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(18ULL, __gu_p___21);
< #line 41
<   goto ldv_53018;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53018;
<   }
<   ldv_53018: 
< #line 41
<   tmp___18 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___22 = (void *)tmp___18;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___22) = 4U;
< #line 41
<   goto ldv_53025;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(4, __gu_p___22);
< #line 41
<   goto ldv_53025;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(4U, __gu_p___22);
< #line 41
<   goto ldv_53025;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(4ULL, __gu_p___22);
< #line 41
<   goto ldv_53025;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53025;
<   }
<   ldv_53025: 
< #line 41
<   __gu_p___23 = (void *)tags;
< #line 41
<   switch (4UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___23) = (unsigned char )arg->max_epoch_size;
< #line 41
<   goto ldv_53032;
<   case 2UL: 
< #line 41
<   put_unaligned_le16((int )((unsigned short )arg->max_epoch_size), __gu_p___23);
< #line 41
<   goto ldv_53032;
<   case 4UL: 
< #line 41
<   put_unaligned_le32((unsigned int )arg->max_epoch_size, __gu_p___23);
< #line 41
<   goto ldv_53032;
<   case 8UL: 
< #line 41
<   put_unaligned_le64((unsigned long long )arg->max_epoch_size, __gu_p___23);
< #line 41
<   goto ldv_53032;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53032;
<   }
<   ldv_53032: 
< #line 41
<   tags = tags + 4U;
< #line 41
<   tmp___19 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___24 = (void *)tmp___19;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___24) = 19U;
< #line 41
<   goto ldv_53039;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(19, __gu_p___24);
< #line 41
<   goto ldv_53039;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(19U, __gu_p___24);
< #line 41
<   goto ldv_53039;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(19ULL, __gu_p___24);
< #line 41
<   goto ldv_53039;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53039;
<   }
<   ldv_53039: 
< #line 41
<   tmp___20 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___25 = (void *)tmp___20;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___25) = 4U;
< #line 41
<   goto ldv_53046;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(4, __gu_p___25);
< #line 41
<   goto ldv_53046;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(4U, __gu_p___25);
< #line 41
<   goto ldv_53046;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(4ULL, __gu_p___25);
< #line 41
<   goto ldv_53046;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53046;
<   }
<   ldv_53046: 
< #line 41
<   __gu_p___26 = (void *)tags;
< #line 41
<   switch (4UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___26) = (unsigned char )arg->max_buffers;
< #line 41
<   goto ldv_53053;
<   case 2UL: 
< #line 41
<   put_unaligned_le16((int )((unsigned short )arg->max_buffers), __gu_p___26);
< #line 41
<   goto ldv_53053;
<   case 4UL: 
< #line 41
<   put_unaligned_le32((unsigned int )arg->max_buffers, __gu_p___26);
< #line 41
<   goto ldv_53053;
<   case 8UL: 
< #line 41
<   put_unaligned_le64((unsigned long long )arg->max_buffers, __gu_p___26);
< #line 41
<   goto ldv_53053;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53053;
<   }
<   ldv_53053: 
< #line 41
<   tags = tags + 4U;
< #line 41
<   tmp___21 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___27 = (void *)tmp___21;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___27) = 20U;
< #line 41
<   goto ldv_53060;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(20, __gu_p___27);
< #line 41
<   goto ldv_53060;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(20U, __gu_p___27);
< #line 41
<   goto ldv_53060;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(20ULL, __gu_p___27);
< #line 41
<   goto ldv_53060;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53060;
<   }
<   ldv_53060: 
< #line 41
<   tmp___22 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___28 = (void *)tmp___22;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___28) = 4U;
< #line 41
<   goto ldv_53067;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(4, __gu_p___28);
< #line 41
<   goto ldv_53067;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(4U, __gu_p___28);
< #line 41
<   goto ldv_53067;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(4ULL, __gu_p___28);
< #line 41
<   goto ldv_53067;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53067;
<   }
<   ldv_53067: 
< #line 41
<   __gu_p___29 = (void *)tags;
< #line 41
<   switch (4UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___29) = (unsigned char )arg->unplug_watermark;
< #line 41
<   goto ldv_53074;
<   case 2UL: 
< #line 41
<   put_unaligned_le16((int )((unsigned short )arg->unplug_watermark), __gu_p___29);
< #line 41
<   goto ldv_53074;
<   case 4UL: 
< #line 41
<   put_unaligned_le32((unsigned int )arg->unplug_watermark, __gu_p___29);
< #line 41
<   goto ldv_53074;
<   case 8UL: 
< #line 41
<   put_unaligned_le64((unsigned long long )arg->unplug_watermark, __gu_p___29);
< #line 41
<   goto ldv_53074;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53074;
<   }
<   ldv_53074: 
< #line 41
<   tags = tags + 4U;
< #line 41
<   tmp___23 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___30 = (void *)tmp___23;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___30) = 21U;
< #line 41
<   goto ldv_53081;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(21, __gu_p___30);
< #line 41
<   goto ldv_53081;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(21U, __gu_p___30);
< #line 41
<   goto ldv_53081;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(21ULL, __gu_p___30);
< #line 41
<   goto ldv_53081;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53081;
<   }
<   ldv_53081: 
< #line 41
<   tmp___24 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___31 = (void *)tmp___24;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___31) = 4U;
< #line 41
<   goto ldv_53088;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(4, __gu_p___31);
< #line 41
<   goto ldv_53088;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(4U, __gu_p___31);
< #line 41
<   goto ldv_53088;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(4ULL, __gu_p___31);
< #line 41
<   goto ldv_53088;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53088;
<   }
<   ldv_53088: 
< #line 41
<   __gu_p___32 = (void *)tags;
< #line 41
<   switch (4UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___32) = (unsigned char )arg->sndbuf_size;
< #line 41
<   goto ldv_53095;
<   case 2UL: 
< #line 41
<   put_unaligned_le16((int )((unsigned short )arg->sndbuf_size), __gu_p___32);
< #line 41
<   goto ldv_53095;
<   case 4UL: 
< #line 41
<   put_unaligned_le32((unsigned int )arg->sndbuf_size, __gu_p___32);
< #line 41
<   goto ldv_53095;
<   case 8UL: 
< #line 41
<   put_unaligned_le64((unsigned long long )arg->sndbuf_size, __gu_p___32);
< #line 41
<   goto ldv_53095;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53095;
<   }
<   ldv_53095: 
< #line 41
<   tags = tags + 4U;
< #line 41
<   tmp___25 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___33 = (void *)tmp___25;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___33) = 22U;
< #line 41
<   goto ldv_53102;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(22, __gu_p___33);
< #line 41
<   goto ldv_53102;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(22U, __gu_p___33);
< #line 41
<   goto ldv_53102;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(22ULL, __gu_p___33);
< #line 41
<   goto ldv_53102;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53102;
<   }
<   ldv_53102: 
< #line 41
<   tmp___26 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___34 = (void *)tmp___26;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___34) = 4U;
< #line 41
<   goto ldv_53109;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(4, __gu_p___34);
< #line 41
<   goto ldv_53109;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(4U, __gu_p___34);
< #line 41
<   goto ldv_53109;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(4ULL, __gu_p___34);
< #line 41
<   goto ldv_53109;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53109;
<   }
<   ldv_53109: 
< #line 41
<   __gu_p___35 = (void *)tags;
< #line 41
<   switch (4UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___35) = (unsigned char )arg->ko_count;
< #line 41
<   goto ldv_53116;
<   case 2UL: 
< #line 41
<   put_unaligned_le16((int )((unsigned short )arg->ko_count), __gu_p___35);
< #line 41
<   goto ldv_53116;
<   case 4UL: 
< #line 41
<   put_unaligned_le32((unsigned int )arg->ko_count, __gu_p___35);
< #line 41
<   goto ldv_53116;
<   case 8UL: 
< #line 41
<   put_unaligned_le64((unsigned long long )arg->ko_count, __gu_p___35);
< #line 41
<   goto ldv_53116;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53116;
<   }
<   ldv_53116: 
< #line 41
<   tags = tags + 4U;
< #line 41
<   tmp___27 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___36 = (void *)tmp___27;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___36) = 24U;
< #line 41
<   goto ldv_53123;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(24, __gu_p___36);
< #line 41
<   goto ldv_53123;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(24U, __gu_p___36);
< #line 41
<   goto ldv_53123;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(24ULL, __gu_p___36);
< #line 41
<   goto ldv_53123;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53123;
<   }
<   ldv_53123: 
< #line 41
<   tmp___28 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___37 = (void *)tmp___28;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___37) = 4U;
< #line 41
<   goto ldv_53130;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(4, __gu_p___37);
< #line 41
<   goto ldv_53130;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(4U, __gu_p___37);
< #line 41
<   goto ldv_53130;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(4ULL, __gu_p___37);
< #line 41
<   goto ldv_53130;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53130;
<   }
<   ldv_53130: 
< #line 41
<   __gu_p___38 = (void *)tags;
< #line 41
<   switch (4UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___38) = (unsigned char )arg->after_sb_0p;
< #line 41
<   goto ldv_53137;
<   case 2UL: 
< #line 41
<   put_unaligned_le16((int )((unsigned short )arg->after_sb_0p), __gu_p___38);
< #line 41
<   goto ldv_53137;
<   case 4UL: 
< #line 41
<   put_unaligned_le32((unsigned int )arg->after_sb_0p, __gu_p___38);
< #line 41
<   goto ldv_53137;
<   case 8UL: 
< #line 41
<   put_unaligned_le64((unsigned long long )arg->after_sb_0p, __gu_p___38);
< #line 41
<   goto ldv_53137;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53137;
<   }
<   ldv_53137: 
< #line 41
<   tags = tags + 4U;
< #line 41
<   tmp___29 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___39 = (void *)tmp___29;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___39) = 25U;
< #line 41
<   goto ldv_53144;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(25, __gu_p___39);
< #line 41
<   goto ldv_53144;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(25U, __gu_p___39);
< #line 41
<   goto ldv_53144;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(25ULL, __gu_p___39);
< #line 41
<   goto ldv_53144;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53144;
<   }
<   ldv_53144: 
< #line 41
<   tmp___30 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___40 = (void *)tmp___30;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___40) = 4U;
< #line 41
<   goto ldv_53151;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(4, __gu_p___40);
< #line 41
<   goto ldv_53151;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(4U, __gu_p___40);
< #line 41
<   goto ldv_53151;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(4ULL, __gu_p___40);
< #line 41
<   goto ldv_53151;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53151;
<   }
<   ldv_53151: 
< #line 41
<   __gu_p___41 = (void *)tags;
< #line 41
<   switch (4UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___41) = (unsigned char )arg->after_sb_1p;
< #line 41
<   goto ldv_53158;
<   case 2UL: 
< #line 41
<   put_unaligned_le16((int )((unsigned short )arg->after_sb_1p), __gu_p___41);
< #line 41
<   goto ldv_53158;
<   case 4UL: 
< #line 41
<   put_unaligned_le32((unsigned int )arg->after_sb_1p, __gu_p___41);
< #line 41
<   goto ldv_53158;
<   case 8UL: 
< #line 41
<   put_unaligned_le64((unsigned long long )arg->after_sb_1p, __gu_p___41);
< #line 41
<   goto ldv_53158;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53158;
<   }
<   ldv_53158: 
< #line 41
<   tags = tags + 4U;
< #line 41
<   tmp___31 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___42 = (void *)tmp___31;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___42) = 26U;
< #line 41
<   goto ldv_53165;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(26, __gu_p___42);
< #line 41
<   goto ldv_53165;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(26U, __gu_p___42);
< #line 41
<   goto ldv_53165;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(26ULL, __gu_p___42);
< #line 41
<   goto ldv_53165;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53165;
<   }
<   ldv_53165: 
< #line 41
<   tmp___32 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___43 = (void *)tmp___32;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___43) = 4U;
< #line 41
<   goto ldv_53172;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(4, __gu_p___43);
< #line 41
<   goto ldv_53172;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(4U, __gu_p___43);
< #line 41
<   goto ldv_53172;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(4ULL, __gu_p___43);
< #line 41
<   goto ldv_53172;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53172;
<   }
<   ldv_53172: 
< #line 41
<   __gu_p___44 = (void *)tags;
< #line 41
<   switch (4UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___44) = (unsigned char )arg->after_sb_2p;
< #line 41
<   goto ldv_53179;
<   case 2UL: 
< #line 41
<   put_unaligned_le16((int )((unsigned short )arg->after_sb_2p), __gu_p___44);
< #line 41
<   goto ldv_53179;
<   case 4UL: 
< #line 41
<   put_unaligned_le32((unsigned int )arg->after_sb_2p, __gu_p___44);
< #line 41
<   goto ldv_53179;
<   case 8UL: 
< #line 41
<   put_unaligned_le64((unsigned long long )arg->after_sb_2p, __gu_p___44);
< #line 41
<   goto ldv_53179;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53179;
<   }
<   ldv_53179: 
< #line 41
<   tags = tags + 4U;
< #line 41
<   tmp___33 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___45 = (void *)tmp___33;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___45) = 39U;
< #line 41
<   goto ldv_53186;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(39, __gu_p___45);
< #line 41
<   goto ldv_53186;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(39U, __gu_p___45);
< #line 41
<   goto ldv_53186;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(39ULL, __gu_p___45);
< #line 41
<   goto ldv_53186;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53186;
<   }
<   ldv_53186: 
< #line 41
<   tmp___34 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___46 = (void *)tmp___34;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___46) = 4U;
< #line 41
<   goto ldv_53193;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(4, __gu_p___46);
< #line 41
<   goto ldv_53193;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(4U, __gu_p___46);
< #line 41
<   goto ldv_53193;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(4ULL, __gu_p___46);
< #line 41
<   goto ldv_53193;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53193;
<   }
<   ldv_53193: 
< #line 41
<   __gu_p___47 = (void *)tags;
< #line 41
<   switch (4UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___47) = (unsigned char )arg->rr_conflict;
< #line 41
<   goto ldv_53200;
<   case 2UL: 
< #line 41
<   put_unaligned_le16((int )((unsigned short )arg->rr_conflict), __gu_p___47);
< #line 41
<   goto ldv_53200;
<   case 4UL: 
< #line 41
<   put_unaligned_le32((unsigned int )arg->rr_conflict, __gu_p___47);
< #line 41
<   goto ldv_53200;
<   case 8UL: 
< #line 41
<   put_unaligned_le64((unsigned long long )arg->rr_conflict, __gu_p___47);
< #line 41
<   goto ldv_53200;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53200;
<   }
<   ldv_53200: 
< #line 41
<   tags = tags + 4U;
< #line 41
<   tmp___35 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___48 = (void *)tmp___35;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___48) = 40U;
< #line 41
<   goto ldv_53207;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(40, __gu_p___48);
< #line 41
<   goto ldv_53207;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(40U, __gu_p___48);
< #line 41
<   goto ldv_53207;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(40ULL, __gu_p___48);
< #line 41
<   goto ldv_53207;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53207;
<   }
<   ldv_53207: 
< #line 41
<   tmp___36 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___49 = (void *)tmp___36;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___49) = 4U;
< #line 41
<   goto ldv_53214;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(4, __gu_p___49);
< #line 41
<   goto ldv_53214;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(4U, __gu_p___49);
< #line 41
<   goto ldv_53214;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(4ULL, __gu_p___49);
< #line 41
<   goto ldv_53214;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53214;
<   }
<   ldv_53214: 
< #line 41
<   __gu_p___50 = (void *)tags;
< #line 41
<   switch (4UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___50) = (unsigned char )arg->ping_timeo;
< #line 41
<   goto ldv_53221;
<   case 2UL: 
< #line 41
<   put_unaligned_le16((int )((unsigned short )arg->ping_timeo), __gu_p___50);
< #line 41
<   goto ldv_53221;
<   case 4UL: 
< #line 41
<   put_unaligned_le32((unsigned int )arg->ping_timeo, __gu_p___50);
< #line 41
<   goto ldv_53221;
<   case 8UL: 
< #line 41
<   put_unaligned_le64((unsigned long long )arg->ping_timeo, __gu_p___50);
< #line 41
<   goto ldv_53221;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53221;
<   }
<   ldv_53221: 
< #line 41
<   tags = tags + 4U;
< #line 41
<   tmp___37 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___51 = (void *)tmp___37;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___51) = 67U;
< #line 41
<   goto ldv_53228;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(67, __gu_p___51);
< #line 41
<   goto ldv_53228;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(67U, __gu_p___51);
< #line 41
<   goto ldv_53228;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(67ULL, __gu_p___51);
< #line 41
<   goto ldv_53228;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53228;
<   }
<   ldv_53228: 
< #line 41
<   tmp___38 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___52 = (void *)tmp___38;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___52) = 4U;
< #line 41
<   goto ldv_53235;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(4, __gu_p___52);
< #line 41
<   goto ldv_53235;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(4U, __gu_p___52);
< #line 41
<   goto ldv_53235;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(4ULL, __gu_p___52);
< #line 41
<   goto ldv_53235;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53235;
<   }
<   ldv_53235: 
< #line 41
<   __gu_p___53 = (void *)tags;
< #line 41
<   switch (4UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___53) = (unsigned char )arg->rcvbuf_size;
< #line 41
<   goto ldv_53242;
<   case 2UL: 
< #line 41
<   put_unaligned_le16((int )((unsigned short )arg->rcvbuf_size), __gu_p___53);
< #line 41
<   goto ldv_53242;
<   case 4UL: 
< #line 41
<   put_unaligned_le32((unsigned int )arg->rcvbuf_size, __gu_p___53);
< #line 41
<   goto ldv_53242;
<   case 8UL: 
< #line 41
<   put_unaligned_le64((unsigned long long )arg->rcvbuf_size, __gu_p___53);
< #line 41
<   goto ldv_53242;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53242;
<   }
<   ldv_53242: 
< #line 41
<   tags = tags + 4U;
< #line 41
<   tmp___39 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___54 = (void *)tmp___39;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___54) = 81U;
< #line 41
<   goto ldv_53249;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(81, __gu_p___54);
< #line 41
<   goto ldv_53249;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(81U, __gu_p___54);
< #line 41
<   goto ldv_53249;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(81ULL, __gu_p___54);
< #line 41
<   goto ldv_53249;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53249;
<   }
<   ldv_53249: 
< #line 41
<   tmp___40 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___55 = (void *)tmp___40;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___55) = 4U;
< #line 41
<   goto ldv_53256;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(4, __gu_p___55);
< #line 41
<   goto ldv_53256;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(4U, __gu_p___55);
< #line 41
<   goto ldv_53256;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(4ULL, __gu_p___55);
< #line 41
<   goto ldv_53256;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53256;
<   }
<   ldv_53256: 
< #line 41
<   __gu_p___56 = (void *)tags;
< #line 41
<   switch (4UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___56) = (unsigned char )arg->on_congestion;
< #line 41
<   goto ldv_53263;
<   case 2UL: 
< #line 41
<   put_unaligned_le16((int )((unsigned short )arg->on_congestion), __gu_p___56);
< #line 41
<   goto ldv_53263;
<   case 4UL: 
< #line 41
<   put_unaligned_le32((unsigned int )arg->on_congestion, __gu_p___56);
< #line 41
<   goto ldv_53263;
<   case 8UL: 
< #line 41
<   put_unaligned_le64((unsigned long long )arg->on_congestion, __gu_p___56);
< #line 41
<   goto ldv_53263;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53263;
<   }
<   ldv_53263: 
< #line 41
<   tags = tags + 4U;
< #line 41
<   tmp___41 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___57 = (void *)tmp___41;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___57) = 82U;
< #line 41
<   goto ldv_53270;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(82, __gu_p___57);
< #line 41
<   goto ldv_53270;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(82U, __gu_p___57);
< #line 41
<   goto ldv_53270;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(82ULL, __gu_p___57);
< #line 41
<   goto ldv_53270;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53270;
<   }
<   ldv_53270: 
< #line 41
<   tmp___42 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___58 = (void *)tmp___42;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___58) = 4U;
< #line 41
<   goto ldv_53277;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(4, __gu_p___58);
< #line 41
<   goto ldv_53277;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(4U, __gu_p___58);
< #line 41
<   goto ldv_53277;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(4ULL, __gu_p___58);
< #line 41
<   goto ldv_53277;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53277;
<   }
<   ldv_53277: 
< #line 41
<   __gu_p___59 = (void *)tags;
< #line 41
<   switch (4UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___59) = (unsigned char )arg->cong_fill;
< #line 41
<   goto ldv_53284;
<   case 2UL: 
< #line 41
<   put_unaligned_le16((int )((unsigned short )arg->cong_fill), __gu_p___59);
< #line 41
<   goto ldv_53284;
<   case 4UL: 
< #line 41
<   put_unaligned_le32((unsigned int )arg->cong_fill, __gu_p___59);
< #line 41
<   goto ldv_53284;
<   case 8UL: 
< #line 41
<   put_unaligned_le64((unsigned long long )arg->cong_fill, __gu_p___59);
< #line 41
<   goto ldv_53284;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53284;
<   }
<   ldv_53284: 
< #line 41
<   tags = tags + 4U;
< #line 41
<   tmp___43 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___60 = (void *)tmp___43;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___60) = 83U;
< #line 41
<   goto ldv_53291;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(83, __gu_p___60);
< #line 41
<   goto ldv_53291;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(83U, __gu_p___60);
< #line 41
<   goto ldv_53291;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(83ULL, __gu_p___60);
< #line 41
<   goto ldv_53291;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53291;
<   }
<   ldv_53291: 
< #line 41
<   tmp___44 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___61 = (void *)tmp___44;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___61) = 4U;
< #line 41
<   goto ldv_53298;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(4, __gu_p___61);
< #line 41
<   goto ldv_53298;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(4U, __gu_p___61);
< #line 41
<   goto ldv_53298;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(4ULL, __gu_p___61);
< #line 41
<   goto ldv_53298;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53298;
<   }
<   ldv_53298: 
< #line 41
<   __gu_p___62 = (void *)tags;
< #line 41
<   switch (4UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___62) = (unsigned char )arg->cong_extents;
< #line 41
<   goto ldv_53305;
<   case 2UL: 
< #line 41
<   put_unaligned_le16((int )((unsigned short )arg->cong_extents), __gu_p___62);
< #line 41
<   goto ldv_53305;
<   case 4UL: 
< #line 41
<   put_unaligned_le32((unsigned int )arg->cong_extents, __gu_p___62);
< #line 41
<   goto ldv_53305;
<   case 8UL: 
< #line 41
<   put_unaligned_le64((unsigned long long )arg->cong_extents, __gu_p___62);
< #line 41
<   goto ldv_53305;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53305;
<   }
<   ldv_53305: 
< #line 41
<   tags = tags + 4U;
< #line 41
<   tmp___45 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___63 = (void *)tmp___45;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___63) = 60U;
< #line 41
<   goto ldv_53312;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(41020, __gu_p___63);
< #line 41
<   goto ldv_53312;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(41020U, __gu_p___63);
< #line 41
<   goto ldv_53312;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(41020ULL, __gu_p___63);
< #line 41
<   goto ldv_53312;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53312;
<   }
<   ldv_53312: 
< #line 41
<   tmp___46 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___64 = (void *)tmp___46;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___64) = 1U;
< #line 41
<   goto ldv_53319;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(1, __gu_p___64);
< #line 41
<   goto ldv_53319;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(1U, __gu_p___64);
< #line 41
<   goto ldv_53319;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(1ULL, __gu_p___64);
< #line 41
<   goto ldv_53319;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53319;
<   }
<   ldv_53319: 
< #line 41
<   *((char *)tags) = (char )arg->mind_af;
< #line 41
<   tags = tags + 1U;
< #line 41
<   tmp___47 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___65 = (void *)tmp___47;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___65) = 27U;
< #line 41
<   goto ldv_53326;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(32795, __gu_p___65);
< #line 41
<   goto ldv_53326;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(32795U, __gu_p___65);
< #line 41
<   goto ldv_53326;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(32795ULL, __gu_p___65);
< #line 41
<   goto ldv_53326;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53326;
<   }
<   ldv_53326: 
< #line 41
<   tmp___48 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___66 = (void *)tmp___48;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___66) = 1U;
< #line 41
<   goto ldv_53333;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(1, __gu_p___66);
< #line 41
<   goto ldv_53333;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(1U, __gu_p___66);
< #line 41
<   goto ldv_53333;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(1ULL, __gu_p___66);
< #line 41
<   goto ldv_53333;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53333;
<   }
<   ldv_53333: 
< #line 41
<   *((char *)tags) = (char )arg->want_lose;
< #line 41
<   tags = tags + 1U;
< #line 41
<   tmp___49 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___67 = (void *)tmp___49;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___67) = 28U;
< #line 41
<   goto ldv_53340;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(32796, __gu_p___67);
< #line 41
<   goto ldv_53340;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(32796U, __gu_p___67);
< #line 41
<   goto ldv_53340;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(32796ULL, __gu_p___67);
< #line 41
<   goto ldv_53340;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53340;
<   }
<   ldv_53340: 
< #line 41
<   tmp___50 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___68 = (void *)tmp___50;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___68) = 1U;
< #line 41
<   goto ldv_53347;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(1, __gu_p___68);
< #line 41
<   goto ldv_53347;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(1U, __gu_p___68);
< #line 41
<   goto ldv_53347;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(1ULL, __gu_p___68);
< #line 41
<   goto ldv_53347;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53347;
<   }
<   ldv_53347: 
< #line 41
<   *((char *)tags) = (char )arg->two_primaries;
< #line 41
<   tags = tags + 1U;
< #line 41
<   tmp___51 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___69 = (void *)tmp___51;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___69) = 41U;
< #line 41
<   goto ldv_53354;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(32809, __gu_p___69);
< #line 41
<   goto ldv_53354;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(32809U, __gu_p___69);
< #line 41
<   goto ldv_53354;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(32809ULL, __gu_p___69);
< #line 41
<   goto ldv_53354;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53354;
<   }
<   ldv_53354: 
< #line 41
<   tmp___52 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___70 = (void *)tmp___52;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___70) = 1U;
< #line 41
<   goto ldv_53361;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(1, __gu_p___70);
< #line 41
<   goto ldv_53361;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(1U, __gu_p___70);
< #line 41
<   goto ldv_53361;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(1ULL, __gu_p___70);
< #line 41
<   goto ldv_53361;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53361;
<   }
<   ldv_53361: 
< #line 41
<   *((char *)tags) = (char )arg->always_asbp;
< #line 41
<   tags = tags + 1U;
< #line 41
<   tmp___53 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___71 = (void *)tmp___53;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___71) = 61U;
< #line 41
<   goto ldv_53368;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(32829, __gu_p___71);
< #line 41
<   goto ldv_53368;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(32829U, __gu_p___71);
< #line 41
<   goto ldv_53368;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(32829ULL, __gu_p___71);
< #line 41
<   goto ldv_53368;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53368;
<   }
<   ldv_53368: 
< #line 41
<   tmp___54 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___72 = (void *)tmp___54;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___72) = 1U;
< #line 41
<   goto ldv_53375;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(1, __gu_p___72);
< #line 41
<   goto ldv_53375;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(1U, __gu_p___72);
< #line 41
<   goto ldv_53375;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(1ULL, __gu_p___72);
< #line 41
<   goto ldv_53375;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53375;
<   }
<   ldv_53375: 
< #line 41
<   *((char *)tags) = (char )arg->no_cork;
< #line 41
<   tags = tags + 1U;
< #line 41
<   tmp___55 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___73 = (void *)tmp___55;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___73) = 62U;
< #line 41
<   goto ldv_53382;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(41022, __gu_p___73);
< #line 41
<   goto ldv_53382;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(41022U, __gu_p___73);
< #line 41
<   goto ldv_53382;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(41022ULL, __gu_p___73);
< #line 41
<   goto ldv_53382;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53382;
<   }
<   ldv_53382: 
< #line 41
<   tmp___56 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___74 = (void *)tmp___56;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___74) = 1U;
< #line 41
<   goto ldv_53389;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(1, __gu_p___74);
< #line 41
<   goto ldv_53389;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(1U, __gu_p___74);
< #line 41
<   goto ldv_53389;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(1ULL, __gu_p___74);
< #line 41
<   goto ldv_53389;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53389;
<   }
<   ldv_53389: 
< #line 41
<   *((char *)tags) = (char )arg->auto_sndbuf_size;
< #line 41
<   tags = tags + 1U;
< #line 41
<   tmp___57 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___75 = (void *)tmp___57;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___75) = 70U;
< #line 41
<   goto ldv_53396;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(41030, __gu_p___75);
< #line 41
<   goto ldv_53396;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(41030U, __gu_p___75);
< #line 41
<   goto ldv_53396;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(41030ULL, __gu_p___75);
< #line 41
<   goto ldv_53396;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53396;
<   }
<   ldv_53396: 
< #line 41
<   tmp___58 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___76 = (void *)tmp___58;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___76) = 1U;
< #line 41
<   goto ldv_53403;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(1, __gu_p___76);
< #line 41
<   goto ldv_53403;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(1U, __gu_p___76);
< #line 41
<   goto ldv_53403;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(1ULL, __gu_p___76);
< #line 41
<   goto ldv_53403;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53403;
<   }
<   ldv_53403: 
< #line 41
<   *((char *)tags) = (char )arg->dry_run;
< #line 41
<   tags = tags + 1U;
< #line 41
<   return (tags);
< }
< }
< #line 104
< static unsigned short *syncer_conf_to_tags(struct drbd_conf *mdev , struct syncer_conf *arg ,
<                                            unsigned short *tags ) ;
< #line 104 "include/linux/drbd_nl.h"
< static unsigned short *syncer_conf_to_tags(struct drbd_conf *mdev , struct syncer_conf *arg ,
<                                            unsigned short *tags ) 
< { 
<   void *__gu_p ;
<   unsigned short *tmp ;
<   void *__gu_p___0 ;
<   unsigned short *tmp___0 ;
<   void *__gu_p___1 ;
<   void *__gu_p___2 ;
<   unsigned short *tmp___1 ;
<   void *__gu_p___3 ;
<   unsigned short *tmp___2 ;
<   void *__gu_p___4 ;
<   void *__gu_p___5 ;
<   unsigned short *tmp___3 ;
<   void *__gu_p___6 ;
<   unsigned short *tmp___4 ;
<   void *__gu_p___7 ;
<   void *__gu_p___8 ;
<   unsigned short *tmp___5 ;
<   void *__gu_p___9 ;
<   unsigned short *tmp___6 ;
<   size_t __len ;
<   void *__ret ;
<   void *__gu_p___10 ;
<   unsigned short *tmp___7 ;
<   void *__gu_p___11 ;
<   unsigned short *tmp___8 ;
<   size_t __len___0 ;
<   void *__ret___0 ;
<   void *__gu_p___12 ;
<   unsigned short *tmp___9 ;
<   void *__gu_p___13 ;
<   unsigned short *tmp___10 ;
<   size_t __len___1 ;
<   void *__ret___1 ;
<   void *__gu_p___14 ;
<   unsigned short *tmp___11 ;
<   void *__gu_p___15 ;
<   unsigned short *tmp___12 ;
<   void *__gu_p___16 ;
<   unsigned short *tmp___13 ;
<   void *__gu_p___17 ;
<   unsigned short *tmp___14 ;
<   void *__gu_p___18 ;
<   void *__gu_p___19 ;
<   unsigned short *tmp___15 ;
<   void *__gu_p___20 ;
<   unsigned short *tmp___16 ;
<   void *__gu_p___21 ;
<   void *__gu_p___22 ;
<   unsigned short *tmp___17 ;
<   void *__gu_p___23 ;
<   unsigned short *tmp___18 ;
<   void *__gu_p___24 ;
<   void *__gu_p___25 ;
<   unsigned short *tmp___19 ;
<   void *__gu_p___26 ;
<   unsigned short *tmp___20 ;
<   void *__gu_p___27 ;
<   void *__gu_p___28 ;
<   unsigned short *tmp___21 ;
<   void *__gu_p___29 ;
<   unsigned short *tmp___22 ;
<   void *__gu_p___30 ;
<   void *__gu_p___31 ;
<   unsigned short *tmp___23 ;
<   void *__gu_p___32 ;
<   unsigned short *tmp___24 ;
<   void *__gu_p___33 ;
< 
<   {
< #line 85
<   tmp = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p = (void *)tmp;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p) = 30U;
< #line 85
<   goto ldv_53500;
<   case 2UL: 
< #line 85
<   put_unaligned_le16(30, __gu_p);
< #line 85
<   goto ldv_53500;
<   case 4UL: 
< #line 85
<   put_unaligned_le32(30U, __gu_p);
< #line 85
<   goto ldv_53500;
<   case 8UL: 
< #line 85
<   put_unaligned_le64(30ULL, __gu_p);
< #line 85
<   goto ldv_53500;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53500;
<   }
<   ldv_53500: 
< #line 85
<   tmp___0 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p___0 = (void *)tmp___0;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___0) = 4U;
< #line 85
<   goto ldv_53507;
<   case 2UL: 
< #line 85
<   put_unaligned_le16(4, __gu_p___0);
< #line 85
<   goto ldv_53507;
<   case 4UL: 
< #line 85
<   put_unaligned_le32(4U, __gu_p___0);
< #line 85
<   goto ldv_53507;
<   case 8UL: 
< #line 85
<   put_unaligned_le64(4ULL, __gu_p___0);
< #line 85
<   goto ldv_53507;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53507;
<   }
<   ldv_53507: 
< #line 85
<   __gu_p___1 = (void *)tags;
< #line 85
<   switch (4UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___1) = (unsigned char )arg->rate;
< #line 85
<   goto ldv_53514;
<   case 2UL: 
< #line 85
<   put_unaligned_le16((int )((unsigned short )arg->rate), __gu_p___1);
< #line 85
<   goto ldv_53514;
<   case 4UL: 
< #line 85
<   put_unaligned_le32((unsigned int )arg->rate, __gu_p___1);
< #line 85
<   goto ldv_53514;
<   case 8UL: 
< #line 85
<   put_unaligned_le64((unsigned long long )arg->rate, __gu_p___1);
< #line 85
<   goto ldv_53514;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53514;
<   }
<   ldv_53514: 
< #line 85
<   tags = tags + 4U;
< #line 85
<   tmp___1 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p___2 = (void *)tmp___1;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___2) = 31U;
< #line 85
<   goto ldv_53521;
<   case 2UL: 
< #line 85
<   put_unaligned_le16(31, __gu_p___2);
< #line 85
<   goto ldv_53521;
<   case 4UL: 
< #line 85
<   put_unaligned_le32(31U, __gu_p___2);
< #line 85
<   goto ldv_53521;
<   case 8UL: 
< #line 85
<   put_unaligned_le64(31ULL, __gu_p___2);
< #line 85
<   goto ldv_53521;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53521;
<   }
<   ldv_53521: 
< #line 85
<   tmp___2 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p___3 = (void *)tmp___2;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___3) = 4U;
< #line 85
<   goto ldv_53528;
<   case 2UL: 
< #line 85
<   put_unaligned_le16(4, __gu_p___3);
< #line 85
<   goto ldv_53528;
<   case 4UL: 
< #line 85
<   put_unaligned_le32(4U, __gu_p___3);
< #line 85
<   goto ldv_53528;
<   case 8UL: 
< #line 85
<   put_unaligned_le64(4ULL, __gu_p___3);
< #line 85
<   goto ldv_53528;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53528;
<   }
<   ldv_53528: 
< #line 85
<   __gu_p___4 = (void *)tags;
< #line 85
<   switch (4UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___4) = (unsigned char )arg->after;
< #line 85
<   goto ldv_53535;
<   case 2UL: 
< #line 85
<   put_unaligned_le16((int )((unsigned short )arg->after), __gu_p___4);
< #line 85
<   goto ldv_53535;
<   case 4UL: 
< #line 85
<   put_unaligned_le32((unsigned int )arg->after, __gu_p___4);
< #line 85
<   goto ldv_53535;
<   case 8UL: 
< #line 85
<   put_unaligned_le64((unsigned long long )arg->after, __gu_p___4);
< #line 85
<   goto ldv_53535;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53535;
<   }
<   ldv_53535: 
< #line 85
<   tags = tags + 4U;
< #line 85
<   tmp___3 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p___5 = (void *)tmp___3;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___5) = 32U;
< #line 85
<   goto ldv_53542;
<   case 2UL: 
< #line 85
<   put_unaligned_le16(32, __gu_p___5);
< #line 85
<   goto ldv_53542;
<   case 4UL: 
< #line 85
<   put_unaligned_le32(32U, __gu_p___5);
< #line 85
<   goto ldv_53542;
<   case 8UL: 
< #line 85
<   put_unaligned_le64(32ULL, __gu_p___5);
< #line 85
<   goto ldv_53542;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53542;
<   }
<   ldv_53542: 
< #line 85
<   tmp___4 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p___6 = (void *)tmp___4;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___6) = 4U;
< #line 85
<   goto ldv_53549;
<   case 2UL: 
< #line 85
<   put_unaligned_le16(4, __gu_p___6);
< #line 85
<   goto ldv_53549;
<   case 4UL: 
< #line 85
<   put_unaligned_le32(4U, __gu_p___6);
< #line 85
<   goto ldv_53549;
<   case 8UL: 
< #line 85
<   put_unaligned_le64(4ULL, __gu_p___6);
< #line 85
<   goto ldv_53549;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53549;
<   }
<   ldv_53549: 
< #line 85
<   __gu_p___7 = (void *)tags;
< #line 85
<   switch (4UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___7) = (unsigned char )arg->al_extents;
< #line 85
<   goto ldv_53556;
<   case 2UL: 
< #line 85
<   put_unaligned_le16((int )((unsigned short )arg->al_extents), __gu_p___7);
< #line 85
<   goto ldv_53556;
<   case 4UL: 
< #line 85
<   put_unaligned_le32((unsigned int )arg->al_extents, __gu_p___7);
< #line 85
<   goto ldv_53556;
<   case 8UL: 
< #line 85
<   put_unaligned_le64((unsigned long long )arg->al_extents, __gu_p___7);
< #line 85
<   goto ldv_53556;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53556;
<   }
<   ldv_53556: 
< #line 85
<   tags = tags + 4U;
< #line 85
<   tmp___5 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p___8 = (void *)tmp___5;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___8) = 52U;
< #line 85
<   goto ldv_53563;
<   case 2UL: 
< #line 85
<   put_unaligned_le16(49204, __gu_p___8);
< #line 85
<   goto ldv_53563;
<   case 4UL: 
< #line 85
<   put_unaligned_le32(49204U, __gu_p___8);
< #line 85
<   goto ldv_53563;
<   case 8UL: 
< #line 85
<   put_unaligned_le64(49204ULL, __gu_p___8);
< #line 85
<   goto ldv_53563;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53563;
<   }
<   ldv_53563: 
< #line 85
<   tmp___6 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p___9 = (void *)tmp___6;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___9) = (unsigned char )arg->verify_alg_len;
< #line 85
<   goto ldv_53570;
<   case 2UL: 
< #line 85
<   put_unaligned_le16((int )((unsigned short )arg->verify_alg_len), __gu_p___9);
< #line 85
<   goto ldv_53570;
<   case 4UL: 
< #line 85
<   put_unaligned_le32((unsigned int )arg->verify_alg_len, __gu_p___9);
< #line 85
<   goto ldv_53570;
<   case 8UL: 
< #line 85
<   put_unaligned_le64((unsigned long long )arg->verify_alg_len, __gu_p___9);
< #line 85
<   goto ldv_53570;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53570;
<   }
<   ldv_53570: 
< #line 85
<   __len = (size_t )arg->verify_alg_len;
< #line 85
<   __ret = __builtin_memcpy((void *)tags, (void const   *)(& arg->verify_alg), __len);
< #line 85
<   tags = tags + (unsigned long )arg->verify_alg_len;
< #line 85
<   tmp___7 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p___10 = (void *)tmp___7;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___10) = 51U;
< #line 85
<   goto ldv_53580;
<   case 2UL: 
< #line 85
<   put_unaligned_le16(49203, __gu_p___10);
< #line 85
<   goto ldv_53580;
<   case 4UL: 
< #line 85
<   put_unaligned_le32(49203U, __gu_p___10);
< #line 85
<   goto ldv_53580;
<   case 8UL: 
< #line 85
<   put_unaligned_le64(49203ULL, __gu_p___10);
< #line 85
<   goto ldv_53580;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53580;
<   }
<   ldv_53580: 
< #line 85
<   tmp___8 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p___11 = (void *)tmp___8;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___11) = (unsigned char )arg->cpu_mask_len;
< #line 85
<   goto ldv_53587;
<   case 2UL: 
< #line 85
<   put_unaligned_le16((int )((unsigned short )arg->cpu_mask_len), __gu_p___11);
< #line 85
<   goto ldv_53587;
<   case 4UL: 
< #line 85
<   put_unaligned_le32((unsigned int )arg->cpu_mask_len, __gu_p___11);
< #line 85
<   goto ldv_53587;
<   case 8UL: 
< #line 85
<   put_unaligned_le64((unsigned long long )arg->cpu_mask_len, __gu_p___11);
< #line 85
<   goto ldv_53587;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53587;
<   }
<   ldv_53587: 
< #line 85
<   __len___0 = (size_t )arg->cpu_mask_len;
< #line 85
<   __ret___0 = __builtin_memcpy((void *)tags, (void const   *)(& arg->cpu_mask), __len___0);
< #line 85
<   tags = tags + (unsigned long )arg->cpu_mask_len;
< #line 85
<   tmp___9 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p___12 = (void *)tmp___9;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___12) = 64U;
< #line 85
<   goto ldv_53597;
<   case 2UL: 
< #line 85
<   put_unaligned_le16(49216, __gu_p___12);
< #line 85
<   goto ldv_53597;
<   case 4UL: 
< #line 85
<   put_unaligned_le32(49216U, __gu_p___12);
< #line 85
<   goto ldv_53597;
<   case 8UL: 
< #line 85
<   put_unaligned_le64(49216ULL, __gu_p___12);
< #line 85
<   goto ldv_53597;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53597;
<   }
<   ldv_53597: 
< #line 85
<   tmp___10 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p___13 = (void *)tmp___10;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___13) = (unsigned char )arg->csums_alg_len;
< #line 85
<   goto ldv_53604;
<   case 2UL: 
< #line 85
<   put_unaligned_le16((int )((unsigned short )arg->csums_alg_len), __gu_p___13);
< #line 85
<   goto ldv_53604;
<   case 4UL: 
< #line 85
<   put_unaligned_le32((unsigned int )arg->csums_alg_len, __gu_p___13);
< #line 85
<   goto ldv_53604;
<   case 8UL: 
< #line 85
<   put_unaligned_le64((unsigned long long )arg->csums_alg_len, __gu_p___13);
< #line 85
<   goto ldv_53604;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53604;
<   }
<   ldv_53604: 
< #line 85
<   __len___1 = (size_t )arg->csums_alg_len;
< #line 85
<   __ret___1 = __builtin_memcpy((void *)tags, (void const   *)(& arg->csums_alg), __len___1);
< #line 85
<   tags = tags + (unsigned long )arg->csums_alg_len;
< #line 85
<   tmp___11 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p___14 = (void *)tmp___11;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___14) = 65U;
< #line 85
<   goto ldv_53614;
<   case 2UL: 
< #line 85
<   put_unaligned_le16(32833, __gu_p___14);
< #line 85
<   goto ldv_53614;
<   case 4UL: 
< #line 85
<   put_unaligned_le32(32833U, __gu_p___14);
< #line 85
<   goto ldv_53614;
<   case 8UL: 
< #line 85
<   put_unaligned_le64(32833ULL, __gu_p___14);
< #line 85
<   goto ldv_53614;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53614;
<   }
<   ldv_53614: 
< #line 85
<   tmp___12 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p___15 = (void *)tmp___12;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___15) = 1U;
< #line 85
<   goto ldv_53621;
<   case 2UL: 
< #line 85
<   put_unaligned_le16(1, __gu_p___15);
< #line 85
<   goto ldv_53621;
<   case 4UL: 
< #line 85
<   put_unaligned_le32(1U, __gu_p___15);
< #line 85
<   goto ldv_53621;
<   case 8UL: 
< #line 85
<   put_unaligned_le64(1ULL, __gu_p___15);
< #line 85
<   goto ldv_53621;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53621;
<   }
<   ldv_53621: 
< #line 85
<   *((char *)tags) = (char )arg->use_rle;
< #line 85
<   tags = tags + 1U;
< #line 85
<   tmp___13 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p___16 = (void *)tmp___13;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___16) = 75U;
< #line 85
<   goto ldv_53628;
<   case 2UL: 
< #line 85
<   put_unaligned_le16(75, __gu_p___16);
< #line 85
<   goto ldv_53628;
<   case 4UL: 
< #line 85
<   put_unaligned_le32(75U, __gu_p___16);
< #line 85
<   goto ldv_53628;
<   case 8UL: 
< #line 85
<   put_unaligned_le64(75ULL, __gu_p___16);
< #line 85
<   goto ldv_53628;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53628;
<   }
<   ldv_53628: 
< #line 85
<   tmp___14 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p___17 = (void *)tmp___14;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___17) = 4U;
< #line 85
<   goto ldv_53635;
<   case 2UL: 
< #line 85
<   put_unaligned_le16(4, __gu_p___17);
< #line 85
<   goto ldv_53635;
<   case 4UL: 
< #line 85
<   put_unaligned_le32(4U, __gu_p___17);
< #line 85
<   goto ldv_53635;
<   case 8UL: 
< #line 85
<   put_unaligned_le64(4ULL, __gu_p___17);
< #line 85
<   goto ldv_53635;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53635;
<   }
<   ldv_53635: 
< #line 85
<   __gu_p___18 = (void *)tags;
< #line 85
<   switch (4UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___18) = (unsigned char )arg->on_no_data;
< #line 85
<   goto ldv_53642;
<   case 2UL: 
< #line 85
<   put_unaligned_le16((int )((unsigned short )arg->on_no_data), __gu_p___18);
< #line 85
<   goto ldv_53642;
<   case 4UL: 
< #line 85
<   put_unaligned_le32((unsigned int )arg->on_no_data, __gu_p___18);
< #line 85
<   goto ldv_53642;
<   case 8UL: 
< #line 85
<   put_unaligned_le64((unsigned long long )arg->on_no_data, __gu_p___18);
< #line 85
<   goto ldv_53642;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53642;
<   }
<   ldv_53642: 
< #line 85
<   tags = tags + 4U;
< #line 85
<   tmp___15 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p___19 = (void *)tmp___15;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___19) = 76U;
< #line 85
<   goto ldv_53649;
<   case 2UL: 
< #line 85
<   put_unaligned_le16(76, __gu_p___19);
< #line 85
<   goto ldv_53649;
<   case 4UL: 
< #line 85
<   put_unaligned_le32(76U, __gu_p___19);
< #line 85
<   goto ldv_53649;
<   case 8UL: 
< #line 85
<   put_unaligned_le64(76ULL, __gu_p___19);
< #line 85
<   goto ldv_53649;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53649;
<   }
<   ldv_53649: 
< #line 85
<   tmp___16 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p___20 = (void *)tmp___16;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___20) = 4U;
< #line 85
<   goto ldv_53656;
<   case 2UL: 
< #line 85
<   put_unaligned_le16(4, __gu_p___20);
< #line 85
<   goto ldv_53656;
<   case 4UL: 
< #line 85
<   put_unaligned_le32(4U, __gu_p___20);
< #line 85
<   goto ldv_53656;
<   case 8UL: 
< #line 85
<   put_unaligned_le64(4ULL, __gu_p___20);
< #line 85
<   goto ldv_53656;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53656;
<   }
<   ldv_53656: 
< #line 85
<   __gu_p___21 = (void *)tags;
< #line 85
<   switch (4UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___21) = (unsigned char )arg->c_plan_ahead;
< #line 85
<   goto ldv_53663;
<   case 2UL: 
< #line 85
<   put_unaligned_le16((int )((unsigned short )arg->c_plan_ahead), __gu_p___21);
< #line 85
<   goto ldv_53663;
<   case 4UL: 
< #line 85
<   put_unaligned_le32((unsigned int )arg->c_plan_ahead, __gu_p___21);
< #line 85
<   goto ldv_53663;
<   case 8UL: 
< #line 85
<   put_unaligned_le64((unsigned long long )arg->c_plan_ahead, __gu_p___21);
< #line 85
<   goto ldv_53663;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53663;
<   }
<   ldv_53663: 
< #line 85
<   tags = tags + 4U;
< #line 85
<   tmp___17 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p___22 = (void *)tmp___17;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___22) = 77U;
< #line 85
<   goto ldv_53670;
<   case 2UL: 
< #line 85
<   put_unaligned_le16(77, __gu_p___22);
< #line 85
<   goto ldv_53670;
<   case 4UL: 
< #line 85
<   put_unaligned_le32(77U, __gu_p___22);
< #line 85
<   goto ldv_53670;
<   case 8UL: 
< #line 85
<   put_unaligned_le64(77ULL, __gu_p___22);
< #line 85
<   goto ldv_53670;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53670;
<   }
<   ldv_53670: 
< #line 85
<   tmp___18 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p___23 = (void *)tmp___18;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___23) = 4U;
< #line 85
<   goto ldv_53677;
<   case 2UL: 
< #line 85
<   put_unaligned_le16(4, __gu_p___23);
< #line 85
<   goto ldv_53677;
<   case 4UL: 
< #line 85
<   put_unaligned_le32(4U, __gu_p___23);
< #line 85
<   goto ldv_53677;
<   case 8UL: 
< #line 85
<   put_unaligned_le64(4ULL, __gu_p___23);
< #line 85
<   goto ldv_53677;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53677;
<   }
<   ldv_53677: 
< #line 85
<   __gu_p___24 = (void *)tags;
< #line 85
<   switch (4UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___24) = (unsigned char )arg->c_delay_target;
< #line 85
<   goto ldv_53684;
<   case 2UL: 
< #line 85
<   put_unaligned_le16((int )((unsigned short )arg->c_delay_target), __gu_p___24);
< #line 85
<   goto ldv_53684;
<   case 4UL: 
< #line 85
<   put_unaligned_le32((unsigned int )arg->c_delay_target, __gu_p___24);
< #line 85
<   goto ldv_53684;
<   case 8UL: 
< #line 85
<   put_unaligned_le64((unsigned long long )arg->c_delay_target, __gu_p___24);
< #line 85
<   goto ldv_53684;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53684;
<   }
<   ldv_53684: 
< #line 85
<   tags = tags + 4U;
< #line 85
<   tmp___19 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p___25 = (void *)tmp___19;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___25) = 78U;
< #line 85
<   goto ldv_53691;
<   case 2UL: 
< #line 85
<   put_unaligned_le16(78, __gu_p___25);
< #line 85
<   goto ldv_53691;
<   case 4UL: 
< #line 85
<   put_unaligned_le32(78U, __gu_p___25);
< #line 85
<   goto ldv_53691;
<   case 8UL: 
< #line 85
<   put_unaligned_le64(78ULL, __gu_p___25);
< #line 85
<   goto ldv_53691;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53691;
<   }
<   ldv_53691: 
< #line 85
<   tmp___20 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p___26 = (void *)tmp___20;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___26) = 4U;
< #line 85
<   goto ldv_53698;
<   case 2UL: 
< #line 85
<   put_unaligned_le16(4, __gu_p___26);
< #line 85
<   goto ldv_53698;
<   case 4UL: 
< #line 85
<   put_unaligned_le32(4U, __gu_p___26);
< #line 85
<   goto ldv_53698;
<   case 8UL: 
< #line 85
<   put_unaligned_le64(4ULL, __gu_p___26);
< #line 85
<   goto ldv_53698;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53698;
<   }
<   ldv_53698: 
< #line 85
<   __gu_p___27 = (void *)tags;
< #line 85
<   switch (4UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___27) = (unsigned char )arg->c_fill_target;
< #line 85
<   goto ldv_53705;
<   case 2UL: 
< #line 85
<   put_unaligned_le16((int )((unsigned short )arg->c_fill_target), __gu_p___27);
< #line 85
<   goto ldv_53705;
<   case 4UL: 
< #line 85
<   put_unaligned_le32((unsigned int )arg->c_fill_target, __gu_p___27);
< #line 85
<   goto ldv_53705;
<   case 8UL: 
< #line 85
<   put_unaligned_le64((unsigned long long )arg->c_fill_target, __gu_p___27);
< #line 85
<   goto ldv_53705;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53705;
<   }
<   ldv_53705: 
< #line 85
<   tags = tags + 4U;
< #line 85
<   tmp___21 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p___28 = (void *)tmp___21;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___28) = 79U;
< #line 85
<   goto ldv_53712;
<   case 2UL: 
< #line 85
<   put_unaligned_le16(79, __gu_p___28);
< #line 85
<   goto ldv_53712;
<   case 4UL: 
< #line 85
<   put_unaligned_le32(79U, __gu_p___28);
< #line 85
<   goto ldv_53712;
<   case 8UL: 
< #line 85
<   put_unaligned_le64(79ULL, __gu_p___28);
< #line 85
<   goto ldv_53712;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53712;
<   }
<   ldv_53712: 
< #line 85
<   tmp___22 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p___29 = (void *)tmp___22;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___29) = 4U;
< #line 85
<   goto ldv_53719;
<   case 2UL: 
< #line 85
<   put_unaligned_le16(4, __gu_p___29);
< #line 85
<   goto ldv_53719;
<   case 4UL: 
< #line 85
<   put_unaligned_le32(4U, __gu_p___29);
< #line 85
<   goto ldv_53719;
<   case 8UL: 
< #line 85
<   put_unaligned_le64(4ULL, __gu_p___29);
< #line 85
<   goto ldv_53719;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53719;
<   }
<   ldv_53719: 
< #line 85
<   __gu_p___30 = (void *)tags;
< #line 85
<   switch (4UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___30) = (unsigned char )arg->c_max_rate;
< #line 85
<   goto ldv_53726;
<   case 2UL: 
< #line 85
<   put_unaligned_le16((int )((unsigned short )arg->c_max_rate), __gu_p___30);
< #line 85
<   goto ldv_53726;
<   case 4UL: 
< #line 85
<   put_unaligned_le32((unsigned int )arg->c_max_rate, __gu_p___30);
< #line 85
<   goto ldv_53726;
<   case 8UL: 
< #line 85
<   put_unaligned_le64((unsigned long long )arg->c_max_rate, __gu_p___30);
< #line 85
<   goto ldv_53726;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53726;
<   }
<   ldv_53726: 
< #line 85
<   tags = tags + 4U;
< #line 85
<   tmp___23 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p___31 = (void *)tmp___23;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___31) = 80U;
< #line 85
<   goto ldv_53733;
<   case 2UL: 
< #line 85
<   put_unaligned_le16(80, __gu_p___31);
< #line 85
<   goto ldv_53733;
<   case 4UL: 
< #line 85
<   put_unaligned_le32(80U, __gu_p___31);
< #line 85
<   goto ldv_53733;
<   case 8UL: 
< #line 85
<   put_unaligned_le64(80ULL, __gu_p___31);
< #line 85
<   goto ldv_53733;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53733;
<   }
<   ldv_53733: 
< #line 85
<   tmp___24 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p___32 = (void *)tmp___24;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___32) = 4U;
< #line 85
<   goto ldv_53740;
<   case 2UL: 
< #line 85
<   put_unaligned_le16(4, __gu_p___32);
< #line 85
<   goto ldv_53740;
<   case 4UL: 
< #line 85
<   put_unaligned_le32(4U, __gu_p___32);
< #line 85
<   goto ldv_53740;
<   case 8UL: 
< #line 85
<   put_unaligned_le64(4ULL, __gu_p___32);
< #line 85
<   goto ldv_53740;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53740;
<   }
<   ldv_53740: 
< #line 85
<   __gu_p___33 = (void *)tags;
< #line 85
<   switch (4UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___33) = (unsigned char )arg->c_min_rate;
< #line 85
<   goto ldv_53747;
<   case 2UL: 
< #line 85
<   put_unaligned_le16((int )((unsigned short )arg->c_min_rate), __gu_p___33);
< #line 85
<   goto ldv_53747;
<   case 4UL: 
< #line 85
<   put_unaligned_le32((unsigned int )arg->c_min_rate, __gu_p___33);
< #line 85
<   goto ldv_53747;
<   case 8UL: 
< #line 85
<   put_unaligned_le64((unsigned long long )arg->c_min_rate, __gu_p___33);
< #line 85
<   goto ldv_53747;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53747;
<   }
<   ldv_53747: 
< #line 85
<   tags = tags + 4U;
< #line 85
<   return (tags);
< }
< }
< #line 116
< static unsigned short *get_state_to_tags(struct drbd_conf *mdev , struct get_state *arg ,
<                                          unsigned short *tags ) ;
< #line 116 "include/linux/drbd_nl.h"
< static unsigned short *get_state_to_tags(struct drbd_conf *mdev , struct get_state *arg ,
<                                          unsigned short *tags ) 
< { 
<   void *__gu_p ;
<   unsigned short *tmp ;
<   void *__gu_p___0 ;
<   unsigned short *tmp___0 ;
<   void *__gu_p___1 ;
< 
<   {
< #line 114
<   tmp = tags;
< #line 114
<   tags = tags + 1;
< #line 114
<   __gu_p = (void *)tmp;
< #line 114
<   switch (2UL) {
<   case 1UL: 
< #line 114
<   *((u8 *)__gu_p) = 33U;
< #line 114
<   goto ldv_53835;
<   case 2UL: 
< #line 114
<   put_unaligned_le16(33, __gu_p);
< #line 114
<   goto ldv_53835;
<   case 4UL: 
< #line 114
<   put_unaligned_le32(33U, __gu_p);
< #line 114
<   goto ldv_53835;
<   case 8UL: 
< #line 114
<   put_unaligned_le64(33ULL, __gu_p);
< #line 114
<   goto ldv_53835;
<   default: 
< #line 114
<   __bad_unaligned_access_size();
< #line 114
<   goto ldv_53835;
<   }
<   ldv_53835: 
< #line 114
<   tmp___0 = tags;
< #line 114
<   tags = tags + 1;
< #line 114
<   __gu_p___0 = (void *)tmp___0;
< #line 114
<   switch (2UL) {
<   case 1UL: 
< #line 114
<   *((u8 *)__gu_p___0) = 4U;
< #line 114
<   goto ldv_53842;
<   case 2UL: 
< #line 114
<   put_unaligned_le16(4, __gu_p___0);
< #line 114
<   goto ldv_53842;
<   case 4UL: 
< #line 114
<   put_unaligned_le32(4U, __gu_p___0);
< #line 114
<   goto ldv_53842;
<   case 8UL: 
< #line 114
<   put_unaligned_le64(4ULL, __gu_p___0);
< #line 114
<   goto ldv_53842;
<   default: 
< #line 114
<   __bad_unaligned_access_size();
< #line 114
<   goto ldv_53842;
<   }
<   ldv_53842: 
< #line 114
<   __gu_p___1 = (void *)tags;
< #line 114
<   switch (4UL) {
<   case 1UL: 
< #line 114
<   *((u8 *)__gu_p___1) = (unsigned char )arg->state_i;
< #line 114
<   goto ldv_53849;
<   case 2UL: 
< #line 114
<   put_unaligned_le16((int )((unsigned short )arg->state_i), __gu_p___1);
< #line 114
<   goto ldv_53849;
<   case 4UL: 
< #line 114
<   put_unaligned_le32((unsigned int )arg->state_i, __gu_p___1);
< #line 114
<   goto ldv_53849;
<   case 8UL: 
< #line 114
<   put_unaligned_le64((unsigned long long )arg->state_i, __gu_p___1);
< #line 114
<   goto ldv_53849;
<   default: 
< #line 114
<   __bad_unaligned_access_size();
< #line 114
<   goto ldv_53849;
<   }
<   ldv_53849: 
< #line 114
<   tags = tags + 4U;
< #line 114
<   return (tags);
---
>   ldv_52883: 
> #line 319
>   snprintf(*(envp + 3UL), 20UL, "DRBD_PEER_AF=%s", afs);
> #line 320
>   return;
57602,57606c51888
< #line 206 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void drbd_bcast_ev_helper(struct drbd_conf *mdev , char *helper_name ) ;
< #line 207
< void drbd_nl_send_reply(struct cn_msg *req , int ret_code ) ;
< #line 209 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
---
> #line 322 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
57609a51892,51893
>   char __constr_expr_0[20] ;
>   char __constr_expr_1[60] ;
57611,57613d51894
<   char af[20U] ;
<   char ad[60U] ;
<   char *afs ;
57614a51896,51897
>   struct drbd_tconn *tconn ;
>   struct sib_info sib ;
57618,57619c51901
<   int tmp___1 ;
<   struct task_struct *tmp___2 ;
---
>   struct task_struct *tmp___1 ;
57622c51904,52064
< #line 211
---
> #line 324
>   __constr_expr_0[0] = (char)0;
> #line 324
>   __constr_expr_0[1] = (char)0;
> #line 324
>   __constr_expr_0[2] = (char)0;
> #line 324
>   __constr_expr_0[3] = (char)0;
> #line 324
>   __constr_expr_0[4] = (char)0;
> #line 324
>   __constr_expr_0[5] = (char)0;
> #line 324
>   __constr_expr_0[6] = (char)0;
> #line 324
>   __constr_expr_0[7] = (char)0;
> #line 324
>   __constr_expr_0[8] = (char)0;
> #line 324
>   __constr_expr_0[9] = (char)0;
> #line 324
>   __constr_expr_0[10] = (char)0;
> #line 324
>   __constr_expr_0[11] = (char)0;
> #line 324
>   __constr_expr_0[12] = (char)0;
> #line 324
>   __constr_expr_0[13] = (char)0;
> #line 324
>   __constr_expr_0[14] = (char)0;
> #line 324
>   __constr_expr_0[15] = (char)0;
> #line 324
>   __constr_expr_0[16] = (char)0;
> #line 324
>   __constr_expr_0[17] = (char)0;
> #line 324
>   __constr_expr_0[18] = (char)0;
> #line 324
>   __constr_expr_0[19] = (char)0;
> #line 324
>   __constr_expr_1[0] = (char)0;
> #line 324
>   __constr_expr_1[1] = (char)0;
> #line 324
>   __constr_expr_1[2] = (char)0;
> #line 324
>   __constr_expr_1[3] = (char)0;
> #line 324
>   __constr_expr_1[4] = (char)0;
> #line 324
>   __constr_expr_1[5] = (char)0;
> #line 324
>   __constr_expr_1[6] = (char)0;
> #line 324
>   __constr_expr_1[7] = (char)0;
> #line 324
>   __constr_expr_1[8] = (char)0;
> #line 324
>   __constr_expr_1[9] = (char)0;
> #line 324
>   __constr_expr_1[10] = (char)0;
> #line 324
>   __constr_expr_1[11] = (char)0;
> #line 324
>   __constr_expr_1[12] = (char)0;
> #line 324
>   __constr_expr_1[13] = (char)0;
> #line 324
>   __constr_expr_1[14] = (char)0;
> #line 324
>   __constr_expr_1[15] = (char)0;
> #line 324
>   __constr_expr_1[16] = (char)0;
> #line 324
>   __constr_expr_1[17] = (char)0;
> #line 324
>   __constr_expr_1[18] = (char)0;
> #line 324
>   __constr_expr_1[19] = (char)0;
> #line 324
>   __constr_expr_1[20] = (char)0;
> #line 324
>   __constr_expr_1[21] = (char)0;
> #line 324
>   __constr_expr_1[22] = (char)0;
> #line 324
>   __constr_expr_1[23] = (char)0;
> #line 324
>   __constr_expr_1[24] = (char)0;
> #line 324
>   __constr_expr_1[25] = (char)0;
> #line 324
>   __constr_expr_1[26] = (char)0;
> #line 324
>   __constr_expr_1[27] = (char)0;
> #line 324
>   __constr_expr_1[28] = (char)0;
> #line 324
>   __constr_expr_1[29] = (char)0;
> #line 324
>   __constr_expr_1[30] = (char)0;
> #line 324
>   __constr_expr_1[31] = (char)0;
> #line 324
>   __constr_expr_1[32] = (char)0;
> #line 324
>   __constr_expr_1[33] = (char)0;
> #line 324
>   __constr_expr_1[34] = (char)0;
> #line 324
>   __constr_expr_1[35] = (char)0;
> #line 324
>   __constr_expr_1[36] = (char)0;
> #line 324
>   __constr_expr_1[37] = (char)0;
> #line 324
>   __constr_expr_1[38] = (char)0;
> #line 324
>   __constr_expr_1[39] = (char)0;
> #line 324
>   __constr_expr_1[40] = (char)0;
> #line 324
>   __constr_expr_1[41] = (char)0;
> #line 324
>   __constr_expr_1[42] = (char)0;
> #line 324
>   __constr_expr_1[43] = (char)0;
> #line 324
>   __constr_expr_1[44] = (char)0;
> #line 324
>   __constr_expr_1[45] = (char)0;
> #line 324
>   __constr_expr_1[46] = (char)0;
> #line 324
>   __constr_expr_1[47] = (char)0;
> #line 324
>   __constr_expr_1[48] = (char)0;
> #line 324
>   __constr_expr_1[49] = (char)0;
> #line 324
>   __constr_expr_1[50] = (char)0;
> #line 324
>   __constr_expr_1[51] = (char)0;
> #line 324
>   __constr_expr_1[52] = (char)0;
> #line 324
>   __constr_expr_1[53] = (char)0;
> #line 324
>   __constr_expr_1[54] = (char)0;
> #line 324
>   __constr_expr_1[55] = (char)0;
> #line 324
>   __constr_expr_1[56] = (char)0;
> #line 324
>   __constr_expr_1[57] = (char)0;
> #line 324
>   __constr_expr_1[58] = (char)0;
> #line 324
>   __constr_expr_1[59] = (char)0;
> #line 324
57624c52066
< #line 211
---
> #line 324
57626c52068
< #line 211
---
> #line 324
57628,57632c52070,52074
< #line 211
<   envp[3] = 0;
< #line 211
<   envp[4] = 0;
< #line 211
---
> #line 324
>   envp[3] = (char *)(& __constr_expr_0);
> #line 324
>   envp[4] = (char *)(& __constr_expr_1);
> #line 324
57634c52076
< #line 219
---
> #line 331
57636c52078
< #line 219
---
> #line 331
57638c52080
< #line 219
---
> #line 331
57640c52082
< #line 219
---
> #line 331
57642c52084,52086
< #line 222
---
> #line 332
>   tconn = mdev->tconn;
> #line 336
57644,57647c52088,52091
< #line 222
<   if ((unsigned long )tmp == (unsigned long )mdev->worker.task) {
< #line 223
<     drbd_set_flag(mdev, CALLBACK_PENDING);
---
> #line 336
>   if ((unsigned long )tmp == (unsigned long )tconn->worker.task) {
> #line 337
>     set_bit(11U, (unsigned long volatile   *)(& tconn->flags));
57651c52095
< #line 225
---
> #line 339
57653c52097
< #line 225
---
> #line 339
57655,57693c52099,52101
< #line 227
<   tmp___1 = get_net_conf(mdev);
< #line 227
<   if (tmp___1 != 0) {
< #line 228
<     switch ((int )((struct sockaddr *)(& (mdev->net_conf)->peer_addr))->sa_family) {
<     case 10: 
< #line 230
<     afs = (char *)"ipv6";
< #line 231
<     snprintf((char *)(& ad), 60UL, "DRBD_PEER_ADDRESS=%pI6", & ((struct sockaddr_in6 *)(& (mdev->net_conf)->peer_addr))->sin6_addr);
< #line 233
<     goto ldv_54191;
<     case 2: 
< #line 235
<     afs = (char *)"ipv4";
< #line 236
<     snprintf((char *)(& ad), 60UL, "DRBD_PEER_ADDRESS=%pI4", & ((struct sockaddr_in *)(& (mdev->net_conf)->peer_addr))->sin_addr);
< #line 238
<     goto ldv_54191;
<     default: 
< #line 240
<     afs = (char *)"ssocks";
< #line 241
<     snprintf((char *)(& ad), 60UL, "DRBD_PEER_ADDRESS=%pI4", & ((struct sockaddr_in *)(& (mdev->net_conf)->peer_addr))->sin_addr);
<     }
<     ldv_54191: 
< #line 244
<     snprintf((char *)(& af), 20UL, "DRBD_PEER_AF=%s", afs);
< #line 245
<     envp[3] = (char *)(& af);
< #line 246
<     envp[4] = (char *)(& ad);
< #line 247
<     put_net_conf(mdev);
<   } else {
< 
<   }
< #line 252
---
> #line 340
>   setup_khelper_env(tconn, (char **)(& envp));
> #line 344
57695c52103
< #line 254
---
> #line 346
57698,57700c52106,52112
< #line 256
<   drbd_bcast_ev_helper(mdev, cmd);
< #line 257
---
> #line 347
>   sib.sib_reason = SIB_HELPER_PRE;
> #line 348
>   sib.ldv_51335.ldv_51330.helper_name = cmd;
> #line 349
>   drbd_bcast_event(mdev, (struct sib_info  const  *)(& sib));
> #line 350
57703c52115
< #line 258
---
> #line 351
57705c52117
< #line 259
---
> #line 352
57709c52121
< #line 263
---
> #line 356
57714,57719c52126,52137
< #line 267
<   tmp___2 = get_current();
< #line 267
<   if ((unsigned long )tmp___2 == (unsigned long )mdev->worker.task) {
< #line 268
<     drbd_clear_flag(mdev, CALLBACK_PENDING);
---
> #line 359
>   sib.sib_reason = SIB_HELPER_POST;
> #line 360
>   sib.ldv_51335.ldv_51330.helper_exit_code = (unsigned int )ret;
> #line 361
>   drbd_bcast_event(mdev, (struct sib_info  const  *)(& sib));
> #line 363
>   tmp___1 = get_current();
> #line 363
>   if ((unsigned long )tmp___1 == (unsigned long )tconn->worker.task) {
> #line 364
>     clear_bit(11, (unsigned long volatile   *)(& tconn->flags));
57723c52141
< #line 270
---
> #line 366
57725c52143
< #line 271
---
> #line 367
57730c52148
< #line 273
---
> #line 369
57734,57735c52152,52153
< #line 276 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< enum drbd_disk_state drbd_try_outdate_peer(struct drbd_conf *mdev ) 
---
> #line 372 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> int conn_khelper(struct drbd_tconn *tconn , char *cmd ) 
57737,57745c52155,52159
<   char *ex_to_string ;
<   int r ;
<   enum drbd_disk_state nps ;
<   enum drbd_fencing_p fp ;
<   int tmp ;
<   union drbd_state val ;
<   union drbd_state mask ;
<   union drbd_state val___0 ;
<   union drbd_state mask___0 ;
---
>   char *envp[6U] ;
>   char __constr_expr_0[20] ;
>   char __constr_expr_1[60] ;
>   char *argv[4U] ;
>   int ret ;
57748,57753c52162,52365
< #line 283
<   if (*((unsigned int *)mdev + 569UL) != 49152U) {
< #line 283
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mdev->state.pdsk == D_UNKNOWN ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared",
<             283);
---
> #line 374
>   __constr_expr_0[0] = (char)0;
> #line 374
>   __constr_expr_0[1] = (char)0;
> #line 374
>   __constr_expr_0[2] = (char)0;
> #line 374
>   __constr_expr_0[3] = (char)0;
> #line 374
>   __constr_expr_0[4] = (char)0;
> #line 374
>   __constr_expr_0[5] = (char)0;
> #line 374
>   __constr_expr_0[6] = (char)0;
> #line 374
>   __constr_expr_0[7] = (char)0;
> #line 374
>   __constr_expr_0[8] = (char)0;
> #line 374
>   __constr_expr_0[9] = (char)0;
> #line 374
>   __constr_expr_0[10] = (char)0;
> #line 374
>   __constr_expr_0[11] = (char)0;
> #line 374
>   __constr_expr_0[12] = (char)0;
> #line 374
>   __constr_expr_0[13] = (char)0;
> #line 374
>   __constr_expr_0[14] = (char)0;
> #line 374
>   __constr_expr_0[15] = (char)0;
> #line 374
>   __constr_expr_0[16] = (char)0;
> #line 374
>   __constr_expr_0[17] = (char)0;
> #line 374
>   __constr_expr_0[18] = (char)0;
> #line 374
>   __constr_expr_0[19] = (char)0;
> #line 374
>   __constr_expr_1[0] = (char)0;
> #line 374
>   __constr_expr_1[1] = (char)0;
> #line 374
>   __constr_expr_1[2] = (char)0;
> #line 374
>   __constr_expr_1[3] = (char)0;
> #line 374
>   __constr_expr_1[4] = (char)0;
> #line 374
>   __constr_expr_1[5] = (char)0;
> #line 374
>   __constr_expr_1[6] = (char)0;
> #line 374
>   __constr_expr_1[7] = (char)0;
> #line 374
>   __constr_expr_1[8] = (char)0;
> #line 374
>   __constr_expr_1[9] = (char)0;
> #line 374
>   __constr_expr_1[10] = (char)0;
> #line 374
>   __constr_expr_1[11] = (char)0;
> #line 374
>   __constr_expr_1[12] = (char)0;
> #line 374
>   __constr_expr_1[13] = (char)0;
> #line 374
>   __constr_expr_1[14] = (char)0;
> #line 374
>   __constr_expr_1[15] = (char)0;
> #line 374
>   __constr_expr_1[16] = (char)0;
> #line 374
>   __constr_expr_1[17] = (char)0;
> #line 374
>   __constr_expr_1[18] = (char)0;
> #line 374
>   __constr_expr_1[19] = (char)0;
> #line 374
>   __constr_expr_1[20] = (char)0;
> #line 374
>   __constr_expr_1[21] = (char)0;
> #line 374
>   __constr_expr_1[22] = (char)0;
> #line 374
>   __constr_expr_1[23] = (char)0;
> #line 374
>   __constr_expr_1[24] = (char)0;
> #line 374
>   __constr_expr_1[25] = (char)0;
> #line 374
>   __constr_expr_1[26] = (char)0;
> #line 374
>   __constr_expr_1[27] = (char)0;
> #line 374
>   __constr_expr_1[28] = (char)0;
> #line 374
>   __constr_expr_1[29] = (char)0;
> #line 374
>   __constr_expr_1[30] = (char)0;
> #line 374
>   __constr_expr_1[31] = (char)0;
> #line 374
>   __constr_expr_1[32] = (char)0;
> #line 374
>   __constr_expr_1[33] = (char)0;
> #line 374
>   __constr_expr_1[34] = (char)0;
> #line 374
>   __constr_expr_1[35] = (char)0;
> #line 374
>   __constr_expr_1[36] = (char)0;
> #line 374
>   __constr_expr_1[37] = (char)0;
> #line 374
>   __constr_expr_1[38] = (char)0;
> #line 374
>   __constr_expr_1[39] = (char)0;
> #line 374
>   __constr_expr_1[40] = (char)0;
> #line 374
>   __constr_expr_1[41] = (char)0;
> #line 374
>   __constr_expr_1[42] = (char)0;
> #line 374
>   __constr_expr_1[43] = (char)0;
> #line 374
>   __constr_expr_1[44] = (char)0;
> #line 374
>   __constr_expr_1[45] = (char)0;
> #line 374
>   __constr_expr_1[46] = (char)0;
> #line 374
>   __constr_expr_1[47] = (char)0;
> #line 374
>   __constr_expr_1[48] = (char)0;
> #line 374
>   __constr_expr_1[49] = (char)0;
> #line 374
>   __constr_expr_1[50] = (char)0;
> #line 374
>   __constr_expr_1[51] = (char)0;
> #line 374
>   __constr_expr_1[52] = (char)0;
> #line 374
>   __constr_expr_1[53] = (char)0;
> #line 374
>   __constr_expr_1[54] = (char)0;
> #line 374
>   __constr_expr_1[55] = (char)0;
> #line 374
>   __constr_expr_1[56] = (char)0;
> #line 374
>   __constr_expr_1[57] = (char)0;
> #line 374
>   __constr_expr_1[58] = (char)0;
> #line 374
>   __constr_expr_1[59] = (char)0;
> #line 374
>   envp[0] = (char *)"HOME=/";
> #line 374
>   envp[1] = (char *)"TERM=linux";
> #line 374
>   envp[2] = (char *)"PATH=/sbin:/usr/sbin:/bin:/usr/bin";
> #line 374
>   envp[3] = (char *)(& __constr_expr_0);
> #line 374
>   envp[4] = (char *)(& __constr_expr_1);
> #line 374
>   envp[5] = 0;
> #line 380
>   argv[0] = (char *)(& usermode_helper);
> #line 380
>   argv[1] = cmd;
> #line 380
>   argv[2] = tconn->name;
> #line 380
>   argv[3] = 0;
> #line 383
>   setup_khelper_env(tconn, (char **)(& envp));
> #line 384
>   conn_md_sync(tconn);
> #line 386
>   printk("\016d-con %s: helper command: %s %s %s\n", tconn->name, (char *)(& usermode_helper),
>          cmd, tconn->name);
> #line 389
>   ret = call_usermodehelper((char *)(& usermode_helper), (char **)(& argv), (char **)(& envp),
>                             2);
> #line 390
>   if (ret != 0) {
> #line 391
>     printk("\fd-con %s: helper command: %s %s %s exit code %u (0x%x)\n", tconn->name,
>            (char *)(& usermode_helper), cmd, tconn->name, (ret >> 8) & 255, ret);
>   } else {
> #line 395
>     printk("\016d-con %s: helper command: %s %s %s exit code %u (0x%x)\n", tconn->name,
>            (char *)(& usermode_helper), cmd, tconn->name, (ret >> 8) & 255, ret);
>   }
> #line 400
>   if (ret < 0) {
> #line 401
>     ret = 0;
57757,57763c52369,52434
< #line 285
<   tmp = _get_ldev_if_state(mdev, D_CONSISTENT);
< #line 285
<   if (tmp != 0) {
< #line 286
<     fp = (enum drbd_fencing_p )(mdev->ldev)->dc.fencing;
< #line 287
---
> #line 403
>   return (ret);
> }
> }
> #line 406 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> static enum drbd_fencing_p highest_fencing_policy(struct drbd_tconn *tconn ) 
> { 
>   enum drbd_fencing_p fp ;
>   struct drbd_conf *mdev ;
>   int vnr ;
>   void *tmp ;
>   enum drbd_fencing_p __max1 ;
>   enum drbd_fencing_p __max2 ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp___0 ;
>   int tmp___1 ;
>   int tmp___2 ;
>   void *tmp___3 ;
> 
>   {
> #line 408
>   fp = -1;
> #line 412
>   rcu_read_lock();
> #line 413
>   vnr = 0;
> #line 413
>   tmp = idr_get_next(& tconn->volumes, & vnr);
> #line 413
>   mdev = (struct drbd_conf *)tmp;
> #line 413
>   goto ldv_52920;
>   ldv_52919: 
> #line 414
>   tmp___2 = _get_ldev_if_state(mdev, D_CONSISTENT);
> #line 414
>   if (tmp___2 != 0) {
> #line 415
>     __max1 = fp;
> #line 415
>     _________p1 = *((struct disk_conf * volatile  *)(& (mdev->ldev)->disk_conf));
> #line 415
>     tmp___0 = debug_lockdep_rcu_enabled();
> #line 415
>     if (tmp___0 != 0 && ! __warned) {
> #line 415
>       tmp___1 = rcu_read_lock_held();
> #line 415
>       if (tmp___1 == 0 && 1) {
> #line 415
>         __warned = 1;
> #line 415
>         lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared",
>                                416, "suspicious rcu_dereference_check() usage");
>       } else {
> 
>       }
>     } else {
> 
>     }
> #line 415
>     __max2 = (enum drbd_fencing_p )_________p1->fencing;
> #line 415
>     fp = (enum drbd_fencing_p )((int )__max1 > (int )__max2 ? (int )__max1 : (int )__max2);
> #line 417
57766,57771c52437
< #line 289
<     dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Not fencing peer, I\'m not even Consistent myself.\n");
< #line 290
<     nps = (enum drbd_disk_state )mdev->state.ldv_39979.pdsk;
< #line 291
<     goto out;
---
> 
57773,57775c52439,52545
< #line 294
<   r = drbd_khelper(mdev, (char *)"fence-peer");
< #line 296
---
> #line 413
>   vnr = vnr + 1;
> #line 413
>   tmp___3 = idr_get_next(& tconn->volumes, & vnr);
> #line 413
>   mdev = (struct drbd_conf *)tmp___3;
>   ldv_52920: ;
> #line 413
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 414
>     goto ldv_52919;
>   } else {
> 
>   }
> #line 420
>   rcu_read_unlock();
> #line 422
>   return (fp);
> }
> }
> #line 425 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> bool conn_try_outdate_peer(struct drbd_tconn *tconn ) 
> { 
>   union drbd_state mask ;
>   union drbd_state val ;
>   enum drbd_fencing_p fp ;
>   char *ex_to_string ;
>   int r ;
>   enum drbd_disk_state tmp ;
>   int tmp___0 ;
>   enum drbd_disk_state tmp___1 ;
> 
>   {
> #line 427
>   mask.ldv_40604.role = (unsigned char)0;
> #line 427
>   mask.ldv_40604.peer = (unsigned char)0;
> #line 427
>   mask.ldv_40604.conn = (unsigned char)0;
> #line 427
>   mask.ldv_40604.disk = (unsigned char)0;
> #line 427
>   mask.ldv_40604.pdsk = (unsigned char)0;
> #line 427
>   mask.ldv_40604.susp = (unsigned char)0;
> #line 427
>   mask.ldv_40604.aftr_isp = (unsigned char)0;
> #line 427
>   mask.ldv_40604.peer_isp = (unsigned char)0;
> #line 427
>   mask.ldv_40604.user_isp = (unsigned char)0;
> #line 427
>   mask.ldv_40604.susp_nod = (unsigned char)0;
> #line 427
>   mask.ldv_40604.susp_fen = (unsigned char)0;
> #line 427
>   mask.ldv_40604._pad = (unsigned short)0;
> #line 428
>   val.ldv_40604.role = (unsigned char)0;
> #line 428
>   val.ldv_40604.peer = (unsigned char)0;
> #line 428
>   val.ldv_40604.conn = (unsigned char)0;
> #line 428
>   val.ldv_40604.disk = (unsigned char)0;
> #line 428
>   val.ldv_40604.pdsk = (unsigned char)0;
> #line 428
>   val.ldv_40604.susp = (unsigned char)0;
> #line 428
>   val.ldv_40604.aftr_isp = (unsigned char)0;
> #line 428
>   val.ldv_40604.peer_isp = (unsigned char)0;
> #line 428
>   val.ldv_40604.user_isp = (unsigned char)0;
> #line 428
>   val.ldv_40604.susp_nod = (unsigned char)0;
> #line 428
>   val.ldv_40604.susp_fen = (unsigned char)0;
> #line 428
>   val.ldv_40604._pad = (unsigned short)0;
> #line 433
>   if ((unsigned int )tconn->cstate > 8U) {
> #line 434
>     printk("\vd-con %s: Expected cstate < C_WF_REPORT_PARAMS\n", tconn->name);
> #line 435
>     return (0);
>   } else {
> 
>   }
> #line 438
>   fp = highest_fencing_policy(tconn);
> #line 439
>   switch ((int )fp) {
>   case -1: 
> #line 441
>   printk("\fd-con %s: Not fencing peer, I\'m not even Consistent myself.\n", tconn->name);
> #line 442
>   goto out;
>   case 0: ;
> #line 444
>   return (1);
>   default: ;
>   }
> #line 448
>   r = conn_khelper(tconn, (char *)"fence-peer");
> #line 450
57778c52548
< #line 298
---
> #line 452
57780,57783c52550,52555
< #line 299
<   nps = D_INCONSISTENT;
< #line 300
<   goto ldv_54203;
---
> #line 453
>   mask.ldv_40604.pdsk = 15U;
> #line 454
>   val.ldv_40604.pdsk = 4U;
> #line 455
>   goto ldv_52935;
57785c52557
< #line 302
---
> #line 457
57787,57794c52559,52570
< #line 303
<   nps = D_OUTDATED;
< #line 304
<   goto ldv_54203;
<   case 5: ;
< #line 306
<   if ((unsigned int )*((unsigned char *)mdev + 2277UL) == 16U) {
< #line 308
---
> #line 458
>   mask.ldv_40604.pdsk = 15U;
> #line 459
>   val.ldv_40604.pdsk = 5U;
> #line 460
>   goto ldv_52935;
>   case 5: 
> #line 462
>   tmp = conn_highest_disk(tconn);
> #line 462
>   if ((unsigned int )tmp == 8U) {
> #line 464
57796,57797c52572,52575
< #line 309
<     nps = D_OUTDATED;
---
> #line 465
>     mask.ldv_40604.pdsk = 15U;
> #line 466
>     val.ldv_40604.pdsk = 5U;
57799c52577
< #line 311
---
> #line 468
57801,57802d52578
< #line 312
<     nps = (enum drbd_disk_state )mdev->state.ldv_39979.pdsk;
57804,57805c52580,52581
< #line 314
<   goto ldv_54203;
---
> #line 470
>   goto ldv_52935;
57807c52583
< #line 318
---
> #line 474
57809,57824c52585,52592
< #line 319
<   dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Peer is primary, outdating myself.\n");
< #line 320
<   nps = D_UNKNOWN;
< #line 321
<   val.i = 0U;
< #line 321
<   val.ldv_39979.disk = 5U;
< #line 321
<   mask.i = 0U;
< #line 321
<   mask.ldv_39979.disk = 15U;
< #line 321
<   _drbd_request_state(mdev, mask, val, CS_WAIT_COMPLETE);
< #line 322
<   goto ldv_54203;
---
> #line 475
>   printk("\fd-con %s: Peer is primary, outdating myself.\n", tconn->name);
> #line 476
>   mask.ldv_40604.disk = 15U;
> #line 477
>   val.ldv_40604.disk = 5U;
> #line 478
>   goto ldv_52935;
57826,57829c52594,52597
< #line 324
<   if ((unsigned int )fp != 2U) {
< #line 325
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "fence-peer() = 7 && fencing != Stonith !!!\n");
---
> #line 480
>   if ((int )fp != 2) {
> #line 481
>     printk("\vd-con %s: fence-peer() = 7 && fencing != Stonith !!!\n", tconn->name);
57833c52601
< #line 326
---
> #line 482
57835,57838c52603,52608
< #line 327
<   nps = D_OUTDATED;
< #line 328
<   goto ldv_54203;
---
> #line 483
>   mask.ldv_40604.pdsk = 15U;
> #line 484
>   val.ldv_40604.pdsk = 5U;
> #line 485
>   goto ldv_52935;
57840,57846c52610,52613
< #line 331
<   nps = D_UNKNOWN;
< #line 332
<   dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "fence-peer helper broken, returned %d\n",
<           (r >> 8) & 255);
< #line 333
<   return (nps);
---
> #line 488
>   printk("\vd-con %s: fence-peer helper broken, returned %d\n", tconn->name, (r >> 8) & 255);
> #line 489
>   return (0);
57848,57864c52615,52632
<   ldv_54203: 
< #line 336
<   _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "fence-peer helper returned %d (%s)\n",
<             (r >> 8) & 255, ex_to_string);
<   out: ;
< #line 340
<   if ((unsigned int )*((unsigned char *)mdev + 2278UL) != 0U && (unsigned int )nps > 5U) {
< #line 343
<     val___0.i = 0U;
< #line 343
<     val___0.ldv_39979.susp_fen = 0U;
< #line 343
<     mask___0.i = 0U;
< #line 343
<     mask___0.ldv_39979.susp_fen = 1U;
< #line 343
<     _drbd_request_state(mdev, mask___0, val___0, CS_VERBOSE);
---
>   ldv_52935: 
> #line 492
>   printk("\016d-con %s: fence-peer helper returned %d (%s)\n", tconn->name, (r >> 8) & 255,
>          ex_to_string);
>   out: 
> #line 501
>   spin_lock_irq(& tconn->req_lock);
> #line 502
>   if ((unsigned int )tconn->cstate <= 8U) {
> #line 502
>     tmp___0 = constant_test_bit(10U, (unsigned long const volatile   *)(& tconn->flags));
> #line 502
>     if (tmp___0 == 0) {
> #line 503
>       _conn_request_state(tconn, mask, val, CS_VERBOSE);
>     } else {
> 
>     }
57868,57869c52636,52641
< #line 346
<   return (nps);
---
> #line 504
>   spin_unlock_irq(& tconn->req_lock);
> #line 506
>   tmp___1 = conn_highest_pdsk(tconn);
> #line 506
>   return ((unsigned int )tmp___1 <= 5U);
57872c52644
< #line 349 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
---
> #line 509 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
57875,57878c52647
<   struct drbd_conf *mdev ;
<   enum drbd_disk_state nps ;
<   union drbd_state ns ;
<   int tmp ;
---
>   struct drbd_tconn *tconn ;
57881,57907c52650,52656
< #line 351
<   mdev = (struct drbd_conf *)data;
< #line 355
<   nps = drbd_try_outdate_peer(mdev);
< #line 368
<   spin_lock_irq(& mdev->req_lock);
< #line 369
<   ns = mdev->state;
< #line 370
<   if ((int )ns.ldv_39979.conn <= 8) {
< #line 370
<     tmp = drbd_test_flag(mdev, STATE_SENT);
< #line 370
<     if (tmp == 0) {
< #line 371
<       ns.ldv_39979.pdsk = (unsigned char )nps;
< #line 372
<       _drbd_set_state(mdev, ns, CS_VERBOSE, 0);
<     } else {
< 
<     }
<   } else {
< 
<   }
< #line 374
<   spin_unlock_irq(& mdev->req_lock);
< #line 376
---
> #line 511
>   tconn = (struct drbd_tconn *)data;
> #line 513
>   conn_try_outdate_peer(tconn);
> #line 515
>   kref_put(& tconn->kref, & conn_destroy);
> #line 516
57911,57912c52660,52661
< #line 379 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void drbd_try_outdate_peer_async(struct drbd_conf *mdev ) 
---
> #line 519 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> void conn_try_outdate_peer_async(struct drbd_tconn *tconn ) 
57916,57917c52665,52666
<   unsigned int tmp ;
<   struct task_struct *tmp___0 ;
---
>   struct task_struct *tmp ;
>   long tmp___0 ;
57919d52667
<   long tmp___2 ;
57922,57933c52670,52680
< #line 383
<   tmp = mdev_to_minor(mdev);
< #line 383
<   tmp___0 = kthread_create_on_node(& _try_outdate_peer_async, (void *)mdev, -1, "drbd%d_a_helper",
<                                    tmp);
< #line 383
<   __k = tmp___0;
< #line 383
<   tmp___1 = IS_ERR((void const   *)__k);
< #line 383
<   if (tmp___1 == 0L) {
< #line 383
---
> #line 523
>   kref_get(& tconn->kref);
> #line 524
>   tmp = kthread_create_on_node(& _try_outdate_peer_async, (void *)tconn, -1, "drbd_async_h");
> #line 524
>   __k = tmp;
> #line 524
>   tmp___0 = IS_ERR((void const   *)__k);
> #line 524
>   if (tmp___0 == 0L) {
> #line 524
57938c52685
< #line 383
---
> #line 524
57940,57945c52687,52694
< #line 384
<   tmp___2 = IS_ERR((void const   *)opa);
< #line 384
<   if (tmp___2 != 0L) {
< #line 385
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "out of mem, failed to invoke fence-peer helper\n");
---
> #line 525
>   tmp___1 = IS_ERR((void const   *)opa);
> #line 525
>   if (tmp___1 != 0L) {
> #line 526
>     printk("\vd-con %s: out of mem, failed to invoke fence-peer helper\n", tconn->name);
> #line 527
>     kref_put(& tconn->kref, & conn_destroy);
57949c52698
< #line 386
---
> #line 529
57953c52702
< #line 389 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
---
> #line 532 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
57958a52708
>   struct net_conf *nc ;
57963,57967c52713,52718
<   enum drbd_disk_state nps ;
<   int tmp ;
<   int tmp___0 ;
<   wait_queue_t __wait ;
<   struct task_struct *tmp___1 ;
---
>   bool tmp ;
>   bool tmp___0 ;
>   int tmp___1 ;
>   int timeo ;
>   struct net_conf *_________p1 ;
>   bool __warned ;
57971a52723,52727
>   wait_queue_t __wait ;
>   struct task_struct *tmp___6 ;
>   int tmp___7 ;
>   int tmp___8 ;
>   int tmp___9 ;
57974c52730
< #line 391
---
> #line 534
57976c52732
< #line 392
---
> #line 535
57978c52734
< #line 393
---
> #line 537
57980c52736
< #line 394
---
> #line 538
57982c52738
< #line 398
---
> #line 541
57984,57985c52740,52741
< #line 399
<     request_ping(mdev);
---
> #line 542
>     request_ping(mdev->tconn);
57989,57991c52745,52747
< #line 401
<   ldv_mutex_lock_301(& mdev->state_mutex);
< #line 403
---
> #line 544
>   mutex_lock_nested(mdev->state_mutex, 0U);
> #line 546
57993,57995c52749,52751
< #line 403
<   mask.ldv_39979.role = 3U;
< #line 404
---
> #line 546
>   mask.ldv_40604.role = 3U;
> #line 547
57997,58002c52753,52758
< #line 404
<   val.ldv_39979.role = (unsigned char )new_role;
< #line 406
<   goto ldv_54241;
<   ldv_54244: 
< #line 407
---
> #line 547
>   val.ldv_40604.role = (unsigned char )new_role;
> #line 549
>   goto ldv_52963;
>   ldv_52970: 
> #line 550
58004c52760
< #line 411
---
> #line 554
58006,58011c52762,52767
< #line 412
<     val.ldv_39979.pdsk = 0U;
< #line 413
<     mask.ldv_39979.pdsk = 0U;
< #line 414
<     goto ldv_54241;
---
> #line 555
>     val.ldv_40604.pdsk = 0U;
> #line 556
>     mask.ldv_40604.pdsk = 0U;
> #line 557
>     goto ldv_52963;
58015,58021c52771,52777
< #line 417
<   if (((int )rv == -2 && force != 0) && ((int )mdev->state.ldv_39979.disk <= 7 && (int )mdev->state.ldv_39979.disk > 3)) {
< #line 420
<     mask.ldv_39979.disk = 15U;
< #line 421
<     val.ldv_39979.disk = 8U;
< #line 422
---
> #line 560
>   if (((int )rv == -2 && force != 0) && ((int )mdev->state.ldv_50103.disk <= 7 && (int )mdev->state.ldv_50103.disk > 3)) {
> #line 563
>     mask.ldv_40604.disk = 15U;
> #line 564
>     val.ldv_40604.disk = 8U;
> #line 565
58023,58024c52779,52780
< #line 423
<     goto ldv_54241;
---
> #line 566
>     goto ldv_52963;
58028,58032c52784,52788
< #line 426
<   if (((int )rv == -2 && (unsigned int )*((unsigned char *)mdev + 2277UL) == 14U) && *((unsigned int *)(& mask) + 0UL) == 0U) {
< #line 428
<     if (*((unsigned int *)mdev + 569UL) != 49152U) {
< #line 428
---
> #line 569
>   if (((int )rv == -2 && (unsigned int )*((unsigned char *)mdev + 749UL) == 14U) && *((unsigned int *)(& mask) + 0UL) == 0U) {
> #line 571
>     if (*((unsigned int *)mdev + 187UL) != 49152U) {
> #line 571
58034,58035c52790,52791
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared",
<               428);
---
>               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared",
>               571);
58039,58046c52795,52802
< #line 429
<     nps = drbd_try_outdate_peer(mdev);
< #line 431
<     if ((unsigned int )nps == 5U || (unsigned int )nps == 4U) {
< #line 432
<       val.ldv_39979.disk = 8U;
< #line 433
<       mask.ldv_39979.disk = 15U;
---
> #line 573
>     tmp = conn_try_outdate_peer(mdev->tconn);
> #line 573
>     if ((int )tmp) {
> #line 574
>       val.ldv_40604.disk = 8U;
> #line 575
>       mask.ldv_40604.disk = 15U;
58050,58055c52806,52807
< #line 436
<     val.ldv_39979.pdsk = (unsigned char )nps;
< #line 437
<     mask.ldv_39979.pdsk = 15U;
< #line 439
<     goto ldv_54241;
---
> #line 577
>     goto ldv_52963;
58059c52811
< #line 442
---
> #line 580
58061,58062c52813,52814
< #line 443
<     goto fail;
---
> #line 581
>     goto out;
58066c52818
< #line 444
---
> #line 582
58068,58072c52820,52832
< #line 445
<     nps = drbd_try_outdate_peer(mdev);
< #line 447
<     if (force != 0 && (unsigned int )nps > 5U) {
< #line 448
---
> #line 583
>     tmp___0 = conn_try_outdate_peer(mdev->tconn);
> #line 583
>     if (tmp___0) {
> #line 583
>       tmp___1 = 0;
>     } else {
> #line 583
>       tmp___1 = 1;
>     }
> #line 583
>     if (tmp___1 && force != 0) {
> #line 584
58074,58075c52834,52837
< #line 449
<       nps = D_OUTDATED;
---
> #line 585
>       mask.ldv_40604.pdsk = 15U;
> #line 586
>       val.ldv_40604.pdsk = 5U;
58079,58084c52841,52842
< #line 452
<     mask.ldv_39979.pdsk = 15U;
< #line 453
<     val.ldv_39979.pdsk = (unsigned char )nps;
< #line 455
<     goto ldv_54241;
---
> #line 589
>     goto ldv_52963;
58088c52846
< #line 457
---
> #line 591
58090,58092c52848,52879
< #line 460
<     schedule_timeout_interruptible((long )((((mdev->net_conf)->ping_timeo + 1) * 250) / 10));
< #line 461
---
> #line 595
>     rcu_read_lock();
> #line 596
>     _________p1 = *((struct net_conf * volatile  *)(& (mdev->tconn)->net_conf));
> #line 596
>     tmp___2 = debug_lockdep_rcu_enabled();
> #line 596
>     if (tmp___2 != 0 && ! __warned) {
> #line 596
>       tmp___3 = rcu_read_lock_held();
> #line 596
>       if (tmp___3 == 0 && 1) {
> #line 596
>         __warned = 1;
> #line 596
>         lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared",
>                                596, "suspicious rcu_dereference_check() usage");
>       } else {
> 
>       }
>     } else {
> 
>     }
> #line 596
>     nc = _________p1;
> #line 597
>     timeo = (unsigned long )nc != (unsigned long )((struct net_conf *)0) ? (int )(((nc->ping_timeo + 1U) * 250U) / 10U) : 1;
> #line 598
>     rcu_read_unlock();
> #line 599
>     schedule_timeout_interruptible((long )timeo);
> #line 600
58094c52881
< #line 462
---
> #line 601
58099,58100c52886,52887
< #line 463
<     goto ldv_54241;
---
> #line 602
>     goto ldv_52963;
58104c52891
< #line 465
---
> #line 604
58106c52893
< #line 466
---
> #line 605
58108c52895
< #line 468
---
> #line 607
58110,58111c52897,52898
< #line 469
<       goto fail;
---
> #line 608
>       goto out;
58118,58123c52905,52910
< #line 471
<   goto ldv_54243;
<   ldv_54241: 
< #line 406
<   tmp = try;
< #line 406
---
> #line 610
>   goto ldv_52969;
>   ldv_52963: 
> #line 549
>   tmp___4 = try;
> #line 549
58125,58128c52912,52915
< #line 406
<   if (tmp < max_tries) {
< #line 407
<     goto ldv_54244;
---
> #line 549
>   if (tmp___4 < max_tries) {
> #line 550
>     goto ldv_52970;
58132,58133c52919,52920
<   ldv_54243: ;
< #line 474
---
>   ldv_52969: ;
> #line 613
58135,58136c52922,52923
< #line 475
<     goto fail;
---
> #line 614
>     goto out;
58140c52927
< #line 477
---
> #line 616
58142c52929
< #line 478
---
> #line 617
58147,58152c52934,52939
< #line 481
<   tmp___0 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
< #line 481
<   if (tmp___0 == 0) {
< #line 481
<     goto ldv_54245;
---
> #line 620
>   tmp___5 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
> #line 620
>   if (tmp___5 == 0) {
> #line 620
>     goto ldv_52971;
58156,58158c52943,52945
< #line 481
<   tmp___1 = get_current();
< #line 481
---
> #line 620
>   tmp___6 = get_current();
> #line 620
58160,58162c52947,52949
< #line 481
<   __wait.private = (void *)tmp___1;
< #line 481
---
> #line 620
>   __wait.private = (void *)tmp___6;
> #line 620
58164c52951
< #line 481
---
> #line 620
58166c52953
< #line 481
---
> #line 620
58168,58169c52955,52956
<   ldv_54248: 
< #line 481
---
>   ldv_52974: 
> #line 620
58171,58176c52958,52963
< #line 481
<   tmp___2 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
< #line 481
<   if (tmp___2 == 0) {
< #line 481
<     goto ldv_54247;
---
> #line 620
>   tmp___7 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
> #line 620
>   if (tmp___7 == 0) {
> #line 620
>     goto ldv_52973;
58180c52967
< #line 481
---
> #line 620
58182,58185c52969,52972
< #line 481
<   goto ldv_54248;
<   ldv_54247: 
< #line 481
---
> #line 620
>   goto ldv_52974;
>   ldv_52973: 
> #line 620
58187,58188c52974,52975
<   ldv_54245: ;
< #line 483
---
>   ldv_52971: ;
> #line 624
58190c52977
< #line 484
---
> #line 625
58192,58196c52979,52983
< #line 485
<     tmp___3 = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 485
<     if (tmp___3 != 0) {
< #line 486
---
> #line 626
>     tmp___8 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 626
>     if (tmp___8 != 0) {
> #line 627
58198c52985
< #line 487
---
> #line 628
58204,58211c52991,52998
< #line 490
<     tmp___4 = get_net_conf(mdev);
< #line 490
<     if (tmp___4 != 0) {
< #line 491
<       (mdev->net_conf)->want_lose = 0U;
< #line 492
<       put_net_conf(mdev);
---
> #line 631
>     mutex_lock_nested(& (mdev->tconn)->conf_update, 0U);
> #line 632
>     nc = (mdev->tconn)->net_conf;
> #line 633
>     if ((unsigned long )nc != (unsigned long )((struct net_conf *)0)) {
> #line 634
>       nc->discard_my_data = 0;
58215c53002,53004
< #line 494
---
> #line 635
>     mutex_unlock(& (mdev->tconn)->conf_update);
> #line 637
58217,58223c53006,53012
< #line 495
<     tmp___5 = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 495
<     if (tmp___5 != 0) {
< #line 496
<       if ((((int )mdev->state.ldv_39979.conn <= 9 || (int )mdev->state.ldv_39979.pdsk <= 2) && (mdev->ldev)->md.uuid[1] == 0ULL) || forced != 0) {
< #line 499
---
> #line 638
>     tmp___9 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 638
>     if (tmp___9 != 0) {
> #line 639
>       if ((((int )mdev->state.ldv_50103.conn <= 9 || (int )mdev->state.ldv_50103.pdsk <= 2) && (mdev->ldev)->md.uuid[1] == 0ULL) || forced != 0) {
> #line 642
58228c53017
< #line 501
---
> #line 644
58230c53019
< #line 502
---
> #line 645
58236,58238c53025,53027
< #line 509
<   if ((int )mdev->state.ldv_39979.conn > 8) {
< #line 511
---
> #line 652
>   if ((int )mdev->state.ldv_50103.conn > 8) {
> #line 654
58240c53029
< #line 512
---
> #line 655
58245c53034
< #line 513
---
> #line 656
58250c53039
< #line 516
---
> #line 659
58252c53041
< #line 518
---
> #line 661
58254,58257c53043,53046
<   fail: 
< #line 520
<   ldv_mutex_unlock_302(& mdev->state_mutex);
< #line 521
---
>   out: 
> #line 663
>   mutex_unlock(mdev->state_mutex);
> #line 664
58261,58262c53050,53051
< #line 524 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static struct drbd_conf *ensure_mdev(int minor , int create ) 
---
> #line 667 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> static char const   *from_attrs_err_to_txt(int err ) 
58264,58265c53053
<   struct drbd_conf *mdev ;
<   struct gendisk *disk ;
---
> 
58268,58271c53056,53079
< #line 528
<   if ((unsigned int )minor >= minor_count) {
< #line 529
<     return (0);
---
> #line 669
>   return (err != -42 ? (err != -95 ? (err == -17 ? "can not change invariant setting" : "invalid attribute value") : "unknown mandatory attribute") : "required attribute missing");
> }
> }
> #line 675 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_set_role(struct sk_buff *skb , struct genl_info *info ) 
> { 
>   struct set_role_parms parms ;
>   int err ;
>   enum drbd_ret_code retcode ;
>   int tmp ;
>   char const   *tmp___0 ;
>   enum drbd_state_rv tmp___1 ;
>   enum drbd_state_rv tmp___2 ;
> 
>   {
> #line 681
>   tmp = drbd_adm_prepare(skb, info, 1U);
> #line 681
>   retcode = (enum drbd_ret_code )tmp;
> #line 682
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 683
>     return ((int )retcode);
58275,58293c53083,53087
< #line 531
<   mdev = minor_to_mdev((unsigned int )minor);
< #line 533
<   if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0) && create != 0) {
< #line 534
<     disk = 0;
< #line 535
<     mdev = drbd_new_device((unsigned int )minor);
< #line 537
<     spin_lock_irq(& drbd_pp_lock);
< #line 538
<     if ((unsigned long )*(minor_table + (unsigned long )minor) == (unsigned long )((struct drbd_conf *)0)) {
< #line 539
<       *(minor_table + (unsigned long )minor) = mdev;
< #line 540
<       disk = mdev->vdisk;
< #line 541
<       mdev = 0;
<     } else {
---
> #line 684
>   if ((unsigned int )retcode != 101U) {
> #line 685
>     goto out;
>   } else {
58295,58301c53089,53105
<     }
< #line 543
<     spin_unlock_irq(& drbd_pp_lock);
< #line 545
<     if ((unsigned long )disk != (unsigned long )((struct gendisk *)0)) {
< #line 548
<       add_disk(disk);
---
>   }
> #line 687
>   memset((void *)(& parms), 0, 1UL);
> #line 688
>   if ((unsigned long )*(info->attrs + 6UL) != (unsigned long )((struct nlattr *)0)) {
> #line 689
>     err = set_role_parms_from_attrs(& parms, info);
> #line 690
>     if (err != 0) {
> #line 691
>       retcode = ERR_MANDATORY_TAG;
> #line 692
>       tmp___0 = from_attrs_err_to_txt(err);
> #line 692
>       drbd_msg_put_info(tmp___0);
> #line 693
>       goto out;
58303,58304c53107
< #line 550
<       drbd_free_mdev(mdev);
---
> 
58306,58307d53108
< #line 552
<     mdev = minor_to_mdev((unsigned int )minor);
58311,58333c53112,53117
< #line 555
<   return (mdev);
< }
< }
< #line 558 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static int drbd_nl_primary(struct drbd_conf *mdev , struct drbd_nl_cfg_req *nlp ,
<                            struct drbd_nl_cfg_reply *reply ) 
< { 
<   struct primary primary_args ;
<   int tmp ;
<   enum drbd_state_rv tmp___0 ;
< 
<   {
< #line 563
<   memset((void *)(& primary_args), 0, 4UL);
< #line 564
<   tmp = primary_from_tags(mdev, (unsigned short *)(& nlp->tag_list), & primary_args);
< #line 564
<   if (tmp == 0) {
< #line 565
<     reply->ret_code = 126;
< #line 566
<     return (0);
---
> #line 697
>   if ((unsigned int )(info->genlhdr)->cmd == 14U) {
> #line 698
>     tmp___1 = drbd_set_role(adm_ctx.mdev, R_PRIMARY, (int )parms.assume_uptodate);
> #line 698
>     retcode = (enum drbd_ret_code )tmp___1;
58335c53119,53122
< 
---
> #line 700
>     tmp___2 = drbd_set_role(adm_ctx.mdev, R_SECONDARY, 0);
> #line 700
>     retcode = (enum drbd_ret_code )tmp___2;
58337,58356c53124,53127
< #line 569
<   tmp___0 = drbd_set_role(mdev, R_PRIMARY, (int )primary_args.primary_force);
< #line 569
<   reply->ret_code = (int )tmp___0;
< #line 572
<   return (0);
< }
< }
< #line 575 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static int drbd_nl_secondary(struct drbd_conf *mdev , struct drbd_nl_cfg_req *nlp ,
<                              struct drbd_nl_cfg_reply *reply ) 
< { 
<   enum drbd_state_rv tmp ;
< 
<   {
< #line 578
<   tmp = drbd_set_role(mdev, R_SECONDARY, 0);
< #line 578
<   reply->ret_code = (int )tmp;
< #line 580
---
>   out: 
> #line 702
>   drbd_adm_finish(info, (int )retcode);
> #line 703
58360c53131
< #line 585 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
---
> #line 708 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
58364,58365c53135,53139
<   sector_t tmp ;
<   sector_t tmp___0 ;
---
>   int meta_dev_idx ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
58366a53141,53142
>   sector_t tmp___2 ;
>   sector_t tmp___3 ;
58369c53145
< #line 588
---
> #line 711
58371,58372c53147,53173
< #line 589
<   switch (bdev->dc.meta_dev_idx) {
---
> #line 714
>   rcu_read_lock();
> #line 715
>   _________p1 = *((struct disk_conf * volatile  *)(& bdev->disk_conf));
> #line 715
>   tmp = debug_lockdep_rcu_enabled();
> #line 715
>   if (tmp != 0 && ! __warned) {
> #line 715
>     tmp___0 = rcu_read_lock_held();
> #line 715
>     if (tmp___0 == 0 && 1) {
> #line 715
>       __warned = 1;
> #line 715
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared",
>                              715, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 715
>   meta_dev_idx = _________p1->meta_dev_idx;
> #line 717
>   switch (meta_dev_idx) {
58374c53175
< #line 592
---
> #line 720
58376,58380c53177,53181
< #line 593
<   tmp = drbd_md_ss__(mdev, bdev);
< #line 593
<   bdev->md.md_offset = (u64 )tmp;
< #line 594
---
> #line 721
>   tmp___1 = drbd_md_ss__(mdev, bdev);
> #line 721
>   bdev->md.md_offset = (u64 )tmp___1;
> #line 722
58382c53183
< #line 595
---
> #line 723
58384,58385c53185,53186
< #line 596
<   goto ldv_54272;
---
> #line 724
>   goto ldv_52996;
58387,58391c53188,53192
< #line 599
<   tmp___0 = drbd_get_capacity(bdev->md_bdev);
< #line 599
<   bdev->md.md_size_sect = (u32 )tmp___0;
< #line 600
---
> #line 727
>   tmp___2 = drbd_get_capacity(bdev->md_bdev);
> #line 727
>   bdev->md.md_size_sect = (u32 )tmp___2;
> #line 728
58393c53194
< #line 601
---
> #line 729
58395c53196
< #line 602
---
> #line 730
58397,58398c53198,53199
< #line 603
<   goto ldv_54272;
---
> #line 731
>   goto ldv_52996;
58401,58405c53202,53206
< #line 606
<   tmp___1 = drbd_md_ss__(mdev, bdev);
< #line 606
<   bdev->md.md_offset = (u64 )tmp___1;
< #line 608
---
> #line 734
>   tmp___3 = drbd_md_ss__(mdev, bdev);
> #line 734
>   bdev->md.md_offset = (u64 )tmp___3;
> #line 736
58407c53208
< #line 610
---
> #line 738
58409c53210
< #line 611
---
> #line 739
58411c53212
< #line 612
---
> #line 740
58413c53214
< #line 613
---
> #line 741
58415c53216
< #line 617
---
> #line 745
58417c53218
< #line 619
---
> #line 747
58419c53220
< #line 621
---
> #line 749
58421,58422c53222,53223
< #line 622
<   goto ldv_54272;
---
> #line 750
>   goto ldv_52996;
58424,58425c53225,53228
<   ldv_54272: ;
< #line 625
---
>   ldv_52996: 
> #line 752
>   rcu_read_unlock();
> #line 753
58429c53232
< #line 627 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
---
> #line 756 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
58436c53239
< #line 631
---
> #line 760
58438c53241
< #line 631
---
> #line 760
58440c53243
< #line 631
---
> #line 760
58442c53245
< #line 631
---
> #line 760
58444c53247
< #line 631
---
> #line 760
58446c53249
< #line 631
---
> #line 760
58448c53251
< #line 632
---
> #line 761
58450,58453c53253,53256
< #line 633
<   goto ldv_54283;
<   ldv_54282: 
< #line 635
---
> #line 762
>   goto ldv_53007;
>   ldv_53006: 
> #line 764
58455c53258
< #line 636
---
> #line 765
58457,58458c53260,53261
<   ldv_54283: ;
< #line 633
---
>   ldv_53007: ;
> #line 762
58460,58461c53263,53264
< #line 634
<     goto ldv_54282;
---
> #line 763
>     goto ldv_53006;
58465c53268
< #line 638
---
> #line 767
58467c53270
< #line 640
---
> #line 769
58471c53274
< #line 656 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
---
> #line 791 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
58481,58485c53284,53288
< #line 658
<   drbd_set_flag(mdev, SUSPEND_IO);
< #line 659
<   tmp = is_susp(mdev->state);
< #line 659
---
> #line 793
>   set_bit(8U, (unsigned long volatile   *)(& mdev->flags));
> #line 794
>   tmp = drbd_suspended(mdev);
> #line 794
58487c53290
< #line 660
---
> #line 795
58492c53295
< #line 661
---
> #line 796
58494c53297
< #line 661
---
> #line 796
58496,58497c53299,53300
< #line 661
<     goto ldv_54288;
---
> #line 796
>     goto ldv_53012;
58501c53304
< #line 661
---
> #line 796
58503c53306
< #line 661
---
> #line 796
58505c53308
< #line 661
---
> #line 796
58507c53310
< #line 661
---
> #line 796
58509c53312
< #line 661
---
> #line 796
58511c53314
< #line 661
---
> #line 796
58513,58514c53316,53317
<   ldv_54291: 
< #line 661
---
>   ldv_53015: 
> #line 796
58516c53319
< #line 661
---
> #line 796
58518c53321
< #line 661
---
> #line 796
58520,58521c53323,53324
< #line 661
<     goto ldv_54290;
---
> #line 796
>     goto ldv_53014;
58525c53328
< #line 661
---
> #line 796
58527,58530c53330,53333
< #line 661
<   goto ldv_54291;
<   ldv_54290: 
< #line 661
---
> #line 796
>   goto ldv_53015;
>   ldv_53014: 
> #line 796
58532,58533c53335,53336
<   ldv_54288: ;
< #line 664
---
>   ldv_53012: ;
> #line 799
58537c53340
< #line 664 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
---
> #line 799 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
58543,58545c53346,53348
< #line 666
<   drbd_clear_flag(mdev, SUSPEND_IO);
< #line 667
---
> #line 801
>   clear_bit(8, (unsigned long volatile   *)(& mdev->flags));
> #line 802
58547c53350
< #line 668
---
> #line 803
58551c53354
< #line 677 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
---
> #line 812 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
58556a53360
>   sector_t u_size ;
58565a53370,53373
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp___2 ;
>   int tmp___3 ;
58567,58571c53375,53377
<   sector_t tmp___2 ;
<   long tmp___3 ;
<   char *tmp___4 ;
<   sector_t tmp___5 ;
<   sector_t tmp___6 ;
---
>   sector_t tmp___4 ;
>   long tmp___5 ;
>   char *tmp___6 ;
58572a53379,53380
>   sector_t tmp___8 ;
>   sector_t tmp___9 ;
58576c53384
< #line 685
---
> #line 820
58578c53386
< #line 696
---
> #line 831
58580c53388
< #line 699
---
> #line 834
58582c53390
< #line 699
---
> #line 834
58584,58585c53392,53393
< #line 699
<     goto ldv_54307;
---
> #line 834
>     goto ldv_53032;
58589c53397
< #line 699
---
> #line 834
58591c53399
< #line 699
---
> #line 834
58593c53401
< #line 699
---
> #line 834
58595c53403
< #line 699
---
> #line 834
58597c53405
< #line 699
---
> #line 834
58599c53407
< #line 699
---
> #line 834
58601,58602c53409,53410
<   ldv_54310: 
< #line 699
---
>   ldv_53035: 
> #line 834
58604c53412
< #line 699
---
> #line 834
58606c53414
< #line 699
---
> #line 834
58608,58609c53416,53417
< #line 699
<     goto ldv_54309;
---
> #line 834
>     goto ldv_53034;
58613c53421
< #line 699
---
> #line 834
58615,58618c53423,53426
< #line 699
<   goto ldv_54310;
<   ldv_54309: 
< #line 699
---
> #line 834
>   goto ldv_53035;
>   ldv_53034: 
> #line 834
58620,58621c53428,53429
<   ldv_54307: 
< #line 701
---
>   ldv_53032: 
> #line 836
58623c53431
< #line 702
---
> #line 837
58625c53433
< #line 703
---
> #line 838
58627c53435
< #line 706
---
> #line 841
58629,58635c53437,53470
< #line 708
<   size = drbd_new_dev_size(mdev, mdev->ldev, (int )flags & 1);
< #line 710
<   tmp___5 = drbd_get_capacity(mdev->this_bdev);
< #line 710
<   if (tmp___5 != size) {
< #line 710
---
> #line 843
>   rcu_read_lock();
> #line 844
>   _________p1 = *((struct disk_conf * volatile  *)(& (mdev->ldev)->disk_conf));
> #line 844
>   tmp___2 = debug_lockdep_rcu_enabled();
> #line 844
>   if (tmp___2 != 0 && ! __warned) {
> #line 844
>     tmp___3 = rcu_read_lock_held();
> #line 844
>     if (tmp___3 == 0 && 1) {
> #line 844
>       __warned = 1;
> #line 844
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared",
>                              844, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 844
>   u_size = (sector_t )_________p1->disk_size;
> #line 845
>   rcu_read_unlock();
> #line 846
>   size = drbd_new_dev_size(mdev, mdev->ldev, u_size, (int )flags & 1);
> #line 848
>   tmp___7 = drbd_get_capacity(mdev->this_bdev);
> #line 848
>   if (tmp___7 != size) {
> #line 848
58638,58641c53473,53476
< #line 710
<     tmp___6 = drbd_bm_capacity(mdev);
< #line 710
<     if (tmp___6 != size) {
---
> #line 848
>     tmp___8 = drbd_bm_capacity(mdev);
> #line 848
>     if (tmp___8 != size) {
58643c53478
< #line 713
---
> #line 851
58645,58653c53480,53488
< #line 714
<       tmp___3 = __builtin_expect(err != 0, 0L);
< #line 714
<       if (tmp___3 != 0L) {
< #line 716
<         tmp___2 = drbd_bm_capacity(mdev);
< #line 716
<         size = tmp___2 >> 1;
< #line 717
---
> #line 852
>       tmp___5 = __builtin_expect(err != 0, 0L);
> #line 852
>       if (tmp___5 != 0L) {
> #line 854
>         tmp___4 = drbd_bm_capacity(mdev);
> #line 854
>         size = tmp___4 >> 1;
> #line 855
58655c53490
< #line 718
---
> #line 856
58658c53493
< #line 721
---
> #line 859
58662c53497
< #line 725
---
> #line 863
58667c53502
< #line 728
---
> #line 866
58669c53504
< #line 729
---
> #line 867
58671,58673c53506,53508
< #line 730
<       tmp___4 = ppsize((char *)(& ppb), (unsigned long long )(size >> 1));
< #line 730
---
> #line 868
>       tmp___6 = ppsize((char *)(& ppb), (unsigned long long )(size >> 1));
> #line 868
58675c53510
<                 tmp___4, (unsigned long long )size >> 1);
---
>                 tmp___6, (unsigned long long )size >> 1);
58680c53515
< #line 733
---
> #line 871
58682c53517
< #line 734
---
> #line 872
58687c53522
< #line 736
---
> #line 874
58689,58693c53524,53528
< #line 738
<   tmp___7 = drbd_md_first_sector(mdev->ldev);
< #line 738
<   md_moved = tmp___7 != prev_first_sect || (sector_t )(mdev->ldev)->md.md_size_sect != prev_size;
< #line 741
---
> #line 876
>   tmp___9 = drbd_md_first_sector(mdev->ldev);
> #line 876
>   md_moved = tmp___9 != prev_first_sect || (sector_t )(mdev->ldev)->md.md_size_sect != prev_size;
> #line 879
58695c53530
< #line 744
---
> #line 882
58697c53532
< #line 745
---
> #line 883
58700c53535
< #line 749
---
> #line 887
58703c53538
< #line 751
---
> #line 889
58705c53540
< #line 752
---
> #line 890
58707c53542
< #line 753
---
> #line 891
58712c53547
< #line 755
---
> #line 893
58717c53552
< #line 758
---
> #line 896
58719c53554
< #line 759
---
> #line 897
58724c53559
< #line 760
---
> #line 898
58726c53561
< #line 761
---
> #line 899
58732c53567
< #line 763
---
> #line 901
58734c53569
< #line 764
---
> #line 902
58736c53571
< #line 765
---
> #line 903
58738c53573
< #line 767
---
> #line 905
58742c53577
< #line 771 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
---
> #line 909 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
58744c53579
<                            int assume_peer_has_space ) 
---
>                            sector_t u_size , int assume_peer_has_space ) 
58749d53583
<   sector_t u_size ;
58755c53589
< #line 773
---
> #line 912
58757c53591
< #line 774
---
> #line 913
58759,58761c53593
< #line 776
<   u_size = (sector_t )bdev->dc.disk_size;
< #line 777
---
> #line 915
58763c53595
< #line 779
---
> #line 917
58765,58767c53597,53599
< #line 781
<   if ((int )mdev->state.ldv_39979.conn <= 9 && assume_peer_has_space != 0) {
< #line 782
---
> #line 919
>   if ((int )mdev->state.ldv_50103.conn <= 9 && assume_peer_has_space != 0) {
> #line 920
58769c53601
< #line 783
---
> #line 921
58774c53606
< #line 786
---
> #line 924
58776c53608
< #line 787
---
> #line 925
58778c53610
< #line 787
---
> #line 925
58780c53612
< #line 787
---
> #line 925
58783c53615
< #line 789
---
> #line 927
58785c53617
< #line 790
---
> #line 928
58787c53619
< #line 791
---
> #line 929
58789c53621
< #line 792
---
> #line 930
58794c53626
< #line 793
---
> #line 931
58796c53628
< #line 794
---
> #line 932
58802c53634
< #line 796
---
> #line 934
58804c53636
< #line 797
---
> #line 935
58809c53641
< #line 798
---
> #line 936
58811c53643
< #line 799
---
> #line 937
58817c53649
< #line 803
---
> #line 941
58819c53651
< #line 804
---
> #line 942
58824c53656
< #line 806
---
> #line 944
58826c53658
< #line 807
---
> #line 945
58828c53660
< #line 808
---
> #line 946
58832c53664
< #line 811
---
> #line 949
58838c53670
< #line 814
---
> #line 952
58842,58843c53674,53675
< #line 825 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static int drbd_check_al_size(struct drbd_conf *mdev ) 
---
> #line 963 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> static int drbd_check_al_size(struct drbd_conf *mdev , struct disk_conf *dc ) 
58850d53681
<   int _b ;
58853,58873c53684,53686
< #line 832
<   _b = mdev->sync_conf.al_extents <= 6;
< #line 832
<   if (_b != 0) {
< #line 832
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_check_al_size", (char *)"mdev->sync_conf.al_extents < 7", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared",
<             832);
<   } else {
< 
<   }
< #line 832
<   if (_b != 0) {
< #line 833
<     mdev->sync_conf.al_extents = 127;
<   } else {
< 
<   }
< #line 835
<   if ((unsigned long )mdev->act_log != (unsigned long )((struct lru_cache *)0) && (mdev->act_log)->nr_elements == (unsigned int )mdev->sync_conf.al_extents) {
< #line 837
---
> #line 970
>   if ((unsigned long )mdev->act_log != (unsigned long )((struct lru_cache *)0) && (mdev->act_log)->nr_elements == dc->al_extents) {
> #line 972
58878c53691
< #line 839
---
> #line 974
58880c53693
< #line 840
---
> #line 975
58882,58885c53695,53697
< #line 841
<   n = lc_create("act_log", drbd_al_ext_cache, (unsigned int )mdev->sync_conf.al_extents,
<                 48UL, 0UL);
< #line 844
---
> #line 976
>   n = lc_create("act_log", drbd_al_ext_cache, 64U, dc->al_extents, 48UL, 0UL);
> #line 979
58887c53699
< #line 845
---
> #line 980
58889c53701
< #line 846
---
> #line 981
58894c53706
< #line 848
---
> #line 983
58896c53708
< #line 849
---
> #line 984
58898c53710
< #line 850
---
> #line 985
58900,58903c53712,53715
< #line 850
<     goto ldv_54339;
<     ldv_54338: 
< #line 851
---
> #line 985
>     goto ldv_53065;
>     ldv_53064: 
> #line 986
58905c53717
< #line 852
---
> #line 987
58907c53719
< #line 853
---
> #line 988
58913c53725
< #line 855
---
> #line 990
58915c53727
< #line 850
---
> #line 985
58917,58918c53729,53730
<     ldv_54339: ;
< #line 850
---
>     ldv_53065: ;
> #line 985
58920,58921c53732,53733
< #line 851
<       goto ldv_54338;
---
> #line 986
>       goto ldv_53064;
58929c53741
< #line 858
---
> #line 993
58931c53743
< #line 859
---
> #line 994
58936c53748
< #line 860
---
> #line 995
58938c53750
< #line 861
---
> #line 996
58940c53752
< #line 862
---
> #line 997
58942c53754
< #line 863
---
> #line 998
58944c53756
< #line 864
---
> #line 999
58947c53759
< #line 866
---
> #line 1001
58949c53761
< #line 867
---
> #line 1002
58954c53766
< #line 869
---
> #line 1004
58956c53768
< #line 870
---
> #line 1005
58960c53772
< #line 873 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
---
> #line 1008 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
58969a53782,53783
>   struct disk_conf *_________p1 ;
>   bool __warned ;
58971d53784
<   struct request_queue *b___0 ;
58972a53786,53788
>   int tmp___2 ;
>   struct request_queue *b___0 ;
>   int tmp___3 ;
58975c53791
< #line 875
---
> #line 1010
58977c53793
< #line 876
---
> #line 1011
58979c53795
< #line 877
---
> #line 1012
58981,58985c53797,53801
< #line 879
<   tmp___0 = _get_ldev_if_state(mdev, D_ATTACHING);
< #line 879
<   if (tmp___0 != 0) {
< #line 880
---
> #line 1014
>   tmp___2 = _get_ldev_if_state(mdev, D_ATTACHING);
> #line 1014
>   if (tmp___2 != 0) {
> #line 1015
58987c53803
< #line 882
---
> #line 1017
58989c53805
< #line 882
---
> #line 1017
58991c53807
< #line 882
---
> #line 1017
58993c53809
< #line 882
---
> #line 1017
58995,58997c53811,53838
< #line 883
<     max_segments = (unsigned int )(mdev->ldev)->dc.max_bio_bvecs;
< #line 884
---
> #line 1018
>     rcu_read_lock();
> #line 1019
>     _________p1 = *((struct disk_conf * volatile  *)(& (mdev->ldev)->disk_conf));
> #line 1019
>     tmp___0 = debug_lockdep_rcu_enabled();
> #line 1019
>     if (tmp___0 != 0 && ! __warned) {
> #line 1019
>       tmp___1 = rcu_read_lock_held();
> #line 1019
>       if (tmp___1 == 0 && 1) {
> #line 1019
>         __warned = 1;
> #line 1019
>         lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared",
>                                1019, "suspicious rcu_dereference_check() usage");
>       } else {
> 
>       }
>     } else {
> 
>     }
> #line 1019
>     max_segments = _________p1->max_bio_bvecs;
> #line 1020
>     rcu_read_unlock();
> #line 1021
59002c53843
< #line 887
---
> #line 1024
59004c53845
< #line 888
---
> #line 1025
59006c53847
< #line 890
---
> #line 1027
59008c53849
< #line 891
---
> #line 1028
59010,59014c53851,53855
< #line 893
<   tmp___1 = _get_ldev_if_state(mdev, D_ATTACHING);
< #line 893
<   if (tmp___1 != 0) {
< #line 894
---
> #line 1030
>   tmp___3 = _get_ldev_if_state(mdev, D_ATTACHING);
> #line 1030
>   if (tmp___3 != 0) {
> #line 1031
59016c53857
< #line 896
---
> #line 1033
59018c53859
< #line 898
---
> #line 1035
59020c53861
< #line 899
---
> #line 1036
59023c53864
< #line 902
---
> #line 1039
59028c53869
< #line 904
---
> #line 1041
59033c53874
< #line 906
---
> #line 1043
59037c53878
< #line 908 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
---
> #line 1045 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
59055c53896
< #line 912
---
> #line 1049
59057c53898
< #line 912
---
> #line 1049
59059c53900
< #line 913
---
> #line 1050
59061c53902
< #line 914
---
> #line 1051
59063c53904
< #line 916
---
> #line 1053
59065c53906
< #line 916
---
> #line 1053
59067c53908
< #line 917
---
> #line 1054
59069c53910
< #line 917
---
> #line 1054
59071c53912
< #line 918
---
> #line 1055
59073c53914
< #line 919
---
> #line 1056
59078c53919
< #line 921
---
> #line 1058
59080,59082c53921,53923
< #line 921
<   _min2 = 131072U;
< #line 921
---
> #line 1058
>   _min2 = 1048576U;
> #line 1058
59084,59088c53925,53929
< #line 926
<   if ((int )mdev->state.ldv_39979.conn > 9) {
< #line 927
<     if (mdev->agreed_pro_version <= 93) {
< #line 928
---
> #line 1063
>   if ((int )mdev->state.ldv_50103.conn > 9) {
> #line 1064
>     if ((mdev->tconn)->agreed_pro_version <= 93) {
> #line 1065
59090c53931
< #line 928
---
> #line 1065
59092c53933
< #line 928
---
> #line 1065
59095,59097c53936,53938
< #line 930
<     if (mdev->agreed_pro_version == 94) {
< #line 931
---
> #line 1067
>     if ((mdev->tconn)->agreed_pro_version == 94) {
> #line 1068
59099,59100c53940,53943
<     } else {
< #line 933
---
>     } else
> #line 1069
>     if ((mdev->tconn)->agreed_pro_version <= 99) {
> #line 1070
59101a53945,53947
>     } else {
> #line 1072
>       peer = 1048576U;
59106c53952
< #line 936
---
> #line 1075
59108c53954
< #line 936
---
> #line 1075
59110c53956
< #line 936
---
> #line 1075
59112,59114c53958,53960
< #line 938
<   if ((unsigned int )*((unsigned char *)mdev + 2276UL) == 1U && new < now) {
< #line 939
---
> #line 1077
>   if ((unsigned int )*((unsigned char *)mdev + 748UL) == 1U && new < now) {
> #line 1078
59120c53966
< #line 941
---
> #line 1080
59122c53968
< #line 942
---
> #line 1081
59128c53974
< #line 944
---
> #line 1083
59130c53976
< #line 945
---
> #line 1084
59134,59135c53980,53981
< #line 954 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static void drbd_reconfig_start(struct drbd_conf *mdev ) 
---
> #line 1087 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> static void conn_reconfig_start(struct drbd_tconn *tconn ) 
59137,59144c53983
<   int tmp ;
<   wait_queue_t __wait ;
<   struct task_struct *tmp___0 ;
<   int tmp___1 ;
<   int tmp___2 ;
<   wait_queue_t __wait___0 ;
<   struct task_struct *tmp___3 ;
<   int tmp___4 ;
---
> 
59147,59152c53986,54014
< #line 956
<   tmp = drbd_test_and_set_flag(mdev, CONFIG_PENDING);
< #line 956
<   if (tmp == 0) {
< #line 956
<     goto ldv_54372;
---
> #line 1089
>   drbd_thread_start(& tconn->worker);
> #line 1090
>   conn_flush_workqueue(tconn);
> #line 1091
>   return;
> }
> }
> #line 1094 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> static void conn_reconfig_done(struct drbd_tconn *tconn ) 
> { 
>   bool stop_threads ;
>   bool tmp ;
> 
>   {
> #line 1097
>   spin_lock_irq(& tconn->req_lock);
> #line 1098
>   tmp = conn_all_vols_unconf(tconn);
> #line 1098
>   stop_threads = (bool )((int )tmp && (unsigned int )tconn->cstate == 0U);
> #line 1100
>   spin_unlock_irq(& tconn->req_lock);
> #line 1101
>   if ((int )stop_threads) {
> #line 1104
>     drbd_thread_stop(& tconn->receiver);
> #line 1105
>     drbd_thread_stop(& tconn->worker);
59156,59176c54018,54039
< #line 956
<   tmp___0 = get_current();
< #line 956
<   __wait.flags = 0U;
< #line 956
<   __wait.private = (void *)tmp___0;
< #line 956
<   __wait.func = & autoremove_wake_function;
< #line 956
<   __wait.task_list.next = & __wait.task_list;
< #line 956
<   __wait.task_list.prev = & __wait.task_list;
<   ldv_54375: 
< #line 956
<   prepare_to_wait(& mdev->state_wait, & __wait, 2);
< #line 956
<   tmp___1 = drbd_test_and_set_flag(mdev, CONFIG_PENDING);
< #line 956
<   if (tmp___1 == 0) {
< #line 956
<     goto ldv_54374;
---
> #line 1107
>   return;
> }
> }
> #line 1110 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> static void drbd_suspend_al(struct drbd_conf *mdev ) 
> { 
>   int s ;
>   int tmp ;
>   int tmp___0 ;
> 
>   {
> #line 1112
>   s = 0;
> #line 1114
>   tmp = lc_try_lock(mdev->act_log);
> #line 1114
>   if (tmp == 0) {
> #line 1115
>     dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Failed to lock al in drbd_suspend_al()\n");
> #line 1116
>     return;
59180,59193c54043,54052
< #line 956
<   schedule();
< #line 956
<   goto ldv_54375;
<   ldv_54374: 
< #line 956
<   finish_wait(& mdev->state_wait, & __wait);
<   ldv_54372: 
< #line 957
<   tmp___2 = drbd_test_flag(mdev, DEVICE_DYING);
< #line 957
<   if (tmp___2 == 0) {
< #line 957
<     goto ldv_54376;
---
> #line 1119
>   drbd_al_shrink(mdev);
> #line 1120
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 1121
>   if ((int )mdev->state.ldv_50103.conn <= 9) {
> #line 1122
>     tmp___0 = test_and_set_bit(18, (unsigned long volatile   *)(& mdev->flags));
> #line 1122
>     s = tmp___0 == 0;
59197,59217c54056,54063
< #line 957
<   tmp___3 = get_current();
< #line 957
<   __wait___0.flags = 0U;
< #line 957
<   __wait___0.private = (void *)tmp___3;
< #line 957
<   __wait___0.func = & autoremove_wake_function;
< #line 957
<   __wait___0.task_list.next = & __wait___0.task_list;
< #line 957
<   __wait___0.task_list.prev = & __wait___0.task_list;
<   ldv_54379: 
< #line 957
<   prepare_to_wait(& mdev->state_wait, & __wait___0, 2);
< #line 957
<   tmp___4 = drbd_test_flag(mdev, DEVICE_DYING);
< #line 957
<   if (tmp___4 == 0) {
< #line 957
<     goto ldv_54378;
---
> #line 1123
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 1124
>   lc_unlock(mdev->act_log);
> #line 1126
>   if (s != 0) {
> #line 1127
>     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Suspended AL updates\n");
59221,59233c54067
< #line 957
<   schedule();
< #line 957
<   goto ldv_54379;
<   ldv_54378: 
< #line 957
<   finish_wait(& mdev->state_wait, & __wait___0);
<   ldv_54376: 
< #line 958
<   drbd_thread_start(& mdev->worker);
< #line 959
<   drbd_flush_workqueue(mdev);
< #line 960
---
> #line 1128
59237,59238c54071,54084
< #line 965 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static void drbd_reconfig_done(struct drbd_conf *mdev ) 
---
> #line 1131 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> static bool should_set_defaults(struct genl_info *info ) 
> { 
>   unsigned int flags ;
> 
>   {
> #line 1133
>   flags = ((struct drbd_genlmsghdr *)info->userhdr)->ldv_49550.flags;
> #line 1134
>   return (((int )flags & 1) != 0);
> }
> }
> #line 1137 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> static void enforce_disk_conf_limits(struct disk_conf *dc ) 
59243,59250c54089,54092
< #line 967
<   spin_lock_irq(& mdev->req_lock);
< #line 968
<   if (((unsigned int )*((unsigned char *)mdev + 2277UL) == 0U && (unsigned int )*((unsigned short *)mdev + 1138UL) == 0U) && (unsigned int )*((unsigned char *)mdev + 2276UL) == 2U) {
< #line 971
<     drbd_set_flag(mdev, DEVICE_DYING);
< #line 972
<     drbd_thread_stop_nowait(& mdev->worker);
---
> #line 1139
>   if (dc->al_extents <= 6U) {
> #line 1140
>     dc->al_extents = 7U;
59252,59253c54094
< #line 974
<     drbd_clear_flag(mdev, CONFIG_PENDING);
---
> 
59255,59259c54096,54110
< #line 975
<   spin_unlock_irq(& mdev->req_lock);
< #line 976
<   __wake_up(& mdev->state_wait, 3U, 1, 0);
< #line 977
---
> #line 1141
>   if (dc->al_extents > 6433U) {
> #line 1142
>     dc->al_extents = 6433U;
>   } else {
> 
>   }
> #line 1144
>   if (dc->c_plan_ahead > 300U) {
> #line 1145
>     dc->c_plan_ahead = 300U;
>   } else {
> 
>   }
> #line 1146
59263,59264c54114,54115
< #line 980 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static void drbd_suspend_al(struct drbd_conf *mdev ) 
---
> #line 1148 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_disk_opts(struct sk_buff *skb , struct genl_info *info ) 
59266c54117,54124
<   int s ;
---
>   enum drbd_ret_code retcode ;
>   struct drbd_conf *mdev ;
>   struct disk_conf *new_disk_conf ;
>   struct disk_conf *old_disk_conf ;
>   struct fifo_buffer *old_plan ;
>   struct fifo_buffer *new_plan ;
>   int err ;
>   int fifo_size ;
59268a54127,54135
>   void *tmp___1 ;
>   bool tmp___2 ;
>   char const   *tmp___3 ;
>   bool _bool ;
>   int tmp___4 ;
>   int tmp___5 ;
>   wait_queue_t __wait ;
>   struct task_struct *tmp___6 ;
>   int tmp___7 ;
59271,59280c54138,54149
< #line 982
<   s = 0;
< #line 984
<   tmp = lc_try_lock(mdev->act_log);
< #line 984
<   if (tmp != 0) {
< #line 985
<     drbd_al_shrink(mdev);
< #line 986
<     lc_unlock(mdev->act_log);
---
> #line 1153
>   old_plan = 0;
> #line 1153
>   new_plan = 0;
> #line 1156
>   tmp = drbd_adm_prepare(skb, info, 1U);
> #line 1156
>   retcode = (enum drbd_ret_code )tmp;
> #line 1157
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 1158
>     return ((int )retcode);
59282,59285c54151
< #line 988
<     dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Failed to lock al in drbd_suspend_al()\n");
< #line 989
<     return;
---
> 
59287,59294c54153,54156
< #line 992
<   spin_lock_irq(& mdev->req_lock);
< #line 993
<   if ((int )mdev->state.ldv_39979.conn <= 9) {
< #line 994
<     tmp___0 = drbd_test_and_set_flag(mdev, AL_SUSPENDED);
< #line 994
<     s = tmp___0 == 0;
---
> #line 1159
>   if ((unsigned int )retcode != 101U) {
> #line 1160
>     goto out;
59298,59303c54160,54169
< #line 996
<   spin_unlock_irq(& mdev->req_lock);
< #line 998
<   if (s != 0) {
< #line 999
<     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Suspended AL updates\n");
---
> #line 1162
>   mdev = adm_ctx.mdev;
> #line 1166
>   tmp___0 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 1166
>   if (tmp___0 == 0) {
> #line 1167
>     retcode = ERR_NO_DISK;
> #line 1168
>     goto out;
59307,59308c54173,54404
< #line 1000
<   return;
---
> #line 1171
>   tmp___1 = kmalloc(344UL, 208U);
> #line 1171
>   new_disk_conf = (struct disk_conf *)tmp___1;
> #line 1172
>   if ((unsigned long )new_disk_conf == (unsigned long )((struct disk_conf *)0)) {
> #line 1173
>     retcode = ERR_NOMEM;
> #line 1174
>     goto fail;
>   } else {
> 
>   }
> #line 1177
>   mutex_lock_nested(& (mdev->tconn)->conf_update, 0U);
> #line 1178
>   old_disk_conf = (mdev->ldev)->disk_conf;
> #line 1179
>   *new_disk_conf = *old_disk_conf;
> #line 1180
>   tmp___2 = should_set_defaults(info);
> #line 1180
>   if ((int )tmp___2) {
> #line 1181
>     set_disk_conf_defaults(new_disk_conf);
>   } else {
> 
>   }
> #line 1183
>   err = disk_conf_from_attrs_for_change(new_disk_conf, info);
> #line 1184
>   if (err != 0 && err != -42) {
> #line 1185
>     retcode = ERR_MANDATORY_TAG;
> #line 1186
>     tmp___3 = from_attrs_err_to_txt(err);
> #line 1186
>     drbd_msg_put_info(tmp___3);
>   } else {
> 
>   }
> #line 1189
>   _bool = new_disk_conf->resync_rate != 0U;
> #line 1189
>   if (! _bool) {
> #line 1189
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"new_disk_conf->resync_rate >= 1", "drbd_adm_disk_opts");
>   } else {
> 
>   }
> #line 1189
>   if (_bool) {
> #line 1189
>     tmp___4 = 0;
>   } else {
> #line 1189
>     tmp___4 = 1;
>   }
> #line 1189
>   if (tmp___4) {
> #line 1190
>     new_disk_conf->resync_rate = 1U;
>   } else {
> 
>   }
> #line 1192
>   enforce_disk_conf_limits(new_disk_conf);
> #line 1194
>   fifo_size = (int )((new_disk_conf->c_plan_ahead * 250U) / 250U);
> #line 1195
>   if ((unsigned int )fifo_size != (mdev->rs_plan_s)->size) {
> #line 1196
>     new_plan = fifo_alloc(fifo_size);
> #line 1197
>     if ((unsigned long )new_plan == (unsigned long )((struct fifo_buffer *)0)) {
> #line 1198
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "kmalloc of fifo_buffer failed");
> #line 1199
>       retcode = ERR_NOMEM;
> #line 1200
>       goto fail_unlock;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1204
>   drbd_suspend_io(mdev);
> #line 1205
>   tmp___5 = lc_try_lock(mdev->act_log);
> #line 1205
>   if (tmp___5 != 0) {
> #line 1205
>     goto ldv_53134;
>   } else {
> 
>   }
> #line 1205
>   tmp___6 = get_current();
> #line 1205
>   __wait.flags = 0U;
> #line 1205
>   __wait.private = (void *)tmp___6;
> #line 1205
>   __wait.func = & autoremove_wake_function;
> #line 1205
>   __wait.task_list.next = & __wait.task_list;
> #line 1205
>   __wait.task_list.prev = & __wait.task_list;
>   ldv_53137: 
> #line 1205
>   prepare_to_wait(& mdev->al_wait, & __wait, 2);
> #line 1205
>   tmp___7 = lc_try_lock(mdev->act_log);
> #line 1205
>   if (tmp___7 != 0) {
> #line 1205
>     goto ldv_53136;
>   } else {
> 
>   }
> #line 1205
>   schedule();
> #line 1205
>   goto ldv_53137;
>   ldv_53136: 
> #line 1205
>   finish_wait(& mdev->al_wait, & __wait);
>   ldv_53134: 
> #line 1206
>   drbd_al_shrink(mdev);
> #line 1207
>   err = drbd_check_al_size(mdev, new_disk_conf);
> #line 1208
>   lc_unlock(mdev->act_log);
> #line 1209
>   __wake_up(& mdev->al_wait, 3U, 1, 0);
> #line 1210
>   drbd_resume_io(mdev);
> #line 1212
>   if (err != 0) {
> #line 1213
>     retcode = ERR_NOMEM;
> #line 1214
>     goto fail_unlock;
>   } else {
> 
>   }
> #line 1217
>   _raw_write_lock_irq(& global_state_lock);
> #line 1218
>   retcode = drbd_resync_after_valid(mdev, new_disk_conf->resync_after);
> #line 1219
>   if ((unsigned int )retcode == 101U) {
> #line 1220
>     __asm__  volatile   ("": : : "memory");
> #line 1220
>     (mdev->ldev)->disk_conf = new_disk_conf;
> #line 1221
>     drbd_resync_after_changed(mdev);
>   } else {
> 
>   }
> #line 1223
>   _raw_write_unlock_irq(& global_state_lock);
> #line 1225
>   if ((unsigned int )retcode != 101U) {
> #line 1226
>     goto fail_unlock;
>   } else {
> 
>   }
> #line 1228
>   if ((unsigned long )new_plan != (unsigned long )((struct fifo_buffer *)0)) {
> #line 1229
>     old_plan = mdev->rs_plan_s;
> #line 1230
>     __asm__  volatile   ("": : : "memory");
> #line 1230
>     mdev->rs_plan_s = new_plan;
>   } else {
> 
>   }
> #line 1233
>   mutex_unlock(& (mdev->tconn)->conf_update);
> #line 1235
>   if ((int )((signed char )new_disk_conf->al_updates) != 0) {
> #line 1236
>     (mdev->ldev)->md.flags = (mdev->ldev)->md.flags & 4294967039U;
>   } else {
> #line 1238
>     (mdev->ldev)->md.flags = (mdev->ldev)->md.flags | 256U;
>   }
> #line 1240
>   drbd_bump_write_ordering(mdev->tconn, WO_bdev_flush);
> #line 1242
>   drbd_md_sync(mdev);
> #line 1244
>   if ((int )mdev->state.ldv_50103.conn > 9) {
> #line 1245
>     drbd_send_sync_param(mdev);
>   } else {
> 
>   }
> #line 1247
>   synchronize_rcu();
> #line 1248
>   kfree((void const   *)old_disk_conf);
> #line 1249
>   kfree((void const   *)old_plan);
> #line 1250
>   mod_timer(& mdev->request_timer, (unsigned long )jiffies + 250UL);
> #line 1251
>   goto success;
>   fail_unlock: 
> #line 1254
>   mutex_unlock(& (mdev->tconn)->conf_update);
>   fail: 
> #line 1256
>   kfree((void const   *)new_disk_conf);
> #line 1257
>   kfree((void const   *)new_plan);
>   success: 
> #line 1259
>   put_ldev(mdev);
>   out: 
> #line 1261
>   drbd_adm_finish(info, (int )retcode);
> #line 1262
>   return (0);
59311,59313c54407,54408
< #line 1004 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static int drbd_nl_disk_conf(struct drbd_conf *mdev , struct drbd_nl_cfg_req *nlp ,
<                              struct drbd_nl_cfg_reply *reply ) 
---
> #line 1265 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_attach(struct sk_buff *skb , struct genl_info *info ) 
59314a54410,54411
>   struct drbd_conf *mdev ;
>   int err ;
59319a54417
>   struct disk_conf *new_disk_conf ;
59321a54420
>   struct fifo_buffer *new_plan ;
59325,59326c54424
<   int cp_discovered ;
<   int logical_block_size ;
---
>   struct net_conf *nc ;
59327a54426
>   int tmp___0 ;
59329,59331c54428,54430
<   struct task_struct *tmp___0 ;
<   int tmp___1 ;
<   void *tmp___2 ;
---
>   struct task_struct *tmp___1 ;
>   int tmp___2 ;
>   void *tmp___3 ;
59333,59338c54432,54437
<   int tmp___3 ;
<   int prot ;
<   int tmp___4 ;
<   long tmp___5 ;
<   long tmp___6 ;
<   long tmp___7 ;
---
>   void *tmp___4 ;
>   char const   *tmp___5 ;
>   struct net_conf *_________p1 ;
>   bool __warned ;
>   int tmp___6 ;
>   int tmp___7 ;
59340,59342c54439,54441
<   sector_t tmp___9 ;
<   sector_t tmp___10 ;
<   sector_t tmp___11 ;
---
>   long tmp___9 ;
>   long tmp___10 ;
>   long tmp___11 ;
59345,59348c54444,54446
<   int tmp___14 ;
<   int tmp___15 ;
<   wait_queue_t __wait___0 ;
<   struct task_struct *tmp___16 ;
---
>   sector_t tmp___14 ;
>   sector_t tmp___15 ;
>   sector_t tmp___16 ;
59350a54449,54452
>   wait_queue_t __wait___0 ;
>   struct task_struct *tmp___19 ;
>   int tmp___20 ;
>   int tmp___21 ;
59353,59356d54454
<   int tmp___19 ;
<   unsigned short tmp___20 ;
<   struct page *page ;
<   struct page *tmp___21 ;
59361,59362c54459,54460
<   sector_t tmp___26 ;
<   int tmp___27 ;
---
>   int tmp___26 ;
>   sector_t tmp___27 ;
59371c54469
<   unsigned long tmp___36 ;
---
>   int tmp___36 ;
59373c54471
<   int tmp___38 ;
---
>   unsigned long tmp___38 ;
59375a54474,54482
>   int tmp___41 ;
>   struct disk_conf *_________p1___0 ;
>   bool __warned___0 ;
>   int tmp___42 ;
>   int tmp___43 ;
>   struct disk_conf *_________p1___1 ;
>   bool __warned___1 ;
>   int tmp___44 ;
>   int tmp___45 ;
59380c54487
< #line 1011
---
> #line 1273
59382c54489,54491
< #line 1013
---
> #line 1274
>   new_disk_conf = 0;
> #line 1276
59384,59390c54493,54519
< #line 1016
<   cp_discovered = 0;
< #line 1019
<   drbd_reconfig_start(mdev);
< #line 1022
<   if ((int )mdev->state.ldv_39979.disk > 0) {
< #line 1023
---
> #line 1277
>   new_plan = 0;
> #line 1282
>   tmp = drbd_adm_prepare(skb, info, 1U);
> #line 1282
>   retcode = (enum drbd_ret_code )tmp;
> #line 1283
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 1284
>     return ((int )retcode);
>   } else {
> 
>   }
> #line 1285
>   if ((unsigned int )retcode != 101U) {
> #line 1286
>     goto finish;
>   } else {
> 
>   }
> #line 1288
>   mdev = adm_ctx.mdev;
> #line 1289
>   conn_reconfig_start(mdev->tconn);
> #line 1292
>   if ((int )mdev->state.ldv_50103.disk > 0) {
> #line 1293
59392c54521
< #line 1024
---
> #line 1294
59397,59402c54526,54531
< #line 1030
<   tmp = atomic_read((atomic_t const   *)(& mdev->local_cnt));
< #line 1030
<   if (tmp == 0) {
< #line 1030
<     goto ldv_54405;
---
> #line 1300
>   tmp___0 = atomic_read((atomic_t const   *)(& mdev->local_cnt));
> #line 1300
>   if (tmp___0 == 0) {
> #line 1300
>     goto ldv_53160;
59406,59408c54535,54537
< #line 1030
<   tmp___0 = get_current();
< #line 1030
---
> #line 1300
>   tmp___1 = get_current();
> #line 1300
59410,59412c54539,54541
< #line 1030
<   __wait.private = (void *)tmp___0;
< #line 1030
---
> #line 1300
>   __wait.private = (void *)tmp___1;
> #line 1300
59414c54543
< #line 1030
---
> #line 1300
59416c54545
< #line 1030
---
> #line 1300
59418,59419c54547,54548
<   ldv_54408: 
< #line 1030
---
>   ldv_53163: 
> #line 1300
59421,59426c54550,54555
< #line 1030
<   tmp___1 = atomic_read((atomic_t const   *)(& mdev->local_cnt));
< #line 1030
<   if (tmp___1 == 0) {
< #line 1030
<     goto ldv_54407;
---
> #line 1300
>   tmp___2 = atomic_read((atomic_t const   *)(& mdev->local_cnt));
> #line 1300
>   if (tmp___2 == 0) {
> #line 1300
>     goto ldv_53162;
59430c54559
< #line 1030
---
> #line 1300
59432,59435c54561,54564
< #line 1030
<   goto ldv_54408;
<   ldv_54407: 
< #line 1030
---
> #line 1300
>   goto ldv_53163;
>   ldv_53162: 
> #line 1300
59437,59444c54566,54573
<   ldv_54405: 
< #line 1033
<   drbd_clear_flag(mdev, FORCE_DETACH);
< #line 1034
<   drbd_clear_flag(mdev, WAS_IO_ERROR);
< #line 1035
<   drbd_clear_flag(mdev, WAS_READ_ERROR);
< #line 1038
---
>   ldv_53160: 
> #line 1303
>   clear_bit(14, (unsigned long volatile   *)(& mdev->flags));
> #line 1304
>   clear_bit(12, (unsigned long volatile   *)(& mdev->flags));
> #line 1305
>   clear_bit(13, (unsigned long volatile   *)(& mdev->flags));
> #line 1308
59446c54575
< #line 1039
---
> #line 1309
59448c54577
< #line 1040
---
> #line 1310
59450,59454c54579,54583
< #line 1043
<   tmp___2 = kzalloc(472UL, 208U);
< #line 1043
<   nbc = (struct drbd_backing_dev *)tmp___2;
< #line 1044
---
> #line 1313
>   tmp___3 = kzalloc(176UL, 208U);
> #line 1313
>   nbc = (struct drbd_backing_dev *)tmp___3;
> #line 1314
59456c54585
< #line 1045
---
> #line 1315
59458c54587
< #line 1046
---
> #line 1316
59463,59471c54592
< #line 1049
<   nbc->dc.disk_size = 0ULL;
< #line 1050
<   nbc->dc.on_io_error = 0;
< #line 1051
<   nbc->dc.fencing = 0;
< #line 1052
<   nbc->dc.max_bio_bvecs = 0;
< #line 1054
---
> #line 1318
59473,59474c54594,54595
< #line 1054
<   __raw_spin_lock_init(& nbc->md.uuid_lock.ldv_5957.rlock, "&(&nbc->md.uuid_lock)->rlock",
---
> #line 1318
>   __raw_spin_lock_init(& nbc->md.uuid_lock.ldv_6135.rlock, "&(&nbc->md.uuid_lock)->rlock",
59476,59480c54597,54618
< #line 1056
<   tmp___3 = disk_conf_from_tags(mdev, (unsigned short *)(& nlp->tag_list), & nbc->dc);
< #line 1056
<   if (tmp___3 == 0) {
< #line 1057
---
> #line 1320
>   tmp___4 = kzalloc(344UL, 208U);
> #line 1320
>   new_disk_conf = (struct disk_conf *)tmp___4;
> #line 1321
>   if ((unsigned long )new_disk_conf == (unsigned long )((struct disk_conf *)0)) {
> #line 1322
>     retcode = ERR_NOMEM;
> #line 1323
>     goto fail;
>   } else {
> 
>   }
> #line 1325
>   nbc->disk_conf = new_disk_conf;
> #line 1327
>   set_disk_conf_defaults(new_disk_conf);
> #line 1328
>   err = disk_conf_from_attrs(new_disk_conf, info);
> #line 1329
>   if (err != 0) {
> #line 1330
59482c54620,54624
< #line 1058
---
> #line 1331
>     tmp___5 = from_attrs_err_to_txt(err);
> #line 1331
>     drbd_msg_put_info(tmp___5);
> #line 1332
59487,59491c54629,54637
< #line 1061
<   if (nbc->dc.meta_dev_idx < -3) {
< #line 1062
<     retcode = ERR_MD_IDX_INVALID;
< #line 1063
---
> #line 1335
>   enforce_disk_conf_limits(new_disk_conf);
> #line 1337
>   new_plan = fifo_alloc((int )((new_disk_conf->c_plan_ahead * 250U) / 250U));
> #line 1338
>   if ((unsigned long )new_plan == (unsigned long )((struct fifo_buffer *)0)) {
> #line 1339
>     retcode = ERR_NOMEM;
> #line 1340
59496,59506c54642,54682
< #line 1066
<   tmp___4 = get_net_conf(mdev);
< #line 1066
<   if (tmp___4 != 0) {
< #line 1067
<     prot = (mdev->net_conf)->wire_protocol;
< #line 1068
<     put_net_conf(mdev);
< #line 1069
<     if (nbc->dc.fencing == 2 && prot == 1) {
< #line 1070
---
> #line 1343
>   if (new_disk_conf->meta_dev_idx < -3) {
> #line 1344
>     retcode = ERR_MD_IDX_INVALID;
> #line 1345
>     goto fail;
>   } else {
> 
>   }
> #line 1348
>   rcu_read_lock();
> #line 1349
>   _________p1 = *((struct net_conf * volatile  *)(& (mdev->tconn)->net_conf));
> #line 1349
>   tmp___6 = debug_lockdep_rcu_enabled();
> #line 1349
>   if (tmp___6 != 0 && ! __warned) {
> #line 1349
>     tmp___7 = rcu_read_lock_held();
> #line 1349
>     if (tmp___7 == 0 && 1) {
> #line 1349
>       __warned = 1;
> #line 1349
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared",
>                              1349, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1349
>   nc = _________p1;
> #line 1350
>   if ((unsigned long )nc != (unsigned long )((struct net_conf *)0)) {
> #line 1351
>     if (new_disk_conf->fencing == 2U && nc->wire_protocol == 1U) {
> #line 1352
>       rcu_read_unlock();
> #line 1353
59508c54684
< #line 1071
---
> #line 1354
59516,59524c54692,54703
< #line 1075
<   bdev = blkdev_get_by_path((char const   *)(& nbc->dc.backing_dev), 131U, (void *)mdev);
< #line 1077
<   tmp___6 = IS_ERR((void const   *)bdev);
< #line 1077
<   if (tmp___6 != 0L) {
< #line 1078
<     tmp___5 = PTR_ERR((void const   *)bdev);
< #line 1078
---
> #line 1357
>   rcu_read_unlock();
> #line 1359
>   bdev = blkdev_get_by_path((char const   *)(& new_disk_conf->backing_dev), 131U,
>                             (void *)mdev);
> #line 1361
>   tmp___9 = IS_ERR((void const   *)bdev);
> #line 1361
>   if (tmp___9 != 0L) {
> #line 1362
>     tmp___8 = PTR_ERR((void const   *)bdev);
> #line 1362
59526,59527c54705,54706
<             (unsigned char *)(& nbc->dc.backing_dev), tmp___5);
< #line 1080
---
>             (char *)(& new_disk_conf->backing_dev), tmp___8);
> #line 1364
59529c54708
< #line 1081
---
> #line 1365
59534c54713
< #line 1083
---
> #line 1367
59536,59544c54715,54723
< #line 1093
<   bdev = blkdev_get_by_path((char const   *)(& nbc->dc.meta_dev), 131U, nbc->dc.meta_dev_idx < 0 ? (void *)mdev : (void *)drbd_m_holder);
< #line 1097
<   tmp___8 = IS_ERR((void const   *)bdev);
< #line 1097
<   if (tmp___8 != 0L) {
< #line 1098
<     tmp___7 = PTR_ERR((void const   *)bdev);
< #line 1098
---
> #line 1377
>   bdev = blkdev_get_by_path((char const   *)(& new_disk_conf->meta_dev), 131U, new_disk_conf->meta_dev_idx < 0 ? (void *)mdev : (void *)drbd_m_holder);
> #line 1381
>   tmp___11 = IS_ERR((void const   *)bdev);
> #line 1381
>   if (tmp___11 != 0L) {
> #line 1382
>     tmp___10 = PTR_ERR((void const   *)bdev);
> #line 1382
59546,59547c54725,54726
<             (unsigned char *)(& nbc->dc.meta_dev), tmp___7);
< #line 1100
---
>             (char *)(& new_disk_conf->meta_dev), tmp___10);
> #line 1384
59549c54728
< #line 1101
---
> #line 1385
59554c54733
< #line 1103
---
> #line 1387
59556,59558c54735,54737
< #line 1105
<   if (((unsigned long )nbc->backing_bdev == (unsigned long )nbc->md_bdev) ^ (int )((_Bool )(nbc->dc.meta_dev_idx == -1 || nbc->dc.meta_dev_idx == -3))) {
< #line 1108
---
> #line 1389
>   if (((unsigned long )nbc->backing_bdev == (unsigned long )nbc->md_bdev) ^ (int )((_Bool )(new_disk_conf->meta_dev_idx == -1 || new_disk_conf->meta_dev_idx == -3))) {
> #line 1392
59560c54739
< #line 1109
---
> #line 1393
59565,59567c54744,54746
< #line 1112
<   resync_lru = lc_create("resync", drbd_bm_ext_cache, 61U, 64UL, 16UL);
< #line 1115
---
> #line 1396
>   resync_lru = lc_create("resync", drbd_bm_ext_cache, 1U, 61U, 64UL, 16UL);
> #line 1399
59569c54748
< #line 1116
---
> #line 1400
59571c54750
< #line 1117
---
> #line 1401
59576c54755
< #line 1121
---
> #line 1405
59578,59584c54757,54763
< #line 1123
<   tmp___10 = drbd_get_max_capacity___1(nbc);
< #line 1123
<   if ((unsigned long long )tmp___10 < nbc->dc.disk_size) {
< #line 1124
<     tmp___9 = drbd_get_max_capacity___1(nbc);
< #line 1124
---
> #line 1407
>   tmp___13 = drbd_get_max_capacity___1(nbc);
> #line 1407
>   if ((unsigned long long )tmp___13 < new_disk_conf->disk_size) {
> #line 1408
>     tmp___12 = drbd_get_max_capacity___1(nbc);
> #line 1408
59586,59587c54765,54766
<             (unsigned long long )tmp___9, nbc->dc.disk_size);
< #line 1127
---
>             (unsigned long long )tmp___12, new_disk_conf->disk_size);
> #line 1411
59589c54768
< #line 1128
---
> #line 1412
59594,59596c54773,54775
< #line 1131
<   if (nbc->dc.meta_dev_idx < 0) {
< #line 1132
---
> #line 1415
>   if (new_disk_conf->meta_dev_idx < 0) {
> #line 1416
59598c54777
< #line 1134
---
> #line 1418
59601c54780
< #line 1136
---
> #line 1420
59603,59604c54782,54783
< #line 1137
<     min_md_device_sectors = (unsigned long )(nbc->dc.meta_dev_idx + 1) * 262144UL;
---
> #line 1421
>     min_md_device_sectors = (unsigned long )(new_disk_conf->meta_dev_idx + 1) * 262144UL;
59606,59610c54785,54789
< #line 1140
<   tmp___11 = drbd_get_capacity(nbc->md_bdev);
< #line 1140
<   if (tmp___11 < min_md_device_sectors) {
< #line 1141
---
> #line 1424
>   tmp___14 = drbd_get_capacity(nbc->md_bdev);
> #line 1424
>   if (tmp___14 < min_md_device_sectors) {
> #line 1425
59612c54791
< #line 1142
---
> #line 1426
59615c54794
< #line 1145
---
> #line 1429
59620,59626c54799,54805
< #line 1150
<   tmp___12 = drbd_get_max_capacity___1(nbc);
< #line 1150
<   tmp___13 = drbd_get_capacity(mdev->this_bdev);
< #line 1150
<   if (tmp___12 < tmp___13) {
< #line 1152
---
> #line 1434
>   tmp___15 = drbd_get_max_capacity___1(nbc);
> #line 1434
>   tmp___16 = drbd_get_capacity(mdev->this_bdev);
> #line 1434
>   if (tmp___15 < tmp___16) {
> #line 1436
59628c54807
< #line 1153
---
> #line 1437
59633c54812
< #line 1156
---
> #line 1440
59635c54814
< #line 1158
---
> #line 1442
59637c54816
< #line 1159
---
> #line 1443
59640,59642c54819,54821
< #line 1162
<     if (nbc->dc.meta_dev_idx >= 0) {
< #line 1163
---
> #line 1446
>     if (new_disk_conf->meta_dev_idx >= 0) {
> #line 1447
59650c54829
< #line 1167
---
> #line 1451
59652,59657c54831,54836
< #line 1169
<   tmp___14 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
< #line 1169
<   if (tmp___14 == 0) {
< #line 1169
<     goto ldv_54411;
---
> #line 1459
>   tmp___17 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
> #line 1459
>   if (tmp___17 == 0) {
> #line 1459
>     goto ldv_53168;
59659,59664c54838,54843
< #line 1169
<     tmp___15 = is_susp(mdev->state);
< #line 1169
<     if (tmp___15 != 0) {
< #line 1169
<       goto ldv_54411;
---
> #line 1459
>     tmp___18 = drbd_suspended(mdev);
> #line 1459
>     if (tmp___18 != 0) {
> #line 1459
>       goto ldv_53168;
59669,59671c54848,54850
< #line 1169
<   tmp___16 = get_current();
< #line 1169
---
> #line 1459
>   tmp___19 = get_current();
> #line 1459
59673,59675c54852,54854
< #line 1169
<   __wait___0.private = (void *)tmp___16;
< #line 1169
---
> #line 1459
>   __wait___0.private = (void *)tmp___19;
> #line 1459
59677c54856
< #line 1169
---
> #line 1459
59679c54858
< #line 1169
---
> #line 1459
59681,59682c54860,54861
<   ldv_54414: 
< #line 1169
---
>   ldv_53171: 
> #line 1459
59684,59689c54863,54868
< #line 1169
<   tmp___17 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
< #line 1169
<   if (tmp___17 == 0) {
< #line 1169
<     goto ldv_54413;
---
> #line 1459
>   tmp___20 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
> #line 1459
>   if (tmp___20 == 0) {
> #line 1459
>     goto ldv_53170;
59691,59696c54870,54875
< #line 1169
<     tmp___18 = is_susp(mdev->state);
< #line 1169
<     if (tmp___18 != 0) {
< #line 1169
<       goto ldv_54413;
---
> #line 1459
>     tmp___21 = drbd_suspended(mdev);
> #line 1459
>     if (tmp___21 != 0) {
> #line 1459
>       goto ldv_53170;
59701c54880
< #line 1169
---
> #line 1459
59703,59706c54882,54885
< #line 1169
<   goto ldv_54414;
<   ldv_54413: 
< #line 1169
---
> #line 1459
>   goto ldv_53171;
>   ldv_53170: 
> #line 1459
59708,59709c54887,54888
<   ldv_54411: 
< #line 1171
---
>   ldv_53168: 
> #line 1461
59711c54890
< #line 1173
---
> #line 1463
59713,59715c54892,54894
< #line 1173
<   val.ldv_39979.disk = 1U;
< #line 1173
---
> #line 1463
>   val.ldv_40604.disk = 1U;
> #line 1463
59717,59719c54896,54898
< #line 1173
<   mask.ldv_39979.disk = 15U;
< #line 1173
---
> #line 1463
>   mask.ldv_40604.disk = 15U;
> #line 1463
59721c54900
< #line 1174
---
> #line 1464
59723c54902
< #line 1175
---
> #line 1465
59725c54904
< #line 1176
---
> #line 1466
59727c54906
< #line 1177
---
> #line 1467
59732,59736c54911,54915
< #line 1179
<   tmp___19 = _get_ldev_if_state(mdev, D_ATTACHING);
< #line 1179
<   if (tmp___19 == 0) {
< #line 1180
---
> #line 1469
>   tmp___22 = _get_ldev_if_state(mdev, D_ATTACHING);
> #line 1469
>   if (tmp___22 == 0) {
> #line 1470
59741c54920
< #line 1182
---
> #line 1472
59743,59782c54922
< #line 1185
<   tmp___20 = bdev_logical_block_size(nbc->md_bdev);
< #line 1185
<   logical_block_size = (int )tmp___20;
< #line 1186
<   if (logical_block_size == 0) {
< #line 1187
<     logical_block_size = 512;
<   } else {
< 
<   }
< #line 1189
<   if (logical_block_size != 512) {
< #line 1190
<     if ((unsigned long )mdev->md_io_tmpp == (unsigned long )((struct page *)0)) {
< #line 1191
<       tmp___21 = alloc_pages(16U, 0U);
< #line 1191
<       page = tmp___21;
< #line 1192
<       if ((unsigned long )page == (unsigned long )((struct page *)0)) {
< #line 1193
<         goto force_diskless_dec;
<       } else {
< 
<       }
< #line 1195
<       dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Meta data\'s bdev logical_block_size = %d != %d\n",
<                logical_block_size, 512);
< #line 1197
<       dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Workaround engaged (has performance impact).\n");
< #line 1199
<       mdev->md_io_tmpp = page;
<     } else {
< 
<     }
<   } else {
< 
<   }
< #line 1203
---
> #line 1474
59784,59788c54924,54928
< #line 1204
<     tmp___22 = drbd_bm_init(mdev);
< #line 1204
<     if (tmp___22 != 0) {
< #line 1205
---
> #line 1475
>     tmp___23 = drbd_bm_init(mdev);
> #line 1475
>     if (tmp___23 != 0) {
> #line 1476
59790c54930
< #line 1206
---
> #line 1477
59798,59802c54938,54942
< #line 1210
<   tmp___23 = drbd_md_read(mdev, nbc);
< #line 1210
<   retcode = (enum drbd_ret_code )tmp___23;
< #line 1211
---
> #line 1481
>   tmp___24 = drbd_md_read(mdev, nbc);
> #line 1481
>   retcode = (enum drbd_ret_code )tmp___24;
> #line 1482
59804c54944
< #line 1212
---
> #line 1483
59809,59811c54949,54951
< #line 1214
<   if (((int )mdev->state.ldv_39979.conn <= 9 && (unsigned int )*((unsigned char *)mdev + 2276UL) == 1U) && ((mdev->ed_uuid ^ nbc->md.uuid[0]) & 0xfffffffffffffffeULL) != 0ULL) {
< #line 1217
---
> #line 1485
>   if (((int )mdev->state.ldv_50103.conn <= 9 && (unsigned int )*((unsigned char *)mdev + 748UL) == 1U) && ((mdev->ed_uuid ^ nbc->md.uuid[0]) & 0xfffffffffffffffeULL) != 0ULL) {
> #line 1488
59814c54954
< #line 1219
---
> #line 1490
59816c54956
< #line 1220
---
> #line 1491
59821,59825c54961,54965
< #line 1224
<   tmp___24 = drbd_check_al_size(mdev);
< #line 1224
<   if (tmp___24 != 0) {
< #line 1225
---
> #line 1495
>   tmp___25 = drbd_check_al_size(mdev, new_disk_conf);
> #line 1495
>   if (tmp___25 != 0) {
> #line 1496
59827c54967
< #line 1226
---
> #line 1497
59832,59840c54972,54981
< #line 1230
<   tmp___25 = drbd_md_test_flag(nbc, 1);
< #line 1230
<   if (tmp___25 != 0) {
< #line 1230
<     tmp___26 = drbd_new_dev_size(mdev, nbc, 0);
< #line 1230
<     if ((unsigned long long )tmp___26 < nbc->md.la_size_sect) {
< #line 1232
---
> #line 1501
>   tmp___26 = drbd_md_test_flag(nbc, 1);
> #line 1501
>   if (tmp___26 != 0) {
> #line 1501
>     tmp___27 = drbd_new_dev_size(mdev, nbc, (sector_t )(nbc->disk_conf)->disk_size,
>                                  0);
> #line 1501
>     if ((unsigned long long )tmp___27 < nbc->md.la_size_sect) {
> #line 1503
59842c54983
< #line 1233
---
> #line 1504
59844c54985
< #line 1234
---
> #line 1505
59852,59866c54993,54996
< #line 1237
<   tmp___27 = drbd_al_read_log(mdev, nbc);
< #line 1237
<   if (tmp___27 == 0) {
< #line 1238
<     retcode = ERR_IO_MD_DISK;
< #line 1239
<     goto force_diskless_dec;
<   } else {
< 
<   }
< #line 1244
<   if ((unsigned int )*((unsigned char *)nbc + 444UL) != 0U) {
< #line 1245
<     drbd_set_flag(mdev, MD_NO_FUA);
---
> #line 1510
>   if ((int )((signed char )new_disk_conf->md_flushes) != 0) {
> #line 1511
>     clear_bit(7, (unsigned long volatile   *)(& mdev->flags));
59868,59869c54998,54999
< #line 1247
<     drbd_clear_flag(mdev, MD_NO_FUA);
---
> #line 1513
>     set_bit(7U, (unsigned long volatile   *)(& mdev->flags));
59871c55001
< #line 1253
---
> #line 1519
59873c55003
< #line 1253
---
> #line 1519
59875,59876c55005,55006
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared",
<             1253);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared",
>             1519);
59880c55010
< #line 1254
---
> #line 1520
59882c55012
< #line 1255
---
> #line 1521
59884c55014,55016
< #line 1256
---
> #line 1522
>   mdev->rs_plan_s = new_plan;
> #line 1523
59886c55018
< #line 1257
---
> #line 1524
59888,59892c55020,55026
< #line 1259
<   mdev->write_ordering = WO_bdev_flush;
< #line 1260
<   drbd_bump_write_ordering(mdev, WO_bdev_flush);
< #line 1262
---
> #line 1525
>   new_disk_conf = 0;
> #line 1526
>   new_plan = 0;
> #line 1528
>   drbd_bump_write_ordering(mdev->tconn, WO_bdev_flush);
> #line 1530
59894c55028
< #line 1262
---
> #line 1530
59896,59897c55030,55031
< #line 1263
<     drbd_set_flag(mdev, CRASHED_PRIMARY);
---
> #line 1531
>     set_bit(5U, (unsigned long volatile   *)(& mdev->flags));
59899,59900c55033,55034
< #line 1265
<     drbd_clear_flag(mdev, CRASHED_PRIMARY);
---
> #line 1533
>     clear_bit(5, (unsigned long volatile   *)(& mdev->flags));
59902c55036
< #line 1267
---
> #line 1535
59904,59909c55038,55041
< #line 1267
<   if (tmp___29 != 0 && ((unsigned int )*((unsigned char *)mdev + 2276UL) != 1U || (unsigned int )*((unsigned char *)mdev + 2278UL) == 0U)) {
< #line 1269
<     drbd_set_flag(mdev, CRASHED_PRIMARY);
< #line 1270
<     cp_discovered = 1;
---
> #line 1535
>   if (tmp___29 != 0 && ((unsigned int )*((unsigned char *)mdev + 748UL) != 1U || (unsigned int )*((unsigned char *)mdev->tconn + 132UL) == 0U)) {
> #line 1537
>     set_bit(5U, (unsigned long volatile   *)(& mdev->flags));
59913c55045
< #line 1273
---
> #line 1539
59915c55047
< #line 1274
---
> #line 1540
59917c55049
< #line 1275
---
> #line 1541
59919c55051
< #line 1276
---
> #line 1542
59921c55053
< #line 1278
---
> #line 1544
59923,59927c55055,55059
< #line 1294
<   drbd_clear_flag(mdev, USE_DEGR_WFC_T);
< #line 1295
<   if ((unsigned int )*((unsigned char *)mdev + 2276UL) != 1U) {
< #line 1295
---
> #line 1560
>   clear_bit(2, (unsigned long volatile   *)(& mdev->flags));
> #line 1561
>   if ((unsigned int )*((unsigned char *)mdev + 748UL) != 1U) {
> #line 1561
59929c55061
< #line 1295
---
> #line 1561
59931c55063
< #line 1295
---
> #line 1561
59933c55065
< #line 1295
---
> #line 1561
59935,59936c55067,55068
< #line 1298
<         drbd_set_flag(mdev, USE_DEGR_WFC_T);
---
> #line 1564
>         set_bit(2U, (unsigned long volatile   *)(& mdev->flags));
59946c55078
< #line 1300
---
> #line 1566
59948c55080
< #line 1301
---
> #line 1567
59950c55082
< #line 1302
---
> #line 1568
59952c55084
< #line 1303
---
> #line 1569
59955c55087
< #line 1304
---
> #line 1570
59957,59958c55089,55090
< #line 1305
<     drbd_set_flag(mdev, RESYNC_AFTER_NEG);
---
> #line 1571
>     set_bit(15U, (unsigned long volatile   *)(& mdev->flags));
59962c55094
< #line 1307
---
> #line 1573
59964c55096
< #line 1307
---
> #line 1573
59966,59976c55098,55127
< #line 1308
<     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Assuming that all blocks are out of sync (aka FullSync)\n");
< #line 1310
<     tmp___32 = drbd_bitmap_io(mdev, & drbd_bmio_set_n_write, (char *)"set_n_write from attaching",
<                               BM_LOCKED_MASK);
< #line 1310
<     if (tmp___32 != 0) {
< #line 1312
<       retcode = ERR_IO_MD_DISK;
< #line 1313
<       goto force_diskless_dec;
---
> #line 1573
>     goto _L;
>   } else {
> #line 1573
>     tmp___35 = constant_test_bit(5U, (unsigned long const volatile   *)(& mdev->flags));
> #line 1573
>     if (tmp___35 != 0) {
> #line 1573
>       tmp___36 = drbd_md_test_flag(mdev->ldev, 256);
> #line 1573
>       if (tmp___36 != 0) {
>         _L: /* CIL Label */ 
> #line 1576
>         _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Assuming that all blocks are out of sync (aka FullSync)\n");
> #line 1578
>         tmp___32 = drbd_bitmap_io(mdev, & drbd_bmio_set_n_write, (char *)"set_n_write from attaching",
>                                   BM_LOCKED_MASK);
> #line 1578
>         if (tmp___32 != 0) {
> #line 1580
>           retcode = ERR_IO_MD_DISK;
> #line 1581
>           goto force_diskless_dec;
>         } else {
> 
>         }
>       } else {
> #line 1573
>         goto _L___0;
>       }
59977a55129,55139
>       _L___0: /* CIL Label */ 
> #line 1584
>       tmp___33 = drbd_bitmap_io(mdev, & drbd_bm_read, (char *)"read from attaching",
>                                 BM_LOCKED_MASK);
> #line 1584
>       if (tmp___33 != 0) {
> #line 1586
>         retcode = ERR_IO_MD_DISK;
> #line 1587
>         goto force_diskless_dec;
>       } else {
59978a55141
>       }
59979a55143,55151
>   }
> #line 1591
>   tmp___37 = _drbd_bm_total_weight(mdev);
> #line 1591
>   tmp___38 = drbd_bm_bits(mdev);
> #line 1591
>   if (tmp___37 == tmp___38) {
> #line 1592
>     drbd_suspend_al(mdev);
59981,59990d55152
< #line 1316
<     tmp___33 = drbd_bitmap_io(mdev, & drbd_bm_read, (char *)"read from attaching",
<                               BM_LOCKED_MASK);
< #line 1316
<     if (tmp___33 < 0) {
< #line 1318
<       retcode = ERR_IO_MD_DISK;
< #line 1319
<       goto force_diskless_dec;
<     } else {
59992d55153
<     }
59994,60006c55155,55170
< #line 1323
<   if (cp_discovered != 0) {
< #line 1324
<     drbd_al_apply_to_bm(mdev);
< #line 1325
<     tmp___35 = drbd_bitmap_io(mdev, & drbd_bm_write, (char *)"crashed primary apply AL",
<                               BM_LOCKED_MASK);
< #line 1325
<     if (tmp___35 != 0) {
< #line 1327
<       retcode = ERR_IO_MD_DISK;
< #line 1328
<       goto force_diskless_dec;
---
> #line 1594
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 1595
>   os = drbd_read_state(mdev);
> #line 1596
>   ns = os;
> #line 1602
>   tmp___40 = drbd_md_test_flag(mdev->ldev, 1);
> #line 1602
>   if (tmp___40 != 0) {
> #line 1603
>     tmp___39 = drbd_md_test_flag(mdev->ldev, 16);
> #line 1603
>     if (tmp___39 != 0) {
> #line 1604
>       ns.ldv_40604.disk = 7U;
60008c55172,55173
< 
---
> #line 1606
>       ns.ldv_40604.disk = 5U;
60011c55176,55177
< 
---
> #line 1608
>     ns.ldv_40604.disk = 4U;
60013,60020c55179,55184
< #line 1332
<   tmp___36 = _drbd_bm_total_weight(mdev);
< #line 1332
<   tmp___37 = drbd_bm_bits(mdev);
< #line 1332
<   if (tmp___36 == tmp___37) {
< #line 1333
<     drbd_suspend_al(mdev);
---
> #line 1611
>   tmp___41 = drbd_md_test_flag(mdev->ldev, 32);
> #line 1611
>   if (tmp___41 != 0) {
> #line 1612
>     ns.ldv_40604.pdsk = 5U;
60024,60039c55188,55195
< #line 1335
<   spin_lock_irq(& mdev->req_lock);
< #line 1336
<   os = mdev->state;
< #line 1337
<   ns.i = os.i;
< #line 1343
<   tmp___39 = drbd_md_test_flag(mdev->ldev, 1);
< #line 1343
<   if (tmp___39 != 0) {
< #line 1344
<     tmp___38 = drbd_md_test_flag(mdev->ldev, 16);
< #line 1344
<     if (tmp___38 != 0) {
< #line 1345
<       ns.ldv_39979.disk = 7U;
---
> #line 1614
>   rcu_read_lock();
> #line 1616
>   if ((unsigned int )*((unsigned char *)(& ns) + 1UL) == 14U) {
> #line 1616
>     if (*((unsigned int *)(& ns) + 0UL) == 40960U) {
> #line 1617
>       ns.ldv_40604.disk = 8U;
60041,60042c55197,55224
< #line 1347
<       ns.ldv_39979.disk = 5U;
---
> #line 1616
>       _________p1___0 = *((struct disk_conf * volatile  *)(& (mdev->ldev)->disk_conf));
> #line 1616
>       tmp___42 = debug_lockdep_rcu_enabled();
> #line 1616
>       if (tmp___42 != 0 && ! __warned___0) {
> #line 1616
>         tmp___43 = rcu_read_lock_held();
> #line 1616
>         if (tmp___43 == 0 && 1) {
> #line 1616
>           __warned___0 = 1;
> #line 1616
>           lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared",
>                                  1616, "suspicious rcu_dereference_check() usage");
>         } else {
> 
>         }
>       } else {
> 
>       }
> #line 1616
>       if (_________p1___0->fencing == 0U) {
> #line 1617
>         ns.ldv_40604.disk = 8U;
>       } else {
> 
>       }
60045,60046c55227
< #line 1349
<     ns.ldv_39979.disk = 4U;
---
> 
60048,60053c55229,55246
< #line 1352
<   tmp___40 = drbd_md_test_flag(mdev->ldev, 32);
< #line 1352
<   if (tmp___40 != 0) {
< #line 1353
<     ns.ldv_39979.pdsk = 5U;
---
> #line 1624
>   _________p1___1 = *((struct disk_conf * volatile  *)(& (mdev->ldev)->disk_conf));
> #line 1624
>   tmp___44 = debug_lockdep_rcu_enabled();
> #line 1624
>   if (tmp___44 != 0 && ! __warned___1) {
> #line 1624
>     tmp___45 = rcu_read_lock_held();
> #line 1624
>     if (tmp___45 == 0 && 1) {
> #line 1624
>       __warned___1 = 1;
> #line 1624
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared",
>                              1624, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
60057,60060c55250,55253
< #line 1355
<   if ((unsigned int )*((unsigned char *)(& ns) + 1UL) == 14U && (*((unsigned int *)(& ns) + 0UL) == 40960U || (mdev->ldev)->dc.fencing == 0)) {
< #line 1357
<     ns.ldv_39979.disk = 8U;
---
> #line 1624
>   if ((int )((signed char )_________p1___1->al_updates) != 0) {
> #line 1625
>     (mdev->ldev)->md.flags = (mdev->ldev)->md.flags & 4294967039U;
60062c55255,55256
< 
---
> #line 1627
>     (mdev->ldev)->md.flags = (mdev->ldev)->md.flags | 256U;
60064,60066c55258,55262
< #line 1366
<   if ((unsigned int )*((unsigned short *)mdev + 1138UL) == 160U) {
< #line 1367
---
> #line 1629
>   rcu_read_unlock();
> #line 1633
>   if ((unsigned int )*((unsigned short *)mdev + 374UL) == 160U) {
> #line 1634
60068c55264
< #line 1368
---
> #line 1635
60070,60072c55266,55268
< #line 1369
<     ns.ldv_39979.disk = 3U;
< #line 1374
---
> #line 1636
>     ns.ldv_40604.disk = 3U;
> #line 1641
60074c55270
< #line 1375
---
> #line 1642
60079c55275
< #line 1378
---
> #line 1645
60081,60085c55277,55279
< #line 1379
<   ns = mdev->state;
< #line 1380
<   spin_unlock_irq(& mdev->req_lock);
< #line 1382
---
> #line 1646
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 1648
60087c55281
< #line 1383
---
> #line 1649
60092,60094c55286,55290
< #line 1385
<   if ((unsigned int )*((unsigned char *)mdev + 2276UL) == 1U) {
< #line 1386
---
> #line 1651
>   mod_timer(& mdev->request_timer, (unsigned long )jiffies + 250UL);
> #line 1653
>   if ((unsigned int )*((unsigned char *)mdev + 748UL) == 1U) {
> #line 1654
60097c55293
< #line 1388
---
> #line 1656
60100c55296
< #line 1390
---
> #line 1658
60102c55298
< #line 1391
---
> #line 1659
60104c55300
< #line 1393
---
> #line 1661
60106c55302
< #line 1394
---
> #line 1662
60108,60112c55304,55308
< #line 1395
<   reply->ret_code = (int )retcode;
< #line 1396
<   drbd_reconfig_done(mdev);
< #line 1397
---
> #line 1663
>   conn_reconfig_done(mdev->tconn);
> #line 1664
>   drbd_adm_finish(info, (int )retcode);
> #line 1665
60115c55311
< #line 1400
---
> #line 1668
60118c55314
< #line 1402
---
> #line 1670
60120,60122c55316,55318
< #line 1402
<   val___0.ldv_39979.disk = 2U;
< #line 1402
---
> #line 1670
>   val___0.ldv_40604.disk = 0U;
> #line 1670
60124,60126c55320,55322
< #line 1402
<   mask___0.ldv_39979.disk = 15U;
< #line 1402
---
> #line 1670
>   mask___0.ldv_40604.disk = 15U;
> #line 1670
60128c55324
< #line 1403
---
> #line 1671
60130,60131c55326,55329
<   fail: ;
< #line 1405
---
>   fail: 
> #line 1673
>   conn_reconfig_done(mdev->tconn);
> #line 1674
60133c55331
< #line 1406
---
> #line 1675
60135c55333
< #line 1407
---
> #line 1676
60140c55338
< #line 1409
---
> #line 1678
60142c55340
< #line 1410
---
> #line 1679
60147c55345
< #line 1412
---
> #line 1681
60152c55350,55352
< #line 1414
---
> #line 1683
>   kfree((void const   *)new_disk_conf);
> #line 1684
60154,60158c55354,55359
< #line 1416
<   reply->ret_code = (int )retcode;
< #line 1417
<   drbd_reconfig_done(mdev);
< #line 1418
---
> #line 1685
>   kfree((void const   *)new_plan);
>   finish: 
> #line 1688
>   drbd_adm_finish(info, (int )retcode);
> #line 1689
60162,60163c55363,55364
< #line 1426 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static int drbd_nl_detach(struct drbd_conf *mdev , struct drbd_nl_cfg_req *nlp , struct drbd_nl_cfg_reply *reply ) 
---
> #line 1692 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> static int adm_detach(struct drbd_conf *mdev , int force ) 
60165c55366
<   enum drbd_ret_code retcode ;
---
>   enum drbd_state_rv retcode ;
60167,60168d55367
<   struct detach dt ;
<   int tmp ;
60173c55372
<   int tmp___0 ;
---
>   int tmp ;
60175a55375
>   struct task_struct *tmp___0 ;
60177,60178c55377
<   struct task_struct *tmp___2 ;
<   int tmp___3 ;
---
>   int tmp___2 ;
60181,60198c55380,55384
< #line 1431
<   dt.detach_force = (unsigned char)0;
< #line 1433
<   tmp = detach_from_tags(mdev, (unsigned short *)(& nlp->tag_list), & dt);
< #line 1433
<   if (tmp == 0) {
< #line 1434
<     reply->ret_code = 126;
< #line 1435
<     goto out;
<   } else {
< 
<   }
< #line 1438
<   if ((unsigned int )*((unsigned char *)(& dt) + 0UL) != 0U) {
< #line 1439
<     drbd_set_flag(mdev, FORCE_DETACH);
< #line 1440
---
> #line 1697
>   if (force != 0) {
> #line 1698
>     set_bit(14U, (unsigned long volatile   *)(& mdev->flags));
> #line 1699
60200,60202c55386,55388
< #line 1440
<     val.ldv_39979.disk = 2U;
< #line 1440
---
> #line 1699
>     val.ldv_40604.disk = 2U;
> #line 1699
60204,60206c55390,55392
< #line 1440
<     mask.ldv_39979.disk = 15U;
< #line 1440
---
> #line 1699
>     mask.ldv_40604.disk = 15U;
> #line 1699
60208,60210c55394,55396
< #line 1441
<     reply->ret_code = 1;
< #line 1442
---
> #line 1700
>     retcode = SS_SUCCESS;
> #line 1701
60215c55401
< #line 1445
---
> #line 1704
60217c55403
< #line 1446
---
> #line 1705
60219c55405
< #line 1447
---
> #line 1706
60221,60223c55407,55409
< #line 1447
<   val___0.ldv_39979.disk = 2U;
< #line 1447
---
> #line 1706
>   val___0.ldv_40604.disk = 2U;
> #line 1706
60225,60231c55411,55417
< #line 1447
<   mask___0.ldv_39979.disk = 15U;
< #line 1447
<   tmp___0 = drbd_request_state(mdev, mask___0, val___0);
< #line 1447
<   retcode = (enum drbd_ret_code )tmp___0;
< #line 1448
---
> #line 1706
>   mask___0.ldv_40604.disk = 15U;
> #line 1706
>   tmp = drbd_request_state(mdev, mask___0, val___0);
> #line 1706
>   retcode = (enum drbd_state_rv )tmp;
> #line 1707
60233c55419
< #line 1450
---
> #line 1709
60235,60239c55421,55425
< #line 1450
<   if ((unsigned int )*((unsigned char *)mdev + 2277UL) == 4U) {
< #line 1450
<     tmp___1 = get_current();
< #line 1450
---
> #line 1709
>   if ((unsigned int )*((unsigned char *)mdev + 749UL) == 4U) {
> #line 1709
>     tmp___0 = get_current();
> #line 1709
60241,60243c55427,55429
< #line 1450
<     __wait.private = (void *)tmp___1;
< #line 1450
---
> #line 1709
>     __wait.private = (void *)tmp___0;
> #line 1709
60245c55431
< #line 1450
---
> #line 1709
60247c55433
< #line 1450
---
> #line 1709
60249,60250c55435,55436
<     ldv_54447: 
< #line 1450
---
>     ldv_53207: 
> #line 1709
60252,60255c55438,55441
< #line 1450
<     if ((unsigned int )*((unsigned char *)mdev + 2277UL) != 4U) {
< #line 1450
<       goto ldv_54445;
---
> #line 1709
>     if ((unsigned int )*((unsigned char *)mdev + 749UL) != 4U) {
> #line 1709
>       goto ldv_53205;
60259,60265c55445,55451
< #line 1450
<     tmp___2 = get_current();
< #line 1450
<     tmp___3 = signal_pending(tmp___2);
< #line 1450
<     if (tmp___3 == 0) {
< #line 1450
---
> #line 1709
>     tmp___1 = get_current();
> #line 1709
>     tmp___2 = signal_pending(tmp___1);
> #line 1709
>     if (tmp___2 == 0) {
> #line 1709
60267,60268c55453,55454
< #line 1450
<       goto ldv_54446;
---
> #line 1709
>       goto ldv_53206;
60272c55458
< #line 1450
---
> #line 1709
60274,60280c55460,55466
< #line 1450
<     goto ldv_54445;
<     ldv_54446: ;
< #line 1450
<     goto ldv_54447;
<     ldv_54445: 
< #line 1450
---
> #line 1709
>     goto ldv_53205;
>     ldv_53206: ;
> #line 1709
>     goto ldv_53207;
>     ldv_53205: 
> #line 1709
60285c55471
< #line 1450
---
> #line 1709
60287c55473
< #line 1452
---
> #line 1711
60289,60292c55475,55478
< #line 1454
<   if ((long )retcode == 4294967285L) {
< #line 1455
<     retcode = 2;
---
> #line 1712
>   if ((int )retcode == -11) {
> #line 1713
>     retcode = SS_NOTHING_TO_DO;
60296c55482
< #line 1456
---
> #line 1714
60298,60299c55484,55485
< #line 1457
<     retcode = ERR_INTR;
---
> #line 1715
>     retcode = 129;
60303,60304d55488
< #line 1458
<   reply->ret_code = (int )retcode;
60306,60307c55490,55491
< #line 1460
<   return (0);
---
> #line 1717
>   return ((int )retcode);
60310,60312c55494,55495
< #line 1463 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static int drbd_nl_net_conf(struct drbd_conf *mdev , struct drbd_nl_cfg_req *nlp ,
<                             struct drbd_nl_cfg_reply *reply ) 
---
> #line 1725 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_detach(struct sk_buff *skb , struct genl_info *info ) 
60314,60315d55496
<   int i ;
<   int ns ;
60317,60333c55498,55501
<   struct net_conf *new_conf ;
<   struct crypto_hash *tfm ;
<   struct crypto_hash *integrity_w_tfm ;
<   struct crypto_hash *integrity_r_tfm ;
<   struct hlist_head *new_tl_hash ;
<   struct hlist_head *new_ee_hash ;
<   struct drbd_conf *odev ;
<   char hmac_name[64U] ;
<   void *int_dig_out ;
<   void *int_dig_in ;
<   void *int_dig_vv ;
<   struct sockaddr *new_my_addr ;
<   struct sockaddr *new_peer_addr ;
<   struct sockaddr *taken_addr ;
<   void *tmp ;
<   int tmp___0 ;
<   enum drbd_fencing_p fp ;
---
>   struct detach_parms parms ;
>   int err ;
>   int tmp ;
>   char const   *tmp___0 ;
60335,60350d55502
<   int tmp___2 ;
<   int tmp___3 ;
<   int tmp___4 ;
<   long tmp___5 ;
<   struct crypto_tfm *tmp___6 ;
<   int tmp___7 ;
<   long tmp___8 ;
<   struct crypto_tfm *tmp___9 ;
<   int tmp___10 ;
<   long tmp___11 ;
<   void *tmp___12 ;
<   void *tmp___13 ;
<   unsigned int tmp___14 ;
<   int tmp___15 ;
<   union drbd_state __ns ;
<   enum drbd_state_rv tmp___16 ;
60353,60378c55505,55514
< #line 1468
<   new_conf = 0;
< #line 1469
<   tfm = 0;
< #line 1470
<   integrity_w_tfm = 0;
< #line 1471
<   integrity_r_tfm = 0;
< #line 1472
<   new_tl_hash = 0;
< #line 1473
<   new_ee_hash = 0;
< #line 1476
<   int_dig_out = 0;
< #line 1477
<   int_dig_in = 0;
< #line 1478
<   int_dig_vv = 0;
< #line 1481
<   drbd_reconfig_start(mdev);
< #line 1483
<   if ((int )mdev->state.ldv_39979.conn > 0) {
< #line 1484
<     retcode = ERR_NET_CONFIGURED;
< #line 1485
<     goto fail;
---
> #line 1728
>   parms.force_detach = (char)0;
> #line 1731
>   tmp = drbd_adm_prepare(skb, info, 1U);
> #line 1731
>   retcode = (enum drbd_ret_code )tmp;
> #line 1732
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 1733
>     return ((int )retcode);
60382,60391c55518,55521
< #line 1489
<   tmp = kzalloc(544UL, 208U);
< #line 1489
<   new_conf = (struct net_conf *)tmp;
< #line 1490
<   if ((unsigned long )new_conf == (unsigned long )((struct net_conf *)0)) {
< #line 1491
<     retcode = ERR_NOMEM;
< #line 1492
<     goto fail;
---
> #line 1734
>   if ((unsigned int )retcode != 101U) {
> #line 1735
>     goto out;
60395,60441c55525,55539
< #line 1495
<   new_conf->timeout = 60;
< #line 1496
<   new_conf->try_connect_int = 10;
< #line 1497
<   new_conf->ping_int = 10;
< #line 1498
<   new_conf->max_epoch_size = 2048;
< #line 1499
<   new_conf->max_buffers = 2048;
< #line 1500
<   new_conf->unplug_watermark = 128;
< #line 1501
<   new_conf->sndbuf_size = 0;
< #line 1502
<   new_conf->rcvbuf_size = 0;
< #line 1503
<   new_conf->ko_count = 0;
< #line 1504
<   new_conf->after_sb_0p = 0;
< #line 1505
<   new_conf->after_sb_1p = 0;
< #line 1506
<   new_conf->after_sb_2p = 0;
< #line 1507
<   new_conf->want_lose = 0U;
< #line 1508
<   new_conf->two_primaries = 0U;
< #line 1509
<   new_conf->wire_protocol = 3;
< #line 1510
<   new_conf->ping_timeo = 5;
< #line 1511
<   new_conf->rr_conflict = 0;
< #line 1512
<   new_conf->on_congestion = 0;
< #line 1513
<   new_conf->cong_extents = 127;
< #line 1515
<   tmp___0 = net_conf_from_tags(mdev, (unsigned short *)(& nlp->tag_list), new_conf);
< #line 1515
<   if (tmp___0 == 0) {
< #line 1516
<     retcode = ERR_MANDATORY_TAG;
< #line 1517
<     goto fail;
<   } else {
---
> #line 1737
>   if ((unsigned long )*(info->attrs + 13UL) != (unsigned long )((struct nlattr *)0)) {
> #line 1738
>     err = detach_parms_from_attrs(& parms, info);
> #line 1739
>     if (err != 0) {
> #line 1740
>       retcode = ERR_MANDATORY_TAG;
> #line 1741
>       tmp___0 = from_attrs_err_to_txt(err);
> #line 1741
>       drbd_msg_put_info(tmp___0);
> #line 1742
>       goto out;
>     } else {
60443,60449c55541
<   }
< #line 1520
<   if ((unsigned int )*((unsigned char *)new_conf + 540UL) != 0U && new_conf->wire_protocol != 3) {
< #line 1522
<     retcode = ERR_NOT_PROTO_C;
< #line 1523
<     goto fail;
---
>     }
60453,60467c55545,55563
< #line 1526
<   tmp___1 = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 1526
<   if (tmp___1 != 0) {
< #line 1527
<     fp = (enum drbd_fencing_p )(mdev->ldev)->dc.fencing;
< #line 1528
<     put_ldev(mdev);
< #line 1529
<     if (new_conf->wire_protocol == 1 && (unsigned int )fp == 2U) {
< #line 1530
<       retcode = ERR_STONITH_AND_PROT_A;
< #line 1531
<       goto fail;
<     } else {
---
> #line 1746
>   tmp___1 = adm_detach(adm_ctx.mdev, (int )parms.force_detach);
> #line 1746
>   retcode = (enum drbd_ret_code )tmp___1;
>   out: 
> #line 1748
>   drbd_adm_finish(info, (int )retcode);
> #line 1749
>   return (0);
> }
> }
> #line 1752 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> static bool conn_resync_running(struct drbd_tconn *tconn ) 
> { 
>   struct drbd_conf *mdev ;
>   bool rv ;
>   int vnr ;
>   void *tmp ;
>   void *tmp___0 ;
60469c55565,55584
<     }
---
>   {
> #line 1755
>   rv = 0;
> #line 1758
>   rcu_read_lock();
> #line 1759
>   vnr = 0;
> #line 1759
>   tmp = idr_get_next(& tconn->volumes, & vnr);
> #line 1759
>   mdev = (struct drbd_conf *)tmp;
> #line 1759
>   goto ldv_53225;
>   ldv_53224: ;
> #line 1760
>   if ((((unsigned int )*((unsigned short *)mdev + 374UL) == 256U || (unsigned int )*((unsigned short *)mdev + 374UL) == 272U) || (unsigned int )*((unsigned short *)mdev + 374UL) == 320U) || (unsigned int )*((unsigned short *)mdev + 374UL) == 336U) {
> #line 1764
>     rv = 1;
> #line 1765
>     goto ldv_53223;
60473,60478c55588,55598
< #line 1535
<   if (new_conf->on_congestion != 0 && new_conf->wire_protocol != 1) {
< #line 1536
<     retcode = ERR_CONG_NOT_PROTO_A;
< #line 1537
<     goto fail;
---
> #line 1759
>   vnr = vnr + 1;
> #line 1759
>   tmp___0 = idr_get_next(& tconn->volumes, & vnr);
> #line 1759
>   mdev = (struct drbd_conf *)tmp___0;
>   ldv_53225: ;
> #line 1759
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 1760
>     goto ldv_53224;
60482,60487c55602,55637
< #line 1540
<   if ((unsigned int )*((unsigned char *)mdev + 2276UL) == 1U && (unsigned int )*((unsigned char *)new_conf + 540UL) != 0U) {
< #line 1541
<     retcode = ERR_DISCARD;
< #line 1542
<     goto fail;
---
>   ldv_53223: 
> #line 1768
>   rcu_read_unlock();
> #line 1770
>   return (rv);
> }
> }
> #line 1773 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> static bool conn_ov_running(struct drbd_tconn *tconn ) 
> { 
>   struct drbd_conf *mdev ;
>   bool rv ;
>   int vnr ;
>   void *tmp ;
>   void *tmp___0 ;
> 
>   {
> #line 1776
>   rv = 0;
> #line 1779
>   rcu_read_lock();
> #line 1780
>   vnr = 0;
> #line 1780
>   tmp = idr_get_next(& tconn->volumes, & vnr);
> #line 1780
>   mdev = (struct drbd_conf *)tmp;
> #line 1780
>   goto ldv_53234;
>   ldv_53233: ;
> #line 1781
>   if ((unsigned int )*((unsigned short *)mdev + 374UL) == 288U || (unsigned int )*((unsigned short *)mdev + 374UL) == 304U) {
> #line 1783
>     rv = 1;
> #line 1784
>     goto ldv_53232;
60491,60507c55641,55651
< #line 1545
<   retcode = NO_ERROR;
< #line 1547
<   new_my_addr = (struct sockaddr *)(& new_conf->my_addr);
< #line 1548
<   new_peer_addr = (struct sockaddr *)(& new_conf->peer_addr);
< #line 1549
<   i = 0;
< #line 1549
<   goto ldv_54475;
<   ldv_54474: 
< #line 1550
<   odev = minor_to_mdev((unsigned int )i);
< #line 1551
<   if ((unsigned long )odev == (unsigned long )((struct drbd_conf *)0) || (unsigned long )odev == (unsigned long )mdev) {
< #line 1552
<     goto ldv_54473;
---
> #line 1780
>   vnr = vnr + 1;
> #line 1780
>   tmp___0 = idr_get_next(& tconn->volumes, & vnr);
> #line 1780
>   mdev = (struct drbd_conf *)tmp___0;
>   ldv_53234: ;
> #line 1780
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 1781
>     goto ldv_53233;
60511,60525c55655,55678
< #line 1553
<   tmp___4 = get_net_conf(odev);
< #line 1553
<   if (tmp___4 != 0) {
< #line 1554
<     taken_addr = (struct sockaddr *)(& (odev->net_conf)->my_addr);
< #line 1555
<     if (new_conf->my_addr_len == (odev->net_conf)->my_addr_len) {
< #line 1555
<       tmp___2 = memcmp((void const   *)new_my_addr, (void const   *)taken_addr, (size_t )new_conf->my_addr_len);
< #line 1555
<       if (tmp___2 == 0) {
< #line 1557
<         retcode = ERR_LOCAL_ADDR;
<       } else {
---
>   ldv_53232: 
> #line 1787
>   rcu_read_unlock();
> #line 1789
>   return (rv);
> }
> }
> #line 1793 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> static enum drbd_ret_code _check_net_options(struct drbd_tconn *tconn , struct net_conf *old_conf ,
>                                              struct net_conf *new_conf ) 
> { 
>   struct drbd_conf *mdev ;
>   int i ;
>   int tmp ;
>   enum drbd_role tmp___0 ;
>   enum drbd_role tmp___1 ;
>   void *tmp___2 ;
>   enum drbd_fencing_p fp ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp___3 ;
>   int tmp___4 ;
>   int tmp___5 ;
>   void *tmp___6 ;
60527c55680,55686
<       }
---
>   {
> #line 1798
>   if (((unsigned long )old_conf != (unsigned long )((struct net_conf *)0) && (unsigned int )tconn->cstate == 9U) && tconn->agreed_pro_version <= 99) {
> #line 1799
>     if (new_conf->wire_protocol != old_conf->wire_protocol) {
> #line 1800
>       return (ERR_NEED_APV_100);
60531,60542c55690,55694
< #line 1559
<     taken_addr = (struct sockaddr *)(& (odev->net_conf)->peer_addr);
< #line 1560
<     if (new_conf->peer_addr_len == (odev->net_conf)->peer_addr_len) {
< #line 1560
<       tmp___3 = memcmp((void const   *)new_peer_addr, (void const   *)taken_addr,
<                        (size_t )new_conf->peer_addr_len);
< #line 1560
<       if (tmp___3 == 0) {
< #line 1562
<         retcode = ERR_PEER_ADDR;
<       } else {
---
> #line 1802
>     if ((int )((signed char )new_conf->two_primaries) != (int )((signed char )old_conf->two_primaries)) {
> #line 1803
>       return (ERR_NEED_APV_100);
>     } else {
60544c55696,55702
<       }
---
>     }
> #line 1805
>     tmp = strcmp((char const   *)(& new_conf->integrity_alg), (char const   *)(& old_conf->integrity_alg));
> #line 1805
>     if (tmp != 0) {
> #line 1806
>       return (ERR_NEED_APV_100);
60548,60553c55706,55723
< #line 1564
<     put_net_conf(odev);
< #line 1565
<     if ((unsigned int )retcode != 101U) {
< #line 1566
<       goto fail;
---
>   } else {
> 
>   }
> #line 1809
>   if ((int )((signed char )new_conf->two_primaries) == 0) {
> #line 1809
>     tmp___0 = conn_highest_role(tconn);
> #line 1809
>     if ((unsigned int )tmp___0 == 1U) {
> #line 1809
>       tmp___1 = conn_highest_peer(tconn);
> #line 1809
>       if ((unsigned int )tmp___1 == 1U) {
> #line 1812
>         return (ERR_NEED_ALLOW_TWO_PRI);
>       } else {
> 
>       }
60560,60567c55730,55733
<   ldv_54473: 
< #line 1549
<   i = i + 1;
<   ldv_54475: ;
< #line 1549
<   if ((unsigned int )i < minor_count) {
< #line 1550
<     goto ldv_54474;
---
> #line 1814
>   if ((int )((signed char )new_conf->two_primaries) != 0 && new_conf->wire_protocol != 3U) {
> #line 1816
>     return (ERR_NOT_PROTO_C);
60570a55737,55765
> #line 1818
>   i = 0;
> #line 1818
>   tmp___2 = idr_get_next(& tconn->volumes, & i);
> #line 1818
>   mdev = (struct drbd_conf *)tmp___2;
> #line 1818
>   goto ldv_53247;
>   ldv_53246: 
> #line 1819
>   tmp___5 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 1819
>   if (tmp___5 != 0) {
> #line 1820
>     _________p1 = *((struct disk_conf * volatile  *)(& (mdev->ldev)->disk_conf));
> #line 1820
>     tmp___3 = debug_lockdep_rcu_enabled();
> #line 1820
>     if (tmp___3 != 0 && ! __warned) {
> #line 1820
>       tmp___4 = rcu_read_lock_held();
> #line 1820
>       if (tmp___4 == 0 && 1) {
> #line 1820
>         __warned = 1;
> #line 1820
>         lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared",
>                                1820, "suspicious rcu_dereference_check() usage");
>       } else {
60572,60587c55767
< #line 1570
<   if ((unsigned int )new_conf->cram_hmac_alg[0] != 0U) {
< #line 1571
<     snprintf((char *)(& hmac_name), 64UL, "hmac(%s)", (unsigned char *)(& new_conf->cram_hmac_alg));
< #line 1573
<     tfm = crypto_alloc_hash((char const   *)(& hmac_name), 0U, 128U);
< #line 1574
<     tmp___5 = IS_ERR((void const   *)tfm);
< #line 1574
<     if (tmp___5 != 0L) {
< #line 1575
<       tfm = 0;
< #line 1576
<       retcode = ERR_AUTH_ALG;
< #line 1577
<       goto fail;
---
>       }
60591,60600c55771,55778
< #line 1580
<     tmp___6 = crypto_hash_tfm(tfm);
< #line 1580
<     tmp___7 = drbd_crypto_is_hash(tmp___6);
< #line 1580
<     if (tmp___7 == 0) {
< #line 1581
<       retcode = ERR_AUTH_ALG_ND;
< #line 1582
<       goto fail;
---
> #line 1820
>     fp = (enum drbd_fencing_p )_________p1->fencing;
> #line 1821
>     put_ldev(mdev);
> #line 1822
>     if (new_conf->wire_protocol == 1U && (int )fp == 2) {
> #line 1823
>       return (ERR_STONITH_AND_PROT_A);
60607,60622c55785,55789
< #line 1586
<   if ((unsigned int )new_conf->integrity_alg[0] != 0U) {
< #line 1587
<     integrity_w_tfm = crypto_alloc_hash((char const   *)(& new_conf->integrity_alg),
<                                         0U, 128U);
< #line 1588
<     tmp___8 = IS_ERR((void const   *)integrity_w_tfm);
< #line 1588
<     if (tmp___8 != 0L) {
< #line 1589
<       integrity_w_tfm = 0;
< #line 1590
<       retcode = ERR_INTEGRITY_ALG;
< #line 1591
<       goto fail;
<     } else {
---
> #line 1825
>   if ((unsigned int )*((unsigned char *)mdev + 748UL) == 1U && (int )((signed char )new_conf->discard_my_data) != 0) {
> #line 1826
>     return (ERR_DISCARD_IMPOSSIBLE);
>   } else {
60624,60635c55791,55803
<     }
< #line 1594
<     tmp___9 = crypto_hash_tfm(integrity_w_tfm);
< #line 1594
<     tmp___10 = drbd_crypto_is_hash(tmp___9);
< #line 1594
<     if (tmp___10 == 0) {
< #line 1595
<       retcode = ERR_INTEGRITY_ALG_ND;
< #line 1596
<       goto fail;
<     } else {
---
>   }
> #line 1818
>   i = i + 1;
> #line 1818
>   tmp___6 = idr_get_next(& tconn->volumes, & i);
> #line 1818
>   mdev = (struct drbd_conf *)tmp___6;
>   ldv_53247: ;
> #line 1818
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 1819
>     goto ldv_53246;
>   } else {
60637,60651c55805
<     }
< #line 1599
<     integrity_r_tfm = crypto_alloc_hash((char const   *)(& new_conf->integrity_alg),
<                                         0U, 128U);
< #line 1600
<     tmp___11 = IS_ERR((void const   *)integrity_r_tfm);
< #line 1600
<     if (tmp___11 != 0L) {
< #line 1601
<       integrity_r_tfm = 0;
< #line 1602
<       retcode = ERR_INTEGRITY_ALG;
< #line 1603
<       goto fail;
<     } else {
---
>   }
60653c55807,55810
<     }
---
> #line 1829
>   if (new_conf->on_congestion != 0U && new_conf->wire_protocol != 1U) {
> #line 1830
>     return (ERR_CONG_NOT_PROTO_A);
60657,60670c55814,55849
< #line 1607
<   ns = new_conf->max_epoch_size / 8;
< #line 1608
<   if (mdev->tl_hash_s != (unsigned int )ns) {
< #line 1609
<     tmp___12 = kzalloc((unsigned long )ns * 8UL, 208U);
< #line 1609
<     new_tl_hash = (struct hlist_head *)tmp___12;
< #line 1610
<     if ((unsigned long )new_tl_hash == (unsigned long )((struct hlist_head *)0)) {
< #line 1611
<       retcode = ERR_NOMEM;
< #line 1612
<       goto fail;
---
> #line 1832
>   return (NO_ERROR);
> }
> }
> #line 1836 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> static enum drbd_ret_code check_net_options(struct drbd_tconn *tconn , struct net_conf *new_conf ) 
> { 
>   enum drbd_ret_code rv ;
>   struct drbd_conf *mdev ;
>   int i ;
>   struct net_conf *_________p1 ;
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
>   void *tmp___1 ;
>   int tmp___2 ;
>   void *tmp___3 ;
> 
>   {
> #line 1842
>   rcu_read_lock();
> #line 1843
>   _________p1 = *((struct net_conf * volatile  *)(& tconn->net_conf));
> #line 1843
>   tmp = debug_lockdep_rcu_enabled();
> #line 1843
>   if (tmp != 0 && ! __warned) {
> #line 1843
>     tmp___0 = rcu_read_lock_held();
> #line 1843
>     if (tmp___0 == 0 && 1) {
> #line 1843
>       __warned = 1;
> #line 1843
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared",
>                              1843, "suspicious rcu_dereference_check() usage");
60677,60690c55856,55876
< #line 1616
<   ns = new_conf->max_buffers / 8;
< #line 1617
<   if ((unsigned int )*((unsigned char *)new_conf + 540UL) != 0U && mdev->ee_hash_s != (unsigned int )ns) {
< #line 1618
<     tmp___13 = kzalloc((unsigned long )ns * 8UL, 208U);
< #line 1618
<     new_ee_hash = (struct hlist_head *)tmp___13;
< #line 1619
<     if ((unsigned long )new_ee_hash == (unsigned long )((struct hlist_head *)0)) {
< #line 1620
<       retcode = ERR_NOMEM;
< #line 1621
<       goto fail;
---
> #line 1843
>   rv = _check_net_options(tconn, _________p1, new_conf);
> #line 1844
>   rcu_read_unlock();
> #line 1847
>   i = 0;
> #line 1847
>   tmp___1 = idr_get_next(& tconn->volumes, & i);
> #line 1847
>   mdev = (struct drbd_conf *)tmp___1;
> #line 1847
>   goto ldv_53260;
>   ldv_53259: ;
> #line 1848
>   if ((unsigned long )mdev->bitmap == (unsigned long )((struct drbd_bitmap *)0)) {
> #line 1849
>     tmp___2 = drbd_bm_init(mdev);
> #line 1849
>     if (tmp___2 != 0) {
> #line 1850
>       return (ERR_NOMEM);
60697,60713c55883,55894
< #line 1625
<   *((char *)(& new_conf->shared_secret) + 63UL) = 0;
< #line 1627
<   if ((unsigned long )integrity_w_tfm != (unsigned long )((struct crypto_hash *)0)) {
< #line 1628
<     tmp___14 = crypto_hash_digestsize(integrity_w_tfm);
< #line 1628
<     i = (int )tmp___14;
< #line 1629
<     int_dig_out = kmalloc((size_t )i, 208U);
< #line 1630
<     if ((unsigned long )int_dig_out == (unsigned long )((void *)0)) {
< #line 1631
<       retcode = ERR_NOMEM;
< #line 1632
<       goto fail;
<     } else {
---
> #line 1847
>   i = i + 1;
> #line 1847
>   tmp___3 = idr_get_next(& tconn->volumes, & i);
> #line 1847
>   mdev = (struct drbd_conf *)tmp___3;
>   ldv_53260: ;
> #line 1847
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 1848
>     goto ldv_53259;
>   } else {
60715,60724c55896
<     }
< #line 1634
<     int_dig_in = kmalloc((size_t )i, 208U);
< #line 1635
<     if ((unsigned long )int_dig_in == (unsigned long )((void *)0)) {
< #line 1636
<       retcode = ERR_NOMEM;
< #line 1637
<       goto fail;
<     } else {
---
>   }
60726,60735c55898,55905
<     }
< #line 1639
<     int_dig_vv = kmalloc((size_t )i, 208U);
< #line 1640
<     if ((unsigned long )int_dig_vv == (unsigned long )((void *)0)) {
< #line 1641
<       retcode = ERR_NOMEM;
< #line 1642
<       goto fail;
<     } else {
---
> #line 1854
>   return (rv);
> }
> }
> #line 1865 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> static int alloc_hash(struct crypto_hash **tfm , char *tfm_name , int err_alg ) 
> { 
>   long tmp ;
60737c55907,55911
<     }
---
>   {
> #line 1867
>   if ((int )((signed char )*tfm_name) == 0) {
> #line 1868
>     return (101);
60741,60751c55915,55925
< #line 1646
<   if ((unsigned long )mdev->bitmap == (unsigned long )((struct drbd_bitmap *)0)) {
< #line 1647
<     tmp___15 = drbd_bm_init(mdev);
< #line 1647
<     if (tmp___15 != 0) {
< #line 1648
<       retcode = ERR_NOMEM;
< #line 1649
<       goto fail;
<     } else {
---
> #line 1870
>   *tfm = crypto_alloc_hash((char const   *)tfm_name, 0U, 128U);
> #line 1871
>   tmp = IS_ERR((void const   *)*tfm);
> #line 1871
>   if (tmp != 0L) {
> #line 1872
>     *tfm = 0;
> #line 1873
>     return (err_alg);
>   } else {
60753c55927,55950
<     }
---
>   }
> #line 1876
>   return (101);
> }
> }
> #line 1880 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> static enum drbd_ret_code alloc_crypto(struct crypto *crypto , struct net_conf *new_conf ) 
> { 
>   char hmac_name[64U] ;
>   enum drbd_ret_code rv ;
>   int tmp ;
>   int tmp___0 ;
>   int tmp___1 ;
>   int tmp___2 ;
> 
>   {
> #line 1885
>   tmp = alloc_hash(& crypto->csums_tfm, (char *)(& new_conf->csums_alg), 144);
> #line 1885
>   rv = (enum drbd_ret_code )tmp;
> #line 1887
>   if ((unsigned int )rv != 101U) {
> #line 1888
>     return (rv);
60757,60768c55954,55961
< #line 1653
<   drbd_flush_workqueue(mdev);
< #line 1654
<   spin_lock_irq(& mdev->req_lock);
< #line 1655
<   if ((unsigned long )mdev->net_conf != (unsigned long )((struct net_conf *)0)) {
< #line 1656
<     retcode = ERR_NET_CONFIGURED;
< #line 1657
<     spin_unlock_irq(& mdev->req_lock);
< #line 1658
<     goto fail;
---
> #line 1889
>   tmp___0 = alloc_hash(& crypto->verify_tfm, (char *)(& new_conf->verify_alg), 146);
> #line 1889
>   rv = (enum drbd_ret_code )tmp___0;
> #line 1891
>   if ((unsigned int )rv != 101U) {
> #line 1892
>     return (rv);
60772,60785c55965,55973
< #line 1660
<   mdev->net_conf = new_conf;
< #line 1662
<   mdev->send_cnt = 0U;
< #line 1663
<   mdev->recv_cnt = 0U;
< #line 1665
<   if ((unsigned long )new_tl_hash != (unsigned long )((struct hlist_head *)0)) {
< #line 1666
<     kfree((void const   *)mdev->tl_hash);
< #line 1667
<     mdev->tl_hash_s = (unsigned int )((mdev->net_conf)->max_epoch_size / 8);
< #line 1668
<     mdev->tl_hash = new_tl_hash;
---
> #line 1893
>   tmp___1 = alloc_hash(& crypto->integrity_tfm, (char *)(& new_conf->integrity_alg),
>                        141);
> #line 1893
>   rv = (enum drbd_ret_code )tmp___1;
> #line 1895
>   if ((unsigned int )rv != 101U) {
> #line 1896
>     return (rv);
60789,60796c55977,55984
< #line 1671
<   if ((unsigned long )new_ee_hash != (unsigned long )((struct hlist_head *)0)) {
< #line 1672
<     kfree((void const   *)mdev->ee_hash);
< #line 1673
<     mdev->ee_hash_s = (unsigned int )((mdev->net_conf)->max_buffers / 8);
< #line 1674
<     mdev->ee_hash = new_ee_hash;
---
> #line 1897
>   if ((int )((signed char )new_conf->cram_hmac_alg[0]) != 0) {
> #line 1898
>     snprintf((char *)(& hmac_name), 64UL, "hmac(%s)", (char *)(& new_conf->cram_hmac_alg));
> #line 1901
>     tmp___2 = alloc_hash(& crypto->cram_hmac_tfm, (char *)(& hmac_name), 120);
> #line 1901
>     rv = (enum drbd_ret_code )tmp___2;
60800,60866c55988,55989
< #line 1677
<   crypto_free_hash(mdev->cram_hmac_tfm);
< #line 1678
<   mdev->cram_hmac_tfm = tfm;
< #line 1680
<   crypto_free_hash(mdev->integrity_w_tfm);
< #line 1681
<   mdev->integrity_w_tfm = integrity_w_tfm;
< #line 1683
<   crypto_free_hash(mdev->integrity_r_tfm);
< #line 1684
<   mdev->integrity_r_tfm = integrity_r_tfm;
< #line 1686
<   kfree((void const   *)mdev->int_dig_out);
< #line 1687
<   kfree((void const   *)mdev->int_dig_in);
< #line 1688
<   kfree((void const   *)mdev->int_dig_vv);
< #line 1689
<   mdev->int_dig_out = int_dig_out;
< #line 1690
<   mdev->int_dig_in = int_dig_in;
< #line 1691
<   mdev->int_dig_vv = int_dig_vv;
< #line 1692
<   __ns.i = mdev->state.i;
< #line 1692
<   __ns.ldv_39979.conn = 2U;
< #line 1692
<   tmp___16 = _drbd_set_state(mdev, __ns, CS_VERBOSE, 0);
< #line 1692
<   retcode = (enum drbd_ret_code )tmp___16;
< #line 1693
<   spin_unlock_irq(& mdev->req_lock);
< #line 1695
<   kobject_uevent(& (mdev->vdisk)->part0.__dev.kobj, KOBJ_CHANGE);
< #line 1696
<   reply->ret_code = (int )retcode;
< #line 1697
<   drbd_reconfig_done(mdev);
< #line 1698
<   return (0);
<   fail: 
< #line 1701
<   kfree((void const   *)int_dig_out);
< #line 1702
<   kfree((void const   *)int_dig_in);
< #line 1703
<   kfree((void const   *)int_dig_vv);
< #line 1704
<   crypto_free_hash(tfm);
< #line 1705
<   crypto_free_hash(integrity_w_tfm);
< #line 1706
<   crypto_free_hash(integrity_r_tfm);
< #line 1707
<   kfree((void const   *)new_tl_hash);
< #line 1708
<   kfree((void const   *)new_ee_hash);
< #line 1709
<   kfree((void const   *)new_conf);
< #line 1711
<   reply->ret_code = (int )retcode;
< #line 1712
<   drbd_reconfig_done(mdev);
< #line 1713
<   return (0);
---
> #line 1905
>   return (rv);
60869,60871c55992,55993
< #line 1716 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static int drbd_nl_disconnect(struct drbd_conf *mdev , struct drbd_nl_cfg_req *nlp ,
<                               struct drbd_nl_cfg_reply *reply ) 
---
> #line 1908 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> static void free_crypto(struct crypto *crypto ) 
60873,60874c55995,56020
<   int retcode ;
<   struct disconnect dc ;
---
> 
> 
>   {
> #line 1910
>   crypto_free_hash(crypto->cram_hmac_tfm);
> #line 1911
>   crypto_free_hash(crypto->integrity_tfm);
> #line 1912
>   crypto_free_hash(crypto->csums_tfm);
> #line 1913
>   crypto_free_hash(crypto->verify_tfm);
> #line 1914
>   return;
> }
> }
> #line 1916 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_net_opts(struct sk_buff *skb , struct genl_info *info ) 
> { 
>   enum drbd_ret_code retcode ;
>   struct drbd_tconn *tconn ;
>   struct net_conf *old_conf ;
>   struct net_conf *new_conf ;
>   int err ;
>   int ovr ;
>   int rsr ;
>   struct crypto crypto ;
60876,60890c56022,56025
<   union drbd_state __ns ;
<   union drbd_state val ;
<   union drbd_state mask ;
<   enum drbd_state_rv tmp___0 ;
<   union drbd_state val___0 ;
<   union drbd_state mask___0 ;
<   union drbd_state val___1 ;
<   union drbd_state mask___1 ;
<   enum drbd_state_rv tmp___1 ;
<   union drbd_state val___2 ;
<   union drbd_state mask___2 ;
<   int __ret ;
<   wait_queue_t __wait ;
<   struct task_struct *tmp___2 ;
<   struct task_struct *tmp___3 ;
---
>   void *tmp___0 ;
>   bool tmp___1 ;
>   char const   *tmp___2 ;
>   bool tmp___3 ;
60891a56027,56030
>   bool tmp___5 ;
>   int tmp___6 ;
>   int tmp___7 ;
>   struct drbd_conf *tmp___8 ;
60894,60903c56033,56050
< #line 1722
<   memset((void *)(& dc), 0, 4UL);
< #line 1723
<   tmp = disconnect_from_tags(mdev, (unsigned short *)(& nlp->tag_list), & dc);
< #line 1723
<   if (tmp == 0) {
< #line 1724
<     retcode = 126;
< #line 1725
<     goto fail;
---
> #line 1920
>   new_conf = 0;
> #line 1924
>   crypto.verify_tfm = 0;
> #line 1924
>   crypto.csums_tfm = 0;
> #line 1924
>   crypto.cram_hmac_tfm = 0;
> #line 1924
>   crypto.integrity_tfm = 0;
> #line 1926
>   tmp = drbd_adm_prepare(skb, info, 4U);
> #line 1926
>   retcode = (enum drbd_ret_code )tmp;
> #line 1927
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 1928
>     return ((int )retcode);
60907,60919c56054,56058
< #line 1728
<   if ((unsigned int )*((unsigned char *)(& dc) + 0UL) != 0U) {
< #line 1729
<     spin_lock_irq(& mdev->req_lock);
< #line 1730
<     if ((int )mdev->state.ldv_39979.conn > 7) {
< #line 1731
<       __ns.i = mdev->state.i;
< #line 1731
<       __ns.ldv_39979.conn = 1U;
< #line 1731
<       _drbd_set_state(mdev, __ns, CS_HARD, 0);
<     } else {
---
> #line 1929
>   if ((unsigned int )retcode != 101U) {
> #line 1930
>     goto out;
>   } else {
60921,60925c56060,56072
<     }
< #line 1732
<     spin_unlock_irq(& mdev->req_lock);
< #line 1733
<     goto done;
---
>   }
> #line 1932
>   tconn = adm_ctx.tconn;
> #line 1934
>   tmp___0 = kzalloc(420UL, 208U);
> #line 1934
>   new_conf = (struct net_conf *)tmp___0;
> #line 1935
>   if ((unsigned long )new_conf == (unsigned long )((struct net_conf *)0)) {
> #line 1936
>     retcode = ERR_NOMEM;
> #line 1937
>     goto out;
60929,61000c56076,56092
< #line 1736
<   val.i = 0U;
< #line 1736
<   val.ldv_39979.conn = 1U;
< #line 1736
<   mask.i = 0U;
< #line 1736
<   mask.ldv_39979.conn = 31U;
< #line 1736
<   tmp___0 = _drbd_request_state(mdev, mask, val, CS_ORDERED);
< #line 1736
<   retcode = (int )tmp___0;
< #line 1738
<   if (retcode == 2) {
< #line 1739
<     goto done;
<   } else
< #line 1740
<   if (retcode == -9) {
< #line 1741
<     goto done;
<   } else
< #line 1742
<   if (retcode == -7) {
< #line 1745
<     val___0.i = 0U;
< #line 1745
<     val___0.ldv_39979.conn = 1U;
< #line 1745
<     val___0.ldv_39979.pdsk = 5U;
< #line 1744
<     mask___0.i = 0U;
< #line 1744
<     mask___0.ldv_39979.conn = 31U;
< #line 1745
<     mask___0.ldv_39979.pdsk = 15U;
< #line 1745
<     retcode = drbd_request_state(mdev, mask___0, val___0);
<   } else
< #line 1746
<   if (retcode == -10) {
< #line 1749
<     val___1.i = 0U;
< #line 1749
<     val___1.ldv_39979.conn = 1U;
< #line 1749
<     val___1.ldv_39979.disk = 5U;
< #line 1748
<     mask___1.i = 0U;
< #line 1748
<     mask___1.ldv_39979.conn = 31U;
< #line 1749
<     mask___1.ldv_39979.disk = 15U;
< #line 1749
<     tmp___1 = _drbd_request_state(mdev, mask___1, val___1, CS_ORDERED);
< #line 1749
<     retcode = (int )tmp___1;
< #line 1751
<     if (retcode == -11 || retcode == -16) {
< #line 1752
<       val___2.i = 0U;
< #line 1752
<       val___2.ldv_39979.conn = 1U;
< #line 1752
<       mask___2.i = 0U;
< #line 1752
<       mask___2.ldv_39979.conn = 31U;
< #line 1752
<       drbd_force_state(mdev, mask___2, val___2);
< #line 1753
<       retcode = 1;
<     } else {
---
> #line 1940
>   conn_reconfig_start(tconn);
> #line 1942
>   mutex_lock_nested(& tconn->data.mutex, 0U);
> #line 1943
>   mutex_lock_nested(& tconn->conf_update, 0U);
> #line 1944
>   old_conf = tconn->net_conf;
> #line 1946
>   if ((unsigned long )old_conf == (unsigned long )((struct net_conf *)0)) {
> #line 1947
>     drbd_msg_put_info("net conf missing, try connect");
> #line 1948
>     retcode = ERR_INVALID_REQUEST;
> #line 1949
>     goto fail;
>   } else {
61002c56094,56102
<     }
---
>   }
> #line 1952
>   *new_conf = *old_conf;
> #line 1953
>   tmp___1 = should_set_defaults(info);
> #line 1953
>   if ((int )tmp___1) {
> #line 1954
>     set_net_conf_defaults(new_conf);
61006,61008c56106,56116
< #line 1757
<   if (retcode <= 0) {
< #line 1758
---
> #line 1956
>   err = net_conf_from_attrs_for_change(new_conf, info);
> #line 1957
>   if (err != 0 && err != -42) {
> #line 1958
>     retcode = ERR_MANDATORY_TAG;
> #line 1959
>     tmp___2 = from_attrs_err_to_txt(err);
> #line 1959
>     drbd_msg_put_info(tmp___2);
> #line 1960
61013,61035c56121,56143
< #line 1760
<   __ret = 0;
< #line 1760
<   if ((unsigned int )*((unsigned short *)mdev + 1138UL) == 16U) {
< #line 1760
<     tmp___2 = get_current();
< #line 1760
<     __wait.flags = 0U;
< #line 1760
<     __wait.private = (void *)tmp___2;
< #line 1760
<     __wait.func = & autoremove_wake_function;
< #line 1760
<     __wait.task_list.next = & __wait.task_list;
< #line 1760
<     __wait.task_list.prev = & __wait.task_list;
<     ldv_54510: 
< #line 1760
<     prepare_to_wait(& mdev->state_wait, & __wait, 1);
< #line 1760
<     if ((unsigned int )*((unsigned short *)mdev + 1138UL) != 16U) {
< #line 1760
<       goto ldv_54508;
---
> #line 1963
>   retcode = check_net_options(tconn, new_conf);
> #line 1964
>   if ((unsigned int )retcode != 101U) {
> #line 1965
>     goto fail;
>   } else {
> 
>   }
> #line 1968
>   tmp___3 = conn_resync_running(tconn);
> #line 1968
>   rsr = (int )tmp___3;
> #line 1969
>   if (rsr != 0) {
> #line 1969
>     tmp___4 = strcmp((char const   *)(& new_conf->csums_alg), (char const   *)(& old_conf->csums_alg));
> #line 1969
>     if (tmp___4 != 0) {
> #line 1970
>       retcode = ERR_CSUMS_RESYNC_RUNNING;
> #line 1971
>       goto fail;
61039,61048c56147,56163
< #line 1760
<     tmp___3 = get_current();
< #line 1760
<     tmp___4 = signal_pending(tmp___3);
< #line 1760
<     if (tmp___4 == 0) {
< #line 1760
<       schedule();
< #line 1760
<       goto ldv_54509;
---
>   } else {
> 
>   }
> #line 1975
>   tmp___5 = conn_ov_running(tconn);
> #line 1975
>   ovr = (int )tmp___5;
> #line 1976
>   if (ovr != 0) {
> #line 1976
>     tmp___6 = strcmp((char const   *)(& new_conf->verify_alg), (char const   *)(& old_conf->verify_alg));
> #line 1976
>     if (tmp___6 != 0) {
> #line 1977
>       retcode = ERR_VERIFY_RUNNING;
> #line 1978
>       goto fail;
61052,61061d56166
< #line 1760
<     __ret = -512;
< #line 1760
<     goto ldv_54508;
<     ldv_54509: ;
< #line 1760
<     goto ldv_54510;
<     ldv_54508: 
< #line 1760
<     finish_wait(& mdev->state_wait, & __wait);
61065,61069c56170,56174
< #line 1760
<   if (__ret != 0) {
< #line 1764
<     retcode = 129;
< #line 1765
---
> #line 1981
>   retcode = alloc_crypto(& crypto, new_conf);
> #line 1982
>   if ((unsigned int )retcode != 101U) {
> #line 1983
61074,61076c56179,56240
<   done: 
< #line 1769
<   retcode = 101;
---
> #line 1985
>   __asm__  volatile   ("": : : "memory");
> #line 1985
>   tconn->net_conf = new_conf;
> #line 1987
>   if (rsr == 0) {
> #line 1988
>     crypto_free_hash(tconn->csums_tfm);
> #line 1989
>     tconn->csums_tfm = crypto.csums_tfm;
> #line 1990
>     crypto.csums_tfm = 0;
>   } else {
> 
>   }
> #line 1992
>   if (ovr == 0) {
> #line 1993
>     crypto_free_hash(tconn->verify_tfm);
> #line 1994
>     tconn->verify_tfm = crypto.verify_tfm;
> #line 1995
>     crypto.verify_tfm = 0;
>   } else {
> 
>   }
> #line 1998
>   crypto_free_hash(tconn->integrity_tfm);
> #line 1999
>   tconn->integrity_tfm = crypto.integrity_tfm;
> #line 2000
>   if ((unsigned int )tconn->cstate > 8U && tconn->agreed_pro_version > 99) {
> #line 2002
>     __drbd_send_protocol(tconn, P_PROTOCOL_UPDATE);
>   } else {
> 
>   }
> #line 2004
>   crypto_free_hash(tconn->cram_hmac_tfm);
> #line 2005
>   tconn->cram_hmac_tfm = crypto.cram_hmac_tfm;
> #line 2007
>   mutex_unlock(& tconn->conf_update);
> #line 2008
>   mutex_unlock(& tconn->data.mutex);
> #line 2009
>   synchronize_rcu();
> #line 2010
>   kfree((void const   *)old_conf);
> #line 2012
>   if ((unsigned int )tconn->cstate > 8U) {
> #line 2013
>     tmp___7 = conn_lowest_minor(tconn);
> #line 2013
>     tmp___8 = minor_to_mdev((unsigned int )tmp___7);
> #line 2013
>     drbd_send_sync_param(tmp___8);
>   } else {
> 
>   }
> #line 2015
>   goto done;
61078,61082c56242,56256
< #line 1771
<   drbd_md_sync(mdev);
< #line 1772
<   reply->ret_code = retcode;
< #line 1773
---
> #line 2018
>   mutex_unlock(& tconn->conf_update);
> #line 2019
>   mutex_unlock(& tconn->data.mutex);
> #line 2020
>   free_crypto(& crypto);
> #line 2021
>   kfree((void const   *)new_conf);
>   done: 
> #line 2023
>   conn_reconfig_done(tconn);
>   out: 
> #line 2025
>   drbd_adm_finish(info, (int )retcode);
> #line 2026
61086,61087c56260,56261
< #line 1776 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void resync_after_online_grow(struct drbd_conf *mdev ) 
---
> #line 2029 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_connect(struct sk_buff *skb , struct genl_info *info ) 
61089c56263,56289
<   int iass ;
---
>   struct drbd_conf *mdev ;
>   struct net_conf *old_conf ;
>   struct net_conf *new_conf ;
>   struct crypto crypto ;
>   struct drbd_tconn *tconn ;
>   enum drbd_ret_code retcode ;
>   int i ;
>   int err ;
>   int tmp ;
>   struct list_head  const  *__mptr ;
>   int tmp___0 ;
>   void *tmp___1 ;
>   int tmp___2 ;
>   int tmp___3 ;
>   void *tmp___4 ;
>   int tmp___5 ;
>   struct list_head  const  *__mptr___0 ;
>   void *tmp___6 ;
>   char const   *tmp___7 ;
>   size_t __len ;
>   void *__ret ;
>   void *tmp___9 ;
>   size_t __len___0 ;
>   void *__ret___0 ;
>   void *tmp___11 ;
>   void *tmp___12 ;
>   void *tmp___13 ;
61091a56292
>   enum drbd_state_rv tmp___14 ;
61094,61099c56295,56312
< #line 1780
<   _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Resync of new storage after online grow\n");
< #line 1781
<   if ((int )mdev->state.ldv_39979.role != (int )mdev->state.ldv_39979.peer) {
< #line 1782
<     iass = (unsigned int )*((unsigned char *)mdev + 2276UL) == 1U;
---
> #line 2032
>   new_conf = 0;
> #line 2033
>   crypto.verify_tfm = 0;
> #line 2033
>   crypto.csums_tfm = 0;
> #line 2033
>   crypto.cram_hmac_tfm = 0;
> #line 2033
>   crypto.integrity_tfm = 0;
> #line 2039
>   tmp = drbd_adm_prepare(skb, info, 2U);
> #line 2039
>   retcode = (enum drbd_ret_code )tmp;
> #line 2041
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 2042
>     return ((int )retcode);
61101,61102c56314
< #line 1784
<     iass = drbd_test_flag(mdev, DISCARD_CONCURRENT);
---
> 
61104,61107c56316,56319
< #line 1786
<   if (iass != 0) {
< #line 1787
<     drbd_start_resync(mdev, C_SYNC_SOURCE);
---
> #line 2043
>   if ((unsigned int )retcode != 101U) {
> #line 2044
>     goto out;
61109,61118c56321
< #line 1789
<     val.i = 0U;
< #line 1789
<     val.ldv_39979.conn = 15U;
< #line 1789
<     mask.i = 0U;
< #line 1789
<     mask.ldv_39979.conn = 31U;
< #line 1789
<     _drbd_request_state(mdev, mask, val, 10);
---
> 
61120,61133c56323,56331
< #line 1791
<   return;
< }
< }
< #line 1792 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static int drbd_nl_resize(struct drbd_conf *mdev , struct drbd_nl_cfg_req *nlp , struct drbd_nl_cfg_reply *reply ) 
< { 
<   struct resize rs ;
<   int retcode ;
<   enum determine_dev_size dd ;
<   enum dds_flags ddsf ;
<   int tmp ;
<   int tmp___0 ;
<   sector_t tmp___1 ;
---
> #line 2045
>   if ((unsigned long )adm_ctx.my_addr == (unsigned long )((struct nlattr *)0) || (unsigned long )adm_ctx.peer_addr == (unsigned long )((struct nlattr *)0)) {
> #line 2046
>     drbd_msg_put_info("connection endpoint(s) missing");
> #line 2047
>     retcode = ERR_INVALID_REQUEST;
> #line 2048
>     goto out;
>   } else {
61135,61147c56333,56358
<   {
< #line 1796
<   retcode = 101;
< #line 1800
<   memset((void *)(& rs), 0, 16UL);
< #line 1801
<   tmp = resize_from_tags(mdev, (unsigned short *)(& nlp->tag_list), & rs);
< #line 1801
<   if (tmp == 0) {
< #line 1802
<     retcode = 126;
< #line 1803
<     goto fail;
---
>   }
> #line 2054
>   __mptr = (struct list_head  const  *)drbd_tconns.next;
> #line 2054
>   tconn = (struct drbd_tconn *)__mptr + 0xfffffffffffffff8UL;
> #line 2054
>   goto ldv_53314;
>   ldv_53313: 
> #line 2055
>   tmp___0 = nla_len((struct nlattr  const  *)adm_ctx.my_addr);
> #line 2055
>   if (tmp___0 == tconn->my_addr_len) {
> #line 2055
>     tmp___1 = nla_data((struct nlattr  const  *)adm_ctx.my_addr);
> #line 2055
>     tmp___2 = memcmp((void const   *)tmp___1, (void const   *)(& tconn->my_addr),
>                      (size_t )tconn->my_addr_len);
> #line 2055
>     if (tmp___2 == 0) {
> #line 2057
>       retcode = ERR_LOCAL_ADDR;
> #line 2058
>       goto out;
>     } else {
> 
>     }
61151,61156c56362,56379
< #line 1806
<   if ((int )mdev->state.ldv_39979.conn > 10) {
< #line 1807
<     retcode = 130;
< #line 1808
<     goto fail;
---
> #line 2061
>   tmp___3 = nla_len((struct nlattr  const  *)adm_ctx.peer_addr);
> #line 2061
>   if (tmp___3 == tconn->peer_addr_len) {
> #line 2061
>     tmp___4 = nla_data((struct nlattr  const  *)adm_ctx.peer_addr);
> #line 2061
>     tmp___5 = memcmp((void const   *)tmp___4, (void const   *)(& tconn->peer_addr),
>                      (size_t )tconn->peer_addr_len);
> #line 2061
>     if (tmp___5 == 0) {
> #line 2063
>       retcode = ERR_PEER_ADDR;
> #line 2064
>       goto out;
>     } else {
> 
>     }
61160,61164c56383,56403
< #line 1811
<   if ((unsigned int )*((unsigned char *)mdev + 2276UL) == 2U && (unsigned int )*((unsigned char *)mdev + 2276UL) == 8U) {
< #line 1813
<     retcode = 131;
< #line 1814
---
> #line 2054
>   __mptr___0 = (struct list_head  const  *)tconn->all_tconn.next;
> #line 2054
>   tconn = (struct drbd_tconn *)__mptr___0 + 0xfffffffffffffff8UL;
>   ldv_53314: ;
> #line 2054
>   if ((unsigned long )(& tconn->all_tconn) != (unsigned long )(& drbd_tconns)) {
> #line 2055
>     goto ldv_53313;
>   } else {
> 
>   }
> #line 2068
>   tconn = adm_ctx.tconn;
> #line 2069
>   conn_reconfig_start(tconn);
> #line 2071
>   if ((unsigned int )tconn->cstate != 0U) {
> #line 2072
>     retcode = ERR_NET_CONFIGURED;
> #line 2073
61169,61175c56408,56416
< #line 1817
<   tmp___0 = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 1817
<   if (tmp___0 == 0) {
< #line 1818
<     retcode = 138;
< #line 1819
---
> #line 2077
>   tmp___6 = kzalloc(420UL, 208U);
> #line 2077
>   new_conf = (struct net_conf *)tmp___6;
> #line 2078
>   if ((unsigned long )new_conf == (unsigned long )((struct net_conf *)0)) {
> #line 2079
>     retcode = ERR_NOMEM;
> #line 2080
61180,61185c56421,56434
< #line 1822
<   if ((unsigned int )*((unsigned char *)(& rs) + 8UL) != 0U && mdev->agreed_pro_version <= 92) {
< #line 1823
<     retcode = 153;
< #line 1824
<     goto fail_ldev;
---
> #line 2083
>   set_net_conf_defaults(new_conf);
> #line 2085
>   err = net_conf_from_attrs(new_conf, info);
> #line 2086
>   if (err != 0 && err != -42) {
> #line 2087
>     retcode = ERR_MANDATORY_TAG;
> #line 2088
>     tmp___7 = from_attrs_err_to_txt(err);
> #line 2088
>     drbd_msg_put_info(tmp___7);
> #line 2089
>     goto fail;
61189,61194c56438,56443
< #line 1827
<   tmp___1 = drbd_get_capacity((mdev->ldev)->backing_bdev);
< #line 1827
<   if ((mdev->ldev)->known_size != tmp___1) {
< #line 1828
<     (mdev->ldev)->known_size = drbd_get_capacity((mdev->ldev)->backing_bdev);
---
> #line 2092
>   retcode = check_net_options(tconn, new_conf);
> #line 2093
>   if ((unsigned int )retcode != 101U) {
> #line 2094
>     goto fail;
61198,61212c56447,56451
< #line 1830
<   (mdev->ldev)->dc.disk_size = rs.resize_size;
< #line 1831
<   ddsf = (enum dds_flags )(((unsigned int )*((unsigned char *)(& rs) + 8UL) != 0U) | ((int )*((unsigned char *)(& rs) + 8UL) & 2));
< #line 1832
<   dd = drbd_determine_dev_size(mdev, ddsf);
< #line 1833
<   drbd_md_sync(mdev);
< #line 1834
<   put_ldev(mdev);
< #line 1835
<   if ((int )dd == -1) {
< #line 1836
<     retcode = 140;
< #line 1837
---
> #line 2096
>   retcode = alloc_crypto(& crypto, new_conf);
> #line 2097
>   if ((unsigned int )retcode != 101U) {
> #line 2098
61217,61223c56456,56472
< #line 1840
<   if ((unsigned int )*((unsigned short *)mdev + 1138UL) == 160U) {
< #line 1841
<     if ((int )dd == 2) {
< #line 1842
<       drbd_set_flag(mdev, RESIZE_PENDING);
<     } else {
---
> #line 2100
>   *((char *)(& new_conf->shared_secret) + 63UL) = 0;
> #line 2102
>   conn_flush_workqueue(tconn);
> #line 2104
>   mutex_lock_nested(& tconn->conf_update, 0U);
> #line 2105
>   old_conf = tconn->net_conf;
> #line 2106
>   if ((unsigned long )old_conf != (unsigned long )((struct net_conf *)0)) {
> #line 2107
>     retcode = ERR_NET_CONFIGURED;
> #line 2108
>     mutex_unlock(& tconn->conf_update);
> #line 2109
>     goto fail;
>   } else {
61225,61229c56474,56533
<     }
< #line 1844
<     drbd_send_uuids(mdev);
< #line 1845
<     drbd_send_sizes(mdev, 1, ddsf);
---
>   }
> #line 2111
>   __asm__  volatile   ("": : : "memory");
> #line 2111
>   tconn->net_conf = new_conf;
> #line 2113
>   conn_free_crypto(tconn);
> #line 2114
>   tconn->cram_hmac_tfm = crypto.cram_hmac_tfm;
> #line 2115
>   tconn->integrity_tfm = crypto.integrity_tfm;
> #line 2116
>   tconn->csums_tfm = crypto.csums_tfm;
> #line 2117
>   tconn->verify_tfm = crypto.verify_tfm;
> #line 2119
>   tconn->my_addr_len = nla_len((struct nlattr  const  *)adm_ctx.my_addr);
> #line 2120
>   __len = (size_t )tconn->my_addr_len;
> #line 2120
>   tmp___9 = nla_data((struct nlattr  const  *)adm_ctx.my_addr);
> #line 2120
>   __ret = __builtin_memcpy((void *)(& tconn->my_addr), (void const   *)tmp___9, __len);
> #line 2121
>   tconn->peer_addr_len = nla_len((struct nlattr  const  *)adm_ctx.peer_addr);
> #line 2122
>   __len___0 = (size_t )tconn->peer_addr_len;
> #line 2122
>   tmp___11 = nla_data((struct nlattr  const  *)adm_ctx.peer_addr);
> #line 2122
>   __ret___0 = __builtin_memcpy((void *)(& tconn->peer_addr), (void const   *)tmp___11,
>                                __len___0);
> #line 2124
>   mutex_unlock(& tconn->conf_update);
> #line 2126
>   rcu_read_lock();
> #line 2127
>   i = 0;
> #line 2127
>   tmp___12 = idr_get_next(& tconn->volumes, & i);
> #line 2127
>   mdev = (struct drbd_conf *)tmp___12;
> #line 2127
>   goto ldv_53324;
>   ldv_53323: 
> #line 2128
>   mdev->send_cnt = 0U;
> #line 2129
>   mdev->recv_cnt = 0U;
> #line 2127
>   i = i + 1;
> #line 2127
>   tmp___13 = idr_get_next(& tconn->volumes, & i);
> #line 2127
>   mdev = (struct drbd_conf *)tmp___13;
>   ldv_53324: ;
> #line 2127
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 2128
>     goto ldv_53323;
61232a56537,56556
> #line 2131
>   rcu_read_unlock();
> #line 2133
>   val.i = 0U;
> #line 2133
>   val.ldv_40604.conn = 2U;
> #line 2133
>   mask.i = 0U;
> #line 2133
>   mask.ldv_40604.conn = 31U;
> #line 2133
>   tmp___14 = conn_request_state(tconn, mask, val, CS_VERBOSE);
> #line 2133
>   retcode = (enum drbd_ret_code )tmp___14;
> #line 2135
>   conn_reconfig_done(tconn);
> #line 2136
>   drbd_adm_finish(info, (int )retcode);
> #line 2137
>   return (0);
61234,61236c56558,56567
< #line 1849
<   reply->ret_code = retcode;
< #line 1850
---
> #line 2140
>   free_crypto(& crypto);
> #line 2141
>   kfree((void const   *)new_conf);
> #line 2143
>   conn_reconfig_done(tconn);
>   out: 
> #line 2145
>   drbd_adm_finish(info, (int )retcode);
> #line 2146
61238,61242d56568
<   fail_ldev: 
< #line 1853
<   put_ldev(mdev);
< #line 1854
<   goto fail;
61245,61247c56571,56572
< #line 1857 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static int drbd_nl_syncer_conf(struct drbd_conf *mdev , struct drbd_nl_cfg_req *nlp ,
<                                struct drbd_nl_cfg_reply *reply ) 
---
> #line 2149 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> static enum drbd_state_rv conn_try_disconnect(struct drbd_tconn *tconn , bool force ) 
61249,61281c56574,56585
<   int retcode ;
<   int err ;
<   int ovr ;
<   int rsr ;
<   struct crypto_hash *verify_tfm ;
<   struct crypto_hash *csums_tfm ;
<   struct syncer_conf sc ;
<   cpumask_var_t new_cpu_mask ;
<   int *rs_plan_s ;
<   int fifo_size ;
<   bool tmp ;
<   int tmp___0 ;
<   size_t __len ;
<   void *__ret ;
<   int tmp___1 ;
<   int tmp___2 ;
<   long tmp___3 ;
<   struct crypto_tfm *tmp___4 ;
<   int tmp___5 ;
<   int tmp___6 ;
<   long tmp___7 ;
<   struct crypto_tfm *tmp___8 ;
<   int tmp___9 ;
<   int _b ;
<   int _b___0 ;
<   void *tmp___10 ;
<   int tmp___11 ;
<   wait_queue_t __wait ;
<   struct task_struct *tmp___12 ;
<   int tmp___13 ;
<   int tmp___14 ;
<   bool tmp___15 ;
<   int tmp___16 ;
---
>   enum drbd_state_rv rv ;
>   union drbd_state val ;
>   union drbd_state mask ;
>   union drbd_state val___0 ;
>   union drbd_state mask___0 ;
>   union drbd_state val___1 ;
>   union drbd_state mask___1 ;
>   union drbd_state val___2 ;
>   union drbd_state mask___2 ;
>   enum drbd_state_rv rv2 ;
>   union drbd_state val___3 ;
>   union drbd_state mask___3 ;
61284,61307c56588,56649
< #line 1860
<   retcode = 101;
< #line 1864
<   verify_tfm = 0;
< #line 1865
<   csums_tfm = 0;
< #line 1868
<   rs_plan_s = 0;
< #line 1871
<   tmp = zalloc_cpumask_var(& new_cpu_mask, 208U);
< #line 1871
<   if (tmp) {
< #line 1871
<     tmp___0 = 0;
<   } else {
< #line 1871
<     tmp___0 = 1;
<   }
< #line 1871
<   if (tmp___0) {
< #line 1872
<     retcode = 122;
< #line 1873
<     goto fail;
---
> #line 2153
>   val.i = 0U;
> #line 2153
>   val.ldv_40604.conn = 1U;
> #line 2153
>   mask.i = 0U;
> #line 2153
>   mask.ldv_40604.conn = 31U;
> #line 2153
>   rv = conn_request_state(tconn, mask, val, (enum chg_state_flags )force);
> #line 2156
>   switch ((int )rv) {
>   case 2: ;
> #line 2158
>   goto ldv_53340;
>   case -9: ;
> #line 2160
>   return (SS_SUCCESS);
>   case -7: 
> #line 2164
>   val___0.i = 0U;
> #line 2164
>   val___0.ldv_40604.conn = 1U;
> #line 2164
>   val___0.ldv_40604.pdsk = 5U;
> #line 2163
>   mask___0.i = 0U;
> #line 2163
>   mask___0.ldv_40604.conn = 31U;
> #line 2164
>   mask___0.ldv_40604.pdsk = 15U;
> #line 2164
>   rv = conn_request_state(tconn, mask___0, val___0, CS_VERBOSE);
> #line 2165
>   goto ldv_53340;
>   case -10: 
> #line 2169
>   val___1.i = 0U;
> #line 2169
>   val___1.ldv_40604.conn = 1U;
> #line 2169
>   val___1.ldv_40604.disk = 5U;
> #line 2168
>   mask___1.i = 0U;
> #line 2168
>   mask___1.ldv_40604.conn = 31U;
> #line 2169
>   mask___1.ldv_40604.disk = 15U;
> #line 2169
>   rv = conn_request_state(tconn, mask___1, val___1, 0);
> #line 2170
>   if ((int )rv == -11 || (int )rv == -16) {
> #line 2171
>     val___2.i = 0U;
> #line 2171
>     val___2.ldv_40604.conn = 1U;
> #line 2171
>     mask___2.i = 0U;
> #line 2171
>     mask___2.ldv_40604.conn = 31U;
> #line 2171
>     rv = conn_request_state(tconn, mask___2, val___2, CS_HARD);
61311,61339c56653,56676
< #line 1876
<   if ((nlp->flags & 2) != 0) {
< #line 1877
<     memset((void *)(& sc), 0, 212UL);
< #line 1878
<     sc.rate = 250;
< #line 1879
<     sc.after = -1;
< #line 1880
<     sc.al_extents = 127;
< #line 1881
<     sc.on_no_data = 0;
< #line 1882
<     sc.c_plan_ahead = 0;
< #line 1883
<     sc.c_delay_target = 10;
< #line 1884
<     sc.c_fill_target = 0;
< #line 1885
<     sc.c_max_rate = 102400;
< #line 1886
<     sc.c_min_rate = 4096;
<   } else {
< #line 1888
<     __len = 212UL;
< #line 1888
<     if (__len > 63UL) {
< #line 1888
<       __ret = __memcpy((void *)(& sc), (void const   *)(& mdev->sync_conf), __len);
---
> #line 2174
>   goto ldv_53340;
>   default: ;
>   }
>   ldv_53340: ;
> #line 2179
>   if ((int )rv > 0) {
> #line 2185
>     drbd_thread_stop(& (adm_ctx.tconn)->receiver);
> #line 2193
>     val___3.i = 0U;
> #line 2193
>     val___3.ldv_40604.conn = 0U;
> #line 2193
>     mask___3.i = 0U;
> #line 2193
>     mask___3.ldv_40604.conn = 31U;
> #line 2193
>     rv2 = conn_request_state(tconn, mask___3, val___3, 3);
> #line 2195
>     if ((int )rv2 <= 0) {
> #line 2196
>       printk("\vd-con %s: unexpected rv2=%d in conn_try_disconnect()\n", tconn->name,
>              (int )rv2);
61341,61343c56678
< #line 1888
<       __ret = __builtin_memcpy((void *)(& sc), (void const   *)(& mdev->sync_conf),
<                                __len);
---
> 
61345,61353d56679
<   }
< #line 1890
<   tmp___1 = syncer_conf_from_tags(mdev, (unsigned short *)(& nlp->tag_list), & sc);
< #line 1890
<   if (tmp___1 == 0) {
< #line 1891
<     retcode = 126;
< #line 1892
<     goto fail;
61357,61369c56683,56696
< #line 1896
<   rsr = (((unsigned int )*((unsigned short *)mdev + 1138UL) == 256U || (unsigned int )*((unsigned short *)mdev + 1138UL) == 272U) || (unsigned int )*((unsigned short *)mdev + 1138UL) == 320U) || (unsigned int )*((unsigned short *)mdev + 1138UL) == 336U;
< #line 1901
<   if (rsr != 0) {
< #line 1901
<     tmp___2 = strcmp((char const   *)(& sc.csums_alg), (char const   *)(& mdev->sync_conf.csums_alg));
< #line 1901
<     if (tmp___2 != 0) {
< #line 1902
<       retcode = 148;
< #line 1903
<       goto fail;
<     } else {
---
> #line 2200
>   return (rv);
> }
> }
> #line 2203 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_disconnect(struct sk_buff *skb , struct genl_info *info ) 
> { 
>   struct disconnect_parms parms ;
>   struct drbd_tconn *tconn ;
>   enum drbd_state_rv rv ;
>   enum drbd_ret_code retcode ;
>   int err ;
>   int tmp ;
>   char const   *tmp___0 ;
61371c56698,56706
<     }
---
>   {
> #line 2211
>   tmp = drbd_adm_prepare(skb, info, 4U);
> #line 2211
>   retcode = (enum drbd_ret_code )tmp;
> #line 2212
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 2213
>     return ((int )retcode);
61375,61389c56710,56714
< #line 1906
<   if (rsr == 0 && (unsigned int )sc.csums_alg[0] != 0U) {
< #line 1907
<     csums_tfm = crypto_alloc_hash((char const   *)(& sc.csums_alg), 0U, 128U);
< #line 1908
<     tmp___3 = IS_ERR((void const   *)csums_tfm);
< #line 1908
<     if (tmp___3 != 0L) {
< #line 1909
<       csums_tfm = 0;
< #line 1910
<       retcode = 144;
< #line 1911
<       goto fail;
<     } else {
---
> #line 2214
>   if ((unsigned int )retcode != 101U) {
> #line 2215
>     goto fail;
>   } else {
61391,61400c56716,56733
<     }
< #line 1914
<     tmp___4 = crypto_hash_tfm(csums_tfm);
< #line 1914
<     tmp___5 = drbd_crypto_is_hash(tmp___4);
< #line 1914
<     if (tmp___5 == 0) {
< #line 1915
<       retcode = 145;
< #line 1916
---
>   }
> #line 2217
>   tconn = adm_ctx.tconn;
> #line 2218
>   memset((void *)(& parms), 0, 1UL);
> #line 2219
>   if ((unsigned long )*(info->attrs + 12UL) != (unsigned long )((struct nlattr *)0)) {
> #line 2220
>     err = disconnect_parms_from_attrs(& parms, info);
> #line 2221
>     if (err != 0) {
> #line 2222
>       retcode = ERR_MANDATORY_TAG;
> #line 2223
>       tmp___0 = from_attrs_err_to_txt(err);
> #line 2223
>       drbd_msg_put_info(tmp___0);
> #line 2224
61408,61422c56741,56746
< #line 1921
<   ovr = (unsigned int )*((unsigned short *)mdev + 1138UL) == 288U || (unsigned int )*((unsigned short *)mdev + 1138UL) == 304U;
< #line 1923
<   if (ovr != 0) {
< #line 1924
<     tmp___6 = strcmp((char const   *)(& sc.verify_alg), (char const   *)(& mdev->sync_conf.verify_alg));
< #line 1924
<     if (tmp___6 != 0) {
< #line 1925
<       retcode = 149;
< #line 1926
<       goto fail;
<     } else {
< 
<     }
---
> #line 2228
>   rv = conn_try_disconnect(tconn, (int )((signed char )parms.force_disconnect) != 0);
> #line 2229
>   if ((int )rv <= 0) {
> #line 2230
>     retcode = (enum drbd_ret_code )rv;
61423a56748,56763
> #line 2232
>     retcode = NO_ERROR;
>   }
>   fail: 
> #line 2234
>   drbd_adm_finish(info, (int )retcode);
> #line 2235
>   return (0);
> }
> }
> #line 2238 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> void resync_after_online_grow(struct drbd_conf *mdev ) 
> { 
>   int iass ;
>   union drbd_state val ;
>   union drbd_state mask ;
61424a56765,56774
>   {
> #line 2242
>   _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Resync of new storage after online grow\n");
> #line 2243
>   if ((int )mdev->state.ldv_50103.role != (int )mdev->state.ldv_50103.peer) {
> #line 2244
>     iass = (unsigned int )*((unsigned char *)mdev + 748UL) == 1U;
>   } else {
> #line 2246
>     iass = constant_test_bit(1U, (unsigned long const volatile   *)(& (mdev->tconn)->flags));
61426,61440c56776,56816
< #line 1930
<   if (ovr == 0 && (unsigned int )sc.verify_alg[0] != 0U) {
< #line 1931
<     verify_tfm = crypto_alloc_hash((char const   *)(& sc.verify_alg), 0U, 128U);
< #line 1932
<     tmp___7 = IS_ERR((void const   *)verify_tfm);
< #line 1932
<     if (tmp___7 != 0L) {
< #line 1933
<       verify_tfm = 0;
< #line 1934
<       retcode = 146;
< #line 1935
<       goto fail;
<     } else {
---
> #line 2248
>   if (iass != 0) {
> #line 2249
>     drbd_start_resync(mdev, C_SYNC_SOURCE);
>   } else {
> #line 2251
>     val.i = 0U;
> #line 2251
>     val.ldv_40604.conn = 15U;
> #line 2251
>     mask.i = 0U;
> #line 2251
>     mask.ldv_40604.conn = 31U;
> #line 2251
>     _drbd_request_state(mdev, mask, val, 10);
>   }
> #line 2253
>   return;
> }
> }
> #line 2254 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_resize(struct sk_buff *skb , struct genl_info *info ) 
> { 
>   struct disk_conf *old_disk_conf ;
>   struct disk_conf *new_disk_conf ;
>   struct resize_parms rs ;
>   struct drbd_conf *mdev ;
>   enum drbd_ret_code retcode ;
>   enum determine_dev_size dd ;
>   enum dds_flags ddsf ;
>   sector_t u_size ;
>   int err ;
>   int tmp ;
>   char const   *tmp___0 ;
>   int tmp___1 ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp___2 ;
>   int tmp___3 ;
>   void *tmp___4 ;
>   sector_t tmp___5 ;
61442,61453c56818,56829
<     }
< #line 1938
<     tmp___8 = crypto_hash_tfm(verify_tfm);
< #line 1938
<     tmp___9 = drbd_crypto_is_hash(tmp___8);
< #line 1938
<     if (tmp___9 == 0) {
< #line 1939
<       retcode = 147;
< #line 1940
<       goto fail;
<     } else {
---
>   {
> #line 2256
>   new_disk_conf = 0;
> #line 2265
>   tmp = drbd_adm_prepare(skb, info, 1U);
> #line 2265
>   retcode = (enum drbd_ret_code )tmp;
> #line 2266
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 2267
>     return ((int )retcode);
>   } else {
61455c56831,56835
<     }
---
>   }
> #line 2268
>   if ((unsigned int )retcode != 101U) {
> #line 2269
>     goto fail;
61459,61464c56839,56845
< #line 1945
<   if (nr_cpu_ids > 1 && (unsigned int )sc.cpu_mask[0] != 0U) {
< #line 1946
<     err = bitmap_parse((char const   *)(& sc.cpu_mask), 32U, (unsigned long *)(& new_cpu_mask->bits),
<                        nr_cpu_ids);
< #line 1948
---
> #line 2271
>   memset((void *)(& rs), 0, 16UL);
> #line 2272
>   if ((unsigned long )*(info->attrs + 7UL) != (unsigned long )((struct nlattr *)0)) {
> #line 2273
>     err = resize_parms_from_attrs(& rs, info);
> #line 2274
61466,61471c56847,56853
< #line 1949
<       dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "bitmap_parse() failed with %d\n",
<                err);
< #line 1950
<       retcode = 143;
< #line 1951
---
> #line 2275
>       retcode = ERR_MANDATORY_TAG;
> #line 2276
>       tmp___0 = from_attrs_err_to_txt(err);
> #line 2276
>       drbd_msg_put_info(tmp___0);
> #line 2277
61479,61493c56861,56868
< #line 1955
<   _b = sc.rate <= 0;
< #line 1955
<   if (_b != 0) {
< #line 1955
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_nl_syncer_conf", (char *)"sc.rate < 1", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared",
<             1955);
<   } else {
< 
<   }
< #line 1955
<   if (_b != 0) {
< #line 1955
<     sc.rate = 1;
---
> #line 2281
>   mdev = adm_ctx.mdev;
> #line 2282
>   if ((int )mdev->state.ldv_50103.conn > 10) {
> #line 2283
>     retcode = ERR_RESIZE_RESYNC;
> #line 2284
>     goto fail;
61497,61504c56872,56877
< #line 1956
<   _b___0 = sc.al_extents <= 6;
< #line 1956
<   if (_b___0 != 0) {
< #line 1956
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_nl_syncer_conf", (char *)"sc.al_extents < 7", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared",
<             1956);
---
> #line 2287
>   if ((unsigned int )*((unsigned char *)mdev + 748UL) == 2U && (unsigned int )*((unsigned char *)mdev + 748UL) == 8U) {
> #line 2289
>     retcode = ERR_NO_PRIMARY;
> #line 2290
>     goto fail;
61508,61511c56881,56888
< #line 1956
<   if (_b___0 != 0) {
< #line 1956
<     sc.al_extents = 127;
---
> #line 2293
>   tmp___1 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 2293
>   if (tmp___1 == 0) {
> #line 2294
>     retcode = ERR_NO_DISK;
> #line 2295
>     goto fail;
61515,61521c56892,56897
< #line 1958
<   if (sc.al_extents > 3843) {
< #line 1959
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "sc.al_extents > %d\n",
<             3843);
< #line 1960
<     sc.al_extents = 3843;
---
> #line 2298
>   if ((int )((signed char )rs.no_resync) != 0 && (mdev->tconn)->agreed_pro_version <= 92) {
> #line 2299
>     retcode = ERR_NEED_APV_93;
> #line 2300
>     goto fail_ldev;
61525,61529c56901,56918
< #line 1967
<   if (sc.after >= 0) {
< #line 1968
<     ensure_mdev(sc.after, 1);
<   } else {
---
> #line 2303
>   rcu_read_lock();
> #line 2304
>   _________p1 = *((struct disk_conf * volatile  *)(& (mdev->ldev)->disk_conf));
> #line 2304
>   tmp___2 = debug_lockdep_rcu_enabled();
> #line 2304
>   if (tmp___2 != 0 && ! __warned) {
> #line 2304
>     tmp___3 = rcu_read_lock_held();
> #line 2304
>     if (tmp___3 == 0 && 1) {
> #line 2304
>       __warned = 1;
> #line 2304
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared",
>                              2304, "suspicious rcu_dereference_check() usage");
>     } else {
61531,61537c56920
<   }
< #line 1973
<   retcode = drbd_alter_sa(mdev, sc.after);
< #line 1974
<   if (retcode != 101) {
< #line 1975
<     goto fail;
---
>     }
61541,61556c56924,56939
< #line 1977
<   fifo_size = (sc.c_plan_ahead * 250) / 250;
< #line 1978
<   if ((unsigned int )fifo_size != mdev->rs_plan_s.size && fifo_size > 0) {
< #line 1979
<     tmp___10 = kzalloc((unsigned long )fifo_size * 4UL, 208U);
< #line 1979
<     rs_plan_s = (int *)tmp___10;
< #line 1980
<     if ((unsigned long )rs_plan_s == (unsigned long )((int *)0)) {
< #line 1981
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "kmalloc of fifo_buffer failed");
< #line 1982
<       retcode = 122;
< #line 1983
<       goto fail;
---
> #line 2304
>   u_size = (sector_t )_________p1->disk_size;
> #line 2305
>   rcu_read_unlock();
> #line 2306
>   if ((unsigned long )rs.resize_size != u_size) {
> #line 2307
>     tmp___4 = kmalloc(344UL, 208U);
> #line 2307
>     new_disk_conf = (struct disk_conf *)tmp___4;
> #line 2308
>     if ((unsigned long )new_disk_conf == (unsigned long )((struct disk_conf *)0)) {
> #line 2309
>       retcode = ERR_NOMEM;
> #line 2310
>       goto fail_ldev;
61563,61574c56946,56951
< #line 1989
<   spin_lock(& mdev->peer_seq_lock);
< #line 1990
<   mdev->sync_conf = sc;
< #line 1992
<   if (rsr == 0) {
< #line 1993
<     crypto_free_hash(mdev->csums_tfm);
< #line 1994
<     mdev->csums_tfm = csums_tfm;
< #line 1995
<     csums_tfm = 0;
---
> #line 2314
>   tmp___5 = drbd_get_capacity((mdev->ldev)->backing_bdev);
> #line 2314
>   if ((mdev->ldev)->known_size != tmp___5) {
> #line 2315
>     (mdev->ldev)->known_size = drbd_get_capacity((mdev->ldev)->backing_bdev);
61578,61585c56955,56974
< #line 1998
<   if (ovr == 0) {
< #line 1999
<     crypto_free_hash(mdev->verify_tfm);
< #line 2000
<     mdev->verify_tfm = verify_tfm;
< #line 2001
<     verify_tfm = 0;
---
> #line 2317
>   if ((unsigned long )new_disk_conf != (unsigned long )((struct disk_conf *)0)) {
> #line 2318
>     mutex_lock_nested(& (mdev->tconn)->conf_update, 0U);
> #line 2319
>     old_disk_conf = (mdev->ldev)->disk_conf;
> #line 2320
>     *new_disk_conf = *old_disk_conf;
> #line 2321
>     new_disk_conf->disk_size = rs.resize_size;
> #line 2322
>     __asm__  volatile   ("": : : "memory");
> #line 2322
>     (mdev->ldev)->disk_conf = new_disk_conf;
> #line 2323
>     mutex_unlock(& (mdev->tconn)->conf_update);
> #line 2324
>     synchronize_rcu();
> #line 2325
>     kfree((void const   *)old_disk_conf);
61589,61600c56978,56991
< #line 2004
<   if ((unsigned int )fifo_size != mdev->rs_plan_s.size) {
< #line 2005
<     kfree((void const   *)mdev->rs_plan_s.values);
< #line 2006
<     mdev->rs_plan_s.values = rs_plan_s;
< #line 2007
<     mdev->rs_plan_s.size = (unsigned int )fifo_size;
< #line 2008
<     mdev->rs_planed = 0;
< #line 2009
<     rs_plan_s = 0;
---
> #line 2328
>   ddsf = (enum dds_flags )(((int )((signed char )rs.resize_force) != 0) | ((int )((signed char )rs.no_resync) != 0 ? 2 : 0));
> #line 2329
>   dd = drbd_determine_dev_size(mdev, ddsf);
> #line 2330
>   drbd_md_sync(mdev);
> #line 2331
>   put_ldev(mdev);
> #line 2332
>   if ((int )dd == -1) {
> #line 2333
>     retcode = ERR_NOMEM_BITMAP;
> #line 2334
>     goto fail;
61604,61615c56995,57000
< #line 2012
<   spin_unlock(& mdev->peer_seq_lock);
< #line 2014
<   tmp___14 = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 2014
<   if (tmp___14 != 0) {
< #line 2015
<     tmp___11 = lc_try_lock(mdev->act_log);
< #line 2015
<     if (tmp___11 != 0) {
< #line 2015
<       goto ldv_54555;
---
> #line 2337
>   if ((unsigned int )*((unsigned short *)mdev + 374UL) == 160U) {
> #line 2338
>     if ((int )dd == 2) {
> #line 2339
>       set_bit(16U, (unsigned long volatile   *)(& mdev->flags));
61619,61640c57004,57008
< #line 2015
<     tmp___12 = get_current();
< #line 2015
<     __wait.flags = 0U;
< #line 2015
<     __wait.private = (void *)tmp___12;
< #line 2015
<     __wait.func = & autoremove_wake_function;
< #line 2015
<     __wait.task_list.next = & __wait.task_list;
< #line 2015
<     __wait.task_list.prev = & __wait.task_list;
<     ldv_54558: 
< #line 2015
<     prepare_to_wait(& mdev->al_wait, & __wait, 2);
< #line 2015
<     tmp___13 = lc_try_lock(mdev->act_log);
< #line 2015
<     if (tmp___13 != 0) {
< #line 2015
<       goto ldv_54557;
<     } else {
---
> #line 2341
>     drbd_send_uuids(mdev);
> #line 2342
>     drbd_send_sizes(mdev, 1, ddsf);
>   } else {
61642,61669c57010,57032
<     }
< #line 2015
<     schedule();
< #line 2015
<     goto ldv_54558;
<     ldv_54557: 
< #line 2015
<     finish_wait(& mdev->al_wait, & __wait);
<     ldv_54555: 
< #line 2016
<     drbd_al_shrink(mdev);
< #line 2017
<     err = drbd_check_al_size(mdev);
< #line 2018
<     lc_unlock(mdev->act_log);
< #line 2019
<     __wake_up(& mdev->al_wait, 3U, 1, 0);
< #line 2021
<     put_ldev(mdev);
< #line 2022
<     drbd_md_sync(mdev);
< #line 2024
<     if (err != 0) {
< #line 2025
<       retcode = 122;
< #line 2026
<       goto fail;
<     } else {
---
>   }
>   fail: 
> #line 2346
>   drbd_adm_finish(info, (int )retcode);
> #line 2347
>   return (0);
>   fail_ldev: 
> #line 2350
>   put_ldev(mdev);
> #line 2351
>   goto fail;
> }
> }
> #line 2354 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_resource_opts(struct sk_buff *skb , struct genl_info *info ) 
> { 
>   enum drbd_ret_code retcode ;
>   struct drbd_tconn *tconn ;
>   struct res_opts res_opts ;
>   int err ;
>   int tmp ;
>   bool tmp___0 ;
>   char const   *tmp___1 ;
61671c57034,57042
<     }
---
>   {
> #line 2361
>   tmp = drbd_adm_prepare(skb, info, 2U);
> #line 2361
>   retcode = (enum drbd_ret_code )tmp;
> #line 2362
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 2363
>     return ((int )retcode);
61675,61678c57046,57049
< #line 2030
<   if ((int )mdev->state.ldv_39979.conn > 9) {
< #line 2031
<     drbd_send_sync_param(mdev, & sc);
---
> #line 2364
>   if ((unsigned int )retcode != 101U) {
> #line 2365
>     goto fail;
61682,61687c57053,57062
< #line 2033
<   tmp___15 = cpumask_equal((struct cpumask  const  *)mdev->cpu_mask, (struct cpumask  const  *)new_cpu_mask);
< #line 2033
<   if (tmp___15) {
< #line 2033
<     tmp___16 = 0;
---
> #line 2366
>   tconn = adm_ctx.tconn;
> #line 2368
>   res_opts = tconn->res_opts;
> #line 2369
>   tmp___0 = should_set_defaults(info);
> #line 2369
>   if ((int )tmp___0) {
> #line 2370
>     set_res_opts_defaults(& res_opts);
61689,61690c57064
< #line 2033
<     tmp___16 = 1;
---
> 
61692,61703c57066,57093
< #line 2033
<   if (tmp___16) {
< #line 2034
<     cpumask_copy(mdev->cpu_mask, (struct cpumask  const  *)new_cpu_mask);
< #line 2035
<     drbd_calc_cpu_mask(mdev);
< #line 2036
<     mdev->receiver.reset_cpu_mask = 1;
< #line 2037
<     mdev->asender.reset_cpu_mask = 1;
< #line 2038
<     mdev->worker.reset_cpu_mask = 1;
---
> #line 2372
>   err = res_opts_from_attrs(& res_opts, info);
> #line 2373
>   if (err != 0 && err != -42) {
> #line 2374
>     retcode = ERR_MANDATORY_TAG;
> #line 2375
>     tmp___1 = from_attrs_err_to_txt(err);
> #line 2375
>     drbd_msg_put_info(tmp___1);
> #line 2376
>     goto fail;
>   } else {
> 
>   }
> #line 2379
>   err = set_resource_options(tconn, & res_opts);
> #line 2380
>   if (err != 0) {
> #line 2381
>     retcode = ERR_INVALID_REQUEST;
> #line 2382
>     if (err == -12) {
> #line 2383
>       retcode = ERR_NOMEM;
>     } else {
> 
>     }
61707,61708d57096
< #line 2041
<   kobject_uevent(& (mdev->vdisk)->part0.__dev.kobj, KOBJ_CHANGE);
61710,61720c57098,57100
< #line 2043
<   kfree((void const   *)rs_plan_s);
< #line 2044
<   free_cpumask_var(new_cpu_mask);
< #line 2045
<   crypto_free_hash(csums_tfm);
< #line 2046
<   crypto_free_hash(verify_tfm);
< #line 2047
<   reply->ret_code = retcode;
< #line 2048
---
> #line 2387
>   drbd_adm_finish(info, (int )retcode);
> #line 2388
61724,61726c57104,57105
< #line 2051 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static int drbd_nl_invalidate(struct drbd_conf *mdev , struct drbd_nl_cfg_req *nlp ,
<                               struct drbd_nl_cfg_reply *reply ) 
---
> #line 2391 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_invalidate(struct sk_buff *skb , struct genl_info *info ) 
61727a57107
>   struct drbd_conf *mdev ;
61744c57124,57142
< #line 2059
---
> #line 2396
>   retcode = drbd_adm_prepare(skb, info, 1U);
> #line 2397
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 2398
>     return (retcode);
>   } else {
> 
>   }
> #line 2399
>   if (retcode != 101) {
> #line 2400
>     goto out;
>   } else {
> 
>   }
> #line 2402
>   mdev = adm_ctx.mdev;
> #line 2407
61746,61748c57144,57146
< #line 2060
<   tmp = drbd_test_flag(mdev, BITMAP_IO);
< #line 2060
---
> #line 2408
>   tmp = constant_test_bit(9U, (unsigned long const volatile   *)(& mdev->flags));
> #line 2408
61750,61751c57148,57149
< #line 2060
<     goto ldv_54565;
---
> #line 2408
>     goto ldv_53414;
61755c57153
< #line 2060
---
> #line 2408
61757c57155
< #line 2060
---
> #line 2408
61759c57157
< #line 2060
---
> #line 2408
61761c57159
< #line 2060
---
> #line 2408
61763c57161
< #line 2060
---
> #line 2408
61765c57163
< #line 2060
---
> #line 2408
61767,61768c57165,57166
<   ldv_54568: 
< #line 2060
---
>   ldv_53417: 
> #line 2408
61770,61772c57168,57170
< #line 2060
<   tmp___1 = drbd_test_flag(mdev, BITMAP_IO);
< #line 2060
---
> #line 2408
>   tmp___1 = constant_test_bit(9U, (unsigned long const volatile   *)(& mdev->flags));
> #line 2408
61774,61775c57172,57173
< #line 2060
<     goto ldv_54567;
---
> #line 2408
>     goto ldv_53416;
61779c57177
< #line 2060
---
> #line 2408
61781,61784c57179,57182
< #line 2060
<   goto ldv_54568;
<   ldv_54567: 
< #line 2060
---
> #line 2408
>   goto ldv_53417;
>   ldv_53416: 
> #line 2408
61786,61787c57184,57185
<   ldv_54565: 
< #line 2061
---
>   ldv_53414: 
> #line 2409
61789c57187
< #line 2063
---
> #line 2411
61791,61793c57189,57191
< #line 2063
<   val.ldv_39979.conn = 12U;
< #line 2063
---
> #line 2411
>   val.ldv_40604.conn = 12U;
> #line 2411
61795,61797c57193,57195
< #line 2063
<   mask.ldv_39979.conn = 31U;
< #line 2063
---
> #line 2411
>   mask.ldv_40604.conn = 31U;
> #line 2411
61799c57197
< #line 2063
---
> #line 2411
61801c57199
< #line 2065
---
> #line 2413
61803c57201
< #line 2066
---
> #line 2414
61805,61807c57203,57205
< #line 2066
<     val___0.ldv_39979.conn = 12U;
< #line 2066
---
> #line 2414
>     val___0.ldv_40604.conn = 12U;
> #line 2414
61809,61811c57207,57209
< #line 2066
<     mask___0.ldv_39979.conn = 31U;
< #line 2066
---
> #line 2414
>     mask___0.ldv_40604.conn = 31U;
> #line 2414
61816,61827c57214,57225
< #line 2068
<   goto ldv_54585;
<   ldv_54584: 
< #line 2069
<   spin_lock_irq(& mdev->req_lock);
< #line 2070
<   if ((int )mdev->state.ldv_39979.conn <= 9) {
< #line 2071
<     __ns.i = mdev->state.i;
< #line 2071
<     __ns.ldv_39979.disk = 4U;
< #line 2071
---
> #line 2416
>   goto ldv_53434;
>   ldv_53433: 
> #line 2417
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 2418
>   if ((int )mdev->state.ldv_50103.conn <= 9) {
> #line 2419
>     __ns = drbd_read_state(mdev);
> #line 2419
>     __ns.ldv_40604.disk = 4U;
> #line 2419
61829c57227
< #line 2071
---
> #line 2419
61834,61836c57232,57234
< #line 2072
<   spin_unlock_irq(& mdev->req_lock);
< #line 2074
---
> #line 2420
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 2422
61838,61839c57236,57237
< #line 2075
<     goto ldv_54579;
---
> #line 2423
>     goto ldv_53428;
61843c57241
< #line 2077
---
> #line 2425
61845,61847c57243,57245
< #line 2077
<   val___1.ldv_39979.conn = 12U;
< #line 2077
---
> #line 2425
>   val___1.ldv_40604.conn = 12U;
> #line 2425
61849,61851c57247,57249
< #line 2077
<   mask___1.ldv_39979.conn = 31U;
< #line 2077
---
> #line 2425
>   mask___1.ldv_40604.conn = 31U;
> #line 2425
61853,61854c57251,57252
<   ldv_54585: ;
< #line 2068
---
>   ldv_53434: ;
> #line 2416
61856,61857c57254,57255
< #line 2069
<     goto ldv_54584;
---
> #line 2417
>     goto ldv_53433;
61861,61862c57259,57260
<   ldv_54579: 
< #line 2079
---
>   ldv_53428: 
> #line 2427
61864,61866c57262,57265
< #line 2081
<   reply->ret_code = retcode;
< #line 2082
---
>   out: 
> #line 2430
>   drbd_adm_finish(info, retcode);
> #line 2431
61870c57269,57307
< #line 2085 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
---
> #line 2434 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> static int drbd_adm_simple_request_state(struct sk_buff *skb , struct genl_info *info ,
>                                          union drbd_state mask , union drbd_state val ) 
> { 
>   enum drbd_ret_code retcode ;
>   int tmp ;
>   int tmp___0 ;
> 
>   {
> #line 2439
>   tmp = drbd_adm_prepare(skb, info, 1U);
> #line 2439
>   retcode = (enum drbd_ret_code )tmp;
> #line 2440
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 2441
>     return ((int )retcode);
>   } else {
> 
>   }
> #line 2442
>   if ((unsigned int )retcode != 101U) {
> #line 2443
>     goto out;
>   } else {
> 
>   }
> #line 2445
>   tmp___0 = drbd_request_state(adm_ctx.mdev, mask, val);
> #line 2445
>   retcode = (enum drbd_ret_code )tmp___0;
>   out: 
> #line 2447
>   drbd_adm_finish(info, (int )retcode);
> #line 2448
>   return (0);
> }
> }
> #line 2451 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
61876c57313
< #line 2089
---
> #line 2455
61878c57315
< #line 2090
---
> #line 2456
61880c57317
< #line 2091
---
> #line 2457
61884,61886c57321,57322
< #line 2094 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static int drbd_nl_invalidate_peer(struct drbd_conf *mdev , struct drbd_nl_cfg_req *nlp ,
<                                    struct drbd_nl_cfg_reply *reply ) 
---
> #line 2460 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_invalidate_peer(struct sk_buff *skb , struct genl_info *info ) 
61888a57325
>   struct drbd_conf *mdev ;
61903c57340,57358
< #line 2102
---
> #line 2465
>   retcode = drbd_adm_prepare(skb, info, 1U);
> #line 2466
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 2467
>     return (retcode);
>   } else {
> 
>   }
> #line 2468
>   if (retcode != 101) {
> #line 2469
>     goto out;
>   } else {
> 
>   }
> #line 2471
>   mdev = adm_ctx.mdev;
> #line 2476
61905,61907c57360,57362
< #line 2103
<   tmp = drbd_test_flag(mdev, BITMAP_IO);
< #line 2103
---
> #line 2477
>   tmp = constant_test_bit(9U, (unsigned long const volatile   *)(& mdev->flags));
> #line 2477
61909,61910c57364,57365
< #line 2103
<     goto ldv_54596;
---
> #line 2477
>     goto ldv_53454;
61914c57369
< #line 2103
---
> #line 2477
61916c57371
< #line 2103
---
> #line 2477
61918c57373
< #line 2103
---
> #line 2477
61920c57375
< #line 2103
---
> #line 2477
61922c57377
< #line 2103
---
> #line 2477
61924c57379
< #line 2103
---
> #line 2477
61926,61927c57381,57382
<   ldv_54599: 
< #line 2103
---
>   ldv_53457: 
> #line 2477
61929,61931c57384,57386
< #line 2103
<   tmp___1 = drbd_test_flag(mdev, BITMAP_IO);
< #line 2103
---
> #line 2477
>   tmp___1 = constant_test_bit(9U, (unsigned long const volatile   *)(& mdev->flags));
> #line 2477
61933,61934c57388,57389
< #line 2103
<     goto ldv_54598;
---
> #line 2477
>     goto ldv_53456;
61938c57393
< #line 2103
---
> #line 2477
61940,61943c57395,57398
< #line 2103
<   goto ldv_54599;
<   ldv_54598: 
< #line 2103
---
> #line 2477
>   goto ldv_53457;
>   ldv_53456: 
> #line 2477
61945,61946c57400,57401
<   ldv_54596: 
< #line 2104
---
>   ldv_53454: 
> #line 2478
61948c57403
< #line 2106
---
> #line 2480
61950,61952c57405,57407
< #line 2106
<   val.ldv_39979.conn = 11U;
< #line 2106
---
> #line 2480
>   val.ldv_40604.conn = 11U;
> #line 2480
61954,61956c57409,57411
< #line 2106
<   mask.ldv_39979.conn = 31U;
< #line 2106
---
> #line 2480
>   mask.ldv_40604.conn = 31U;
> #line 2480
61958c57413
< #line 2106
---
> #line 2480
61960c57415
< #line 2108
---
> #line 2481
61962,61964c57417,57419
< #line 2109
<     if (retcode == -15 && (unsigned int )*((unsigned char *)mdev + 2276UL) == 1U) {
< #line 2112
---
> #line 2482
>     if (retcode == -15 && (unsigned int )*((unsigned char *)mdev + 748UL) == 1U) {
> #line 2485
61966,61968c57421,57423
< #line 2112
<       val___0.ldv_39979.pdsk = 4U;
< #line 2112
---
> #line 2485
>       val___0.ldv_40604.pdsk = 4U;
> #line 2485
61970,61972c57425,57427
< #line 2112
<       mask___0.ldv_39979.pdsk = 15U;
< #line 2112
---
> #line 2485
>       mask___0.ldv_40604.pdsk = 15U;
> #line 2485
61974c57429
< #line 2113
---
> #line 2486
61976c57431
< #line 2114
---
> #line 2487
61979c57434
< #line 2114
---
> #line 2487
61981c57436
< #line 2117
---
> #line 2490
61990c57445
< #line 2120
---
> #line 2493
61992,61994c57447,57449
< #line 2120
<       val___1.ldv_39979.conn = 11U;
< #line 2120
---
> #line 2493
>       val___1.ldv_40604.conn = 11U;
> #line 2493
61996,61998c57451,57453
< #line 2120
<       mask___1.ldv_39979.conn = 31U;
< #line 2120
---
> #line 2493
>       mask___1.ldv_40604.conn = 31U;
> #line 2493
62004c57459
< #line 2122
---
> #line 2495
62006,62008c57461,57464
< #line 2124
<   reply->ret_code = retcode;
< #line 2125
---
>   out: 
> #line 2498
>   drbd_adm_finish(info, retcode);
> #line 2499
62012,62014c57468,57469
< #line 2128 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static int drbd_nl_pause_sync(struct drbd_conf *mdev , struct drbd_nl_cfg_req *nlp ,
<                               struct drbd_nl_cfg_reply *reply ) 
---
> #line 2502 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_pause_sync(struct sk_buff *skb , struct genl_info *info ) 
62016c57471,57472
<   int retcode ;
---
>   enum drbd_ret_code retcode ;
>   int tmp ;
62019c57475
<   int tmp ;
---
>   int tmp___0 ;
62022,62024c57478,57496
< #line 2131
<   retcode = 101;
< #line 2133
---
> #line 2506
>   tmp = drbd_adm_prepare(skb, info, 1U);
> #line 2506
>   retcode = (enum drbd_ret_code )tmp;
> #line 2507
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 2508
>     return ((int )retcode);
>   } else {
> 
>   }
> #line 2509
>   if ((unsigned int )retcode != 101U) {
> #line 2510
>     goto out;
>   } else {
> 
>   }
> #line 2512
62026,62028c57498,57500
< #line 2133
<   val.ldv_39979.user_isp = 1U;
< #line 2133
---
> #line 2512
>   val.ldv_40604.user_isp = 1U;
> #line 2512
62030,62037c57502,57509
< #line 2133
<   mask.ldv_39979.user_isp = 1U;
< #line 2133
<   tmp = drbd_request_state(mdev, mask, val);
< #line 2133
<   if (tmp == 2) {
< #line 2134
<     retcode = 134;
---
> #line 2512
>   mask.ldv_40604.user_isp = 1U;
> #line 2512
>   tmp___0 = drbd_request_state(adm_ctx.mdev, mask, val);
> #line 2512
>   if (tmp___0 == 2) {
> #line 2513
>     retcode = ERR_PAUSE_IS_SET;
62041,62043c57513,57516
< #line 2136
<   reply->ret_code = retcode;
< #line 2137
---
>   out: 
> #line 2515
>   drbd_adm_finish(info, (int )retcode);
> #line 2516
62047,62049c57520,57521
< #line 2140 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static int drbd_nl_resume_sync(struct drbd_conf *mdev , struct drbd_nl_cfg_req *nlp ,
<                                struct drbd_nl_cfg_reply *reply ) 
---
> #line 2519 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_resume_sync(struct sk_buff *skb , struct genl_info *info ) 
62051,62052c57523,57525
<   int retcode ;
<   union drbd_state s ;
---
>   union drbd_dev_state s ;
>   enum drbd_ret_code retcode ;
>   int tmp ;
62055c57528
<   int tmp ;
---
>   int tmp___0 ;
62058,62060c57531,57549
< #line 2143
<   retcode = 101;
< #line 2146
---
> #line 2524
>   tmp = drbd_adm_prepare(skb, info, 1U);
> #line 2524
>   retcode = (enum drbd_ret_code )tmp;
> #line 2525
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 2526
>     return ((int )retcode);
>   } else {
> 
>   }
> #line 2527
>   if ((unsigned int )retcode != 101U) {
> #line 2528
>     goto out;
>   } else {
> 
>   }
> #line 2530
62062,62064c57551,57553
< #line 2146
<   val.ldv_39979.user_isp = 0U;
< #line 2146
---
> #line 2530
>   val.ldv_40604.user_isp = 0U;
> #line 2530
62066,62074c57555,57563
< #line 2146
<   mask.ldv_39979.user_isp = 1U;
< #line 2146
<   tmp = drbd_request_state(mdev, mask, val);
< #line 2146
<   if (tmp == 2) {
< #line 2147
<     s = mdev->state;
< #line 2148
---
> #line 2530
>   mask.ldv_40604.user_isp = 1U;
> #line 2530
>   tmp___0 = drbd_request_state(adm_ctx.mdev, mask, val);
> #line 2530
>   if (tmp___0 == 2) {
> #line 2531
>     s = (adm_ctx.mdev)->state;
> #line 2532
62076,62077c57565,57566
< #line 2149
<       retcode = (unsigned int )*((unsigned char *)(& s) + 2UL) == 0U ? ((unsigned int )*((unsigned char *)(& s) + 2UL) != 0U ? 157 : 135) : 156;
---
> #line 2533
>       retcode = (unsigned int )*((unsigned char *)(& s) + 2UL) == 0U ? ((unsigned int )*((unsigned char *)(& s) + 2UL) != 0U ? ERR_PIC_PEER_DEP : ERR_PAUSE_IS_CLEAR) : ERR_PIC_AFTER_DEP;
62079,62080c57568,57569
< #line 2152
<       retcode = 135;
---
> #line 2536
>       retcode = ERR_PAUSE_IS_CLEAR;
62085,62087c57574,57577
< #line 2156
<   reply->ret_code = retcode;
< #line 2157
---
>   out: 
> #line 2541
>   drbd_adm_finish(info, (int )retcode);
> #line 2542
62091,62093c57581,57582
< #line 2160 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static int drbd_nl_suspend_io(struct drbd_conf *mdev , struct drbd_nl_cfg_req *nlp ,
<                               struct drbd_nl_cfg_reply *reply ) 
---
> #line 2545 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_suspend_io(struct sk_buff *skb , struct genl_info *info ) 
62096a57586
>   int tmp ;
62099c57589
< #line 2163
---
> #line 2547
62101,62103c57591,57593
< #line 2163
<   val.ldv_39979.susp = 1U;
< #line 2163
---
> #line 2547
>   val.ldv_40604.susp = 1U;
> #line 2547
62105,62110c57595,57600
< #line 2163
<   mask.ldv_39979.susp = 1U;
< #line 2163
<   reply->ret_code = drbd_request_state(mdev, mask, val);
< #line 2165
<   return (0);
---
> #line 2547
>   mask.ldv_40604.susp = 1U;
> #line 2547
>   tmp = drbd_adm_simple_request_state(skb, info, mask, val);
> #line 2547
>   return (tmp);
62113,62115c57603,57604
< #line 2168 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static int drbd_nl_resume_io(struct drbd_conf *mdev , struct drbd_nl_cfg_req *nlp ,
<                              struct drbd_nl_cfg_reply *reply ) 
---
> #line 2550 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_resume_io(struct sk_buff *skb , struct genl_info *info ) 
62116a57606,57607
>   struct drbd_conf *mdev ;
>   int retcode ;
62122,62124c57613,57633
< #line 2171
<   tmp = drbd_test_flag(mdev, NEW_CUR_UUID);
< #line 2171
---
> #line 2555
>   retcode = drbd_adm_prepare(skb, info, 1U);
> #line 2556
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 2557
>     return (retcode);
>   } else {
> 
>   }
> #line 2558
>   if (retcode != 101) {
> #line 2559
>     goto out;
>   } else {
> 
>   }
> #line 2561
>   mdev = adm_ctx.mdev;
> #line 2562
>   tmp = constant_test_bit(17U, (unsigned long const volatile   *)(& mdev->flags));
> #line 2562
62126c57635
< #line 2172
---
> #line 2563
62128,62129c57637,57638
< #line 2173
<     drbd_clear_flag(mdev, NEW_CUR_UUID);
---
> #line 2564
>     clear_bit(17, (unsigned long volatile   *)(& mdev->flags));
62133c57642
< #line 2175
---
> #line 2566
62135c57644
< #line 2176
---
> #line 2567
62137,62143c57646,57652
< #line 2176
<   val.ldv_39979.susp = 0U;
< #line 2176
<   val.ldv_39979.susp_nod = 0U;
< #line 2176
<   val.ldv_39979.susp_fen = 0U;
< #line 2176
---
> #line 2567
>   val.ldv_40604.susp = 0U;
> #line 2567
>   val.ldv_40604.susp_nod = 0U;
> #line 2567
>   val.ldv_40604.susp_fen = 0U;
> #line 2567
62145,62158c57654,57667
< #line 2176
<   mask.ldv_39979.susp = 1U;
< #line 2176
<   mask.ldv_39979.susp_nod = 1U;
< #line 2176
<   mask.ldv_39979.susp_fen = 1U;
< #line 2176
<   reply->ret_code = drbd_request_state(mdev, mask, val);
< #line 2177
<   if (reply->ret_code == 1) {
< #line 2178
<     if ((int )mdev->state.ldv_39979.conn <= 9) {
< #line 2179
<       tl_clear(mdev);
---
> #line 2567
>   mask.ldv_40604.susp = 1U;
> #line 2567
>   mask.ldv_40604.susp_nod = 1U;
> #line 2567
>   mask.ldv_40604.susp_fen = 1U;
> #line 2567
>   retcode = drbd_request_state(mdev, mask, val);
> #line 2568
>   if (retcode == 1) {
> #line 2569
>     if ((int )mdev->state.ldv_50103.conn <= 9) {
> #line 2570
>       tl_clear(mdev->tconn);
62162,62165c57671,57674
< #line 2180
<     if ((unsigned int )*((unsigned char *)mdev + 2277UL) == 0U || (unsigned int )*((unsigned char *)mdev + 2277UL) == 4U) {
< #line 2181
<       tl_restart(mdev, fail_frozen_disk_io);
---
> #line 2571
>     if ((unsigned int )*((unsigned char *)mdev + 749UL) == 0U || (unsigned int )*((unsigned char *)mdev + 749UL) == 4U) {
> #line 2572
>       tl_restart(mdev->tconn, FAIL_FROZEN_DISK_IO);
62172c57681
< #line 2183
---
> #line 2574
62174c57683,57686
< #line 2185
---
>   out: 
> #line 2577
>   drbd_adm_finish(info, retcode);
> #line 2578
62178,62180c57690,57691
< #line 2188 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static int drbd_nl_outdate(struct drbd_conf *mdev , struct drbd_nl_cfg_req *nlp ,
<                            struct drbd_nl_cfg_reply *reply ) 
---
> #line 2581 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_outdate(struct sk_buff *skb , struct genl_info *info ) 
62183a57695
>   int tmp ;
62186c57698
< #line 2191
---
> #line 2583
62188,62190c57700,57702
< #line 2191
<   val.ldv_39979.disk = 5U;
< #line 2191
---
> #line 2583
>   val.ldv_40604.disk = 5U;
> #line 2583
62192,62197c57704,57709
< #line 2191
<   mask.ldv_39979.disk = 15U;
< #line 2191
<   reply->ret_code = drbd_request_state(mdev, mask, val);
< #line 2192
<   return (0);
---
> #line 2583
>   mask.ldv_40604.disk = 15U;
> #line 2583
>   tmp = drbd_adm_simple_request_state(skb, info, mask, val);
> #line 2583
>   return (tmp);
62200,62202c57712,57713
< #line 2195 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static int drbd_nl_get_config(struct drbd_conf *mdev , struct drbd_nl_cfg_req *nlp ,
<                               struct drbd_nl_cfg_reply *reply ) 
---
> #line 2586 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> int nla_put_drbd_cfg_context(struct sk_buff *skb , struct drbd_tconn *tconn , unsigned int vnr ) 
62204c57715
<   unsigned short *tl ;
---
>   struct nlattr *nla ;
62207,62208c57718,57719
<   void *__gu_p ;
<   unsigned short *tmp___1 ;
---
>   int tmp___1 ;
>   int tmp___2 ;
62211,62220c57722,57727
< #line 2200
<   tl = (unsigned short *)(& reply->tag_list);
< #line 2202
<   tmp = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 2202
<   if (tmp != 0) {
< #line 2203
<     tl = disk_conf_to_tags(mdev, & (mdev->ldev)->dc, tl);
< #line 2204
<     put_ldev(mdev);
---
> #line 2589
>   nla = nla_nest_start(skb, 2);
> #line 2590
>   if ((unsigned long )nla == (unsigned long )((struct nlattr *)0)) {
> #line 2591
>     goto nla_put_failure;
62224,62226c57731,57747
< #line 2207
<   tmp___0 = get_net_conf(mdev);
< #line 2207
---
> #line 2592
>   if (vnr != 4294967295U) {
> #line 2592
>     tmp = nla_put_u32(skb, 16385, vnr);
> #line 2592
>     if (tmp != 0) {
> #line 2594
>       goto nla_put_failure;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 2595
>   tmp___0 = nla_put_string(skb, 16386, (char const   *)tconn->name);
> #line 2595
62228,62231c57749,57750
< #line 2208
<     tl = net_conf_to_tags(mdev, mdev->net_conf, tl);
< #line 2209
<     put_net_conf(mdev);
---
> #line 2596
>     goto nla_put_failure;
62235,62269c57754,57766
< #line 2211
<   tl = syncer_conf_to_tags(mdev, & mdev->sync_conf, tl);
< #line 2213
<   tmp___1 = tl;
< #line 2213
<   tl = tl + 1;
< #line 2213
<   __gu_p = (void *)tmp___1;
< #line 2213
<   switch (2UL) {
<   case 1UL: 
< #line 2213
<   *((u8 *)__gu_p) = 0U;
< #line 2213
<   goto ldv_54668;
<   case 2UL: 
< #line 2213
<   put_unaligned_le16(0, __gu_p);
< #line 2213
<   goto ldv_54668;
<   case 4UL: 
< #line 2213
<   put_unaligned_le32(0U, __gu_p);
< #line 2213
<   goto ldv_54668;
<   case 8UL: 
< #line 2213
<   put_unaligned_le64(0ULL, __gu_p);
< #line 2213
<   goto ldv_54668;
<   default: 
< #line 2213
<   __bad_unaligned_access_size();
< #line 2213
<   goto ldv_54668;
---
> #line 2597
>   if (tconn->my_addr_len != 0) {
> #line 2597
>     tmp___1 = nla_put(skb, 16387, tconn->my_addr_len, (void const   *)(& tconn->my_addr));
> #line 2597
>     if (tmp___1 != 0) {
> #line 2599
>       goto nla_put_failure;
>     } else {
> 
>     }
>   } else {
> 
62271,62273c57768,57795
<   ldv_54668: ;
< #line 2215
<   return ((int )((unsigned int )((long )tl) - (unsigned int )((long )(& reply->tag_list))));
---
> #line 2600
>   if (tconn->peer_addr_len != 0) {
> #line 2600
>     tmp___2 = nla_put(skb, 16388, tconn->peer_addr_len, (void const   *)(& tconn->peer_addr));
> #line 2600
>     if (tmp___2 != 0) {
> #line 2602
>       goto nla_put_failure;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 2603
>   nla_nest_end(skb, nla);
> #line 2604
>   return (0);
>   nla_put_failure: ;
> #line 2607
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 2608
>     nla_nest_cancel(skb, nla);
>   } else {
> 
>   }
> #line 2609
>   return (-90);
62276,62278c57798,57799
< #line 2218 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static int drbd_nl_get_state(struct drbd_conf *mdev , struct drbd_nl_cfg_req *nlp ,
<                              struct drbd_nl_cfg_reply *reply ) 
---
> #line 2612 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> int nla_put_status_info(struct sk_buff *skb , struct drbd_conf *mdev , struct sib_info  const  *sib ) 
62280,62286c57801,57849
<   unsigned short *tl ;
<   union drbd_state s ;
<   unsigned long rs_left ;
<   unsigned int res ;
<   int tmp ;
<   void *__gu_p ;
<   unsigned short *tmp___0 ;
---
>   struct state_info *si ;
>   struct net_conf *nc ;
>   struct nlattr *nla ;
>   int got_ldev ;
>   int err ;
>   int exclude_sensitive ;
>   bool tmp ;
>   int tmp___0 ;
>   int tmp___1 ;
>   int tmp___2 ;
>   int tmp___3 ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp___4 ;
>   int tmp___5 ;
>   int tmp___6 ;
>   struct net_conf *_________p1___0 ;
>   bool __warned___0 ;
>   int tmp___7 ;
>   int tmp___8 ;
>   int tmp___9 ;
>   int tmp___10 ;
>   int tmp___11 ;
>   sector_t tmp___12 ;
>   int tmp___13 ;
>   int tmp___14 ;
>   int tmp___15 ;
>   int tmp___16 ;
>   int tmp___17 ;
>   int tmp___18 ;
>   int tmp___19 ;
>   int tmp___20 ;
>   int tmp___21 ;
>   int tmp___22 ;
>   int tmp___23 ;
>   int tmp___24 ;
>   int tmp___25 ;
>   int err___0 ;
>   int tmp___26 ;
>   unsigned long tmp___27 ;
>   int tmp___28 ;
>   unsigned long tmp___29 ;
>   int tmp___30 ;
>   int tmp___31 ;
>   int tmp___32 ;
>   int tmp___33 ;
>   int tmp___34 ;
>   int tmp___35 ;
>   int tmp___36 ;
62289,62306c57852,57932
< #line 2221
<   tl = (unsigned short *)(& reply->tag_list);
< #line 2222
<   s = mdev->state;
< #line 2226
<   tl = get_state_to_tags(mdev, (struct get_state *)(& s), tl);
< #line 2229
<   if ((int )s.ldv_39979.conn > 15 && (int )s.ldv_39979.conn <= 21) {
< #line 2230
<     tmp = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 2230
<     if (tmp != 0) {
< #line 2231
<       drbd_get_syncer_progress(mdev, & rs_left, & res);
< #line 2232
<       tl = tl_add_int(tl, T_sync_progress, (void const   *)(& res));
< #line 2233
<       put_ldev(mdev);
---
> #line 2615
>   si = 0;
> #line 2619
>   err = 0;
> #line 2633
>   if ((unsigned long )sib != (unsigned long )((struct sib_info  const  *)0)) {
> #line 2633
>     tmp___1 = 1;
>   } else {
> #line 2633
>     tmp = capable(21);
> #line 2633
>     if (tmp) {
> #line 2633
>       tmp___0 = 0;
>     } else {
> #line 2633
>       tmp___0 = 1;
>     }
> #line 2633
>     if (tmp___0) {
> #line 2633
>       tmp___1 = 1;
>     } else {
> #line 2633
>       tmp___1 = 0;
>     }
>   }
> #line 2633
>   exclude_sensitive = tmp___1;
> #line 2635
>   got_ldev = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 2639
>   tmp___2 = nla_put_drbd_cfg_context(skb, mdev->tconn, (unsigned int )mdev->vnr);
> #line 2639
>   if (tmp___2 != 0) {
> #line 2640
>     goto nla_put_failure;
>   } else {
> 
>   }
> #line 2642
>   tmp___3 = res_opts_to_skb(skb, & (mdev->tconn)->res_opts, exclude_sensitive != 0);
> #line 2642
>   if (tmp___3 != 0) {
> #line 2643
>     goto nla_put_failure;
>   } else {
> 
>   }
> #line 2645
>   rcu_read_lock();
> #line 2646
>   if (got_ldev != 0) {
> #line 2647
>     _________p1 = *((struct disk_conf * volatile  *)(& (mdev->ldev)->disk_conf));
> #line 2647
>     tmp___4 = debug_lockdep_rcu_enabled();
> #line 2647
>     if (tmp___4 != 0 && ! __warned) {
> #line 2647
>       tmp___5 = rcu_read_lock_held();
> #line 2647
>       if (tmp___5 == 0 && 1) {
> #line 2647
>         __warned = 1;
> #line 2647
>         lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared",
>                                2647, "suspicious rcu_dereference_check() usage");
>       } else {
> 
>       }
>     } else {
> 
>     }
> #line 2647
>     tmp___6 = disk_conf_to_skb(skb, _________p1, exclude_sensitive != 0);
> #line 2647
>     if (tmp___6 != 0) {
> #line 2648
>       goto nla_put_failure;
62313,62345c57939,57958
< #line 2236
<   tmp___0 = tl;
< #line 2236
<   tl = tl + 1;
< #line 2236
<   __gu_p = (void *)tmp___0;
< #line 2236
<   switch (2UL) {
<   case 1UL: 
< #line 2236
<   *((u8 *)__gu_p) = 0U;
< #line 2236
<   goto ldv_54684;
<   case 2UL: 
< #line 2236
<   put_unaligned_le16(0, __gu_p);
< #line 2236
<   goto ldv_54684;
<   case 4UL: 
< #line 2236
<   put_unaligned_le32(0U, __gu_p);
< #line 2236
<   goto ldv_54684;
<   case 8UL: 
< #line 2236
<   put_unaligned_le64(0ULL, __gu_p);
< #line 2236
<   goto ldv_54684;
<   default: 
< #line 2236
<   __bad_unaligned_access_size();
< #line 2236
<   goto ldv_54684;
---
> #line 2650
>   _________p1___0 = *((struct net_conf * volatile  *)(& (mdev->tconn)->net_conf));
> #line 2650
>   tmp___7 = debug_lockdep_rcu_enabled();
> #line 2650
>   if (tmp___7 != 0 && ! __warned___0) {
> #line 2650
>     tmp___8 = rcu_read_lock_held();
> #line 2650
>     if (tmp___8 == 0 && 1) {
> #line 2650
>       __warned___0 = 1;
> #line 2650
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared",
>                              2650, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
62347,62349c57960,58242
<   ldv_54684: ;
< #line 2238
<   return ((int )((unsigned int )((long )tl) - (unsigned int )((long )(& reply->tag_list))));
---
> #line 2650
>   nc = _________p1___0;
> #line 2651
>   if ((unsigned long )nc != (unsigned long )((struct net_conf *)0)) {
> #line 2652
>     err = net_conf_to_skb(skb, nc, exclude_sensitive != 0);
>   } else {
> 
>   }
> #line 2653
>   rcu_read_unlock();
> #line 2654
>   if (err != 0) {
> #line 2655
>     goto nla_put_failure;
>   } else {
> 
>   }
> #line 2657
>   nla = nla_nest_start(skb, 8);
> #line 2658
>   if ((unsigned long )nla == (unsigned long )((struct nlattr *)0)) {
> #line 2659
>     goto nla_put_failure;
>   } else {
> 
>   }
> #line 2660
>   tmp___9 = nla_put_u32(skb, 16385, (unsigned long )sib != (unsigned long )((struct sib_info  const  *)0) ? (unsigned int )sib->sib_reason : 1U);
> #line 2660
>   if (tmp___9 != 0) {
> #line 2673
>     goto nla_put_failure;
>   } else {
> #line 2660
>     tmp___10 = nla_put_u32(skb, 2, mdev->state.i);
> #line 2660
>     if (tmp___10 != 0) {
> #line 2673
>       goto nla_put_failure;
>     } else {
> #line 2660
>       tmp___11 = nla_put_u64(skb, 16388, mdev->ed_uuid);
> #line 2660
>       if (tmp___11 != 0) {
> #line 2673
>         goto nla_put_failure;
>       } else {
> #line 2660
>         tmp___12 = drbd_get_capacity(mdev->this_bdev);
> #line 2660
>         tmp___13 = nla_put_u64(skb, 16387, (u64 )tmp___12);
> #line 2660
>         if (tmp___13 != 0) {
> #line 2673
>           goto nla_put_failure;
>         } else {
> #line 2660
>           tmp___14 = nla_put_u64(skb, 15, (u64 )mdev->send_cnt);
> #line 2660
>           if (tmp___14 != 0) {
> #line 2673
>             goto nla_put_failure;
>           } else {
> #line 2660
>             tmp___15 = nla_put_u64(skb, 16, (u64 )mdev->recv_cnt);
> #line 2660
>             if (tmp___15 != 0) {
> #line 2673
>               goto nla_put_failure;
>             } else {
> #line 2660
>               tmp___16 = nla_put_u64(skb, 17, (u64 )mdev->read_cnt);
> #line 2660
>               if (tmp___16 != 0) {
> #line 2673
>                 goto nla_put_failure;
>               } else {
> #line 2660
>                 tmp___17 = nla_put_u64(skb, 18, (u64 )mdev->writ_cnt);
> #line 2660
>                 if (tmp___17 != 0) {
> #line 2673
>                   goto nla_put_failure;
>                 } else {
> #line 2660
>                   tmp___18 = nla_put_u64(skb, 19, (u64 )mdev->al_writ_cnt);
> #line 2660
>                   if (tmp___18 != 0) {
> #line 2673
>                     goto nla_put_failure;
>                   } else {
> #line 2660
>                     tmp___19 = nla_put_u64(skb, 20, (u64 )mdev->bm_writ_cnt);
> #line 2660
>                     if (tmp___19 != 0) {
> #line 2673
>                       goto nla_put_failure;
>                     } else {
> #line 2660
>                       tmp___20 = atomic_read((atomic_t const   *)(& mdev->ap_bio_cnt));
> #line 2660
>                       tmp___21 = nla_put_u32(skb, 21, (u32 )tmp___20);
> #line 2660
>                       if (tmp___21 != 0) {
> #line 2673
>                         goto nla_put_failure;
>                       } else {
> #line 2660
>                         tmp___22 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
> #line 2660
>                         tmp___23 = nla_put_u32(skb, 22, (u32 )tmp___22);
> #line 2660
>                         if (tmp___23 != 0) {
> #line 2673
>                           goto nla_put_failure;
>                         } else {
> #line 2660
>                           tmp___24 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
> #line 2660
>                           tmp___25 = nla_put_u32(skb, 23, (u32 )tmp___24);
> #line 2660
>                           if (tmp___25 != 0) {
> #line 2673
>                             goto nla_put_failure;
>                           } else {
> 
>                           }
>                         }
>                       }
>                     }
>                   }
>                 }
>               }
>             }
>           }
>         }
>       }
>     }
>   }
> #line 2675
>   if (got_ldev != 0) {
> #line 2678
>     spin_lock_irq(& (mdev->ldev)->md.uuid_lock);
> #line 2679
>     err___0 = nla_put(skb, 16391, 32, (void const   *)(& (mdev->ldev)->md.uuid));
> #line 2680
>     spin_unlock_irq(& (mdev->ldev)->md.uuid_lock);
> #line 2682
>     if (err___0 != 0) {
> #line 2683
>       goto nla_put_failure;
>     } else {
> 
>     }
> #line 2685
>     tmp___26 = nla_put_u32(skb, 16392, (mdev->ldev)->md.flags);
> #line 2685
>     if (tmp___26 != 0) {
> #line 2688
>       goto nla_put_failure;
>     } else {
> #line 2685
>       tmp___27 = drbd_bm_bits(mdev);
> #line 2685
>       tmp___28 = nla_put_u64(skb, 16393, (u64 )tmp___27);
> #line 2685
>       if (tmp___28 != 0) {
> #line 2688
>         goto nla_put_failure;
>       } else {
> #line 2685
>         tmp___29 = drbd_bm_total_weight(mdev);
> #line 2685
>         tmp___30 = nla_put_u64(skb, 16394, (u64 )tmp___29);
> #line 2685
>         if (tmp___30 != 0) {
> #line 2688
>           goto nla_put_failure;
>         } else {
> 
>         }
>       }
>     }
> #line 2689
>     if ((int )mdev->state.ldv_50103.conn > 15 && (int )mdev->state.ldv_50103.conn <= 21) {
> #line 2691
>       tmp___31 = nla_put_u64(skb, 16395, (u64 )mdev->rs_total);
> #line 2691
>       if (tmp___31 != 0) {
> #line 2693
>         goto nla_put_failure;
>       } else {
> #line 2691
>         tmp___32 = nla_put_u64(skb, 16396, (u64 )mdev->rs_failed);
> #line 2691
>         if (tmp___32 != 0) {
> #line 2693
>           goto nla_put_failure;
>         } else {
> 
>         }
>       }
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 2697
>   if ((unsigned long )sib != (unsigned long )((struct sib_info  const  *)0)) {
> #line 2698
>     switch ((unsigned int )sib->sib_reason) {
>     case 5U: ;
>     case 1U: ;
> #line 2701
>     goto ldv_53546;
>     case 2U: 
> #line 2703
>     tmp___33 = nla_put_u32(skb, 16389, sib->ldv_51335.ldv_51334.os.i);
> #line 2703
>     if (tmp___33 != 0) {
> #line 2705
>       goto nla_put_failure;
>     } else {
> #line 2703
>       tmp___34 = nla_put_u32(skb, 16390, sib->ldv_51335.ldv_51334.ns.i);
> #line 2703
>       if (tmp___34 != 0) {
> #line 2705
>         goto nla_put_failure;
>       } else {
> 
>       }
>     }
> #line 2706
>     goto ldv_53546;
>     case 4U: 
> #line 2708
>     tmp___35 = nla_put_u32(skb, 16398, sib->ldv_51335.ldv_51330.helper_exit_code);
> #line 2708
>     if (tmp___35 != 0) {
> #line 2710
>       goto nla_put_failure;
>     } else {
> 
>     }
>     case 3U: 
> #line 2713
>     tmp___36 = nla_put_string(skb, 16397, (char const   *)sib->ldv_51335.ldv_51330.helper_name);
> #line 2713
>     if (tmp___36 != 0) {
> #line 2714
>       goto nla_put_failure;
>     } else {
> 
>     }
> #line 2715
>     goto ldv_53546;
>     }
>     ldv_53546: ;
>   } else {
> 
>   }
> #line 2718
>   nla_nest_end(skb, nla);
> #line 2720
>   if (0) {
>     nla_put_failure: 
> #line 2722
>     err = -90;
>   } else {
> 
>   }
> #line 2723
>   if (got_ldev != 0) {
> #line 2724
>     put_ldev(mdev);
>   } else {
> 
>   }
> #line 2725
>   return (err);
62352,62354c58245,58246
< #line 2241 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static int drbd_nl_get_uuids(struct drbd_conf *mdev , struct drbd_nl_cfg_req *nlp ,
<                              struct drbd_nl_cfg_reply *reply ) 
---
> #line 2728 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_get_status(struct sk_buff *skb , struct genl_info *info ) 
62356,62358c58248,58301
<   unsigned short *tl ;
<   unsigned long flags ;
<   raw_spinlock_t *tmp ;
---
>   enum drbd_ret_code retcode ;
>   int err ;
>   int tmp ;
> 
>   {
> #line 2733
>   tmp = drbd_adm_prepare(skb, info, 1U);
> #line 2733
>   retcode = (enum drbd_ret_code )tmp;
> #line 2734
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 2735
>     return ((int )retcode);
>   } else {
> 
>   }
> #line 2736
>   if ((unsigned int )retcode != 101U) {
> #line 2737
>     goto out;
>   } else {
> 
>   }
> #line 2739
>   err = nla_put_status_info(adm_ctx.reply_skb, adm_ctx.mdev, 0);
> #line 2740
>   if (err != 0) {
> #line 2741
>     nlmsg_free(adm_ctx.reply_skb);
> #line 2742
>     return (err);
>   } else {
> 
>   }
>   out: 
> #line 2745
>   drbd_adm_finish(info, (int )retcode);
> #line 2746
>   return (0);
> }
> }
> #line 2749 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> int get_one_status(struct sk_buff *skb , struct netlink_callback *cb ) 
> { 
>   struct drbd_conf *mdev ;
>   struct drbd_genlmsghdr *dh ;
>   struct drbd_tconn *pos ;
>   struct drbd_tconn *tconn ;
>   struct drbd_tconn *tmp ;
>   unsigned int volume ;
>   struct list_head *__ptr ;
>   struct list_head  const  *__mptr ;
>   struct list_head *_________p1 ;
>   bool __warned ;
62360,62361c58303,58322
<   void *__gu_p ;
<   unsigned short *tmp___1 ;
---
>   struct list_head *__ptr___0 ;
>   struct list_head  const  *__mptr___0 ;
>   struct list_head *_________p1___0 ;
>   bool __warned___0 ;
>   int tmp___1 ;
>   void *tmp___2 ;
>   struct list_head *__ptr___1 ;
>   struct list_head  const  *__mptr___1 ;
>   struct list_head *_________p1___1 ;
>   bool __warned___1 ;
>   int tmp___3 ;
>   void *tmp___4 ;
>   struct net_conf *nc ;
>   int tmp___5 ;
>   struct net_conf *_________p1___2 ;
>   bool __warned___2 ;
>   int tmp___6 ;
>   int tmp___7 ;
>   int tmp___8 ;
>   int tmp___9 ;
62364,62381c58325,58342
< #line 2246
<   tl = (unsigned short *)(& reply->tag_list);
< #line 2248
<   tmp___0 = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 2248
<   if (tmp___0 != 0) {
< #line 2250
<     tmp = spinlock_check(& (mdev->ldev)->md.uuid_lock);
< #line 2250
<     flags = _raw_spin_lock_irqsave(tmp);
< #line 2251
<     tl = tl_add_blob(tl, T_uuids, (void const   *)(& (mdev->ldev)->md.uuid), 32);
< #line 2252
<     tl = tl_add_int(tl, T_uuids_flags, (void const   *)(& (mdev->ldev)->md.flags));
< #line 2253
<     spin_unlock_irqrestore(& (mdev->ldev)->md.uuid_lock, flags);
< #line 2254
<     put_ldev(mdev);
---
> #line 2753
>   pos = (struct drbd_tconn *)cb->args[0];
> #line 2754
>   tconn = 0;
> #line 2756
>   volume = (unsigned int )cb->args[1];
> #line 2779
>   rcu_read_lock();
> #line 2781
>   __ptr = drbd_tconns.next;
> #line 2781
>   _________p1 = *((struct list_head * volatile  *)(& __ptr));
> #line 2781
>   tmp___0 = debug_lockdep_rcu_enabled();
> #line 2781
>   if (tmp___0 != 0 && ! __warned) {
> #line 2781
>     rcu_read_lock_held();
62385,62417c58346,58362
< #line 2256
<   tmp___1 = tl;
< #line 2256
<   tl = tl + 1;
< #line 2256
<   __gu_p = (void *)tmp___1;
< #line 2256
<   switch (2UL) {
<   case 1UL: 
< #line 2256
<   *((u8 *)__gu_p) = 0U;
< #line 2256
<   goto ldv_54701;
<   case 2UL: 
< #line 2256
<   put_unaligned_le16(0, __gu_p);
< #line 2256
<   goto ldv_54701;
<   case 4UL: 
< #line 2256
<   put_unaligned_le32(0U, __gu_p);
< #line 2256
<   goto ldv_54701;
<   case 8UL: 
< #line 2256
<   put_unaligned_le64(0ULL, __gu_p);
< #line 2256
<   goto ldv_54701;
<   default: 
< #line 2256
<   __bad_unaligned_access_size();
< #line 2256
<   goto ldv_54701;
---
> #line 2781
>   __mptr = (struct list_head  const  *)_________p1;
> #line 2781
>   tmp = (struct drbd_tconn *)__mptr + 0xfffffffffffffff8UL;
> #line 2781
>   goto ldv_53583;
>   ldv_53582: ;
> #line 2782
>   if ((unsigned long )pos == (unsigned long )((struct drbd_tconn *)0)) {
> #line 2784
>     pos = tmp;
> #line 2785
>     tconn = pos;
> #line 2786
>     goto ldv_53581;
>   } else {
> 
62419,62421c58364,58563
<   ldv_54701: ;
< #line 2258
<   return ((int )((unsigned int )((long )tl) - (unsigned int )((long )(& reply->tag_list))));
---
> #line 2788
>   if ((unsigned long )tmp == (unsigned long )pos) {
> #line 2789
>     tconn = pos;
> #line 2790
>     goto ldv_53581;
>   } else {
> 
>   }
> #line 2781
>   __ptr___0 = tmp->all_tconn.next;
> #line 2781
>   _________p1___0 = *((struct list_head * volatile  *)(& __ptr___0));
> #line 2781
>   tmp___1 = debug_lockdep_rcu_enabled();
> #line 2781
>   if (tmp___1 != 0 && ! __warned___0) {
> #line 2781
>     rcu_read_lock_held();
>   } else {
> 
>   }
> #line 2781
>   __mptr___0 = (struct list_head  const  *)_________p1___0;
> #line 2781
>   tmp = (struct drbd_tconn *)__mptr___0 + 0xfffffffffffffff8UL;
>   ldv_53583: ;
> #line 2781
>   if ((unsigned long )(& tmp->all_tconn) != (unsigned long )(& drbd_tconns)) {
> #line 2782
>     goto ldv_53582;
>   } else {
> 
>   }
>   ldv_53581: ;
> #line 2793
>   if ((unsigned long )tconn != (unsigned long )((struct drbd_tconn *)0)) {
>     next_tconn: 
> #line 2795
>     tmp___2 = idr_get_next(& tconn->volumes, (int *)(& volume));
> #line 2795
>     mdev = (struct drbd_conf *)tmp___2;
> #line 2796
>     if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
> #line 2799
>       __ptr___1 = tconn->all_tconn.next;
> #line 2799
>       _________p1___1 = *((struct list_head * volatile  *)(& __ptr___1));
> #line 2799
>       tmp___3 = debug_lockdep_rcu_enabled();
> #line 2799
>       if (tmp___3 != 0 && ! __warned___1) {
> #line 2799
>         rcu_read_lock_held();
>       } else {
> 
>       }
> #line 2799
>       __mptr___1 = (struct list_head  const  *)_________p1___1;
> #line 2799
>       pos = (struct drbd_tconn *)__mptr___1 + 0xfffffffffffffff8UL;
> #line 2802
>       if (volume != 0U) {
> #line 2806
>         if ((unsigned long )(& pos->all_tconn) == (unsigned long )(& drbd_tconns) || cb->args[2] != 0L) {
> #line 2807
>           goto out;
>         } else {
> 
>         }
> #line 2808
>         volume = 0U;
> #line 2809
>         tconn = pos;
> #line 2810
>         goto next_tconn;
>       } else {
> 
>       }
>     } else {
> 
>     }
> #line 2814
>     tmp___4 = genlmsg_put(skb, ((struct netlink_skb_parms *)(& (cb->skb)->cb))->portid,
>                           (cb->nlh)->nlmsg_seq, & drbd_genl_family, 2, 2);
> #line 2814
>     dh = (struct drbd_genlmsghdr *)tmp___4;
> #line 2817
>     if ((unsigned long )dh == (unsigned long )((struct drbd_genlmsghdr *)0)) {
> #line 2818
>       goto out;
>     } else {
> 
>     }
> #line 2820
>     if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
> #line 2825
>       dh->minor = 4294967295U;
> #line 2826
>       dh->ldv_49550.ret_code = 101;
> #line 2827
>       tmp___5 = nla_put_drbd_cfg_context(skb, tconn, 4294967295U);
> #line 2827
>       if (tmp___5 != 0) {
> #line 2828
>         goto cancel;
>       } else {
> 
>       }
> #line 2829
>       _________p1___2 = *((struct net_conf * volatile  *)(& tconn->net_conf));
> #line 2829
>       tmp___6 = debug_lockdep_rcu_enabled();
> #line 2829
>       if (tmp___6 != 0 && ! __warned___2) {
> #line 2829
>         tmp___7 = rcu_read_lock_held();
> #line 2829
>         if (tmp___7 == 0 && 1) {
> #line 2829
>           __warned___2 = 1;
> #line 2829
>           lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared",
>                                  2829, "suspicious rcu_dereference_check() usage");
>         } else {
> 
>         }
>       } else {
> 
>       }
> #line 2829
>       nc = _________p1___2;
> #line 2830
>       if ((unsigned long )nc != (unsigned long )((struct net_conf *)0)) {
> #line 2830
>         tmp___8 = net_conf_to_skb(skb, nc, 1);
> #line 2830
>         if (tmp___8 != 0) {
> #line 2831
>           goto cancel;
>         } else {
> 
>         }
>       } else {
> 
>       }
> #line 2832
>       goto done;
>     } else {
> 
>     }
> #line 2835
>     if ((unsigned int )mdev->vnr != volume) {
> #line 2835
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mdev->vnr == volume ) in %s:%d\n",
>               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared",
>               2835);
>     } else {
> 
>     }
> #line 2836
>     if ((unsigned long )mdev->tconn != (unsigned long )tconn) {
> #line 2836
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mdev->tconn == tconn ) in %s:%d\n",
>               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared",
>               2836);
>     } else {
> 
>     }
> #line 2838
>     dh->minor = mdev_to_minor(mdev);
> #line 2839
>     dh->ldv_49550.ret_code = 101;
> #line 2841
>     tmp___9 = nla_put_status_info(skb, mdev, 0);
> #line 2841
>     if (tmp___9 != 0) {
>       cancel: 
> #line 2843
>       genlmsg_cancel(skb, (void *)dh);
> #line 2844
>       goto out;
>     } else {
> 
>     }
>     done: 
> #line 2847
>     genlmsg_end(skb, (void *)dh);
>   } else {
> 
>   }
>   out: 
> #line 2851
>   rcu_read_unlock();
> #line 2853
>   cb->args[0] = (long )pos;
> #line 2854
>   cb->args[1] = (unsigned long )pos == (unsigned long )tconn ? (long )(volume + 1U) : 0L;
> #line 2858
>   return ((int )skb->len);
62424,62426c58566,58567
< #line 2267 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static int drbd_nl_get_timeout_flag(struct drbd_conf *mdev , struct drbd_nl_cfg_req *nlp ,
<                                     struct drbd_nl_cfg_reply *reply ) 
---
> #line 2871 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_get_status_all(struct sk_buff *skb , struct netlink_callback *cb ) 
62428,62429c58569,58573
<   unsigned short *tl ;
<   char rv ;
---
>   unsigned int hdrlen ;
>   struct nlattr *nla ;
>   char const   *resource_name ;
>   struct drbd_tconn *tconn ;
>   int maxtype ;
62431,62432c58575,58579
<   void *__gu_p ;
<   unsigned short *tmp___0 ;
---
>   struct nlattr *tmp___0 ;
>   long tmp___1 ;
>   long tmp___2 ;
>   void *tmp___3 ;
>   int tmp___4 ;
62435,62442c58582,58594
< #line 2273
<   tl = (unsigned short *)(& reply->tag_list);
< #line 2275
<   if (*((unsigned int *)mdev + 569UL) != 40960U) {
< #line 2275
<     tmp = drbd_test_flag(mdev, USE_DEGR_WFC_T);
< #line 2275
<     rv = tmp != 0;
---
> #line 2873
>   hdrlen = 12U;
> #line 2880
>   if (cb->args[0] != 0L) {
> #line 2883
>     if (cb->args[2] != 0L && cb->args[2] != cb->args[0]) {
> #line 2884
>       return (0);
>     } else {
> 
>     }
> #line 2885
>     goto dump;
62444,62445c58596
< #line 2275
<     rv = 2;
---
> 
62447,62481c58598,58609
< #line 2278
<   tl = tl_add_blob(tl, T_use_degraded, (void const   *)(& rv), 1);
< #line 2279
<   tmp___0 = tl;
< #line 2279
<   tl = tl + 1;
< #line 2279
<   __gu_p = (void *)tmp___0;
< #line 2279
<   switch (2UL) {
<   case 1UL: 
< #line 2279
<   *((u8 *)__gu_p) = 0U;
< #line 2279
<   goto ldv_54715;
<   case 2UL: 
< #line 2279
<   put_unaligned_le16(0, __gu_p);
< #line 2279
<   goto ldv_54715;
<   case 4UL: 
< #line 2279
<   put_unaligned_le32(0U, __gu_p);
< #line 2279
<   goto ldv_54715;
<   case 8UL: 
< #line 2279
<   put_unaligned_le64(0ULL, __gu_p);
< #line 2279
<   goto ldv_54715;
<   default: 
< #line 2279
<   __bad_unaligned_access_size();
< #line 2279
<   goto ldv_54715;
---
> #line 2890
>   tmp = nlmsg_attrlen(cb->nlh, (int )hdrlen);
> #line 2890
>   tmp___0 = nlmsg_attrdata(cb->nlh, (int )hdrlen);
> #line 2890
>   nla = nla_find((struct nlattr  const  *)tmp___0, tmp, 2);
> #line 2895
>   if ((unsigned long )nla == (unsigned long )((struct nlattr *)0)) {
> #line 2896
>     goto dump;
>   } else {
> 
62483,62485c58611,58656
<   ldv_54715: ;
< #line 2281
<   return ((int )((unsigned int )((long )tl) - (unsigned int )((long )(& reply->tag_list))));
---
> #line 2897
>   maxtype = 4;
> #line 2898
>   nla = drbd_nla_find_nested(maxtype, nla, 2);
> #line 2899
>   tmp___2 = IS_ERR((void const   *)nla);
> #line 2899
>   if (tmp___2 != 0L) {
> #line 2900
>     tmp___1 = PTR_ERR((void const   *)nla);
> #line 2900
>     return ((int )tmp___1);
>   } else {
> 
>   }
> #line 2902
>   if ((unsigned long )nla == (unsigned long )((struct nlattr *)0)) {
> #line 2903
>     return (-22);
>   } else {
> 
>   }
> #line 2904
>   tmp___3 = nla_data((struct nlattr  const  *)nla);
> #line 2904
>   resource_name = (char const   *)tmp___3;
> #line 2905
>   tconn = conn_get_by_name(resource_name);
> #line 2907
>   if ((unsigned long )tconn == (unsigned long )((struct drbd_tconn *)0)) {
> #line 2908
>     return (-19);
>   } else {
> 
>   }
> #line 2910
>   kref_put(& tconn->kref, & conn_destroy);
> #line 2914
>   cb->args[0] = (long )tconn;
> #line 2916
>   cb->args[2] = (long )tconn;
>   dump: 
> #line 2919
>   tmp___4 = get_one_status(skb, cb);
> #line 2919
>   return (tmp___4);
62488,62490c58659,58660
< #line 2284 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static int drbd_nl_start_ov(struct drbd_conf *mdev , struct drbd_nl_cfg_req *nlp ,
<                             struct drbd_nl_cfg_reply *reply ) 
---
> #line 2922 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_get_timeout_type(struct sk_buff *skb , struct genl_info *info ) 
62492c58662,58664
<   struct start_ov args ;
---
>   enum drbd_ret_code retcode ;
>   struct timeout_parms tp ;
>   int err ;
62495,62496c58667,58724
<   wait_queue_t __wait ;
<   struct task_struct *tmp___1 ;
---
> 
>   {
> #line 2928
>   tmp = drbd_adm_prepare(skb, info, 1U);
> #line 2928
>   retcode = (enum drbd_ret_code )tmp;
> #line 2929
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 2930
>     return ((int )retcode);
>   } else {
> 
>   }
> #line 2931
>   if ((unsigned int )retcode != 101U) {
> #line 2932
>     goto out;
>   } else {
> 
>   }
> #line 2934
>   if (*((unsigned int *)adm_ctx.mdev + 187UL) != 40960U) {
> #line 2934
>     tmp___0 = constant_test_bit(2U, (unsigned long const volatile   *)(& (adm_ctx.mdev)->flags));
> #line 2934
>     tp.timeout_type = tmp___0 != 0;
>   } else {
> #line 2934
>     tp.timeout_type = 2U;
>   }
> #line 2939
>   err = timeout_parms_to_priv_skb(adm_ctx.reply_skb, & tp);
> #line 2940
>   if (err != 0) {
> #line 2941
>     nlmsg_free(adm_ctx.reply_skb);
> #line 2942
>     return (err);
>   } else {
> 
>   }
>   out: 
> #line 2945
>   drbd_adm_finish(info, (int )retcode);
> #line 2946
>   return (0);
> }
> }
> #line 2949 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_start_ov(struct sk_buff *skb , struct genl_info *info ) 
> { 
>   struct drbd_conf *mdev ;
>   enum drbd_ret_code retcode ;
>   struct start_ov_parms parms ;
>   int tmp ;
>   int err ;
>   int tmp___0 ;
>   char const   *tmp___1 ;
62497a58726,58728
>   wait_queue_t __wait ;
>   struct task_struct *tmp___3 ;
>   int tmp___4 ;
62499a58731
>   int tmp___5 ;
62502,62513c58734,58741
< #line 2288
<   args.start_sector = (unsigned long long )mdev->ov_start_sector;
< #line 2288
<   args.stop_sector = 0xffffffffffffffffULL;
< #line 2293
<   tmp = start_ov_from_tags(mdev, (unsigned short *)(& nlp->tag_list), & args);
< #line 2293
<   if (tmp == 0) {
< #line 2294
<     reply->ret_code = 126;
< #line 2295
<     return (0);
---
> #line 2955
>   tmp = drbd_adm_prepare(skb, info, 1U);
> #line 2955
>   retcode = (enum drbd_ret_code )tmp;
> #line 2956
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 2957
>     return ((int )retcode);
62517c58745,58784
< #line 2300
---
> #line 2958
>   if ((unsigned int )retcode != 101U) {
> #line 2959
>     goto out;
>   } else {
> 
>   }
> #line 2961
>   mdev = adm_ctx.mdev;
> #line 2964
>   parms.ov_start_sector = (__u64 )mdev->ov_start_sector;
> #line 2965
>   parms.ov_stop_sector = 0xffffffffffffffffULL;
> #line 2966
>   if ((unsigned long )*(info->attrs + 9UL) != (unsigned long )((struct nlattr *)0)) {
> #line 2967
>     tmp___0 = start_ov_parms_from_attrs(& parms, info);
> #line 2967
>     err = tmp___0;
> #line 2968
>     if (err != 0) {
> #line 2969
>       retcode = ERR_MANDATORY_TAG;
> #line 2970
>       tmp___1 = from_attrs_err_to_txt(err);
> #line 2970
>       drbd_msg_put_info(tmp___1);
> #line 2971
>       goto out;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 2975
>   mdev->ov_start_sector = (sector_t )parms.ov_start_sector & 0xfffffffffffffff8UL;
> #line 2976
>   mdev->ov_stop_sector = (sector_t )parms.ov_stop_sector;
> #line 2980
62519,62524c58786,58791
< #line 2301
<   tmp___0 = drbd_test_flag(mdev, BITMAP_IO);
< #line 2301
<   if (tmp___0 == 0) {
< #line 2301
<     goto ldv_54726;
---
> #line 2981
>   tmp___2 = constant_test_bit(9U, (unsigned long const volatile   *)(& mdev->flags));
> #line 2981
>   if (tmp___2 == 0) {
> #line 2981
>     goto ldv_53628;
62528,62530c58795,58797
< #line 2301
<   tmp___1 = get_current();
< #line 2301
---
> #line 2981
>   tmp___3 = get_current();
> #line 2981
62532,62534c58799,58801
< #line 2301
<   __wait.private = (void *)tmp___1;
< #line 2301
---
> #line 2981
>   __wait.private = (void *)tmp___3;
> #line 2981
62536c58803
< #line 2301
---
> #line 2981
62538c58805
< #line 2301
---
> #line 2981
62540,62541c58807,58808
<   ldv_54729: 
< #line 2301
---
>   ldv_53631: 
> #line 2981
62543,62548c58810,58815
< #line 2301
<   tmp___2 = drbd_test_flag(mdev, BITMAP_IO);
< #line 2301
<   if (tmp___2 == 0) {
< #line 2301
<     goto ldv_54728;
---
> #line 2981
>   tmp___4 = constant_test_bit(9U, (unsigned long const volatile   *)(& mdev->flags));
> #line 2981
>   if (tmp___4 == 0) {
> #line 2981
>     goto ldv_53630;
62552c58819
< #line 2301
---
> #line 2981
62554,62557c58821,58824
< #line 2301
<   goto ldv_54729;
<   ldv_54728: 
< #line 2301
---
> #line 2981
>   goto ldv_53631;
>   ldv_53630: 
> #line 2981
62559,62564c58826,58827
<   ldv_54726: 
< #line 2304
<   mdev->ov_start_sector = (sector_t )args.start_sector & 0xfffffffffffffff8UL;
< #line 2305
<   mdev->ov_stop_sector = (sector_t )args.stop_sector;
< #line 2306
---
>   ldv_53628: 
> #line 2982
62566,62568c58829,58831
< #line 2306
<   val.ldv_39979.conn = 18U;
< #line 2306
---
> #line 2982
>   val.ldv_40604.conn = 18U;
> #line 2982
62570,62574c58833,58839
< #line 2306
<   mask.ldv_39979.conn = 31U;
< #line 2306
<   reply->ret_code = drbd_request_state(mdev, mask, val);
< #line 2307
---
> #line 2982
>   mask.ldv_40604.conn = 31U;
> #line 2982
>   tmp___5 = drbd_request_state(mdev, mask, val);
> #line 2982
>   retcode = (enum drbd_ret_code )tmp___5;
> #line 2983
62576c58841,58844
< #line 2308
---
>   out: 
> #line 2985
>   drbd_adm_finish(info, (int )retcode);
> #line 2986
62580,62582c58848,58849
< #line 2312 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static int drbd_nl_new_c_uuid(struct drbd_conf *mdev , struct drbd_nl_cfg_req *nlp ,
<                               struct drbd_nl_cfg_reply *reply ) 
---
> #line 2990 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_new_c_uuid(struct sk_buff *skb , struct genl_info *info ) 
62584c58851,58852
<   int retcode ;
---
>   struct drbd_conf *mdev ;
>   enum drbd_ret_code retcode ;
62587c58855
<   struct new_c_uuid args ;
---
>   struct new_c_uuid_parms args ;
62589c58857,58858
<   int tmp___0 ;
---
>   char const   *tmp___0 ;
>   int tmp___1 ;
62593,62595c58862
< #line 2315
<   retcode = 101;
< #line 2316
---
> #line 2994
62597,62606c58864,58871
< #line 2321
<   memset((void *)(& args), 0, 4UL);
< #line 2322
<   tmp = new_c_uuid_from_tags(mdev, (unsigned short *)(& nlp->tag_list), & args);
< #line 2322
<   if (tmp == 0) {
< #line 2323
<     reply->ret_code = 126;
< #line 2324
<     return (0);
---
> #line 2998
>   tmp = drbd_adm_prepare(skb, info, 1U);
> #line 2998
>   retcode = (enum drbd_ret_code )tmp;
> #line 2999
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 3000
>     return ((int )retcode);
62610,62618c58875,58914
< #line 2327
<   ldv_mutex_lock_303(& mdev->state_mutex);
< #line 2329
<   tmp___0 = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 2329
<   if (tmp___0 == 0) {
< #line 2330
<     retcode = 138;
< #line 2331
---
> #line 3001
>   if ((unsigned int )retcode != 101U) {
> #line 3002
>     goto out_nolock;
>   } else {
> 
>   }
> #line 3004
>   mdev = adm_ctx.mdev;
> #line 3005
>   memset((void *)(& args), 0, 1UL);
> #line 3006
>   if ((unsigned long )*(info->attrs + 10UL) != (unsigned long )((struct nlattr *)0)) {
> #line 3007
>     err = new_c_uuid_parms_from_attrs(& args, info);
> #line 3008
>     if (err != 0) {
> #line 3009
>       retcode = ERR_MANDATORY_TAG;
> #line 3010
>       tmp___0 = from_attrs_err_to_txt(err);
> #line 3010
>       drbd_msg_put_info(tmp___0);
> #line 3011
>       goto out_nolock;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 3015
>   mutex_lock_nested(mdev->state_mutex, 0U);
> #line 3017
>   tmp___1 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 3017
>   if (tmp___1 == 0) {
> #line 3018
>     retcode = ERR_NO_DISK;
> #line 3019
62623,62625c58919,58921
< #line 2335
<   if ((((unsigned int )*((unsigned short *)mdev + 1138UL) == 160U && mdev->agreed_pro_version > 89) && (mdev->ldev)->md.uuid[0] == 4ULL) && (unsigned int )*((unsigned char *)(& args) + 0UL) != 0U) {
< #line 2337
---
> #line 3023
>   if ((((unsigned int )*((unsigned short *)mdev + 374UL) == 160U && (mdev->tconn)->agreed_pro_version > 89) && (mdev->ldev)->md.uuid[0] == 4ULL) && (int )((signed char )args.clear_bm) != 0) {
> #line 3025
62627c58923
< #line 2338
---
> #line 3026
62630,62634c58926,58930
< #line 2339
<   if ((unsigned int )*((unsigned short *)mdev + 1138UL) != 0U) {
< #line 2340
<     retcode = 151;
< #line 2341
---
> #line 3027
>   if ((unsigned int )*((unsigned short *)mdev + 374UL) != 0U) {
> #line 3028
>     retcode = ERR_CONNECTED;
> #line 3029
62639c58935
< #line 2344
---
> #line 3032
62641c58937
< #line 2345
---
> #line 3033
62643,62645c58939,58941
< #line 2347
<   if ((unsigned int )*((unsigned char *)(& args) + 0UL) != 0U) {
< #line 2348
---
> #line 3035
>   if ((int )((signed char )args.clear_bm) != 0) {
> #line 3036
62648c58944
< #line 2350
---
> #line 3038
62650c58946
< #line 2351
---
> #line 3039
62653,62654c58949,58950
< #line 2352
<       retcode = 118;
---
> #line 3040
>       retcode = ERR_IO_MD_DISK;
62658c58954
< #line 2354
---
> #line 3042
62660c58956
< #line 2355
---
> #line 3043
62662c58958
< #line 2356
---
> #line 3044
62664c58960
< #line 2357
---
> #line 3045
62666,62674c58962,58970
< #line 2358
<       spin_lock_irq(& mdev->req_lock);
< #line 2359
<       __ns.i = mdev->state.i;
< #line 2359
<       __ns.ldv_39979.disk = 8U;
< #line 2359
<       __ns.ldv_39979.pdsk = 8U;
< #line 2359
---
> #line 3046
>       spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 3047
>       __ns = drbd_read_state(mdev);
> #line 3047
>       __ns.ldv_40604.disk = 8U;
> #line 3047
>       __ns.ldv_40604.pdsk = 8U;
> #line 3047
62676,62677c58972,58973
< #line 2361
<       spin_unlock_irq(& mdev->req_lock);
---
> #line 3049
>       spin_unlock_irq(& (mdev->tconn)->req_lock);
62684c58980
< #line 2365
---
> #line 3053
62687c58983
< #line 2367
---
> #line 3055
62690,62694c58986,58991
< #line 2369
<   ldv_mutex_unlock_304(& mdev->state_mutex);
< #line 2371
<   reply->ret_code = retcode;
< #line 2372
---
> #line 3057
>   mutex_unlock(mdev->state_mutex);
>   out_nolock: 
> #line 3059
>   drbd_adm_finish(info, (int )retcode);
> #line 3060
62698,62743c58995,58998
< #line 2382 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static struct cn_handler_struct cnd_table[27U]  = 
< #line 2382
<   {      {0, 0}, 
<         {& drbd_nl_primary, 0}, 
<         {& drbd_nl_secondary, 0}, 
<         {& drbd_nl_disk_conf, 0}, 
<         {& drbd_nl_detach, 0}, 
<         {& drbd_nl_net_conf, 0}, 
<         {& drbd_nl_disconnect, 0}, 
<         {& drbd_nl_resize, 0}, 
<         {& drbd_nl_syncer_conf, 0}, 
<         {& drbd_nl_invalidate, 0}, 
<         {& drbd_nl_invalidate_peer, 0}, 
<         {& drbd_nl_pause_sync, 0}, 
<         {& drbd_nl_resume_sync, 0}, 
<         {& drbd_nl_suspend_io, 0}, 
<         {& drbd_nl_resume_io, 0}, 
<         {& drbd_nl_outdate, 0}, 
<         {& drbd_nl_get_config, 1320}, 
<         {& drbd_nl_get_state, 16}, 
<         {& drbd_nl_get_uuids, 48}, 
<         {& drbd_nl_get_timeout_flag, 8}, 
<         {0, 0}, 
<         {0, 0}, 
<         {0, 0}, 
<         {0, 0}, 
<         {0, 0}, 
<         {& drbd_nl_start_ov, 0}, 
<         {& drbd_nl_new_c_uuid, 0}};
< #line 2413 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static void drbd_connector_callback(struct cn_msg *req , struct netlink_skb_parms *nsp ) 
< { 
<   struct drbd_nl_cfg_req *nlp ;
<   struct cn_handler_struct *cm ;
<   struct cn_msg *cn_reply ;
<   struct drbd_nl_cfg_reply *reply ;
<   struct drbd_conf *mdev ;
<   int retcode ;
<   int rr ;
<   int reply_size ;
<   bool tmp ;
<   int tmp___0 ;
<   bool tmp___1 ;
<   int tmp___2 ;
<   void *tmp___3 ;
---
> #line 3064 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> static enum drbd_ret_code drbd_check_resource_name(char const   *name ) 
> { 
>   char *tmp ;
62746,62765c59001,59006
< #line 2415
<   nlp = (struct drbd_nl_cfg_req *)(& req->data);
< #line 2421
<   reply_size = 34;
< #line 2425
<   tmp = try_module_get(& __this_module);
< #line 2425
<   if (tmp) {
< #line 2425
<     tmp___0 = 0;
<   } else {
< #line 2425
<     tmp___0 = 1;
<   }
< #line 2425
<   if (tmp___0) {
< #line 2426
<     printk("\vdrbd: try_module_get() failed!\n");
< #line 2427
<     return;
---
> #line 3066
>   if ((unsigned long )name == (unsigned long )((char const   *)0) || (int )((signed char )*name) == 0) {
> #line 3067
>     drbd_msg_put_info("resource name missing");
> #line 3068
>     return (ERR_MANDATORY_TAG);
62769,62774c59010,59017
< #line 2430
<   tmp___1 = capable(21);
< #line 2430
<   if (tmp___1) {
< #line 2430
<     tmp___2 = 0;
---
> #line 3072
>   tmp = strchr(name, 47);
> #line 3072
>   if ((unsigned long )tmp != (unsigned long )((char *)0)) {
> #line 3073
>     drbd_msg_put_info("invalid resource name");
> #line 3074
>     return (ERR_INVALID_REQUEST);
62776,62777c59019
< #line 2430
<     tmp___2 = 1;
---
> 
62779,62784c59021,59043
< #line 2430
<   if (tmp___2) {
< #line 2431
<     retcode = 152;
< #line 2432
<     goto fail;
---
> #line 3076
>   return (NO_ERROR);
> }
> }
> #line 3079 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_new_resource(struct sk_buff *skb , struct genl_info *info ) 
> { 
>   enum drbd_ret_code retcode ;
>   struct res_opts res_opts ;
>   int err ;
>   int tmp ;
>   char const   *tmp___0 ;
>   struct drbd_tconn *tmp___1 ;
> 
>   {
> #line 3085
>   tmp = drbd_adm_prepare(skb, info, 0U);
> #line 3085
>   retcode = (enum drbd_ret_code )tmp;
> #line 3086
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 3087
>     return ((int )retcode);
62788,62795c59047,59050
< #line 2435
<   mdev = ensure_mdev((int )nlp->drbd_minor, nlp->flags & 1);
< #line 2437
<   if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
< #line 2438
<     retcode = 127;
< #line 2439
<     goto fail;
---
> #line 3088
>   if ((unsigned int )retcode != 101U) {
> #line 3089
>     goto out;
62799,62804c59054,59067
< #line 2442
<   if (nlp->packet_type > 27 || nlp->packet_type == 27) {
< #line 2444
<     retcode = 137;
< #line 2445
<     goto fail;
---
> #line 3091
>   set_res_opts_defaults(& res_opts);
> #line 3092
>   err = res_opts_from_attrs(& res_opts, info);
> #line 3093
>   if (err != 0 && err != -42) {
> #line 3094
>     retcode = ERR_MANDATORY_TAG;
> #line 3095
>     tmp___0 = from_attrs_err_to_txt(err);
> #line 3095
>     drbd_msg_put_info(tmp___0);
> #line 3096
>     goto out;
62808,62817c59071,59076
< #line 2448
<   cm = (struct cn_handler_struct *)(& cnd_table) + (unsigned long )nlp->packet_type;
< #line 2451
<   if ((unsigned long )cm->function == (unsigned long )((int (*)(struct drbd_conf * ,
<                                                                 struct drbd_nl_cfg_req * ,
<                                                                 struct drbd_nl_cfg_reply * ))0)) {
< #line 2452
<     retcode = 137;
< #line 2453
<     goto fail;
---
> #line 3099
>   retcode = drbd_check_resource_name((char const   *)adm_ctx.resource_name);
> #line 3100
>   if ((unsigned int )retcode != 101U) {
> #line 3101
>     goto out;
62821,62832c59080,59092
< #line 2456
<   reply_size = cm->reply_body_size + reply_size;
< #line 2459
<   tmp___3 = kzalloc((size_t )reply_size, 208U);
< #line 2459
<   cn_reply = (struct cn_msg *)tmp___3;
< #line 2460
<   if ((unsigned long )cn_reply == (unsigned long )((struct cn_msg *)0)) {
< #line 2461
<     retcode = 122;
< #line 2462
<     goto fail;
---
> #line 3103
>   if ((unsigned long )adm_ctx.tconn != (unsigned long )((struct drbd_tconn *)0)) {
> #line 3104
>     if (((int )(info->nlhdr)->nlmsg_flags & 512) != 0) {
> #line 3105
>       retcode = ERR_INVALID_REQUEST;
> #line 3106
>       drbd_msg_put_info("resource exists");
>     } else {
> 
>     }
> #line 3109
>     goto out;
62836,62861c59096,59101
< #line 2464
<   reply = (struct drbd_nl_cfg_reply *)(& cn_reply->data);
< #line 2466
<   reply->packet_type = cm->reply_body_size != 0 ? nlp->packet_type : 27;
< #line 2468
<   reply->minor = nlp->drbd_minor;
< #line 2469
<   reply->ret_code = 101;
< #line 2472
<   rr = (*(cm->function))(mdev, nlp, reply);
< #line 2474
<   cn_reply->id = req->id;
< #line 2475
<   cn_reply->seq = req->seq;
< #line 2476
<   cn_reply->ack = req->ack + 1U;
< #line 2477
<   cn_reply->len = (unsigned int )((__u16 )rr) + 12U;
< #line 2478
<   cn_reply->flags = 0U;
< #line 2480
<   rr = cn_netlink_send(cn_reply, 8U, 208U);
< #line 2481
<   if (rr != 0 && rr != -3) {
< #line 2482
<     printk("\016drbd: cn_netlink_send()=%d\n", rr);
---
> #line 3112
>   tmp___1 = conn_create((char const   *)adm_ctx.resource_name, & res_opts);
> #line 3112
>   if ((unsigned long )tmp___1 == (unsigned long )((struct drbd_tconn *)0)) {
> #line 3113
>     retcode = ERR_NOMEM;
62865,62877c59105,59109
< #line 2484
<   kfree((void const   *)cn_reply);
< #line 2485
<   module_put(& __this_module);
< #line 2486
<   return;
<   fail: 
< #line 2488
<   drbd_nl_send_reply(req, retcode);
< #line 2489
<   module_put(& __this_module);
< #line 2490
<   return;
---
>   out: 
> #line 3115
>   drbd_adm_finish(info, (int )retcode);
> #line 3116
>   return (0);
62880,62892c59112,59117
< #line 2492 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static atomic_t drbd_nl_seq  =    {2};
< #line 2495 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static unsigned short *__tl_add_blob(unsigned short *tl , enum drbd_tags tag , void const   *data ,
<                                      unsigned short len , int nul_terminated ) 
< { 
<   unsigned short l ;
<   void *__gu_p ;
<   unsigned short *tmp ;
<   void *__gu_p___0 ;
<   unsigned short *tmp___0 ;
<   size_t __len ;
<   void *__ret ;
---
> #line 3119 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_add_minor(struct sk_buff *skb , struct genl_info *info ) 
> { 
>   struct drbd_genlmsghdr *dh ;
>   enum drbd_ret_code retcode ;
>   int tmp ;
62895,62931c59120,59131
< #line 2498
<   l = (unsigned short )tag_descriptions[(unsigned int )tag & 8191U].max_len;
< #line 2499
<   len = (int )len < (int )l ? len : l;
< #line 2500
<   tmp = tl;
< #line 2500
<   tl = tl + 1;
< #line 2500
<   __gu_p = (void *)tmp;
< #line 2500
<   switch (2UL) {
<   case 1UL: 
< #line 2500
<   *((u8 *)__gu_p) = (unsigned char )tag;
< #line 2500
<   goto ldv_54778;
<   case 2UL: 
< #line 2500
<   put_unaligned_le16((int )((unsigned short )tag), __gu_p);
< #line 2500
<   goto ldv_54778;
<   case 4UL: 
< #line 2500
<   put_unaligned_le32((unsigned int )tag, __gu_p);
< #line 2500
<   goto ldv_54778;
<   case 8UL: 
< #line 2500
<   put_unaligned_le64((unsigned long long )tag, __gu_p);
< #line 2500
<   goto ldv_54778;
<   default: 
< #line 2500
<   __bad_unaligned_access_size();
< #line 2500
<   goto ldv_54778;
---
> #line 3121
>   dh = (struct drbd_genlmsghdr *)info->userhdr;
> #line 3124
>   tmp = drbd_adm_prepare(skb, info, 2U);
> #line 3124
>   retcode = (enum drbd_ret_code )tmp;
> #line 3125
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 3126
>     return ((int )retcode);
>   } else {
> 
62933,62966c59133,59138
<   ldv_54778: 
< #line 2501
<   tmp___0 = tl;
< #line 2501
<   tl = tl + 1;
< #line 2501
<   __gu_p___0 = (void *)tmp___0;
< #line 2501
<   switch (2UL) {
<   case 1UL: 
< #line 2501
<   *((u8 *)__gu_p___0) = (unsigned char )len;
< #line 2501
<   goto ldv_54785;
<   case 2UL: 
< #line 2501
<   put_unaligned_le16((int )len, __gu_p___0);
< #line 2501
<   goto ldv_54785;
<   case 4UL: 
< #line 2501
<   put_unaligned_le32((unsigned int )len, __gu_p___0);
< #line 2501
<   goto ldv_54785;
<   case 8UL: 
< #line 2501
<   put_unaligned_le64((unsigned long long )len, __gu_p___0);
< #line 2501
<   goto ldv_54785;
<   default: 
< #line 2501
<   __bad_unaligned_access_size();
< #line 2501
<   goto ldv_54785;
---
> #line 3127
>   if ((unsigned int )retcode != 101U) {
> #line 3128
>     goto out;
>   } else {
> 
62968,62978c59140,59147
<   ldv_54785: 
< #line 2502
<   __len = (size_t )len;
< #line 2502
<   __ret = __builtin_memcpy((void *)tl, data, __len);
< #line 2503
<   tl = tl + (unsigned long )len;
< #line 2504
<   if (nul_terminated != 0) {
< #line 2505
<     *((char *)tl + 0xffffffffffffffffUL) = 0;
---
> #line 3130
>   if (dh->minor > 1048575U) {
> #line 3131
>     drbd_msg_put_info("requested minor out of range");
> #line 3132
>     retcode = ERR_INVALID_REQUEST;
> #line 3133
>     goto out;
62982,62990c59151,59159
< #line 2506
<   return (tl);
< }
< }
< #line 2510 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static unsigned short *tl_add_blob(unsigned short *tl , enum drbd_tags tag , void const   *data ,
<                                    int len ) 
< { 
<   unsigned short *tmp ;
---
> #line 3135
>   if (adm_ctx.volume > 65535U) {
> #line 3136
>     drbd_msg_put_info("requested volume id out of range");
> #line 3137
>     retcode = ERR_INVALID_REQUEST;
> #line 3138
>     goto out;
>   } else {
62992,63003c59161,59168
<   {
< #line 2512
<   tmp = __tl_add_blob(tl, tag, data, (int )((unsigned short )len), 0);
< #line 2512
<   return (tmp);
< }
< }
< #line 2516 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static unsigned short *tl_add_str(unsigned short *tl , enum drbd_tags tag , char const   *str ) 
< { 
<   size_t tmp ;
<   unsigned short *tmp___0 ;
---
>   }
> #line 3143
>   if ((unsigned long )adm_ctx.mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 3144
>     if (((int )(info->nlhdr)->nlmsg_flags & 512) != 0) {
> #line 3145
>       retcode = ERR_MINOR_EXISTS;
>     } else {
63005,63025c59170,59173
<   {
< #line 2518
<   tmp = strlen(str);
< #line 2518
<   tmp___0 = __tl_add_blob(tl, tag, (void const   *)str, (int )((unsigned int )((unsigned short )tmp) + 1U),
<                           0);
< #line 2518
<   return (tmp___0);
< }
< }
< #line 2522 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static unsigned short *tl_add_int(unsigned short *tl , enum drbd_tags tag , void const   *val ) 
< { 
<   void *__gu_p ;
<   unsigned short *tmp ;
<   void *__gu_p___0 ;
<   unsigned short *tmp___0 ;
<   void *__gu_p___1 ;
<   void *__gu_p___2 ;
<   unsigned short *tmp___1 ;
<   void *__gu_p___3 ;
---
>     }
> #line 3147
>     goto out;
>   } else {
63027,63098d59174
<   {
< #line 2524
<   tmp = tl;
< #line 2524
<   tl = tl + 1;
< #line 2524
<   __gu_p = (void *)tmp;
< #line 2524
<   switch (2UL) {
<   case 1UL: 
< #line 2524
<   *((u8 *)__gu_p) = (unsigned char )tag;
< #line 2524
<   goto ldv_54811;
<   case 2UL: 
< #line 2524
<   put_unaligned_le16((int )((unsigned short )tag), __gu_p);
< #line 2524
<   goto ldv_54811;
<   case 4UL: 
< #line 2524
<   put_unaligned_le32((unsigned int )tag, __gu_p);
< #line 2524
<   goto ldv_54811;
<   case 8UL: 
< #line 2524
<   put_unaligned_le64((unsigned long long )tag, __gu_p);
< #line 2524
<   goto ldv_54811;
<   default: 
< #line 2524
<   __bad_unaligned_access_size();
< #line 2524
<   goto ldv_54811;
<   }
<   ldv_54811: ;
< #line 2525
<   switch ((unsigned int )tag & 49152U) {
<   case 0U: 
< #line 2527
<   tmp___0 = tl;
< #line 2527
<   tl = tl + 1;
< #line 2527
<   __gu_p___0 = (void *)tmp___0;
< #line 2527
<   switch (2UL) {
<   case 1UL: 
< #line 2527
<   *((u8 *)__gu_p___0) = 4U;
< #line 2527
<   goto ldv_54819;
<   case 2UL: 
< #line 2527
<   put_unaligned_le16(4, __gu_p___0);
< #line 2527
<   goto ldv_54819;
<   case 4UL: 
< #line 2527
<   put_unaligned_le32(4U, __gu_p___0);
< #line 2527
<   goto ldv_54819;
<   case 8UL: 
< #line 2527
<   put_unaligned_le64(4ULL, __gu_p___0);
< #line 2527
<   goto ldv_54819;
<   default: 
< #line 2527
<   __bad_unaligned_access_size();
< #line 2527
<   goto ldv_54819;
63100,63211c59176,59182
<   ldv_54819: 
< #line 2528
<   __gu_p___1 = (void *)tl;
< #line 2528
<   switch (4UL) {
<   case 1UL: 
< #line 2528
<   *((u8 *)__gu_p___1) = (unsigned char )*((int *)val);
< #line 2528
<   goto ldv_54826;
<   case 2UL: 
< #line 2528
<   put_unaligned_le16((int )((unsigned short )*((int *)val)), __gu_p___1);
< #line 2528
<   goto ldv_54826;
<   case 4UL: 
< #line 2528
<   put_unaligned_le32((unsigned int )*((int *)val), __gu_p___1);
< #line 2528
<   goto ldv_54826;
<   case 8UL: 
< #line 2528
<   put_unaligned_le64((unsigned long long )*((int *)val), __gu_p___1);
< #line 2528
<   goto ldv_54826;
<   default: 
< #line 2528
<   __bad_unaligned_access_size();
< #line 2528
<   goto ldv_54826;
<   }
<   ldv_54826: 
< #line 2529
<   tl = tl + 4U;
< #line 2530
<   goto ldv_54831;
<   case 16384U: 
< #line 2532
<   tmp___1 = tl;
< #line 2532
<   tl = tl + 1;
< #line 2532
<   __gu_p___2 = (void *)tmp___1;
< #line 2532
<   switch (2UL) {
<   case 1UL: 
< #line 2532
<   *((u8 *)__gu_p___2) = 8U;
< #line 2532
<   goto ldv_54835;
<   case 2UL: 
< #line 2532
<   put_unaligned_le16(8, __gu_p___2);
< #line 2532
<   goto ldv_54835;
<   case 4UL: 
< #line 2532
<   put_unaligned_le32(8U, __gu_p___2);
< #line 2532
<   goto ldv_54835;
<   case 8UL: 
< #line 2532
<   put_unaligned_le64(8ULL, __gu_p___2);
< #line 2532
<   goto ldv_54835;
<   default: 
< #line 2532
<   __bad_unaligned_access_size();
< #line 2532
<   goto ldv_54835;
<   }
<   ldv_54835: 
< #line 2533
<   __gu_p___3 = (void *)tl;
< #line 2533
<   switch (8UL) {
<   case 1UL: 
< #line 2533
<   *((u8 *)__gu_p___3) = (unsigned char )*((u64 *)val);
< #line 2533
<   goto ldv_54842;
<   case 2UL: 
< #line 2533
<   put_unaligned_le16((int )((unsigned short )*((u64 *)val)), __gu_p___3);
< #line 2533
<   goto ldv_54842;
<   case 4UL: 
< #line 2533
<   put_unaligned_le32((unsigned int )*((u64 *)val), __gu_p___3);
< #line 2533
<   goto ldv_54842;
<   case 8UL: 
< #line 2533
<   put_unaligned_le64(*((u64 *)val), __gu_p___3);
< #line 2533
<   goto ldv_54842;
<   default: 
< #line 2533
<   __bad_unaligned_access_size();
< #line 2533
<   goto ldv_54842;
<   }
<   ldv_54842: 
< #line 2534
<   tl = tl + 8U;
< #line 2535
<   goto ldv_54831;
<   default: ;
<   }
<   ldv_54831: ;
< #line 2540
<   return (tl);
---
> #line 3150
>   retcode = conn_new_minor(adm_ctx.tconn, dh->minor, (int )adm_ctx.volume);
>   out: 
> #line 3152
>   drbd_adm_finish(info, (int )retcode);
> #line 3153
>   return (0);
63214,63215c59185,59186
< #line 2543 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void drbd_bcast_state(struct drbd_conf *mdev , union drbd_state state ) 
---
> #line 3156 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> static enum drbd_ret_code adm_delete_minor(struct drbd_conf *mdev ) 
63217,63223c59188,59190
<   char buffer[42U] ;
<   struct cn_msg *cn_reply ;
<   struct drbd_nl_cfg_reply *reply ;
<   unsigned short *tl ;
<   void *__gu_p ;
<   unsigned short *tmp ;
<   int tmp___0 ;
---
>   union drbd_state val ;
>   union drbd_state mask ;
>   unsigned int tmp ;
63226,63266c59193,59221
< #line 2549
<   cn_reply = (struct cn_msg *)(& buffer);
< #line 2550
<   reply = (struct drbd_nl_cfg_reply *)(& cn_reply->data);
< #line 2552
<   tl = (unsigned short *)(& reply->tag_list);
< #line 2556
<   tl = get_state_to_tags(mdev, (struct get_state *)(& state), tl);
< #line 2558
<   tmp = tl;
< #line 2558
<   tl = tl + 1;
< #line 2558
<   __gu_p = (void *)tmp;
< #line 2558
<   switch (2UL) {
<   case 1UL: 
< #line 2558
<   *((u8 *)__gu_p) = 0U;
< #line 2558
<   goto ldv_54858;
<   case 2UL: 
< #line 2558
<   put_unaligned_le16(0, __gu_p);
< #line 2558
<   goto ldv_54858;
<   case 4UL: 
< #line 2558
<   put_unaligned_le32(0U, __gu_p);
< #line 2558
<   goto ldv_54858;
<   case 8UL: 
< #line 2558
<   put_unaligned_le64(0ULL, __gu_p);
< #line 2558
<   goto ldv_54858;
<   default: 
< #line 2558
<   __bad_unaligned_access_size();
< #line 2558
<   goto ldv_54858;
---
> #line 3158
>   if ((unsigned int )*((unsigned char *)mdev + 749UL) == 0U && (unsigned int )*((unsigned char *)mdev + 748UL) == 2U) {
> #line 3163
>     val.i = 0U;
> #line 3163
>     val.ldv_40604.conn = 9U;
> #line 3163
>     mask.i = 0U;
> #line 3163
>     mask.ldv_40604.conn = 31U;
> #line 3163
>     _drbd_request_state(mdev, mask, val, 6);
> #line 3165
>     idr_remove(& (mdev->tconn)->volumes, mdev->vnr);
> #line 3166
>     tmp = mdev_to_minor(mdev);
> #line 3166
>     idr_remove(& minors, (int )tmp);
> #line 3167
>     del_gendisk(mdev->vdisk);
> #line 3168
>     synchronize_rcu();
> #line 3169
>     kref_put(& mdev->kref, & drbd_minor_destroy);
> #line 3170
>     return (NO_ERROR);
>   } else {
> #line 3172
>     return (ERR_MINOR_CONFIGURED);
63268,63292d59222
<   ldv_54858: 
< #line 2560
<   cn_reply->id.idx = 8U;
< #line 2561
<   cn_reply->id.val = 1U;
< #line 2563
<   tmp___0 = atomic_add_return(1, & drbd_nl_seq);
< #line 2563
<   cn_reply->seq = (__u32 )tmp___0;
< #line 2564
<   cn_reply->ack = 0U;
< #line 2565
<   cn_reply->len = (unsigned int )((int )((__u16 )((long )tl)) - (int )((__u16 )((long )(& reply->tag_list)))) + 12U;
< #line 2567
<   cn_reply->flags = 0U;
< #line 2569
<   reply->packet_type = 17;
< #line 2570
<   reply->minor = mdev_to_minor(mdev);
< #line 2571
<   reply->ret_code = 101;
< #line 2573
<   cn_netlink_send(cn_reply, 8U, 16U);
< #line 2574
<   return;
63295,63296c59225,59226
< #line 2576 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void drbd_bcast_ev_helper(struct drbd_conf *mdev , char *helper_name ) 
---
> #line 3175 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_delete_minor(struct sk_buff *skb , struct genl_info *info ) 
63298,63304c59228,59229
<   char buffer[74U] ;
<   struct cn_msg *cn_reply ;
<   struct drbd_nl_cfg_reply *reply ;
<   unsigned short *tl ;
<   void *__gu_p ;
<   unsigned short *tmp ;
<   int tmp___0 ;
---
>   enum drbd_ret_code retcode ;
>   int tmp ;
63307,63347c59232,59241
< #line 2582
<   cn_reply = (struct cn_msg *)(& buffer);
< #line 2583
<   reply = (struct drbd_nl_cfg_reply *)(& cn_reply->data);
< #line 2585
<   tl = (unsigned short *)(& reply->tag_list);
< #line 2589
<   tl = tl_add_str(tl, T_helper, (char const   *)helper_name);
< #line 2590
<   tmp = tl;
< #line 2590
<   tl = tl + 1;
< #line 2590
<   __gu_p = (void *)tmp;
< #line 2590
<   switch (2UL) {
<   case 1UL: 
< #line 2590
<   *((u8 *)__gu_p) = 0U;
< #line 2590
<   goto ldv_54873;
<   case 2UL: 
< #line 2590
<   put_unaligned_le16(0, __gu_p);
< #line 2590
<   goto ldv_54873;
<   case 4UL: 
< #line 2590
<   put_unaligned_le32(0U, __gu_p);
< #line 2590
<   goto ldv_54873;
<   case 8UL: 
< #line 2590
<   put_unaligned_le64(0ULL, __gu_p);
< #line 2590
<   goto ldv_54873;
<   default: 
< #line 2590
<   __bad_unaligned_access_size();
< #line 2590
<   goto ldv_54873;
---
> #line 3179
>   tmp = drbd_adm_prepare(skb, info, 1U);
> #line 3179
>   retcode = (enum drbd_ret_code )tmp;
> #line 3180
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 3181
>     return ((int )retcode);
>   } else {
> 
63349,63373c59243,59256
<   ldv_54873: 
< #line 2592
<   cn_reply->id.idx = 8U;
< #line 2593
<   cn_reply->id.val = 1U;
< #line 2595
<   tmp___0 = atomic_add_return(1, & drbd_nl_seq);
< #line 2595
<   cn_reply->seq = (__u32 )tmp___0;
< #line 2596
<   cn_reply->ack = 0U;
< #line 2597
<   cn_reply->len = (unsigned int )((int )((__u16 )((long )tl)) - (int )((__u16 )((long )(& reply->tag_list)))) + 12U;
< #line 2599
<   cn_reply->flags = 0U;
< #line 2601
<   reply->packet_type = 20;
< #line 2602
<   reply->minor = mdev_to_minor(mdev);
< #line 2603
<   reply->ret_code = 101;
< #line 2605
<   cn_netlink_send(cn_reply, 8U, 16U);
< #line 2606
<   return;
---
> #line 3182
>   if ((unsigned int )retcode != 101U) {
> #line 3183
>     goto out;
>   } else {
> 
>   }
> #line 3185
>   retcode = adm_delete_minor(adm_ctx.mdev);
>   out: 
> #line 3187
>   drbd_adm_finish(info, (int )retcode);
> #line 3188
>   return (0);
63376,63384c59259,59264
< #line 2608 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void drbd_bcast_ee(struct drbd_conf *mdev , char const   *reason , int const   dgs ,
<                    char const   *seen_hash , char const   *calc_hash , struct drbd_epoch_entry  const  *e ) 
< { 
<   struct cn_msg *cn_reply ;
<   struct drbd_nl_cfg_reply *reply ;
<   unsigned short *tl ;
<   struct page *page ;
<   unsigned int len ;
---
> #line 3191 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_down(struct sk_buff *skb , struct genl_info *info ) 
> { 
>   int retcode ;
>   struct drbd_conf *mdev ;
>   unsigned int i ;
63386,63402c59266,59274
<   unsigned int __min1 ;
<   unsigned int __min2 ;
<   void *__gu_p ;
<   unsigned short *tmp___0 ;
<   void *__gu_p___0 ;
<   unsigned short *tmp___1 ;
<   void *d ;
<   void *tmp___2 ;
<   unsigned int l ;
<   unsigned int __min1___0 ;
<   unsigned int __min2___0 ;
<   size_t __len ;
<   void *__ret ;
<   struct page *tmp___3 ;
<   void *__gu_p___1 ;
<   unsigned short *tmp___4 ;
<   int tmp___5 ;
---
>   enum drbd_state_rv tmp___0 ;
>   void *tmp___1 ;
>   enum drbd_state_rv tmp___2 ;
>   void *tmp___3 ;
>   void *tmp___4 ;
>   void *tmp___5 ;
>   enum drbd_ret_code tmp___6 ;
>   void *tmp___7 ;
>   int tmp___8 ;
63405,63408c59277,59282
< #line 2619
<   if ((unsigned long )e == (unsigned long )((struct drbd_epoch_entry  const  *)0)) {
< #line 2620
<     return;
---
> #line 3197
>   retcode = drbd_adm_prepare(skb, info, 0U);
> #line 3198
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 3199
>     return (retcode);
63412,63415c59286,59289
< #line 2621
<   if ((unsigned long )reason == (unsigned long )((char const   *)0) || (int )((signed char )*reason) == 0) {
< #line 2622
<     return;
---
> #line 3200
>   if (retcode != 101) {
> #line 3201
>     goto out;
63419,63429c59293,59298
< #line 2630
<   tmp = kzalloc(33026UL, 16U);
< #line 2630
<   cn_reply = (struct cn_msg *)tmp;
< #line 2637
<   if ((unsigned long )cn_reply == (unsigned long )((struct cn_msg *)0)) {
< #line 2638
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "could not kmalloc buffer for drbd_bcast_ee, sector %llu, size %u\n",
<             (unsigned long long )e->sector, e->size);
< #line 2640
<     return;
---
> #line 3203
>   if ((unsigned long )adm_ctx.tconn == (unsigned long )((struct drbd_tconn *)0)) {
> #line 3204
>     retcode = 158;
> #line 3205
>     goto out;
63433,63485c59302,59322
< #line 2643
<   reply = (struct drbd_nl_cfg_reply *)(& cn_reply->data);
< #line 2644
<   tl = (unsigned short *)(& reply->tag_list);
< #line 2646
<   tl = tl_add_str(tl, T_dump_ee_reason, reason);
< #line 2647
<   tl = tl_add_blob(tl, T_seen_digest, (void const   *)seen_hash, dgs);
< #line 2648
<   tl = tl_add_blob(tl, T_calc_digest, (void const   *)calc_hash, dgs);
< #line 2649
<   tl = tl_add_int(tl, T_ee_sector, (void const   *)(& e->sector));
< #line 2650
<   tl = tl_add_int(tl, T_ee_block_id, (void const   *)(& e->ldv_49189.block_id));
< #line 2653
<   __min1 = e->size;
< #line 2653
<   __min2 = 32768U;
< #line 2653
<   len = __min1 < __min2 ? __min1 : __min2;
< #line 2654
<   tmp___0 = tl;
< #line 2654
<   tl = tl + 1;
< #line 2654
<   __gu_p = (void *)tmp___0;
< #line 2654
<   switch (2UL) {
<   case 1UL: 
< #line 2654
<   *((u8 *)__gu_p) = 50U;
< #line 2654
<   goto ldv_54896;
<   case 2UL: 
< #line 2654
<   put_unaligned_le16(49202, __gu_p);
< #line 2654
<   goto ldv_54896;
<   case 4UL: 
< #line 2654
<   put_unaligned_le32(49202U, __gu_p);
< #line 2654
<   goto ldv_54896;
<   case 8UL: 
< #line 2654
<   put_unaligned_le64(49202ULL, __gu_p);
< #line 2654
<   goto ldv_54896;
<   default: 
< #line 2654
<   __bad_unaligned_access_size();
< #line 2654
<   goto ldv_54896;
---
> #line 3209
>   i = 0U;
> #line 3209
>   tmp = idr_get_next(& (adm_ctx.tconn)->volumes, (int *)(& i));
> #line 3209
>   mdev = (struct drbd_conf *)tmp;
> #line 3209
>   goto ldv_53690;
>   ldv_53689: 
> #line 3210
>   tmp___0 = drbd_set_role(mdev, R_SECONDARY, 0);
> #line 3210
>   retcode = (int )tmp___0;
> #line 3211
>   if (retcode <= 0) {
> #line 3212
>     drbd_msg_put_info("failed to demote");
> #line 3213
>     goto out;
>   } else {
> 
63487,63520c59324,59336
<   ldv_54896: 
< #line 2655
<   tmp___1 = tl;
< #line 2655
<   tl = tl + 1;
< #line 2655
<   __gu_p___0 = (void *)tmp___1;
< #line 2655
<   switch (2UL) {
<   case 1UL: 
< #line 2655
<   *((u8 *)__gu_p___0) = (unsigned char )len;
< #line 2655
<   goto ldv_54903;
<   case 2UL: 
< #line 2655
<   put_unaligned_le16((int )((unsigned short )len), __gu_p___0);
< #line 2655
<   goto ldv_54903;
<   case 4UL: 
< #line 2655
<   put_unaligned_le32(len, __gu_p___0);
< #line 2655
<   goto ldv_54903;
<   case 8UL: 
< #line 2655
<   put_unaligned_le64((unsigned long long )len, __gu_p___0);
< #line 2655
<   goto ldv_54903;
<   default: 
< #line 2655
<   __bad_unaligned_access_size();
< #line 2655
<   goto ldv_54903;
---
> #line 3209
>   i = i + 1U;
> #line 3209
>   tmp___1 = idr_get_next(& (adm_ctx.tconn)->volumes, (int *)(& i));
> #line 3209
>   mdev = (struct drbd_conf *)tmp___1;
>   ldv_53690: ;
> #line 3209
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 3210
>     goto ldv_53689;
>   } else {
> 
63522,63551c59338,59347
<   ldv_54903: 
< #line 2657
<   page = e->pages;
< #line 2658
<   goto ldv_54919;
<   ldv_54918: 
< #line 2659
<   tmp___2 = kmap_atomic___0(page);
< #line 2659
<   d = tmp___2;
< #line 2660
<   __min1___0 = len;
< #line 2660
<   __min2___0 = 4096U;
< #line 2660
<   l = __min1___0 < __min2___0 ? __min1___0 : __min2___0;
< #line 2661
<   __len = (size_t )l;
< #line 2661
<   __ret = __builtin_memcpy((void *)tl, (void const   *)d, __len);
< #line 2662
<   __kunmap_atomic___0(d);
< #line 2663
<   tl = tl + (unsigned long )l;
< #line 2664
<   len = len - l;
< #line 2665
<   if (len == 0U) {
< #line 2666
<     goto ldv_54917;
---
> #line 3217
>   tmp___2 = conn_try_disconnect(adm_ctx.tconn, 0);
> #line 3217
>   retcode = (int )tmp___2;
> #line 3218
>   if (retcode <= 0) {
> #line 3219
>     drbd_msg_put_info("failed to disconnect");
> #line 3220
>     goto out;
63555,63571c59351,59367
< #line 2658
<   page = page_chain_next(page);
<   ldv_54919: ;
< #line 2658
<   if ((unsigned long )page != (unsigned long )((struct page *)0)) {
< #line 2658
<     tmp___3 = page_chain_next(page);
< #line 2658
<     __builtin_prefetch((void const   *)tmp___3);
< #line 2658
<     if (1 != 0) {
< #line 2659
<       goto ldv_54918;
<     } else {
< #line 2661
<       goto ldv_54917;
<     }
---
> #line 3224
>   i = 0U;
> #line 3224
>   tmp___3 = idr_get_next(& (adm_ctx.tconn)->volumes, (int *)(& i));
> #line 3224
>   mdev = (struct drbd_conf *)tmp___3;
> #line 3224
>   goto ldv_53693;
>   ldv_53692: 
> #line 3225
>   retcode = adm_detach(mdev, 0);
> #line 3226
>   if (retcode <= 0 || retcode > 101) {
> #line 3227
>     drbd_msg_put_info("failed to detach");
> #line 3228
>     goto out;
63575,63608c59371,59383
<   ldv_54917: 
< #line 2668
<   tmp___4 = tl;
< #line 2668
<   tl = tl + 1;
< #line 2668
<   __gu_p___1 = (void *)tmp___4;
< #line 2668
<   switch (2UL) {
<   case 1UL: 
< #line 2668
<   *((u8 *)__gu_p___1) = 0U;
< #line 2668
<   goto ldv_54922;
<   case 2UL: 
< #line 2668
<   put_unaligned_le16(0, __gu_p___1);
< #line 2668
<   goto ldv_54922;
<   case 4UL: 
< #line 2668
<   put_unaligned_le32(0U, __gu_p___1);
< #line 2668
<   goto ldv_54922;
<   case 8UL: 
< #line 2668
<   put_unaligned_le64(0ULL, __gu_p___1);
< #line 2668
<   goto ldv_54922;
<   default: 
< #line 2668
<   __bad_unaligned_access_size();
< #line 2668
<   goto ldv_54922;
---
> #line 3224
>   i = i + 1U;
> #line 3224
>   tmp___4 = idr_get_next(& (adm_ctx.tconn)->volumes, (int *)(& i));
> #line 3224
>   mdev = (struct drbd_conf *)tmp___4;
>   ldv_53693: ;
> #line 3224
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 3225
>     goto ldv_53692;
>   } else {
> 
63610,63651c59385,59406
<   ldv_54922: 
< #line 2670
<   cn_reply->id.idx = 8U;
< #line 2671
<   cn_reply->id.val = 1U;
< #line 2673
<   tmp___5 = atomic_add_return(1, & drbd_nl_seq);
< #line 2673
<   cn_reply->seq = (__u32 )tmp___5;
< #line 2674
<   cn_reply->ack = 0U;
< #line 2675
<   cn_reply->len = (unsigned int )((int )((__u16 )((long )tl)) - (int )((__u16 )((long )(& reply->tag_list)))) + 12U;
< #line 2677
<   cn_reply->flags = 0U;
< #line 2679
<   reply->packet_type = 24;
< #line 2680
<   reply->minor = mdev_to_minor(mdev);
< #line 2681
<   reply->ret_code = 101;
< #line 2683
<   cn_netlink_send(cn_reply, 8U, 16U);
< #line 2684
<   kfree((void const   *)cn_reply);
< #line 2685
<   return;
< }
< }
< #line 2687 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void drbd_bcast_sync_progress(struct drbd_conf *mdev ) 
< { 
<   char buffer[42U] ;
<   struct cn_msg *cn_reply ;
<   struct drbd_nl_cfg_reply *reply ;
<   unsigned short *tl ;
<   unsigned long rs_left ;
<   unsigned int res ;
<   int tmp ;
<   void *__gu_p ;
<   unsigned short *tmp___0 ;
<   int tmp___1 ;
---
> #line 3235
>   drbd_thread_stop(& (adm_ctx.tconn)->worker);
> #line 3240
>   i = 0U;
> #line 3240
>   tmp___5 = idr_get_next(& (adm_ctx.tconn)->volumes, (int *)(& i));
> #line 3240
>   mdev = (struct drbd_conf *)tmp___5;
> #line 3240
>   goto ldv_53696;
>   ldv_53695: 
> #line 3241
>   tmp___6 = adm_delete_minor(mdev);
> #line 3241
>   retcode = (int )tmp___6;
> #line 3242
>   if (retcode != 101) {
> #line 3244
>     drbd_msg_put_info("failed to delete volume");
> #line 3245
>     goto out;
>   } else {
63653,63665c59408,59419
<   {
< #line 2693
<   cn_reply = (struct cn_msg *)(& buffer);
< #line 2694
<   reply = (struct drbd_nl_cfg_reply *)(& cn_reply->data);
< #line 2696
<   tl = (unsigned short *)(& reply->tag_list);
< #line 2701
<   tmp = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 2701
<   if (tmp == 0) {
< #line 2702
<     return;
---
>   }
> #line 3240
>   i = i + 1U;
> #line 3240
>   tmp___7 = idr_get_next(& (adm_ctx.tconn)->volumes, (int *)(& i));
> #line 3240
>   mdev = (struct drbd_conf *)tmp___7;
>   ldv_53696: ;
> #line 3240
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 3241
>     goto ldv_53695;
63669,63733c59423,59447
< #line 2703
<   drbd_get_syncer_progress(mdev, & rs_left, & res);
< #line 2704
<   put_ldev(mdev);
< #line 2706
<   tl = tl_add_int(tl, T_sync_progress, (void const   *)(& res));
< #line 2707
<   tmp___0 = tl;
< #line 2707
<   tl = tl + 1;
< #line 2707
<   __gu_p = (void *)tmp___0;
< #line 2707
<   switch (2UL) {
<   case 1UL: 
< #line 2707
<   *((u8 *)__gu_p) = 0U;
< #line 2707
<   goto ldv_54938;
<   case 2UL: 
< #line 2707
<   put_unaligned_le16(0, __gu_p);
< #line 2707
<   goto ldv_54938;
<   case 4UL: 
< #line 2707
<   put_unaligned_le32(0U, __gu_p);
< #line 2707
<   goto ldv_54938;
<   case 8UL: 
< #line 2707
<   put_unaligned_le64(0ULL, __gu_p);
< #line 2707
<   goto ldv_54938;
<   default: 
< #line 2707
<   __bad_unaligned_access_size();
< #line 2707
<   goto ldv_54938;
<   }
<   ldv_54938: 
< #line 2709
<   cn_reply->id.idx = 8U;
< #line 2710
<   cn_reply->id.val = 1U;
< #line 2712
<   tmp___1 = atomic_add_return(1, & drbd_nl_seq);
< #line 2712
<   cn_reply->seq = (__u32 )tmp___1;
< #line 2713
<   cn_reply->ack = 0U;
< #line 2714
<   cn_reply->len = (unsigned int )((int )((__u16 )((long )tl)) - (int )((__u16 )((long )(& reply->tag_list)))) + 12U;
< #line 2716
<   cn_reply->flags = 0U;
< #line 2718
<   reply->packet_type = 23;
< #line 2719
<   reply->minor = mdev_to_minor(mdev);
< #line 2720
<   reply->ret_code = 101;
< #line 2722
<   cn_netlink_send(cn_reply, 8U, 16U);
< #line 2723
<   return;
---
> #line 3250
>   tmp___8 = conn_lowest_minor(adm_ctx.tconn);
> #line 3250
>   if (tmp___8 < 0) {
> #line 3251
>     list_del_rcu(& (adm_ctx.tconn)->all_tconn);
> #line 3252
>     synchronize_rcu();
> #line 3253
>     kref_put(& (adm_ctx.tconn)->kref, & conn_destroy);
> #line 3255
>     retcode = 101;
>   } else {
> #line 3258
>     retcode = 159;
> #line 3259
>     drbd_msg_put_info("failed to delete connection");
>   }
> #line 3261
>   goto out;
>   out: 
> #line 3263
>   drbd_adm_finish(info, retcode);
> #line 3264
>   return (0);
63736,63737c59450,59451
< #line 2725 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< int drbd_nl_init(void) 
---
> #line 3267 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_del_resource(struct sk_buff *skb , struct genl_info *info ) 
63739,63741c59453
<   struct cb_id cn_id_drbd ;
<   int err ;
<   int try ;
---
>   enum drbd_ret_code retcode ;
63742a59455
>   int tmp___0 ;
63745,63757c59458,59465
< #line 2728
<   try = 10;
< #line 2730
<   cn_id_drbd.val = 1U;
<   ldv_54950: 
< #line 2732
<   cn_id_drbd.idx = cn_idx;
< #line 2733
<   err = cn_add_callback(& cn_id_drbd, "cn_drbd", & drbd_connector_callback);
< #line 2734
<   if (err == 0) {
< #line 2735
<     goto ldv_54949;
---
> #line 3271
>   tmp = drbd_adm_prepare(skb, info, 2U);
> #line 3271
>   retcode = (enum drbd_ret_code )tmp;
> #line 3272
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 3273
>     return ((int )retcode);
63761,63770c59469,59472
< #line 2736
<   cn_idx = cn_idx + 6977U;
< #line 2737
<   tmp = try;
< #line 2737
<   try = try - 1;
< #line 2737
<   if (tmp != 0) {
< #line 2738
<     goto ldv_54950;
---
> #line 3274
>   if ((unsigned int )retcode != 101U) {
> #line 3275
>     goto out;
63774,63780c59476,59495
<   ldv_54949: ;
< #line 2739
<   if (err != 0) {
< #line 2740
<     printk("\vdrbd: cn_drbd failed to register\n");
< #line 2741
<     return (err);
---
> #line 3277
>   tmp___0 = conn_lowest_minor(adm_ctx.tconn);
> #line 3277
>   if (tmp___0 < 0) {
> #line 3278
>     list_del_rcu(& (adm_ctx.tconn)->all_tconn);
> #line 3279
>     synchronize_rcu();
> #line 3280
>     kref_put(& (adm_ctx.tconn)->kref, & conn_destroy);
> #line 3282
>     retcode = NO_ERROR;
>   } else {
> #line 3284
>     retcode = ERR_RES_IN_USE;
>   }
> #line 3287
>   if ((unsigned int )retcode == 101U) {
> #line 3288
>     drbd_thread_stop(& (adm_ctx.tconn)->worker);
63784c59499,59502
< #line 2744
---
>   out: 
> #line 3290
>   drbd_adm_finish(info, (int )retcode);
> #line 3291
63788,63805c59506,59507
< #line 2747 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void drbd_nl_cleanup(void) 
< { 
<   struct cb_id cn_id_drbd ;
< 
<   {
< #line 2751
<   cn_id_drbd.idx = cn_idx;
< #line 2752
<   cn_id_drbd.val = 1U;
< #line 2754
<   cn_del_callback(& cn_id_drbd);
< #line 2755
<   return;
< }
< }
< #line 2757 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void drbd_nl_send_reply(struct cn_msg *req , int ret_code ) 
---
> #line 3294 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nl.c.prepared"
> void drbd_bcast_event(struct drbd_conf *mdev , struct sib_info  const  *sib ) 
63807,63810c59509,59516
<   char buffer[32U] ;
<   struct cn_msg *cn_reply ;
<   struct drbd_nl_cfg_reply *reply ;
<   int rr ;
---
>   atomic_t drbd_genl_seq ;
>   struct sk_buff *msg ;
>   struct drbd_genlmsghdr *d_out ;
>   unsigned int seq ;
>   int err ;
>   int tmp ;
>   void *tmp___0 ;
>   int tmp___1 ;
63813,63840c59519,59526
< #line 2760
<   cn_reply = (struct cn_msg *)(& buffer);
< #line 2761
<   reply = (struct drbd_nl_cfg_reply *)(& cn_reply->data);
< #line 2765
<   memset((void *)(& buffer), 0, 32UL);
< #line 2766
<   cn_reply->id = req->id;
< #line 2768
<   cn_reply->seq = req->seq;
< #line 2769
<   cn_reply->ack = req->ack + 1U;
< #line 2770
<   cn_reply->len = 12U;
< #line 2771
<   cn_reply->flags = 0U;
< #line 2773
<   reply->packet_type = 27;
< #line 2774
<   reply->minor = ((struct drbd_nl_cfg_req *)(& req->data))->drbd_minor;
< #line 2775
<   reply->ret_code = ret_code;
< #line 2777
<   rr = cn_netlink_send(cn_reply, 8U, 16U);
< #line 2778
<   if (rr != 0 && rr != -3) {
< #line 2779
<     printk("\016drbd: cn_netlink_send()=%d\n", rr);
---
> #line 3296
>   drbd_genl_seq.counter = 2;
> #line 3300
>   err = -12;
> #line 3303
>   if ((unsigned int )sib->sib_reason == 5U && ((1 != 0 && 1 != 0) && (long )(mdev->rs_last_bcast + 250UL) - (long )jiffies < 0L)) {
> #line 3304
>     mdev->rs_last_bcast = jiffies;
63842c59528,59529
< 
---
> #line 3306
>     return;
63844,63852c59531,59541
< #line 2780
<   return;
< }
< }
< #line 2820 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void ldv_main8_sequence_infinite_withcheck_stateful(void) 
< { 
<   int tmp ;
<   int tmp___0 ;
---
> #line 3308
>   tmp = atomic_add_return(1, & drbd_genl_seq);
> #line 3308
>   seq = (unsigned int )tmp;
> #line 3309
>   msg = genlmsg_new(3776UL, 16U);
> #line 3310
>   if ((unsigned long )msg == (unsigned long )((struct sk_buff *)0)) {
> #line 3311
>     goto failed;
>   } else {
63854,63868d59542
<   {
< #line 2832
<   LDV_IN_INTERRUPT = 1;
< #line 2841
<   ldv_initialize();
< #line 2843
<   goto ldv_54982;
<   ldv_54981: 
< #line 2846
<   tmp = nondet_int();
< #line 2846
<   switch (tmp) {
<   default: ;
< #line 2848
<   goto ldv_54980;
63870,63877c59544,59553
<   ldv_54980: ;
<   ldv_54982: 
< #line 2843
<   tmp___0 = nondet_int();
< #line 2843
<   if (tmp___0 != 0) {
< #line 2844
<     goto ldv_54981;
---
> #line 3313
>   err = -90;
> #line 3314
>   tmp___0 = genlmsg_put(msg, 0U, seq, & drbd_genl_family, 0, 1);
> #line 3314
>   d_out = (struct drbd_genlmsghdr *)tmp___0;
> #line 3315
>   if ((unsigned long )d_out == (unsigned long )((struct drbd_genlmsghdr *)0)) {
> #line 3316
>     goto nla_put_failure;
63880a59557,59567
> #line 3317
>   d_out->minor = mdev_to_minor(mdev);
> #line 3318
>   d_out->ldv_49550.ret_code = 101;
> #line 3320
>   tmp___1 = nla_put_status_info(msg, mdev, sib);
> #line 3320
>   if (tmp___1 != 0) {
> #line 3321
>     goto nla_put_failure;
>   } else {
63881a59569,59578
>   }
> #line 3322
>   genlmsg_end(msg, (void *)d_out);
> #line 3323
>   err = drbd_genl_multicast_events(msg, 0U);
> #line 3325
>   if (err != 0 && err != -3) {
> #line 3326
>     goto failed;
>   } else {
63883,63885c59580,59590
< #line 2857
<   ldv_check_final_state();
< #line 2860
---
>   }
> #line 3328
>   return;
>   nla_put_failure: 
> #line 3331
>   nlmsg_free(msg);
>   failed: 
> #line 3333
>   dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Error %d while broadcasting event. Event seq:%u sib_reason:%u\n",
>           err, seq, (unsigned int )sib->sib_reason);
> #line 3336
63889,63890c59594,59598
< #line 2864 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void ldv_mutex_lock_287(struct mutex *ldv_func_arg1 ) 
---
> #line 66 "include/linux/rbtree.h"
> extern struct rb_node *rb_next(struct rb_node  const  * ) ;
> #line 75 "include/linux/rbtree.h"
> __inline static void rb_link_node(struct rb_node *node , struct rb_node *parent ,
>                                   struct rb_node **rb_link ) 
63892c59600
< 
---
>   struct rb_node *tmp ;
63895,63899c59603,59613
< #line 2869
<   ldv_mutex_lock_lock(ldv_func_arg1);
< #line 2871
<   mutex_lock(ldv_func_arg1);
< #line 2872
---
> #line 78
>   node->__rb_parent_color = (unsigned long )parent;
> #line 79
>   tmp = 0;
> #line 79
>   node->rb_right = tmp;
> #line 79
>   node->rb_left = tmp;
> #line 81
>   *rb_link = node;
> #line 82
63903,63904c59617,59622
< #line 2874 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void ldv_mutex_unlock_288(struct mutex *ldv_func_arg1 ) 
---
> #line 44 "include/linux/rbtree_augmented.h"
> extern void __rb_insert_augmented(struct rb_node * , struct rb_root * , void (*)(struct rb_node * ,
>                                                                                  struct rb_node * ) ) ;
> #line 47 "include/linux/rbtree_augmented.h"
> __inline static void rb_insert_augmented(struct rb_node *node , struct rb_root *root ,
>                                          struct rb_augment_callbacks  const  *augment ) 
63909,63913c59627,59629
< #line 2879
<   ldv_mutex_unlock_lock(ldv_func_arg1);
< #line 2881
<   mutex_unlock(ldv_func_arg1);
< #line 2882
---
> #line 50
>   __rb_insert_augmented(node, root, augment->rotate);
> #line 51
63917,63918c59633,59634
< #line 2884 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void ldv_mutex_lock_289(struct mutex *ldv_func_arg1 ) 
---
> #line 99 "include/linux/rbtree_augmented.h"
> __inline static void rb_set_parent(struct rb_node *rb , struct rb_node *p ) 
63923,63927c59639,59641
< #line 2889
<   ldv_mutex_lock_mutex_of_device(ldv_func_arg1);
< #line 2891
<   mutex_lock(ldv_func_arg1);
< #line 2892
---
> #line 101
>   rb->__rb_parent_color = (rb->__rb_parent_color & 1UL) | (unsigned long )p;
> #line 102
63931,63932c59645,59647
< #line 2894 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< int ldv_mutex_trylock_290(struct mutex *ldv_func_arg1 ) 
---
> #line 104 "include/linux/rbtree_augmented.h"
> __inline static void rb_set_parent_color(struct rb_node *rb , struct rb_node *p ,
>                                          int color ) 
63934,63936c59649
<   ldv_func_ret_type___2 ldv_func_res ;
<   int tmp ;
<   int tmp___0 ;
---
> 
63939,63948c59652,59655
< #line 2899
<   tmp = mutex_trylock(ldv_func_arg1);
< #line 2899
<   ldv_func_res = tmp;
< #line 2901
<   tmp___0 = ldv_mutex_trylock_mutex_of_device(ldv_func_arg1);
< #line 2901
<   return (tmp___0);
< #line 2903
<   return (ldv_func_res);
---
> #line 107
>   rb->__rb_parent_color = (unsigned long )color | (unsigned long )p;
> #line 108
>   return;
63951,63952c59658,59660
< #line 2906 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void ldv_mutex_unlock_291(struct mutex *ldv_func_arg1 ) 
---
> #line 111 "include/linux/rbtree_augmented.h"
> __inline static void __rb_change_child(struct rb_node *old , struct rb_node *new ,
>                                        struct rb_node *parent , struct rb_root *root ) 
63957,63961c59665,59679
< #line 2911
<   ldv_mutex_unlock_mutex_of_device(ldv_func_arg1);
< #line 2913
<   mutex_unlock(ldv_func_arg1);
< #line 2914
---
> #line 114
>   if ((unsigned long )parent != (unsigned long )((struct rb_node *)0)) {
> #line 115
>     if ((unsigned long )parent->rb_left == (unsigned long )old) {
> #line 116
>       parent->rb_left = new;
>     } else {
> #line 118
>       parent->rb_right = new;
>     }
>   } else {
> #line 120
>     root->rb_node = new;
>   }
> #line 121
63965,63968c59683,59697
< #line 2916 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void ldv_mutex_lock_292(struct mutex *ldv_func_arg1 ) 
< { 
< 
---
> #line 123
> extern void __rb_erase_color(struct rb_node * , struct rb_root * , void (*)(struct rb_node * ,
>                                                                             struct rb_node * ) ) ;
> #line 127 "include/linux/rbtree_augmented.h"
> __inline static void rb_erase_augmented(struct rb_node *node , struct rb_root *root ,
>                                         struct rb_augment_callbacks  const  *augment ) 
> { 
>   struct rb_node *child ;
>   struct rb_node *tmp ;
>   struct rb_node *parent ;
>   struct rb_node *rebalance ;
>   unsigned long pc ;
>   struct rb_node *successor ;
>   struct rb_node *child2 ;
>   unsigned long pc2 ;
63971,63975c59700,59820
< #line 2921
<   ldv_mutex_lock_mtx_of_percpu_rw_semaphore(ldv_func_arg1);
< #line 2923
<   mutex_lock(ldv_func_arg1);
< #line 2924
---
> #line 130
>   child = node->rb_right;
> #line 130
>   tmp = node->rb_left;
> #line 134
>   if ((unsigned long )tmp == (unsigned long )((struct rb_node *)0)) {
> #line 142
>     pc = node->__rb_parent_color;
> #line 143
>     parent = (struct rb_node *)(pc & 0xfffffffffffffffcUL);
> #line 144
>     __rb_change_child(node, child, parent, root);
> #line 145
>     if ((unsigned long )child != (unsigned long )((struct rb_node *)0)) {
> #line 146
>       child->__rb_parent_color = pc;
> #line 147
>       rebalance = 0;
>     } else {
> #line 149
>       rebalance = (int )pc & 1 ? parent : 0;
>     }
> #line 150
>     tmp = parent;
>   } else
> #line 151
>   if ((unsigned long )child == (unsigned long )((struct rb_node *)0)) {
> #line 153
>     pc = node->__rb_parent_color;
> #line 153
>     tmp->__rb_parent_color = pc;
> #line 154
>     parent = (struct rb_node *)(pc & 0xfffffffffffffffcUL);
> #line 155
>     __rb_change_child(node, tmp, parent, root);
> #line 156
>     rebalance = 0;
> #line 157
>     tmp = parent;
>   } else {
> #line 159
>     successor = child;
> #line 160
>     tmp = child->rb_left;
> #line 161
>     if ((unsigned long )tmp == (unsigned long )((struct rb_node *)0)) {
> #line 171
>       parent = successor;
> #line 172
>       child2 = successor->rb_right;
> #line 173
>       (*(augment->copy))(node, successor);
>     } else {
>       ldv_14079: 
> #line 190
>       parent = successor;
> #line 191
>       successor = tmp;
> #line 192
>       tmp = tmp->rb_left;
> #line 193
>       if ((unsigned long )tmp != (unsigned long )((struct rb_node *)0)) {
> #line 194
>         goto ldv_14079;
>       } else {
> 
>       }
> #line 194
>       child2 = successor->rb_right;
> #line 194
>       parent->rb_left = child2;
> #line 195
>       successor->rb_right = child;
> #line 196
>       rb_set_parent(child, successor);
> #line 197
>       (*(augment->copy))(node, successor);
> #line 198
>       (*(augment->propagate))(parent, successor);
>     }
> #line 201
>     tmp = node->rb_left;
> #line 201
>     successor->rb_left = tmp;
> #line 202
>     rb_set_parent(tmp, successor);
> #line 204
>     pc = node->__rb_parent_color;
> #line 205
>     tmp = (struct rb_node *)(pc & 0xfffffffffffffffcUL);
> #line 206
>     __rb_change_child(node, successor, tmp, root);
> #line 207
>     if ((unsigned long )child2 != (unsigned long )((struct rb_node *)0)) {
> #line 208
>       successor->__rb_parent_color = pc;
> #line 209
>       rb_set_parent_color(child2, parent, 1);
> #line 210
>       rebalance = 0;
>     } else {
> #line 212
>       pc2 = successor->__rb_parent_color;
> #line 213
>       successor->__rb_parent_color = pc;
> #line 214
>       rebalance = (int )pc2 & 1 ? parent : 0;
>     }
> #line 216
>     tmp = successor;
>   }
> #line 219
>   (*(augment->propagate))(tmp, 0);
> #line 220
>   if ((unsigned long )rebalance != (unsigned long )((struct rb_node *)0)) {
> #line 221
>     __rb_erase_color(rebalance, root, augment->rotate);
>   } else {
> 
>   }
> #line 222
63979,63980c59824,59825
< #line 2926 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void ldv_mutex_unlock_293(struct mutex *ldv_func_arg1 ) 
---
> #line 16 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_interval.c.prepared"
> __inline static sector_t interval_end(struct rb_node *node ) 
63982c59827,59828
< 
---
>   struct drbd_interval *this ;
>   struct rb_node  const  *__mptr ;
63985,63990c59831,59836
< #line 2931
<   ldv_mutex_unlock_mtx_of_percpu_rw_semaphore(ldv_func_arg1);
< #line 2933
<   mutex_unlock(ldv_func_arg1);
< #line 2934
<   return;
---
> #line 18
>   __mptr = (struct rb_node  const  *)node;
> #line 18
>   this = (struct drbd_interval *)__mptr;
> #line 19
>   return (this->end);
63993,63994c59839,59840
< #line 2936 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void ldv_mutex_lock_294(struct mutex *ldv_func_arg1 ) 
---
> #line 30 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_interval.c.prepared"
> __inline static sector_t compute_subtree_last(struct drbd_interval *node ) 
63996c59842,59846
< 
---
>   sector_t max ;
>   sector_t left ;
>   sector_t tmp ;
>   sector_t right ;
>   sector_t tmp___0 ;
63999,64004c59849,59884
< #line 2941
<   ldv_mutex_lock_mtx_of_percpu_rw_semaphore(ldv_func_arg1);
< #line 2943
<   mutex_lock(ldv_func_arg1);
< #line 2944
<   return;
---
> #line 32
>   max = node->sector + (sector_t )(node->size >> 9);
> #line 34
>   if ((unsigned long )node->rb.rb_left != (unsigned long )((struct rb_node *)0)) {
> #line 35
>     tmp = interval_end(node->rb.rb_left);
> #line 35
>     left = tmp;
> #line 36
>     if (left > max) {
> #line 37
>       max = left;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 39
>   if ((unsigned long )node->rb.rb_right != (unsigned long )((struct rb_node *)0)) {
> #line 40
>     tmp___0 = interval_end(node->rb.rb_right);
> #line 40
>     right = tmp___0;
> #line 41
>     if (right > max) {
> #line 42
>       max = right;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 44
>   return (max);
64007,64008c59887,59888
< #line 2946 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void ldv_mutex_unlock_295(struct mutex *ldv_func_arg1 ) 
---
> #line 47 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_interval.c.prepared"
> static void augment_propagate(struct rb_node *rb , struct rb_node *stop ) 
64010c59890,59893
< 
---
>   struct drbd_interval *node ;
>   struct rb_node  const  *__mptr ;
>   sector_t subtree_last ;
>   sector_t tmp ;
64013,64017c59896,59927
< #line 2951
<   ldv_mutex_unlock_mtx_of_percpu_rw_semaphore(ldv_func_arg1);
< #line 2953
<   mutex_unlock(ldv_func_arg1);
< #line 2954
---
> #line 49
>   goto ldv_14135;
>   ldv_14134: 
> #line 50
>   __mptr = (struct rb_node  const  *)rb;
> #line 50
>   node = (struct drbd_interval *)__mptr;
> #line 51
>   tmp = compute_subtree_last(node);
> #line 51
>   subtree_last = tmp;
> #line 52
>   if (node->end == subtree_last) {
> #line 53
>     goto ldv_14133;
>   } else {
> 
>   }
> #line 54
>   node->end = subtree_last;
> #line 55
>   rb = (struct rb_node *)(node->rb.__rb_parent_color & 0xfffffffffffffffcUL);
>   ldv_14135: ;
> #line 49
>   if ((unsigned long )rb != (unsigned long )stop) {
> #line 50
>     goto ldv_14134;
>   } else {
> 
>   }
>   ldv_14133: ;
> #line 54
64021,64022c59931,59932
< #line 2956 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void ldv_mutex_lock_296(struct mutex *ldv_func_arg1 ) 
---
> #line 59 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_interval.c.prepared"
> static void augment_copy(struct rb_node *rb_old , struct rb_node *rb_new ) 
64024c59934,59937
< 
---
>   struct drbd_interval *old ;
>   struct rb_node  const  *__mptr ;
>   struct drbd_interval *new ;
>   struct rb_node  const  *__mptr___0 ;
64027,64031c59940,59950
< #line 2961
<   ldv_mutex_lock_cred_guard_mutex_of_signal_struct(ldv_func_arg1);
< #line 2963
<   mutex_lock(ldv_func_arg1);
< #line 2964
---
> #line 61
>   __mptr = (struct rb_node  const  *)rb_old;
> #line 61
>   old = (struct drbd_interval *)__mptr;
> #line 62
>   __mptr___0 = (struct rb_node  const  *)rb_new;
> #line 62
>   new = (struct drbd_interval *)__mptr___0;
> #line 64
>   new->end = old->end;
> #line 65
64035,64036c59954,59955
< #line 2966 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void ldv_mutex_unlock_297(struct mutex *ldv_func_arg1 ) 
---
> #line 67 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_interval.c.prepared"
> static void augment_rotate(struct rb_node *rb_old , struct rb_node *rb_new ) 
64038c59957,59960
< 
---
>   struct drbd_interval *old ;
>   struct rb_node  const  *__mptr ;
>   struct drbd_interval *new ;
>   struct rb_node  const  *__mptr___0 ;
64041,64045c59963,59975
< #line 2971
<   ldv_mutex_unlock_cred_guard_mutex_of_signal_struct(ldv_func_arg1);
< #line 2973
<   mutex_unlock(ldv_func_arg1);
< #line 2974
---
> #line 69
>   __mptr = (struct rb_node  const  *)rb_old;
> #line 69
>   old = (struct drbd_interval *)__mptr;
> #line 70
>   __mptr___0 = (struct rb_node  const  *)rb_new;
> #line 70
>   new = (struct drbd_interval *)__mptr___0;
> #line 72
>   new->end = old->end;
> #line 73
>   old->end = compute_subtree_last(old);
> #line 74
64049,64050c59979,59982
< #line 2976 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void ldv_mutex_lock_298(struct mutex *ldv_func_arg1 ) 
---
> #line 76 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_interval.c.prepared"
> static struct rb_augment_callbacks  const  augment_callbacks  =    {& augment_propagate, & augment_copy, & augment_rotate};
> #line 86 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_interval.c.prepared"
> bool drbd_insert_interval(struct rb_root *root , struct drbd_interval *this ) 
64052c59984,59988
< 
---
>   struct rb_node **new ;
>   struct rb_node *parent ;
>   long tmp ;
>   struct drbd_interval *here ;
>   struct rb_node  const  *__mptr ;
64055,64060c59991,60053
< #line 2981
<   ldv_mutex_lock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 2983
<   mutex_lock(ldv_func_arg1);
< #line 2984
<   return;
---
> #line 88
>   new = & root->rb_node;
> #line 88
>   parent = 0;
> #line 90
>   tmp = __builtin_expect((this->size & 511U) != 0U, 0L);
> #line 90
>   if (tmp != 0L) {
> #line 90
>     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_interval.c.prepared"),
>                          "i" (90), "i" (12UL));
>     ldv_14163: ;
> #line 90
>     goto ldv_14163;
>   } else {
> 
>   }
> #line 92
>   goto ldv_14168;
>   ldv_14167: 
> #line 94
>   __mptr = (struct rb_node  const  *)*new;
> #line 94
>   here = (struct drbd_interval *)__mptr;
> #line 96
>   parent = *new;
> #line 97
>   if (this->sector < here->sector) {
> #line 98
>     new = & (*new)->rb_left;
>   } else
> #line 99
>   if (this->sector > here->sector) {
> #line 100
>     new = & (*new)->rb_right;
>   } else
> #line 101
>   if ((unsigned long )this < (unsigned long )here) {
> #line 102
>     new = & (*new)->rb_left;
>   } else
> #line 103
>   if ((unsigned long )this > (unsigned long )here) {
> #line 104
>     new = & (*new)->rb_right;
>   } else {
> #line 106
>     return (0);
>   }
>   ldv_14168: ;
> #line 92
>   if ((unsigned long )*new != (unsigned long )((struct rb_node *)0)) {
> #line 93
>     goto ldv_14167;
>   } else {
> 
>   }
> #line 109
>   rb_link_node(& this->rb, parent, new);
> #line 110
>   rb_insert_augmented(& this->rb, root, & augment_callbacks);
> #line 111
>   return (1);
64063,64064c60056,60057
< #line 2986 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void ldv_mutex_unlock_299(struct mutex *ldv_func_arg1 ) 
---
> #line 125 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_interval.c.prepared"
> bool drbd_contains_interval(struct rb_root *root , sector_t sector , struct drbd_interval *interval ) 
64066c60059,60061
< 
---
>   struct rb_node *node ;
>   struct drbd_interval *here ;
>   struct rb_node  const  *__mptr ;
64069,64074c60064,60106
< #line 2991
<   ldv_mutex_unlock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 2993
<   mutex_unlock(ldv_func_arg1);
< #line 2994
<   return;
---
> #line 128
>   node = root->rb_node;
> #line 130
>   goto ldv_14180;
>   ldv_14179: 
> #line 132
>   __mptr = (struct rb_node  const  *)node;
> #line 132
>   here = (struct drbd_interval *)__mptr;
> #line 134
>   if (here->sector > sector) {
> #line 135
>     node = node->rb_left;
>   } else
> #line 136
>   if (here->sector < sector) {
> #line 137
>     node = node->rb_right;
>   } else
> #line 138
>   if ((unsigned long )interval < (unsigned long )here) {
> #line 139
>     node = node->rb_left;
>   } else
> #line 140
>   if ((unsigned long )interval > (unsigned long )here) {
> #line 141
>     node = node->rb_right;
>   } else {
> #line 143
>     return (1);
>   }
>   ldv_14180: ;
> #line 130
>   if ((unsigned long )node != (unsigned long )((struct rb_node *)0)) {
> #line 131
>     goto ldv_14179;
>   } else {
> 
>   }
> 
> #line 145
>   return (0);
64077,64078c60109,60110
< #line 2996 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void ldv_mutex_unlock_300(struct mutex *ldv_func_arg1 ) 
---
> #line 152 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_interval.c.prepared"
> void drbd_remove_interval(struct rb_root *root , struct drbd_interval *this ) 
64083,64087c60115,60117
< #line 3001
<   ldv_mutex_unlock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 3003
<   mutex_unlock(ldv_func_arg1);
< #line 3004
---
> #line 154
>   rb_erase_augmented(& this->rb, root, & augment_callbacks);
> #line 155
64091,64092c60121,60122
< #line 3006 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void ldv_mutex_lock_301(struct mutex *ldv_func_arg1 ) 
---
> #line 169 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_interval.c.prepared"
> struct drbd_interval *drbd_find_overlap(struct rb_root *root , sector_t sector , unsigned int size ) 
64094c60124,60130
< 
---
>   struct rb_node *node ;
>   struct drbd_interval *overlap ;
>   sector_t end ;
>   long tmp ;
>   struct drbd_interval *here ;
>   struct rb_node  const  *__mptr ;
>   sector_t tmp___0 ;
64097,64102c60133,60198
< #line 3011
<   ldv_mutex_lock_state_mutex_of_drbd_conf(ldv_func_arg1);
< #line 3013
<   mutex_lock(ldv_func_arg1);
< #line 3014
<   return;
---
> #line 171
>   node = root->rb_node;
> #line 172
>   overlap = 0;
> #line 173
>   end = (sector_t )(size >> 9) + sector;
> #line 175
>   tmp = __builtin_expect((size & 511U) != 0U, 0L);
> #line 175
>   if (tmp != 0L) {
> #line 175
>     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_interval.c.prepared"),
>                          "i" (175), "i" (12UL));
>     ldv_14194: ;
> #line 175
>     goto ldv_14194;
>   } else {
> 
>   }
> #line 177
>   goto ldv_14200;
>   ldv_14199: 
> #line 179
>   __mptr = (struct rb_node  const  *)node;
> #line 179
>   here = (struct drbd_interval *)__mptr;
> #line 181
>   if ((unsigned long )node->rb_left != (unsigned long )((struct rb_node *)0)) {
> #line 181
>     tmp___0 = interval_end(node->rb_left);
> #line 181
>     if (tmp___0 > sector) {
> #line 184
>       node = node->rb_left;
>     } else {
> #line 181
>       goto _L;
>     }
>   } else
>   _L: /* CIL Label */ 
> #line 185
>   if (here->sector < end && here->sector + (sector_t )(here->size >> 9) > sector) {
> #line 187
>     overlap = here;
> #line 188
>     goto ldv_14198;
>   } else
> #line 189
>   if (here->sector <= sector) {
> #line 191
>     node = node->rb_right;
>   } else {
> #line 193
>     goto ldv_14198;
>   }
>   ldv_14200: ;
> #line 177
>   if ((unsigned long )node != (unsigned long )((struct rb_node *)0)) {
> #line 178
>     goto ldv_14199;
>   } else {
> 
>   }
>   ldv_14198: ;
> #line 195
>   return (overlap);
64105,64106c60201,60203
< #line 3016 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void ldv_mutex_unlock_302(struct mutex *ldv_func_arg1 ) 
---
> #line 199 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_interval.c.prepared"
> struct drbd_interval *drbd_next_overlap(struct drbd_interval *i , sector_t sector ,
>                                         unsigned int size ) 
64108c60205,60207
< 
---
>   sector_t end ;
>   struct rb_node *node ;
>   struct rb_node  const  *__mptr ;
64111,64116c60210,60241
< #line 3021
<   ldv_mutex_unlock_state_mutex_of_drbd_conf(ldv_func_arg1);
< #line 3023
<   mutex_unlock(ldv_func_arg1);
< #line 3024
<   return;
---
> #line 201
>   end = (sector_t )(size >> 9) + sector;
>   ldv_14210: 
> #line 205
>   node = rb_next((struct rb_node  const  *)(& i->rb));
> #line 206
>   if ((unsigned long )node == (unsigned long )((struct rb_node *)0)) {
> #line 207
>     return (0);
>   } else {
> 
>   }
> #line 208
>   __mptr = (struct rb_node  const  *)node;
> #line 208
>   i = (struct drbd_interval *)__mptr;
> #line 209
>   if (i->sector >= end) {
> #line 210
>     return (0);
>   } else {
> 
>   }
> #line 211
>   if (i->sector + (sector_t )(i->size >> 9) > sector) {
> #line 212
>     return (i);
>   } else {
> 
>   }
> #line 213
>   goto ldv_14210;
64119,64120c60244,60247
< #line 3026 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void ldv_mutex_lock_303(struct mutex *ldv_func_arg1 ) 
---
> #line 13 "include/linux/wait.h"
> extern int default_wake_function(wait_queue_t * , unsigned int  , int  , void * ) ;
> #line 81 "include/linux/wait.h"
> __inline static void init_waitqueue_entry(wait_queue_t *q , struct task_struct *p ) 
64125,64129c60252,60258
< #line 3031
<   ldv_mutex_lock_state_mutex_of_drbd_conf(ldv_func_arg1);
< #line 3033
<   mutex_lock(ldv_func_arg1);
< #line 3034
---
> #line 83
>   q->flags = 0U;
> #line 84
>   q->private = (void *)p;
> #line 85
>   q->func = & default_wake_function;
> #line 86
64133,64134c60262,60274
< #line 3036 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void ldv_mutex_unlock_304(struct mutex *ldv_func_arg1 ) 
---
> #line 101
> extern void add_wait_queue(wait_queue_head_t * , wait_queue_t * ) ;
> #line 103
> extern void remove_wait_queue(wait_queue_head_t * , wait_queue_t * ) ;
> #line 123 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_state.h"
> void print_st_err(struct drbd_conf *mdev , union drbd_state os , union drbd_state ns ,
>                   enum drbd_state_rv err ) ;
> #line 157
> enum drbd_disk_state conn_lowest_disk(struct drbd_tconn *tconn ) ;
> #line 159
> enum drbd_conns conn_lowest_conn(struct drbd_tconn *tconn ) ;
> #line 1937 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static void drbd_thread_stop_nowait(struct drbd_thread *thi ) 
64139,64143c60279,60281
< #line 3041
<   ldv_mutex_unlock_state_mutex_of_drbd_conf(ldv_func_arg1);
< #line 3043
<   mutex_unlock(ldv_func_arg1);
< #line 3044
---
> #line 1939
>   _drbd_thread_stop(thi, 0, 0);
> #line 1940
64147,64150c60285,60286
< #line 10 "/home/ldvuser/ldv/inst/kernel-rules/verifier/rcv.h"
< __inline static void ldv_error(void)  __attribute__((__no_instrument_function__)) ;
< #line 10 "/home/ldvuser/ldv/inst/kernel-rules/verifier/rcv.h"
< __inline static void ldv_error(void) 
---
> #line 1942 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static void drbd_thread_restart_nowait(struct drbd_thread *thi ) 
64155,64157c60291,60294
<   LDV_ERROR: reach_error();
< #line 12
<   goto LDV_ERROR;
---
> #line 1944
>   _drbd_thread_stop(thi, 1, 0);
> #line 1945
>   return;
64160,64163c60297,60313
< #line 25
< extern int ldv_undef_int(void) ;
< #line 49 "/home/ldvuser/ldv/inst/kernel-rules/verifier/rcv.h"
< long __builtin_expect(long exp , long c ) 
---
> #line 59 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared"
> static int w_after_state_ch(struct drbd_work *w , int unused ) ;
> #line 60
> static void after_state_ch(struct drbd_conf *mdev , union drbd_state os , union drbd_state ns ,
>                            enum chg_state_flags flags ) ;
> #line 62
> static enum drbd_state_rv is_valid_state(struct drbd_conf *mdev , union drbd_state ns ) ;
> #line 63
> static enum drbd_state_rv is_valid_soft_transition(union drbd_state os , union drbd_state ns ,
>                                                    struct drbd_tconn *tconn ) ;
> #line 64
> static enum drbd_state_rv is_valid_transition(union drbd_state os , union drbd_state ns ) ;
> #line 65
> static union drbd_state sanitize_state(struct drbd_conf *mdev , union drbd_state ns ,
>                                        enum sanitize_state_warnings *warn ) ;
> #line 68 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared"
> __inline static bool is_susp(union drbd_state s ) 
64168,64169c60318,60319
< #line 51
<   return (exp);
---
> #line 70
>   return ((bool )(((unsigned int )*((unsigned char *)(& s) + 2UL) != 0U || (unsigned int )*((unsigned char *)(& s) + 2UL) != 0U) || (unsigned int )*((unsigned char *)(& s) + 2UL) != 0U));
64172,64175c60322,60323
< #line 8 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< static int ldv_mutex_bm_change_of_drbd_bitmap  ;
< #line 11 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_lock_interruptible_bm_change_of_drbd_bitmap(struct mutex *lock ) 
---
> #line 73 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared"
> bool conn_all_vols_unconf(struct drbd_tconn *tconn ) 
64177c60325,60329
<   int nondetermined ;
---
>   struct drbd_conf *mdev ;
>   bool rv ;
>   int vnr ;
>   void *tmp ;
>   void *tmp___0 ;
64180,64182c60332,60350
< #line 16
<   if (ldv_mutex_bm_change_of_drbd_bitmap == 1) {
< 
---
> #line 76
>   rv = 1;
> #line 79
>   rcu_read_lock();
> #line 80
>   vnr = 0;
> #line 80
>   tmp = idr_get_next(& tconn->volumes, & vnr);
> #line 80
>   mdev = (struct drbd_conf *)tmp;
> #line 80
>   goto ldv_51839;
>   ldv_51838: ;
> #line 81
>   if (((unsigned int )*((unsigned char *)mdev + 749UL) != 0U || (unsigned int )*((unsigned short *)mdev + 374UL) != 0U) || (unsigned int )*((unsigned char *)mdev + 748UL) != 2U) {
> #line 84
>     rv = 0;
> #line 85
>     goto ldv_51837;
64184,64185c60352
< #line 16
<     ldv_error();
---
> 
64187,64194c60354,60364
< #line 19
<   nondetermined = ldv_undef_int();
< #line 22
<   if (nondetermined) {
< #line 25
<     ldv_mutex_bm_change_of_drbd_bitmap = 2;
< #line 27
<     return (0);
---
> #line 80
>   vnr = vnr + 1;
> #line 80
>   tmp___0 = idr_get_next(& tconn->volumes, & vnr);
> #line 80
>   mdev = (struct drbd_conf *)tmp___0;
>   ldv_51839: ;
> #line 80
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 81
>     goto ldv_51838;
64196,64197c60366
< #line 32
<     return (-4);
---
> 
64198a60368,60372
>   ldv_51837: 
> #line 88
>   rcu_read_unlock();
> #line 90
>   return (rv);
64201,64202c60375,60376
< #line 37 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_lock_killable_bm_change_of_drbd_bitmap(struct mutex *lock ) 
---
> #line 95 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared"
> static enum drbd_role max_role(enum drbd_role role1 , enum drbd_role role2 ) 
64204d60377
<   int nondetermined ;
64206,64208d60378
<   {
< #line 42
<   if (ldv_mutex_bm_change_of_drbd_bitmap == 1) {
64209a60380,60384
>   {
> #line 97
>   if ((unsigned int )role1 == 1U || (unsigned int )role2 == 1U) {
> #line 98
>     return (R_PRIMARY);
64211,64212c60386
< #line 42
<     ldv_error();
---
> 
64214,64221c60388,60391
< #line 45
<   nondetermined = ldv_undef_int();
< #line 48
<   if (nondetermined) {
< #line 51
<     ldv_mutex_bm_change_of_drbd_bitmap = 2;
< #line 53
<     return (0);
---
> #line 99
>   if ((unsigned int )role1 == 2U || (unsigned int )role2 == 2U) {
> #line 100
>     return (R_SECONDARY);
64223,64224c60393
< #line 58
<     return (-4);
---
> 
64225a60395,60396
> #line 101
>   return (R_UNKNOWN);
64228,64229c60399,60400
< #line 63 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< void ldv_mutex_lock_bm_change_of_drbd_bitmap(struct mutex *lock ) 
---
> #line 103 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared"
> static enum drbd_role min_role(enum drbd_role role1 , enum drbd_role role2 ) 
64234,64235c60405,60409
< #line 66
<   if (ldv_mutex_bm_change_of_drbd_bitmap == 1) {
---
> #line 105
>   if ((unsigned int )role1 == 0U || (unsigned int )role2 == 0U) {
> #line 106
>     return (R_UNKNOWN);
>   } else {
64236a60411,60415
>   }
> #line 107
>   if ((unsigned int )role1 == 2U || (unsigned int )role2 == 2U) {
> #line 108
>     return (R_SECONDARY);
64238,64239c60417
< #line 66
<     ldv_error();
---
> 
64241,64244c60419,60420
< #line 68
<   ldv_mutex_bm_change_of_drbd_bitmap = 2;
< #line 69
<   return;
---
> #line 109
>   return (R_PRIMARY);
64247,64248c60423,60424
< #line 72 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_trylock_bm_change_of_drbd_bitmap(struct mutex *lock ) 
---
> #line 112 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared"
> enum drbd_role conn_highest_role(struct drbd_tconn *tconn ) 
64250c60426,60430
<   int is_mutex_held_by_another_thread ;
---
>   enum drbd_role role ;
>   struct drbd_conf *mdev ;
>   int vnr ;
>   void *tmp ;
>   void *tmp___0 ;
64253,64265c60433,60458
< #line 77
<   if (ldv_mutex_bm_change_of_drbd_bitmap == 1) {
< 
<   } else {
< #line 77
<     ldv_error();
<   }
< #line 80
<   is_mutex_held_by_another_thread = ldv_undef_int();
< #line 83
<   if (is_mutex_held_by_another_thread) {
< #line 86
<     return (0);
---
> #line 114
>   role = R_UNKNOWN;
> #line 118
>   rcu_read_lock();
> #line 119
>   vnr = 0;
> #line 119
>   tmp = idr_get_next(& tconn->volumes, & vnr);
> #line 119
>   mdev = (struct drbd_conf *)tmp;
> #line 119
>   goto ldv_51855;
>   ldv_51854: 
> #line 120
>   role = max_role(role, (enum drbd_role )mdev->state.ldv_50103.role);
> #line 119
>   vnr = vnr + 1;
> #line 119
>   tmp___0 = idr_get_next(& tconn->volumes, & vnr);
> #line 119
>   mdev = (struct drbd_conf *)tmp___0;
>   ldv_51855: ;
> #line 119
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 120
>     goto ldv_51854;
64267,64270c60460
< #line 91
<     ldv_mutex_bm_change_of_drbd_bitmap = 2;
< #line 93
<     return (1);
---
> 
64271a60462,60465
> #line 121
>   rcu_read_unlock();
> #line 123
>   return (role);
64274,64275c60468,60469
< #line 98 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_atomic_dec_and_mutex_lock_bm_change_of_drbd_bitmap(atomic_t *cnt , struct mutex *lock ) 
---
> #line 126 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared"
> enum drbd_role conn_highest_peer(struct drbd_tconn *tconn ) 
64277c60471,60475
<   int atomic_value_after_dec ;
---
>   enum drbd_role peer ;
>   struct drbd_conf *mdev ;
>   int vnr ;
>   void *tmp ;
>   void *tmp___0 ;
64280,64294c60478,60503
< #line 103
<   if (ldv_mutex_bm_change_of_drbd_bitmap == 1) {
< 
<   } else {
< #line 103
<     ldv_error();
<   }
< #line 106
<   atomic_value_after_dec = ldv_undef_int();
< #line 109
<   if (atomic_value_after_dec == 0) {
< #line 112
<     ldv_mutex_bm_change_of_drbd_bitmap = 2;
< #line 114
<     return (1);
---
> #line 128
>   peer = R_UNKNOWN;
> #line 132
>   rcu_read_lock();
> #line 133
>   vnr = 0;
> #line 133
>   tmp = idr_get_next(& tconn->volumes, & vnr);
> #line 133
>   mdev = (struct drbd_conf *)tmp;
> #line 133
>   goto ldv_51864;
>   ldv_51863: 
> #line 134
>   peer = max_role(peer, (enum drbd_role )mdev->state.ldv_50103.peer);
> #line 133
>   vnr = vnr + 1;
> #line 133
>   tmp___0 = idr_get_next(& tconn->volumes, & vnr);
> #line 133
>   mdev = (struct drbd_conf *)tmp___0;
>   ldv_51864: ;
> #line 133
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 134
>     goto ldv_51863;
64298,64299c60507,60510
< #line 118
<   return (0);
---
> #line 135
>   rcu_read_unlock();
> #line 137
>   return (peer);
64302,64303c60513,60514
< #line 123 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_is_locked_bm_change_of_drbd_bitmap(struct mutex *lock ) 
---
> #line 140 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared"
> enum drbd_disk_state conn_highest_disk(struct drbd_tconn *tconn ) 
64305c60516,60522
<   int nondetermined ;
---
>   enum drbd_disk_state ds ;
>   struct drbd_conf *mdev ;
>   int vnr ;
>   void *tmp ;
>   enum drbd_disk_state __max1 ;
>   enum drbd_disk_state __max2 ;
>   void *tmp___0 ;
64308,64320c60525,60528
< #line 127
<   if (ldv_mutex_bm_change_of_drbd_bitmap == 1) {
< #line 130
<     nondetermined = ldv_undef_int();
< #line 133
<     if (nondetermined) {
< #line 136
<       return (0);
<     } else {
< #line 141
<       return (1);
<     }
<   } else {
---
> #line 142
>   ds = D_DISKLESS;
> #line 146
>   rcu_read_lock();
64322c60530,60556
<     return (1);
---
>   vnr = 0;
> #line 147
>   tmp = idr_get_next(& tconn->volumes, & vnr);
> #line 147
>   mdev = (struct drbd_conf *)tmp;
> #line 147
>   goto ldv_51876;
>   ldv_51875: 
> #line 148
>   __max1 = ds;
> #line 148
>   __max2 = (enum drbd_disk_state )mdev->state.ldv_50103.disk;
> #line 148
>   ds = (enum drbd_disk_state )((unsigned int )__max1 > (unsigned int )__max2 ? (unsigned int )__max1 : (unsigned int )__max2);
> #line 147
>   vnr = vnr + 1;
> #line 147
>   tmp___0 = idr_get_next(& tconn->volumes, & vnr);
> #line 147
>   mdev = (struct drbd_conf *)tmp___0;
>   ldv_51876: ;
> #line 147
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 148
>     goto ldv_51875;
>   } else {
> 
64323a60558,60561
> #line 149
>   rcu_read_unlock();
> #line 151
>   return (ds);
64326,64327c60564,60565
< #line 152 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< void ldv_mutex_unlock_bm_change_of_drbd_bitmap(struct mutex *lock ) 
---
> #line 154 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared"
> enum drbd_disk_state conn_lowest_disk(struct drbd_tconn *tconn ) 
64329c60567,60573
< 
---
>   enum drbd_disk_state ds ;
>   struct drbd_conf *mdev ;
>   int vnr ;
>   void *tmp ;
>   enum drbd_disk_state __min1 ;
>   enum drbd_disk_state __min2 ;
>   void *tmp___0 ;
64332,64334c60576,60605
< #line 155
<   if (ldv_mutex_bm_change_of_drbd_bitmap == 2) {
< 
---
> #line 156
>   ds = D_MASK;
> #line 160
>   rcu_read_lock();
> #line 161
>   vnr = 0;
> #line 161
>   tmp = idr_get_next(& tconn->volumes, & vnr);
> #line 161
>   mdev = (struct drbd_conf *)tmp;
> #line 161
>   goto ldv_51888;
>   ldv_51887: 
> #line 162
>   __min1 = ds;
> #line 162
>   __min2 = (enum drbd_disk_state )mdev->state.ldv_50103.disk;
> #line 162
>   ds = (enum drbd_disk_state )((unsigned int )__min1 < (unsigned int )__min2 ? (unsigned int )__min1 : (unsigned int )__min2);
> #line 161
>   vnr = vnr + 1;
> #line 161
>   tmp___0 = idr_get_next(& tconn->volumes, & vnr);
> #line 161
>   mdev = (struct drbd_conf *)tmp___0;
>   ldv_51888: ;
> #line 161
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 162
>     goto ldv_51887;
64336,64337c60607
< #line 155
<     ldv_error();
---
> 
64339,64342c60609,60612
< #line 157
<   ldv_mutex_bm_change_of_drbd_bitmap = 1;
< #line 158
<   return;
---
> #line 163
>   rcu_read_unlock();
> #line 165
>   return (ds);
64345,64348c60615,60616
< #line 160 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< static int ldv_mutex_cred_guard_mutex_of_signal_struct  ;
< #line 163 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_lock_interruptible_cred_guard_mutex_of_signal_struct(struct mutex *lock ) 
---
> #line 168 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared"
> enum drbd_disk_state conn_highest_pdsk(struct drbd_tconn *tconn ) 
64350c60618,60624
<   int nondetermined ;
---
>   enum drbd_disk_state ds ;
>   struct drbd_conf *mdev ;
>   int vnr ;
>   void *tmp ;
>   enum drbd_disk_state __max1 ;
>   enum drbd_disk_state __max2 ;
>   void *tmp___0 ;
64353,64355c60627,60656
< #line 168
<   if (ldv_mutex_cred_guard_mutex_of_signal_struct == 1) {
< 
---
> #line 170
>   ds = D_DISKLESS;
> #line 174
>   rcu_read_lock();
> #line 175
>   vnr = 0;
> #line 175
>   tmp = idr_get_next(& tconn->volumes, & vnr);
> #line 175
>   mdev = (struct drbd_conf *)tmp;
> #line 175
>   goto ldv_51900;
>   ldv_51899: 
> #line 176
>   __max1 = ds;
> #line 176
>   __max2 = (enum drbd_disk_state )mdev->state.ldv_50103.pdsk;
> #line 176
>   ds = (enum drbd_disk_state )((unsigned int )__max1 > (unsigned int )__max2 ? (unsigned int )__max1 : (unsigned int )__max2);
> #line 175
>   vnr = vnr + 1;
> #line 175
>   tmp___0 = idr_get_next(& tconn->volumes, & vnr);
> #line 175
>   mdev = (struct drbd_conf *)tmp___0;
>   ldv_51900: ;
> #line 175
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 176
>     goto ldv_51899;
64357,64358c60658
< #line 168
<     ldv_error();
---
> 
64360,64363d60659
< #line 171
<   nondetermined = ldv_undef_int();
< #line 174
<   if (nondetermined) {
64365c60661
<     ldv_mutex_cred_guard_mutex_of_signal_struct = 2;
---
>   rcu_read_unlock();
64367,64371c60663
<     return (0);
<   } else {
< #line 184
<     return (-4);
<   }
---
>   return (ds);
64374,64375c60666,60667
< #line 189 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_lock_killable_cred_guard_mutex_of_signal_struct(struct mutex *lock ) 
---
> #line 182 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared"
> enum drbd_conns conn_lowest_conn(struct drbd_tconn *tconn ) 
64377c60669,60675
<   int nondetermined ;
---
>   enum drbd_conns conn ;
>   struct drbd_conf *mdev ;
>   int vnr ;
>   void *tmp ;
>   enum drbd_conns __min1 ;
>   enum drbd_conns __min2 ;
>   void *tmp___0 ;
64380,64382c60678,60707
< #line 194
<   if (ldv_mutex_cred_guard_mutex_of_signal_struct == 1) {
< 
---
> #line 184
>   conn = C_MASK;
> #line 188
>   rcu_read_lock();
> #line 189
>   vnr = 0;
> #line 189
>   tmp = idr_get_next(& tconn->volumes, & vnr);
> #line 189
>   mdev = (struct drbd_conf *)tmp;
> #line 189
>   goto ldv_51912;
>   ldv_51911: 
> #line 190
>   __min1 = conn;
> #line 190
>   __min2 = (enum drbd_conns )mdev->state.ldv_50103.conn;
> #line 190
>   conn = (enum drbd_conns )((unsigned int )__min1 < (unsigned int )__min2 ? (unsigned int )__min1 : (unsigned int )__min2);
> #line 189
>   vnr = vnr + 1;
> #line 189
>   tmp___0 = idr_get_next(& tconn->volumes, & vnr);
> #line 189
>   mdev = (struct drbd_conf *)tmp___0;
>   ldv_51912: ;
> #line 189
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 190
>     goto ldv_51911;
64384,64385c60709
< #line 194
<     ldv_error();
---
> 
64387,64388c60711,60726
< #line 197
<   nondetermined = ldv_undef_int();
---
> #line 191
>   rcu_read_unlock();
> #line 193
>   return (conn);
> }
> }
> #line 196 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared"
> static bool no_peer_wf_report_params(struct drbd_tconn *tconn ) 
> { 
>   struct drbd_conf *mdev ;
>   int vnr ;
>   bool rv ;
>   void *tmp ;
>   void *tmp___0 ;
> 
>   {
64390c60728,60732
<   if (nondetermined) {
---
>   rv = 1;
> #line 202
>   rcu_read_lock();
> #line 203
>   vnr = 0;
64392c60734,60741
<     ldv_mutex_cred_guard_mutex_of_signal_struct = 2;
---
>   tmp = idr_get_next(& tconn->volumes, & vnr);
> #line 203
>   mdev = (struct drbd_conf *)tmp;
> #line 203
>   goto ldv_51922;
>   ldv_51921: ;
> #line 204
>   if ((unsigned int )*((unsigned short *)mdev + 374UL) == 144U) {
64394c60743,60745
<     return (0);
---
>     rv = 0;
> #line 206
>     goto ldv_51920;
64396,64397c60747,60761
< #line 210
<     return (-4);
---
> 
>   }
> #line 203
>   vnr = vnr + 1;
> #line 203
>   tmp___0 = idr_get_next(& tconn->volumes, & vnr);
> #line 203
>   mdev = (struct drbd_conf *)tmp___0;
>   ldv_51922: ;
> #line 203
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 204
>     goto ldv_51921;
>   } else {
> 
64398a60763,60767
>   ldv_51920: 
> #line 208
>   rcu_read_unlock();
> #line 210
>   return (rv);
64401,64402c60770,60771
< #line 215 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< void ldv_mutex_lock_cred_guard_mutex_of_signal_struct(struct mutex *lock ) 
---
> #line 220 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared"
> static int cl_wide_st_chg(struct drbd_conf *mdev , union drbd_state os , union drbd_state ns ) 
64407,64417c60776,60777
< #line 218
<   if (ldv_mutex_cred_guard_mutex_of_signal_struct == 1) {
< 
<   } else {
< #line 218
<     ldv_error();
<   }
< #line 220
<   ldv_mutex_cred_guard_mutex_of_signal_struct = 2;
< #line 221
<   return;
---
> #line 223
>   return ((((((int )os.ldv_40604.conn > 9 && (int )ns.ldv_40604.conn > 9) && (((((unsigned int )*((unsigned char *)(& os) + 0UL) != 1U && (unsigned int )*((unsigned char *)(& ns) + 0UL) == 1U) || ((unsigned int )*((unsigned short *)(& os) + 0UL) != 192U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 192U)) || ((unsigned int )*((unsigned short *)(& os) + 0UL) != 176U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 176U)) || ((unsigned int )*((unsigned char *)(& os) + 1UL) != 4U && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 4U))) || ((int )os.ldv_40604.conn > 9 && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 16U)) || ((unsigned int )*((unsigned short *)(& os) + 0UL) == 160U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 288U)) || ((unsigned int )*((unsigned short *)(& os) + 0UL) == 160U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 144U));
64420,64421c60780,60782
< #line 224 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_trylock_cred_guard_mutex_of_signal_struct(struct mutex *lock ) 
---
> #line 234 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared"
> static union drbd_state apply_mask_val(union drbd_state os , union drbd_state mask ,
>                                        union drbd_state val ) 
64423c60784
<   int is_mutex_held_by_another_thread ;
---
>   union drbd_state ns ;
64426,64436c60787,60788
< #line 229
<   if (ldv_mutex_cred_guard_mutex_of_signal_struct == 1) {
< 
<   } else {
< #line 229
<     ldv_error();
<   }
< #line 232
<   is_mutex_held_by_another_thread = ldv_undef_int();
< #line 235
<   if (is_mutex_held_by_another_thread) {
---
> #line 237
>   ns.i = (os.i & ~ mask.i) | val.i;
64438,64444c60790
<     return (0);
<   } else {
< #line 243
<     ldv_mutex_cred_guard_mutex_of_signal_struct = 2;
< #line 245
<     return (1);
<   }
---
>   return (ns);
64447,64449c60793,60795
< #line 250 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_atomic_dec_and_mutex_lock_cred_guard_mutex_of_signal_struct(atomic_t *cnt ,
<                                                                     struct mutex *lock ) 
---
> #line 242 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared"
> enum drbd_state_rv drbd_change_state(struct drbd_conf *mdev , enum chg_state_flags f ,
>                                      union drbd_state mask , union drbd_state val ) 
64451c60797,60801
<   int atomic_value_after_dec ;
---
>   unsigned long flags ;
>   union drbd_state ns ;
>   enum drbd_state_rv rv ;
>   raw_spinlock_t *tmp ;
>   union drbd_state tmp___0 ;
64454,64455c60804,60822
< #line 255
<   if (ldv_mutex_cred_guard_mutex_of_signal_struct == 1) {
---
> #line 249
>   tmp = spinlock_check(& (mdev->tconn)->req_lock);
> #line 249
>   flags = _raw_spin_lock_irqsave(tmp);
> #line 250
>   tmp___0 = drbd_read_state(mdev);
> #line 250
>   ns = apply_mask_val(tmp___0, mask, val);
> #line 251
>   rv = _drbd_set_state(mdev, ns, f, 0);
> #line 252
>   spin_unlock_irqrestore(& (mdev->tconn)->req_lock, flags);
> #line 254
>   return (rv);
> }
> }
> #line 263 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared"
> void drbd_force_state(struct drbd_conf *mdev , union drbd_state mask , union drbd_state val ) 
> { 
64457,64469d60823
<   } else {
< #line 255
<     ldv_error();
<   }
< #line 258
<   atomic_value_after_dec = ldv_undef_int();
< #line 261
<   if (atomic_value_after_dec == 0) {
< #line 264
<     ldv_mutex_cred_guard_mutex_of_signal_struct = 2;
< #line 266
<     return (1);
<   } else {
64471,64473c60825,60829
<   }
< #line 270
<   return (0);
---
>   {
> #line 266
>   drbd_change_state(mdev, CS_HARD, mask, val);
> #line 267
>   return;
64476,64477c60832,60834
< #line 275 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_is_locked_cred_guard_mutex_of_signal_struct(struct mutex *lock ) 
---
> #line 270 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared"
> static enum drbd_state_rv _req_st_cond(struct drbd_conf *mdev , union drbd_state mask ,
>                                        union drbd_state val ) 
64479c60836,60844
<   int nondetermined ;
---
>   union drbd_state os ;
>   union drbd_state ns ;
>   unsigned long flags ;
>   enum drbd_state_rv rv ;
>   int tmp ;
>   int tmp___0 ;
>   raw_spinlock_t *tmp___1 ;
>   union drbd_state tmp___2 ;
>   int tmp___3 ;
64482,64485c60847,60870
< #line 279
<   if (ldv_mutex_cred_guard_mutex_of_signal_struct == 1) {
< #line 282
<     nondetermined = ldv_undef_int();
---
> #line 277
>   tmp = test_and_clear_bit(3, (unsigned long volatile   *)(& mdev->flags));
> #line 277
>   if (tmp != 0) {
> #line 278
>     return (SS_CW_SUCCESS);
>   } else {
> 
>   }
> #line 280
>   tmp___0 = test_and_clear_bit(4, (unsigned long volatile   *)(& mdev->flags));
> #line 280
>   if (tmp___0 != 0) {
> #line 281
>     return (SS_CW_FAILED_BY_PEER);
>   } else {
> 
>   }
> #line 283
>   tmp___1 = spinlock_check(& (mdev->tconn)->req_lock);
> #line 283
>   flags = _raw_spin_lock_irqsave(tmp___1);
> #line 284
>   os = drbd_read_state(mdev);
64487c60872,60878
<     if (nondetermined) {
---
>   tmp___2 = apply_mask_val(os, mask, val);
> #line 285
>   ns = sanitize_state(mdev, tmp___2, 0);
> #line 286
>   rv = is_valid_transition(os, ns);
> #line 287
>   if ((int )rv > 0) {
64489,64493c60880
<       return (0);
<     } else {
< #line 293
<       return (1);
<     }
---
>     rv = SS_UNKNOWN_ERROR;
64495,64496c60882
< #line 299
<     return (1);
---
> 
64498,64502c60884,60890
< }
< }
< #line 304 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< void ldv_mutex_unlock_cred_guard_mutex_of_signal_struct(struct mutex *lock ) 
< { 
---
> #line 290
>   tmp___3 = cl_wide_st_chg(mdev, os, ns);
> #line 290
>   if (tmp___3 == 0) {
> #line 291
>     rv = SS_CW_NO_NEED;
>   } else {
64503a60892,60905
>   }
> #line 292
>   if ((int )rv == 0) {
> #line 293
>     rv = is_valid_state(mdev, ns);
> #line 294
>     if ((int )rv > 0) {
> #line 295
>       rv = is_valid_soft_transition(os, ns, mdev->tconn);
> #line 296
>       if ((int )rv > 0) {
> #line 297
>         rv = SS_UNKNOWN_ERROR;
>       } else {
64505,64507c60907,60908
<   {
< #line 307
<   if (ldv_mutex_cred_guard_mutex_of_signal_struct == 2) {
---
>       }
>     } else {
64508a60910
>     }
64510,64511c60912
< #line 307
<     ldv_error();
---
> 
64513,64516c60914,60917
< #line 309
<   ldv_mutex_cred_guard_mutex_of_signal_struct = 1;
< #line 310
<   return;
---
> #line 300
>   spin_unlock_irqrestore(& (mdev->tconn)->req_lock, flags);
> #line 302
>   return (rv);
64519,64522c60920,60922
< #line 312 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< static int ldv_mutex_drbd_main_mutex  ;
< #line 315 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_lock_interruptible_drbd_main_mutex(struct mutex *lock ) 
---
> #line 316 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared"
> static enum drbd_state_rv drbd_req_state(struct drbd_conf *mdev , union drbd_state mask ,
>                                          union drbd_state val , enum chg_state_flags f ) 
64524c60924,60937
<   int nondetermined ;
---
>   struct completion done ;
>   unsigned long flags ;
>   union drbd_state os ;
>   union drbd_state ns ;
>   enum drbd_state_rv rv ;
>   raw_spinlock_t *tmp ;
>   union drbd_state tmp___0 ;
>   int tmp___1 ;
>   wait_queue_t __wait ;
>   struct task_struct *tmp___2 ;
>   raw_spinlock_t *tmp___3 ;
>   union drbd_state tmp___4 ;
>   int tmp___5 ;
>   struct task_struct *tmp___6 ;
64527,64529c60940,60945
< #line 320
<   if (ldv_mutex_drbd_main_mutex == 1) {
< 
---
> #line 324
>   init_completion(& done);
> #line 326
>   if (((unsigned int )f & 8U) != 0U) {
> #line 327
>     mutex_lock_nested(mdev->state_mutex, 0U);
64531,64532c60947
< #line 320
<     ldv_error();
---
> 
64534,64537d60948
< #line 323
<   nondetermined = ldv_undef_int();
< #line 326
<   if (nondetermined) {
64539c60950,60954
<     ldv_mutex_drbd_main_mutex = 2;
---
>   tmp = spinlock_check(& (mdev->tconn)->req_lock);
> #line 329
>   flags = _raw_spin_lock_irqsave(tmp);
> #line 330
>   os = drbd_read_state(mdev);
64541c60956,60966
<     return (0);
---
>   tmp___0 = apply_mask_val(os, mask, val);
> #line 331
>   ns = sanitize_state(mdev, tmp___0, 0);
> #line 332
>   rv = is_valid_transition(os, ns);
> #line 333
>   if ((int )rv <= 0) {
> #line 334
>     spin_unlock_irqrestore(& (mdev->tconn)->req_lock, flags);
> #line 335
>     goto abort;
64543,64544c60968
< #line 336
<     return (-4);
---
> 
64546,64551c60970,60980
< }
< }
< #line 341 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_lock_killable_drbd_main_mutex(struct mutex *lock ) 
< { 
<   int nondetermined ;
---
> #line 338
>   tmp___5 = cl_wide_st_chg(mdev, os, ns);
> #line 338
>   if (tmp___5 != 0) {
> #line 339
>     rv = is_valid_state(mdev, ns);
> #line 340
>     if ((int )rv == 1) {
> #line 341
>       rv = is_valid_soft_transition(os, ns, mdev->tconn);
>     } else {
64553c60982,60988
<   {
---
>     }
> #line 342
>     spin_unlock_irqrestore(& (mdev->tconn)->req_lock, flags);
> #line 344
>     if ((int )rv <= 0) {
> #line 345
>       if (((unsigned int )f & 2U) != 0U) {
64555c60990,60991
<   if (ldv_mutex_drbd_main_mutex == 1) {
---
>         print_st_err(mdev, os, ns, (int )rv);
>       } else {
64557,64562c60993,61004
<   } else {
< #line 346
<     ldv_error();
<   }
< #line 349
<   nondetermined = ldv_undef_int();
---
>       }
> #line 347
>       goto abort;
>     } else {
> 
>     }
> #line 350
>     tmp___1 = drbd_send_state_req(mdev, mask, val);
> #line 350
>     if (tmp___1 != 0) {
> #line 351
>       rv = SS_CW_FAILED_BY_PEER;
64564,64566c61006,61016
<   if (nondetermined) {
< #line 355
<     ldv_mutex_drbd_main_mutex = 2;
---
>       if (((unsigned int )f & 2U) != 0U) {
> #line 353
>         print_st_err(mdev, os, ns, (int )rv);
>       } else {
> 
>       }
> #line 354
>       goto abort;
>     } else {
> 
>     }
64568,64577c61018,61023
<     return (0);
<   } else {
< #line 362
<     return (-4);
<   }
< }
< }
< #line 367 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< void ldv_mutex_lock_drbd_main_mutex(struct mutex *lock ) 
< { 
---
>     rv = _req_st_cond(mdev, mask, val);
> #line 357
>     if ((int )rv != 0) {
> #line 357
>       goto ldv_51978;
>     } else {
64578a61025,61047
>     }
> #line 357
>     tmp___2 = get_current();
> #line 357
>     __wait.flags = 0U;
> #line 357
>     __wait.private = (void *)tmp___2;
> #line 357
>     __wait.func = & autoremove_wake_function;
> #line 357
>     __wait.task_list.next = & __wait.task_list;
> #line 357
>     __wait.task_list.prev = & __wait.task_list;
>     ldv_51981: 
> #line 357
>     prepare_to_wait(& mdev->state_wait, & __wait, 2);
> #line 357
>     rv = _req_st_cond(mdev, mask, val);
> #line 357
>     if ((int )rv != 0) {
> #line 357
>       goto ldv_51980;
>     } else {
64580,64582c61049,61069
<   {
< #line 370
<   if (ldv_mutex_drbd_main_mutex == 1) {
---
>     }
> #line 357
>     schedule();
> #line 357
>     goto ldv_51981;
>     ldv_51980: 
> #line 357
>     finish_wait(& mdev->state_wait, & __wait);
>     ldv_51978: ;
> #line 360
>     if ((int )rv <= 0) {
> #line 361
>       if (((unsigned int )f & 2U) != 0U) {
> #line 362
>         print_st_err(mdev, os, ns, (int )rv);
>       } else {
> 
>       }
> #line 363
>       goto abort;
>     } else {
64583a61071,61081
>     }
> #line 365
>     tmp___3 = spinlock_check(& (mdev->tconn)->req_lock);
> #line 365
>     flags = _raw_spin_lock_irqsave(tmp___3);
> #line 366
>     tmp___4 = drbd_read_state(mdev);
> #line 366
>     ns = apply_mask_val(tmp___4, mask, val);
> #line 367
>     rv = _drbd_set_state(mdev, ns, f, & done);
64585,64586c61083,61084
< #line 370
<     ldv_error();
---
> #line 369
>     rv = _drbd_set_state(mdev, ns, f, & done);
64589,64601c61087,61098
<   ldv_mutex_drbd_main_mutex = 2;
< #line 373
<   return;
< }
< }
< #line 376 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_trylock_drbd_main_mutex(struct mutex *lock ) 
< { 
<   int is_mutex_held_by_another_thread ;
< 
<   {
< #line 381
<   if (ldv_mutex_drbd_main_mutex == 1) {
---
>   spin_unlock_irqrestore(& (mdev->tconn)->req_lock, flags);
> #line 374
>   if (((unsigned int )f & 4U) != 0U && (int )rv == 1) {
> #line 375
>     tmp___6 = get_current();
> #line 375
>     if ((unsigned long )tmp___6 == (unsigned long )(mdev->tconn)->worker.task) {
> #line 375
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( current != mdev->tconn->worker.task ) in %s:%d\n",
>               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared",
>               375);
>     } else {
64602a61100,61102
>     }
> #line 376
>     wait_for_completion(& done);
64604,64605c61104
< #line 381
<     ldv_error();
---
> 
64607,64612c61106,61110
< #line 384
<   is_mutex_held_by_another_thread = ldv_undef_int();
< #line 387
<   if (is_mutex_held_by_another_thread) {
< #line 390
<     return (0);
---
>   abort: ;
> #line 380
>   if (((unsigned int )f & 8U) != 0U) {
> #line 381
>     mutex_unlock(mdev->state_mutex);
64614,64617c61112
< #line 395
<     ldv_mutex_drbd_main_mutex = 2;
< #line 397
<     return (1);
---
> 
64618a61114,61115
> #line 383
>   return (rv);
64621,64622c61118,61120
< #line 402 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_atomic_dec_and_mutex_lock_drbd_main_mutex(atomic_t *cnt , struct mutex *lock ) 
---
> #line 397 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared"
> enum drbd_state_rv _drbd_request_state(struct drbd_conf *mdev , union drbd_state mask ,
>                                        union drbd_state val , enum chg_state_flags f ) 
64624c61122,61124
<   int atomic_value_after_dec ;
---
>   enum drbd_state_rv rv ;
>   wait_queue_t __wait ;
>   struct task_struct *tmp ;
64627,64629c61127,61132
< #line 407
<   if (ldv_mutex_drbd_main_mutex == 1) {
< 
---
> #line 402
>   rv = drbd_req_state(mdev, mask, val, f);
> #line 402
>   if ((int )rv != -18) {
> #line 402
>     goto ldv_51992;
64631,64632c61134
< #line 407
<     ldv_error();
---
> 
64634,64641c61136,61156
< #line 410
<   atomic_value_after_dec = ldv_undef_int();
< #line 413
<   if (atomic_value_after_dec == 0) {
< #line 416
<     ldv_mutex_drbd_main_mutex = 2;
< #line 418
<     return (1);
---
> #line 402
>   tmp = get_current();
> #line 402
>   __wait.flags = 0U;
> #line 402
>   __wait.private = (void *)tmp;
> #line 402
>   __wait.func = & autoremove_wake_function;
> #line 402
>   __wait.task_list.next = & __wait.task_list;
> #line 402
>   __wait.task_list.prev = & __wait.task_list;
>   ldv_51995: 
> #line 402
>   prepare_to_wait(& mdev->state_wait, & __wait, 2);
> #line 402
>   rv = drbd_req_state(mdev, mask, val, f);
> #line 402
>   if ((int )rv != -18) {
> #line 402
>     goto ldv_51994;
64645,64646c61160,61169
< #line 422
<   return (0);
---
> #line 402
>   schedule();
> #line 402
>   goto ldv_51995;
>   ldv_51994: 
> #line 402
>   finish_wait(& mdev->state_wait, & __wait);
>   ldv_51992: ;
> #line 405
>   return (rv);
64649,64650c61172,61173
< #line 427 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_is_locked_drbd_main_mutex(struct mutex *lock ) 
---
> #line 408 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared"
> static void print_st(struct drbd_conf *mdev , char *name , union drbd_state ns ) 
64652c61175,61180
<   int nondetermined ;
---
>   bool tmp ;
>   char const   *tmp___0 ;
>   char const   *tmp___1 ;
>   char const   *tmp___2 ;
>   char const   *tmp___3 ;
>   char const   *tmp___4 ;
64655,64670c61183,61202
< #line 431
<   if (ldv_mutex_drbd_main_mutex == 1) {
< #line 434
<     nondetermined = ldv_undef_int();
< #line 437
<     if (nondetermined) {
< #line 440
<       return (0);
<     } else {
< #line 445
<       return (1);
<     }
<   } else {
< #line 451
<     return (1);
<   }
---
> #line 410
>   tmp = is_susp(ns);
> #line 410
>   tmp___0 = drbd_disk_str((enum drbd_disk_state )ns.ldv_40604.pdsk);
> #line 410
>   tmp___1 = drbd_disk_str((enum drbd_disk_state )ns.ldv_40604.disk);
> #line 410
>   tmp___2 = drbd_role_str((enum drbd_role )ns.ldv_40604.peer);
> #line 410
>   tmp___3 = drbd_role_str((enum drbd_role )ns.ldv_40604.role);
> #line 410
>   tmp___4 = drbd_conn_str((enum drbd_conns )ns.ldv_40604.conn);
> #line 410
>   dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), " %s = { cs:%s ro:%s/%s ds:%s/%s %c%c%c%c%c%c }\n",
>           name, tmp___4, tmp___3, tmp___2, tmp___1, tmp___0, (int )tmp ? 115 : 114,
>           (unsigned int )*((unsigned char *)(& ns) + 2UL) != 0U ? 97 : 45, (unsigned int )*((unsigned char *)(& ns) + 2UL) != 0U ? 112 : 45,
>           (unsigned int )*((unsigned char *)(& ns) + 2UL) != 0U ? 117 : 45, (unsigned int )*((unsigned char *)(& ns) + 2UL) != 0U ? 70 : 45,
>           (unsigned int )*((unsigned char *)(& ns) + 2UL) != 0U ? 78 : 45);
> #line 423
>   return;
64673,64674c61205,61207
< #line 456 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< void ldv_mutex_unlock_drbd_main_mutex(struct mutex *lock ) 
---
> #line 426 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared"
> void print_st_err(struct drbd_conf *mdev , union drbd_state os , union drbd_state ns ,
>                   enum drbd_state_rv err ) 
64676c61209
< 
---
>   char const   *tmp ;
64679,64681c61212,61215
< #line 459
<   if (ldv_mutex_drbd_main_mutex == 2) {
< 
---
> #line 429
>   if ((int )err == -18) {
> #line 430
>     return;
64683,64684c61217
< #line 459
<     ldv_error();
---
> 
64686,64688c61219,61228
< #line 461
<   ldv_mutex_drbd_main_mutex = 1;
< #line 462
---
> #line 431
>   tmp = drbd_set_st_err_str(err);
> #line 431
>   dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "State change failed: %s\n",
>           tmp);
> #line 432
>   print_st(mdev, (char *)" state", os);
> #line 433
>   print_st(mdev, (char *)"wanted", ns);
> #line 434
64692,64695c61232,61234
< #line 464 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< static int ldv_mutex_lock  ;
< #line 467 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_lock_interruptible_lock(struct mutex *lock ) 
---
> #line 436 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared"
> static long print_state_change(char *pb , union drbd_state os , union drbd_state ns ,
>                                enum chg_state_flags flags ) 
64697c61236,61251
<   int nondetermined ;
---
>   char *pbp ;
>   char const   *tmp ;
>   char const   *tmp___0 ;
>   int tmp___1 ;
>   char const   *tmp___2 ;
>   char const   *tmp___3 ;
>   int tmp___4 ;
>   char const   *tmp___5 ;
>   char const   *tmp___6 ;
>   int tmp___7 ;
>   char const   *tmp___8 ;
>   char const   *tmp___9 ;
>   int tmp___10 ;
>   char const   *tmp___11 ;
>   char const   *tmp___12 ;
>   int tmp___13 ;
64700,64701c61254,61268
< #line 472
<   if (ldv_mutex_lock == 1) {
---
> #line 440
>   pbp = pb;
> #line 441
>   *pbp = 0;
> #line 443
>   if ((int )ns.ldv_40604.role != (int )os.ldv_40604.role && ((unsigned int )flags & 32U) != 0U) {
> #line 444
>     tmp = drbd_role_str((enum drbd_role )ns.ldv_40604.role);
> #line 444
>     tmp___0 = drbd_role_str((enum drbd_role )os.ldv_40604.role);
> #line 444
>     tmp___1 = sprintf(pbp, "role( %s -> %s ) ", tmp___0, tmp);
> #line 444
>     pbp = pbp + (unsigned long )tmp___1;
>   } else {
64702a61270,61280
>   }
> #line 447
>   if ((int )ns.ldv_40604.peer != (int )os.ldv_40604.peer && ((unsigned int )flags & 64U) != 0U) {
> #line 448
>     tmp___2 = drbd_role_str((enum drbd_role )ns.ldv_40604.peer);
> #line 448
>     tmp___3 = drbd_role_str((enum drbd_role )os.ldv_40604.peer);
> #line 448
>     tmp___4 = sprintf(pbp, "peer( %s -> %s ) ", tmp___3, tmp___2);
> #line 448
>     pbp = pbp + (unsigned long )tmp___4;
64704,64705c61282
< #line 472
<     ldv_error();
---
> 
64707,64714c61284,61293
< #line 475
<   nondetermined = ldv_undef_int();
< #line 478
<   if (nondetermined) {
< #line 481
<     ldv_mutex_lock = 2;
< #line 483
<     return (0);
---
> #line 451
>   if ((int )ns.ldv_40604.conn != (int )os.ldv_40604.conn && ((unsigned int )flags & 128U) != 0U) {
> #line 452
>     tmp___5 = drbd_conn_str((enum drbd_conns )ns.ldv_40604.conn);
> #line 452
>     tmp___6 = drbd_conn_str((enum drbd_conns )os.ldv_40604.conn);
> #line 452
>     tmp___7 = sprintf(pbp, "conn( %s -> %s ) ", tmp___6, tmp___5);
> #line 452
>     pbp = pbp + (unsigned long )tmp___7;
64716,64717c61295,61321
< #line 488
<     return (-4);
---
> 
>   }
> #line 455
>   if ((int )ns.ldv_40604.disk != (int )os.ldv_40604.disk && ((unsigned int )flags & 256U) != 0U) {
> #line 456
>     tmp___8 = drbd_disk_str((enum drbd_disk_state )ns.ldv_40604.disk);
> #line 456
>     tmp___9 = drbd_disk_str((enum drbd_disk_state )os.ldv_40604.disk);
> #line 456
>     tmp___10 = sprintf(pbp, "disk( %s -> %s ) ", tmp___9, tmp___8);
> #line 456
>     pbp = pbp + (unsigned long )tmp___10;
>   } else {
> 
>   }
> #line 459
>   if ((int )ns.ldv_40604.pdsk != (int )os.ldv_40604.pdsk && ((unsigned int )flags & 512U) != 0U) {
> #line 460
>     tmp___11 = drbd_disk_str((enum drbd_disk_state )ns.ldv_40604.pdsk);
> #line 460
>     tmp___12 = drbd_disk_str((enum drbd_disk_state )os.ldv_40604.pdsk);
> #line 460
>     tmp___13 = sprintf(pbp, "pdsk( %s -> %s ) ", tmp___12, tmp___11);
> #line 460
>     pbp = pbp + (unsigned long )tmp___13;
>   } else {
> 
64718a61323,61324
> #line 464
>   return ((long )pbp - (long )pb);
64721,64722c61327,61329
< #line 493 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_lock_killable_lock(struct mutex *lock ) 
---
> #line 467 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared"
> static void drbd_pr_state_change(struct drbd_conf *mdev , union drbd_state os , union drbd_state ns ,
>                                  enum chg_state_flags flags ) 
64724c61331,61336
<   int nondetermined ;
---
>   char pb[300U] ;
>   char *pbp ;
>   long tmp ;
>   int tmp___0 ;
>   int tmp___1 ;
>   int tmp___2 ;
64727,64728c61339,61351
< #line 498
<   if (ldv_mutex_lock == 1) {
---
> #line 471
>   pbp = (char *)(& pb);
> #line 473
>   tmp = print_state_change(pbp, os, ns, (enum chg_state_flags )((unsigned int )flags ^ 992U));
> #line 473
>   pbp = pbp + (unsigned long )tmp;
> #line 475
>   if ((int )ns.ldv_40604.aftr_isp != (int )os.ldv_40604.aftr_isp) {
> #line 476
>     tmp___0 = sprintf(pbp, "aftr_isp( %d -> %d ) ", (int )os.ldv_40604.aftr_isp, (int )ns.ldv_40604.aftr_isp);
> #line 476
>     pbp = pbp + (unsigned long )tmp___0;
>   } else {
64729a61353,61359
>   }
> #line 479
>   if ((int )ns.ldv_40604.peer_isp != (int )os.ldv_40604.peer_isp) {
> #line 480
>     tmp___1 = sprintf(pbp, "peer_isp( %d -> %d ) ", (int )os.ldv_40604.peer_isp, (int )ns.ldv_40604.peer_isp);
> #line 480
>     pbp = pbp + (unsigned long )tmp___1;
64731,64732c61361
< #line 498
<     ldv_error();
---
> 
64734,64741c61363,61368
< #line 501
<   nondetermined = ldv_undef_int();
< #line 504
<   if (nondetermined) {
< #line 507
<     ldv_mutex_lock = 2;
< #line 509
<     return (0);
---
> #line 483
>   if ((int )ns.ldv_40604.user_isp != (int )os.ldv_40604.user_isp) {
> #line 484
>     tmp___2 = sprintf(pbp, "user_isp( %d -> %d ) ", (int )os.ldv_40604.user_isp, (int )ns.ldv_40604.user_isp);
> #line 484
>     pbp = pbp + (unsigned long )tmp___2;
64743,64744c61370,61377
< #line 514
<     return (-4);
---
> 
>   }
> #line 488
>   if ((unsigned long )((char *)(& pb)) != (unsigned long )pbp) {
> #line 489
>     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "%s\n", (char *)(& pb));
>   } else {
> 
64745a61379,61380
> #line 490
>   return;
64748,64749c61383,61385
< #line 519 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< void ldv_mutex_lock_lock(struct mutex *lock ) 
---
> #line 492 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared"
> static void conn_pr_state_change(struct drbd_tconn *tconn , union drbd_state os ,
>                                  union drbd_state ns , enum chg_state_flags flags ) 
64751c61387,61394
< 
---
>   char pb[300U] ;
>   char *pbp ;
>   long tmp ;
>   bool tmp___0 ;
>   bool tmp___1 ;
>   int tmp___2 ;
>   bool tmp___3 ;
>   bool tmp___4 ;
64754,64755c61397,61417
< #line 522
<   if (ldv_mutex_lock == 1) {
---
> #line 496
>   pbp = (char *)(& pb);
> #line 498
>   tmp = print_state_change(pbp, os, ns, flags);
> #line 498
>   pbp = pbp + (unsigned long )tmp;
> #line 500
>   tmp___3 = is_susp(ns);
> #line 500
>   tmp___4 = is_susp(os);
> #line 500
>   if ((int )tmp___3 != (int )tmp___4 && ((unsigned int )flags & 1024U) != 0U) {
> #line 501
>     tmp___0 = is_susp(ns);
> #line 501
>     tmp___1 = is_susp(os);
> #line 501
>     tmp___2 = sprintf(pbp, "susp( %d -> %d ) ", (int )tmp___1, (int )tmp___0);
> #line 501
>     pbp = pbp + (unsigned long )tmp___2;
>   } else {
64756a61419,61423
>   }
> #line 505
>   if ((unsigned long )((char *)(& pb)) != (unsigned long )pbp) {
> #line 506
>     printk("\016d-con %s: %s\n", tconn->name, (char *)(& pb));
64758,64759c61425
< #line 522
<     ldv_error();
---
> 
64761,64763c61427
< #line 524
<   ldv_mutex_lock = 2;
< #line 525
---
> #line 507
64767,64768c61431,61432
< #line 528 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_trylock_lock(struct mutex *lock ) 
---
> #line 516 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared"
> static enum drbd_state_rv is_valid_state(struct drbd_conf *mdev , union drbd_state ns ) 
64770c61434,61446
<   int is_mutex_held_by_another_thread ;
---
>   enum drbd_fencing_p fp ;
>   enum drbd_state_rv rv ;
>   struct net_conf *nc ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
>   int tmp___1 ;
>   struct net_conf *_________p1___0 ;
>   bool __warned___0 ;
>   int tmp___2 ;
>   int tmp___3 ;
>   enum drbd_role tmp___4 ;
64773,64774c61449,61474
< #line 533
<   if (ldv_mutex_lock == 1) {
---
> #line 521
>   rv = 1;
> #line 524
>   rcu_read_lock();
> #line 525
>   fp = FP_DONT_CARE;
> #line 526
>   tmp___1 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 526
>   if (tmp___1 != 0) {
> #line 527
>     _________p1 = *((struct disk_conf * volatile  *)(& (mdev->ldev)->disk_conf));
> #line 527
>     tmp = debug_lockdep_rcu_enabled();
> #line 527
>     if (tmp != 0 && ! __warned) {
> #line 527
>       tmp___0 = rcu_read_lock_held();
> #line 527
>       if (tmp___0 == 0 && 1) {
> #line 527
>         __warned = 1;
> #line 527
>         lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared",
>                                527, "suspicious rcu_dereference_check() usage");
>       } else {
64775a61476,61483
>       }
>     } else {
> 
>     }
> #line 527
>     fp = (enum drbd_fencing_p )_________p1->fencing;
> #line 528
>     put_ldev(mdev);
64777,64778c61485
< #line 533
<     ldv_error();
---
> 
64780,64785c61487,61504
< #line 536
<   is_mutex_held_by_another_thread = ldv_undef_int();
< #line 539
<   if (is_mutex_held_by_another_thread) {
< #line 542
<     return (0);
---
> #line 531
>   _________p1___0 = *((struct net_conf * volatile  *)(& (mdev->tconn)->net_conf));
> #line 531
>   tmp___2 = debug_lockdep_rcu_enabled();
> #line 531
>   if (tmp___2 != 0 && ! __warned___0) {
> #line 531
>     tmp___3 = rcu_read_lock_held();
> #line 531
>     if (tmp___3 == 0 && 1) {
> #line 531
>       __warned___0 = 1;
> #line 531
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared",
>                              531, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
64787,64790c61506
< #line 547
<     ldv_mutex_lock = 2;
< #line 549
<     return (1);
---
> 
64792,64797c61508,61525
< }
< }
< #line 554 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_atomic_dec_and_mutex_lock_lock(atomic_t *cnt , struct mutex *lock ) 
< { 
<   int atomic_value_after_dec ;
---
> #line 531
>   nc = _________p1___0;
> #line 532
>   if ((unsigned long )nc != (unsigned long )((struct net_conf *)0)) {
> #line 533
>     if ((int )((signed char )nc->two_primaries) == 0 && (unsigned int )*((unsigned char *)(& ns) + 0UL) == 1U) {
> #line 534
>       if ((unsigned int )*((unsigned char *)(& ns) + 0UL) == 4U) {
> #line 535
>         rv = SS_TWO_PRIMARIES;
>       } else {
> #line 536
>         tmp___4 = conn_highest_peer(mdev->tconn);
> #line 536
>         if ((unsigned int )tmp___4 == 1U) {
> #line 537
>           rv = SS_O_VOL_PEER_PRI;
>         } else {
64799,64801c61527,61529
<   {
< #line 559
<   if (ldv_mutex_lock == 1) {
---
>         }
>       }
>     } else {
64802a61531
>     }
64804,64805c61533
< #line 559
<     ldv_error();
---
> 
64806a61535,61568
> #line 541
>   if ((int )rv <= 0) {
> 
>   } else
> #line 543
>   if ((unsigned int )*((unsigned char *)(& ns) + 0UL) == 2U && mdev->open_cnt != 0) {
> #line 544
>     rv = SS_DEVICE_IN_USE;
>   } else
> #line 546
>   if (((unsigned int )*((unsigned char *)(& ns) + 0UL) == 1U && (int )ns.ldv_40604.conn <= 9) && (int )ns.ldv_40604.disk <= 7) {
> #line 547
>     rv = SS_NO_UP_TO_DATE_DISK;
>   } else
> #line 549
>   if ((((int )fp > 0 && (unsigned int )*((unsigned char *)(& ns) + 0UL) == 1U) && (int )ns.ldv_40604.conn <= 9) && (int )ns.ldv_40604.pdsk > 5) {
> #line 551
>     rv = SS_PRIMARY_NOP;
>   } else
> #line 553
>   if (((unsigned int )*((unsigned char *)(& ns) + 0UL) == 1U && (int )ns.ldv_40604.disk <= 4) && (int )ns.ldv_40604.pdsk <= 4) {
> #line 554
>     rv = SS_NO_UP_TO_DATE_DISK;
>   } else
> #line 556
>   if ((int )ns.ldv_40604.conn > 10 && (int )ns.ldv_40604.disk <= 3) {
> #line 557
>     rv = SS_NO_LOCAL_DISK;
>   } else
> #line 559
>   if ((int )ns.ldv_40604.conn > 10 && (int )ns.ldv_40604.pdsk <= 3) {
> #line 560
>     rv = SS_NO_REMOTE_DISK;
>   } else
64808c61570,61573
<   atomic_value_after_dec = ldv_undef_int();
---
>   if (((int )ns.ldv_40604.conn > 10 && (int )ns.ldv_40604.disk <= 7) && (int )ns.ldv_40604.pdsk <= 7) {
> #line 563
>     rv = SS_NO_UP_TO_DATE_DISK;
>   } else
64810,64812c61575
<   if (atomic_value_after_dec == 0) {
< #line 568
<     ldv_mutex_lock = 2;
---
>   if (((((unsigned int )*((unsigned short *)(& ns) + 0UL) == 160U || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 208U) || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 256U) || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 320U) && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 10U) {
64814c61577,61592
<     return (1);
---
>     rv = SS_CONNECTED_OUTDATES;
>   } else
> #line 572
>   if (((unsigned int )*((unsigned short *)(& ns) + 0UL) == 288U || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 304U) && (int )((signed char )nc->verify_alg[0]) == 0) {
> #line 574
>     rv = SS_NO_VERIFY_ALG;
>   } else
> #line 576
>   if (((unsigned int )*((unsigned short *)(& ns) + 0UL) == 288U || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 304U) && (mdev->tconn)->agreed_pro_version <= 87) {
> #line 578
>     rv = SS_NOT_SUPPORTED;
>   } else
> #line 580
>   if ((int )ns.ldv_40604.conn > 9 && *((unsigned int *)(& ns) + 0UL) == 49152U) {
> #line 581
>     rv = SS_CONNECTED_OUTDATES;
64818,64819c61596,61599
< #line 574
<   return (0);
---
> #line 583
>   rcu_read_unlock();
> #line 585
>   return (rv);
64822,64823c61602,61604
< #line 579 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_is_locked_lock(struct mutex *lock ) 
---
> #line 597 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared"
> static enum drbd_state_rv is_valid_soft_transition(union drbd_state os , union drbd_state ns ,
>                                                    struct drbd_tconn *tconn ) 
64825c61606,61607
<   int nondetermined ;
---
>   enum drbd_state_rv rv ;
>   int tmp ;
64828,64840c61610,61613
< #line 583
<   if (ldv_mutex_lock == 1) {
< #line 586
<     nondetermined = ldv_undef_int();
< #line 589
<     if (nondetermined) {
< #line 592
<       return (0);
<     } else {
< #line 597
<       return (1);
<     }
<   } else {
---
> #line 599
>   rv = 1;
> #line 601
>   if (((unsigned int )*((unsigned short *)(& ns) + 0UL) == 192U || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 176U) && (int )os.ldv_40604.conn > 10) {
64842c61615,61617
<     return (1);
---
>     rv = SS_RESYNC_RUNNING;
>   } else {
> 
64844,64848c61619,61623
< }
< }
< #line 608 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< void ldv_mutex_unlock_lock(struct mutex *lock ) 
< { 
---
> #line 605
>   if ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 16U && (unsigned int )*((unsigned short *)(& os) + 0UL) == 0U) {
> #line 606
>     rv = SS_ALREADY_STANDALONE;
>   } else {
64849a61625,61630
>   }
> #line 608
>   if ((int )ns.ldv_40604.disk > 1 && (unsigned int )*((unsigned char *)(& os) + 1UL) == 0U) {
> #line 609
>     rv = SS_IS_DISKLESS;
>   } else {
64851c61632
<   {
---
>   }
64853,64854c61634,61636
<   if (ldv_mutex_lock == 2) {
< 
---
>   if ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 128U && (int )os.ldv_40604.conn <= 1) {
> #line 612
>     rv = SS_NO_NET_CONFIG;
64856,64857c61638
< #line 611
<     ldv_error();
---
> 
64859,64860d61639
< #line 613
<   ldv_mutex_lock = 1;
64862,64870c61641,61644
<   return;
< }
< }
< #line 616 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< static int ldv_mutex_mtx_of_percpu_rw_semaphore  ;
< #line 619 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_lock_interruptible_mtx_of_percpu_rw_semaphore(struct mutex *lock ) 
< { 
<   int nondetermined ;
---
>   if (((unsigned int )*((unsigned char *)(& ns) + 1UL) == 10U && (int )os.ldv_40604.disk <= 4) && (unsigned int )*((unsigned char *)(& os) + 1UL) != 2U) {
> #line 615
>     rv = SS_LOWER_THAN_OUTDATED;
>   } else {
64872,64874c61646,61651
<   {
< #line 624
<   if (ldv_mutex_mtx_of_percpu_rw_semaphore == 1) {
---
>   }
> #line 617
>   if ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 16U && (unsigned int )*((unsigned short *)(& os) + 0UL) == 32U) {
> #line 618
>     rv = SS_IN_TRANSIENT_STATE;
>   } else {
64875a61653,61659
>   }
> #line 625
>   tmp = constant_test_bit(10U, (unsigned long const volatile   *)(& tconn->flags));
> #line 625
>   if (tmp != 0 && ((unsigned int )*((unsigned short *)(& os) + 0UL) != 144U && ((unsigned int )*((unsigned short *)(& ns) + 0UL) != 144U || (unsigned int )*((unsigned short *)(& os) + 0UL) != 128U))) {
> #line 628
>     rv = SS_IN_TRANSIENT_STATE;
64877,64878c61661
< #line 624
<     ldv_error();
---
> 
64880,64881d61662
< #line 627
<   nondetermined = ldv_undef_int();
64883c61664,61669
<   if (nondetermined) {
---
>   if (((unsigned int )*((unsigned short *)(& ns) + 0UL) == 288U || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 304U) && (int )os.ldv_40604.conn <= 9) {
> #line 631
>     rv = SS_NEED_CONNECTION;
>   } else {
> 
>   }
64885c61671
<     ldv_mutex_mtx_of_percpu_rw_semaphore = 2;
---
>   if ((((unsigned int )*((unsigned short *)(& ns) + 0UL) == 288U || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 304U) && (int )ns.ldv_40604.conn != (int )os.ldv_40604.conn) && (int )os.ldv_40604.conn > 10) {
64887c61673
<     return (0);
---
>     rv = SS_RESYNC_RUNNING;
64889,64890c61675,61689
< #line 640
<     return (-4);
---
> 
>   }
> #line 637
>   if (((unsigned int )*((unsigned short *)(& ns) + 0UL) == 176U || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 192U) && (int )os.ldv_40604.conn <= 9) {
> #line 639
>     rv = SS_NEED_CONNECTION;
>   } else {
> 
>   }
> #line 641
>   if (((unsigned int )*((unsigned short *)(& ns) + 0UL) == 272U || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 256U) && (int )os.ldv_40604.conn <= 8) {
> #line 643
>     rv = SS_NEED_CONNECTION;
>   } else {
> 
64891a61691,61692
> #line 645
>   return (rv);
64894,64895c61695,61696
< #line 645 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_lock_killable_mtx_of_percpu_rw_semaphore(struct mutex *lock ) 
---
> #line 649 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared"
> static enum drbd_state_rv is_valid_conn_transition(enum drbd_conns oc , enum drbd_conns nc ) 
64897d61697
<   int nondetermined ;
64899,64901d61698
<   {
< #line 650
<   if (ldv_mutex_mtx_of_percpu_rw_semaphore == 1) {
64902a61700,61704
>   {
> #line 652
>   if ((unsigned int )oc == (unsigned int )nc) {
> #line 653
>     return (SS_NOTHING_TO_DO);
64904,64905c61706
< #line 650
<     ldv_error();
---
> 
64907,64908d61707
< #line 653
<   nondetermined = ldv_undef_int();
64910,64912c61709,61716
<   if (nondetermined) {
< #line 659
<     ldv_mutex_mtx_of_percpu_rw_semaphore = 2;
---
>   if ((unsigned int )oc == 0U && (unsigned int )nc == 1U) {
> #line 657
>     return (SS_ALREADY_STANDALONE);
>   } else {
> 
>   }
> #line 660
>   if ((unsigned int )oc == 0U && (unsigned int )nc != 2U) {
64914c61718
<     return (0);
---
>     return (SS_NEED_CONNECTION);
64916,64917c61720
< #line 666
<     return (-4);
---
> 
64919,64923c61722,61726
< }
< }
< #line 671 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< void ldv_mutex_lock_mtx_of_percpu_rw_semaphore(struct mutex *lock ) 
< { 
---
> #line 665
>   if ((unsigned int )oc <= 8U && (unsigned int )nc > 9U) {
> #line 666
>     return (SS_NEED_CONNECTION);
>   } else {
64924a61728,61733
>   }
> #line 669
>   if ((((unsigned int )oc > 2U && (unsigned int )oc <= 7U) && (unsigned int )nc != 2U) && (unsigned int )nc != 1U) {
> #line 670
>     return (SS_IN_TRANSIENT_STATE);
>   } else {
64926c61735,61737
<   {
---
>   }
> #line 673
>   if ((unsigned int )oc == 1U && (unsigned int )nc != 0U) {
64928,64929c61739
<   if (ldv_mutex_mtx_of_percpu_rw_semaphore == 1) {
< 
---
>     return (SS_IN_TRANSIENT_STATE);
64931,64932c61741
< #line 674
<     ldv_error();
---
> 
64935,64937c61744
<   ldv_mutex_mtx_of_percpu_rw_semaphore = 2;
< #line 677
<   return;
---
>   return (SS_SUCCESS);
64940,64941c61747,61748
< #line 680 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_trylock_mtx_of_percpu_rw_semaphore(struct mutex *lock ) 
---
> #line 689 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared"
> static enum drbd_state_rv is_valid_transition(union drbd_state os , union drbd_state ns ) 
64943c61750
<   int is_mutex_held_by_another_thread ;
---
>   enum drbd_state_rv rv ;
64946,64948c61753,61758
< #line 685
<   if (ldv_mutex_mtx_of_percpu_rw_semaphore == 1) {
< 
---
> #line 693
>   rv = is_valid_conn_transition((enum drbd_conns )os.ldv_40604.conn, (enum drbd_conns )ns.ldv_40604.conn);
> #line 696
>   if ((unsigned int )*((unsigned char *)(& ns) + 1UL) == 4U && (unsigned int )*((unsigned char *)(& os) + 1UL) == 0U) {
> #line 697
>     rv = SS_IS_DISKLESS;
64950,64951c61760
< #line 685
<     ldv_error();
---
> 
64953,64959d61761
< #line 688
<   is_mutex_held_by_another_thread = ldv_undef_int();
< #line 691
<   if (is_mutex_held_by_another_thread) {
< #line 694
<     return (0);
<   } else {
64961,64964c61763
<     ldv_mutex_mtx_of_percpu_rw_semaphore = 2;
< #line 701
<     return (1);
<   }
---
>   return (rv);
64967,64968c61766,61767
< #line 706 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_atomic_dec_and_mutex_lock_mtx_of_percpu_rw_semaphore(atomic_t *cnt , struct mutex *lock ) 
---
> #line 702 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared"
> static void print_sanitize_warnings(struct drbd_conf *mdev , enum sanitize_state_warnings warn ) 
64970c61769
<   int atomic_value_after_dec ;
---
>   char const   *msg_table[6U] ;
64973,64979c61772,61785
< #line 711
<   if (ldv_mutex_mtx_of_percpu_rw_semaphore == 1) {
< 
<   } else {
< #line 711
<     ldv_error();
<   }
---
> #line 704
>   msg_table[0] = "";
> #line 704
>   msg_table[1] = "Online-verify aborted.";
> #line 704
>   msg_table[2] = "Resync aborted.";
> #line 704
>   msg_table[3] = "Connection lost while negotiating, no data!";
> #line 704
>   msg_table[4] = "Implicitly upgraded disk";
> #line 704
>   msg_table[5] = "Implicitly upgraded pdsk";
> #line 713
>   if ((unsigned int )warn != 0U) {
64981,64987c61787
<   atomic_value_after_dec = ldv_undef_int();
< #line 717
<   if (atomic_value_after_dec == 0) {
< #line 720
<     ldv_mutex_mtx_of_percpu_rw_semaphore = 2;
< #line 722
<     return (1);
---
>     dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "%s\n", msg_table[(unsigned int )warn]);
64991,64992c61791,61792
< #line 726
<   return (0);
---
> #line 715
>   return;
64995,64996c61795,61797
< #line 731 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_is_locked_mtx_of_percpu_rw_semaphore(struct mutex *lock ) 
---
> #line 727 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared"
> static union drbd_state sanitize_state(struct drbd_conf *mdev , union drbd_state ns ,
>                                        enum sanitize_state_warnings *warn ) 
64998c61799,61809
<   int nondetermined ;
---
>   enum drbd_fencing_p fp ;
>   enum drbd_disk_state disk_min ;
>   enum drbd_disk_state disk_max ;
>   enum drbd_disk_state pdsk_min ;
>   enum drbd_disk_state pdsk_max ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
>   int tmp___1 ;
>   int tmp___2 ;
65001,65002c61812,61824
< #line 735
<   if (ldv_mutex_mtx_of_percpu_rw_semaphore == 1) {
---
> #line 733
>   if ((unsigned long )warn != (unsigned long )((enum sanitize_state_warnings *)0)) {
> #line 734
>     *warn = NO_WARNING;
>   } else {
> 
>   }
> #line 736
>   fp = FP_DONT_CARE;
> #line 737
>   tmp___1 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 737
>   if (tmp___1 != 0) {
65004,65008c61826,61844
<     nondetermined = ldv_undef_int();
< #line 741
<     if (nondetermined) {
< #line 744
<       return (0);
---
>     rcu_read_lock();
> #line 739
>     _________p1 = *((struct disk_conf * volatile  *)(& (mdev->ldev)->disk_conf));
> #line 739
>     tmp = debug_lockdep_rcu_enabled();
> #line 739
>     if (tmp != 0 && ! __warned) {
> #line 739
>       tmp___0 = rcu_read_lock_held();
> #line 739
>       if (tmp___0 == 0 && 1) {
> #line 739
>         __warned = 1;
> #line 739
>         lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared",
>                                739, "suspicious rcu_dereference_check() usage");
>       } else {
> 
>       }
65010,65011c61846
< #line 749
<       return (1);
---
> 
65012a61848,61853
> #line 739
>     fp = (enum drbd_fencing_p )_________p1->fencing;
> #line 740
>     rcu_read_unlock();
> #line 741
>     put_ldev(mdev);
65014,65015c61855
< #line 755
<     return (1);
---
> 
65017,65021c61857,61867
< }
< }
< #line 760 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< void ldv_mutex_unlock_mtx_of_percpu_rw_semaphore(struct mutex *lock ) 
< { 
---
> #line 745
>   if ((int )ns.ldv_40604.conn <= 9) {
> #line 746
>     ns.ldv_40604.peer_isp = 0U;
> #line 747
>     ns.ldv_40604.peer = 0U;
> #line 748
>     if ((int )ns.ldv_40604.pdsk > 6 || (int )ns.ldv_40604.pdsk <= 3) {
> #line 749
>       ns.ldv_40604.pdsk = 6U;
>     } else {
65022a61869,61870
>     }
>   } else {
65024,65026c61872,61877
<   {
< #line 763
<   if (ldv_mutex_mtx_of_percpu_rw_semaphore == 2) {
---
>   }
> #line 753
>   if (((unsigned int )*((unsigned short *)(& ns) + 0UL) == 0U && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 0U) && (unsigned int )*((unsigned char *)(& ns) + 0UL) == 2U) {
> #line 754
>     ns.ldv_40604.aftr_isp = 0U;
>   } else {
65027a61879,61890
>   }
> #line 758
>   if ((int )ns.ldv_40604.conn > 10 && ((int )ns.ldv_40604.disk <= 2 || (int )ns.ldv_40604.pdsk <= 2)) {
> #line 759
>     if ((unsigned long )warn != (unsigned long )((enum sanitize_state_warnings *)0)) {
> #line 760
>       *warn = (unsigned int )*((unsigned short *)(& ns) + 0UL) == 288U || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 304U ? ABORTED_ONLINE_VERIFY : ABORTED_RESYNC;
>     } else {
> 
>     }
> #line 762
>     ns.ldv_40604.conn = 10U;
65029,65030c61892
< #line 763
<     ldv_error();
---
> 
65032,65033d61893
< #line 765
<   ldv_mutex_mtx_of_percpu_rw_semaphore = 1;
65035,65043c61895,61911
<   return;
< }
< }
< #line 768 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< static int ldv_mutex_mutex_of_device  ;
< #line 771 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_lock_interruptible_mutex_of_device(struct mutex *lock ) 
< { 
<   int nondetermined ;
---
>   if ((int )ns.ldv_40604.conn <= 9 && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 6U) {
> #line 766
>     tmp___2 = _get_ldev_if_state(mdev, D_NEGOTIATING);
> #line 766
>     if (tmp___2 != 0) {
> #line 768
>       if (mdev->ed_uuid == (mdev->ldev)->md.uuid[0]) {
> #line 769
>         ns.ldv_40604.disk = mdev->new_state_tmp.ldv_40604.disk;
> #line 770
>         ns.ldv_40604.pdsk = mdev->new_state_tmp.ldv_40604.pdsk;
>       } else {
> #line 772
>         if ((unsigned long )warn != (unsigned long )((enum sanitize_state_warnings *)0)) {
> #line 773
>           *warn = CONNECTION_LOST_NEGOTIATING;
>         } else {
65045,65047c61913,61921
<   {
< #line 776
<   if (ldv_mutex_mutex_of_device == 1) {
---
>         }
> #line 774
>         ns.ldv_40604.disk = 0U;
> #line 775
>         ns.ldv_40604.pdsk = 6U;
>       }
> #line 777
>       put_ldev(mdev);
>     } else {
65048a61923
>     }
65050,65051c61925
< #line 776
<     ldv_error();
---
> 
65053,65054c61927,61928
< #line 779
<   nondetermined = ldv_undef_int();
---
> #line 781
>   if ((int )ns.ldv_40604.conn > 9 && (int )ns.ldv_40604.conn <= 21) {
65056c61930,61937
<   if (nondetermined) {
---
>     if ((unsigned int )*((unsigned char *)(& ns) + 1UL) == 14U || (unsigned int )*((unsigned char *)(& ns) + 1UL) == 10U) {
> #line 783
>       ns.ldv_40604.disk = 8U;
>     } else {
> 
>     }
> #line 784
>     if (*((unsigned int *)(& ns) + 0UL) == 57344U || *((unsigned int *)(& ns) + 0UL) == 40960U) {
65058,65060c61939,61942
<     ldv_mutex_mutex_of_device = 2;
< #line 787
<     return (0);
---
>       ns.ldv_40604.pdsk = 8U;
>     } else {
> 
>     }
65061a61944,61951
> 
>   }
> #line 789
>   disk_min = D_DISKLESS;
> #line 790
>   disk_max = D_UP_TO_DATE;
> #line 791
>   pdsk_min = D_INCONSISTENT;
65063c61953,62042
<     return (-4);
---
>   pdsk_max = D_UNKNOWN;
> #line 793
>   switch ((unsigned int )ns.ldv_40604.conn) {
>   case 14U: ;
>   case 21U: ;
>   case 12U: ;
>   case 15U: ;
>   case 23U: 
> #line 799
>   disk_min = D_INCONSISTENT;
> #line 800
>   disk_max = D_OUTDATED;
> #line 801
>   pdsk_min = D_UP_TO_DATE;
> #line 802
>   pdsk_max = D_UP_TO_DATE;
> #line 803
>   goto ldv_52081;
>   case 18U: ;
>   case 19U: 
> #line 806
>   disk_min = D_UP_TO_DATE;
> #line 807
>   disk_max = D_UP_TO_DATE;
> #line 808
>   pdsk_min = D_UP_TO_DATE;
> #line 809
>   pdsk_max = D_UP_TO_DATE;
> #line 810
>   goto ldv_52081;
>   case 10U: 
> #line 812
>   disk_min = D_DISKLESS;
> #line 813
>   disk_max = D_UP_TO_DATE;
> #line 814
>   pdsk_min = D_DISKLESS;
> #line 815
>   pdsk_max = D_UP_TO_DATE;
> #line 816
>   goto ldv_52081;
>   case 13U: ;
>   case 20U: ;
>   case 11U: ;
>   case 22U: 
> #line 821
>   disk_min = D_UP_TO_DATE;
> #line 822
>   disk_max = D_UP_TO_DATE;
> #line 823
>   pdsk_min = D_INCONSISTENT;
> #line 824
>   pdsk_max = D_CONSISTENT;
> #line 825
>   goto ldv_52081;
>   case 17U: 
> #line 827
>   disk_min = D_INCONSISTENT;
> #line 828
>   disk_max = D_INCONSISTENT;
> #line 829
>   pdsk_min = D_UP_TO_DATE;
> #line 830
>   pdsk_max = D_UP_TO_DATE;
> #line 831
>   goto ldv_52081;
>   case 16U: 
> #line 833
>   disk_min = D_UP_TO_DATE;
> #line 834
>   disk_max = D_UP_TO_DATE;
> #line 835
>   pdsk_min = D_INCONSISTENT;
> #line 836
>   pdsk_max = D_INCONSISTENT;
> #line 837
>   goto ldv_52081;
>   case 0U: ;
>   case 1U: ;
>   case 2U: ;
>   case 3U: ;
>   case 4U: ;
>   case 5U: ;
>   case 6U: ;
>   case 7U: ;
>   case 8U: ;
>   case 9U: ;
>   case 31U: ;
> #line 849
>   goto ldv_52081;
65065,65070c62044,62049
< }
< }
< #line 797 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_lock_killable_mutex_of_device(struct mutex *lock ) 
< { 
<   int nondetermined ;
---
>   ldv_52081: ;
> #line 851
>   if ((unsigned int )ns.ldv_40604.disk > (unsigned int )disk_max) {
> #line 852
>     ns.ldv_40604.disk = (unsigned char )disk_max;
>   } else {
65072,65074c62051,62058
<   {
< #line 802
<   if (ldv_mutex_mutex_of_device == 1) {
---
>   }
> #line 854
>   if ((unsigned int )ns.ldv_40604.disk < (unsigned int )disk_min) {
> #line 855
>     if ((unsigned long )warn != (unsigned long )((enum sanitize_state_warnings *)0)) {
> #line 856
>       *warn = IMPLICITLY_UPGRADED_DISK;
>     } else {
65075a62060,62062
>     }
> #line 857
>     ns.ldv_40604.disk = (unsigned char )disk_min;
65077,65078c62064
< #line 802
<     ldv_error();
---
> 
65080,65087c62066,62069
< #line 805
<   nondetermined = ldv_undef_int();
< #line 808
<   if (nondetermined) {
< #line 811
<     ldv_mutex_mutex_of_device = 2;
< #line 813
<     return (0);
---
> #line 859
>   if ((unsigned int )ns.ldv_40604.pdsk > (unsigned int )pdsk_max) {
> #line 860
>     ns.ldv_40604.pdsk = (unsigned char )pdsk_max;
65089,65090c62071,62099
< #line 818
<     return (-4);
---
> 
>   }
> #line 862
>   if ((unsigned int )ns.ldv_40604.pdsk < (unsigned int )pdsk_min) {
> #line 863
>     if ((unsigned long )warn != (unsigned long )((enum sanitize_state_warnings *)0)) {
> #line 864
>       *warn = IMPLICITLY_UPGRADED_PDSK;
>     } else {
> 
>     }
> #line 865
>     ns.ldv_40604.pdsk = (unsigned char )pdsk_min;
>   } else {
> 
>   }
> #line 868
>   if ((int )fp == 2 && (((unsigned int )*((unsigned char *)(& ns) + 0UL) == 1U && (int )ns.ldv_40604.conn <= 9) && (int )ns.ldv_40604.pdsk > 5)) {
> #line 870
>     ns.ldv_40604.susp_fen = 1U;
>   } else {
> 
>   }
> #line 872
>   if ((mdev->tconn)->res_opts.on_no_data == 1U && (((unsigned int )*((unsigned char *)(& ns) + 0UL) == 1U && (int )ns.ldv_40604.disk <= 7) && (int )ns.ldv_40604.pdsk <= 7)) {
> #line 874
>     ns.ldv_40604.susp_nod = 1U;
>   } else {
> 
65091a62101,62134
> #line 876
>   if (((unsigned int )*((unsigned char *)(& ns) + 2UL) != 0U || (unsigned int )*((unsigned char *)(& ns) + 2UL) != 0U) || (unsigned int )*((unsigned char *)(& ns) + 2UL) != 0U) {
> #line 877
>     if ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 256U) {
> #line 878
>       ns.ldv_40604.conn = 20U;
>     } else {
> 
>     }
> #line 879
>     if ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 272U) {
> #line 880
>       ns.ldv_40604.conn = 21U;
>     } else {
> 
>     }
>   } else {
> #line 882
>     if ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 320U) {
> #line 883
>       ns.ldv_40604.conn = 16U;
>     } else {
> 
>     }
> #line 884
>     if ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 336U) {
> #line 885
>       ns.ldv_40604.conn = 17U;
>     } else {
> 
>     }
>   }
> #line 888
>   return (ns);
65094,65095c62137,62138
< #line 823 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< void ldv_mutex_lock_mutex_of_device(struct mutex *lock ) 
---
> #line 891 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared"
> void drbd_resume_al(struct drbd_conf *mdev ) 
65097c62140
< 
---
>   int tmp ;
65100,65102c62143,62148
< #line 826
<   if (ldv_mutex_mutex_of_device == 1) {
< 
---
> #line 893
>   tmp = test_and_clear_bit(18, (unsigned long volatile   *)(& mdev->flags));
> #line 893
>   if (tmp != 0) {
> #line 894
>     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Resumed AL updates\n");
65104,65105c62150
< #line 826
<     ldv_error();
---
> 
65107,65109c62152
< #line 828
<   ldv_mutex_mutex_of_device = 2;
< #line 829
---
> #line 895
65113,65114c62156,62157
< #line 832 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_trylock_mutex_of_device(struct mutex *lock ) 
---
> #line 898 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared"
> static void set_ov_position(struct drbd_conf *mdev , enum drbd_conns cs ) 
65116c62159
<   int is_mutex_held_by_another_thread ;
---
>   unsigned long bit ;
65119,65121c62162,62165
< #line 837
<   if (ldv_mutex_mutex_of_device == 1) {
< 
---
> #line 900
>   if ((mdev->tconn)->agreed_pro_version <= 89) {
> #line 901
>     mdev->ov_start_sector = 0UL;
65123,65124c62167
< #line 837
<     ldv_error();
---
> 
65126,65131c62169,62176
< #line 840
<   is_mutex_held_by_another_thread = ldv_undef_int();
< #line 843
<   if (is_mutex_held_by_another_thread) {
< #line 846
<     return (0);
---
> #line 902
>   mdev->rs_total = drbd_bm_bits(mdev);
> #line 903
>   mdev->ov_position = 0UL;
> #line 904
>   if ((unsigned int )cs == 19U) {
> #line 910
>     mdev->ov_start_sector = 0xffffffffffffffffUL;
65133,65136c62178,62191
< #line 851
<     ldv_mutex_mutex_of_device = 2;
< #line 853
<     return (1);
---
> #line 912
>     bit = mdev->ov_start_sector >> 3;
> #line 913
>     if (mdev->rs_total <= bit) {
> #line 914
>       mdev->ov_start_sector = (mdev->rs_total - 1UL) << 3;
> #line 916
>       mdev->rs_total = 1UL;
>     } else {
> #line 918
>       mdev->rs_total = mdev->rs_total - bit;
>     }
> #line 919
>     mdev->ov_position = mdev->ov_start_sector;
65137a62193,62196
> #line 921
>   mdev->ov_left = mdev->rs_total;
> #line 922
>   return;
65140,65141c62199,62201
< #line 858 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_atomic_dec_and_mutex_lock_mutex_of_device(atomic_t *cnt , struct mutex *lock ) 
---
> #line 934 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared"
> enum drbd_state_rv __drbd_set_state(struct drbd_conf *mdev , union drbd_state ns ,
>                                     enum chg_state_flags flags , struct completion *done ) 
65143c62203,62215
<   int atomic_value_after_dec ;
---
>   union drbd_state os ;
>   enum drbd_state_rv rv ;
>   enum sanitize_state_warnings ssw ;
>   struct after_state_chg_work *ascw ;
>   enum drbd_state_rv tmp ;
>   bool tmp___0 ;
>   unsigned long tmp___1 ;
>   unsigned long now ;
>   int i ;
>   u32 mdf ;
>   int tmp___2 ;
>   int tmp___3 ;
>   void *tmp___4 ;
65146,65147c62218,62228
< #line 863
<   if (ldv_mutex_mutex_of_device == 1) {
---
> #line 938
>   rv = 1;
> #line 942
>   os = drbd_read_state(mdev);
> #line 944
>   ns = sanitize_state(mdev, ns, & ssw);
> #line 945
>   if (ns.i == os.i) {
> #line 946
>     return (SS_NOTHING_TO_DO);
>   } else {
65148a62230,62236
>   }
> #line 948
>   rv = is_valid_transition(os, ns);
> #line 949
>   if ((int )rv <= 0) {
> #line 950
>     return (rv);
65150,65151c62238
< #line 863
<     ldv_error();
---
> 
65153,65160c62240,62258
< #line 866
<   atomic_value_after_dec = ldv_undef_int();
< #line 869
<   if (atomic_value_after_dec == 0) {
< #line 872
<     ldv_mutex_mutex_of_device = 2;
< #line 874
<     return (1);
---
> #line 952
>   if (((unsigned int )flags & 1U) == 0U) {
> #line 956
>     rv = is_valid_state(mdev, ns);
> #line 957
>     if ((int )rv <= 0) {
> #line 961
>       tmp = is_valid_state(mdev, os);
> #line 961
>       if ((int )tmp == (int )rv) {
> #line 962
>         rv = is_valid_soft_transition(os, ns, mdev->tconn);
>       } else {
> #line 964
>         rv = is_valid_soft_transition(os, ns, mdev->tconn);
>       }
>     } else {
> 
>     }
65164,65165c62262,62561
< #line 878
<   return (0);
---
> #line 967
>   if ((int )rv <= 0) {
> #line 968
>     if (((unsigned int )flags & 2U) != 0U) {
> #line 969
>       print_st_err(mdev, os, ns, rv);
>     } else {
> 
>     }
> #line 970
>     return (rv);
>   } else {
> 
>   }
> #line 973
>   print_sanitize_warnings(mdev, ssw);
> #line 975
>   drbd_pr_state_change(mdev, os, ns, flags);
> #line 980
>   if (((unsigned int )flags & 1024U) == 0U) {
> #line 981
>     conn_pr_state_change(mdev->tconn, os, ns, (enum chg_state_flags )(((unsigned int )flags & 4294965279U) | 1024U));
>   } else {
> 
>   }
> #line 987
>   if (((unsigned int )*((unsigned char *)(& os) + 1UL) != 4U && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 4U) || ((unsigned int )*((unsigned char *)(& os) + 1UL) != 0U && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 0U)) {
> #line 989
>     atomic_inc(& mdev->local_cnt);
>   } else {
> 
>   }
> #line 991
>   mdev->state.i = ns.i;
> #line 992
>   (mdev->tconn)->susp = ns.ldv_40604.susp;
> #line 993
>   (mdev->tconn)->susp_nod = ns.ldv_40604.susp_nod;
> #line 994
>   (mdev->tconn)->susp_fen = ns.ldv_40604.susp_fen;
> #line 996
>   if ((unsigned int )*((unsigned char *)(& os) + 1UL) == 2U && (int )ns.ldv_40604.disk > 2) {
> #line 997
>     drbd_print_uuids(mdev, "attached to UUIDs");
>   } else {
> 
>   }
> #line 1000
>   if ((unsigned int )*((unsigned short *)(& os) + 0UL) == 144U && (unsigned int )*((unsigned short *)(& ns) + 0UL) != 144U) {
> #line 1000
>     tmp___0 = no_peer_wf_report_params(mdev->tconn);
> #line 1000
>     if ((int )tmp___0) {
> #line 1002
>       clear_bit(10, (unsigned long volatile   *)(& (mdev->tconn)->flags));
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1004
>   __wake_up(& mdev->misc_wait, 3U, 1, 0);
> #line 1005
>   __wake_up(& mdev->state_wait, 3U, 1, 0);
> #line 1006
>   __wake_up(& (mdev->tconn)->ping_wait, 3U, 1, 0);
> #line 1010
>   if (((unsigned int )*((unsigned short *)(& os) + 0UL) == 288U || (unsigned int )*((unsigned short *)(& os) + 0UL) == 304U) && (int )ns.ldv_40604.conn <= 10) {
> #line 1012
>     tmp___1 = drbd_bm_bits(mdev);
> #line 1012
>     mdev->ov_start_sector = (tmp___1 - mdev->ov_left) << 3;
> #line 1014
>     if (mdev->ov_left != 0UL) {
> #line 1015
>       _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Online Verify reached sector %llu\n",
>                 (unsigned long long )mdev->ov_start_sector);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1019
>   if (((unsigned int )*((unsigned short *)(& os) + 0UL) == 336U || (unsigned int )*((unsigned short *)(& os) + 0UL) == 320U) && ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 272U || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 256U)) {
> #line 1021
>     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Syncer continues.\n");
> #line 1022
>     mdev->rs_paused = mdev->rs_paused + (unsigned long )((long )jiffies - (long )mdev->rs_mark_time[mdev->rs_last_mark]);
> #line 1024
>     if ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 272U) {
> #line 1025
>       mod_timer(& mdev->resync_timer, jiffies);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1028
>   if (((unsigned int )*((unsigned short *)(& os) + 0UL) == 272U || (unsigned int )*((unsigned short *)(& os) + 0UL) == 256U) && ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 336U || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 320U)) {
> #line 1030
>     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Resync suspended\n");
> #line 1031
>     mdev->rs_mark_time[mdev->rs_last_mark] = jiffies;
>   } else {
> 
>   }
> #line 1034
>   if ((unsigned int )*((unsigned short *)(& os) + 0UL) == 160U && ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 288U || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 304U)) {
> #line 1036
>     now = jiffies;
> #line 1039
>     set_ov_position(mdev, (enum drbd_conns )ns.ldv_40604.conn);
> #line 1040
>     mdev->rs_start = now;
> #line 1041
>     mdev->rs_last_events = 0;
> #line 1042
>     mdev->rs_last_sect_ev = 0;
> #line 1043
>     mdev->ov_last_oos_size = 0UL;
> #line 1044
>     mdev->ov_last_oos_start = 0UL;
> #line 1046
>     i = 0;
> #line 1046
>     goto ldv_52123;
>     ldv_52122: 
> #line 1047
>     mdev->rs_mark_left[i] = mdev->ov_left;
> #line 1048
>     mdev->rs_mark_time[i] = now;
> #line 1046
>     i = i + 1;
>     ldv_52123: ;
> #line 1046
>     if (i <= 7) {
> #line 1047
>       goto ldv_52122;
>     } else {
> 
>     }
> #line 1051
>     drbd_rs_controller_reset(mdev);
> #line 1053
>     if ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 288U) {
> #line 1054
>       _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Starting Online Verify from sector %llu\n",
>                 (unsigned long long )mdev->ov_position);
> #line 1056
>       mod_timer(& mdev->resync_timer, jiffies);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1060
>   tmp___3 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 1060
>   if (tmp___3 != 0) {
> #line 1061
>     mdf = (mdev->ldev)->md.flags & 4294967176U;
> #line 1065
>     mdf = mdf & 4294967167U;
> #line 1066
>     tmp___2 = constant_test_bit(5U, (unsigned long const volatile   *)(& mdev->flags));
> #line 1066
>     if (tmp___2 != 0) {
> #line 1067
>       mdf = mdf | 64U;
>     } else {
> 
>     }
> #line 1068
>     if ((unsigned int )*((unsigned char *)mdev + 748UL) == 1U || ((int )mdev->state.ldv_50103.pdsk <= 3 && (unsigned int )*((unsigned char *)mdev + 748UL) == 4U)) {
> #line 1070
>       mdf = mdf | 2U;
>     } else {
> 
>     }
> #line 1071
>     if ((int )mdev->state.ldv_50103.conn > 9) {
> #line 1072
>       mdf = mdf | 4U;
>     } else {
> 
>     }
> #line 1073
>     if ((int )mdev->state.ldv_50103.disk > 4) {
> #line 1074
>       mdf = mdf | 1U;
>     } else {
> 
>     }
> #line 1075
>     if ((int )mdev->state.ldv_50103.disk > 5) {
> #line 1076
>       mdf = mdf | 16U;
>     } else {
> 
>     }
> #line 1077
>     if ((int )mdev->state.ldv_50103.pdsk <= 5 && (int )mdev->state.ldv_50103.pdsk > 3) {
> #line 1078
>       mdf = mdf | 32U;
>     } else {
> 
>     }
> #line 1079
>     if ((mdev->ldev)->md.flags != mdf) {
> #line 1080
>       (mdev->ldev)->md.flags = mdf;
> #line 1081
>       drbd_md_mark_dirty(mdev);
>     } else {
> 
>     }
> #line 1083
>     if ((int )os.ldv_40604.disk <= 6 && (int )ns.ldv_40604.disk > 6) {
> #line 1084
>       drbd_set_ed_uuid(mdev, (mdev->ldev)->md.uuid[0]);
>     } else {
> 
>     }
> #line 1085
>     put_ldev(mdev);
>   } else {
> 
>   }
> #line 1089
>   if ((((unsigned int )*((unsigned char *)(& os) + 1UL) == 8U && *((unsigned int *)(& os) + 0UL) == 32768U) && (unsigned int )*((unsigned char *)(& os) + 0UL) == 8U) && (unsigned int )*((unsigned char *)(& ns) + 0UL) == 4U) {
> #line 1091
>     set_bit(6U, (unsigned long volatile   *)(& mdev->flags));
>   } else {
> 
>   }
> #line 1094
>   if ((unsigned int )*((unsigned short *)(& os) + 0UL) != 16U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 16U) {
> #line 1095
>     drbd_thread_stop_nowait(& (mdev->tconn)->receiver);
>   } else {
> 
>   }
> #line 1098
>   if ((unsigned int )*((unsigned short *)(& os) + 0UL) != 0U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 0U) {
> #line 1099
>     drbd_thread_stop_nowait(& (mdev->tconn)->receiver);
>   } else {
> 
>   }
> #line 1102
>   if (((int )os.ldv_40604.conn > 8 && (int )ns.ldv_40604.conn <= 7) && (int )ns.ldv_40604.conn > 2) {
> #line 1104
>     drbd_thread_restart_nowait(& (mdev->tconn)->receiver);
>   } else {
> 
>   }
> #line 1107
>   if ((int )os.ldv_40604.conn <= 9 && (int )ns.ldv_40604.conn > 9) {
> #line 1108
>     drbd_resume_al(mdev);
>   } else {
> 
>   }
> #line 1113
>   if (((unsigned int )*((unsigned char *)(& os) + 1UL) == 2U || (unsigned int )*((unsigned char *)(& os) + 1UL) == 6U) && (int )ns.ldv_40604.disk > 3) {
> #line 1115
>     mdev->last_reattach_jif = jiffies;
>   } else {
> 
>   }
> #line 1117
>   tmp___4 = kmalloc(56UL, 32U);
> #line 1117
>   ascw = (struct after_state_chg_work *)tmp___4;
> #line 1118
>   if ((unsigned long )ascw != (unsigned long )((struct after_state_chg_work *)0)) {
> #line 1119
>     ascw->os = os;
> #line 1120
>     ascw->ns = ns;
> #line 1121
>     ascw->flags = flags;
> #line 1122
>     ascw->w.cb = & w_after_state_ch;
> #line 1123
>     ascw->w.ldv_50388.mdev = mdev;
> #line 1124
>     ascw->done = done;
> #line 1125
>     drbd_queue_work(& (mdev->tconn)->sender_work, & ascw->w);
>   } else {
> #line 1127
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Could not kmalloc an ascw\n");
>   }
> #line 1130
>   return (rv);
65168,65169c62564,62565
< #line 883 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_is_locked_mutex_of_device(struct mutex *lock ) 
---
> #line 1133 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared"
> static int w_after_state_ch(struct drbd_work *w , int unused ) 
65171c62567,62569
<   int nondetermined ;
---
>   struct after_state_chg_work *ascw ;
>   struct drbd_work  const  *__mptr ;
>   struct drbd_conf *mdev ;
65174,65181c62572,62587
< #line 887
<   if (ldv_mutex_mutex_of_device == 1) {
< #line 890
<     nondetermined = ldv_undef_int();
< #line 893
<     if (nondetermined) {
< #line 896
<       return (0);
---
> #line 1136
>   __mptr = (struct drbd_work  const  *)w;
> #line 1136
>   ascw = (struct after_state_chg_work *)__mptr;
> #line 1137
>   mdev = w->ldv_50388.mdev;
> #line 1139
>   after_state_ch(mdev, ascw->os, ascw->ns, ascw->flags);
> #line 1140
>   if (((unsigned int )ascw->flags & 4U) != 0U) {
> #line 1141
>     if ((unsigned long )ascw->done == (unsigned long )((struct completion *)0)) {
> #line 1141
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( ascw->done != NULL ) in %s:%d\n",
>               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared",
>               1141);
65183,65184c62589
< #line 901
<       return (1);
---
> 
65185a62591,62592
> #line 1142
>     complete(ascw->done);
65187,65188c62594
< #line 907
<     return (1);
---
> 
65189a62596,62599
> #line 1144
>   kfree((void const   *)ascw);
> #line 1146
>   return (0);
65192,65193c62602,62603
< #line 912 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< void ldv_mutex_unlock_mutex_of_device(struct mutex *lock ) 
---
> #line 1149 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared"
> static void abw_start_sync(struct drbd_conf *mdev , int rv ) 
65195c62605,62608
< 
---
>   union drbd_state val ;
>   union drbd_state mask ;
>   union drbd_state val___0 ;
>   union drbd_state mask___0 ;
65198,65200c62611,62626
< #line 915
<   if (ldv_mutex_mutex_of_device == 2) {
< 
---
> #line 1151
>   if (rv != 0) {
> #line 1152
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Writing the bitmap failed not starting resync.\n");
> #line 1153
>     val.i = 0U;
> #line 1153
>     val.ldv_40604.conn = 10U;
> #line 1153
>     mask.i = 0U;
> #line 1153
>     mask.ldv_40604.conn = 31U;
> #line 1153
>     _drbd_request_state(mdev, mask, val, CS_VERBOSE);
> #line 1154
>     return;
65202,65203c62628
< #line 915
<     ldv_error();
---
> 
65205,65207c62630,62652
< #line 917
<   ldv_mutex_mutex_of_device = 1;
< #line 918
---
> #line 1157
>   switch ((int )mdev->state.ldv_50103.conn) {
>   case 12: 
> #line 1159
>   val___0.i = 0U;
> #line 1159
>   val___0.ldv_40604.conn = 15U;
> #line 1159
>   mask___0.i = 0U;
> #line 1159
>   mask___0.ldv_40604.conn = 31U;
> #line 1159
>   _drbd_request_state(mdev, mask___0, val___0, CS_VERBOSE);
> #line 1160
>   goto ldv_52147;
>   case 11: 
> #line 1162
>   drbd_start_resync(mdev, C_SYNC_SOURCE);
> #line 1163
>   goto ldv_52147;
>   }
>   ldv_52147: ;
> #line 1166
65211,65214c62656,62658
< #line 920 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< static int ldv_mutex_mutex_of_drbd_socket  ;
< #line 923 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_lock_interruptible_mutex_of_drbd_socket(struct mutex *lock ) 
---
> #line 1167 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared"
> int drbd_bitmap_io_from_worker(struct drbd_conf *mdev , int (*io_fn)(struct drbd_conf * ) ,
>                                char *why , enum bm_flag flags ) 
65216c62660,62661
<   int nondetermined ;
---
>   int rv ;
>   struct task_struct *tmp ;
65219,65233c62664,62671
< #line 928
<   if (ldv_mutex_mutex_of_drbd_socket == 1) {
< 
<   } else {
< #line 928
<     ldv_error();
<   }
< #line 931
<   nondetermined = ldv_undef_int();
< #line 934
<   if (nondetermined) {
< #line 937
<     ldv_mutex_mutex_of_drbd_socket = 2;
< #line 939
<     return (0);
---
> #line 1173
>   tmp = get_current();
> #line 1173
>   if ((unsigned long )tmp != (unsigned long )(mdev->tconn)->worker.task) {
> #line 1173
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( current == mdev->tconn->worker.task ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared",
>             1173);
65235,65236c62673
< #line 944
<     return (-4);
---
> 
65237a62675,62686
> #line 1176
>   set_bit(8U, (unsigned long volatile   *)(& mdev->flags));
> #line 1178
>   drbd_bm_lock(mdev, why, flags);
> #line 1179
>   rv = (*io_fn)(mdev);
> #line 1180
>   drbd_bm_unlock(mdev);
> #line 1182
>   drbd_resume_io(mdev);
> #line 1184
>   return (rv);
65240,65241c62689,62691
< #line 949 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_lock_killable_mutex_of_drbd_socket(struct mutex *lock ) 
---
> #line 1194 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared"
> static void after_state_ch(struct drbd_conf *mdev , union drbd_state os , union drbd_state ns ,
>                            enum chg_state_flags flags ) 
65243c62693,62724
<   int nondetermined ;
---
>   struct sib_info sib ;
>   struct drbd_tconn *tconn ;
>   enum drbd_req_event what ;
>   enum drbd_conns tmp ;
>   enum drbd_disk_state tmp___0 ;
>   union drbd_state __constr_expr_0 ;
>   union drbd_state __constr_expr_1 ;
>   struct drbd_tconn *tconn___0 ;
>   struct drbd_conf *odev ;
>   int vnr ;
>   void *tmp___1 ;
>   void *tmp___2 ;
>   union drbd_state __constr_expr_2 ;
>   union drbd_state __constr_expr_3 ;
>   enum drbd_conns tmp___3 ;
>   int tmp___4 ;
>   int tmp___5 ;
>   int tmp___6 ;
>   int tmp___7 ;
>   int tmp___8 ;
>   enum drbd_io_error_p eh ;
>   int was_io_error ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp___9 ;
>   int tmp___10 ;
>   int tmp___11 ;
>   char const   *tmp___12 ;
>   char const   *tmp___13 ;
>   int tmp___14 ;
>   bool tmp___15 ;
>   int tmp___16 ;
65246,65247c62727,62741
< #line 954
<   if (ldv_mutex_mutex_of_drbd_socket == 1) {
---
> #line 1199
>   sib.sib_reason = SIB_STATE_CHANGE;
> #line 1200
>   sib.ldv_51335.ldv_51334.os = os;
> #line 1201
>   sib.ldv_51335.ldv_51334.ns = ns;
> #line 1203
>   if ((unsigned int )*((unsigned short *)(& os) + 0UL) != 160U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 160U) {
> #line 1204
>     clear_bit(5, (unsigned long volatile   *)(& mdev->flags));
> #line 1205
>     if ((unsigned long )mdev->p_uuid != (unsigned long )((u64 *)0)) {
> #line 1206
>       *(mdev->p_uuid + 5UL) = *(mdev->p_uuid + 5UL) & 0xfffffffffffffffdULL;
>     } else {
65248a62743
>     }
65250,65251c62745
< #line 954
<     ldv_error();
---
> 
65253,65260c62747,62752
< #line 957
<   nondetermined = ldv_undef_int();
< #line 960
<   if (nondetermined) {
< #line 963
<     ldv_mutex_mutex_of_drbd_socket = 2;
< #line 965
<     return (0);
---
> #line 1210
>   drbd_bcast_event(mdev, (struct sib_info  const  *)(& sib));
> #line 1212
>   if ((((unsigned int )*((unsigned char *)(& os) + 0UL) != 1U || (int )os.ldv_40604.disk > 7) || (int )os.ldv_40604.pdsk > 7) && (((unsigned int )*((unsigned char *)(& ns) + 0UL) == 1U && (int )ns.ldv_40604.disk <= 7) && (int )ns.ldv_40604.pdsk <= 7)) {
> #line 1214
>     drbd_khelper(mdev, (char *)"pri-on-incon-degr");
65262,65263c62754
< #line 970
<     return (-4);
---
> 
65265,65269c62756,62772
< }
< }
< #line 975 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< void ldv_mutex_lock_mutex_of_drbd_socket(struct mutex *lock ) 
< { 
---
> #line 1219
>   if ((unsigned int )*((unsigned char *)(& ns) + 2UL) != 0U) {
> #line 1220
>     tconn = mdev->tconn;
> #line 1221
>     what = NOTHING;
> #line 1223
>     spin_lock_irq(& tconn->req_lock);
> #line 1224
>     if ((int )os.ldv_40604.conn <= 9) {
> #line 1224
>       tmp = conn_lowest_conn(tconn);
> #line 1224
>       if ((unsigned int )tmp > 9U) {
> #line 1225
>         what = RESEND;
>       } else {
65270a62774,62775
>       }
>     } else {
65272,65274c62777,62846
<   {
< #line 978
<   if (ldv_mutex_mutex_of_drbd_socket == 1) {
---
>     }
> #line 1227
>     if ((unsigned int )*((unsigned char *)(& os) + 1UL) == 2U || (unsigned int )*((unsigned char *)(& os) + 1UL) == 6U) {
> #line 1227
>       tmp___0 = conn_lowest_disk(tconn);
> #line 1227
>       if ((unsigned int )tmp___0 > 3U) {
> #line 1229
>         what = RESTART_FROZEN_DISK_IO;
>       } else {
> 
>       }
>     } else {
> 
>     }
> #line 1231
>     if ((unsigned int )*((unsigned char *)tconn + 132UL) != 0U && (unsigned int )what != 28U) {
> #line 1232
>       _tl_restart(tconn, what);
> #line 1233
>       __constr_expr_0.ldv_40604.role = (unsigned char)0;
> #line 1233
>       __constr_expr_0.ldv_40604.peer = (unsigned char)0;
> #line 1233
>       __constr_expr_0.ldv_40604.conn = (unsigned char)0;
> #line 1233
>       __constr_expr_0.ldv_40604.disk = (unsigned char)0;
> #line 1233
>       __constr_expr_0.ldv_40604.pdsk = (unsigned char)0;
> #line 1233
>       __constr_expr_0.ldv_40604.susp = (unsigned char)0;
> #line 1233
>       __constr_expr_0.ldv_40604.aftr_isp = (unsigned char)0;
> #line 1233
>       __constr_expr_0.ldv_40604.peer_isp = (unsigned char)0;
> #line 1233
>       __constr_expr_0.ldv_40604.user_isp = (unsigned char)0;
> #line 1233
>       __constr_expr_0.ldv_40604.susp_nod = 0U;
> #line 1233
>       __constr_expr_0.ldv_40604.susp_fen = (unsigned char)0;
> #line 1233
>       __constr_expr_0.ldv_40604._pad = (unsigned short)0;
> #line 1233
>       __constr_expr_1.ldv_40604.role = (unsigned char)0;
> #line 1233
>       __constr_expr_1.ldv_40604.peer = (unsigned char)0;
> #line 1233
>       __constr_expr_1.ldv_40604.conn = (unsigned char)0;
> #line 1233
>       __constr_expr_1.ldv_40604.disk = (unsigned char)0;
> #line 1233
>       __constr_expr_1.ldv_40604.pdsk = (unsigned char)0;
> #line 1233
>       __constr_expr_1.ldv_40604.susp = (unsigned char)0;
> #line 1233
>       __constr_expr_1.ldv_40604.aftr_isp = (unsigned char)0;
> #line 1233
>       __constr_expr_1.ldv_40604.peer_isp = (unsigned char)0;
> #line 1233
>       __constr_expr_1.ldv_40604.user_isp = (unsigned char)0;
> #line 1233
>       __constr_expr_1.ldv_40604.susp_nod = 1U;
> #line 1233
>       __constr_expr_1.ldv_40604.susp_fen = (unsigned char)0;
> #line 1233
>       __constr_expr_1.ldv_40604._pad = (unsigned short)0;
> #line 1233
>       _conn_request_state(tconn, __constr_expr_1, __constr_expr_0, CS_VERBOSE);
>     } else {
65275a62848,62850
>     }
> #line 1238
>     spin_unlock_irq(& tconn->req_lock);
65277,65278c62852
< #line 978
<     ldv_error();
---
> 
65280,65282c62854,63323
< #line 980
<   ldv_mutex_mutex_of_drbd_socket = 2;
< #line 981
---
> #line 1241
>   if ((unsigned int )*((unsigned char *)(& ns) + 2UL) != 0U) {
> #line 1242
>     tconn___0 = mdev->tconn;
> #line 1244
>     spin_lock_irq(& tconn___0->req_lock);
> #line 1245
>     if ((unsigned int )*((unsigned char *)tconn___0 + 132UL) != 0U) {
> #line 1245
>       tmp___3 = conn_lowest_conn(tconn___0);
> #line 1245
>       if ((unsigned int )tmp___3 > 9U) {
> #line 1250
>         rcu_read_lock();
> #line 1251
>         vnr = 0;
> #line 1251
>         tmp___1 = idr_get_next(& tconn___0->volumes, & vnr);
> #line 1251
>         odev = (struct drbd_conf *)tmp___1;
> #line 1251
>         goto ldv_52172;
>         ldv_52171: 
> #line 1252
>         clear_bit(17, (unsigned long volatile   *)(& odev->flags));
> #line 1251
>         vnr = vnr + 1;
> #line 1251
>         tmp___2 = idr_get_next(& tconn___0->volumes, & vnr);
> #line 1251
>         odev = (struct drbd_conf *)tmp___2;
>         ldv_52172: ;
> #line 1251
>         if ((unsigned long )odev != (unsigned long )((struct drbd_conf *)0)) {
> #line 1252
>           goto ldv_52171;
>         } else {
> 
>         }
> #line 1253
>         rcu_read_unlock();
> #line 1254
>         _tl_restart(tconn___0, RESEND);
> #line 1255
>         __constr_expr_2.ldv_40604.role = (unsigned char)0;
> #line 1255
>         __constr_expr_2.ldv_40604.peer = (unsigned char)0;
> #line 1255
>         __constr_expr_2.ldv_40604.conn = (unsigned char)0;
> #line 1255
>         __constr_expr_2.ldv_40604.disk = (unsigned char)0;
> #line 1255
>         __constr_expr_2.ldv_40604.pdsk = (unsigned char)0;
> #line 1255
>         __constr_expr_2.ldv_40604.susp = (unsigned char)0;
> #line 1255
>         __constr_expr_2.ldv_40604.aftr_isp = (unsigned char)0;
> #line 1255
>         __constr_expr_2.ldv_40604.peer_isp = (unsigned char)0;
> #line 1255
>         __constr_expr_2.ldv_40604.user_isp = (unsigned char)0;
> #line 1255
>         __constr_expr_2.ldv_40604.susp_nod = (unsigned char)0;
> #line 1255
>         __constr_expr_2.ldv_40604.susp_fen = 0U;
> #line 1255
>         __constr_expr_2.ldv_40604._pad = (unsigned short)0;
> #line 1255
>         __constr_expr_3.ldv_40604.role = (unsigned char)0;
> #line 1255
>         __constr_expr_3.ldv_40604.peer = (unsigned char)0;
> #line 1255
>         __constr_expr_3.ldv_40604.conn = (unsigned char)0;
> #line 1255
>         __constr_expr_3.ldv_40604.disk = (unsigned char)0;
> #line 1255
>         __constr_expr_3.ldv_40604.pdsk = (unsigned char)0;
> #line 1255
>         __constr_expr_3.ldv_40604.susp = (unsigned char)0;
> #line 1255
>         __constr_expr_3.ldv_40604.aftr_isp = (unsigned char)0;
> #line 1255
>         __constr_expr_3.ldv_40604.peer_isp = (unsigned char)0;
> #line 1255
>         __constr_expr_3.ldv_40604.user_isp = (unsigned char)0;
> #line 1255
>         __constr_expr_3.ldv_40604.susp_nod = (unsigned char)0;
> #line 1255
>         __constr_expr_3.ldv_40604.susp_fen = 1U;
> #line 1255
>         __constr_expr_3.ldv_40604._pad = (unsigned short)0;
> #line 1255
>         _conn_request_state(tconn___0, __constr_expr_3, __constr_expr_2, CS_VERBOSE);
>       } else {
> 
>       }
>     } else {
> 
>     }
> #line 1260
>     spin_unlock_irq(& tconn___0->req_lock);
>   } else {
> 
>   }
> #line 1267
>   if ((((unsigned int )*((unsigned short *)(& os) + 0UL) != 256U && (unsigned int )*((unsigned short *)(& os) + 0UL) != 320U) && ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 256U || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 320U)) && (mdev->tconn)->agreed_pro_version > 95) {
> #line 1267
>     tmp___4 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 1267
>     if (tmp___4 != 0) {
> #line 1270
>       drbd_gen_and_send_sync_uuid(mdev);
> #line 1271
>       put_ldev(mdev);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1275
>   if ((*((unsigned int *)(& os) + 0UL) == 0U && (int )ns.ldv_40604.pdsk > 0) && *((unsigned int *)(& ns) + 0UL) != 49152U) {
> #line 1279
>     mdev->rs_total = 0UL;
> #line 1280
>     mdev->rs_failed = 0UL;
> #line 1281
>     atomic_set(& mdev->rs_pending_cnt, 0);
> #line 1282
>     drbd_rs_cancel_all(mdev);
> #line 1284
>     drbd_send_uuids(mdev);
> #line 1285
>     drbd_send_state(mdev, ns);
>   } else {
> 
>   }
> #line 1290
>   if (((unsigned int )*((unsigned short *)(& os) + 0UL) != 208U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 208U) && (unsigned int )*((unsigned short *)mdev + 374UL) == 208U) {
> #line 1292
>     drbd_queue_bitmap_io(mdev, & drbd_send_bitmap, 0, (char *)"send_bitmap (WFBitMapS)",
>                          BM_LOCKED_TEST_ALLOWED);
>   } else {
> 
>   }
> #line 1297
>   if ((((int )os.ldv_40604.pdsk > 3 && *((unsigned int *)(& os) + 0UL) != 49152U) && *((unsigned int *)(& os) + 0UL) != 40960U) && (((int )ns.ldv_40604.pdsk <= 3 || *((unsigned int *)(& ns) + 0UL) == 49152U) || *((unsigned int *)(& ns) + 0UL) == 40960U)) {
> #line 1303
>     tmp___6 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 1303
>     if (tmp___6 != 0) {
> #line 1304
>       if ((((unsigned int )*((unsigned char *)(& ns) + 0UL) == 1U || (unsigned int )*((unsigned char *)(& ns) + 0UL) == 4U) && (mdev->ldev)->md.uuid[1] == 0ULL) && (int )ns.ldv_40604.disk > 7) {
> #line 1306
>         tmp___5 = drbd_suspended(mdev);
> #line 1306
>         if (tmp___5 != 0) {
> #line 1307
>           set_bit(17U, (unsigned long volatile   *)(& mdev->flags));
>         } else {
> #line 1309
>           drbd_uuid_new_current(mdev);
> #line 1310
>           drbd_send_uuids(mdev);
>         }
>       } else {
> 
>       }
> #line 1313
>       put_ldev(mdev);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1317
>   if ((int )ns.ldv_40604.pdsk <= 3) {
> #line 1317
>     tmp___7 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 1317
>     if (tmp___7 != 0) {
> #line 1318
>       if ((((unsigned int )*((unsigned char *)(& os) + 0UL) == 8U && (unsigned int )*((unsigned char *)(& ns) + 0UL) == 4U) && (mdev->ldev)->md.uuid[1] == 0ULL) && (int )ns.ldv_40604.disk > 7) {
> #line 1320
>         drbd_uuid_new_current(mdev);
> #line 1321
>         drbd_send_uuids(mdev);
>       } else {
> 
>       }
> #line 1324
>       if ((unsigned int )*((unsigned char *)(& os) + 0UL) == 4U && (unsigned int )*((unsigned char *)(& ns) + 0UL) == 8U) {
> #line 1328
>         drbd_bitmap_io_from_worker(mdev, & drbd_bm_write, (char *)"demote diskless peer",
>                                    BM_LOCKED_SET_ALLOWED);
>       } else {
> 
>       }
> #line 1330
>       put_ldev(mdev);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1336
>   if (((unsigned int )*((unsigned char *)(& os) + 0UL) == 1U && (unsigned int )*((unsigned char *)(& ns) + 0UL) == 2U) && (int )mdev->state.ldv_50103.conn <= 10) {
> #line 1336
>     tmp___8 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 1336
>     if (tmp___8 != 0) {
> #line 1340
>       drbd_bitmap_io_from_worker(mdev, & drbd_bm_write, (char *)"demote", BM_LOCKED_TEST_ALLOWED);
> #line 1342
>       put_ldev(mdev);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1346
>   if (((int )ns.ldv_40604.conn > 9 && (unsigned int )*((unsigned char *)(& os) + 1UL) == 2U) && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 6U) {
> #line 1348
>     drbd_send_sizes(mdev, 0, 0);
> #line 1349
>     drbd_send_uuids(mdev);
> #line 1350
>     drbd_send_state(mdev, ns);
>   } else {
> 
>   }
> #line 1354
>   if ((int )ns.ldv_40604.conn > 9 && ((int )os.ldv_40604.aftr_isp != (int )ns.ldv_40604.aftr_isp || (int )os.ldv_40604.user_isp != (int )ns.ldv_40604.user_isp)) {
> #line 1357
>     drbd_send_state(mdev, ns);
>   } else {
> 
>   }
> #line 1360
>   if ((((unsigned int )*((unsigned char *)(& os) + 2UL) == 0U && (unsigned int )*((unsigned char *)(& os) + 2UL) == 0U) && (unsigned int )*((unsigned char *)(& os) + 2UL) == 0U) && (((unsigned int )*((unsigned char *)(& ns) + 2UL) != 0U || (unsigned int )*((unsigned char *)(& ns) + 2UL) != 0U) || (unsigned int )*((unsigned char *)(& ns) + 2UL) != 0U)) {
> #line 1362
>     suspend_other_sg(mdev);
>   } else {
> 
>   }
> #line 1366
>   if ((unsigned int )*((unsigned short *)(& os) + 0UL) == 144U && (int )ns.ldv_40604.conn > 9) {
> #line 1367
>     drbd_send_state(mdev, ns);
>   } else {
> 
>   }
> #line 1369
>   if ((unsigned int )*((unsigned short *)(& os) + 0UL) != 352U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 352U) {
> #line 1370
>     drbd_send_state(mdev, ns);
>   } else {
> 
>   }
> #line 1373
>   if (((unsigned int )*((unsigned short *)(& os) + 0UL) != 192U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 192U) || ((unsigned int )*((unsigned short *)(& os) + 0UL) != 176U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 176U)) {
> #line 1376
>     drbd_queue_bitmap_io(mdev, & drbd_bmio_set_n_write, & abw_start_sync, (char *)"set_n_write from StartingSync",
>                          BM_LOCKED_TEST_ALLOWED);
>   } else {
> 
>   }
> #line 1381
>   if ((((int )os.ldv_40604.conn <= 9 && (int )ns.ldv_40604.conn <= 9) && (int )os.ldv_40604.disk > 4) && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 8U) {
> #line 1384
>     drbd_queue_bitmap_io(mdev, & drbd_bmio_set_n_write, 0, (char *)"set_n_write from invalidate",
>                          BM_LOCKED_MASK);
>   } else {
> 
>   }
> #line 1389
>   if ((unsigned int )*((unsigned char *)(& os) + 1UL) != 4U && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 4U) {
> #line 1390
>     eh = EP_PASS_ON;
> #line 1391
>     was_io_error = 0;
> #line 1396
>     if ((unsigned long )mdev->ldev != (unsigned long )((struct drbd_backing_dev *)0)) {
> #line 1397
>       rcu_read_lock();
> #line 1398
>       _________p1 = *((struct disk_conf * volatile  *)(& (mdev->ldev)->disk_conf));
> #line 1398
>       tmp___9 = debug_lockdep_rcu_enabled();
> #line 1398
>       if (tmp___9 != 0 && ! __warned) {
> #line 1398
>         tmp___10 = rcu_read_lock_held();
> #line 1398
>         if (tmp___10 == 0 && 1) {
> #line 1398
>           __warned = 1;
> #line 1398
>           lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared",
>                                  1398, "suspicious rcu_dereference_check() usage");
>         } else {
> 
>         }
>       } else {
> 
>       }
> #line 1398
>       eh = (enum drbd_io_error_p )_________p1->on_io_error;
> #line 1399
>       rcu_read_unlock();
> #line 1401
>       was_io_error = test_and_clear_bit(12, (unsigned long volatile   *)(& mdev->flags));
> #line 1403
>       if (was_io_error != 0 && (unsigned int )eh == 1U) {
> #line 1404
>         drbd_khelper(mdev, (char *)"local-io-error");
>       } else {
> 
>       }
> #line 1419
>       tmp___11 = test_and_clear_bit(14, (unsigned long volatile   *)(& mdev->flags));
> #line 1419
>       if (tmp___11 != 0) {
> #line 1420
>         tl_abort_disk_io(mdev);
>       } else {
> 
>       }
> #line 1425
>       if ((unsigned int )*((unsigned char *)mdev + 749UL) != 4U) {
> #line 1426
>         tmp___12 = drbd_disk_str((enum drbd_disk_state )mdev->state.ldv_50103.disk);
> #line 1426
>         dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: disk is %s during detach\n",
>                 tmp___12);
>       } else {
> 
>       }
> #line 1430
>       if ((int )ns.ldv_40604.conn > 9) {
> #line 1431
>         drbd_send_state(mdev, ns);
>       } else {
> 
>       }
> #line 1433
>       drbd_rs_cancel_all(mdev);
> #line 1438
>       drbd_md_sync(mdev);
>     } else {
> 
>     }
> #line 1440
>     put_ldev(mdev);
>   } else {
> 
>   }
> #line 1446
>   if ((unsigned int )*((unsigned char *)(& os) + 1UL) != 0U && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 0U) {
> #line 1449
>     if ((unsigned int )*((unsigned char *)mdev + 749UL) != 0U) {
> #line 1450
>       tmp___13 = drbd_disk_str((enum drbd_disk_state )mdev->state.ldv_50103.disk);
> #line 1450
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: disk is %s while going diskless\n",
>               tmp___13);
>     } else {
> 
>     }
> #line 1454
>     if ((int )ns.ldv_40604.conn > 9) {
> #line 1455
>       drbd_send_state(mdev, ns);
>     } else {
> 
>     }
> #line 1458
>     put_ldev(mdev);
>   } else {
> 
>   }
> #line 1462
>   if (((unsigned int )*((unsigned char *)(& os) + 1UL) == 16U && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 8U) && (int )ns.ldv_40604.conn > 9) {
> #line 1463
>     drbd_send_state(mdev, ns);
>   } else {
> 
>   }
> #line 1466
>   if ((int )ns.ldv_40604.disk > 3 && (int )ns.ldv_40604.pdsk > 3) {
> #line 1466
>     tmp___14 = test_and_clear_bit(15, (unsigned long volatile   *)(& mdev->flags));
> #line 1466
>     if (tmp___14 != 0) {
> #line 1468
>       if ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 160U) {
> #line 1469
>         resync_after_online_grow(mdev);
>       } else {
> 
>       }
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1473
>   if ((((int )os.ldv_40604.conn > 10 && (int )ns.ldv_40604.conn <= 10) || ((unsigned int )*((unsigned char *)(& os) + 2UL) != 0U && (unsigned int )*((unsigned char *)(& ns) + 2UL) == 0U)) || ((unsigned int )*((unsigned char *)(& os) + 2UL) != 0U && (unsigned int )*((unsigned char *)(& ns) + 2UL) == 0U)) {
> #line 1476
>     resume_next_sg(mdev);
>   } else {
> 
>   }
> #line 1480
>   if (((int )os.ldv_40604.disk <= 7 && (int )os.ldv_40604.conn > 15) && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 160U) {
> #line 1481
>     drbd_send_state(mdev, ns);
>   } else {
> 
>   }
> #line 1486
>   if ((unsigned int )*((unsigned short *)(& os) + 0UL) == 288U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 160U) {
> #line 1486
>     tmp___15 = verify_can_do_stop_sector(mdev);
> #line 1486
>     if ((int )tmp___15) {
> #line 1488
>       drbd_send_state(mdev, ns);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1497
>   if ((int )os.ldv_40604.conn > 10 && (int )ns.ldv_40604.conn <= 10) {
> #line 1497
>     tmp___16 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 1497
>     if (tmp___16 != 0) {
> #line 1498
>       drbd_queue_bitmap_io(mdev, & drbd_bm_write_copy_pages, 0, (char *)"write from resync_finished",
>                            BM_IS_LOCKED);
> #line 1500
>       put_ldev(mdev);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1503
>   if (((unsigned int )*((unsigned char *)(& ns) + 1UL) == 0U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 0U) && (unsigned int )*((unsigned char *)(& ns) + 0UL) == 2U) {
> #line 1506
>     if ((int )os.ldv_40604.aftr_isp != (int )ns.ldv_40604.aftr_isp) {
> #line 1507
>       resume_next_sg(mdev);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1510
>   drbd_md_sync(mdev);
> #line 1511
65286,65287c63327,63328
< #line 984 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_trylock_mutex_of_drbd_socket(struct mutex *lock ) 
---
> #line 1521 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared"
> static int w_after_conn_state_ch(struct drbd_work *w , int unused ) 
65289c63330,63342
<   int is_mutex_held_by_another_thread ;
---
>   struct after_conn_state_chg_work *acscw ;
>   struct drbd_work  const  *__mptr ;
>   struct drbd_tconn *tconn ;
>   enum drbd_conns oc ;
>   union drbd_state ns_max ;
>   struct drbd_conf *mdev ;
>   int vnr ;
>   struct net_conf *old_conf ;
>   void *tmp ;
>   int tmp___0 ;
>   void *tmp___1 ;
>   union drbd_state __constr_expr_0 ;
>   union drbd_state __constr_expr_1 ;
65292,65293c63345,63361
< #line 989
<   if (ldv_mutex_mutex_of_drbd_socket == 1) {
---
> #line 1524
>   __mptr = (struct drbd_work  const  *)w;
> #line 1524
>   acscw = (struct after_conn_state_chg_work *)__mptr;
> #line 1525
>   tconn = w->ldv_50388.tconn;
> #line 1526
>   oc = acscw->oc;
> #line 1527
>   ns_max = acscw->ns_max;
> #line 1531
>   kfree((void const   *)acscw);
> #line 1534
>   if ((unsigned int )oc == 0U && (unsigned int )*((unsigned short *)(& ns_max) + 0UL) == 32U) {
> #line 1535
>     drbd_thread_start(& tconn->receiver);
>   } else {
65294a63363,63385
>   }
> #line 1537
>   if ((unsigned int )oc == 1U && (unsigned int )*((unsigned short *)(& ns_max) + 0UL) == 0U) {
> #line 1540
>     mutex_lock_nested(& tconn->conf_update, 0U);
> #line 1541
>     old_conf = tconn->net_conf;
> #line 1542
>     tconn->my_addr_len = 0;
> #line 1543
>     tconn->peer_addr_len = 0;
> #line 1544
>     __asm__  volatile   ("": : : "memory");
> #line 1544
>     tconn->net_conf = 0;
> #line 1545
>     conn_free_crypto(tconn);
> #line 1546
>     mutex_unlock(& tconn->conf_update);
> #line 1548
>     synchronize_rcu();
> #line 1549
>     kfree((void const   *)old_conf);
65296,65297c63387
< #line 989
<     ldv_error();
---
> 
65299,65304c63389,63489
< #line 992
<   is_mutex_held_by_another_thread = ldv_undef_int();
< #line 995
<   if (is_mutex_held_by_another_thread) {
< #line 998
<     return (0);
---
> #line 1552
>   if ((unsigned int )*((unsigned char *)(& ns_max) + 2UL) != 0U) {
> #line 1554
>     if ((int )ns_max.ldv_40604.pdsk <= 5) {
> #line 1555
>       rcu_read_lock();
> #line 1556
>       vnr = 0;
> #line 1556
>       tmp = idr_get_next(& tconn->volumes, & vnr);
> #line 1556
>       mdev = (struct drbd_conf *)tmp;
> #line 1556
>       goto ldv_52201;
>       ldv_52200: 
> #line 1557
>       tmp___0 = constant_test_bit(17U, (unsigned long const volatile   *)(& mdev->flags));
> #line 1557
>       if (tmp___0 != 0) {
> #line 1558
>         drbd_uuid_new_current(mdev);
> #line 1559
>         clear_bit(17, (unsigned long volatile   *)(& mdev->flags));
>       } else {
> 
>       }
> #line 1556
>       vnr = vnr + 1;
> #line 1556
>       tmp___1 = idr_get_next(& tconn->volumes, & vnr);
> #line 1556
>       mdev = (struct drbd_conf *)tmp___1;
>       ldv_52201: ;
> #line 1556
>       if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 1557
>         goto ldv_52200;
>       } else {
> 
>       }
> #line 1562
>       rcu_read_unlock();
> #line 1563
>       spin_lock_irq(& tconn->req_lock);
> #line 1564
>       _tl_restart(tconn, CONNECTION_LOST_WHILE_PENDING);
> #line 1565
>       __constr_expr_0.ldv_40604.role = (unsigned char)0;
> #line 1565
>       __constr_expr_0.ldv_40604.peer = (unsigned char)0;
> #line 1565
>       __constr_expr_0.ldv_40604.conn = (unsigned char)0;
> #line 1565
>       __constr_expr_0.ldv_40604.disk = (unsigned char)0;
> #line 1565
>       __constr_expr_0.ldv_40604.pdsk = (unsigned char)0;
> #line 1565
>       __constr_expr_0.ldv_40604.susp = (unsigned char)0;
> #line 1565
>       __constr_expr_0.ldv_40604.aftr_isp = (unsigned char)0;
> #line 1565
>       __constr_expr_0.ldv_40604.peer_isp = (unsigned char)0;
> #line 1565
>       __constr_expr_0.ldv_40604.user_isp = (unsigned char)0;
> #line 1565
>       __constr_expr_0.ldv_40604.susp_nod = (unsigned char)0;
> #line 1565
>       __constr_expr_0.ldv_40604.susp_fen = 0U;
> #line 1565
>       __constr_expr_0.ldv_40604._pad = (unsigned short)0;
> #line 1565
>       __constr_expr_1.ldv_40604.role = (unsigned char)0;
> #line 1565
>       __constr_expr_1.ldv_40604.peer = (unsigned char)0;
> #line 1565
>       __constr_expr_1.ldv_40604.conn = (unsigned char)0;
> #line 1565
>       __constr_expr_1.ldv_40604.disk = (unsigned char)0;
> #line 1565
>       __constr_expr_1.ldv_40604.pdsk = (unsigned char)0;
> #line 1565
>       __constr_expr_1.ldv_40604.susp = (unsigned char)0;
> #line 1565
>       __constr_expr_1.ldv_40604.aftr_isp = (unsigned char)0;
> #line 1565
>       __constr_expr_1.ldv_40604.peer_isp = (unsigned char)0;
> #line 1565
>       __constr_expr_1.ldv_40604.user_isp = (unsigned char)0;
> #line 1565
>       __constr_expr_1.ldv_40604.susp_nod = (unsigned char)0;
> #line 1565
>       __constr_expr_1.ldv_40604.susp_fen = 1U;
> #line 1565
>       __constr_expr_1.ldv_40604._pad = (unsigned short)0;
> #line 1565
>       _conn_request_state(tconn, __constr_expr_1, __constr_expr_0, CS_VERBOSE);
> #line 1569
>       spin_unlock_irq(& tconn->req_lock);
>     } else {
> 
>     }
65306,65309c63491
< #line 1003
<     ldv_mutex_mutex_of_drbd_socket = 2;
< #line 1005
<     return (1);
---
> 
65310a63493,63498
> #line 1572
>   kref_put(& tconn->kref, & conn_destroy);
> #line 1574
>   conn_md_sync(tconn);
> #line 1576
>   return (0);
65313,65314c63501,63502
< #line 1010 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_atomic_dec_and_mutex_lock_mutex_of_drbd_socket(atomic_t *cnt , struct mutex *lock ) 
---
> #line 1579 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared"
> void conn_old_common_state(struct drbd_tconn *tconn , union drbd_state *pcs , enum chg_state_flags *pf ) 
65316c63504,63511
<   int atomic_value_after_dec ;
---
>   enum chg_state_flags flags ;
>   struct drbd_conf *mdev ;
>   int vnr ;
>   int first_vol ;
>   union drbd_dev_state os ;
>   union drbd_dev_state cs ;
>   void *tmp ;
>   void *tmp___0 ;
65319,65320c63514,63559
< #line 1015
<   if (ldv_mutex_mutex_of_drbd_socket == 1) {
---
> #line 1581
>   flags = 4294967295L;
> #line 1583
>   first_vol = 1;
> #line 1584
>   cs.ldv_50103.role = 2U;
> #line 1584
>   cs.ldv_50103.peer = 0U;
> #line 1584
>   cs.ldv_50103.conn = (unsigned char )tconn->cstate;
> #line 1584
>   cs.ldv_50103.disk = 0U;
> #line 1584
>   cs.ldv_50103.pdsk = 6U;
> #line 1584
>   cs.ldv_50103._unused = (unsigned char)0;
> #line 1584
>   cs.ldv_50103.aftr_isp = (unsigned char)0;
> #line 1584
>   cs.ldv_50103.peer_isp = (unsigned char)0;
> #line 1584
>   cs.ldv_50103.user_isp = (unsigned char)0;
> #line 1584
>   cs.ldv_50103._pad = (unsigned short)0;
> #line 1592
>   rcu_read_lock();
> #line 1593
>   vnr = 0;
> #line 1593
>   tmp = idr_get_next(& tconn->volumes, & vnr);
> #line 1593
>   mdev = (struct drbd_conf *)tmp;
> #line 1593
>   goto ldv_52218;
>   ldv_52217: 
> #line 1594
>   os = mdev->state;
> #line 1596
>   if (first_vol != 0) {
> #line 1597
>     cs = os;
> #line 1598
>     first_vol = 0;
> #line 1599
>     goto ldv_52216;
>   } else {
65321a63561,63565
>   }
> #line 1602
>   if ((int )cs.ldv_50103.role != (int )os.ldv_50103.role) {
> #line 1603
>     flags = (enum chg_state_flags )((unsigned int )flags & 4294967263U);
65323,65324c63567
< #line 1015
<     ldv_error();
---
> 
65326,65333c63569,63572
< #line 1018
<   atomic_value_after_dec = ldv_undef_int();
< #line 1021
<   if (atomic_value_after_dec == 0) {
< #line 1024
<     ldv_mutex_mutex_of_drbd_socket = 2;
< #line 1026
<     return (1);
---
> #line 1605
>   if ((int )cs.ldv_50103.peer != (int )os.ldv_50103.peer) {
> #line 1606
>     flags = (enum chg_state_flags )((unsigned int )flags & 4294967231U);
65337,65338c63576,63621
< #line 1030
<   return (0);
---
> #line 1608
>   if ((int )cs.ldv_50103.conn != (int )os.ldv_50103.conn) {
> #line 1609
>     flags = (enum chg_state_flags )((unsigned int )flags & 4294967167U);
>   } else {
> 
>   }
> #line 1611
>   if ((int )cs.ldv_50103.disk != (int )os.ldv_50103.disk) {
> #line 1612
>     flags = (enum chg_state_flags )((unsigned int )flags & 4294967039U);
>   } else {
> 
>   }
> #line 1614
>   if ((int )cs.ldv_50103.pdsk != (int )os.ldv_50103.pdsk) {
> #line 1615
>     flags = (enum chg_state_flags )((unsigned int )flags & 4294966783U);
>   } else {
> 
>   }
>   ldv_52216: 
> #line 1593
>   vnr = vnr + 1;
> #line 1593
>   tmp___0 = idr_get_next(& tconn->volumes, & vnr);
> #line 1593
>   mdev = (struct drbd_conf *)tmp___0;
>   ldv_52218: ;
> #line 1593
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 1594
>     goto ldv_52217;
>   } else {
> 
>   }
> #line 1617
>   rcu_read_unlock();
> #line 1619
>   *pf = (enum chg_state_flags )((unsigned int )*pf | 992U);
> #line 1620
>   *pf = (enum chg_state_flags )((unsigned int )*pf & (unsigned int )flags);
> #line 1621
>   pcs->i = cs.i;
> #line 1622
>   return;
65341,65342c63624,63626
< #line 1035 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_is_locked_mutex_of_drbd_socket(struct mutex *lock ) 
---
> #line 1625 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared"
> static enum drbd_state_rv conn_is_valid_transition(struct drbd_tconn *tconn , union drbd_state mask ,
>                                                    union drbd_state val , enum chg_state_flags flags ) 
65344c63628,63636
<   int nondetermined ;
---
>   enum drbd_state_rv rv ;
>   union drbd_state ns ;
>   union drbd_state os ;
>   struct drbd_conf *mdev ;
>   int vnr ;
>   void *tmp ;
>   union drbd_state tmp___0 ;
>   enum drbd_state_rv tmp___1 ;
>   void *tmp___2 ;
65347,65354c63639,63696
< #line 1039
<   if (ldv_mutex_mutex_of_drbd_socket == 1) {
< #line 1042
<     nondetermined = ldv_undef_int();
< #line 1045
<     if (nondetermined) {
< #line 1048
<       return (0);
---
> #line 1628
>   rv = 1;
> #line 1633
>   rcu_read_lock();
> #line 1634
>   vnr = 0;
> #line 1634
>   tmp = idr_get_next(& tconn->volumes, & vnr);
> #line 1634
>   mdev = (struct drbd_conf *)tmp;
> #line 1634
>   goto ldv_52234;
>   ldv_52233: 
> #line 1635
>   os = drbd_read_state(mdev);
> #line 1636
>   tmp___0 = apply_mask_val(os, mask, val);
> #line 1636
>   ns = sanitize_state(mdev, tmp___0, 0);
> #line 1638
>   if ((((unsigned int )flags & 2048U) != 0U && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 10U) && (int )os.ldv_40604.disk <= 4) {
> #line 1639
>     ns.ldv_40604.disk = os.ldv_40604.disk;
>   } else {
> 
>   }
> #line 1641
>   if (ns.i == os.i) {
> #line 1642
>     goto ldv_52231;
>   } else {
> 
>   }
> #line 1644
>   rv = is_valid_transition(os, ns);
> #line 1645
>   if ((int )rv <= 0) {
> #line 1646
>     goto ldv_52232;
>   } else {
> 
>   }
> #line 1648
>   if (((unsigned int )flags & 1U) == 0U) {
> #line 1649
>     rv = is_valid_state(mdev, ns);
> #line 1650
>     if ((int )rv <= 0) {
> #line 1651
>       tmp___1 = is_valid_state(mdev, os);
> #line 1651
>       if ((int )tmp___1 == (int )rv) {
> #line 1652
>         rv = is_valid_soft_transition(os, ns, tconn);
>       } else {
> #line 1654
>         rv = is_valid_soft_transition(os, ns, tconn);
>       }
65356,65357c63698
< #line 1053
<       return (1);
---
> 
65360,65361c63701
< #line 1059
<     return (1);
---
> 
65362a63703,63736
> #line 1656
>   if ((int )rv <= 0) {
> #line 1657
>     goto ldv_52232;
>   } else {
> 
>   }
>   ldv_52231: 
> #line 1634
>   vnr = vnr + 1;
> #line 1634
>   tmp___2 = idr_get_next(& tconn->volumes, & vnr);
> #line 1634
>   mdev = (struct drbd_conf *)tmp___2;
>   ldv_52234: ;
> #line 1634
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 1635
>     goto ldv_52233;
>   } else {
> 
>   }
>   ldv_52232: 
> #line 1659
>   rcu_read_unlock();
> #line 1661
>   if ((int )rv <= 0 && ((unsigned int )flags & 2U) != 0U) {
> #line 1662
>     print_st_err(mdev, os, ns, rv);
>   } else {
> 
>   }
> #line 1664
>   return (rv);
65365,65366c63739,63741
< #line 1064 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< void ldv_mutex_unlock_mutex_of_drbd_socket(struct mutex *lock ) 
---
> #line 1668 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared"
> void conn_set_state(struct drbd_tconn *tconn , union drbd_state mask , union drbd_state val ,
>                     union drbd_state *pns_min , union drbd_state *pns_max , enum chg_state_flags flags ) 
65368c63743,63769
< 
---
>   union drbd_state ns ;
>   union drbd_state os ;
>   union drbd_state ns_max ;
>   union drbd_state ns_min ;
>   struct drbd_conf *mdev ;
>   enum drbd_state_rv rv ;
>   int vnr ;
>   int number_of_volumes ;
>   void *tmp ;
>   enum drbd_role tmp___0 ;
>   enum drbd_role tmp___1 ;
>   enum drbd_conns __max1 ;
>   enum drbd_conns __max2 ;
>   enum drbd_disk_state __max1___0 ;
>   enum drbd_disk_state __max2___0 ;
>   enum drbd_disk_state __max1___1 ;
>   enum drbd_disk_state __max2___1 ;
>   enum drbd_role tmp___2 ;
>   enum drbd_role tmp___3 ;
>   enum drbd_conns __min1 ;
>   enum drbd_conns __min2 ;
>   enum drbd_disk_state __min1___0 ;
>   enum drbd_disk_state __min2___0 ;
>   enum drbd_disk_state __min1___1 ;
>   enum drbd_disk_state __min2___1 ;
>   void *tmp___4 ;
>   union drbd_state __constr_expr_0 ;
65371,65372c63772,63828
< #line 1067
<   if (ldv_mutex_mutex_of_drbd_socket == 2) {
---
> #line 1671
>   ns_max.ldv_40604.role = (unsigned char)0;
> #line 1671
>   ns_max.ldv_40604.peer = (unsigned char)0;
> #line 1671
>   ns_max.ldv_40604.conn = (unsigned char)0;
> #line 1671
>   ns_max.ldv_40604.disk = (unsigned char)0;
> #line 1671
>   ns_max.ldv_40604.pdsk = (unsigned char)0;
> #line 1671
>   ns_max.ldv_40604.susp = (unsigned char)0;
> #line 1671
>   ns_max.ldv_40604.aftr_isp = (unsigned char)0;
> #line 1671
>   ns_max.ldv_40604.peer_isp = (unsigned char)0;
> #line 1671
>   ns_max.ldv_40604.user_isp = (unsigned char)0;
> #line 1671
>   ns_max.ldv_40604.susp_nod = (unsigned char)0;
> #line 1671
>   ns_max.ldv_40604.susp_fen = (unsigned char)0;
> #line 1671
>   ns_max.ldv_40604._pad = (unsigned short)0;
> #line 1672
>   ns_min.ldv_40604.role = 3U;
> #line 1672
>   ns_min.ldv_40604.peer = 3U;
> #line 1672
>   ns_min.ldv_40604.conn = val.ldv_40604.conn;
> #line 1672
>   ns_min.ldv_40604.disk = 15U;
> #line 1672
>   ns_min.ldv_40604.pdsk = 15U;
> #line 1672
>   ns_min.ldv_40604.susp = (unsigned char)0;
> #line 1672
>   ns_min.ldv_40604.aftr_isp = (unsigned char)0;
> #line 1672
>   ns_min.ldv_40604.peer_isp = (unsigned char)0;
> #line 1672
>   ns_min.ldv_40604.user_isp = (unsigned char)0;
> #line 1672
>   ns_min.ldv_40604.susp_nod = (unsigned char)0;
> #line 1672
>   ns_min.ldv_40604.susp_fen = (unsigned char)0;
> #line 1672
>   ns_min.ldv_40604._pad = (unsigned short)0;
> #line 1681
>   number_of_volumes = 0;
> #line 1683
>   if ((unsigned int )*((unsigned short *)(& mask) + 0UL) == 496U) {
> #line 1687
>     if ((unsigned int )tconn->cstate != 9U && (unsigned int )*((unsigned short *)(& val) + 0UL) == 144U) {
> #line 1688
>       tconn->last_reconnect_jif = jiffies;
>     } else {
65373a63830,63832
>     }
> #line 1690
>     tconn->cstate = (enum drbd_conns )val.ldv_40604.conn;
65375,65376c63834
< #line 1067
<     ldv_error();
---
> 
65378,65380c63836,63994
< #line 1069
<   ldv_mutex_mutex_of_drbd_socket = 1;
< #line 1070
---
> #line 1693
>   rcu_read_lock();
> #line 1694
>   vnr = 0;
> #line 1694
>   tmp = idr_get_next(& tconn->volumes, & vnr);
> #line 1694
>   mdev = (struct drbd_conf *)tmp;
> #line 1694
>   goto ldv_52271;
>   ldv_52270: 
> #line 1695
>   number_of_volumes = number_of_volumes + 1;
> #line 1696
>   os = drbd_read_state(mdev);
> #line 1697
>   ns = apply_mask_val(os, mask, val);
> #line 1698
>   ns = sanitize_state(mdev, ns, 0);
> #line 1700
>   if ((((unsigned int )flags & 2048U) != 0U && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 10U) && (int )os.ldv_40604.disk <= 4) {
> #line 1701
>     ns.ldv_40604.disk = os.ldv_40604.disk;
>   } else {
> 
>   }
> #line 1703
>   rv = __drbd_set_state(mdev, ns, flags, 0);
> #line 1704
>   if ((int )rv <= 0) {
> #line 1705
>     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared"),
>                          "i" (1705), "i" (12UL));
>     ldv_52251: ;
> #line 1705
>     goto ldv_52251;
>   } else {
> 
>   }
> #line 1707
>   ns.i = mdev->state.i;
> #line 1708
>   tmp___0 = max_role((enum drbd_role )ns.ldv_40604.role, (enum drbd_role )ns_max.ldv_40604.role);
> #line 1708
>   ns_max.ldv_40604.role = (unsigned char )tmp___0;
> #line 1709
>   tmp___1 = max_role((enum drbd_role )ns.ldv_40604.peer, (enum drbd_role )ns_max.ldv_40604.peer);
> #line 1709
>   ns_max.ldv_40604.peer = (unsigned char )tmp___1;
> #line 1710
>   __max1 = (enum drbd_conns )ns.ldv_40604.conn;
> #line 1710
>   __max2 = (enum drbd_conns )ns_max.ldv_40604.conn;
> #line 1710
>   ns_max.ldv_40604.conn = (unsigned char )((unsigned int )__max1 > (unsigned int )__max2 ? (unsigned int )__max1 : (unsigned int )__max2);
> #line 1711
>   __max1___0 = (enum drbd_disk_state )ns.ldv_40604.disk;
> #line 1711
>   __max2___0 = (enum drbd_disk_state )ns_max.ldv_40604.disk;
> #line 1711
>   ns_max.ldv_40604.disk = (unsigned char )((unsigned int )__max1___0 > (unsigned int )__max2___0 ? (unsigned int )__max1___0 : (unsigned int )__max2___0);
> #line 1712
>   __max1___1 = (enum drbd_disk_state )ns.ldv_40604.pdsk;
> #line 1712
>   __max2___1 = (enum drbd_disk_state )ns_max.ldv_40604.pdsk;
> #line 1712
>   ns_max.ldv_40604.pdsk = (unsigned char )((unsigned int )__max1___1 > (unsigned int )__max2___1 ? (unsigned int )__max1___1 : (unsigned int )__max2___1);
> #line 1714
>   tmp___2 = min_role((enum drbd_role )ns.ldv_40604.role, (enum drbd_role )ns_min.ldv_40604.role);
> #line 1714
>   ns_min.ldv_40604.role = (unsigned char )tmp___2;
> #line 1715
>   tmp___3 = min_role((enum drbd_role )ns.ldv_40604.peer, (enum drbd_role )ns_min.ldv_40604.peer);
> #line 1715
>   ns_min.ldv_40604.peer = (unsigned char )tmp___3;
> #line 1716
>   __min1 = (enum drbd_conns )ns.ldv_40604.conn;
> #line 1716
>   __min2 = (enum drbd_conns )ns_min.ldv_40604.conn;
> #line 1716
>   ns_min.ldv_40604.conn = (unsigned char )((unsigned int )__min1 < (unsigned int )__min2 ? (unsigned int )__min1 : (unsigned int )__min2);
> #line 1717
>   __min1___0 = (enum drbd_disk_state )ns.ldv_40604.disk;
> #line 1717
>   __min2___0 = (enum drbd_disk_state )ns_min.ldv_40604.disk;
> #line 1717
>   ns_min.ldv_40604.disk = (unsigned char )((unsigned int )__min1___0 < (unsigned int )__min2___0 ? (unsigned int )__min1___0 : (unsigned int )__min2___0);
> #line 1718
>   __min1___1 = (enum drbd_disk_state )ns.ldv_40604.pdsk;
> #line 1718
>   __min2___1 = (enum drbd_disk_state )ns_min.ldv_40604.pdsk;
> #line 1718
>   ns_min.ldv_40604.pdsk = (unsigned char )((unsigned int )__min1___1 < (unsigned int )__min2___1 ? (unsigned int )__min1___1 : (unsigned int )__min2___1);
> #line 1694
>   vnr = vnr + 1;
> #line 1694
>   tmp___4 = idr_get_next(& tconn->volumes, & vnr);
> #line 1694
>   mdev = (struct drbd_conf *)tmp___4;
>   ldv_52271: ;
> #line 1694
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 1695
>     goto ldv_52270;
>   } else {
> 
>   }
> #line 1720
>   rcu_read_unlock();
> #line 1722
>   if (number_of_volumes == 0) {
> #line 1723
>     __constr_expr_0.ldv_40604.role = 2U;
> #line 1723
>     __constr_expr_0.ldv_40604.peer = 0U;
> #line 1723
>     __constr_expr_0.ldv_40604.conn = val.ldv_40604.conn;
> #line 1723
>     __constr_expr_0.ldv_40604.disk = 0U;
> #line 1723
>     __constr_expr_0.ldv_40604.pdsk = 6U;
> #line 1723
>     __constr_expr_0.ldv_40604.susp = (unsigned char)0;
> #line 1723
>     __constr_expr_0.ldv_40604.aftr_isp = (unsigned char)0;
> #line 1723
>     __constr_expr_0.ldv_40604.peer_isp = (unsigned char)0;
> #line 1723
>     __constr_expr_0.ldv_40604.user_isp = (unsigned char)0;
> #line 1723
>     __constr_expr_0.ldv_40604.susp_nod = (unsigned char)0;
> #line 1723
>     __constr_expr_0.ldv_40604.susp_fen = (unsigned char)0;
> #line 1723
>     __constr_expr_0.ldv_40604._pad = (unsigned short)0;
> #line 1723
>     ns_max = __constr_expr_0;
> #line 1723
>     ns_min = ns_max;
>   } else {
> 
>   }
> #line 1732
>   ns_max.ldv_40604.susp = tconn->susp;
> #line 1732
>   ns_min.ldv_40604.susp = ns_max.ldv_40604.susp;
> #line 1733
>   ns_max.ldv_40604.susp_nod = tconn->susp_nod;
> #line 1733
>   ns_min.ldv_40604.susp_nod = ns_max.ldv_40604.susp_nod;
> #line 1734
>   ns_max.ldv_40604.susp_fen = tconn->susp_fen;
> #line 1734
>   ns_min.ldv_40604.susp_fen = ns_max.ldv_40604.susp_fen;
> #line 1736
>   *pns_min = ns_min;
> #line 1737
>   *pns_max = ns_max;
> #line 1738
65384,65387c63998,64000
< #line 1072 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< static int ldv_mutex_state_mutex_of_drbd_conf  ;
< #line 1075 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_lock_interruptible_state_mutex_of_drbd_conf(struct mutex *lock ) 
---
> #line 1741 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared"
> static enum drbd_state_rv _conn_rq_cond(struct drbd_tconn *tconn , union drbd_state mask ,
>                                         union drbd_state val ) 
65389c64002,64004
<   int nondetermined ;
---
>   enum drbd_state_rv rv ;
>   int tmp ;
>   int tmp___0 ;
65392,65393c64007,64013
< #line 1080
<   if (ldv_mutex_state_mutex_of_drbd_conf == 1) {
---
> #line 1745
>   tmp = test_and_clear_bit(6, (unsigned long volatile   *)(& tconn->flags));
> #line 1745
>   if (tmp != 0) {
> #line 1746
>     return (SS_CW_SUCCESS);
>   } else {
65394a64015,64021
>   }
> #line 1748
>   tmp___0 = test_and_clear_bit(7, (unsigned long volatile   *)(& tconn->flags));
> #line 1748
>   if (tmp___0 != 0) {
> #line 1749
>     return (SS_CW_FAILED_BY_PEER);
65396,65397c64023
< #line 1080
<     ldv_error();
---
> 
65399,65406c64025,64030
< #line 1083
<   nondetermined = ldv_undef_int();
< #line 1086
<   if (nondetermined) {
< #line 1089
<     ldv_mutex_state_mutex_of_drbd_conf = 2;
< #line 1091
<     return (0);
---
> #line 1751
>   rv = (unsigned int )tconn->cstate != 9U ? SS_CW_NO_NEED : SS_UNKNOWN_ERROR;
> #line 1753
>   if ((int )rv == 0) {
> #line 1754
>     rv = conn_is_valid_transition(tconn, mask, val, 0);
65408,65409c64032,64039
< #line 1096
<     return (-4);
---
> 
>   }
> #line 1756
>   if ((int )rv == 1) {
> #line 1757
>     rv = SS_UNKNOWN_ERROR;
>   } else {
> 
65410a64041,64042
> #line 1759
>   return (rv);
65413,65414c64045,64047
< #line 1101 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_lock_killable_state_mutex_of_drbd_conf(struct mutex *lock ) 
---
> #line 1763 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared"
> enum drbd_state_rv _conn_request_state(struct drbd_tconn *tconn , union drbd_state mask ,
>                                        union drbd_state val , enum chg_state_flags flags ) 
65416c64049,64068
<   int nondetermined ;
---
>   enum drbd_state_rv rv ;
>   struct after_conn_state_chg_work *acscw ;
>   enum drbd_conns oc ;
>   union drbd_state ns_max ;
>   union drbd_state ns_min ;
>   union drbd_state os ;
>   bool have_mutex ;
>   int tmp ;
>   wait_queue_t __wait ;
>   struct task_struct *tmp___0 ;
>   long volatile   __ret ;
>   struct task_struct *tmp___1 ;
>   struct task_struct *tmp___2 ;
>   struct task_struct *tmp___3 ;
>   struct task_struct *tmp___4 ;
>   struct task_struct *tmp___5 ;
>   void *tmp___6 ;
>   char const   *tmp___7 ;
>   char const   *tmp___8 ;
>   char const   *tmp___9 ;
65419,65420c64071,64085
< #line 1106
<   if (ldv_mutex_state_mutex_of_drbd_conf == 1) {
---
> #line 1766
>   rv = 1;
> #line 1768
>   oc = tconn->cstate;
> #line 1770
>   have_mutex = 0;
> #line 1772
>   if ((unsigned int )*((unsigned short *)(& mask) + 0UL) != 0U) {
> #line 1773
>     rv = is_valid_conn_transition(oc, (enum drbd_conns )val.ldv_40604.conn);
> #line 1774
>     if ((int )rv <= 0) {
> #line 1775
>       goto abort;
>     } else {
65421a64087
>     }
65423,65424c64089
< #line 1106
<     ldv_error();
---
> 
65426,65433c64091,64096
< #line 1109
<   nondetermined = ldv_undef_int();
< #line 1112
<   if (nondetermined) {
< #line 1115
<     ldv_mutex_state_mutex_of_drbd_conf = 2;
< #line 1117
<     return (0);
---
> #line 1778
>   rv = conn_is_valid_transition(tconn, mask, val, flags);
> #line 1779
>   if ((int )rv <= 0) {
> #line 1780
>     goto abort;
65435,65436c64098,64224
< #line 1122
<     return (-4);
---
> 
>   }
> #line 1782
>   if (((unsigned int )oc == 9U && (unsigned int )*((unsigned short *)(& val) + 0UL) == 16U) && ((unsigned int )flags & 17U) == 0U) {
> #line 1788
>     spin_unlock_irq(& tconn->req_lock);
> #line 1789
>     mutex_lock_nested(& tconn->cstate_mutex, 0U);
> #line 1790
>     have_mutex = 1;
> #line 1792
>     set_bit(5U, (unsigned long volatile   *)(& tconn->flags));
> #line 1793
>     tmp = conn_send_state_req(tconn, mask, val);
> #line 1793
>     if (tmp != 0) {
> #line 1795
>       clear_bit(5, (unsigned long volatile   *)(& tconn->flags));
> #line 1796
>       rv = SS_CW_FAILED_BY_PEER;
> #line 1798
>       goto abort_unlocked;
>     } else {
> 
>     }
> #line 1801
>     if ((unsigned int )*((unsigned short *)(& val) + 0UL) == 16U) {
> #line 1802
>       set_bit(12U, (unsigned long volatile   *)(& tconn->flags));
>     } else {
> 
>     }
> #line 1807
>     spin_lock_irq(& tconn->req_lock);
> #line 1808
>     rv = _conn_rq_cond(tconn, mask, val);
> #line 1808
>     if ((int )rv != 0) {
> #line 1808
>       goto ldv_52295;
>     } else {
> 
>     }
> #line 1808
>     tmp___0 = get_current();
> #line 1808
>     init_waitqueue_entry(& __wait, tmp___0);
> #line 1808
>     add_wait_queue(& tconn->ping_wait, & __wait);
>     ldv_52306: 
> #line 1808
>     __ret = 2L;
> #line 1808
>     switch (8UL) {
>     case 1UL: 
> #line 1808
>     tmp___1 = get_current();
> #line 1808
>     __asm__  volatile   ("xchgb %b0, %1\n": "+q" (__ret), "+m" (tmp___1->state): : "memory",
>                          "cc");
> #line 1808
>     goto ldv_52299;
>     case 2UL: 
> #line 1808
>     tmp___2 = get_current();
> #line 1808
>     __asm__  volatile   ("xchgw %w0, %1\n": "+r" (__ret), "+m" (tmp___2->state): : "memory",
>                          "cc");
> #line 1808
>     goto ldv_52299;
>     case 4UL: 
> #line 1808
>     tmp___3 = get_current();
> #line 1808
>     __asm__  volatile   ("xchgl %0, %1\n": "+r" (__ret), "+m" (tmp___3->state): : "memory",
>                          "cc");
> #line 1808
>     goto ldv_52299;
>     case 8UL: 
> #line 1808
>     tmp___4 = get_current();
> #line 1808
>     __asm__  volatile   ("xchgq %q0, %1\n": "+r" (__ret), "+m" (tmp___4->state): : "memory",
>                          "cc");
> #line 1808
>     goto ldv_52299;
>     default: 
> #line 1808
>     __xchg_wrong_size();
>     }
>     ldv_52299: 
> #line 1808
>     rv = _conn_rq_cond(tconn, mask, val);
> #line 1808
>     if ((int )rv != 0) {
> #line 1808
>       goto ldv_52305;
>     } else {
> 
>     }
> #line 1808
>     spin_unlock_irq(& tconn->req_lock);
> #line 1808
>     schedule();
> #line 1808
>     spin_lock_irq(& tconn->req_lock);
> #line 1808
>     goto ldv_52306;
>     ldv_52305: 
> #line 1808
>     tmp___5 = get_current();
> #line 1808
>     tmp___5->state = 0L;
> #line 1808
>     remove_wait_queue(& tconn->ping_wait, & __wait);
>     ldv_52295: 
> #line 1812
>     clear_bit(5, (unsigned long volatile   *)(& tconn->flags));
> #line 1813
>     if ((int )rv <= 0) {
> #line 1814
>       goto abort;
>     } else {
> 
>     }
>   } else {
> 
65437a64226,64308
> #line 1817
>   conn_old_common_state(tconn, & os, & flags);
> #line 1818
>   flags = (enum chg_state_flags )((unsigned int )flags | 1024U);
> #line 1819
>   conn_set_state(tconn, mask, val, & ns_min, & ns_max, flags);
> #line 1820
>   conn_pr_state_change(tconn, os, ns_max, flags);
> #line 1822
>   tmp___6 = kmalloc(48UL, 32U);
> #line 1822
>   acscw = (struct after_conn_state_chg_work *)tmp___6;
> #line 1823
>   if ((unsigned long )acscw != (unsigned long )((struct after_conn_state_chg_work *)0)) {
> #line 1824
>     acscw->oc = (enum drbd_conns )os.ldv_40604.conn;
> #line 1825
>     acscw->ns_min = ns_min;
> #line 1826
>     acscw->ns_max = ns_max;
> #line 1827
>     acscw->flags = flags;
> #line 1828
>     acscw->w.cb = & w_after_conn_state_ch;
> #line 1829
>     kref_get(& tconn->kref);
> #line 1830
>     acscw->w.ldv_50388.tconn = tconn;
> #line 1831
>     drbd_queue_work(& tconn->sender_work, & acscw->w);
>   } else {
> #line 1833
>     printk("\vd-con %s: Could not kmalloc an acscw\n", tconn->name);
>   }
>   abort: ;
> #line 1837
>   if ((int )have_mutex) {
> #line 1840
>     spin_unlock_irq(& tconn->req_lock);
>     abort_unlocked: 
> #line 1842
>     mutex_unlock(& tconn->cstate_mutex);
> #line 1843
>     spin_lock_irq(& tconn->req_lock);
>   } else {
> 
>   }
> #line 1845
>   if ((int )rv <= 0 && ((unsigned int )flags & 2U) != 0U) {
> #line 1846
>     tmp___7 = drbd_set_st_err_str(rv);
> #line 1846
>     printk("\vd-con %s: State change failed: %s\n", tconn->name, tmp___7);
> #line 1847
>     printk("\vd-con %s:  mask = 0x%x val = 0x%x\n", tconn->name, mask.i, val.i);
> #line 1848
>     tmp___8 = drbd_conn_str((enum drbd_conns )val.ldv_40604.conn);
> #line 1848
>     tmp___9 = drbd_conn_str(oc);
> #line 1848
>     printk("\vd-con %s:  old_conn:%s wanted_conn:%s\n", tconn->name, tmp___9, tmp___8);
>   } else {
> 
>   }
> #line 1850
>   return (rv);
> }
> }
> #line 1854 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_state.c.prepared"
> enum drbd_state_rv conn_request_state(struct drbd_tconn *tconn , union drbd_state mask ,
>                                       union drbd_state val , enum chg_state_flags flags ) 
> { 
>   enum drbd_state_rv rv ;
> 
>   {
> #line 1859
>   spin_lock_irq(& tconn->req_lock);
> #line 1860
>   rv = _conn_request_state(tconn, mask, val, flags);
> #line 1861
>   spin_unlock_irq(& tconn->req_lock);
> #line 1863
>   return (rv);
65440,65441c64311,64314
< #line 1127 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< void ldv_mutex_lock_state_mutex_of_drbd_conf(struct mutex *lock ) 
---
> #line 238 "include/net/netlink.h"
> extern int nla_parse(struct nlattr ** , int  , struct nlattr  const  * , int  , struct nla_policy  const  * ) ;
> #line 672 "include/net/netlink.h"
> __inline static int nla_type(struct nlattr  const  *nla ) 
65446,65447c64319,64325
< #line 1130
<   if (ldv_mutex_state_mutex_of_drbd_conf == 1) {
---
> #line 674
>   return ((int )nla->nla_type & -49153);
> }
> }
> #line 700 "include/net/netlink.h"
> __inline static int nla_ok(struct nlattr  const  *nla , int remaining ) 
> { 
65449,65456c64327,64330
<   } else {
< #line 1130
<     ldv_error();
<   }
< #line 1132
<   ldv_mutex_state_mutex_of_drbd_conf = 2;
< #line 1133
<   return;
---
> 
>   {
> #line 702
>   return ((remaining > 3 && (unsigned int )((unsigned short )nla->nla_len) > 3U) && (int )nla->nla_len <= remaining);
65459,65460c64333,64334
< #line 1136 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_trylock_state_mutex_of_drbd_conf(struct mutex *lock ) 
---
> #line 715 "include/net/netlink.h"
> __inline static struct nlattr *nla_next(struct nlattr  const  *nla , int *remaining ) 
65462c64336
<   int is_mutex_held_by_another_thread ;
---
>   int totlen ;
65465,65466c64339,64352
< #line 1141
<   if (ldv_mutex_state_mutex_of_drbd_conf == 1) {
---
> #line 717
>   totlen = ((int )nla->nla_len + 3) & -4;
> #line 719
>   *remaining = *remaining - totlen;
> #line 720
>   return ((struct nlattr *)nla + (unsigned long )totlen);
> }
> }
> #line 731 "include/net/netlink.h"
> __inline static struct nlattr *nla_find_nested(struct nlattr  const  *nla , int attrtype ) 
> { 
>   int tmp ;
>   void *tmp___0 ;
>   struct nlattr *tmp___1 ;
65468,65483c64354,64362
<   } else {
< #line 1141
<     ldv_error();
<   }
< #line 1144
<   is_mutex_held_by_another_thread = ldv_undef_int();
< #line 1147
<   if (is_mutex_held_by_another_thread) {
< #line 1150
<     return (0);
<   } else {
< #line 1155
<     ldv_mutex_state_mutex_of_drbd_conf = 2;
< #line 1157
<     return (1);
<   }
---
>   {
> #line 733
>   tmp = nla_len(nla);
> #line 733
>   tmp___0 = nla_data(nla);
> #line 733
>   tmp___1 = nla_find((struct nlattr  const  *)tmp___0, tmp, attrtype);
> #line 733
>   return (tmp___1);
65486,65487c64365,64367
< #line 1162 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_atomic_dec_and_mutex_lock_state_mutex_of_drbd_conf(atomic_t *cnt , struct mutex *lock ) 
---
> #line 745 "include/net/netlink.h"
> __inline static int nla_parse_nested(struct nlattr **tb , int maxtype , struct nlattr  const  *nla ,
>                                      struct nla_policy  const  *policy ) 
65489c64369,64371
<   int atomic_value_after_dec ;
---
>   int tmp ;
>   void *tmp___0 ;
>   int tmp___1 ;
65492,65493c64374,64421
< #line 1167
<   if (ldv_mutex_state_mutex_of_drbd_conf == 1) {
---
> #line 749
>   tmp = nla_len(nla);
> #line 749
>   tmp___0 = nla_data(nla);
> #line 749
>   tmp___1 = nla_parse(tb, maxtype, (struct nlattr  const  *)tmp___0, tmp, policy);
> #line 749
>   return (tmp___1);
> }
> }
> #line 14 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nla.c.prepared"
> static int drbd_nla_check_mandatory(int maxtype , struct nlattr *nla ) 
> { 
>   struct nlattr *head ;
>   void *tmp ;
>   int len ;
>   int tmp___0 ;
>   int rem ;
>   int tmp___1 ;
>   int tmp___2 ;
> 
>   {
> #line 16
>   tmp = nla_data((struct nlattr  const  *)nla);
> #line 16
>   head = (struct nlattr *)tmp;
> #line 17
>   tmp___0 = nla_len((struct nlattr  const  *)nla);
> #line 17
>   len = tmp___0;
> #line 28
>   nla = head;
> #line 28
>   rem = len;
> #line 28
>   goto ldv_51705;
>   ldv_51704: ;
> #line 29
>   if (((int )nla->nla_type & 16384) != 0) {
> #line 30
>     nla->nla_type = (unsigned int )nla->nla_type & 49151U;
> #line 31
>     tmp___1 = nla_type((struct nlattr  const  *)nla);
> #line 31
>     if (tmp___1 > maxtype) {
> #line 32
>       return (-95);
>     } else {
65494a64423
>     }
65496,65497c64425
< #line 1167
<     ldv_error();
---
> 
65499,65506c64427,64435
< #line 1170
<   atomic_value_after_dec = ldv_undef_int();
< #line 1173
<   if (atomic_value_after_dec == 0) {
< #line 1176
<     ldv_mutex_state_mutex_of_drbd_conf = 2;
< #line 1178
<     return (1);
---
> #line 28
>   nla = nla_next((struct nlattr  const  *)nla, & rem);
>   ldv_51705: 
> #line 28
>   tmp___2 = nla_ok((struct nlattr  const  *)nla, rem);
> #line 28
>   if (tmp___2 != 0) {
> #line 29
>     goto ldv_51704;
65510c64439,64440
< #line 1182
---
> 
> #line 35
65514,65515c64444,64446
< #line 1187 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_is_locked_state_mutex_of_drbd_conf(struct mutex *lock ) 
---
> #line 38 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nla.c.prepared"
> int drbd_nla_parse_nested(struct nlattr **tb , int maxtype , struct nlattr *nla ,
>                           struct nla_policy  const  *policy ) 
65517c64448
<   int nondetermined ;
---
>   int err ;
65520,65531c64451,64456
< #line 1191
<   if (ldv_mutex_state_mutex_of_drbd_conf == 1) {
< #line 1194
<     nondetermined = ldv_undef_int();
< #line 1197
<     if (nondetermined) {
< #line 1200
<       return (0);
<     } else {
< #line 1205
<       return (1);
<     }
---
> #line 43
>   err = drbd_nla_check_mandatory(maxtype, nla);
> #line 44
>   if (err == 0) {
> #line 45
>     err = nla_parse_nested(tb, maxtype, (struct nlattr  const  *)nla, policy);
65533,65534c64458
< #line 1211
<     return (1);
---
> 
65535a64460,64461
> #line 47
>   return (err);
65538,65539c64464,64465
< #line 1216 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< void ldv_mutex_unlock_state_mutex_of_drbd_conf(struct mutex *lock ) 
---
> #line 50 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_nla.c.prepared"
> struct nlattr *drbd_nla_find_nested(int maxtype , struct nlattr *nla , int attrtype ) 
65541c64467,64469
< 
---
>   int err ;
>   void *tmp ;
>   struct nlattr *tmp___0 ;
65544,65546c64472,64479
< #line 1219
<   if (ldv_mutex_state_mutex_of_drbd_conf == 2) {
< 
---
> #line 58
>   err = drbd_nla_check_mandatory(maxtype, nla);
> #line 59
>   if (err != 0) {
> #line 60
>     tmp = ERR_PTR((long )err);
> #line 60
>     return ((struct nlattr *)tmp);
65548,65549c64481
< #line 1219
<     ldv_error();
---
> 
65551,65554c64483,64486
< #line 1221
<   ldv_mutex_state_mutex_of_drbd_conf = 1;
< #line 1222
<   return;
---
> #line 61
>   tmp___0 = nla_find_nested((struct nlattr  const  *)nla, attrtype);
> #line 61
>   return (tmp___0);
65557,65558c64489,64490
< #line 1226 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< void ldv_initialize(void) 
---
> #line 10 "/home/ldvuser/ldv/inst/kernel-rules/verifier/rcv.h"
> __inline static void ldv_error(void) 
65563,65580c64495,64497
< #line 1229
<   ldv_mutex_bm_change_of_drbd_bitmap = 1;
< #line 1231
<   ldv_mutex_cred_guard_mutex_of_signal_struct = 1;
< #line 1233
<   ldv_mutex_drbd_main_mutex = 1;
< #line 1235
<   ldv_mutex_lock = 1;
< #line 1237
<   ldv_mutex_mtx_of_percpu_rw_semaphore = 1;
< #line 1239
<   ldv_mutex_mutex_of_device = 1;
< #line 1241
<   ldv_mutex_mutex_of_drbd_socket = 1;
< #line 1243
<   ldv_mutex_state_mutex_of_drbd_conf = 1;
< #line 1244
<   return;
---
>   LDV_ERROR: reach_error();
> #line 12
>   goto LDV_ERROR;
65583,65584c64500,64503
< #line 1247 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< void ldv_check_final_state(void) 
---
> #line 25
> extern int ldv_undef_int(void) ;
> #line 49 "/home/ldvuser/ldv/inst/kernel-rules/verifier/rcv.h"
> long __builtin_expect(long exp , long c ) 
65589,65590c64508,64516
< #line 1250
<   if (ldv_mutex_bm_change_of_drbd_bitmap == 1) {
---
> #line 51
>   return (exp);
> }
> }
> #line 6 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/08_1a/common-model/ldv_common_model.c"
> int ldv_module_refcounter  =    1;
> #line 9 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/08_1a/common-model/ldv_common_model.c"
> void ldv_module_get(struct module *module ) 
> { 
65592,65597d64517
<   } else {
< #line 1250
<     ldv_error();
<   }
< #line 1252
<   if (ldv_mutex_cred_guard_mutex_of_signal_struct == 1) {
65598a64519,64523
>   {
> #line 12
>   if (module) {
> #line 14
>     ldv_module_refcounter = ldv_module_refcounter + 1;
65600,65604d64524
< #line 1252
<     ldv_error();
<   }
< #line 1254
<   if (ldv_mutex_drbd_main_mutex == 1) {
65606,65608d64525
<   } else {
< #line 1254
<     ldv_error();
65610,65611c64527,64534
< #line 1256
<   if (ldv_mutex_lock == 1) {
---
> #line 16
>   return;
> }
> }
> #line 19 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/08_1a/common-model/ldv_common_model.c"
> int ldv_try_module_get(struct module *module ) 
> { 
>   int module_get_succeeded ;
65612a64536,64550
>   {
> #line 24
>   if (module) {
> #line 27
>     module_get_succeeded = ldv_undef_int();
> #line 29
>     if (module_get_succeeded == 1) {
> #line 31
>       ldv_module_refcounter = ldv_module_refcounter + 1;
> #line 33
>       return (1);
>     } else {
> #line 38
>       return (0);
>     }
65614,65618d64551
< #line 1256
<     ldv_error();
<   }
< #line 1258
<   if (ldv_mutex_mtx_of_percpu_rw_semaphore == 1) {
65620,65622d64552
<   } else {
< #line 1258
<     ldv_error();
65624,65625c64554,64560
< #line 1260
<   if (ldv_mutex_mutex_of_device == 1) {
---
> #line 41
>   return (0);
> }
> }
> #line 44 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/08_1a/common-model/ldv_common_model.c"
> void ldv_module_put(struct module *module ) 
> { 
65627,65632d64561
<   } else {
< #line 1260
<     ldv_error();
<   }
< #line 1262
<   if (ldv_mutex_mutex_of_drbd_socket == 1) {
65633a64563,64574
>   {
> #line 47
>   if (module) {
> #line 49
>     if (ldv_module_refcounter > 1) {
> 
>     } else {
> #line 49
>       ldv_error();
>     }
> #line 51
>     ldv_module_refcounter = ldv_module_refcounter - 1;
65635,65636c64576
< #line 1262
<     ldv_error();
---
> 
65638,65639c64578,64612
< #line 1264
<   if (ldv_mutex_state_mutex_of_drbd_conf == 1) {
---
> #line 53
>   return;
> }
> }
> #line 56 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/08_1a/common-model/ldv_common_model.c"
> void ldv_module_put_and_exit(void) 
> { 
> 
> 
>   {
> #line 58
>   ldv_module_put((struct module *)1);
>   LDV_STOP: 
> #line 60
>   goto LDV_STOP;
> }
> }
> #line 64 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/08_1a/common-model/ldv_common_model.c"
> unsigned int ldv_module_refcount(void) 
> { 
> 
> 
>   {
> #line 67
>   return (ldv_module_refcounter - 1);
> }
> }
> #line 71 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/08_1a/common-model/ldv_common_model.c"
> void ldv_check_final_state(void) 
> { 
> 
> 
>   {
> #line 74
>   if (ldv_module_refcounter == 1) {
65642c64615
< #line 1264
---
> #line 74
65645c64618
< #line 1265
---
> #line 75
