6677c6677
< #line 3230
---
> #line 3231
6683c6683
< #line 3496 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3497 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
6685c6685
< #line 4124 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4125 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
6687c6687
< #line 4287 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4288 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
6692c6692
< #line 4592 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4593 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
24175a24176,24177
>   peer = *(mdev->p_uuid) & 0xfffffffffffffffeULL;
> #line 2436
24177c24179
< #line 2435
---
> #line 2436
24180,24181d24181
< #line 2436
<   self = (mdev->ldev)->md.uuid[i] & 0xfffffffffffffffeULL;
24183c24183
<   if (self == peer) {
---
>   self = (mdev->ldev)->md.uuid[i] & 0xfffffffffffffffeULL;
24184a24185,24186
>   if (self == peer) {
> #line 2439
24189c24191
< #line 2435
---
> #line 2436
24192,24193d24193
< #line 2435
<   if (i <= 3) {
24194a24195,24196
>   if (i <= 3) {
> #line 2437
24199,24200d24200
< #line 2441
<   *rule_nr = 90;
24202c24202
<   self = (mdev->ldev)->md.uuid[1] & 0xfffffffffffffffeULL;
---
>   *rule_nr = 90;
24204c24204
<   peer = *(mdev->p_uuid + 1UL) & 0xfffffffffffffffeULL;
---
>   self = (mdev->ldev)->md.uuid[1] & 0xfffffffffffffffeULL;
24206c24206
<   if (self == peer && self != 0ULL) {
---
>   peer = *(mdev->p_uuid + 1UL) & 0xfffffffffffffffeULL;
24207a24208,24209
>   if (self == peer && self != 0ULL) {
> #line 2446
24212,24213d24213
< #line 2447
<   *rule_nr = 100;
24214a24215,24216
>   *rule_nr = 100;
> #line 2449
24216c24218
< #line 2448
---
> #line 2449
24219,24220d24220
< #line 2449
<   self = (mdev->ldev)->md.uuid[i] & 0xfffffffffffffffeULL;
24221a24222,24223
>   self = (mdev->ldev)->md.uuid[i] & 0xfffffffffffffffeULL;
> #line 2451
24223c24225
< #line 2450
---
> #line 2451
24226,24227d24227
< #line 2451
<   peer = *(mdev->p_uuid + (unsigned long )j) & 0xfffffffffffffffeULL;
24229c24229
<   if (self == peer) {
---
>   peer = *(mdev->p_uuid + (unsigned long )j) & 0xfffffffffffffffeULL;
24230a24231,24232
>   if (self == peer) {
> #line 2454
24235c24237
< #line 2450
---
> #line 2451
24238,24239d24239
< #line 2450
<   if (j <= 3) {
24240a24241,24242
>   if (j <= 3) {
> #line 2452
24245c24247
< #line 2448
---
> #line 2449
24248,24249d24249
< #line 2448
<   if (i <= 3) {
24250a24251,24252
>   if (i <= 3) {
> #line 2450
24256c24258
< #line 2457
---
> #line 2458
24260c24262
< #line 2463 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2464 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
24309c24311
< #line 2467
---
> #line 2468
24311,24312d24312
< #line 2470
<   mydisk = (enum drbd_disk_state )mdev->state.ldv_32224.disk;
24314c24314
<   if ((unsigned int )mydisk == 3U) {
---
>   mydisk = (enum drbd_disk_state )mdev->state.ldv_32224.disk;
24315a24316,24317
>   if ((unsigned int )mydisk == 3U) {
> #line 2473
24320c24322
< #line 2474
---
> #line 2475
24322c24324
< #line 2474
---
> #line 2475
24324,24325d24325
< #line 2474
<   printk("<6>%s %s: drbd_sync_handshake:\n", tmp___0, tmp);
24326a24327,24328
>   printk("<6>%s %s: drbd_sync_handshake:\n", tmp___0, tmp);
> #line 2476
24329c24331
< #line 2476
---
> #line 2477
24331c24333
< #line 2479
---
> #line 2480
24333c24335
< #line 2481
---
> #line 2482
24335c24337
< #line 2481
---
> #line 2482
24337c24339
< #line 2481
---
> #line 2482
24339,24340d24340
< #line 2483
<   if (hg == -1000) {
24341a24342,24343
>   if (hg == -1000) {
> #line 2485
24343c24345
< #line 2484
---
> #line 2485
24345,24346d24346
< #line 2484
<     printk("<1>%s %s: Unrelated data, aborting!\n", tmp___4, tmp___3);
24347a24348,24349
>     printk("<1>%s %s: Unrelated data, aborting!\n", tmp___4, tmp___3);
> #line 2486
24352,24353d24353
< #line 2487
<   if (hg == -1001) {
24354a24355,24356
>   if (hg == -1001) {
> #line 2489
24356c24358
< #line 2488
---
> #line 2489
24358c24360
< #line 2488
---
> #line 2489
24361c24363
< #line 2489
---
> #line 2490
24366c24368
< #line 2492
---
> #line 2493
24368c24370
< #line 2494
---
> #line 2495
24370c24372
< #line 2494
---
> #line 2495
24373c24375
< #line 2494
---
> #line 2495
24375c24377
< #line 2494
---
> #line 2495
24377c24379
< #line 2494
---
> #line 2495
24380c24382
< #line 2494
---
> #line 2495
24384,24385d24385
< #line 2494
<     f = tmp___7;
24387c24387
<     hg = (unsigned int )mydisk > 4U ? 1 : -1;
---
>     f = tmp___7;
24389c24389
<     if (f != 0) {
---
>     hg = (unsigned int )mydisk > 4U ? 1 : -1;
24390a24391,24392
>     if (f != 0) {
> #line 2498
24395c24397
< #line 2498
---
> #line 2499
24397c24399
< #line 2498
---
> #line 2499
24399c24401
< #line 2498
---
> #line 2499
24404,24405d24405
< #line 2502
<   if (hg == 100 || (hg == -100 && (unsigned int )*((unsigned char *)mdev->net_conf + 528UL) != 0U)) {
24406a24407,24408
>   if (hg == 100 || (hg == -100 && (unsigned int )*((unsigned char *)mdev->net_conf + 528UL) != 0U)) {
> #line 2504
24408c24410
< #line 2505
---
> #line 2506
24410c24412
< #line 2507
---
> #line 2508
24413,24414d24414
< #line 2509
<     hg = drbd_asb_recover_0p(mdev);
24415a24416,24417
>     hg = drbd_asb_recover_0p(mdev);
> #line 2511
24418,24419d24419
< #line 2512
<     hg = drbd_asb_recover_1p(mdev);
24420a24421,24422
>     hg = drbd_asb_recover_1p(mdev);
> #line 2514
24423,24424d24424
< #line 2515
<     hg = drbd_asb_recover_2p(mdev);
24425a24426,24427
>     hg = drbd_asb_recover_2p(mdev);
> #line 2517
24429c24431
< #line 2518
---
> #line 2519
24431,24432d24432
< #line 2518
<     if ((__x___0 < 0L ? - __x___0 : __x___0) <= 99L) {
24433a24434,24435
>     if ((__x___0 < 0L ? - __x___0 : __x___0) <= 99L) {
> #line 2520
24435c24437
< #line 2519
---
> #line 2520
24437c24439
< #line 2519
---
> #line 2520
24440,24441d24441
< #line 2522
<       if (forced != 0) {
24442a24443,24444
>       if (forced != 0) {
> #line 2524
24444c24446
< #line 2523
---
> #line 2524
24446c24448
< #line 2523
---
> #line 2524
24449c24451
< #line 2525
---
> #line 2526
24460,24461d24461
< #line 2530
<   if (hg == -100) {
24463c24463
<     if ((unsigned int )*((unsigned char *)mdev->net_conf + 528UL) != 0U && (*(mdev->p_uuid + 5UL) & 1ULL) == 0ULL) {
---
>   if (hg == -100) {
24464a24465,24466
>     if ((unsigned int )*((unsigned char *)mdev->net_conf + 528UL) != 0U && (*(mdev->p_uuid + 5UL) & 1ULL) == 0ULL) {
> #line 2533
24469,24470d24470
< #line 2533
<     if ((unsigned int )*((unsigned char *)mdev->net_conf + 528UL) == 0U && (int )*(mdev->p_uuid + 5UL) & 1) {
24471a24472,24473
>     if ((unsigned int )*((unsigned char *)mdev->net_conf + 528UL) == 0U && (int )*(mdev->p_uuid + 5UL) & 1) {
> #line 2535
24476c24478
< #line 2536
---
> #line 2537
24478,24479d24479
< #line 2536
<     if ((__x___1 < 0L ? - __x___1 : __x___1) <= 99L) {
24480a24481,24482
>     if ((__x___1 < 0L ? - __x___1 : __x___1) <= 99L) {
> #line 2538
24482c24484
< #line 2537
---
> #line 2538
24484c24486
< #line 2537
---
> #line 2538
24493,24494d24494
< #line 2542
<   if (hg == -100) {
24495a24496,24497
>   if (hg == -100) {
> #line 2544
24497c24499
< #line 2543
---
> #line 2544
24499,24500d24500
< #line 2543
<     printk("<1>%s %s: Split-Brain detected, dropping connection!\n", tmp___17, tmp___16);
24502c24502
<     drbd_khelper(mdev, (char *)"split-brain");
---
>     printk("<1>%s %s: Split-Brain detected, dropping connection!\n", tmp___17, tmp___16);
24503a24504,24505
>     drbd_khelper(mdev, (char *)"split-brain");
> #line 2546
24508,24509d24509
< #line 2548
<   if (hg > 0 && (unsigned int )mydisk <= 4U) {
24510a24511,24512
>   if (hg > 0 && (unsigned int )mydisk <= 4U) {
> #line 2550
24512c24514
< #line 2549
---
> #line 2550
24514c24516
< #line 2549
---
> #line 2550
24517c24519
< #line 2550
---
> #line 2551
24522c24524
< #line 2553
---
> #line 2554
24524c24526
< #line 2555
---
> #line 2556
24527c24529
< #line 2557
---
> #line 2558
24530c24532
< #line 2560
---
> #line 2561
24532c24534
< #line 2560
---
> #line 2561
24534,24535d24535
< #line 2560
<     printk("<3>%s %s: I shall become SyncTarget, but I am primary!\n", tmp___21, tmp___20);
24536a24537,24538
>     printk("<3>%s %s: I shall become SyncTarget, but I am primary!\n", tmp___21, tmp___20);
> #line 2562
24539c24541
< #line 2563
---
> #line 2564
24541c24543
< #line 2563
---
> #line 2564
24543c24545
< #line 2563
---
> #line 2564
24550c24552
< #line 2568
---
> #line 2569
24552,24553d24553
< #line 2568
<   if ((__x___2 < 0L ? - __x___2 : __x___2) > 1L) {
24554a24555,24556
>   if ((__x___2 < 0L ? - __x___2 : __x___2) > 1L) {
> #line 2570
24556c24558
< #line 2569
---
> #line 2570
24558c24560
< #line 2569
---
> #line 2570
24561c24563
< #line 2570
---
> #line 2571
24563,24564d24564
< #line 2570
<     if (tmp___26 != 0) {
24565a24566,24567
>     if (tmp___26 != 0) {
> #line 2572
24573,24574d24574
< #line 2574
<   if (hg > 0) {
24575a24576,24577
>   if (hg > 0) {
> #line 2576
24578,24579d24579
< #line 2576
<   if (hg < 0) {
24580a24581,24582
>   if (hg < 0) {
> #line 2578
24583,24584d24584
< #line 2579
<     rv = C_CONNECTED;
24585a24586,24587
>     rv = C_CONNECTED;
> #line 2581
24587,24588d24588
< #line 2580
<     if (tmp___30 != 0UL) {
24589a24590,24591
>     if (tmp___30 != 0UL) {
> #line 2582
24591c24593
< #line 2581
---
> #line 2582
24593c24595
< #line 2581
---
> #line 2582
24595c24597
< #line 2581
---
> #line 2582
24602c24604
< #line 2586
---
> #line 2587
24606c24608
< #line 2590 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2591 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
24612c24614
< #line 2593
---
> #line 2594
24614c24616
< #line 2595
---
> #line 2596
24619c24621
< #line 2598
---
> #line 2599
24621c24623
< #line 2600
---
> #line 2601
24626,24627d24627
< #line 2603
<   if ((unsigned int )peer == (unsigned int )self) {
24628a24629,24630
>   if ((unsigned int )peer == (unsigned int )self) {
> #line 2605
24633c24635
< #line 2607
---
> #line 2608
24637c24639
< #line 2610 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2611 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
24684c24686
< #line 2612
---
> #line 2613
24686c24688
< #line 2616
---
> #line 2617
24688c24690
< #line 2616
---
> #line 2617
24690c24692
< #line 2616
---
> #line 2617
24692c24694
< #line 2616
---
> #line 2617
24694c24696
< #line 2616
---
> #line 2617
24699c24701
< #line 2616
---
> #line 2617
24701c24703
< #line 2616
---
> #line 2617
24704,24705d24705
< #line 2618
<   header_size = 24;
24706a24707,24708
>   header_size = 24;
> #line 2620
24708c24710
< #line 2621
---
> #line 2622
24710,24711d24711
< #line 2621
<   if (tmp___0 != header_size) {
24712a24713,24714
>   if (tmp___0 != header_size) {
> #line 2623
24717c24719
< #line 2624
---
> #line 2625
24719,24720d24720
< #line 2624
<   p_proto = (int )tmp___1;
24721a24722,24723
>   p_proto = (int )tmp___1;
> #line 2626
24723,24724d24724
< #line 2625
<   p_after_sb_0p = (int )tmp___2;
24725a24726,24727
>   p_after_sb_0p = (int )tmp___2;
> #line 2627
24727,24728d24728
< #line 2626
<   p_after_sb_1p = (int )tmp___3;
24729a24730,24731
>   p_after_sb_1p = (int )tmp___3;
> #line 2628
24731,24732d24732
< #line 2627
<   p_after_sb_2p = (int )tmp___4;
24733a24734,24735
>   p_after_sb_2p = (int )tmp___4;
> #line 2629
24735,24736d24736
< #line 2628
<   p_want_lose = (int )tmp___5;
24737a24738,24739
>   p_want_lose = (int )tmp___5;
> #line 2630
24739c24741
< #line 2629
---
> #line 2630
24741,24742d24742
< #line 2631
<   if ((mdev->net_conf)->wire_protocol != p_proto) {
24743a24744,24745
>   if ((mdev->net_conf)->wire_protocol != p_proto) {
> #line 2633
24745c24747
< #line 2632
---
> #line 2633
24747,24748d24748
< #line 2632
<     printk("<3>%s %s: incompatible communication protocols\n", tmp___8, tmp___7);
24749a24750,24751
>     printk("<3>%s %s: incompatible communication protocols\n", tmp___8, tmp___7);
> #line 2634
24754c24756
< #line 2636
---
> #line 2637
24756,24757d24757
< #line 2636
<   if (tmp___11 != 0) {
24758a24759,24760
>   if (tmp___11 != 0) {
> #line 2638
24760c24762
< #line 2637
---
> #line 2638
24762,24763d24763
< #line 2637
<     printk("<3>%s %s: incompatible after-sb-0pri settings\n", tmp___10, tmp___9);
24764a24765,24766
>     printk("<3>%s %s: incompatible after-sb-0pri settings\n", tmp___10, tmp___9);
> #line 2639
24769c24771
< #line 2641
---
> #line 2642
24771,24772d24772
< #line 2641
<   if (tmp___14 != 0) {
24773a24774,24775
>   if (tmp___14 != 0) {
> #line 2643
24775c24777
< #line 2642
---
> #line 2643
24777,24778d24778
< #line 2642
<     printk("<3>%s %s: incompatible after-sb-1pri settings\n", tmp___13, tmp___12);
24779a24780,24781
>     printk("<3>%s %s: incompatible after-sb-1pri settings\n", tmp___13, tmp___12);
> #line 2644
24784c24786
< #line 2646
---
> #line 2647
24786,24787d24787
< #line 2646
<   if (tmp___17 != 0) {
24788a24789,24790
>   if (tmp___17 != 0) {
> #line 2648
24790c24792
< #line 2647
---
> #line 2648
24792,24793d24793
< #line 2647
<     printk("<3>%s %s: incompatible after-sb-2pri settings\n", tmp___16, tmp___15);
24794a24795,24796
>     printk("<3>%s %s: incompatible after-sb-2pri settings\n", tmp___16, tmp___15);
> #line 2649
24799,24800d24800
< #line 2651
<   if (p_want_lose != 0 && (unsigned int )*((unsigned char *)mdev->net_conf + 528UL) != 0U) {
24801a24802,24803
>   if (p_want_lose != 0 && (unsigned int )*((unsigned char *)mdev->net_conf + 528UL) != 0U) {
> #line 2653
24803c24805
< #line 2652
---
> #line 2653
24805,24806d24806
< #line 2652
<     printk("<3>%s %s: both sides have the \'want_lose\' flag set\n", tmp___19, tmp___18);
24807a24808,24809
>     printk("<3>%s %s: both sides have the \'want_lose\' flag set\n", tmp___19, tmp___18);
> #line 2654
24812,24813d24813
< #line 2656
<   if ((int )(mdev->net_conf)->two_primaries != p_two_primaries) {
24814a24815,24816
>   if ((int )(mdev->net_conf)->two_primaries != p_two_primaries) {
> #line 2658
24816c24818
< #line 2657
---
> #line 2658
24818c24820
< #line 2657
---
> #line 2658
24821c24823
< #line 2658
---
> #line 2659
24826,24827d24827
< #line 2661
<   if (mdev->agreed_pro_version > 86) {
24828a24829,24830
>   if (mdev->agreed_pro_version > 86) {
> #line 2663
24830c24832
< #line 2664
---
> #line 2665
24832,24833d24833
< #line 2664
<     if (tmp___22 != data_size) {
24834a24835,24836
>     if (tmp___22 != data_size) {
> #line 2666
24839,24840d24840
< #line 2667
<     p_integrity_alg[63] = 0;
24841a24842,24843
>     p_integrity_alg[63] = 0;
> #line 2669
24843,24844d24844
< #line 2668
<     if (tmp___25 != 0) {
24845a24846,24847
>     if (tmp___25 != 0) {
> #line 2670
24847c24849
< #line 2669
---
> #line 2670
24849c24851
< #line 2669
---
> #line 2670
24852c24854
< #line 2670
---
> #line 2671
24857c24859
< #line 2672
---
> #line 2673
24859c24861
< #line 2672
---
> #line 2673
24861c24863
< #line 2672
---
> #line 2673
24866c24868
< #line 2676
---
> #line 2677
24869c24871
< #line 2679
---
> #line 2680
24871c24873
< #line 2679
---
> #line 2680
24873c24875
< #line 2679
---
> #line 2680
24875c24877
< #line 2679
---
> #line 2680
24877,24878d24878
< #line 2679
<   drbd_force_state(mdev, mask, val);
24879a24880,24881
>   drbd_force_state(mdev, mask, val);
> #line 2681
24883c24885
< #line 2688 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2689 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
24899,24900d24900
< #line 2693
<   if ((int )((signed char )*alg) == 0) {
24901a24902,24903
>   if ((int )((signed char )*alg) == 0) {
> #line 2695
24906,24907d24907
< #line 2696
<   tfm = crypto_alloc_hash(alg, 0U, 128U);
24908a24909,24910
>   tfm = crypto_alloc_hash(alg, 0U, 128U);
> #line 2698
24910,24911d24911
< #line 2697
<   if (tmp___2 != 0L) {
24912a24913,24914
>   if (tmp___2 != 0L) {
> #line 2699
24914c24916
< #line 2698
---
> #line 2699
24916c24918
< #line 2698
---
> #line 2699
24918c24920
< #line 2698
---
> #line 2699
24921c24923
< #line 2700
---
> #line 2701
24926c24928
< #line 2702
---
> #line 2703
24928c24930
< #line 2702
---
> #line 2703
24930,24931d24931
< #line 2702
<   if (tmp___7 == 0) {
24933c24933
<     crypto_free_hash(tfm);
---
>   if (tmp___7 == 0) {
24934a24935,24936
>     crypto_free_hash(tfm);
> #line 2705
24936c24938
< #line 2704
---
> #line 2705
24938,24939d24939
< #line 2704
<     printk("<3>%s %s: \"%s\" is not a digest (%s)\n", tmp___4, tmp___3, alg, name);
24940a24941,24942
>     printk("<3>%s %s: \"%s\" is not a digest (%s)\n", tmp___4, tmp___3, alg, name);
> #line 2706
24942c24944
< #line 2705
---
> #line 2706
24947c24949
< #line 2707
---
> #line 2708
24951c24953
< #line 2710 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2711 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
24995,24996d24996
< #line 2712
<   ok = 1;
24997a24998,24999
>   ok = 1;
> #line 2714
24999,25000d25000
< #line 2715
<   verify_tfm = 0;
25002c25002
<   csums_tfm = 0;
---
>   verify_tfm = 0;
25003a25004,25005
>   csums_tfm = 0;
> #line 2718
25005c25007
< #line 2719
---
> #line 2720
25007,25008d25008
< #line 2724
<   if ((unsigned int )h->length > exp_max_sz) {
25009a25010,25011
>   if ((unsigned int )h->length > exp_max_sz) {
> #line 2726
25011c25013
< #line 2725
---
> #line 2726
25013c25015
< #line 2725
---
> #line 2726
25016c25018
< #line 2727
---
> #line 2728
25021,25022d25022
< #line 2730
<   if (apv <= 88) {
25024c25024
<     header_size = 4U;
---
>   if (apv <= 88) {
25025a25026,25027
>     header_size = 4U;
> #line 2733
25028,25029d25029
< #line 2734
<     header_size = 132U;
25031c25031
<     data_size = (unsigned int )h->length - header_size;
---
>     header_size = 132U;
25032a25033,25034
>     data_size = (unsigned int )h->length - header_size;
> #line 2737
25034c25036
< #line 2736
---
> #line 2737
25036c25038
< #line 2736
---
> #line 2737
25038c25040
< #line 2736
---
> #line 2737
25040c25042
<              2736);
---
>              2737);
25045c25047
< #line 2740
---
> #line 2741
25047c25049
< #line 2742
---
> #line 2743
25049,25050d25050
< #line 2742
<   if ((unsigned int )tmp___3 != header_size) {
25051a25052,25053
>   if ((unsigned int )tmp___3 != header_size) {
> #line 2744
25056c25058
< #line 2745
---
> #line 2746
25058c25060
< #line 2745
---
> #line 2746
25060,25061d25061
< #line 2747
<   if (apv > 87) {
25063c25063
<     if (apv == 88) {
---
>   if (apv > 87) {
25065c25065
<       if (data_size > 64U) {
---
>     if (apv == 88) {
25066a25067,25068
>       if (data_size > 64U) {
> #line 2751
25068c25070
< #line 2750
---
> #line 2751
25070c25072
< #line 2750
---
> #line 2751
25073c25075
< #line 2753
---
> #line 2754
25078c25080
< #line 2756
---
> #line 2757
25080,25081d25081
< #line 2756
<       if ((unsigned int )tmp___7 != data_size) {
25082a25083,25084
>       if ((unsigned int )tmp___7 != data_size) {
> #line 2758
25087c25089
< #line 2761
---
> #line 2762
25089c25091
< #line 2761
---
> #line 2762
25091c25093
< #line 2761
---
> #line 2762
25093c25095
< #line 2761
---
> #line 2762
25096c25098
<                2761);
---
>                2762);
25100c25102
< #line 2762
---
> #line 2763
25103c25105
< #line 2767
---
> #line 2768
25105c25107
< #line 2767
---
> #line 2768
25107c25109
< #line 2767
---
> #line 2768
25109c25111
< #line 2767
---
> #line 2768
25112c25114
<                2767);
---
>                2768);
25116c25118
< #line 2768
---
> #line 2769
25118c25120
< #line 2768
---
> #line 2769
25120c25122
< #line 2768
---
> #line 2769
25122c25124
< #line 2768
---
> #line 2769
25125c25127
<                2768);
---
>                2769);
25129,25130d25130
< #line 2769
<       p->verify_alg[63] = 0;
25131a25132,25133
>       p->verify_alg[63] = 0;
> #line 2771
25134c25136
< #line 2773
---
> #line 2774
25136,25137d25137
< #line 2773
<     if (tmp___17 != 0) {
25139c25139
<       if ((unsigned int )*((unsigned short *)mdev + 902UL) == 144U) {
---
>     if (tmp___17 != 0) {
25140a25141,25142
>       if ((unsigned int )*((unsigned short *)mdev + 902UL) == 144U) {
> #line 2776
25142c25144
< #line 2775
---
> #line 2776
25144c25146
< #line 2775
---
> #line 2776
25148c25150
< #line 2777
---
> #line 2778
25153c25155
< #line 2779
---
> #line 2780
25157c25159
< #line 2781
---
> #line 2782
25159,25160d25160
< #line 2781
<       if (tmp___16 != 0L) {
25162c25162
<         verify_tfm = 0;
---
>       if (tmp___16 != 0L) {
25163a25164,25165
>         verify_tfm = 0;
> #line 2784
25171c25173
< #line 2787
---
> #line 2788
25173c25175
< #line 2787
---
> #line 2788
25175,25176d25176
< #line 2787
<       if (tmp___21 != 0) {
25178c25178
<         if ((unsigned int )*((unsigned short *)mdev + 902UL) == 144U) {
---
>       if (tmp___21 != 0) {
25179a25180,25181
>         if ((unsigned int )*((unsigned short *)mdev + 902UL) == 144U) {
> #line 2790
25181c25183
< #line 2789
---
> #line 2790
25183c25185
< #line 2789
---
> #line 2790
25187c25189
< #line 2791
---
> #line 2792
25192c25194
< #line 2793
---
> #line 2794
25196c25198
< #line 2795
---
> #line 2796
25198,25199d25199
< #line 2795
<         if (tmp___20 != 0L) {
25201c25201
<           csums_tfm = 0;
---
>         if (tmp___20 != 0L) {
25202a25203,25204
>           csums_tfm = 0;
> #line 2798
25213c25215
< #line 2802
---
> #line 2803
25215,25216d25216
< #line 2804
<     if ((unsigned long )verify_tfm != (unsigned long )((struct crypto_hash *)0)) {
25218c25218
<       strcpy((char *)(& mdev->sync_conf.verify_alg), (char const   *)(& p->verify_alg));
---
>     if ((unsigned long )verify_tfm != (unsigned long )((struct crypto_hash *)0)) {
25219a25220,25221
>       strcpy((char *)(& mdev->sync_conf.verify_alg), (char const   *)(& p->verify_alg));
> #line 2807
25221,25222d25222
< #line 2806
<       mdev->sync_conf.verify_alg_len = (int )((unsigned int )tmp___22 + 1U);
25224c25224
<       crypto_free_hash(mdev->verify_tfm);
---
>       mdev->sync_conf.verify_alg_len = (int )((unsigned int )tmp___22 + 1U);
25226c25226
<       mdev->verify_tfm = verify_tfm;
---
>       crypto_free_hash(mdev->verify_tfm);
25227a25228,25229
>       mdev->verify_tfm = verify_tfm;
> #line 2810
25229c25231
< #line 2809
---
> #line 2810
25231c25233
< #line 2809
---
> #line 2810
25236,25237d25237
< #line 2811
<     if ((unsigned long )csums_tfm != (unsigned long )((struct crypto_hash *)0)) {
25239c25239
<       strcpy((char *)(& mdev->sync_conf.csums_alg), (char const   *)(& p->csums_alg));
---
>     if ((unsigned long )csums_tfm != (unsigned long )((struct crypto_hash *)0)) {
25240a25241,25242
>       strcpy((char *)(& mdev->sync_conf.csums_alg), (char const   *)(& p->csums_alg));
> #line 2814
25242,25243d25243
< #line 2813
<       mdev->sync_conf.csums_alg_len = (int )((unsigned int )tmp___25 + 1U);
25245c25245
<       crypto_free_hash(mdev->csums_tfm);
---
>       mdev->sync_conf.csums_alg_len = (int )((unsigned int )tmp___25 + 1U);
25247c25247
<       mdev->csums_tfm = csums_tfm;
---
>       crypto_free_hash(mdev->csums_tfm);
25248a25249,25250
>       mdev->csums_tfm = csums_tfm;
> #line 2817
25250c25252
< #line 2816
---
> #line 2817
25252c25254
< #line 2816
---
> #line 2817
25257c25259
< #line 2818
---
> #line 2819
25262c25264
< #line 2821
---
> #line 2822
25265c25267
< #line 2825
---
> #line 2826
25267,25268d25268
< #line 2827
<   crypto_free_hash(verify_tfm);
25269a25270,25271
>   crypto_free_hash(verify_tfm);
> #line 2829
25271c25273
< #line 2828
---
> #line 2829
25273c25275
< #line 2828
---
> #line 2829
25275c25277
< #line 2828
---
> #line 2829
25277,25278d25278
< #line 2828
<   drbd_force_state(mdev, mask, val);
25279a25280,25281
>   drbd_force_state(mdev, mask, val);
> #line 2830
25283c25285
< #line 2832 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2833 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
25289c25291
< #line 2834
---
> #line 2835
25293c25295
< #line 2839 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2840 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
25302,25303d25303
< #line 2843
<   if (a == 0UL || b == 0UL) {
25304a25305,25306
>   if (a == 0UL || b == 0UL) {
> #line 2845
25309,25310d25310
< #line 2845
<   d = a > b ? a - b : b - a;
25312c25312
<   if (a >> 3 < d || b >> 3 < d) {
---
>   d = a > b ? a - b : b - a;
25313a25314,25315
>   if (a >> 3 < d || b >> 3 < d) {
> #line 2848
25315c25317
< #line 2847
---
> #line 2848
25317c25319
< #line 2847
---
> #line 2848
25323c25325
< #line 2848
---
> #line 2849
25327c25329
< #line 2851 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2852 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
25380,25381d25381
< #line 2853
<   p = (struct p_sizes *)h;
25382a25383,25384
>   p = (struct p_sizes *)h;
> #line 2855
25384c25386
< #line 2857
---
> #line 2858
25386c25388
< #line 2860
---
> #line 2861
25388c25390
< #line 2860
---
> #line 2861
25390c25392
< #line 2860
---
> #line 2861
25392c25394
< #line 2860
---
> #line 2861
25394c25396
< #line 2860
---
> #line 2861
25397c25399
<            2860);
---
>            2861);
25401c25403
< #line 2860
---
> #line 2861
25403c25405
< #line 2860
---
> #line 2861
25408c25410
< #line 2861
---
> #line 2862
25410,25411d25411
< #line 2861
<   if (tmp___1 != (int )h->length) {
25412a25413,25414
>   if (tmp___1 != (int )h->length) {
> #line 2863
25417c25419
< #line 2864
---
> #line 2865
25419,25420d25420
< #line 2864
<   p_size = (sector_t )tmp___2;
25421a25422,25423
>   p_size = (sector_t )tmp___2;
> #line 2866
25423c25425
< #line 2865
---
> #line 2866
25425,25426d25426
< #line 2867
<   if (p_size == 0UL && (unsigned int )*((unsigned char *)mdev + 1805UL) == 0U) {
25427a25428,25429
>   if (p_size == 0UL && (unsigned int )*((unsigned char *)mdev + 1805UL) == 0U) {
> #line 2869
25429c25431
< #line 2868
---
> #line 2869
25431,25432d25432
< #line 2868
<     printk("<3>%s %s: some backing storage is needed\n", tmp___5, tmp___4);
25433a25434,25435
>     printk("<3>%s %s: some backing storage is needed\n", tmp___5, tmp___4);
> #line 2870
25435c25437
< #line 2869
---
> #line 2870
25437c25439
< #line 2869
---
> #line 2870
25439c25441
< #line 2869
---
> #line 2870
25441,25442d25442
< #line 2869
<     drbd_force_state(mdev, mask, val);
25443a25444,25445
>     drbd_force_state(mdev, mask, val);
> #line 2871
25448c25450
< #line 2875
---
> #line 2876
25450c25452
< #line 2878
---
> #line 2879
25452,25453d25453
< #line 2878
<   if (tmp___14 != 0) {
25454a25455,25456
>   if (tmp___14 != 0) {
> #line 2880
25456c25458
< #line 2879
---
> #line 2880
25458c25460
< #line 2881
---
> #line 2882
25460,25461d25461
< #line 2886
<     if ((unsigned int )*((unsigned short *)mdev + 902UL) == 144U) {
25462a25463,25464
>     if ((unsigned int )*((unsigned short *)mdev + 902UL) == 144U) {
> #line 2888
25464c25466
< #line 2887
---
> #line 2888
25466c25468
< #line 2887
---
> #line 2888
25469c25471
< #line 2887
---
> #line 2888
25471c25473
< #line 2887
---
> #line 2888
25473c25475
< #line 2887
---
> #line 2888
25476c25478
< #line 2887
---
> #line 2888
25479c25481
< #line 2887
---
> #line 2888
25485c25487
< #line 2890
---
> #line 2891
25487,25488d25488
< #line 2892
<     if ((mdev->ldev)->dc.disk_size != (unsigned long long )p_usize) {
25490c25490
<       (mdev->ldev)->dc.disk_size = (__u64 )p_usize;
---
>     if ((mdev->ldev)->dc.disk_size != (unsigned long long )p_usize) {
25491a25492,25493
>       (mdev->ldev)->dc.disk_size = (__u64 )p_usize;
> #line 2895
25493c25495
< #line 2894
---
> #line 2895
25495c25497
< #line 2894
---
> #line 2895
25500c25502
< #line 2900
---
> #line 2901
25502c25504
< #line 2900
---
> #line 2901
25504c25506
< #line 2900
---
> #line 2901
25506c25508
< #line 2904
---
> #line 2905
25508c25510
< #line 2904
---
> #line 2905
25510,25511d25511
< #line 2904
<       printk("<3>%s %s: The peer\'s disk size is too small!\n", tmp___11, tmp___10);
25512a25513,25514
>       printk("<3>%s %s: The peer\'s disk size is too small!\n", tmp___11, tmp___10);
> #line 2906
25514c25516
< #line 2905
---
> #line 2906
25516c25518
< #line 2905
---
> #line 2906
25518c25520
< #line 2905
---
> #line 2906
25520,25521d25521
< #line 2905
<       drbd_force_state(mdev, mask___0, val___0);
25523c25523
<       (mdev->ldev)->dc.disk_size = (__u64 )my_usize;
---
>       drbd_force_state(mdev, mask___0, val___0);
25525c25525
<       put_ldev(mdev);
---
>       (mdev->ldev)->dc.disk_size = (__u64 )my_usize;
25526a25527,25528
>       put_ldev(mdev);
> #line 2909
25531c25533
< #line 2910
---
> #line 2911
25536c25538
< #line 2914
---
> #line 2915
25538,25539d25539
< #line 2914
<   if (tmp___15 != 0) {
25541c25541
<     dd = drbd_determin_dev_size(mdev);
---
>   if (tmp___15 != 0) {
25543c25543
<     put_ldev(mdev);
---
>     dd = drbd_determin_dev_size(mdev);
25545c25545
<     if ((int )dd == -1) {
---
>     put_ldev(mdev);
25546a25547,25548
>     if ((int )dd == -1) {
> #line 2919
25551c25553
< #line 2919
---
> #line 2920
25554c25556
< #line 2922
---
> #line 2923
25557c25559
< #line 2925
---
> #line 2926
25559c25561
< #line 2925
---
> #line 2926
25561,25562d25562
< #line 2925
<     if (tmp___17 != 0) {
25563a25564,25565
>     if (tmp___17 != 0) {
> #line 2927
25566c25568
< #line 2928
---
> #line 2929
25568,25569d25569
< #line 2930
<       if ((unsigned int )nconn == 31U) {
25570a25571,25572
>       if ((unsigned int )nconn == 31U) {
> #line 2932
25572c25574
< #line 2931
---
> #line 2932
25574c25576
< #line 2931
---
> #line 2932
25576c25578
< #line 2931
---
> #line 2932
25578,25579d25579
< #line 2931
<         drbd_force_state(mdev, mask___1, val___1);
25580a25581,25582
>         drbd_force_state(mdev, mask___1, val___1);
> #line 2933
25585c25587
< #line 2935
---
> #line 2936
25587c25589
< #line 2935
---
> #line 2936
25589c25591
< #line 2935
---
> #line 2936
25591c25593
< #line 2935
---
> #line 2936
25593c25595
< #line 2935
---
> #line 2936
25595,25596d25596
< #line 2935
<       if (tmp___16 <= 0) {
25597a25598,25599
>       if (tmp___16 <= 0) {
> #line 2937
25599c25601
< #line 2936
---
> #line 2937
25601c25603
< #line 2936
---
> #line 2937
25603c25605
< #line 2936
---
> #line 2937
25605,25606d25606
< #line 2936
<         drbd_force_state(mdev, mask___2, val___2);
25607a25608,25609
>         drbd_force_state(mdev, mask___2, val___2);
> #line 2938
25618c25620
< #line 2941
---
> #line 2942
25620,25621d25621
< #line 2941
<   if (tmp___22 != 0) {
25622a25623,25624
>   if (tmp___22 != 0) {
> #line 2943
25624,25625d25625
< #line 2942
<     if ((mdev->ldev)->known_size != tmp___18) {
25627c25627
<       (mdev->ldev)->known_size = drbd_get_capacity((mdev->ldev)->backing_bdev);
---
>     if ((mdev->ldev)->known_size != tmp___18) {
25628a25629,25630
>       (mdev->ldev)->known_size = drbd_get_capacity((mdev->ldev)->backing_bdev);
> #line 2945
25633c25635
< #line 2947
---
> #line 2948
25635,25636d25636
< #line 2947
<     max_seg_s = tmp___19;
25637a25638,25639
>     max_seg_s = tmp___19;
> #line 2949
25639,25640d25640
< #line 2948
<     if (tmp___20 != max_seg_s) {
25641a25642,25643
>     if (tmp___20 != max_seg_s) {
> #line 2950
25646c25648
< #line 2951
---
> #line 2952
25648,25649d25649
< #line 2951
<     drbd_setup_order_type(mdev, (int )tmp___21);
25650a25651,25652
>     drbd_setup_order_type(mdev, (int )tmp___21);
> #line 2953
25655,25656d25656
< #line 2955
<   if ((int )mdev->state.ldv_32224.conn > 9) {
25657a25658,25659
>   if ((int )mdev->state.ldv_32224.conn > 9) {
> #line 2957
25659c25661
< #line 2956
---
> #line 2957
25661c25663
< #line 2956
---
> #line 2957
25663c25665
< #line 2960
---
> #line 2961
25668c25670
< #line 2962
---
> #line 2963
25670c25672
< #line 2962
---
> #line 2963
25672c25674
< #line 2964
---
> #line 2965
25674c25676
< #line 2966
---
> #line 2967
25677c25679
< #line 2968
---
> #line 2969
25686c25688
< #line 2972
---
> #line 2973
25690c25692
< #line 2975 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2976 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
25717c25719
< #line 2977
---
> #line 2978
25719c25721
< #line 2981
---
> #line 2982
25721c25723
< #line 2981
---
> #line 2982
25723c25725
< #line 2981
---
> #line 2982
25725c25727
< #line 2981
---
> #line 2982
25727c25729
< #line 2981
---
> #line 2982
25730c25732
<            2981);
---
>            2982);
25734c25736
< #line 2981
---
> #line 2982
25736c25738
< #line 2981
---
> #line 2982
25741c25743
< #line 2982
---
> #line 2983
25743,25744d25744
< #line 2982
<   if (tmp___1 != (int )h->length) {
25745a25746,25747
>   if (tmp___1 != (int )h->length) {
> #line 2984
25750c25752
< #line 2985
---
> #line 2986
25752c25754
< #line 2985
---
> #line 2986
25754c25756
< #line 2987
---
> #line 2988
25756c25758
< #line 2987
---
> #line 2988
25759c25761
< #line 2988
---
> #line 2989
25761c25763
< #line 2988
---
> #line 2989
25763c25765
< #line 2987
---
> #line 2988
25766,25767d25767
< #line 2987
<   if (i <= 5) {
25768a25769,25770
>   if (i <= 5) {
> #line 2989
25773,25774d25774
< #line 2990
<   kfree((void const   *)mdev->p_uuid);
25775a25776,25777
>   kfree((void const   *)mdev->p_uuid);
> #line 2992
25777c25779
< #line 2993
---
> #line 2994
25779c25781
< #line 2997
---
> #line 2998
25781c25783
< #line 2997
---
> #line 2998
25783c25785
< #line 2997
---
> #line 2998
25786c25788
< #line 2999
---
> #line 3000
25788c25790
< #line 2999
---
> #line 3000
25790c25792
< #line 2999
---
> #line 3000
25792c25794
< #line 2999
---
> #line 3000
25794,25795d25795
< #line 2999
<     drbd_force_state(mdev, mask, val);
25796a25797,25798
>     drbd_force_state(mdev, mask, val);
> #line 3001
25801c25803
< #line 3003
---
> #line 3004
25803,25804d25804
< #line 3003
<   if (tmp___8 != 0) {
25805a25806,25807
>   if (tmp___8 != 0) {
> #line 3005
25807,25808d25808
< #line 3009
<     if (skip_initial_sync != 0) {
25809a25810,25811
>     if (skip_initial_sync != 0) {
> #line 3011
25811c25813
< #line 3010
---
> #line 3011
25813c25815
< #line 3010
---
> #line 3011
25816c25818
< #line 3011
---
> #line 3012
25818,25819d25819
< #line 3013
<       _drbd_uuid_set(mdev, 0, *p_uuid);
25821c25821
<       _drbd_uuid_set(mdev, 1, 0ULL);
---
>       _drbd_uuid_set(mdev, 0, *p_uuid);
25822a25823,25824
>       _drbd_uuid_set(mdev, 1, 0ULL);
> #line 3016
25824c25826
< #line 3015
---
> #line 3016
25826c25828
< #line 3015
---
> #line 3016
25828c25830
< #line 3015
---
> #line 3016
25830c25832
< #line 3017
---
> #line 3018
25835c25837
< #line 3019
---
> #line 3020
25840c25842
< #line 3026
---
> #line 3027
25842c25844
< #line 3026
---
> #line 3027
25844c25846
< #line 3026
---
> #line 3027
25849c25851
< #line 3026
---
> #line 3027
25851c25853
< #line 3026
---
> #line 3027
25853c25855
< #line 3026
---
> #line 3027
25855c25857
< #line 3026
---
> #line 3027
25857c25859
< #line 3026
---
> #line 3027
25859c25861
< #line 3026
---
> #line 3027
25862c25864
< #line 3026
---
> #line 3027
25864c25866
< #line 3026
---
> #line 3027
25866c25868
< #line 3026
---
> #line 3027
25868c25870
< #line 3026
---
> #line 3027
25873c25875
< #line 3026
---
> #line 3027
25875c25877
< #line 3026
---
> #line 3027
25878c25880
< #line 3026
---
> #line 3027
25881,25882d25882
< #line 3027
<   if ((int )mdev->state.ldv_32224.conn > 9 && (int )mdev->state.ldv_32224.disk <= 3) {
25883a25884,25885
>   if ((int )mdev->state.ldv_32224.conn > 9 && (int )mdev->state.ldv_32224.disk <= 3) {
> #line 3029
25888c25890
< #line 3030
---
> #line 3031
25892c25894
< #line 3037 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3038 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
25899c25901
< #line 3041
---
> #line 3042
25901c25903
< #line 3041
---
> #line 3042
25903c25905
< #line 3041
---
> #line 3042
25905c25907
< #line 3041
---
> #line 3042
25907c25909
< #line 3041
---
> #line 3042
25909c25911
< #line 3041
---
> #line 3042
25911c25913
< #line 3041
---
> #line 3042
25913c25915
< #line 3041
---
> #line 3042
25915c25917
< #line 3041
---
> #line 3042
25917c25919
< #line 3041
---
> #line 3042
25919c25921
< #line 3041
---
> #line 3042
25921c25923
< #line 3041
---
> #line 3042
25923c25925
< #line 3041
---
> #line 3042
25925c25927
< #line 3041
---
> #line 3042
25927c25929
< #line 3041
---
> #line 3042
25929c25931
< #line 3041
---
> #line 3042
25931c25933
< #line 3041
---
> #line 3042
25933c25935
< #line 3041
---
> #line 3042
25935c25937
< #line 3041
---
> #line 3042
25937c25939
< #line 3041
---
> #line 3042
25939c25941
< #line 3041
---
> #line 3042
25941c25943
< #line 3041
---
> #line 3042
25943c25945
< #line 3041
---
> #line 3042
25945c25947
< #line 3041
---
> #line 3042
25947c25949
< #line 3041
---
> #line 3042
25949c25951
< #line 3041
---
> #line 3042
25951c25953
< #line 3041
---
> #line 3042
25953c25955
< #line 3041
---
> #line 3042
25955c25957
< #line 3041
---
> #line 3042
25957c25959
< #line 3041
---
> #line 3042
25959c25961
< #line 3041
---
> #line 3042
25961c25963
< #line 3041
---
> #line 3042
25963c25965
< #line 3051
---
> #line 3052
25965,25966d25966
< #line 3053
<   ms.ldv_32224.conn = (unsigned char )c_tab[(int )ps.ldv_32224.conn];
25968c25968
<   ms.ldv_32224.peer = ps.ldv_32224.role;
---
>   ms.ldv_32224.conn = (unsigned char )c_tab[(int )ps.ldv_32224.conn];
25970c25970
<   ms.ldv_32224.role = ps.ldv_32224.peer;
---
>   ms.ldv_32224.peer = ps.ldv_32224.role;
25972c25972
<   ms.ldv_32224.pdsk = ps.ldv_32224.disk;
---
>   ms.ldv_32224.role = ps.ldv_32224.peer;
25974c25974
<   ms.ldv_32224.disk = ps.ldv_32224.pdsk;
---
>   ms.ldv_32224.pdsk = ps.ldv_32224.disk;
25975a25976,25977
>   ms.ldv_32224.disk = ps.ldv_32224.pdsk;
> #line 3059
25977c25979
< #line 3060
---
> #line 3061
25981c25983
< #line 3063 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3064 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
25998c26000
< #line 3065
---
> #line 3066
26000c26002
< #line 3069
---
> #line 3070
26002c26004
< #line 3069
---
> #line 3070
26004c26006
< #line 3069
---
> #line 3070
26006c26008
< #line 3069
---
> #line 3070
26008c26010
< #line 3069
---
> #line 3070
26011c26013
<            3069);
---
>            3070);
26015c26017
< #line 3069
---
> #line 3070
26017c26019
< #line 3069
---
> #line 3070
26022c26024
< #line 3070
---
> #line 3071
26024,26025d26025
< #line 3070
<   if (tmp___1 != (int )h->length) {
26026a26027,26028
>   if (tmp___1 != (int )h->length) {
> #line 3072
26031c26033
< #line 3073
---
> #line 3074
26033,26034d26034
< #line 3073
<   mask.i = tmp___2;
26035a26036,26037
>   mask.i = tmp___2;
> #line 3075
26037c26039
< #line 3074
---
> #line 3075
26039c26041
< #line 3076
---
> #line 3077
26041c26043
< #line 3076
---
> #line 3077
26043c26045
< #line 3076
---
> #line 3077
26045c26047
< #line 3076
---
> #line 3077
26047,26048d26048
< #line 3078
<       drbd_send_sr_reply(mdev, -19);
26049a26050,26051
>       drbd_send_sr_reply(mdev, -19);
> #line 3080
26057,26058d26058
< #line 3082
<   mask = convert_state(mask);
26059a26060,26061
>   mask = convert_state(mask);
> #line 3084
26061c26063
< #line 3085
---
> #line 3086
26063,26064d26064
< #line 3087
<   drbd_send_sr_reply(mdev, rv);
26065a26066,26067
>   drbd_send_sr_reply(mdev, rv);
> #line 3089
26067c26069
< #line 3090
---
> #line 3091
26071c26073
< #line 3093 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3094 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
26104c26106
< #line 3095
---
> #line 3096
26106c26108
< #line 3101
---
> #line 3102
26108c26110
< #line 3101
---
> #line 3102
26110c26112
< #line 3101
---
> #line 3102
26112c26114
< #line 3101
---
> #line 3102
26114c26116
< #line 3101
---
> #line 3102
26117c26119
<            3101);
---
>            3102);
26121,26122d26122
< #line 3101
<   if (_b != 0) {
26123a26124,26125
>   if (_b != 0) {
> #line 3103
26128c26130
< #line 3104
---
> #line 3105
26130,26131d26131
< #line 3104
<   if (tmp___1 != (int )h->length) {
26132a26133,26134
>   if (tmp___1 != (int )h->length) {
> #line 3106
26137c26139
< #line 3107
---
> #line 3108
26139c26141
< #line 3107
---
> #line 3108
26141,26142d26142
< #line 3109
<   real_peer_disk = (enum drbd_disk_state )peer_state.ldv_32224.disk;
26144c26144
<   if ((unsigned int )*((unsigned char *)(& peer_state) + 1UL) == 6U) {
---
>   real_peer_disk = (enum drbd_disk_state )peer_state.ldv_32224.disk;
26146c26146
<     real_peer_disk = (*(mdev->p_uuid + 5UL) & 4ULL) != 0ULL ? D_INCONSISTENT : D_CONSISTENT;
---
>   if ((unsigned int )*((unsigned char *)(& peer_state) + 1UL) == 6U) {
26147a26148,26149
>     real_peer_disk = (*(mdev->p_uuid + 5UL) & 4ULL) != 0ULL ? D_INCONSISTENT : D_CONSISTENT;
> #line 3113
26149c26151
< #line 3112
---
> #line 3113
26151c26153
< #line 3112
---
> #line 3113
26153c26155
< #line 3112
---
> #line 3113
26158c26160
< #line 3115
---
> #line 3116
26161c26163
< #line 3117
---
> #line 3118
26163,26164d26164
< #line 3117
<   oconn = nconn;
26165a26166,26167
>   oconn = nconn;
> #line 3119
26167,26168d26168
< #line 3120
<   if ((unsigned int )nconn == 9U) {
26169a26170,26171
>   if ((unsigned int )nconn == 9U) {
> #line 3122
26174c26176
< #line 3123
---
> #line 3124
26176c26178
< #line 3123
---
> #line 3124
26178c26180
< #line 3123
---
> #line 3124
26180c26182
< #line 3128
---
> #line 3129
26182c26184
< #line 3131
---
> #line 3132
26184c26186
< #line 3136
---
> #line 3137
26186c26188
< #line 3136
---
> #line 3137
26188c26190
< #line 3139
---
> #line 3140
26190,26191d26191
< #line 3143
<       if (cr != 0) {
26192a26193,26194
>       if (cr != 0) {
> #line 3145
26198,26199d26199
< #line 3146
<       put_ldev(mdev);
26201c26201
<       if ((unsigned int )nconn == 31U) {
---
>       put_ldev(mdev);
26203c26203
<         if ((unsigned int )*((unsigned char *)mdev + 1805UL) == 6U) {
---
>       if ((unsigned int )nconn == 31U) {
26204a26205,26206
>         if ((unsigned int )*((unsigned char *)mdev + 1805UL) == 6U) {
> #line 3150
26206c26208
< #line 3149
---
> #line 3150
26208c26210
< #line 3149
---
> #line 3150
26210c26212
< #line 3149
---
> #line 3150
26212,26213d26213
< #line 3149
<           drbd_force_state(mdev, mask, val);
26214a26215,26216
>           drbd_force_state(mdev, mask, val);
> #line 3151
26217,26218d26218
< #line 3151
<         if ((unsigned int )*((unsigned char *)(& peer_state) + 1UL) == 6U) {
26219a26220,26221
>         if ((unsigned int )*((unsigned char *)(& peer_state) + 1UL) == 6U) {
> #line 3153
26221c26223
< #line 3152
---
> #line 3153
26223c26225
< #line 3152
---
> #line 3153
26226c26228
< #line 3153
---
> #line 3154
26229c26231
< #line 3155
---
> #line 3156
26231c26233
< #line 3155
---
> #line 3156
26233c26235
< #line 3155
---
> #line 3156
26235c26237
< #line 3155
---
> #line 3156
26238c26240
<                    3155);
---
>                    3156);
26242c26244
< #line 3156
---
> #line 3157
26244c26246
< #line 3156
---
> #line 3157
26246c26248
< #line 3156
---
> #line 3157
26248c26250
< #line 3156
---
> #line 3157
26250,26251d26251
< #line 3156
<           drbd_force_state(mdev, mask___0, val___0);
26252a26253,26254
>           drbd_force_state(mdev, mask___0, val___0);
> #line 3158
26264,26265d26265
< #line 3162
<   _spin_lock_irq(& mdev->req_lock);
26267c26267
<   if ((unsigned int )mdev->state.ldv_32224.conn != (unsigned int )oconn) {
---
>   _spin_lock_irq(& mdev->req_lock);
26268a26269,26270
>   if ((unsigned int )mdev->state.ldv_32224.conn != (unsigned int )oconn) {
> #line 3165
26273,26274d26274
< #line 3165
<   clear_bit(15, (unsigned long volatile   *)(& mdev->flags));
26276c26276
<   ns.i = mdev->state.i;
---
>   clear_bit(15, (unsigned long volatile   *)(& mdev->flags));
26278c26278
<   ns.ldv_32224.conn = (unsigned char )nconn;
---
>   ns.i = mdev->state.i;
26280c26280
<   ns.ldv_32224.peer = peer_state.ldv_32224.role;
---
>   ns.ldv_32224.conn = (unsigned char )nconn;
26282c26282
<   ns.ldv_32224.pdsk = (unsigned char )real_peer_disk;
---
>   ns.ldv_32224.peer = peer_state.ldv_32224.role;
26284c26284
<   ns.ldv_32224.peer_isp = (unsigned char )((int )peer_state.ldv_32224.aftr_isp | (int )peer_state.ldv_32224.user_isp);
---
>   ns.ldv_32224.pdsk = (unsigned char )real_peer_disk;
26286c26286
<   if (((unsigned int )nconn == 10U || (unsigned int )nconn == 13U) && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 6U) {
---
>   ns.ldv_32224.peer_isp = (unsigned char )((int )peer_state.ldv_32224.aftr_isp | (int )peer_state.ldv_32224.user_isp);
26287a26288,26289
>   if (((unsigned int )nconn == 10U || (unsigned int )nconn == 13U) && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 6U) {
> #line 3173
26292,26293d26293
< #line 3174
<   rv = _drbd_set_state(mdev, ns, 3, 0);
26295c26295
<   ns = mdev->state;
---
>   rv = _drbd_set_state(mdev, ns, 3, 0);
26296a26297,26298
>   ns = mdev->state;
> #line 3177
26298,26299d26299
< #line 3178
<   if (rv <= 0) {
26300a26301,26302
>   if (rv <= 0) {
> #line 3180
26302c26304
< #line 3179
---
> #line 3180
26304c26306
< #line 3179
---
> #line 3180
26306c26308
< #line 3179
---
> #line 3180
26308,26309d26309
< #line 3179
<     drbd_force_state(mdev, mask___1, val___1);
26310a26311,26312
>     drbd_force_state(mdev, mask___1, val___1);
> #line 3181
26315,26316d26316
< #line 3183
<   if ((unsigned int )oconn > 9U) {
26317a26318,26319
>   if ((unsigned int )oconn > 9U) {
> #line 3185
26319,26320d26320
< #line 3189
<       drbd_send_uuids(mdev);
26321a26322,26323
>       drbd_send_uuids(mdev);
> #line 3191
26329c26331
< #line 3194
---
> #line 3195
26331c26333
< #line 3196
---
> #line 3197
26333c26335
< #line 3198
---
> #line 3199
26337c26339
< #line 3201 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3202 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
26353c26355
< #line 3203
---
> #line 3204
26355c26357
< #line 3205
---
> #line 3206
26357c26359
< #line 3205
---
> #line 3206
26362c26364
< #line 3205
---
> #line 3206
26364c26366
< #line 3205
---
> #line 3206
26366c26368
< #line 3205
---
> #line 3206
26368c26370
< #line 3205
---
> #line 3206
26370c26372
< #line 3205
---
> #line 3206
26372c26374
< #line 3205
---
> #line 3206
26375c26377
< #line 3205
---
> #line 3206
26377c26379
< #line 3205
---
> #line 3206
26379c26381
< #line 3205
---
> #line 3206
26384c26386
< #line 3205
---
> #line 3206
26386c26388
< #line 3205
---
> #line 3206
26389c26391
< #line 3205
---
> #line 3206
26392c26394
< #line 3212
---
> #line 3213
26394c26396
< #line 3212
---
> #line 3213
26396c26398
< #line 3212
---
> #line 3213
26398c26400
< #line 3212
---
> #line 3213
26400c26402
< #line 3212
---
> #line 3213
26403c26405
<            3212);
---
>            3213);
26407c26409
< #line 3212
---
> #line 3213
26409c26411
< #line 3212
---
> #line 3213
26414c26416
< #line 3213
---
> #line 3214
26416,26417d26417
< #line 3213
<   if (tmp___2 != (int )h->length) {
26418a26419,26420
>   if (tmp___2 != (int )h->length) {
> #line 3215
26423c26425
< #line 3218
---
> #line 3219
26425,26426d26426
< #line 3218
<   if (tmp___6 != 0) {
26427a26428,26429
>   if (tmp___6 != 0) {
> #line 3220
26429,26430d26430
< #line 3219
<     _drbd_uuid_set(mdev, 0, tmp___3);
26431a26432,26433
>     _drbd_uuid_set(mdev, 0, tmp___3);
> #line 3221
26433c26435
< #line 3222
---
> #line 3223
26435c26437
< #line 3224
---
> #line 3225
26438c26440
< #line 3226
---
> #line 3227
26440c26442
< #line 3226
---
> #line 3227
26442c26444
< #line 3226
---
> #line 3227
26445c26447
< #line 3228
---
> #line 3229
26449c26451
< #line 3234 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3235 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
26462c26464
< #line 3237
---
> #line 3238
26464c26466
< #line 3237
---
> #line 3238
26466,26467d26467
< #line 3237
<   num_words = (unsigned int )(__min1 < __min2 ? __min1 : __min2);
26468a26469,26470
>   num_words = (unsigned int )(__min1 < __min2 ? __min1 : __min2);
> #line 3239
26470,26471d26471
< #line 3240
<   if ((unsigned int )h->length != want) {
26472a26473,26474
>   if ((unsigned int )h->length != want) {
> #line 3242
26474c26476
< #line 3241
---
> #line 3242
26476c26478
< #line 3241
---
> #line 3242
26479c26481
< #line 3242
---
> #line 3243
26484,26485d26485
< #line 3244
<   if (want == 0U) {
26486a26487,26488
>   if (want == 0U) {
> #line 3246
26491c26493
< #line 3246
---
> #line 3247
26493,26494d26494
< #line 3246
<   if ((unsigned int )tmp___1 != want) {
26495a26496,26497
>   if ((unsigned int )tmp___1 != want) {
> #line 3248
26500c26502
< #line 3249
---
> #line 3250
26502,26503d26503
< #line 3251
<   c->word_offset = c->word_offset + (unsigned long )num_words;
26505c26505
<   c->bit_offset = c->word_offset * 64UL;
---
>   c->word_offset = c->word_offset + (unsigned long )num_words;
26507c26507
<   if (c->bit_offset > c->bm_bits) {
---
>   c->bit_offset = c->word_offset * 64UL;
26508a26509,26510
>   if (c->bit_offset > c->bm_bits) {
> #line 3255
26513c26515
< #line 3256
---
> #line 3257
26517c26519
< #line 3260 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3261 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
26539c26541
< #line 3268
---
> #line 3269
26541,26542d26542
< #line 3270
<   len = (int )((unsigned int )p->head.length - 1U);
26543a26544,26545
>   len = (int )((unsigned int )p->head.length - 1U);
> #line 3272
26545c26547
< #line 3271
---
> #line 3272
26547c26549
< #line 3275
---
> #line 3276
26549c26551
< #line 3275
---
> #line 3276
26551,26552d26552
< #line 3277
<   bits = bitstream_get_bits(& bs, & look_ahead, 64);
26554c26554
<   if (bits < 0) {
---
>   bits = bitstream_get_bits(& bs, & look_ahead, 64);
26555a26556,26557
>   if (bits < 0) {
> #line 3280
26560c26562
< #line 3281
---
> #line 3282
26562c26564
< #line 3281
---
> #line 3282
26565,26566d26566
< #line 3282
<   bits = vli_decode_bits(& rl, look_ahead);
26568c26568
<   if (bits <= 0) {
---
>   bits = vli_decode_bits(& rl, look_ahead);
26569a26570,26571
>   if (bits <= 0) {
> #line 3285
26574,26575d26575
< #line 3286
<   if (toggle != 0) {
26577c26577
<     e = (unsigned long )(((unsigned long long )s + rl) - 1ULL);
---
>   if (toggle != 0) {
26579c26579
<     if (c->bm_bits <= e) {
---
>     e = (unsigned long )(((unsigned long long )s + rl) - 1ULL);
26580a26581,26582
>     if (c->bm_bits <= e) {
> #line 3290
26582c26584
< #line 3289
---
> #line 3290
26584c26586
< #line 3289
---
> #line 3290
26587c26589
< #line 3290
---
> #line 3291
26592c26594
< #line 3292
---
> #line 3293
26597,26598d26598
< #line 3295
<   if (have < bits) {
26599a26600,26601
>   if (have < bits) {
> #line 3297
26601c26603
< #line 3296
---
> #line 3297
26603c26605
< #line 3296
---
> #line 3297
26607c26609
< #line 3300
---
> #line 3301
26612,26613d26613
< #line 3302
<   look_ahead = look_ahead >> bits;
26614a26615,26616
>   look_ahead = look_ahead >> bits;
> #line 3304
26616,26617d26617
< #line 3305
<   bits = bitstream_get_bits(& bs, & tmp, 64 - have);
26619c26619
<   if (bits < 0) {
---
>   bits = bitstream_get_bits(& bs, & tmp, 64 - have);
26620a26621,26622
>   if (bits < 0) {
> #line 3308
26625,26626d26626
< #line 3308
<   look_ahead = (tmp << have) | look_ahead;
26627a26628,26629
>   look_ahead = (tmp << have) | look_ahead;
> #line 3310
26629c26631
< #line 3281
---
> #line 3282
26631c26633
< #line 3281
---
> #line 3282
26634,26635d26635
< #line 3281
<   if (have > 0) {
26636a26637,26638
>   if (have > 0) {
> #line 3283
26641,26642d26642
< #line 3312
<   c->bit_offset = s;
26643a26644,26645
>   c->bit_offset = s;
> #line 3314
26645c26647
< #line 3315
---
> #line 3316
26649c26651
< #line 3319 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3320 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
26661c26663
< #line 3323
---
> #line 3324
26663,26664d26664
< #line 3323
<   if ((unsigned int )tmp___0 == 2U) {
26665a26666,26667
>   if ((unsigned int )tmp___0 == 2U) {
> #line 3325
26667c26669
< #line 3324
---
> #line 3325
26672c26674
< #line 3330
---
> #line 3331
26674c26676
< #line 3330
---
> #line 3331
26676,26677d26677
< #line 3330
<   printk("<3>%s %s: receive_bitmap_c: unknown encoding %u\n", tmp___2, tmp___1, (int )p->encoding);
26678a26679,26680
>   printk("<3>%s %s: receive_bitmap_c: unknown encoding %u\n", tmp___2, tmp___1, (int )p->encoding);
> #line 3332
26680c26682
< #line 3331
---
> #line 3332
26682c26684
< #line 3331
---
> #line 3332
26684c26686
< #line 3331
---
> #line 3332
26686,26687d26687
< #line 3331
<   drbd_force_state(mdev, mask, val);
26688a26689,26690
>   drbd_force_state(mdev, mask, val);
> #line 3333
26692c26694
< #line 3335 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3336 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
26702c26704
< #line 3339
---
> #line 3340
26704c26706
< #line 3342
---
> #line 3343
26706,26707d26707
< #line 3346
<   if (total == 0U) {
26708a26709,26710
>   if (total == 0U) {
> #line 3348
26713,26714d26714
< #line 3350
<   if (total >= plain) {
26715a26716,26717
>   if (total >= plain) {
> #line 3352
26720c26722
< #line 3354
---
> #line 3355
26722,26723d26723
< #line 3357
<   if (r > 1000U) {
26724a26725,26726
>   if (r > 1000U) {
> #line 3359
26729,26730d26730
< #line 3360
<   r = 1000U - r;
26731a26732,26733
>   r = 1000U - r;
> #line 3362
26733c26735
< #line 3361
---
> #line 3362
26735c26737
< #line 3361
---
> #line 3362
26739c26741
< #line 3362
---
> #line 3363
26743c26745
< #line 3377 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3378 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
26781c26783
< #line 3382
---
> #line 3383
26783c26785
< #line 3384
---
> #line 3385
26785c26787
< #line 3384
---
> #line 3385
26787c26789
< #line 3384
---
> #line 3385
26792c26794
< #line 3384
---
> #line 3385
26794c26796
< #line 3384
---
> #line 3385
26796c26798
< #line 3384
---
> #line 3385
26798c26800
< #line 3384
---
> #line 3385
26800c26802
< #line 3384
---
> #line 3385
26802c26804
< #line 3384
---
> #line 3385
26805c26807
< #line 3384
---
> #line 3385
26807c26809
< #line 3384
---
> #line 3385
26809c26811
< #line 3384
---
> #line 3385
26811c26813
< #line 3384
---
> #line 3385
26816c26818
< #line 3384
---
> #line 3385
26818c26820
< #line 3384
---
> #line 3385
26821c26823
< #line 3384
---
> #line 3385
26824c26826
< #line 3386
---
> #line 3387
26826c26828
< #line 3390
---
> #line 3391
26828,26829d26829
< #line 3390
<   buffer = (void *)tmp___2;
26831c26831
<   if ((unsigned long )buffer == (unsigned long )((void *)0)) {
---
>   buffer = (void *)tmp___2;
26832a26833,26834
>   if ((unsigned long )buffer == (unsigned long )((void *)0)) {
> #line 3393
26834c26836
< #line 3392
---
> #line 3393
26836c26838
< #line 3392
---
> #line 3393
26839c26841
< #line 3393
---
> #line 3394
26844c26846
< #line 3396
---
> #line 3397
26846c26848
< #line 3396
---
> #line 3397
26848c26850
< #line 3396
---
> #line 3397
26850c26852
< #line 3396
---
> #line 3397
26852c26854
< #line 3396
---
> #line 3397
26854c26856
< #line 3396
---
> #line 3397
26856c26858
< #line 3396
---
> #line 3397
26858c26860
< #line 3396
---
> #line 3397
26860c26862
< #line 3396
---
> #line 3397
26862c26864
< #line 3396
---
> #line 3397
26864c26866
< #line 3396
---
> #line 3397
26867,26868d26868
< #line 3402
<   if ((unsigned int )h->command == 4U) {
26869a26870,26871
>   if ((unsigned int )h->command == 4U) {
> #line 3404
26872c26874
< #line 3404
---
> #line 3405
26874,26875d26875
< #line 3409
<     if ((unsigned int )h->length > 4088U) {
26876a26877,26878
>     if ((unsigned int )h->length > 4088U) {
> #line 3411
26878c26880
< #line 3410
---
> #line 3411
26880,26881d26881
< #line 3410
<       printk("<3>%s %s: ReportCBitmap packet too large\n", tmp___8, tmp___7);
26882a26883,26884
>       printk("<3>%s %s: ReportCBitmap packet too large\n", tmp___8, tmp___7);
> #line 3412
26887,26888d26888
< #line 3414
<     p = (struct p_compressed_bm *)buffer;
26889a26890,26891
>     p = (struct p_compressed_bm *)buffer;
> #line 3416
26891c26893
< #line 3415
---
> #line 3416
26893c26895
< #line 3415
---
> #line 3416
26896c26898
< #line 3415
---
> #line 3416
26899c26901
< #line 3416
---
> #line 3417
26901,26902d26902
< #line 3416
<     if (tmp___9 != (int )h->length) {
26903a26904,26905
>     if (tmp___9 != (int )h->length) {
> #line 3418
26908,26909d26909
< #line 3418
<     if ((unsigned int )p->head.length <= 1U) {
26910a26911,26912
>     if ((unsigned int )p->head.length <= 1U) {
> #line 3420
26912c26914
< #line 3419
---
> #line 3420
26914c26916
< #line 3419
---
> #line 3420
26917c26919
< #line 3420
---
> #line 3421
26922c26924
< #line 3422
---
> #line 3423
26925c26927
< #line 3424
---
> #line 3425
26927c26929
< #line 3424
---
> #line 3425
26929c26931
< #line 3424
---
> #line 3425
26932c26934
< #line 3425
---
> #line 3426
26935,26936d26936
< #line 3428
<   c.packets[(unsigned int )h->command == 4U] = c.packets[(unsigned int )h->command == 4U] + 1U;
26937a26938,26939
>   c.packets[(unsigned int )h->command == 4U] = c.packets[(unsigned int )h->command == 4U] + 1U;
> #line 3430
26939,26940d26940
< #line 3431
<   if ((unsigned int )ret != 0U) {
26941a26942,26943
>   if ((unsigned int )ret != 0U) {
> #line 3433
26946c26948
< #line 3434
---
> #line 3435
26948,26949d26949
< #line 3434
<   if (tmp___14 == 0) {
26950a26951,26952
>   if (tmp___14 == 0) {
> #line 3436
26955,26956d26956
< #line 3436
<   if ((unsigned int )ret == 0U) {
26957a26958,26959
>   if ((unsigned int )ret == 0U) {
> #line 3438
26963,26964d26964
< #line 3437
<   if ((unsigned int )ret == 2U) {
26965a26966,26967
>   if ((unsigned int )ret == 2U) {
> #line 3439
26970c26972
< #line 3440
---
> #line 3441
26972,26973d26973
< #line 3442
<   if ((unsigned int )*((unsigned short *)mdev + 902UL) == 224U) {
26974a26975,26976
>   if ((unsigned int )*((unsigned short *)mdev + 902UL) == 224U) {
> #line 3444
26976,26977d26977
< #line 3443
<     ok = tmp___15 == 0;
26979c26979
<     if (ok == 0) {
---
>     ok = tmp___15 == 0;
26980a26981,26982
>     if (ok == 0) {
> #line 3446
26985c26987
< #line 3447
---
> #line 3448
26987c26989
< #line 3447
---
> #line 3448
26989c26991
< #line 3447
---
> #line 3448
26991c26993
< #line 3447
---
> #line 3448
26993,26994d26994
< #line 3447
<     ok = _drbd_request_state(mdev, mask, val, CS_VERBOSE);
26995a26996,26997
>     ok = _drbd_request_state(mdev, mask, val, CS_VERBOSE);
> #line 3449
26997c26999
< #line 3448
---
> #line 3449
26999c27001
< #line 3448
---
> #line 3449
27001c27003
< #line 3448
---
> #line 3449
27004c27006
<              3448);
---
>              3449);
27009c27011
< #line 3449
---
> #line 3450
27011c27013
< #line 3452
---
> #line 3453
27013c27015
< #line 3452
---
> #line 3453
27015c27017
< #line 3452
---
> #line 3453
27017c27019
< #line 3452
---
> #line 3453
27023c27025
< #line 3456
---
> #line 3457
27026,27027d27027
< #line 3458
<   drbd_bm_unlock(mdev);
27029c27029
<   if (ok != 0 && (unsigned int )*((unsigned short *)mdev + 902UL) == 208U) {
---
>   drbd_bm_unlock(mdev);
27030a27031,27032
>   if (ok != 0 && (unsigned int )*((unsigned short *)mdev + 902UL) == 208U) {
> #line 3461
27035,27036d27036
< #line 3461
<   free_pages((unsigned long )buffer, 0U);
27037a27038,27039
>   free_pages((unsigned long )buffer, 0U);
> #line 3463
27041c27043
< #line 3465 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3466 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
27057c27059
< #line 3471
---
> #line 3472
27059c27061
< #line 3471
---
> #line 3472
27061c27063
< #line 3471
---
> #line 3472
27064,27065d27065
< #line 3474
<   size = (int )h->length;
27066a27067,27068
>   size = (int )h->length;
> #line 3476
27069c27071
< #line 3476
---
> #line 3477
27071c27073
< #line 3476
---
> #line 3477
27073,27074d27074
< #line 3476
<   want = __min1 < __min2 ? __min1 : __min2;
27076c27076
<   r = drbd_recv(mdev, (void *)(& sink), (size_t )want);
---
>   want = __min1 < __min2 ? __min1 : __min2;
27077a27078,27079
>   r = drbd_recv(mdev, (void *)(& sink), (size_t )want);
> #line 3479
27079c27081
< #line 3478
---
> #line 3479
27081c27083
< #line 3478
---
> #line 3479
27083c27085
< #line 3478
---
> #line 3479
27085c27087
< #line 3478
---
> #line 3479
27088c27090
<            3478);
---
>            3479);
27092c27094
< #line 3478
---
> #line 3479
27094c27096
< #line 3478
---
> #line 3479
27099c27101
< #line 3479
---
> #line 3480
27102,27103d27103
< #line 3475
<   if (size > 0) {
27104a27105,27106
>   if (size > 0) {
> #line 3477
27110c27112
< #line 3481
---
> #line 3482
27114c27116
< #line 3484 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3485 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
27120,27121d27121
< #line 3486
<   if ((int )mdev->state.ldv_32224.disk > 3) {
27122a27123,27124
>   if ((int )mdev->state.ldv_32224.disk > 3) {
> #line 3488
27127c27129
< #line 3491
---
> #line 3492
27129c27131
< #line 3493
---
> #line 3494
27133c27135
< #line 3498 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3499 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
27135c27137
< #line 3498
---
> #line 3499
27146c27148
< #line 3524 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3525 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
27149c27151
< #line 3525 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3526 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
27151c27153
< #line 3527 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3528 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
27174c27176
< #line 3530
---
> #line 3531
27176c27178
< #line 3532
---
> #line 3533
27179,27180d27180
< #line 3533
<   drbd_thread_current_set_cpu(mdev);
27181a27182,27183
>   drbd_thread_current_set_cpu(mdev);
> #line 3535
27183,27184d27184
< #line 3534
<   if (tmp == 0) {
27185a27186,27187
>   if (tmp == 0) {
> #line 3536
27187c27189
< #line 3535
---
> #line 3536
27189c27191
< #line 3535
---
> #line 3536
27191c27193
< #line 3535
---
> #line 3536
27193,27194d27194
< #line 3535
<     drbd_force_state(mdev, mask, val);
27195a27196,27197
>     drbd_force_state(mdev, mask, val);
> #line 3537
27200,27201d27201
< #line 3539
<   if ((unsigned int )header->command <= 36U) {
27202a27203,27204
>   if ((unsigned int )header->command <= 36U) {
> #line 3541
27205c27207
< #line 3541
---
> #line 3542
27207c27209
< #line 3543
---
> #line 3544
27210,27211d27211
< #line 3544
<   if ((unsigned int )header->command > 257U) {
27212a27213,27214
>   if ((unsigned int )header->command > 257U) {
> #line 3546
27215c27217
< #line 3547
---
> #line 3548
27218c27220
< #line 3549
---
> #line 3550
27222,27223d27223
< #line 3549
<   if (tmp___2 != 0L) {
27224a27225,27226
>   if (tmp___2 != 0L) {
> #line 3551
27226c27228
< #line 3550
---
> #line 3551
27228c27230
< #line 3550
---
> #line 3551
27231c27233
< #line 3552
---
> #line 3553
27233c27235
< #line 3552
---
> #line 3553
27235c27237
< #line 3552
---
> #line 3553
27237c27239
< #line 3552
---
> #line 3553
27239,27240d27240
< #line 3552
<     drbd_force_state(mdev, mask___0, val___0);
27241a27242,27243
>     drbd_force_state(mdev, mask___0, val___0);
> #line 3554
27246c27248
< #line 3555
---
> #line 3556
27248c27250
< #line 3555
---
> #line 3556
27250,27251d27251
< #line 3555
<   if (tmp___7 != 0L) {
27252a27253,27254
>   if (tmp___7 != 0L) {
> #line 3557
27254c27256
< #line 3556
---
> #line 3557
27256c27258
< #line 3556
---
> #line 3557
27258c27260
< #line 3556
---
> #line 3557
27260c27262
< #line 3558
---
> #line 3559
27262c27264
< #line 3558
---
> #line 3559
27264c27266
< #line 3558
---
> #line 3559
27266c27268
< #line 3558
---
> #line 3559
27268,27269d27269
< #line 3558
<     drbd_force_state(mdev, mask___1, val___1);
27270a27271,27272
>     drbd_force_state(mdev, mask___1, val___1);
> #line 3560
27276c27278
< #line 3532
---
> #line 3533
27278,27279d27279
< #line 3532
<   if ((unsigned int )tmp___8 == 1U) {
27280a27281,27282
>   if ((unsigned int )tmp___8 == 1U) {
> #line 3534
27286c27288
< #line 3537
---
> #line 3538
27290c27292
< #line 3564 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3565 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
27307,27308d27308
< #line 3575
<   _spin_lock_irq(& mdev->req_lock);
27309a27310,27311
>   _spin_lock_irq(& mdev->req_lock);
> #line 3577
27311c27313
< #line 3576
---
> #line 3577
27314,27315d27315
< #line 3577
<   slot = mdev->app_reads_hash + (unsigned long )i;
27316a27317,27318
>   slot = mdev->app_reads_hash + (unsigned long )i;
> #line 3579
27318c27320
< #line 3578
---
> #line 3579
27321c27323
< #line 3584
---
> #line 3585
27323c27325
< #line 3584
---
> #line 3585
27325c27327
< #line 3584
---
> #line 3585
27327c27329
< #line 3584
---
> #line 3585
27329c27331
< #line 3584
---
> #line 3585
27332c27334
<            3584);
---
>            3585);
27336c27338
< #line 3587
---
> #line 3588
27338c27340
< #line 3578
---
> #line 3579
27341c27343
< #line 3578
---
> #line 3579
27343c27345
< #line 3578
---
> #line 3579
27345c27347
< #line 3578
---
> #line 3579
27347c27349
< #line 3578
---
> #line 3579
27349c27351
< #line 3578
---
> #line 3579
27351,27352d27352
< #line 3578
<       if (1 != 0) {
27353a27354,27355
>       if (1 != 0) {
> #line 3580
27356c27358
< #line 3581
---
> #line 3582
27360c27362
< #line 3581
---
> #line 3582
27367c27369
< #line 3576
---
> #line 3577
27370,27371d27371
< #line 3576
<   if (i <= 14) {
27372a27373,27374
>   if (i <= 14) {
> #line 3578
27377c27379
< #line 3590
---
> #line 3591
27379c27381
< #line 3590
---
> #line 3591
27382c27384
< #line 3591
---
> #line 3592
27384,27385d27385
< #line 3591
<   if (tmp___5 == 0) {
27386a27387,27388
>   if (tmp___5 == 0) {
> #line 3593
27388c27390
< #line 3592
---
> #line 3593
27390c27392
< #line 3592
---
> #line 3593
27396c27398
< #line 3590
---
> #line 3591
27399,27400d27400
< #line 3590
<   if (i <= 14) {
27401a27402,27403
>   if (i <= 14) {
> #line 3592
27406,27407d27407
< #line 3595
<   memset((void *)mdev->app_reads_hash, 0, 120UL);
27409c27409
<   _spin_unlock_irq(& mdev->req_lock);
---
>   memset((void *)mdev->app_reads_hash, 0, 120UL);
27410a27411,27412
>   _spin_unlock_irq(& mdev->req_lock);
> #line 3598
27414c27416
< #line 3599 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3600 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
27420,27421d27421
< #line 3603
<   barr.w.cb = & w_prev_work_done;
27423c27423
<   init_completion(& barr.done);
---
>   barr.w.cb = & w_prev_work_done;
27425c27425
<   drbd_queue_work(& mdev->data.work, & barr.w);
---
>   init_completion(& barr.done);
27427c27427
<   wait_for_completion(& barr.done);
---
>   drbd_queue_work(& mdev->data.work, & barr.w);
27428a27429,27430
>   wait_for_completion(& barr.done);
> #line 3608
27432c27434
< #line 3609 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3610 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
27488c27490
< #line 3613
---
> #line 3614
27490,27491d27491
< #line 3616
<   if ((unsigned int )*((unsigned short *)mdev + 902UL) == 0U) {
27492a27493,27494
>   if ((unsigned int )*((unsigned short *)mdev + 902UL) == 0U) {
> #line 3618
27497,27498d27498
< #line 3618
<   if ((int )mdev->state.ldv_32224.conn > 7) {
27499a27500,27501
>   if ((int )mdev->state.ldv_32224.conn > 7) {
> #line 3620
27501c27503
< #line 3619
---
> #line 3620
27503c27505
< #line 3619
---
> #line 3620
27505c27507
< #line 3619
---
> #line 3620
27511c27513
< #line 3623
---
> #line 3624
27513,27514d27514
< #line 3625
<   ldv_mutex_lock_42(& mdev->data.mutex);
27516c27516
<   drbd_free_sock(mdev);
---
>   ldv_mutex_lock_42(& mdev->data.mutex);
27517a27518,27519
>   drbd_free_sock(mdev);
> #line 3628
27519,27520d27520
< #line 3629
<   _spin_lock_irq(& mdev->req_lock);
27522c27522
<   _drbd_wait_ee_list_empty(mdev, & mdev->active_ee);
---
>   _spin_lock_irq(& mdev->req_lock);
27524c27524
<   _drbd_wait_ee_list_empty(mdev, & mdev->sync_ee);
---
>   _drbd_wait_ee_list_empty(mdev, & mdev->active_ee);
27526c27526
<   _drbd_wait_ee_list_empty(mdev, & mdev->read_ee);
---
>   _drbd_wait_ee_list_empty(mdev, & mdev->sync_ee);
27527a27528,27529
>   _drbd_wait_ee_list_empty(mdev, & mdev->read_ee);
> #line 3634
27529,27530d27530
< #line 3645
<   drbd_rs_cancel_all(mdev);
27532c27532
<   mdev->rs_total = 0UL;
---
>   drbd_rs_cancel_all(mdev);
27534c27534
<   mdev->rs_failed = 0UL;
---
>   mdev->rs_total = 0UL;
27536c27536
<   atomic_set(& mdev->rs_pending_cnt, 0);
---
>   mdev->rs_failed = 0UL;
27537a27538,27539
>   atomic_set(& mdev->rs_pending_cnt, 0);
> #line 3650
27539,27540d27540
< #line 3652
<   del_timer_sync(& mdev->resync_timer);
27542c27542
<   set_bit(3U, (unsigned long volatile   *)(& mdev->flags));
---
>   del_timer_sync(& mdev->resync_timer);
27543a27544,27545
>   set_bit(3U, (unsigned long volatile   *)(& mdev->flags));
> #line 3655
27545c27547
< #line 3659
---
> #line 3660
27547c27549
< #line 3663
---
> #line 3664
27549,27550d27550
< #line 3665
<   kfree((void const   *)mdev->p_uuid);
27551a27552,27553
>   kfree((void const   *)mdev->p_uuid);
> #line 3667
27553,27554d27554
< #line 3668
<   if ((unsigned int )*((unsigned char *)mdev + 1806UL) == 0U) {
27555a27556,27557
>   if ((unsigned int )*((unsigned char *)mdev + 1806UL) == 0U) {
> #line 3670
27560c27562
< #line 3671
---
> #line 3672
27562c27564
< #line 3673
---
> #line 3674
27564c27566
< #line 3673
---
> #line 3674
27566c27568
< #line 3673
---
> #line 3674
27568c27570
< #line 3675
---
> #line 3676
27570,27571d27571
< #line 3677
<   fp = FP_DONT_CARE;
27572a27573,27574
>   fp = FP_DONT_CARE;
> #line 3679
27574,27575d27575
< #line 3678
<   if (tmp___4 != 0) {
27577c27577
<     fp = (enum drbd_fencing_p )(mdev->ldev)->dc.fencing;
---
>   if (tmp___4 != 0) {
27578a27579,27580
>     fp = (enum drbd_fencing_p )(mdev->ldev)->dc.fencing;
> #line 3681
27583,27584d27584
< #line 3683
<   if ((unsigned int )*((unsigned char *)mdev + 1804UL) == 1U) {
27586c27586
<     if ((unsigned int )fp != 0U && (int )mdev->state.ldv_32224.pdsk > 5) {
---
>   if ((unsigned int )*((unsigned char *)mdev + 1804UL) == 1U) {
27587a27588,27589
>     if ((unsigned int )fp != 0U && (int )mdev->state.ldv_32224.pdsk > 5) {
> #line 3686
27589,27590d27590
< #line 3685
<       nps = tmp___5;
27591a27592,27593
>       nps = tmp___5;
> #line 3687
27593c27595
< #line 3686
---
> #line 3687
27595c27597
< #line 3686
---
> #line 3687
27597c27599
< #line 3686
---
> #line 3687
27599c27601
< #line 3686
---
> #line 3687
27607,27608d27608
< #line 3690
<   _spin_lock_irq(& mdev->req_lock);
27610c27610
<   os = mdev->state;
---
>   _spin_lock_irq(& mdev->req_lock);
27611a27612,27613
>   os = mdev->state;
> #line 3693
27613,27614d27614
< #line 3694
<     ns = os;
27616c27616
<     ns.ldv_32224.conn = 2U;
---
>     ns = os;
27617a27618,27619
>     ns.ldv_32224.conn = 2U;
> #line 3697
27622c27624
< #line 3698
---
> #line 3699
27624c27626
< #line 3700
---
> #line 3701
27626c27628
< #line 3702
---
> #line 3703
27628c27630
< #line 3702
---
> #line 3703
27630c27632
< #line 3702
---
> #line 3703
27635c27637
< #line 3702
---
> #line 3703
27637c27639
< #line 3702
---
> #line 3703
27639c27641
< #line 3702
---
> #line 3703
27641c27643
< #line 3702
---
> #line 3703
27643c27645
< #line 3702
---
> #line 3703
27645c27647
< #line 3702
---
> #line 3703
27648c27650
< #line 3702
---
> #line 3703
27650c27652
< #line 3702
---
> #line 3703
27652c27654
< #line 3702
---
> #line 3703
27654c27656
< #line 3702
---
> #line 3703
27659c27661
< #line 3702
---
> #line 3703
27661c27663
< #line 3702
---
> #line 3703
27664c27666
< #line 3702
---
> #line 3703
27667c27669
< #line 3706
---
> #line 3707
27669c27671
< #line 3706
---
> #line 3707
27671c27673
< #line 3706
---
> #line 3707
27676c27678
< #line 3706
---
> #line 3707
27678c27680
< #line 3706
---
> #line 3707
27680c27682
< #line 3706
---
> #line 3707
27682c27684
< #line 3706
---
> #line 3707
27684c27686
< #line 3706
---
> #line 3707
27686c27688
< #line 3706
---
> #line 3707
27689c27691
< #line 3706
---
> #line 3707
27691c27693
< #line 3706
---
> #line 3707
27693c27695
< #line 3706
---
> #line 3707
27695c27697
< #line 3706
---
> #line 3707
27700c27702
< #line 3706
---
> #line 3707
27702c27704
< #line 3706
---
> #line 3707
27705c27707
< #line 3706
---
> #line 3707
27708c27710
< #line 3708
---
> #line 3709
27710c27712
< #line 3710
---
> #line 3711
27712c27714
< #line 3710
---
> #line 3711
27715,27716d27716
< #line 3711
<     if ((unsigned long )h->first != (unsigned long )((struct hlist_node *)0)) {
27717a27718,27719
>     if ((unsigned long )h->first != (unsigned long )((struct hlist_node *)0)) {
> #line 3713
27719c27721
< #line 3712
---
> #line 3713
27721c27723
< #line 3712
---
> #line 3713
27727c27729
< #line 3710
---
> #line 3711
27730,27731d27731
< #line 3710
<     if ((unsigned long )(mdev->ee_hash + (unsigned long )mdev->ee_hash_s) > (unsigned long )h) {
27732a27733,27734
>     if ((unsigned long )(mdev->ee_hash + (unsigned long )mdev->ee_hash_s) > (unsigned long )h) {
> #line 3712
27737,27738d27738
< #line 3714
<     kfree((void const   *)mdev->ee_hash);
27740c27740
<     mdev->ee_hash = 0;
---
>     kfree((void const   *)mdev->ee_hash);
27741a27742,27743
>     mdev->ee_hash = 0;
> #line 3717
27743c27745
< #line 3719
---
> #line 3720
27745c27747
< #line 3719
---
> #line 3720
27748,27749d27749
< #line 3720
<     if ((unsigned long )h->first != (unsigned long )((struct hlist_node *)0)) {
27750a27751,27752
>     if ((unsigned long )h->first != (unsigned long )((struct hlist_node *)0)) {
> #line 3722
27752c27754
< #line 3721
---
> #line 3722
27754c27756
< #line 3721
---
> #line 3722
27760c27762
< #line 3719
---
> #line 3720
27763,27764d27764
< #line 3719
<     if ((unsigned long )(mdev->tl_hash + (unsigned long )mdev->tl_hash_s) > (unsigned long )h) {
27765a27766,27767
>     if ((unsigned long )(mdev->tl_hash + (unsigned long )mdev->tl_hash_s) > (unsigned long )h) {
> #line 3721
27770,27771d27771
< #line 3723
<     kfree((void const   *)mdev->tl_hash);
27773c27773
<     mdev->tl_hash = 0;
---
>     kfree((void const   *)mdev->tl_hash);
27775c27775
<     mdev->tl_hash_s = 0U;
---
>     mdev->tl_hash = 0;
27776a27777,27778
>     mdev->tl_hash_s = 0U;
> #line 3727
27778,27779d27779
< #line 3728
<     crypto_free_hash(mdev->cram_hmac_tfm);
27780a27781,27782
>     crypto_free_hash(mdev->cram_hmac_tfm);
> #line 3730
27782,27783d27783
< #line 3731
<     kfree((void const   *)mdev->net_conf);
27785c27785
<     mdev->net_conf = 0;
---
>     kfree((void const   *)mdev->net_conf);
27786a27787,27788
>     mdev->net_conf = 0;
> #line 3734
27788c27790
< #line 3733
---
> #line 3734
27790c27792
< #line 3733
---
> #line 3734
27792c27794
< #line 3733
---
> #line 3734
27794c27796
< #line 3733
---
> #line 3734
27799c27801
< #line 3743
---
> #line 3744
27801,27802d27802
< #line 3743
<   i = (unsigned int )tmp___16;
27804c27804
<   if (i != 0U) {
---
>   i = (unsigned int )tmp___16;
27805a27806,27807
>   if (i != 0U) {
> #line 3746
27807c27809
< #line 3745
---
> #line 3746
27809c27811
< #line 3745
---
> #line 3746
27815c27817
< #line 3746
---
> #line 3747
27817,27818d27818
< #line 3746
<   i = (unsigned int )tmp___19;
27820c27820
<   if (i != 0U) {
---
>   i = (unsigned int )tmp___19;
27821a27822,27823
>   if (i != 0U) {
> #line 3749
27823c27825
< #line 3748
---
> #line 3749
27825c27827
< #line 3748
---
> #line 3749
27830c27832
< #line 3750
---
> #line 3751
27832c27834
< #line 3750
---
> #line 3751
27834c27836
< #line 3750
---
> #line 3751
27836c27838
< #line 3750
---
> #line 3751
27838c27840
< #line 3750
---
> #line 3751
27841c27843
<            3750);
---
>            3751);
27845c27847
< #line 3751
---
> #line 3752
27847c27849
< #line 3751
---
> #line 3752
27849c27851
< #line 3751
---
> #line 3752
27851c27853
< #line 3751
---
> #line 3752
27853c27855
< #line 3751
---
> #line 3752
27856c27858
<            3751);
---
>            3752);
27860c27862
< #line 3752
---
> #line 3753
27862c27864
< #line 3752
---
> #line 3753
27864c27866
< #line 3752
---
> #line 3753
27866c27868
< #line 3752
---
> #line 3753
27868c27870
< #line 3752
---
> #line 3753
27871c27873
<            3752);
---
>            3753);
27875c27877
< #line 3753
---
> #line 3754
27877c27879
< #line 3753
---
> #line 3754
27879c27881
< #line 3753
---
> #line 3754
27881c27883
< #line 3753
---
> #line 3754
27883c27885
< #line 3753
---
> #line 3754
27886c27888
<            3753);
---
>            3754);
27890,27891d27891
< #line 3756
<   atomic_set(& (mdev->current_epoch)->epoch_size, 0);
27892a27893,27894
>   atomic_set(& (mdev->current_epoch)->epoch_size, 0);
> #line 3758
27894c27896
< #line 3757
---
> #line 3758
27896c27898
< #line 3757
---
> #line 3758
27898c27900
< #line 3757
---
> #line 3758
27900c27902
< #line 3757
---
> #line 3758
27903c27905
<            3757);
---
>            3758);
27907c27909
< #line 3758
---
> #line 3759
27911c27913
< #line 3769 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3770 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
27921c27923
< #line 3772
---
> #line 3773
27923c27925
< #line 3775
---
> #line 3776
27925,27926d27926
< #line 3775
<   if (tmp___1 != 0) {
27927a27928,27929
>   if (tmp___1 != 0) {
> #line 3777
27929c27931
< #line 3776
---
> #line 3777
27931,27932d27932
< #line 3776
<     printk("<3>%s %s: interrupted during initial handshake\n", tmp___0, tmp);
27933a27934,27935
>     printk("<3>%s %s: interrupted during initial handshake\n", tmp___0, tmp);
> #line 3778
27938,27939d27939
< #line 3780
<   if ((unsigned long )mdev->data.socket == (unsigned long )((struct socket *)0)) {
27941c27941
<     ldv_mutex_unlock_45(& mdev->data.mutex);
---
>   if ((unsigned long )mdev->data.socket == (unsigned long )((struct socket *)0)) {
27942a27943,27944
>     ldv_mutex_unlock_45(& mdev->data.mutex);
> #line 3783
27947,27948d27948
< #line 3785
<   memset((void *)p, 0, 80UL);
27950c27950
<   p->protocol_min = 1442840576U;
---
>   memset((void *)p, 0, 80UL);
27952c27952
<   p->protocol_max = 1526726656U;
---
>   p->protocol_min = 1442840576U;
27953a27954,27955
>   p->protocol_max = 1526726656U;
> #line 3789
27956,27957d27957
< #line 3790
<   ldv_mutex_unlock_46(& mdev->data.mutex);
27958a27959,27960
>   ldv_mutex_unlock_46(& mdev->data.mutex);
> #line 3792
27962c27964
< #line 3801 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3802 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
27985,27986d27986
< #line 3804
<   p = & mdev->data.rbuf.handshake;
27987a27988,27989
>   p = & mdev->data.rbuf.handshake;
> #line 3806
27989,27990d27990
< #line 3809
<   rv = drbd_send_handshake(mdev);
27992c27992
<   if (rv == 0) {
---
>   rv = drbd_send_handshake(mdev);
27993a27994,27995
>   if (rv == 0) {
> #line 3812
27998,27999d27999
< #line 3813
<   rv = drbd_recv_header(mdev, & p->head);
28001c28001
<   if (rv == 0) {
---
>   rv = drbd_recv_header(mdev, & p->head);
28002a28003,28004
>   if (rv == 0) {
> #line 3816
28007,28008d28008
< #line 3817
<   if ((unsigned int )p->head.command != 65534U) {
28009a28010,28011
>   if ((unsigned int )p->head.command != 65534U) {
> #line 3819
28011c28013
< #line 3818
---
> #line 3819
28013c28015
< #line 3818
---
> #line 3819
28015c28017
< #line 3818
---
> #line 3819
28018c28020
< #line 3820
---
> #line 3821
28023,28024d28024
< #line 3823
<   if ((int )p->head.length != expect) {
28025a28026,28027
>   if ((int )p->head.length != expect) {
> #line 3825
28027c28029
< #line 3824
---
> #line 3825
28029c28031
< #line 3824
---
> #line 3825
28032c28034
< #line 3826
---
> #line 3827
28037c28039
< #line 3829
---
> #line 3830
28039,28040d28040
< #line 3831
<   if (rv != expect) {
28041a28042,28043
>   if (rv != expect) {
> #line 3833
28043c28045
< #line 3832
---
> #line 3833
28045c28047
< #line 3832
---
> #line 3833
28048c28050
< #line 3833
---
> #line 3834
28053c28055
< #line 3836
---
> #line 3837
28055,28056d28056
< #line 3836
<   p->protocol_min = tmp___6;
28057a28058,28059
>   p->protocol_min = tmp___6;
> #line 3838
28059,28060d28060
< #line 3837
<   p->protocol_max = tmp___7;
28062c28062
<   if (p->protocol_max == 0U) {
---
>   p->protocol_max = tmp___7;
28063a28064,28065
>   if (p->protocol_max == 0U) {
> #line 3840
28068c28070
< #line 3841
---
> #line 3842
28070c28072
< #line 3843
---
> #line 3844
28075c28077
< #line 3845
---
> #line 3846
28077c28079
< #line 3845
---
> #line 3846
28079c28081
< #line 3845
---
> #line 3846
28081c28083
< #line 3847
---
> #line 3848
28083c28085
< #line 3847
---
> #line 3848
28085c28087
< #line 3847
---
> #line 3848
28088c28090
< #line 3850
---
> #line 3851
28091c28093
< #line 3853
---
> #line 3854
28093c28095
< #line 3853
---
> #line 3854
28095c28097
< #line 3853
---
> #line 3854
28098c28100
< #line 3857
---
> #line 3858
28102c28104
< #line 3869 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3870 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
28150,28151d28151
< #line 3873
<   response = 0;
28153c28153
<   right_response = 0;
---
>   response = 0;
28154a28155,28156
>   right_response = 0;
> #line 3876
28156c28158
< #line 3877
---
> #line 3878
28158c28160
< #line 3877
---
> #line 3878
28160,28161d28161
< #line 3882
<   desc.tfm = mdev->cram_hmac_tfm;
28162a28163,28164
>   desc.tfm = mdev->cram_hmac_tfm;
> #line 3884
28164c28166
< #line 3885
---
> #line 3886
28167,28168d28168
< #line 3887
<   if (rv != 0) {
28169a28170,28171
>   if (rv != 0) {
> #line 3889
28171c28173
< #line 3888
---
> #line 3889
28173,28174d28174
< #line 3888
<     printk("<3>%s %s: crypto_hash_setkey() failed with %d\n", tmp___1, tmp___0, rv);
28176c28176
<     rv = 0;
---
>     printk("<3>%s %s: crypto_hash_setkey() failed with %d\n", tmp___1, tmp___0, rv);
28177a28178,28179
>     rv = 0;
> #line 3891
28182c28184
< #line 3893
---
> #line 3894
28184,28185d28185
< #line 3895
<   rv = drbd_send_cmd2(mdev, P_AUTH_CHALLENGE, (char *)(& my_challenge), 64UL);
28187c28187
<   if (rv == 0) {
---
>   rv = drbd_send_cmd2(mdev, P_AUTH_CHALLENGE, (char *)(& my_challenge), 64UL);
28188a28189,28190
>   if (rv == 0) {
> #line 3898
28193,28194d28194
< #line 3899
<   rv = drbd_recv_header(mdev, & p);
28196c28196
<   if (rv == 0) {
---
>   rv = drbd_recv_header(mdev, & p);
28197a28198,28199
>   if (rv == 0) {
> #line 3902
28202,28203d28203
< #line 3903
<   if ((unsigned int )p.command != 16U) {
28204a28205,28206
>   if ((unsigned int )p.command != 16U) {
> #line 3905
28206c28208
< #line 3904
---
> #line 3905
28208c28210
< #line 3904
---
> #line 3905
28210c28212
< #line 3904
---
> #line 3905
28213,28214d28214
< #line 3906
<     rv = 0;
28215a28216,28217
>     rv = 0;
> #line 3908
28220,28221d28221
< #line 3910
<   if ((unsigned int )p.length > 128U) {
28222a28223,28224
>   if ((unsigned int )p.length > 128U) {
> #line 3912
28224c28226
< #line 3911
---
> #line 3912
28226,28227d28227
< #line 3911
<     printk("<3>%s %s: expected AuthChallenge payload too big.\n", tmp___6, tmp___5);
28229c28229
<     rv = 0;
---
>     printk("<3>%s %s: expected AuthChallenge payload too big.\n", tmp___6, tmp___5);
28230a28231,28232
>     rv = 0;
> #line 3914
28235c28237
< #line 3916
---
> #line 3917
28237,28238d28238
< #line 3916
<   peers_ch = (char *)tmp___7;
28240c28240
<   if ((unsigned long )peers_ch == (unsigned long )((char *)0)) {
---
>   peers_ch = (char *)tmp___7;
28241a28242,28243
>   if ((unsigned long )peers_ch == (unsigned long )((char *)0)) {
> #line 3919
28243c28245
< #line 3918
---
> #line 3919
28245,28246d28246
< #line 3918
<     printk("<3>%s %s: kmalloc of peers_ch failed\n", tmp___9, tmp___8);
28248c28248
<     rv = 0;
---
>     printk("<3>%s %s: kmalloc of peers_ch failed\n", tmp___9, tmp___8);
28249a28250,28251
>     rv = 0;
> #line 3921
28254c28256
< #line 3923
---
> #line 3924
28256,28257d28257
< #line 3925
<   if ((int )p.length != rv) {
28258a28259,28260
>   if ((int )p.length != rv) {
> #line 3927
28260c28262
< #line 3926
---
> #line 3927
28262,28263d28263
< #line 3926
<     printk("<3>%s %s: short read AuthChallenge: l=%u\n", tmp___11, tmp___10, rv);
28265c28265
<     rv = 0;
---
>     printk("<3>%s %s: short read AuthChallenge: l=%u\n", tmp___11, tmp___10, rv);
28266a28267,28268
>     rv = 0;
> #line 3929
28271,28272d28272
< #line 3931
<   resp_size = crypto_hash_digestsize(mdev->cram_hmac_tfm);
28273a28274,28275
>   resp_size = crypto_hash_digestsize(mdev->cram_hmac_tfm);
> #line 3933
28275,28276d28276
< #line 3932
<   response = (char *)tmp___12;
28278c28278
<   if ((unsigned long )response == (unsigned long )((char *)0)) {
---
>   response = (char *)tmp___12;
28279a28280,28281
>   if ((unsigned long )response == (unsigned long )((char *)0)) {
> #line 3935
28281c28283
< #line 3934
---
> #line 3935
28283,28284d28284
< #line 3934
<     printk("<3>%s %s: kmalloc of response failed\n", tmp___14, tmp___13);
28286c28286
<     rv = 0;
---
>     printk("<3>%s %s: kmalloc of response failed\n", tmp___14, tmp___13);
28287a28288,28289
>     rv = 0;
> #line 3937
28292,28293d28293
< #line 3939
<   sg_init_table(& sg, 1U);
28294a28295,28296
>   sg_init_table(& sg, 1U);
> #line 3941
28296,28297d28297
< #line 3942
<   rv = crypto_hash_digest(& desc, & sg, sg.length, (u8 *)response);
28299c28299
<   if (rv != 0) {
---
>   rv = crypto_hash_digest(& desc, & sg, sg.length, (u8 *)response);
28300a28301,28302
>   if (rv != 0) {
> #line 3945
28302c28304
< #line 3944
---
> #line 3945
28304c28306
< #line 3944
---
> #line 3945
28307,28308d28308
< #line 3945
<     rv = 0;
28309a28310,28311
>     rv = 0;
> #line 3947
28314,28315d28315
< #line 3949
<   rv = drbd_send_cmd2(mdev, P_AUTH_RESPONSE, response, (size_t )resp_size);
28317c28317
<   if (rv == 0) {
---
>   rv = drbd_send_cmd2(mdev, P_AUTH_RESPONSE, response, (size_t )resp_size);
28318a28319,28320
>   if (rv == 0) {
> #line 3952
28323,28324d28324
< #line 3953
<   rv = drbd_recv_header(mdev, & p);
28326c28326
<   if (rv == 0) {
---
>   rv = drbd_recv_header(mdev, & p);
28327a28328,28329
>   if (rv == 0) {
> #line 3956
28332,28333d28333
< #line 3957
<   if ((unsigned int )p.command != 17U) {
28334a28335,28336
>   if ((unsigned int )p.command != 17U) {
> #line 3959
28336c28338
< #line 3958
---
> #line 3959
28338c28340
< #line 3958
---
> #line 3959
28340c28342
< #line 3958
---
> #line 3959
28343,28344d28344
< #line 3960
<     rv = 0;
28345a28346,28347
>     rv = 0;
> #line 3962
28350,28351d28351
< #line 3964
<   if ((unsigned int )p.length != resp_size) {
28352a28353,28354
>   if ((unsigned int )p.length != resp_size) {
> #line 3966
28354c28356
< #line 3965
---
> #line 3966
28356,28357d28357
< #line 3965
<     printk("<3>%s %s: expected AuthResponse payload of wrong size\n", tmp___21, tmp___20);
28359c28359
<     rv = 0;
---
>     printk("<3>%s %s: expected AuthResponse payload of wrong size\n", tmp___21, tmp___20);
28360a28361,28362
>     rv = 0;
> #line 3968
28365c28367
< #line 3970
---
> #line 3971
28367,28368d28368
< #line 3972
<   if ((unsigned int )rv != resp_size) {
28369a28370,28371
>   if ((unsigned int )rv != resp_size) {
> #line 3974
28371c28373
< #line 3973
---
> #line 3974
28373c28375
< #line 3973
---
> #line 3974
28376,28377d28377
< #line 3974
<     rv = 0;
28378a28379,28380
>     rv = 0;
> #line 3976
28383c28385
< #line 3978
---
> #line 3979
28385,28386d28386
< #line 3978
<   right_response = (char *)tmp___24;
28388c28388
<   if ((unsigned long )response == (unsigned long )((char *)0)) {
---
>   right_response = (char *)tmp___24;
28389a28390,28391
>   if ((unsigned long )response == (unsigned long )((char *)0)) {
> #line 3981
28391c28393
< #line 3980
---
> #line 3981
28393,28394d28394
< #line 3980
<     printk("<3>%s %s: kmalloc of right_response failed\n", tmp___26, tmp___25);
28396c28396
<     rv = 0;
---
>     printk("<3>%s %s: kmalloc of right_response failed\n", tmp___26, tmp___25);
28397a28398,28399
>     rv = 0;
> #line 3983
28402c28404
< #line 3985
---
> #line 3986
28404,28405d28405
< #line 3987
<   rv = crypto_hash_digest(& desc, & sg, sg.length, (u8 *)right_response);
28407c28407
<   if (rv != 0) {
---
>   rv = crypto_hash_digest(& desc, & sg, sg.length, (u8 *)right_response);
28408a28409,28410
>   if (rv != 0) {
> #line 3990
28410c28412
< #line 3989
---
> #line 3990
28412c28414
< #line 3989
---
> #line 3990
28415,28416d28416
< #line 3990
<     rv = 0;
28417a28418,28419
>     rv = 0;
> #line 3992
28422c28424
< #line 3994
---
> #line 3995
28424c28426
< #line 3994
---
> #line 3995
28426,28427d28427
< #line 3996
<   if (rv != 0) {
28428a28429,28430
>   if (rv != 0) {
> #line 3998
28430c28432
< #line 3997
---
> #line 3998
28432c28434
< #line 3997
---
> #line 3998
28439,28440d28440
< #line 4001
<   kfree((void const   *)peers_ch);
28442c28442
<   kfree((void const   *)response);
---
>   kfree((void const   *)peers_ch);
28443a28444,28445
>   kfree((void const   *)response);
> #line 4004
28445c28447
< #line 4005
---
> #line 4006
28449c28451
< #line 4009 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4010 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
28469,28470d28470
< #line 4011
<   mdev = thi->mdev;
28471a28472,28473
>   mdev = thi->mdev;
> #line 4013
28473c28475
< #line 4012
---
> #line 4013
28475c28477
< #line 4015
---
> #line 4016
28477c28479
< #line 4015
---
> #line 4016
28479c28481
< #line 4017
---
> #line 4018
28481c28483
< #line 4017
---
> #line 4018
28483c28485
< #line 4017
---
> #line 4018
28486,28487d28487
< #line 4020
<   h = drbd_connect(mdev);
28489c28489
<   if (h == 0) {
---
>   h = drbd_connect(mdev);
28491c28491
<     drbd_disconnect(mdev);
---
>   if (h == 0) {
28492a28493,28494
>     drbd_disconnect(mdev);
> #line 4024
28494,28495d28495
< #line 4023
<     tmp___3->state = 1L;
28496a28497,28498
>     tmp___3->state = 1L;
> #line 4025
28501,28502d28502
< #line 4026
<   if (h == -1) {
28503a28504,28505
>   if (h == -1) {
> #line 4028
28505c28507
< #line 4027
---
> #line 4028
28507,28508d28508
< #line 4027
<     printk("<4>%s %s: Discarding network configuration.\n", tmp___5, tmp___4);
28509a28510,28511
>     printk("<4>%s %s: Discarding network configuration.\n", tmp___5, tmp___4);
> #line 4029
28511c28513
< #line 4028
---
> #line 4029
28513c28515
< #line 4028
---
> #line 4029
28515c28517
< #line 4028
---
> #line 4029
28517c28519
< #line 4028
---
> #line 4029
28522,28523d28523
< #line 4030
<   if (h == 0) {
28524a28525,28526
>   if (h == 0) {
> #line 4032
28530,28531d28531
< #line 4032
<   if (h > 0) {
28532a28533,28534
>   if (h > 0) {
> #line 4034
28534,28535d28535
< #line 4033
<     if (tmp___6 != 0) {
28537c28537
<       drbdd(mdev);
---
>     if (tmp___6 != 0) {
28538a28539,28540
>       drbdd(mdev);
> #line 4036
28546c28548
< #line 4039
---
> #line 4040
28548c28550
< #line 4041
---
> #line 4042
28550c28552
< #line 4041
---
> #line 4042
28552,28553d28553
< #line 4041
<   printk("<6>%s %s: receiver terminated\n", tmp___8, tmp___7);
28554a28555,28556
>   printk("<6>%s %s: receiver terminated\n", tmp___8, tmp___7);
> #line 4043
28558c28560
< #line 4047 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4048 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
28569c28571
< #line 4049
---
> #line 4050
28571c28573
< #line 4051
---
> #line 4052
28573c28575
< #line 4051
---
> #line 4052
28575,28576d28576
< #line 4053
<   if (retcode > 0) {
28577a28578,28579
>   if (retcode > 0) {
> #line 4055
28580,28581d28581
< #line 4056
<     set_bit(11U, (unsigned long volatile   *)(& mdev->flags));
28582a28583,28584
>     set_bit(11U, (unsigned long volatile   *)(& mdev->flags));
> #line 4058
28584c28586
< #line 4057
---
> #line 4058
28586c28588
< #line 4057
---
> #line 4058
28588c28590
< #line 4057
---
> #line 4058
28592c28594
< #line 4060
---
> #line 4061
28594c28596
< #line 4062
---
> #line 4063
28598c28600
< #line 4065 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4066 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
28604c28606
< #line 4067
---
> #line 4068
28606c28608
< #line 4067
---
> #line 4068
28610c28612
< #line 4071 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4072 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
28616c28618
< #line 4074
---
> #line 4075
28618c28620
< #line 4076
---
> #line 4077
28622c28624
< #line 4079 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4080 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
28639,28640d28640
< #line 4081
<   p = (struct p_block_ack *)h;
28641a28642,28643
>   p = (struct p_block_ack *)h;
> #line 4083
28643,28644d28644
< #line 4082
<   sector = (sector_t )tmp;
28645a28646,28647
>   sector = (sector_t )tmp;
> #line 4084
28647c28649
< #line 4083
---
> #line 4084
28649c28651
< #line 4085
---
> #line 4086
28651c28653
< #line 4085
---
> #line 4086
28653c28655
< #line 4085
---
> #line 4086
28655c28657
< #line 4085
---
> #line 4086
28658c28660
<            4085);
---
>            4086);
28662c28664
< #line 4087
---
> #line 4088
28664c28666
< #line 4087
---
> #line 4088
28666,28667d28667
< #line 4089
<   drbd_rs_complete_io(mdev, sector);
28668a28669,28670
>   drbd_rs_complete_io(mdev, sector);
> #line 4091
28670,28672c28672
<                      4090U);
< #line 4092
<   mdev->rs_same_csum = mdev->rs_same_csum + (unsigned long )(blksize >> 12);
---
>                      4091U);
28673a28674,28675
>   mdev->rs_same_csum = mdev->rs_same_csum + (unsigned long )(blksize >> 12);
> #line 4094
28675c28677
< #line 4093
---
> #line 4094
28677c28679
< #line 4093
---
> #line 4094
28679c28681
< #line 4093
---
> #line 4094
28681c28683
< #line 4093
---
> #line 4094
28683c28685
< #line 4093
---
> #line 4094
28685c28687
< #line 4093
---
> #line 4094
28687c28689
<            4093, tmp___4);
---
>            4094, tmp___4);
28691c28693
< #line 4095
---
> #line 4096
28695c28697
< #line 4100 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4101 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
28709c28711
< #line 4103
---
> #line 4104
28711c28713
< #line 4103
---
> #line 4104
28713c28715
< #line 4107
---
> #line 4108
28715c28717
< #line 4107
---
> #line 4108
28718,28719d28719
< #line 4108
<   if ((unsigned long )req == (unsigned long )id) {
28721c28721
<     if (req->sector != sector) {
---
>   if ((unsigned long )req == (unsigned long )id) {
28722a28723,28724
>     if (req->sector != sector) {
> #line 4111
28724c28726
< #line 4110
---
> #line 4111
28726c28728
< #line 4110
---
> #line 4111
28729c28731
< #line 4114
---
> #line 4115
28734c28736
< #line 4116
---
> #line 4117
28739c28741
< #line 4107
---
> #line 4108
28742c28744
< #line 4107
---
> #line 4108
28744c28746
< #line 4107
---
> #line 4108
28746c28748
< #line 4107
---
> #line 4108
28748c28750
< #line 4107
---
> #line 4108
28750c28752
< #line 4107
---
> #line 4108
28752,28753d28753
< #line 4107
<       if (1 != 0) {
28754a28755,28756
>       if (1 != 0) {
> #line 4109
28757c28759
< #line 4110
---
> #line 4111
28761c28763
< #line 4110
---
> #line 4111
28768c28770
< #line 4119
---
> #line 4120
28770c28772
< #line 4119
---
> #line 4120
28772c28774
< #line 4119
---
> #line 4120
28775c28777
< #line 4121
---
> #line 4122
28779c28781
< #line 4127 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4128 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
28791,28792d28792
< #line 4134
<   _spin_lock_irq(& mdev->req_lock);
28794c28794
<   req = (*validator)(mdev, id, sector);
---
>   _spin_lock_irq(& mdev->req_lock);
28795a28796,28797
>   req = (*validator)(mdev, id, sector);
> #line 4137
28798,28799d28799
< #line 4136
<   if (tmp___1 != 0L) {
28801c28801
<     _spin_unlock_irq(& mdev->req_lock);
---
>   if (tmp___1 != 0L) {
28802a28803,28804
>     _spin_unlock_irq(& mdev->req_lock);
> #line 4139
28804c28806
< #line 4138
---
> #line 4139
28806,28807d28807
< #line 4138
<     printk("<3>%s %s: %s: got a corrupt block_id/sector pair\n", tmp___0, tmp, func);
28808a28809,28810
>     printk("<3>%s %s: %s: got a corrupt block_id/sector pair\n", tmp___0, tmp, func);
> #line 4140
28813,28814d28814
< #line 4141
<   __req_mod(req, what, & m);
28815a28816,28817
>   __req_mod(req, what, & m);
> #line 4143
28817,28818d28818
< #line 4144
<   if ((unsigned long )m.bio != (unsigned long )((struct bio *)0)) {
28819a28820,28821
>   if ((unsigned long )m.bio != (unsigned long )((struct bio *)0)) {
> #line 4146
28824c28826
< #line 4146
---
> #line 4147
28828c28830
< #line 4149 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4150 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
28856,28857d28857
< #line 4151
<   p = (struct p_block_ack *)h;
28858a28859,28860
>   p = (struct p_block_ack *)h;
> #line 4153
28860,28861d28861
< #line 4152
<   sector = (sector_t )tmp;
28862a28863,28864
>   sector = (sector_t )tmp;
> #line 4154
28864c28866
< #line 4153
---
> #line 4154
28866c28868
< #line 4156
---
> #line 4157
28868c28870
< #line 4156
---
> #line 4157
28870,28871d28871
< #line 4158
<   if (p->block_id == 0xffffffffffffffffULL) {
28873,28874c28873
<     __drbd_set_in_sync(mdev, sector, blksize, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<                        4159U);
---
>   if (p->block_id == 0xffffffffffffffffULL) {
28875a28875,28877
>     __drbd_set_in_sync(mdev, sector, blksize, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>                        4160U);
> #line 4161
28877c28879
< #line 4160
---
> #line 4161
28879c28881
< #line 4160
---
> #line 4161
28881c28883
< #line 4160
---
> #line 4161
28883c28885
< #line 4160
---
> #line 4161
28885c28887
< #line 4160
---
> #line 4161
28887c28889
< #line 4160
---
> #line 4161
28889c28891
<              "got_BlockAck", 4160, tmp___2);
---
>              "got_BlockAck", 4161, tmp___2);
28893c28895
< #line 4161
---
> #line 4162
28898c28900
< #line 4163
---
> #line 4164
28900c28902
< #line 4163
---
> #line 4164
28903c28905
< #line 4165
---
> #line 4166
28905c28907
< #line 4165
---
> #line 4166
28907c28909
< #line 4165
---
> #line 4166
28909c28911
< #line 4165
---
> #line 4166
28912c28914
<            4165);
---
>            4166);
28916,28917d28917
< #line 4166
<   what = write_acked_by_peer_and_sis;
28918a28919,28920
>   what = write_acked_by_peer_and_sis;
> #line 4168
28921c28923
< #line 4169
---
> #line 4170
28923c28925
< #line 4169
---
> #line 4170
28925c28927
< #line 4169
---
> #line 4170
28927c28929
< #line 4169
---
> #line 4170
28930c28932
<            4169);
---
>            4170);
28934,28935d28935
< #line 4170
<   what = write_acked_by_peer;
28936a28937,28938
>   what = write_acked_by_peer;
> #line 4172
28939c28941
< #line 4173
---
> #line 4174
28941c28943
< #line 4173
---
> #line 4174
28943c28945
< #line 4173
---
> #line 4174
28945c28947
< #line 4173
---
> #line 4174
28948c28950
<            4173);
---
>            4174);
28952,28953d28953
< #line 4174
<   what = recv_acked_by_peer;
28954a28955,28956
>   what = recv_acked_by_peer;
> #line 4176
28957c28959
< #line 4177
---
> #line 4178
28959c28961
< #line 4177
---
> #line 4178
28961c28963
< #line 4177
---
> #line 4178
28963c28965
< #line 4177
---
> #line 4178
28966c28968
<            4177);
---
>            4178);
28970,28971d28971
< #line 4178
<   what = conflict_discarded_by_peer;
28972a28973,28974
>   what = conflict_discarded_by_peer;
> #line 4180
28975c28977
< #line 4181
---
> #line 4182
28977c28979
< #line 4181
---
> #line 4182
28979,28981d28980
< #line 4181
<   printk("<3>%s %s: ASSERT( 0 ) in %s:%d\n", tmp___16, tmp___15, (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<          4181);
28982a28982,28984
>   printk("<3>%s %s: ASSERT( 0 ) in %s:%d\n", tmp___16, tmp___15, (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>          4182);
> #line 4183
28986c28988
< #line 4185
---
> #line 4186
28989c28991
< #line 4185
---
> #line 4186
28993c28995
< #line 4189 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4190 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
29012,29013d29013
< #line 4191
<   p = (struct p_block_ack *)h;
29014a29015,29016
>   p = (struct p_block_ack *)h;
> #line 4193
29016c29018
< #line 4192
---
> #line 4193
29018c29020
< #line 4194
---
> #line 4195
29020,29021d29021
< #line 4194
<   if (tmp___2 != 0) {
29022a29023,29024
>   if (tmp___2 != 0) {
> #line 4196
29024c29026
< #line 4195
---
> #line 4196
29026c29028
< #line 4195
---
> #line 4196
29031c29033
< #line 4197
---
> #line 4198
29033c29035
< #line 4197
---
> #line 4198
29035,29036d29036
< #line 4199
<   if (p->block_id == 0xffffffffffffffffULL) {
29037a29038,29039
>   if (p->block_id == 0xffffffffffffffffULL) {
> #line 4201
29039,29040d29040
< #line 4200
<     size = (int )tmp___4;
29041a29042,29043
>     size = (int )tmp___4;
> #line 4202
29043c29045
< #line 4201
---
> #line 4202
29045c29047
< #line 4201
---
> #line 4202
29047c29049
< #line 4201
---
> #line 4202
29049c29051
< #line 4201
---
> #line 4202
29051c29053
< #line 4201
---
> #line 4202
29053c29055
< #line 4201
---
> #line 4202
29055c29057
<              "got_NegAck", 4201, tmp___5);
---
>              "got_NegAck", 4202, tmp___5);
29059,29060d29060
< #line 4202
<     drbd_rs_failed_io(mdev, sector, size);
29061a29062,29063
>     drbd_rs_failed_io(mdev, sector, size);
> #line 4204
29066c29068
< #line 4205
---
> #line 4206
29069c29071
< #line 4205
---
> #line 4206
29073c29075
< #line 4209 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4210 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
29086,29087d29087
< #line 4211
<   p = (struct p_block_ack *)h;
29088a29089,29090
>   p = (struct p_block_ack *)h;
> #line 4213
29090c29092
< #line 4212
---
> #line 4213
29092c29094
< #line 4214
---
> #line 4215
29094,29095d29095
< #line 4214
<   update_peer_seq(mdev, tmp___0);
29096a29097,29098
>   update_peer_seq(mdev, tmp___0);
> #line 4216
29098c29100
< #line 4215
---
> #line 4216
29100c29102
< #line 4215
---
> #line 4216
29102c29104
< #line 4215
---
> #line 4216
29105c29107
< #line 4218
---
> #line 4219
29108c29110
< #line 4218
---
> #line 4219
29112c29114
< #line 4222 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4223 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
29130c29132
< #line 4226
---
> #line 4227
29132c29134
< #line 4228
---
> #line 4229
29134,29135d29135
< #line 4228
<   sector = (sector_t )tmp;
29136a29137,29138
>   sector = (sector_t )tmp;
> #line 4230
29138,29139d29139
< #line 4229
<   size = (int )tmp___0;
29140a29141,29142
>   size = (int )tmp___0;
> #line 4231
29142c29144
< #line 4230
---
> #line 4231
29144c29146
< #line 4230
---
> #line 4231
29146c29148
< #line 4230
---
> #line 4231
29149c29151
<            4230);
---
>            4231);
29153c29155
< #line 4232
---
> #line 4233
29155c29157
< #line 4232
---
> #line 4233
29157c29159
< #line 4234
---
> #line 4235
29159c29161
< #line 4234
---
> #line 4235
29161c29163
< #line 4234
---
> #line 4235
29163c29165
< #line 4234
---
> #line 4235
29165c29167
< #line 4234
---
> #line 4235
29167c29169
< #line 4234
---
> #line 4235
29169c29171
< #line 4234
---
> #line 4235
29171c29173
<            4234, tmp___4);
---
>            4235, tmp___4);
29175c29177
< #line 4236
---
> #line 4237
29177,29178d29178
< #line 4236
<   if (tmp___8 != 0) {
29180c29180
<     drbd_rs_complete_io(mdev, sector);
---
>   if (tmp___8 != 0) {
29182c29182
<     drbd_rs_failed_io(mdev, sector, size);
---
>     drbd_rs_complete_io(mdev, sector);
29183a29184,29185
>     drbd_rs_failed_io(mdev, sector, size);
> #line 4240
29188c29190
< #line 4242
---
> #line 4243
29192c29194
< #line 4245 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4246 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
29199c29201
< #line 4247
---
> #line 4248
29201c29203
< #line 4249
---
> #line 4250
29203c29205
< #line 4249
---
> #line 4250
29205c29207
< #line 4251
---
> #line 4252
29209c29211
< #line 4254 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4255 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
29229c29231
< #line 4256
---
> #line 4257
29231c29233
< #line 4261
---
> #line 4262
29233,29234d29234
< #line 4261
<   sector = (sector_t )tmp;
29235a29236,29237
>   sector = (sector_t )tmp;
> #line 4263
29237c29239
< #line 4262
---
> #line 4263
29239c29241
< #line 4264
---
> #line 4265
29241c29243
< #line 4264
---
> #line 4265
29243c29245
< #line 4266
---
> #line 4267
29245,29246d29246
< #line 4266
<   if (tmp___2 == 4712ULL) {
29247a29248,29249
>   if (tmp___2 == 4712ULL) {
> #line 4268
29250c29252
< #line 4269
---
> #line 4270
29253,29254d29254
< #line 4271
<   drbd_rs_complete_io(mdev, sector);
29255a29256,29257
>   drbd_rs_complete_io(mdev, sector);
> #line 4273
29257c29259
< #line 4272
---
> #line 4273
29259c29261
< #line 4272
---
> #line 4273
29261c29263
< #line 4272
---
> #line 4273
29263c29265
< #line 4272
---
> #line 4273
29265c29267
< #line 4272
---
> #line 4273
29267c29269
< #line 4272
---
> #line 4273
29269c29271
<            4272, tmp___3);
---
>            4273, tmp___3);
29273c29275
< #line 4274
---
> #line 4275
29275,29276d29276
< #line 4274
<   if (mdev->ov_left == 0UL) {
29277a29278,29279
>   if (mdev->ov_left == 0UL) {
> #line 4276
29279,29280d29280
< #line 4275
<     w = (struct drbd_work *)tmp___7;
29282c29282
<     if ((unsigned long )w != (unsigned long )((struct drbd_work *)0)) {
---
>     w = (struct drbd_work *)tmp___7;
29284c29284
<       w->cb = & w_ov_finished;
---
>     if ((unsigned long )w != (unsigned long )((struct drbd_work *)0)) {
29285a29286,29287
>       w->cb = & w_ov_finished;
> #line 4279
29288c29290
< #line 4280
---
> #line 4281
29290c29292
< #line 4280
---
> #line 4281
29292,29293d29293
< #line 4280
<       printk("<3>%s %s: kmalloc(w) failed.", tmp___9, tmp___8);
29295c29295
<       ov_oos_print(mdev);
---
>       printk("<3>%s %s: kmalloc(w) failed.", tmp___9, tmp___8);
29296a29297,29298
>       ov_oos_print(mdev);
> #line 4283
29302c29304
< #line 4285
---
> #line 4286
29306c29308
< #line 4293 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4294 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
29312c29314
< #line 4295
---
> #line 4296
29314c29316
< #line 4295
---
> #line 4296
29316c29318
< #line 4295
---
> #line 4296
29318c29320
< #line 4295
---
> #line 4296
29320c29322
< #line 4295
---
> #line 4296
29322c29324
< #line 4295
---
> #line 4296
29324c29326
< #line 4295
---
> #line 4296
29326c29328
< #line 4295
---
> #line 4296
29328c29330
< #line 4295
---
> #line 4296
29330c29332
< #line 4295
---
> #line 4296
29332c29334
< #line 4295
---
> #line 4296
29334c29336
< #line 4295
---
> #line 4296
29336c29338
< #line 4295
---
> #line 4296
29338c29340
< #line 4295
---
> #line 4296
29340c29342
< #line 4295
---
> #line 4296
29342c29344
< #line 4295
---
> #line 4296
29344c29346
< #line 4295
---
> #line 4296
29346c29348
< #line 4295
---
> #line 4296
29348c29350
< #line 4295
---
> #line 4296
29350c29352
< #line 4295
---
> #line 4296
29352c29354
< #line 4295
---
> #line 4296
29354c29356
< #line 4295
---
> #line 4296
29356c29358
< #line 4295
---
> #line 4296
29358c29360
< #line 4295
---
> #line 4296
29360c29362
< #line 4295
---
> #line 4296
29362c29364
< #line 4295
---
> #line 4296
29364c29366
< #line 4295
---
> #line 4296
29366c29368
< #line 4295
---
> #line 4296
29368c29370
< #line 4295
---
> #line 4296
29370c29372
< #line 4295
---
> #line 4296
29372c29374
< #line 4295
---
> #line 4296
29374c29376
< #line 4295
---
> #line 4296
29376c29378
< #line 4295
---
> #line 4296
29378c29380
< #line 4295
---
> #line 4296
29380c29382
< #line 4295
---
> #line 4296
29382c29384
< #line 4295
---
> #line 4296
29384c29386
< #line 4295
---
> #line 4296
29386c29388
< #line 4295
---
> #line 4296
29388c29390
< #line 4295
---
> #line 4296
29390c29392
< #line 4295
---
> #line 4296
29392c29394
< #line 4295
---
> #line 4296
29394c29396
< #line 4295
---
> #line 4296
29396c29398
< #line 4295
---
> #line 4296
29398c29400
< #line 4295
---
> #line 4296
29400c29402
< #line 4295
---
> #line 4296
29402c29404
< #line 4295
---
> #line 4296
29404c29406
< #line 4295
---
> #line 4296
29406c29408
< #line 4295
---
> #line 4296
29408c29410
< #line 4295
---
> #line 4296
29410c29412
< #line 4295
---
> #line 4296
29412c29414
< #line 4295
---
> #line 4296
29414c29416
< #line 4295
---
> #line 4296
29416c29418
< #line 4295
---
> #line 4296
29418c29420
< #line 4295
---
> #line 4296
29420c29422
< #line 4295
---
> #line 4296
29422c29424
< #line 4295
---
> #line 4296
29424c29426
< #line 4295
---
> #line 4296
29426c29428
< #line 4295
---
> #line 4296
29428c29430
< #line 4295
---
> #line 4296
29430c29432
< #line 4295
---
> #line 4296
29432c29434
< #line 4295
---
> #line 4296
29434c29436
< #line 4295
---
> #line 4296
29436c29438
< #line 4295
---
> #line 4296
29438c29440
< #line 4295
---
> #line 4296
29440c29442
< #line 4295
---
> #line 4296
29442c29444
< #line 4295
---
> #line 4296
29444c29446
< #line 4295
---
> #line 4296
29446c29448
< #line 4295
---
> #line 4296
29448c29450
< #line 4295
---
> #line 4296
29450c29452
< #line 4295
---
> #line 4296
29452c29454
< #line 4295
---
> #line 4296
29454c29456
< #line 4295
---
> #line 4296
29456c29458
< #line 4295
---
> #line 4296
29458c29460
< #line 4295
---
> #line 4296
29460c29462
< #line 4295
---
> #line 4296
29462c29464
< #line 4295
---
> #line 4296
29464c29466
< #line 4314
---
> #line 4315
29467c29469
< #line 4315
---
> #line 4316
29472c29474
< #line 4316
---
> #line 4317
29476c29478
< #line 4319 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4320 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
29539,29540d29540
< #line 4321
<   mdev = thi->mdev;
29542c29542
<   h = & mdev->meta.rbuf.header;
---
>   mdev = thi->mdev;
29543a29544,29545
>   h = & mdev->meta.rbuf.header;
> #line 4324
29545,29546d29546
< #line 4326
<   buf = (void *)h;
29548c29548
<   received = 0;
---
>   buf = (void *)h;
29549a29550,29551
>   received = 0;
> #line 4329
29551c29553
< #line 4331
---
> #line 4332
29553c29555
< #line 4331
---
> #line 4332
29555c29557
< #line 4331
---
> #line 4332
29557c29559
< #line 4333
---
> #line 4334
29559,29560d29560
< #line 4333
<   tmp___1->policy = 2U;
29561a29562,29563
>   tmp___1->policy = 2U;
> #line 4335
29563c29565
< #line 4334
---
> #line 4335
29565c29567
< #line 4336
---
> #line 4337
29568,29569d29569
< #line 4337
<   drbd_thread_current_set_cpu(mdev);
29570a29571,29572
>   drbd_thread_current_set_cpu(mdev);
> #line 4339
29572,29573d29573
< #line 4338
<   if (tmp___6 != 0) {
29574a29575,29576
>   if (tmp___6 != 0) {
> #line 4340
29576c29578
< #line 4339
---
> #line 4340
29578c29580
< #line 4339
---
> #line 4340
29580c29582
< #line 4339
---
> #line 4340
29582c29584
< #line 4339
---
> #line 4340
29584c29586
< #line 4339
---
> #line 4340
29587c29589
<              4339);
---
>              4340);
29591c29593
< #line 4339
---
> #line 4340
29593c29595
< #line 4339
---
> #line 4340
29598c29600
< #line 4340
---
> #line 4341
29603c29605
< #line 4346
---
> #line 4347
29605c29607
< #line 4346
---
> #line 4347
29607c29609
< #line 4346
---
> #line 4347
29609c29611
< #line 4348
---
> #line 4349
29618,29619d29619
< #line 4350
<   clear_bit(1, (unsigned long volatile   *)(& mdev->flags));
29620a29621,29622
>   clear_bit(1, (unsigned long volatile   *)(& mdev->flags));
> #line 4352
29622,29623d29623
< #line 4351
<   flush_signals(tmp___8);
29624a29625,29626
>   flush_signals(tmp___8);
> #line 4353
29626,29627d29627
< #line 4352
<   if (tmp___11 == 0) {
29628a29629,29630
>   if (tmp___11 == 0) {
> #line 4354
29630c29632
< #line 4353
---
> #line 4354
29632,29633d29633
< #line 4353
<     printk("<3>%s %s: process_done_ee() = NOT_OK\n", tmp___10, tmp___9);
29634a29635,29636
>     printk("<3>%s %s: process_done_ee() = NOT_OK\n", tmp___10, tmp___9);
> #line 4355
29639,29640d29640
< #line 4357
<   set_bit(1U, (unsigned long volatile   *)(& mdev->flags));
29642c29642
<   _spin_lock_irq(& mdev->req_lock);
---
>   set_bit(1U, (unsigned long volatile   *)(& mdev->flags));
29644c29644
<   empty = list_empty((struct list_head  const  *)(& mdev->done_ee));
---
>   _spin_lock_irq(& mdev->req_lock);
29645a29646,29647
>   empty = list_empty((struct list_head  const  *)(& mdev->done_ee));
> #line 4361
29647,29648d29648
< #line 4364
<   if (empty != 0) {
29649a29650,29651
>   if (empty != 0) {
> #line 4366
29654c29656
< #line 4366
---
> #line 4367
29657,29658d29658
< #line 4368
<   if ((unsigned int )*((unsigned char *)mdev->net_conf + 528UL) == 0U) {
29659a29660,29661
>   if ((unsigned int )*((unsigned char *)mdev->net_conf + 528UL) == 0U) {
> #line 4370
29664c29666
< #line 4372
---
> #line 4373
29666c29668
< #line 4372
---
> #line 4373
29668,29669d29669
< #line 4372
<   if (tmp___13 != 0) {
29670a29671,29672
>   if (tmp___13 != 0) {
> #line 4374
29675c29677
< #line 4375
---
> #line 4376
29678c29680
< #line 4377
---
> #line 4378
29680c29682
< #line 4379
---
> #line 4380
29682c29684
< #line 4379
---
> #line 4380
29684c29686
< #line 4391
---
> #line 4392
29686,29687d29687
< #line 4391
<   if (tmp___21 != 0L) {
29689c29689
<     received = received + rv;
---
>   if (tmp___21 != 0L) {
29690a29691,29692
>     received = received + rv;
> #line 4394
29693,29694d29694
< #line 4394
<   if (rv == 0) {
29695a29696,29697
>   if (rv == 0) {
> #line 4396
29697c29699
< #line 4395
---
> #line 4396
29699,29700d29700
< #line 4395
<     printk("<3>%s %s: meta connection shut down by peer.\n", tmp___16, tmp___15);
29701a29702,29703
>     printk("<3>%s %s: meta connection shut down by peer.\n", tmp___16, tmp___15);
> #line 4397
29704,29705d29705
< #line 4397
<   if (rv == -11) {
29706a29707,29708
>   if (rv == -11) {
> #line 4399
29708c29710
< #line 4400
---
> #line 4401
29710c29712
< #line 4400
---
> #line 4401
29712,29713d29713
< #line 4400
<       printk("<3>%s %s: PingAck did not arrive in time.\n", tmp___18, tmp___17);
29714a29715,29716
>       printk("<3>%s %s: PingAck did not arrive in time.\n", tmp___18, tmp___17);
> #line 4402
29719,29720d29720
< #line 4403
<     set_bit(2U, (unsigned long volatile   *)(& mdev->flags));
29721a29722,29723
>     set_bit(2U, (unsigned long volatile   *)(& mdev->flags));
> #line 4405
29724,29725d29725
< #line 4405
<   if (rv == -4) {
29726a29727,29728
>   if (rv == -4) {
> #line 4407
29729c29731
< #line 4408
---
> #line 4409
29731c29733
< #line 4408
---
> #line 4409
29733,29734d29734
< #line 4408
<     printk("<3>%s %s: sock_recvmsg returned %d\n", tmp___20, tmp___19, rv);
29735a29736,29737
>     printk("<3>%s %s: sock_recvmsg returned %d\n", tmp___20, tmp___19, rv);
> #line 4410
29738,29739d29739
< #line 4412
<   if (received == expect && (unsigned long )cmd == (unsigned long )((struct asender_cmd *)0)) {
29740a29741,29742
>   if (received == expect && (unsigned long )cmd == (unsigned long )((struct asender_cmd *)0)) {
> #line 4414
29742,29743d29743
< #line 4413
<     if (tmp___25 != 0L) {
29744a29745,29746
>     if (tmp___25 != 0L) {
> #line 4415
29746c29748
< #line 4414
---
> #line 4415
29748c29750
< #line 4414
---
> #line 4415
29750c29752
< #line 4414
---
> #line 4415
29753c29755
< #line 4417
---
> #line 4418
29758c29760
< #line 4419
---
> #line 4420
29760,29761d29761
< #line 4419
<     cmd = get_asender_cmd((int )tmp___26);
29762a29763,29764
>     cmd = get_asender_cmd((int )tmp___26);
> #line 4421
29764,29765d29765
< #line 4420
<     len = (int )tmp___27;
29766a29767,29768
>     len = (int )tmp___27;
> #line 4422
29769,29770d29770
< #line 4421
<     if (tmp___31 != 0L) {
29771a29772,29773
>     if (tmp___31 != 0L) {
> #line 4423
29773c29775
< #line 4422
---
> #line 4423
29775c29777
< #line 4422
---
> #line 4423
29777c29779
< #line 4422
---
> #line 4423
29780c29782
< #line 4425
---
> #line 4426
29785,29786d29786
< #line 4427
<     expect = (int )cmd->pkt_size;
29787a29788,29789
>     expect = (int )cmd->pkt_size;
> #line 4429
29789c29791
< #line 4428
---
> #line 4429
29791c29793
< #line 4428
---
> #line 4429
29793c29795
< #line 4428
---
> #line 4429
29795c29797
< #line 4428
---
> #line 4429
29798c29800
<              4428);
---
>              4429);
29802,29803d29803
< #line 4428
<     if (_b___0 != 0) {
29804a29805,29806
>     if (_b___0 != 0) {
> #line 4430
29812,29813d29813
< #line 4431
<   if (received == expect) {
29814a29815,29816
>   if (received == expect) {
> #line 4433
29816c29818
< #line 4432
---
> #line 4433
29818c29820
< #line 4432
---
> #line 4433
29820c29822
< #line 4432
---
> #line 4433
29822c29824
<              4432);
---
>              4433);
29826c29828
< #line 4433
---
> #line 4434
29828,29829d29829
< #line 4433
<     if (tmp___36 == 0) {
29830a29831,29832
>     if (tmp___36 == 0) {
> #line 4435
29835,29836d29836
< #line 4436
<     buf = (void *)h;
29838c29838
<     received = 0;
---
>     buf = (void *)h;
29840c29840
<     expect = 8;
---
>     received = 0;
29841a29842,29843
>     expect = 8;
> #line 4440
29847c29849
< #line 4336
---
> #line 4337
29849,29850d29850
< #line 4336
<   if ((unsigned int )tmp___37 == 1U) {
29851a29852,29853
>   if ((unsigned int )tmp___37 == 1U) {
> #line 4338
29857c29859
< #line 4443
---
> #line 4444
29860c29862
< #line 4445
---
> #line 4446
29862c29864
< #line 4445
---
> #line 4446
29864c29866
< #line 4445
---
> #line 4446
29866c29868
< #line 4445
---
> #line 4446
29868c29870
< #line 4445
---
> #line 4446
29873c29875
< #line 4447
---
> #line 4448
29876c29878
< #line 4449
---
> #line 4450
29878c29880
< #line 4449
---
> #line 4450
29880c29882
< #line 4449
---
> #line 4450
29882c29884
< #line 4449
---
> #line 4450
29884c29886
< #line 4449
---
> #line 4450
29889c29891
< #line 4451
---
> #line 4452
29891c29893
< #line 4453
---
> #line 4454
29893c29895
< #line 4453
---
> #line 4454
29895c29897
< #line 4453
---
> #line 4454
29897c29899
< #line 4453
---
> #line 4454
29900c29902
<            4453);
---
>            4454);
29904c29906
< #line 4454
---
> #line 4455
29906c29908
< #line 4454
---
> #line 4455
29908c29910
< #line 4454
---
> #line 4455
29910c29912
< #line 4456
---
> #line 4457
29914c29916
< #line 4496 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4497 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
29921c29923
< #line 4508
---
> #line 4509
29923c29925
< #line 4517
---
> #line 4518
29925c29927
< #line 4519
---
> #line 4520
29928c29930
< #line 4522
---
> #line 4523
29930c29932
< #line 4522
---
> #line 4523
29933c29935
< #line 4524
---
> #line 4525
29938c29940
< #line 4519
---
> #line 4520
29940,29941d29941
< #line 4519
<   if (tmp___0 != 0) {
29942a29943,29944
>   if (tmp___0 != 0) {
> #line 4521
29949c29951
< #line 4533
---
> #line 4534
29951c29953
< #line 4536
---
> #line 4537
29955c29957
< #line 4540 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4541 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
29961c29963
< #line 4545
---
> #line 4546
29963,29964d29964
< #line 4547
<   mutex_lock(ldv_func_arg1);
29965a29966,29967
>   mutex_lock(ldv_func_arg1);
> #line 4549
29969c29971
< #line 4550 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4551 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
29975c29977
< #line 4555
---
> #line 4556
29977,29978d29978
< #line 4557
<   mutex_unlock(ldv_func_arg1);
29979a29980,29981
>   mutex_unlock(ldv_func_arg1);
> #line 4559
29983c29985
< #line 4560 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4561 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
29989c29991
< #line 4565
---
> #line 4566
29991,29992d29992
< #line 4567
<   mutex_unlock(ldv_func_arg1);
29993a29994,29995
>   mutex_unlock(ldv_func_arg1);
> #line 4569
29997c29999
< #line 4570 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4571 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
30003c30005
< #line 4575
---
> #line 4576
30005,30006d30006
< #line 4577
<   mutex_lock(ldv_func_arg1);
30007a30008,30009
>   mutex_lock(ldv_func_arg1);
> #line 4579
30011c30013
< #line 4580 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4581 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
30017c30019
< #line 4585
---
> #line 4586
30019,30020d30020
< #line 4587
<   mutex_unlock(ldv_func_arg1);
30021a30022,30023
>   mutex_unlock(ldv_func_arg1);
> #line 4589
30025c30027
< #line 4590 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4591 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
30033c30035
< #line 4595
---
> #line 4596
30035c30037
< #line 4595
---
> #line 4596
30037c30039
< #line 4597
---
> #line 4598
30039c30041
< #line 4597
---
> #line 4598
30041c30043
< #line 4599
---
> #line 4600
30045c30047
< #line 4602 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4603 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
30051c30053
< #line 4607
---
> #line 4608
30053,30054d30054
< #line 4609
<   mutex_unlock(ldv_func_arg1);
30055a30056,30057
>   mutex_unlock(ldv_func_arg1);
> #line 4611
30059c30061
< #line 4612 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4613 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
30065c30067
< #line 4617
---
> #line 4618
30067,30068d30068
< #line 4619
<   mutex_unlock(ldv_func_arg1);
30069a30070,30071
>   mutex_unlock(ldv_func_arg1);
> #line 4621
