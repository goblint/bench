6727c6727
< #line 3206
---
> #line 3207
6733c6733
< #line 3472 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3473 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
6735c6735
< #line 4100 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4101 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
6737c6737
< #line 4263 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4264 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
20739,20744c20739,20744
<   char const   *tmp___4 ;
<   char const   *tmp___5 ;
<   enum finish_epoch tmp___6 ;
<   void *tmp___7 ;
<   char const   *tmp___8 ;
<   char const   *tmp___9 ;
---
>   enum finish_epoch tmp___4 ;
>   void *tmp___5 ;
>   char const   *tmp___6 ;
>   char const   *tmp___7 ;
>   int tmp___8 ;
>   enum finish_epoch tmp___9 ;
20746,20747d20745
<   enum finish_epoch tmp___11 ;
<   int tmp___12 ;
20829,20840c20827
<   if (rv != 0) {
< #line 1212
<     tmp___4 = dev_name((struct device  const  *)(& (mdev->vdisk)->part0.__dev));
< #line 1212
<     tmp___5 = dev_driver_string((struct device  const  *)(& (mdev->vdisk)->part0.__dev));
< #line 1212
<     printk("<3>%s %s: ASSERT( rv == FE_STILL_LIVE ) in %s:%d\n", tmp___5, tmp___4,
<            (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
<            1212);
<   } else {
< 
<   }
---
>   if (rv == 0) {
20842c20829
<   set_bit(0U, (unsigned long volatile   *)(& (mdev->current_epoch)->flags));
---
>     set_bit(0U, (unsigned long volatile   *)(& (mdev->current_epoch)->flags));
20844c20831
<   drbd_wait_ee_list_empty(mdev, & mdev->active_ee);
---
>     drbd_wait_ee_list_empty(mdev, & mdev->active_ee);
20846c20833
<   tmp___6 = drbd_flush_after_epoch(mdev, mdev->current_epoch);
---
>     tmp___4 = drbd_flush_after_epoch(mdev, mdev->current_epoch);
20848,20850c20835,20838
<   rv = (int )tmp___6;
< #line 1216
<   if (rv == 2) {
---
>     rv = (int )tmp___4;
>   } else {
> 
>   }
20851a20840,20841
>   if (rv == 2) {
> #line 1218
20856c20846
< #line 1222
---
> #line 1223
20860,20863d20849
< #line 1227
<   tmp___7 = kmalloc(40UL, 16U);
< #line 1227
<   epoch = (struct drbd_epoch *)tmp___7;
20865,20869c20851,20853
<   if ((unsigned long )epoch == (unsigned long )((struct drbd_epoch *)0)) {
< #line 1229
<     tmp___8 = dev_name((struct device  const  *)(& (mdev->vdisk)->part0.__dev));
< #line 1229
<     tmp___9 = dev_driver_string((struct device  const  *)(& (mdev->vdisk)->part0.__dev));
---
>   tmp___5 = kmalloc(40UL, 16U);
> #line 1228
>   epoch = (struct drbd_epoch *)tmp___5;
20871c20855
<     printk("<4>%s %s: Allocation of an epoch failed, slowing down\n", tmp___9, tmp___8);
---
>   if ((unsigned long )epoch == (unsigned long )((struct drbd_epoch *)0)) {
20873c20857,20859
<     tmp___10 = test_and_set_bit(0, (unsigned long volatile   *)(& epoch->flags));
---
>     tmp___6 = dev_name((struct device  const  *)(& (mdev->vdisk)->part0.__dev));
> #line 1230
>     tmp___7 = dev_driver_string((struct device  const  *)(& (mdev->vdisk)->part0.__dev));
20875c20861
<     issue_flush = tmp___10 == 0;
---
>     printk("<4>%s %s: Allocation of an epoch failed, slowing down\n", tmp___7, tmp___6);
20877c20863,20865
<     drbd_wait_ee_list_empty(mdev, & mdev->active_ee);
---
>     tmp___8 = test_and_set_bit(0, (unsigned long volatile   *)(& epoch->flags));
> #line 1231
>     issue_flush = tmp___8 == 0;
20879,20881c20867
<     if (issue_flush != 0) {
< #line 1233
<       tmp___11 = drbd_flush_after_epoch(mdev, mdev->current_epoch);
---
>     drbd_wait_ee_list_empty(mdev, & mdev->active_ee);
20883c20869
<       rv = (int )tmp___11;
---
>     if (issue_flush != 0) {
20885c20871,20873
<       if (rv == 2) {
---
>       tmp___9 = drbd_flush_after_epoch(mdev, mdev->current_epoch);
> #line 1234
>       rv = (int )tmp___9;
20886a20875,20876
>       if (rv == 2) {
> #line 1236
20894c20884
< #line 1238
---
> #line 1239
20896c20886
< #line 1240
---
> #line 1241
20901,20902d20890
< #line 1243
<   epoch->flags = 0UL;
20904c20892
<   atomic_set(& epoch->epoch_size, 0);
---
>   epoch->flags = 0UL;
20905a20894,20895
>   atomic_set(& epoch->epoch_size, 0);
> #line 1246
20907,20908d20896
< #line 1247
<   spin_lock(& mdev->epoch_lock);
20910,20912c20898
<   tmp___12 = atomic_read((atomic_t const   *)(& (mdev->current_epoch)->epoch_size));
< #line 1248
<   if (tmp___12 != 0) {
---
>   spin_lock(& mdev->epoch_lock);
20914c20900,20902
<     list_add(& epoch->list, & (mdev->current_epoch)->list);
---
>   tmp___10 = atomic_read((atomic_t const   *)(& (mdev->current_epoch)->epoch_size));
> #line 1249
>   if (tmp___10 != 0) {
20916c20904
<     mdev->current_epoch = epoch;
---
>     list_add(& epoch->list, & (mdev->current_epoch)->list);
20917a20906,20907
>     mdev->current_epoch = epoch;
> #line 1252
20920c20910
< #line 1254
---
> #line 1255
20923c20913
< #line 1256
---
> #line 1257
20925c20915
< #line 1258
---
> #line 1259
20929c20919
< #line 1264 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 1265 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
20966,20967d20955
< #line 1271
<   dig_in = mdev->int_dig_in;
20968a20957,20958
>   dig_in = mdev->int_dig_in;
> #line 1273
20970c20960
< #line 1274
---
> #line 1275
20972c20962
< #line 1274
---
> #line 1275
20974c20964
< #line 1274
---
> #line 1275
20977c20967
< #line 1274
---
> #line 1275
20980,20981d20969
< #line 1277
<   if (dgs != 0) {
20983c20971
<     rr = drbd_recv(mdev, dig_in, (size_t )dgs);
---
>   if (dgs != 0) {
20985c20973
<     if (rr != dgs) {
---
>     rr = drbd_recv(mdev, dig_in, (size_t )dgs);
20986a20975,20976
>     if (rr != dgs) {
> #line 1281
20988c20978
< #line 1280
---
> #line 1281
20990c20980
< #line 1280
---
> #line 1281
20993c20983
< #line 1282
---
> #line 1283
21001c20991
< #line 1286
---
> #line 1287
21003c20993
< #line 1288
---
> #line 1289
21005c20995
< #line 1288
---
> #line 1289
21007c20997
< #line 1288
---
> #line 1289
21009c20999
< #line 1288
---
> #line 1289
21011c21001
< #line 1288
---
> #line 1289
21014c21004
<            1288);
---
>            1289);
21018c21008
< #line 1288
---
> #line 1289
21020c21010
< #line 1288
---
> #line 1289
21025c21015
< #line 1289
---
> #line 1290
21027c21017
< #line 1289
---
> #line 1290
21029c21019
< #line 1289
---
> #line 1290
21031c21021
< #line 1289
---
> #line 1290
21033c21023
< #line 1289
---
> #line 1290
21036c21026
<            1289);
---
>            1290);
21040c21030
< #line 1289
---
> #line 1290
21042c21032
< #line 1289
---
> #line 1290
21047,21048d21036
< #line 1294
<   e = drbd_alloc_ee(mdev, id, sector, (unsigned int )data_size, 16U);
21050c21038
<   if ((unsigned long )e == (unsigned long )((struct drbd_epoch_entry *)0)) {
---
>   e = drbd_alloc_ee(mdev, id, sector, (unsigned int )data_size, 16U);
21051a21040,21041
>   if ((unsigned long )e == (unsigned long )((struct drbd_epoch_entry *)0)) {
> #line 1297
21056,21057d21045
< #line 1297
<   bio = e->private_bio;
21059c21047
<   ds = data_size;
---
>   bio = e->private_bio;
21060a21049,21050
>   ds = data_size;
> #line 1300
21062c21052
< #line 1299
---
> #line 1300
21064c21054
< #line 1299
---
> #line 1300
21067,21068d21056
< #line 1300
<   page = bvec->bv_page;
21069a21058,21059
>   page = bvec->bv_page;
> #line 1302
21071c21061
< #line 1301
---
> #line 1302
21073c21063
< #line 1301
---
> #line 1302
21075,21076d21064
< #line 1301
<   rr = drbd_recv(mdev, tmp___6, (size_t )(__min1 < __min2 ? __min1 : __min2));
21078c21066
<   kunmap(page);
---
>   rr = drbd_recv(mdev, tmp___6, (size_t )(__min1 < __min2 ? __min1 : __min2));
21079a21068,21069
>   kunmap(page);
> #line 1304
21081c21071
< #line 1303
---
> #line 1304
21083,21084d21072
< #line 1303
<   if ((__min1___1 < __min2___1 ? __min1___1 : __min2___1) != rr) {
21086c21074
<     drbd_free_ee(mdev, e);
---
>   if ((__min1___1 < __min2___1 ? __min1___1 : __min2___1) != rr) {
21087a21076,21077
>     drbd_free_ee(mdev, e);
> #line 1306
21089c21079
< #line 1305
---
> #line 1306
21091c21081
< #line 1305
---
> #line 1306
21093c21083
< #line 1305
---
> #line 1306
21095c21085
< #line 1305
---
> #line 1306
21098c21088
< #line 1307
---
> #line 1308
21103c21093
< #line 1309
---
> #line 1310
21105c21095
< #line 1299
---
> #line 1300
21107c21097
< #line 1299
---
> #line 1300
21110,21111d21099
< #line 1299
<   if ((int )bio->bi_vcnt > i) {
21112a21101,21102
>   if ((int )bio->bi_vcnt > i) {
> #line 1301
21118,21119d21107
< #line 1312
<   if (dgs != 0) {
21121c21109
<     drbd_csum(mdev, mdev->integrity_r_tfm, bio, dig_vv);
---
>   if (dgs != 0) {
21122a21111,21112
>     drbd_csum(mdev, mdev->integrity_r_tfm, bio, dig_vv);
> #line 1315
21124,21125d21113
< #line 1314
<     if (tmp___11 != 0) {
21126a21115,21116
>     if (tmp___11 != 0) {
> #line 1316
21128c21118
< #line 1315
---
> #line 1316
21130,21131d21119
< #line 1315
<       printk("<3>%s %s: Digest integrity check FAILED.\n", tmp___10, tmp___9);
21132a21121,21122
>       printk("<3>%s %s: Digest integrity check FAILED.\n", tmp___10, tmp___9);
> #line 1317
21135,21136d21124
< #line 1318
<       drbd_free_ee(mdev, e);
21137a21126,21127
>       drbd_free_ee(mdev, e);
> #line 1320
21145,21146d21134
< #line 1322
<   mdev->recv_cnt = mdev->recv_cnt + (unsigned int )(data_size >> 9);
21147a21136,21137
>   mdev->recv_cnt = mdev->recv_cnt + (unsigned int )(data_size >> 9);
> #line 1324
21151c21141
< #line 1329 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 1330 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
21168c21158
< #line 1332
---
> #line 1333
21170c21160
< #line 1335
---
> #line 1336
21172,21173d21161
< #line 1337
<   data = kmap(page);
21174a21163,21164
>   data = kmap(page);
> #line 1339
21177c21167
< #line 1339
---
> #line 1340
21179c21169
< #line 1339
---
> #line 1340
21181,21182d21170
< #line 1339
<   rr = drbd_recv(mdev, data, (size_t )(__min1 < __min2 ? __min1 : __min2));
21183a21172,21173
>   rr = drbd_recv(mdev, data, (size_t )(__min1 < __min2 ? __min1 : __min2));
> #line 1341
21185c21175
< #line 1340
---
> #line 1341
21187,21188d21176
< #line 1340
<   if ((__min1___1 < __min2___1 ? __min1___1 : __min2___1) != rr) {
21190c21178
<     rv = 0;
---
>   if ((__min1___1 < __min2___1 ? __min1___1 : __min2___1) != rr) {
21191a21180,21181
>     rv = 0;
> #line 1343
21193c21183
< #line 1342
---
> #line 1343
21195c21185
< #line 1342
---
> #line 1343
21197c21187
< #line 1342
---
> #line 1343
21199c21189
< #line 1342
---
> #line 1343
21202c21192
< #line 1344
---
> #line 1345
21207c21197
< #line 1346
---
> #line 1347
21210,21211d21199
< #line 1338
<   if (data_size != 0) {
21212a21201,21202
>   if (data_size != 0) {
> #line 1340
21218,21219d21207
< #line 1348
<   kunmap(page);
21221c21209
<   drbd_pp_free(mdev, page);
---
>   kunmap(page);
21222a21211,21212
>   drbd_pp_free(mdev, page);
> #line 1351
21226c21216
< #line 1353 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 1354 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
21255,21256d21244
< #line 1359
<   dig_in = mdev->int_dig_in;
21257a21246,21247
>   dig_in = mdev->int_dig_in;
> #line 1361
21259c21249
< #line 1362
---
> #line 1363
21261c21251
< #line 1362
---
> #line 1363
21263c21253
< #line 1362
---
> #line 1363
21266c21256
< #line 1362
---
> #line 1363
21269,21270d21258
< #line 1365
<   if (dgs != 0) {
21272c21260
<     rr = drbd_recv(mdev, dig_in, (size_t )dgs);
---
>   if (dgs != 0) {
21274c21262
<     if (rr != dgs) {
---
>     rr = drbd_recv(mdev, dig_in, (size_t )dgs);
21275a21264,21265
>     if (rr != dgs) {
> #line 1369
21277c21267
< #line 1368
---
> #line 1369
21279c21269
< #line 1368
---
> #line 1369
21282c21272
< #line 1370
---
> #line 1371
21290c21280
< #line 1374
---
> #line 1375
21292c21282
< #line 1378
---
> #line 1379
21294,21295d21283
< #line 1380
<   bio = req->master_bio;
21296a21285,21286
>   bio = req->master_bio;
> #line 1382
21298c21288
< #line 1381
---
> #line 1382
21300c21290
< #line 1381
---
> #line 1382
21302c21292
< #line 1381
---
> #line 1382
21305c21295
<            1381);
---
>            1382);
21309c21299
< #line 1383
---
> #line 1384
21311c21301
< #line 1383
---
> #line 1384
21313c21303
< #line 1383
---
> #line 1384
21316c21306
< #line 1384
---
> #line 1385
21318c21308
< #line 1384
---
> #line 1385
21320,21321d21309
< #line 1384
<   expect = __min1 < __min2 ? __min1 : __min2;
21322a21311,21312
>   expect = __min1 < __min2 ? __min1 : __min2;
> #line 1386
21324c21314
< #line 1385
---
> #line 1386
21326,21327d21315
< #line 1388
<   kunmap(bvec->bv_page);
21329c21317
<   if (rr != expect) {
---
>   kunmap(bvec->bv_page);
21330a21319,21320
>   if (rr != expect) {
> #line 1391
21332c21322
< #line 1390
---
> #line 1391
21334c21324
< #line 1390
---
> #line 1391
21337c21327
< #line 1393
---
> #line 1394
21342c21332
< #line 1395
---
> #line 1396
21344c21334
< #line 1383
---
> #line 1384
21346c21336
< #line 1383
---
> #line 1384
21349,21350d21338
< #line 1383
<   if ((int )bio->bi_vcnt > i) {
21351a21340,21341
>   if ((int )bio->bi_vcnt > i) {
> #line 1385
21357,21358d21346
< #line 1398
<   if (dgs != 0) {
21360c21348
<     drbd_csum(mdev, mdev->integrity_r_tfm, bio, dig_vv);
---
>   if (dgs != 0) {
21361a21350,21351
>     drbd_csum(mdev, mdev->integrity_r_tfm, bio, dig_vv);
> #line 1401
21363,21364d21352
< #line 1400
<     if (tmp___9 != 0) {
21365a21354,21355
>     if (tmp___9 != 0) {
> #line 1402
21367c21357
< #line 1401
---
> #line 1402
21369,21370d21358
< #line 1401
<       printk("<3>%s %s: Digest integrity check FAILED. Broken NICs?\n", tmp___8, tmp___7);
21371a21360,21361
>       printk("<3>%s %s: Digest integrity check FAILED. Broken NICs?\n", tmp___8, tmp___7);
> #line 1403
21379c21369
< #line 1406
---
> #line 1407
21381c21371
< #line 1406
---
> #line 1407
21383c21373
< #line 1406
---
> #line 1407
21385c21375
< #line 1406
---
> #line 1407
21387c21377
<            1406);
---
>            1407);
21391c21381
< #line 1407
---
> #line 1408
21395c21385
< #line 1412 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 1413 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
21411,21412d21400
< #line 1414
<   e = (struct drbd_epoch_entry *)w;
21413a21402,21403
>   e = (struct drbd_epoch_entry *)w;
> #line 1416
21415c21405
< #line 1418
---
> #line 1419
21417c21407
< #line 1418
---
> #line 1419
21419c21409
< #line 1418
---
> #line 1419
21421c21411
< #line 1418
---
> #line 1419
21423c21413
< #line 1418
---
> #line 1419
21426c21416
<            1418);
---
>            1419);
21430c21420
< #line 1420
---
> #line 1421
21432,21433d21421
< #line 1420
<   if (tmp___2 != 0L) {
21435,21436c21423
<     __drbd_set_in_sync(mdev, sector, (int )e->size, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
<                        1421U);
---
>   if (tmp___2 != 0L) {
21437a21425,21427
>     __drbd_set_in_sync(mdev, sector, (int )e->size, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>                        1422U);
> #line 1423
21440c21430
< #line 1425
---
> #line 1426
21442c21432
< #line 1427
---
> #line 1428
21445c21435
< #line 1429
---
> #line 1430
21447c21437
< #line 1429
---
> #line 1430
21449c21439
< #line 1429
---
> #line 1430
21451c21441
< #line 1429
---
> #line 1430
21453c21443
< #line 1429
---
> #line 1430
21455c21445
< #line 1429
---
> #line 1430
21457c21447
< #line 1429
---
> #line 1430
21459c21449
<            1429, tmp___3);
---
>            1430, tmp___3);
21463c21453
< #line 1431
---
> #line 1432
21467c21457
< #line 1434 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 1435 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
21477,21478d21466
< #line 1438
<   e = read_in_block(mdev, 0xffffffffffffffffULL, sector, data_size);
21480c21468
<   if ((unsigned long )e == (unsigned long )((struct drbd_epoch_entry *)0)) {
---
>   e = read_in_block(mdev, 0xffffffffffffffffULL, sector, data_size);
21482c21470
<     put_ldev(mdev);
---
>   if ((unsigned long )e == (unsigned long )((struct drbd_epoch_entry *)0)) {
21483a21472,21473
>     put_ldev(mdev);
> #line 1442
21488c21478
< #line 1444
---
> #line 1445
21490c21480
< #line 1444
---
> #line 1445
21492c21482
< #line 1444
---
> #line 1445
21494c21484
< #line 1444
---
> #line 1445
21496c21486
< #line 1444
---
> #line 1445
21498c21488
< #line 1444
---
> #line 1445
21500c21490
< #line 1444
---
> #line 1445
21502c21492
<            1444, tmp);
---
>            1445, tmp);
21506,21507d21495
< #line 1446
<   (e->private_bio)->bi_end_io = & drbd_endio_write_sec;
21509c21497
<   (e->private_bio)->bi_rw = 1UL;
---
>   (e->private_bio)->bi_end_io = & drbd_endio_write_sec;
21510a21499,21500
>   (e->private_bio)->bi_rw = 1UL;
> #line 1449
21512c21502
< #line 1450
---
> #line 1451
21514,21515d21503
< #line 1454
<   spin_lock_irq(& mdev->req_lock);
21517c21505
<   list_add(& e->w.list, & mdev->sync_ee);
---
>   spin_lock_irq(& mdev->req_lock);
21518a21507,21508
>   list_add(& e->w.list, & mdev->sync_ee);
> #line 1457
21520c21510
< #line 1458
---
> #line 1459
21522,21523d21511
< #line 1461
<   maybe_kick_lo(mdev);
21524a21513,21514
>   maybe_kick_lo(mdev);
> #line 1463
21528c21518
< #line 1465 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 1466 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
21547c21537
< #line 1471
---
> #line 1472
21549,21550d21538
< #line 1473
<   header_size = 24U;
21551a21540,21541
>   header_size = 24U;
> #line 1475
21553c21543
< #line 1476
---
> #line 1477
21555c21545
< #line 1476
---
> #line 1477
21557c21547
< #line 1476
---
> #line 1477
21559c21549
< #line 1476
---
> #line 1477
21561c21551
< #line 1476
---
> #line 1477
21564c21554
<            1476);
---
>            1477);
21568c21558
< #line 1476
---
> #line 1477
21570c21560
< #line 1476
---
> #line 1477
21575c21565
< #line 1478
---
> #line 1479
21577,21578d21566
< #line 1478
<   if ((unsigned int )tmp___1 != header_size) {
21579a21568,21569
>   if ((unsigned int )tmp___1 != header_size) {
> #line 1480
21584c21574
< #line 1481
---
> #line 1482
21586c21576
< #line 1481
---
> #line 1482
21588,21589d21577
< #line 1483
<   spin_lock_irq(& mdev->req_lock);
21591c21579
<   req = _ar_id_to_req(mdev, p->block_id, sector);
---
>   spin_lock_irq(& mdev->req_lock);
21593c21581
<   spin_unlock_irq(& mdev->req_lock);
---
>   req = _ar_id_to_req(mdev, p->block_id, sector);
21594a21583,21584
>   spin_unlock_irq(& mdev->req_lock);
> #line 1487
21597,21598d21586
< #line 1486
<   if (tmp___5 != 0L) {
21599a21588,21589
>   if (tmp___5 != 0L) {
> #line 1488
21601c21591
< #line 1487
---
> #line 1488
21603,21604d21592
< #line 1487
<     printk("<3>%s %s: Got a corrupt block_id/sector pair(1).\n", tmp___4, tmp___3);
21605a21594,21595
>     printk("<3>%s %s: Got a corrupt block_id/sector pair(1).\n", tmp___4, tmp___3);
> #line 1489
21610c21600
< #line 1494
---
> #line 1495
21612,21613d21601
< #line 1496
<   if (ok != 0) {
21614a21603,21604
>   if (ok != 0) {
> #line 1498
21619c21609
< #line 1502
---
> #line 1503
21623c21613
< #line 1505 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 1506 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
21644c21634
< #line 1510
---
> #line 1511
21646,21647d21635
< #line 1512
<   header_size = 24U;
21648a21637,21638
>   header_size = 24U;
> #line 1514
21650c21640
< #line 1515
---
> #line 1516
21652c21642
< #line 1515
---
> #line 1516
21654c21644
< #line 1515
---
> #line 1516
21656c21646
< #line 1515
---
> #line 1516
21658c21648
< #line 1515
---
> #line 1516
21661c21651
<            1515);
---
>            1516);
21665c21655
< #line 1515
---
> #line 1516
21667c21657
< #line 1515
---
> #line 1516
21672c21662
< #line 1517
---
> #line 1518
21674,21675d21663
< #line 1517
<   if ((unsigned int )tmp___1 != header_size) {
21676a21665,21666
>   if ((unsigned int )tmp___1 != header_size) {
> #line 1519
21681c21671
< #line 1520
---
> #line 1521
21683,21684d21672
< #line 1520
<   sector = (sector_t )tmp___2;
21685a21674,21675
>   sector = (sector_t )tmp___2;
> #line 1522
21687c21677
< #line 1521
---
> #line 1522
21689c21679
< #line 1521
---
> #line 1522
21691c21681
< #line 1521
---
> #line 1522
21694c21684
<            1521);
---
>            1522);
21698c21688
< #line 1523
---
> #line 1524
21700c21690
< #line 1523
---
> #line 1524
21702c21692
< #line 1527
---
> #line 1528
21705c21695
< #line 1529
---
> #line 1530
21707,21708d21696
< #line 1529
<     if (tmp___7 != 0) {
21709a21698,21699
>     if (tmp___7 != 0) {
> #line 1531
21711c21701
< #line 1530
---
> #line 1531
21713c21703
< #line 1530
---
> #line 1531
21718c21708
< #line 1532
---
> #line 1533
21720c21710
< #line 1534
---
> #line 1535
21723c21713
< #line 1537
---
> #line 1538
21727c21717
< #line 1543 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 1544 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
21749,21750d21738
< #line 1545
<   e = (struct drbd_epoch_entry *)w;
21751a21740,21741
>   e = (struct drbd_epoch_entry *)w;
> #line 1547
21753c21743
< #line 1548
---
> #line 1549
21755,21756d21744
< #line 1550
<   if ((e->flags & 8U) != 0U) {
21758c21746
<     epoch = previous_epoch(mdev, e->epoch);
---
>   if ((e->flags & 8U) != 0U) {
21760c21748
<     if ((unsigned long )epoch != (unsigned long )((struct drbd_epoch *)0)) {
---
>     epoch = previous_epoch(mdev, e->epoch);
21761a21750,21751
>     if ((unsigned long )epoch != (unsigned long )((struct drbd_epoch *)0)) {
> #line 1554
21769,21770d21758
< #line 1556
<   if ((mdev->net_conf)->wire_protocol == 3) {
21771a21760,21761
>   if ((mdev->net_conf)->wire_protocol == 3) {
> #line 1558
21773,21774d21762
< #line 1557
<     if (tmp___0 != 0L) {
21775a21764,21765
>     if (tmp___0 != 0L) {
> #line 1559
21777c21767
< #line 1562
---
> #line 1563
21779,21780d21768
< #line 1562
<       ok = tmp & ok;
21782c21770
<       if (pcmd == 23) {
---
>       ok = tmp & ok;
21783a21772,21773
>       if (pcmd == 23) {
> #line 1565
21785c21775
<                            1564U);
---
>                            1565U);
21790c21780
< #line 1566
---
> #line 1567
21793c21783
< #line 1570
---
> #line 1571
21795c21785
< #line 1570
---
> #line 1571
21797c21787
< #line 1570
---
> #line 1571
21799c21789
< #line 1570
---
> #line 1571
21801c21791
< #line 1570
---
> #line 1571
21803c21793
< #line 1570
---
> #line 1571
21805c21795
< #line 1570
---
> #line 1571
21807c21797
<              1570, tmp___1);
---
>              1571, tmp___1);
21814,21815d21803
< #line 1574
<   if ((unsigned int )*((unsigned char *)mdev->net_conf + 528UL) != 0U) {
21817c21805
<     spin_lock_irq(& mdev->req_lock);
---
>   if ((unsigned int )*((unsigned char *)mdev->net_conf + 528UL) != 0U) {
21818a21807,21808
>     spin_lock_irq(& mdev->req_lock);
> #line 1577
21820c21810
< #line 1576
---
> #line 1577
21822c21812
< #line 1576
---
> #line 1577
21824c21814
< #line 1576
---
> #line 1577
21826c21816
< #line 1576
---
> #line 1577
21829c21819
<              1576);
---
>              1577);
21833,21834d21822
< #line 1577
<     hlist_del_init(& e->colision);
21835a21824,21825
>     hlist_del_init(& e->colision);
> #line 1579
21838c21828
< #line 1580
---
> #line 1581
21840c21830
< #line 1580
---
> #line 1581
21842c21832
< #line 1580
---
> #line 1581
21844c21834
< #line 1580
---
> #line 1581
21846c21836
< #line 1580
---
> #line 1581
21849c21839
<              1580);
---
>              1581);
21854c21844
< #line 1583
---
> #line 1584
21856c21846
< #line 1585
---
> #line 1586
21860c21850
< #line 1588 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 1589 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
21876,21877d21865
< #line 1590
<   e = (struct drbd_epoch_entry *)w;
21878a21867,21868
>   e = (struct drbd_epoch_entry *)w;
> #line 1592
21880c21870
< #line 1593
---
> #line 1594
21882c21872
< #line 1593
---
> #line 1594
21884c21874
< #line 1593
---
> #line 1594
21886c21876
< #line 1593
---
> #line 1594
21889c21879
<            1593);
---
>            1594);
21893c21883
< #line 1594
---
> #line 1595
21895,21896d21884
< #line 1596
<   spin_lock_irq(& mdev->req_lock);
21897a21886,21887
>   spin_lock_irq(& mdev->req_lock);
> #line 1598
21899c21889
< #line 1597
---
> #line 1598
21901c21891
< #line 1597
---
> #line 1598
21903c21893
< #line 1597
---
> #line 1598
21905c21895
< #line 1597
---
> #line 1598
21908c21898
<            1597);
---
>            1598);
21912,21913d21901
< #line 1598
<   hlist_del_init(& e->colision);
21914a21903,21904
>   hlist_del_init(& e->colision);
> #line 1600
21916c21906
< #line 1601
---
> #line 1602
21918c21908
< #line 1601
---
> #line 1602
21920c21910
< #line 1601
---
> #line 1602
21922c21912
< #line 1601
---
> #line 1602
21924c21914
< #line 1601
---
> #line 1602
21926c21916
< #line 1601
---
> #line 1602
21928c21918
< #line 1601
---
> #line 1602
21930c21920
<            1601, tmp___4);
---
>            1602, tmp___4);
21934c21924
< #line 1603
---
> #line 1604
21938c21928
< #line 1627 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 1628 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
21953c21943
< #line 1629
---
> #line 1630
21955c21945
< #line 1629
---
> #line 1630
21957c21947
< #line 1629
---
> #line 1630
21959c21949
< #line 1629
---
> #line 1630
21961c21951
< #line 1629
---
> #line 1630
21963c21953
< #line 1629
---
> #line 1630
21965,21966d21954
< #line 1632
<   ret = 0;
21967a21956,21957
>   ret = 0;
> #line 1634
21970,21971d21959
< #line 1635
<   prepare_to_wait(& mdev->seq_wait, & wait, 1);
21972a21961,21962
>   prepare_to_wait(& mdev->seq_wait, & wait, 1);
> #line 1637
21974,21975d21963
< #line 1636
<   if (tmp___0 <= 0) {
21976a21965,21966
>   if (tmp___0 <= 0) {
> #line 1638
21981c21971
< #line 1638
---
> #line 1639
21983c21973
< #line 1638
---
> #line 1639
21985,21986d21974
< #line 1638
<   if (tmp___2 != 0) {
21988c21976
<     ret = -512;
---
>   if (tmp___2 != 0) {
21989a21978,21979
>     ret = -512;
> #line 1641
21994,21995d21983
< #line 1642
<   p_seq = mdev->peer_seq;
21997c21985
<   spin_unlock(& mdev->peer_seq_lock);
---
>   p_seq = mdev->peer_seq;
21999c21987
<   timeout = schedule_timeout(7500L);
---
>   spin_unlock(& mdev->peer_seq_lock);
22001c21989
<   spin_lock(& mdev->peer_seq_lock);
---
>   timeout = schedule_timeout(7500L);
22003c21991
<   if (timeout == 0L && mdev->peer_seq == p_seq) {
---
>   spin_lock(& mdev->peer_seq_lock);
22005c21993
<     ret = -110;
---
>   if (timeout == 0L && mdev->peer_seq == p_seq) {
22006a21995,21996
>     ret = -110;
> #line 1649
22008c21998
< #line 1648
---
> #line 1649
22010c22000
< #line 1648
---
> #line 1649
22013c22003
< #line 1649
---
> #line 1650
22018c22008
< #line 1651
---
> #line 1652
22021,22022d22010
< #line 1652
<   finish_wait(& mdev->seq_wait, & wait);
22024c22012
<   if (mdev->peer_seq + 1U == (unsigned int )packet_seq) {
---
>   finish_wait(& mdev->seq_wait, & wait);
22025a22014,22015
>   if (mdev->peer_seq + 1U == (unsigned int )packet_seq) {
> #line 1655
22030,22031d22019
< #line 1655
<   spin_unlock(& mdev->peer_seq_lock);
22032a22021,22022
>   spin_unlock(& mdev->peer_seq_lock);
> #line 1657
22036c22026
< #line 1660 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 1661 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
22099c22089
< #line 1664
---
> #line 1665
22101c22091
< #line 1666
---
> #line 1667
22103,22104d22092
< #line 1669
<   header_size = 24;
22105a22094,22095
>   header_size = 24;
> #line 1671
22107c22097
< #line 1672
---
> #line 1673
22109c22099
< #line 1672
---
> #line 1673
22111c22101
< #line 1672
---
> #line 1673
22113c22103
< #line 1672
---
> #line 1673
22115c22105
< #line 1672
---
> #line 1673
22118c22108
<            1672);
---
>            1673);
22122c22112
< #line 1672
---
> #line 1673
22124c22114
< #line 1672
---
> #line 1673
22129c22119
< #line 1674
---
> #line 1675
22131,22132d22120
< #line 1674
<   if (tmp___1 != header_size) {
22133a22122,22123
>   if (tmp___1 != header_size) {
> #line 1676
22138c22128
< #line 1677
---
> #line 1678
22140,22141d22129
< #line 1677
<   if (tmp___7 == 0) {
22142a22131,22132
>   if (tmp___7 == 0) {
> #line 1679
22144,22145d22133
< #line 1678
<     if (tmp___4 != 0) {
22146a22135,22136
>     if (tmp___4 != 0) {
> #line 1680
22148c22138
< #line 1679
---
> #line 1680
22150c22140
< #line 1679
---
> #line 1680
22156,22157d22145
< #line 1681
<     spin_lock(& mdev->peer_seq_lock);
22158a22147,22148
>     spin_lock(& mdev->peer_seq_lock);
> #line 1683
22160,22161d22149
< #line 1682
<     if (mdev->peer_seq + 1U == tmp___5) {
22162a22151,22152
>     if (mdev->peer_seq + 1U == tmp___5) {
> #line 1684
22167c22157
< #line 1684
---
> #line 1685
22169,22170d22158
< #line 1686
<     drbd_send_ack_dp(mdev, P_NEG_ACK, p);
22172c22160
<     atomic_inc(& (mdev->current_epoch)->epoch_size);
---
>     drbd_send_ack_dp(mdev, P_NEG_ACK, p);
22173a22162,22163
>     atomic_inc(& (mdev->current_epoch)->epoch_size);
> #line 1689
22175c22165
< #line 1688
---
> #line 1689
22180c22170
< #line 1696
---
> #line 1697
22182,22183d22171
< #line 1696
<   sector = (sector_t )tmp___8;
22185c22173
<   e = read_in_block(mdev, p->block_id, sector, data_size);
---
>   sector = (sector_t )tmp___8;
22187c22175
<   if ((unsigned long )e == (unsigned long )((struct drbd_epoch_entry *)0)) {
---
>   e = read_in_block(mdev, p->block_id, sector, data_size);
22189c22177
<     put_ldev(mdev);
---
>   if ((unsigned long )e == (unsigned long )((struct drbd_epoch_entry *)0)) {
22190a22179,22180
>     put_ldev(mdev);
> #line 1701
22195,22196d22184
< #line 1703
<   (e->private_bio)->bi_end_io = & drbd_endio_write_sec;
22197a22186,22187
>   (e->private_bio)->bi_end_io = & drbd_endio_write_sec;
> #line 1705
22199,22200d22188
< #line 1706
<   spin_lock(& mdev->epoch_lock);
22202c22190
<   e->epoch = mdev->current_epoch;
---
>   spin_lock(& mdev->epoch_lock);
22204c22192
<   atomic_inc(& (e->epoch)->epoch_size);
---
>   e->epoch = mdev->current_epoch;
22205a22194,22195
>   atomic_inc(& (e->epoch)->epoch_size);
> #line 1710
22207c22197
< #line 1711
---
> #line 1712
22209c22199
< #line 1711
---
> #line 1712
22211c22201
< #line 1711
---
> #line 1712
22213c22203
< #line 1716
---
> #line 1717
22215,22216d22204
< #line 1716
<       epoch = (struct drbd_epoch *)__mptr;
22218c22206
<       if ((unsigned long )e->epoch == (unsigned long )epoch) {
---
>       epoch = (struct drbd_epoch *)__mptr;
22220c22208
<         set_bit(2U, (unsigned long volatile   *)(& (e->epoch)->flags));
---
>       if ((unsigned long )e->epoch == (unsigned long )epoch) {
22222c22210
<         rw = rw | 32;
---
>         set_bit(2U, (unsigned long volatile   *)(& (e->epoch)->flags));
22223a22212,22213
>         rw = rw | 32;
> #line 1721
22226c22216
< #line 1722
---
> #line 1723
22228c22218
< #line 1722
---
> #line 1723
22230,22231d22219
< #line 1724
<           set_bit(0U, (unsigned long volatile   *)(& epoch->flags));
22233c22221
<           set_bit(2U, (unsigned long volatile   *)(& (e->epoch)->flags));
---
>           set_bit(0U, (unsigned long volatile   *)(& epoch->flags));
22235c22223
<           rw = rw | 32;
---
>           set_bit(2U, (unsigned long volatile   *)(& (e->epoch)->flags));
22236a22225,22226
>           rw = rw | 32;
> #line 1728
22239c22229
< #line 1722
---
> #line 1723
22241c22231
< #line 1722
---
> #line 1723
22243,22244d22232
< #line 1724
<             set_bit(0U, (unsigned long volatile   *)(& epoch->flags));
22246c22234
<             set_bit(2U, (unsigned long volatile   *)(& (e->epoch)->flags));
---
>             set_bit(0U, (unsigned long volatile   *)(& epoch->flags));
22248c22236
<             rw = rw | 32;
---
>             set_bit(2U, (unsigned long volatile   *)(& (e->epoch)->flags));
22249a22238,22239
>             rw = rw | 32;
> #line 1728
22262c22252
< #line 1731
---
> #line 1732
22264c22254
< #line 1733
---
> #line 1734
22266,22267d22255
< #line 1733
<   dp_flags = tmp___12;
22269c22257
<   if ((int )dp_flags & 1) {
---
>   dp_flags = tmp___12;
22270a22259,22260
>   if ((int )dp_flags & 1) {
> #line 1736
22272c22262
< #line 1735
---
> #line 1736
22274c22264
< #line 1735
---
> #line 1736
22280,22281d22269
< #line 1738
<   if ((dp_flags & 2U) != 0U) {
22282a22271,22272
>   if ((dp_flags & 2U) != 0U) {
> #line 1740
22287,22288d22276
< #line 1740
<   if ((dp_flags & 4U) != 0U) {
22289a22278,22279
>   if ((dp_flags & 4U) != 0U) {
> #line 1742
22294,22295d22283
< #line 1744
<   if ((unsigned int )*((unsigned char *)mdev->net_conf + 528UL) == 0U) {
22296a22285,22286
>   if ((unsigned int )*((unsigned char *)mdev->net_conf + 528UL) == 0U) {
> #line 1746
22299,22300d22288
< #line 1749
<     size = (int const   )e->size;
22301a22290,22291
>     size = (int const   )e->size;
> #line 1751
22303,22304d22292
< #line 1750
<     discard = tmp___15;
22305a22294,22295
>     discard = tmp___15;
> #line 1752
22307c22297
< #line 1751
---
> #line 1752
22309c22299
< #line 1751
---
> #line 1752
22311c22301
< #line 1751
---
> #line 1752
22313c22303
< #line 1751
---
> #line 1752
22315c22305
< #line 1751
---
> #line 1752
22317c22307
< #line 1757
---
> #line 1758
22319c22309
< #line 1757
---
> #line 1758
22321c22311
< #line 1757
---
> #line 1758
22323c22313
< #line 1757
---
> #line 1758
22326c22316
<              1757);
---
>              1758);
22330c22320
< #line 1758
---
> #line 1759
22333c22323
< #line 1758
---
> #line 1759
22335c22325
< #line 1758
---
> #line 1759
22337c22327
<                            "i" (1758), "i" (12UL));
---
>                            "i" (1759), "i" (12UL));
22339c22329
< #line 1758
---
> #line 1759
22344c22334
< #line 1759
---
> #line 1760
22347c22337
< #line 1759
---
> #line 1760
22349c22339
< #line 1759
---
> #line 1760
22351c22341
<                            "i" (1759), "i" (12UL));
---
>                            "i" (1760), "i" (12UL));
22353c22343
< #line 1759
---
> #line 1760
22358c22348
< #line 1795
---
> #line 1796
22360c22350
< #line 1795
---
> #line 1796
22362,22363d22351
< #line 1795
<     if (tmp___22 != 0) {
22364a22353,22354
>     if (tmp___22 != 0) {
> #line 1797
22369c22359
< #line 1798
---
> #line 1799
22371c22361
< #line 1800
---
> #line 1801
22373c22363
< #line 1800
---
> #line 1801
22375,22376d22364
< #line 1803
<     slot = tl_hash_slot(mdev, sector);
22377a22366,22367
>     slot = tl_hash_slot(mdev, sector);
> #line 1805
22380,22381d22369
< #line 1806
<     have_unacked = 0;
22383c22371
<     have_conflict = 0;
---
>     have_unacked = 0;
22384a22373,22374
>     have_conflict = 0;
> #line 1809
22386c22376
< #line 1810
---
> #line 1811
22388c22378
< #line 1810
---
> #line 1811
22391c22381
< #line 1811
---
> #line 1812
22393c22383
< #line 1811
---
> #line 1812
22395,22396d22384
< #line 1814
<       if (first != 0) {
22397a22386,22387
>       if (first != 0) {
> #line 1816
22399c22389
< #line 1815
---
> #line 1816
22401c22391
< #line 1815
---
> #line 1816
22403c22393
< #line 1815
---
> #line 1816
22405c22395
< #line 1815
---
> #line 1816
22412,22413d22401
< #line 1820
<       if ((i->rq_state & 8UL) != 0UL) {
22414a22403,22404
>       if ((i->rq_state & 8UL) != 0UL) {
> #line 1822
22419c22409
< #line 1822
---
> #line 1823
22424c22414
< #line 1810
---
> #line 1811
22427c22417
< #line 1810
---
> #line 1811
22429c22419
< #line 1810
---
> #line 1811
22431c22421
< #line 1810
---
> #line 1811
22433c22423
< #line 1810
---
> #line 1811
22435c22425
< #line 1810
---
> #line 1811
22437,22438d22426
< #line 1810
<         if (1 != 0) {
22439a22428,22429
>         if (1 != 0) {
> #line 1812
22442c22432
< #line 1813
---
> #line 1814
22446c22436
< #line 1813
---
> #line 1814
22453,22454d22442
< #line 1826
<     if (have_conflict == 0) {
22455a22444,22445
>     if (have_conflict == 0) {
> #line 1828
22460,22461d22449
< #line 1830
<     if ((first != 0 && discard != 0) && have_unacked != 0) {
22462a22451,22452
>     if ((first != 0 && discard != 0) && have_unacked != 0) {
> #line 1832
22464c22454
< #line 1831
---
> #line 1832
22466c22456
< #line 1831
---
> #line 1832
22469,22470d22458
< #line 1833
<       inc_unacked(mdev);
22472c22460
<       e->w.cb = & e_send_discard_ack;
---
>       inc_unacked(mdev);
22473a22462,22463
>       e->w.cb = & e_send_discard_ack;
> #line 1836
22475c22465
< #line 1837
---
> #line 1838
22477,22478d22466
< #line 1842
<       put_ldev(mdev);
22480c22468
<       wake_asender(mdev);
---
>       put_ldev(mdev);
22482c22470
<       finish_wait(& mdev->misc_wait, & wait);
---
>       wake_asender(mdev);
22483a22472,22473
>       finish_wait(& mdev->misc_wait, & wait);
> #line 1846
22488c22478
< #line 1848
---
> #line 1849
22490c22480
< #line 1848
---
> #line 1849
22492,22493d22481
< #line 1848
<     if (tmp___32 != 0) {
22494a22483,22484
>     if (tmp___32 != 0) {
> #line 1850
22496c22486
< #line 1851
---
> #line 1852
22498,22499d22487
< #line 1853
<       finish_wait(& mdev->misc_wait, & wait);
22500a22489,22490
>       finish_wait(& mdev->misc_wait, & wait);
> #line 1855
22505,22506d22494
< #line 1857
<     spin_unlock_irq(& mdev->req_lock);
22508c22496
<     if (first != 0) {
---
>     spin_unlock_irq(& mdev->req_lock);
22510c22498
<       first = 0;
---
>     if (first != 0) {
22511a22500,22501
>       first = 0;
> #line 1861
22513c22503
< #line 1860
---
> #line 1861
22515c22505
< #line 1860
---
> #line 1861
22519c22509
< #line 1862
---
> #line 1863
22521c22511
< #line 1865
---
> #line 1866
22523c22513
< #line 1865
---
> #line 1866
22525c22515
< #line 1865
---
> #line 1866
22527c22517
< #line 1865
---
> #line 1866
22530c22520
<                1865);
---
>                1866);
22537,22538d22526
< #line 1867
<     schedule();
22540c22528
<     spin_lock_irq(& mdev->req_lock);
---
>     schedule();
22541a22530,22531
>     spin_lock_irq(& mdev->req_lock);
> #line 1870
22544c22534
< #line 1870
---
> #line 1871
22547,22548d22536
< #line 1873
<   list_add(& e->w.list, & mdev->active_ee);
22549a22538,22539
>   list_add(& e->w.list, & mdev->active_ee);
> #line 1875
22551c22541
< #line 1876
---
> #line 1877
22554c22544
< #line 1878
---
> #line 1879
22556c22546
< #line 1881
---
> #line 1882
22559,22560d22548
< #line 1885
<   drbd_send_ack(mdev, P_RECV_ACK, e);
22561a22550,22551
>   drbd_send_ack(mdev, P_RECV_ACK, e);
> #line 1887
22564c22554
< #line 1889
---
> #line 1890
22568c22558
< #line 1892
---
> #line 1893
22570,22572d22559
< #line 1894
<     __drbd_set_out_of_sync(mdev, e->sector, (int )e->size, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
<                            1894U);
22574c22561,22562
<     e->flags = e->flags | 1U;
---
>     __drbd_set_out_of_sync(mdev, e->sector, (int )e->size, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>                            1895U);
22575a22564,22565
>     e->flags = e->flags | 1U;
> #line 1897
22580,22581d22569
< #line 1899
<   (e->private_bio)->bi_rw = (unsigned long )rw;
22582a22571,22572
>   (e->private_bio)->bi_rw = (unsigned long )rw;
> #line 1901
22584,22585d22573
< #line 1903
<   maybe_kick_lo(mdev);
22586a22575,22576
>   maybe_kick_lo(mdev);
> #line 1905
22589,22590d22578
< #line 1910
<   put_ldev(mdev);
22592c22580
<   drbd_free_ee(mdev, e);
---
>   put_ldev(mdev);
22593a22582,22583
>   drbd_free_ee(mdev, e);
> #line 1913
22597c22587
< #line 1915 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 1916 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
22654c22644
< #line 1918
---
> #line 1919
22656c22646
< #line 1918
---
> #line 1919
22658c22648
< #line 1920
---
> #line 1921
22660c22650
< #line 1923
---
> #line 1924
22662c22652
< #line 1925
---
> #line 1926
22664c22654
< #line 1927
---
> #line 1928
22666,22667d22655
< #line 1927
<   if (tmp___0 != brps) {
22668a22657,22658
>   if (tmp___0 != brps) {
> #line 1929
22673c22663
< #line 1930
---
> #line 1931
22675,22676d22664
< #line 1930
<   sector = (sector_t )tmp___1;
22677a22666,22667
>   sector = (sector_t )tmp___1;
> #line 1932
22679c22669
< #line 1931
---
> #line 1932
22681,22682d22670
< #line 1933
<   if ((size <= 0 || (size & 511) != 0) || (unsigned int )size > 32768U) {
22683a22672,22673
>   if ((size <= 0 || (size & 511) != 0) || (unsigned int )size > 32768U) {
> #line 1935
22685c22675
< #line 1934
---
> #line 1935
22687c22677
< #line 1934
---
> #line 1935
22689,22690c22679,22680
<            1935, (unsigned long long )sector, size);
< #line 1936
---
>            1936, (unsigned long long )sector, size);
> #line 1937
22695,22696d22684
< #line 1938
<   if ((sector_t )(size >> 9) + sector > capacity) {
22697a22686,22687
>   if ((sector_t )(size >> 9) + sector > capacity) {
> #line 1940
22699c22689
< #line 1939
---
> #line 1940
22701c22691
< #line 1939
---
> #line 1940
22703,22704c22693,22694
<            1940, (unsigned long long )sector, size);
< #line 1941
---
>            1941, (unsigned long long )sector, size);
> #line 1942
22709c22699
< #line 1944
---
> #line 1945
22711,22712d22700
< #line 1944
<   if (tmp___10 == 0) {
22713a22702,22703
>   if (tmp___10 == 0) {
> #line 1946
22715,22716d22704
< #line 1945
<     if (tmp___9 != 0) {
22717a22706,22707
>     if (tmp___9 != 0) {
> #line 1947
22719c22709
< #line 1946
---
> #line 1947
22721c22711
< #line 1946
---
> #line 1947
22727c22717
< #line 1948
---
> #line 1949
22730c22720
< #line 1950
---
> #line 1951
22735,22736d22724
< #line 1956
<   e = drbd_alloc_ee(mdev, p->block_id, sector, (unsigned int )size, 16U);
22738c22726
<   if ((unsigned long )e == (unsigned long )((struct drbd_epoch_entry *)0)) {
---
>   e = drbd_alloc_ee(mdev, p->block_id, sector, (unsigned int )size, 16U);
22740c22728
<     put_ldev(mdev);
---
>   if ((unsigned long )e == (unsigned long )((struct drbd_epoch_entry *)0)) {
22741a22730,22731
>     put_ldev(mdev);
> #line 1960
22746,22747d22735
< #line 1962
<   (e->private_bio)->bi_rw = 0UL;
22748a22737,22738
>   (e->private_bio)->bi_rw = 0UL;
> #line 1964
22750c22740
< #line 1965
---
> #line 1966
22753,22754d22742
< #line 1967
<   e->w.cb = & w_e_end_data_req;
22756c22744
<   fault_type = 5U;
---
>   e->w.cb = & w_e_end_data_req;
22757a22746,22747
>   fault_type = 5U;
> #line 1970
22760,22761d22749
< #line 1971
<   e->w.cb = & w_e_end_rsdata_req;
22762a22751,22752
>   e->w.cb = & w_e_end_rsdata_req;
> #line 1973
22764c22754
< #line 1978
---
> #line 1979
22766c22756
< #line 1978
---
> #line 1979
22768c22758
< #line 1981
---
> #line 1982
22770c22760
< #line 1981
---
> #line 1982
22772c22762
< #line 1981
---
> #line 1982
22774c22764
< #line 1981
---
> #line 1982
22776c22766
< #line 1981
---
> #line 1982
22778c22768
< #line 1981
---
> #line 1982
22781c22771
<              1981);
---
>              1982);
22785c22775
< #line 1982
---
> #line 1983
22790c22780
< #line 1984
---
> #line 1985
22794,22795d22783
< #line 1988
<   fault_type = 3U;
22797c22785
<   digest_size = (int )h->length - brps;
---
>   fault_type = 3U;
22798a22787,22788
>   digest_size = (int )h->length - brps;
> #line 1991
22800,22801d22789
< #line 1990
<   di = (struct digest_info *)tmp___16;
22803c22791
<   if ((unsigned long )di == (unsigned long )((struct digest_info *)0)) {
---
>   di = (struct digest_info *)tmp___16;
22804a22793,22794
>   if ((unsigned long )di == (unsigned long )((struct digest_info *)0)) {
> #line 1993
22809,22810d22798
< #line 1994
<   di->digest_size = digest_size;
22811a22800,22801
>   di->digest_size = digest_size;
> #line 1996
22813c22803
< #line 1997
---
> #line 1998
22815,22816d22804
< #line 1997
<   if (tmp___17 != digest_size) {
22817a22806,22807
>   if (tmp___17 != digest_size) {
> #line 1999
22822,22823d22811
< #line 2000
<   e->block_id = (unsigned long long )di;
22825c22813
<   if ((unsigned int )h->command == 33U) {
---
>   e->block_id = (unsigned long long )di;
22826a22815,22816
>   if ((unsigned int )h->command == 33U) {
> #line 2003
22828c22818
< #line 2002
---
> #line 2003
22830c22820
< #line 2002
---
> #line 2003
22832c22822
< #line 2002
---
> #line 2003
22835c22825
<              2002);
---
>              2003);
22839c22829
< #line 2003
---
> #line 2004
22842,22843d22831
< #line 2004
<   if ((unsigned int )h->command == 31U) {
22845c22833
<     e->w.cb = & w_e_end_ov_reply;
---
>   if ((unsigned int )h->command == 31U) {
22846a22835,22836
>     e->w.cb = & w_e_end_ov_reply;
> #line 2007
22848c22838
< #line 2006
---
> #line 2007
22850c22840
< #line 2006
---
> #line 2007
22852c22842
< #line 2006
---
> #line 2007
22854c22844
< #line 2006
---
> #line 2007
22856c22846
< #line 2006
---
> #line 2007
22858c22848
< #line 2006
---
> #line 2007
22860c22850
<              "receive_DataRequest", 2006, tmp___20);
---
>              "receive_DataRequest", 2007, tmp___20);
22864c22854
< #line 2007
---
> #line 2008
22869c22859
< #line 2010
---
> #line 2011
22871c22861
< #line 2010
---
> #line 2011
22873c22863
< #line 2012
---
> #line 2013
22875c22865
< #line 2012
---
> #line 2013
22877c22867
< #line 2012
---
> #line 2013
22879c22869
< #line 2012
---
> #line 2013
22881c22871
< #line 2012
---
> #line 2013
22883c22873
< #line 2012
---
> #line 2013
22886c22876
<              2012);
---
>              2013);
22890c22880
< #line 2013
---
> #line 2014
22895c22885
< #line 2015
---
> #line 2016
22898c22888
< #line 2018
---
> #line 2019
22900c22890
< #line 2020
---
> #line 2021
22902c22892
< #line 2020
---
> #line 2021
22904c22894
< #line 2020
---
> #line 2021
22906c22896
< #line 2020
---
> #line 2021
22912c22902
< #line 2022
---
> #line 2023
22914,22915d22903
< #line 2024
<     mdev->ov_start_sector = sector;
22917c22905
<     mdev->ov_position = sector;
---
>     mdev->ov_start_sector = sector;
22919c22907
<     mdev->ov_left = mdev->rs_total - (sector >> 3);
---
>     mdev->ov_position = sector;
22920a22909,22910
>     mdev->ov_left = mdev->rs_total - (sector >> 3);
> #line 2028
22922c22912
< #line 2027
---
> #line 2028
22924c22914
< #line 2027
---
> #line 2028
22929,22930d22918
< #line 2030
<   e->w.cb = & w_e_end_ov_req;
22931a22920,22921
>   e->w.cb = & w_e_end_ov_req;
> #line 2032
22933c22923
< #line 2037
---
> #line 2038
22935c22925
< #line 2037
---
> #line 2038
22937c22927
< #line 2040
---
> #line 2041
22939c22929
< #line 2040
---
> #line 2041
22941c22931
< #line 2040
---
> #line 2041
22943c22933
< #line 2040
---
> #line 2041
22945c22935
< #line 2040
---
> #line 2041
22947c22937
< #line 2040
---
> #line 2041
22950c22940
<              2040);
---
>              2041);
22954c22944
< #line 2041
---
> #line 2042
22959c22949
< #line 2043
---
> #line 2044
22962c22952
< #line 2047
---
> #line 2048
22964c22954
< #line 2047
---
> #line 2048
22966c22956
< #line 2047
---
> #line 2048
22968c22958
< #line 2047
---
> #line 2048
22971c22961
< #line 2049
---
> #line 2050
22975,22976d22964
< #line 2052
<   spin_lock_irq(& mdev->req_lock);
22978c22966
<   list_add(& e->w.list, & mdev->read_ee);
---
>   spin_lock_irq(& mdev->req_lock);
22979a22968,22969
>   list_add(& e->w.list, & mdev->read_ee);
> #line 2055
22981c22971
< #line 2056
---
> #line 2057
22983,22984d22972
< #line 2058
<   drbd_generic_make_request(mdev, (int )fault_type, e->private_bio);
22985a22974,22975
>   drbd_generic_make_request(mdev, (int )fault_type, e->private_bio);
> #line 2060
22987c22977
< #line 2061
---
> #line 2062
22990,22991d22979
< #line 2064
<   kfree((void const   *)di);
22993c22981
<   put_ldev(mdev);
---
>   kfree((void const   *)di);
22995c22983
<   drbd_free_ee(mdev, e);
---
>   put_ldev(mdev);
22996a22985,22986
>   drbd_free_ee(mdev, e);
> #line 2068
23000c22990
< #line 2070 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2071 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
23016c23006
< #line 2072
---
> #line 2073
23018,23019d23007
< #line 2075
<   self = (int )(mdev->ldev)->md.uuid[1] & 1;
23020a23009,23010
>   self = (int )(mdev->ldev)->md.uuid[1] & 1;
> #line 2077
23022,23023d23011
< #line 2078
<   ch_peer = (unsigned long )*(mdev->p_uuid + 4UL);
23024a23013,23014
>   ch_peer = (unsigned long )*(mdev->p_uuid + 4UL);
> #line 2080
23026c23016
< #line 2081
---
> #line 2082
23031c23021
< #line 2085
---
> #line 2086
23033c23023
< #line 2085
---
> #line 2086
23035,23036d23024
< #line 2085
<   printk("<3>%s %s: Configuration error.\n", tmp___0, tmp);
23037a23026,23027
>   printk("<3>%s %s: Configuration error.\n", tmp___0, tmp);
> #line 2087
23040c23030
< #line 2088
---
> #line 2089
23043,23044d23032
< #line 2090
<   if (self == 0 && peer == 1) {
23046c23034
<     rv = -1;
---
>   if (self == 0 && peer == 1) {
23047a23036,23037
>     rv = -1;
> #line 2093
23052,23053d23041
< #line 2094
<   if (self == 1 && peer == 0) {
23055c23043
<     rv = 1;
---
>   if (self == 1 && peer == 0) {
23056a23045,23046
>     rv = 1;
> #line 2097
23062,23063d23051
< #line 2100
<   if (self == 0 && peer == 1) {
23065c23053
<     rv = 1;
---
>   if (self == 0 && peer == 1) {
23066a23055,23056
>     rv = 1;
> #line 2103
23071,23072d23060
< #line 2104
<   if (self == 1 && peer == 0) {
23074c23062
<     rv = -1;
---
>   if (self == 1 && peer == 0) {
23075a23064,23065
>     rv = -1;
> #line 2107
23080c23070
< #line 2109
---
> #line 2110
23082c23072
< #line 2109
---
> #line 2110
23084c23074
< #line 2109
---
> #line 2110
23088,23089d23077
< #line 2112
<   if (ch_peer == 0UL && ch_self == 0UL) {
23090a23079,23080
>   if (ch_peer == 0UL && ch_self == 0UL) {
> #line 2114
23092c23082
< #line 2113
---
> #line 2114
23094c23084
< #line 2115
---
> #line 2116
23097c23087
< #line 2117
---
> #line 2118
23099c23089
< #line 2117
---
> #line 2118
23101c23091
< #line 2117
---
> #line 2118
23106c23096
< #line 2118
---
> #line 2119
23108c23098
< #line 2118
---
> #line 2119
23110c23100
< #line 2118
---
> #line 2119
23116,23117d23105
< #line 2120
<   if ((mdev->net_conf)->after_sb_0p == 3) {
23118a23107,23108
>   if ((mdev->net_conf)->after_sb_0p == 3) {
> #line 2122
23124,23125d23113
< #line 2123
<   if (ch_self < ch_peer) {
23126a23115,23116
>   if (ch_self < ch_peer) {
> #line 2125
23129,23130d23118
< #line 2125
<   if (ch_self > ch_peer) {
23131a23120,23121
>   if (ch_self > ch_peer) {
> #line 2127
23134c23124
< #line 2129
---
> #line 2130
23136c23126
< #line 2129
---
> #line 2130
23139c23129
< #line 2131
---
> #line 2132
23142,23143d23131
< #line 2133
<   rv = -1;
23144a23133,23134
>   rv = -1;
> #line 2135
23147c23137
< #line 2136
---
> #line 2137
23151c23141
< #line 2139
---
> #line 2140
23155c23145
< #line 2142 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2143 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
23170c23160
< #line 2144
---
> #line 2145
23172,23173d23161
< #line 2146
<   self = (int )(mdev->ldev)->md.uuid[1] & 1;
23174a23163,23164
>   self = (int )(mdev->ldev)->md.uuid[1] & 1;
> #line 2148
23176c23166
< #line 2149
---
> #line 2150
23183c23173
< #line 2155
---
> #line 2156
23185c23175
< #line 2155
---
> #line 2156
23187,23188d23176
< #line 2155
<   printk("<3>%s %s: Configuration error.\n", tmp___0, tmp);
23189a23178,23179
>   printk("<3>%s %s: Configuration error.\n", tmp___0, tmp);
> #line 2157
23192c23182
< #line 2158
---
> #line 2159
23195,23196d23184
< #line 2160
<   hg = drbd_asb_recover_0p(mdev);
23198c23186
<   if (hg == -1 && (unsigned int )*((unsigned char *)mdev + 1804UL) == 2U) {
---
>   hg = drbd_asb_recover_0p(mdev);
23199a23188,23189
>   if (hg == -1 && (unsigned int )*((unsigned char *)mdev + 1804UL) == 2U) {
> #line 2163
23204,23205d23193
< #line 2163
<   if (hg == 1 && (unsigned int )*((unsigned char *)mdev + 1804UL) == 1U) {
23206a23195,23196
>   if (hg == 1 && (unsigned int )*((unsigned char *)mdev + 1804UL) == 1U) {
> #line 2165
23211c23201
< #line 2165
---
> #line 2166
23214,23215d23203
< #line 2167
<   rv = drbd_asb_recover_0p(mdev);
23216a23205,23206
>   rv = drbd_asb_recover_0p(mdev);
> #line 2169
23219c23209
< #line 2170
---
> #line 2171
23222,23223d23211
< #line 2172
<   hg = drbd_asb_recover_0p(mdev);
23225c23213
<   if (hg == -1 && (unsigned int )*((unsigned char *)mdev + 1804UL) == 1U) {
---
>   hg = drbd_asb_recover_0p(mdev);
23226a23215,23216
>   if (hg == -1 && (unsigned int )*((unsigned char *)mdev + 1804UL) == 1U) {
> #line 2175
23228c23218
< #line 2178
---
> #line 2179
23230c23220
< #line 2178
---
> #line 2179
23232c23222
< #line 2178
---
> #line 2179
23234c23224
< #line 2178
---
> #line 2179
23236,23237d23225
< #line 2178
<     self = drbd_change_state(mdev, CS_VERBOSE, mask, val);
23239c23227
<     if (self != 1) {
---
>     self = drbd_change_state(mdev, CS_VERBOSE, mask, val);
23240a23229,23230
>     if (self != 1) {
> #line 2181
23243c23233
< #line 2182
---
> #line 2183
23245c23235
< #line 2182
---
> #line 2183
23247,23248d23236
< #line 2182
<       printk("<4>%s %s: Successfully gave up primary role.\n", tmp___2, tmp___1);
23249a23238,23239
>       printk("<4>%s %s: Successfully gave up primary role.\n", tmp___2, tmp___1);
> #line 2184
23253c23243
< #line 2186
---
> #line 2187
23258c23248
< #line 2189
---
> #line 2190
23262c23252
< #line 2192 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2193 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
23277c23267
< #line 2194
---
> #line 2195
23279,23280d23268
< #line 2196
<   self = (int )(mdev->ldev)->md.uuid[1] & 1;
23281a23270,23271
>   self = (int )(mdev->ldev)->md.uuid[1] & 1;
> #line 2198
23283c23273
< #line 2199
---
> #line 2200
23292c23282
< #line 2207
---
> #line 2208
23294c23284
< #line 2207
---
> #line 2208
23296,23297d23285
< #line 2207
<   printk("<3>%s %s: Configuration error.\n", tmp___0, tmp);
23298a23287,23288
>   printk("<3>%s %s: Configuration error.\n", tmp___0, tmp);
> #line 2209
23301,23302d23290
< #line 2210
<   rv = drbd_asb_recover_0p(mdev);
23303a23292,23293
>   rv = drbd_asb_recover_0p(mdev);
> #line 2212
23306c23296
< #line 2213
---
> #line 2214
23309,23310d23298
< #line 2215
<   hg = drbd_asb_recover_0p(mdev);
23311a23300,23301
>   hg = drbd_asb_recover_0p(mdev);
> #line 2217
23313c23303
< #line 2220
---
> #line 2221
23315c23305
< #line 2220
---
> #line 2221
23317c23307
< #line 2220
---
> #line 2221
23319c23309
< #line 2220
---
> #line 2221
23321,23322d23310
< #line 2220
<     self = drbd_change_state(mdev, CS_VERBOSE, mask, val);
23324c23312
<     if (self != 1) {
---
>     self = drbd_change_state(mdev, CS_VERBOSE, mask, val);
23325a23314,23315
>     if (self != 1) {
> #line 2223
23328c23318
< #line 2224
---
> #line 2225
23330c23320
< #line 2224
---
> #line 2225
23332,23333d23321
< #line 2224
<       printk("<4>%s %s: Successfully gave up primary role.\n", tmp___2, tmp___1);
23334a23323,23324
>       printk("<4>%s %s: Successfully gave up primary role.\n", tmp___2, tmp___1);
> #line 2226
23338c23328
< #line 2228
---
> #line 2229
23343c23333
< #line 2231
---
> #line 2232
23347c23337
< #line 2234 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2235 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
23357,23358d23346
< #line 2237
<   if ((unsigned long )uuid == (unsigned long )((u64 *)0)) {
23359a23348,23349
>   if ((unsigned long )uuid == (unsigned long )((u64 *)0)) {
> #line 2239
23361c23351
< #line 2238
---
> #line 2239
23363c23353
< #line 2238
---
> #line 2239
23366c23356
< #line 2239
---
> #line 2240
23371c23361
< #line 2241
---
> #line 2242
23373c23363
< #line 2241
---
> #line 2242
23375c23365
< #line 2241
---
> #line 2242
23379c23369
< #line 2242
---
> #line 2243
23383c23373
< #line 2261 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2262 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
23409,23410d23398
< #line 2266
<   self = (mdev->ldev)->md.uuid[0] & 0xfffffffffffffffeULL;
23411a23400,23401
>   self = (mdev->ldev)->md.uuid[0] & 0xfffffffffffffffeULL;
> #line 2268
23413,23414d23402
< #line 2269
<   *rule_nr = 10;
23416c23404
<   if (self == 4ULL && peer == 4ULL) {
---
>   *rule_nr = 10;
23417a23406,23407
>   if (self == 4ULL && peer == 4ULL) {
> #line 2272
23422,23423d23411
< #line 2273
<   *rule_nr = 20;
23424a23413,23414
>   *rule_nr = 20;
> #line 2275
23426c23416
< #line 2276
---
> #line 2277
23431,23432d23420
< #line 2278
<   *rule_nr = 30;
23433a23422,23423
>   *rule_nr = 30;
> #line 2280
23435c23425
< #line 2281
---
> #line 2282
23440c23430
< #line 2283
---
> #line 2284
23442c23432
< #line 2286
---
> #line 2287
23444,23445d23433
< #line 2288
<       if (mdev->agreed_pro_version <= 90) {
23446a23435,23436
>       if (mdev->agreed_pro_version <= 90) {
> #line 2290
23451c23441
< #line 2291
---
> #line 2292
23453c23443
< #line 2293
---
> #line 2294
23455c23445
< #line 2293
---
> #line 2294
23457c23447
< #line 2293
---
> #line 2294
23460c23450
< #line 2294
---
> #line 2295
23462c23452
< #line 2296
---
> #line 2297
23464c23454
< #line 2296
---
> #line 2297
23466c23456
< #line 2296
---
> #line 2297
23469c23459
< #line 2296
---
> #line 2297
23472c23462
< #line 2296
---
> #line 2297
23475c23465
< #line 2298
---
> #line 2299
23478c23468
< #line 2300
---
> #line 2301
23480c23470
< #line 2300
---
> #line 2301
23482c23472
< #line 2300
---
> #line 2301
23485c23475
< #line 2301
---
> #line 2302
23488c23478
< #line 2304
---
> #line 2305
23493c23483
< #line 2307
---
> #line 2308
23495,23496d23484
< #line 2309
<       if (mdev->agreed_pro_version <= 90) {
23497a23486,23487
>       if (mdev->agreed_pro_version <= 90) {
> #line 2311
23502c23492
< #line 2312
---
> #line 2313
23504c23494
< #line 2314
---
> #line 2315
23506c23496
< #line 2314
---
> #line 2315
23508c23498
< #line 2314
---
> #line 2315
23511,23512d23500
< #line 2316
<         *(mdev->p_uuid + 3UL) = *(mdev->p_uuid + 2UL);
23514c23502
<         *(mdev->p_uuid + 2UL) = *(mdev->p_uuid + 1UL);
---
>         *(mdev->p_uuid + 3UL) = *(mdev->p_uuid + 2UL);
23515a23504,23505
>         *(mdev->p_uuid + 2UL) = *(mdev->p_uuid + 1UL);
> #line 2319
23517c23507
< #line 2320
---
> #line 2321
23520c23510
< #line 2321
---
> #line 2322
23523c23513
< #line 2323
---
> #line 2324
23525c23515
< #line 2323
---
> #line 2324
23527c23517
< #line 2323
---
> #line 2324
23530c23520
< #line 2324
---
> #line 2325
23533c23523
< #line 2327
---
> #line 2328
23538c23528
< #line 2331
---
> #line 2332
23540c23530
< #line 2331
---
> #line 2332
23542c23532
< #line 2335
---
> #line 2336
23544c23534
< #line 2337
---
> #line 2338
23547c23537
< #line 2338
---
> #line 2339
23550c23540
< #line 2339
---
> #line 2340
23553c23543
< #line 2340
---
> #line 2341
23556,23557d23545
< #line 2342
<     dc = constant_test_bit(7U, (unsigned long const volatile   *)(& mdev->flags));
23558a23547,23548
>     dc = constant_test_bit(7U, (unsigned long const volatile   *)(& mdev->flags));
> #line 2344
23564,23565d23553
< #line 2347
<   *rule_nr = 50;
23567c23555
<   peer = *(mdev->p_uuid + 1UL) & 0xfffffffffffffffeULL;
---
>   *rule_nr = 50;
23569c23557
<   if (self == peer) {
---
>   peer = *(mdev->p_uuid + 1UL) & 0xfffffffffffffffeULL;
23570a23559,23560
>   if (self == peer) {
> #line 2351
23575,23576d23564
< #line 2352
<   *rule_nr = 51;
23578c23566
<   peer = *(mdev->p_uuid + 2UL) & 0xfffffffffffffffeULL;
---
>   *rule_nr = 51;
23580c23568
<   if (self == peer) {
---
>   peer = *(mdev->p_uuid + 2UL) & 0xfffffffffffffffeULL;
23582c23570
<     self = (mdev->ldev)->md.uuid[2] & 0xfffffffffffffffeULL;
---
>   if (self == peer) {
23584c23572
<     peer = *(mdev->p_uuid + 3UL) & 0xfffffffffffffffeULL;
---
>     self = (mdev->ldev)->md.uuid[2] & 0xfffffffffffffffeULL;
23585a23574,23575
>     peer = *(mdev->p_uuid + 3UL) & 0xfffffffffffffffeULL;
> #line 2358
23587,23588d23576
< #line 2361
<       if (mdev->agreed_pro_version <= 90) {
23589a23578,23579
>       if (mdev->agreed_pro_version <= 90) {
> #line 2363
23594,23595d23583
< #line 2364
<       *(mdev->p_uuid + 1UL) = *(mdev->p_uuid + 2UL);
23597c23585
<       *(mdev->p_uuid + 2UL) = *(mdev->p_uuid + 3UL);
---
>       *(mdev->p_uuid + 1UL) = *(mdev->p_uuid + 2UL);
23598a23587,23588
>       *(mdev->p_uuid + 2UL) = *(mdev->p_uuid + 3UL);
> #line 2367
23606,23607d23595
< #line 2370
<   *rule_nr = 60;
23609c23597
<   self = (mdev->ldev)->md.uuid[0] & 0xfffffffffffffffeULL;
---
>   *rule_nr = 60;
23610a23599,23600
>   self = (mdev->ldev)->md.uuid[0] & 0xfffffffffffffffeULL;
> #line 2373
23612c23602
< #line 2372
---
> #line 2373
23615,23616d23604
< #line 2373
<   peer = *(mdev->p_uuid + (unsigned long )i) & 0xfffffffffffffffeULL;
23618c23606
<   if (self == peer) {
---
>   peer = *(mdev->p_uuid + (unsigned long )i) & 0xfffffffffffffffeULL;
23619a23608,23609
>   if (self == peer) {
> #line 2376
23624c23614
< #line 2372
---
> #line 2373
23627,23628d23616
< #line 2372
<   if (i <= 3) {
23629a23618,23619
>   if (i <= 3) {
> #line 2374
23634,23635d23623
< #line 2378
<   *rule_nr = 70;
23637c23625
<   self = (mdev->ldev)->md.uuid[1] & 0xfffffffffffffffeULL;
---
>   *rule_nr = 70;
23639c23627
<   peer = *(mdev->p_uuid) & 0xfffffffffffffffeULL;
---
>   self = (mdev->ldev)->md.uuid[1] & 0xfffffffffffffffeULL;
23641c23629
<   if (self == peer) {
---
>   peer = *(mdev->p_uuid) & 0xfffffffffffffffeULL;
23642a23631,23632
>   if (self == peer) {
> #line 2383
23647,23648d23636
< #line 2384
<   *rule_nr = 71;
23650c23638
<   self = (mdev->ldev)->md.uuid[2] & 0xfffffffffffffffeULL;
---
>   *rule_nr = 71;
23652c23640
<   if (self == peer) {
---
>   self = (mdev->ldev)->md.uuid[2] & 0xfffffffffffffffeULL;
23654c23642
<     self = (mdev->ldev)->md.uuid[3] & 0xfffffffffffffffeULL;
---
>   if (self == peer) {
23656c23644
<     peer = *(mdev->p_uuid + 2UL) & 0xfffffffffffffffeULL;
---
>     self = (mdev->ldev)->md.uuid[3] & 0xfffffffffffffffeULL;
23657a23646,23647
>     peer = *(mdev->p_uuid + 2UL) & 0xfffffffffffffffeULL;
> #line 2390
23659,23660d23648
< #line 2393
<       if (mdev->agreed_pro_version <= 90) {
23661a23650,23651
>       if (mdev->agreed_pro_version <= 90) {
> #line 2395
23666,23667d23655
< #line 2396
<       _drbd_uuid_set(mdev, 1, (mdev->ldev)->md.uuid[2]);
23668a23657,23658
>       _drbd_uuid_set(mdev, 1, (mdev->ldev)->md.uuid[2]);
> #line 2398
23670c23660
< #line 2399
---
> #line 2400
23672c23662
< #line 2399
---
> #line 2400
23674c23664
< #line 2399
---
> #line 2400
23676c23666
< #line 2401
---
> #line 2402
23678c23668
< #line 2401
---
> #line 2402
23680c23670
< #line 2401
---
> #line 2402
23683c23673
< #line 2401
---
> #line 2402
23686c23676
< #line 2401
---
> #line 2402
23689c23679
< #line 2404
---
> #line 2405
23697,23698d23686
< #line 2409
<   *rule_nr = 80;
23700c23688
<   peer = *(mdev->p_uuid) & 0xfffffffffffffffeULL;
---
>   *rule_nr = 80;
23701a23690,23691
>   peer = *(mdev->p_uuid) & 0xfffffffffffffffeULL;
> #line 2412
23703c23693
< #line 2411
---
> #line 2412
23706,23707d23695
< #line 2412
<   self = (mdev->ldev)->md.uuid[i] & 0xfffffffffffffffeULL;
23709c23697
<   if (self == peer) {
---
>   self = (mdev->ldev)->md.uuid[i] & 0xfffffffffffffffeULL;
23710a23699,23700
>   if (self == peer) {
> #line 2415
23715c23705
< #line 2411
---
> #line 2412
23718,23719d23707
< #line 2411
<   if (i <= 3) {
23720a23709,23710
>   if (i <= 3) {
> #line 2413
23725,23726d23714
< #line 2417
<   *rule_nr = 90;
23728c23716
<   self = (mdev->ldev)->md.uuid[1] & 0xfffffffffffffffeULL;
---
>   *rule_nr = 90;
23730c23718
<   peer = *(mdev->p_uuid + 1UL) & 0xfffffffffffffffeULL;
---
>   self = (mdev->ldev)->md.uuid[1] & 0xfffffffffffffffeULL;
23732c23720
<   if (self == peer && self != 0ULL) {
---
>   peer = *(mdev->p_uuid + 1UL) & 0xfffffffffffffffeULL;
23733a23722,23723
>   if (self == peer && self != 0ULL) {
> #line 2422
23738,23739d23727
< #line 2423
<   *rule_nr = 100;
23740a23729,23730
>   *rule_nr = 100;
> #line 2425
23742c23732
< #line 2424
---
> #line 2425
23745,23746d23734
< #line 2425
<   self = (mdev->ldev)->md.uuid[i] & 0xfffffffffffffffeULL;
23747a23736,23737
>   self = (mdev->ldev)->md.uuid[i] & 0xfffffffffffffffeULL;
> #line 2427
23749c23739
< #line 2426
---
> #line 2427
23752,23753d23741
< #line 2427
<   peer = *(mdev->p_uuid + (unsigned long )j) & 0xfffffffffffffffeULL;
23755c23743
<   if (self == peer) {
---
>   peer = *(mdev->p_uuid + (unsigned long )j) & 0xfffffffffffffffeULL;
23756a23745,23746
>   if (self == peer) {
> #line 2430
23761c23751
< #line 2426
---
> #line 2427
23764,23765d23753
< #line 2426
<   if (j <= 3) {
23766a23755,23756
>   if (j <= 3) {
> #line 2428
23771c23761
< #line 2424
---
> #line 2425
23774,23775d23763
< #line 2424
<   if (i <= 3) {
23776a23765,23766
>   if (i <= 3) {
> #line 2426
23782c23772
< #line 2433
---
> #line 2434
23786c23776
< #line 2439 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2440 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
23835c23825
< #line 2443
---
> #line 2444
23837,23838d23826
< #line 2446
<   mydisk = (enum drbd_disk_state )mdev->state.ldv_32636.disk;
23840c23828
<   if ((unsigned int )mydisk == 3U) {
---
>   mydisk = (enum drbd_disk_state )mdev->state.ldv_32636.disk;
23841a23830,23831
>   if ((unsigned int )mydisk == 3U) {
> #line 2449
23846c23836
< #line 2450
---
> #line 2451
23848c23838
< #line 2450
---
> #line 2451
23850,23851d23839
< #line 2450
<   printk("<6>%s %s: drbd_sync_handshake:\n", tmp___0, tmp);
23852a23841,23842
>   printk("<6>%s %s: drbd_sync_handshake:\n", tmp___0, tmp);
> #line 2452
23855c23845
< #line 2452
---
> #line 2453
23857c23847
< #line 2455
---
> #line 2456
23859c23849
< #line 2457
---
> #line 2458
23861c23851
< #line 2457
---
> #line 2458
23863c23853
< #line 2457
---
> #line 2458
23865,23866d23854
< #line 2459
<   if (hg == -1000) {
23867a23856,23857
>   if (hg == -1000) {
> #line 2461
23869c23859
< #line 2460
---
> #line 2461
23871,23872d23860
< #line 2460
<     printk("<1>%s %s: Unrelated data, aborting!\n", tmp___4, tmp___3);
23873a23862,23863
>     printk("<1>%s %s: Unrelated data, aborting!\n", tmp___4, tmp___3);
> #line 2462
23878,23879d23867
< #line 2463
<   if (hg == -1001) {
23880a23869,23870
>   if (hg == -1001) {
> #line 2465
23882c23872
< #line 2464
---
> #line 2465
23884c23874
< #line 2464
---
> #line 2465
23887c23877
< #line 2465
---
> #line 2466
23892c23882
< #line 2468
---
> #line 2469
23894c23884
< #line 2470
---
> #line 2471
23896c23886
< #line 2470
---
> #line 2471
23899c23889
< #line 2470
---
> #line 2471
23901c23891
< #line 2470
---
> #line 2471
23903c23893
< #line 2470
---
> #line 2471
23906c23896
< #line 2470
---
> #line 2471
23910,23911d23899
< #line 2470
<     f = tmp___7;
23913c23901
<     hg = (unsigned int )mydisk > 4U ? 1 : -1;
---
>     f = tmp___7;
23915c23903
<     if (f != 0) {
---
>     hg = (unsigned int )mydisk > 4U ? 1 : -1;
23916a23905,23906
>     if (f != 0) {
> #line 2474
23921c23911
< #line 2474
---
> #line 2475
23923c23913
< #line 2474
---
> #line 2475
23925c23915
< #line 2474
---
> #line 2475
23930,23931d23919
< #line 2478
<   if (hg == 100 || (hg == -100 && (unsigned int )*((unsigned char *)mdev->net_conf + 528UL) != 0U)) {
23932a23921,23922
>   if (hg == 100 || (hg == -100 && (unsigned int )*((unsigned char *)mdev->net_conf + 528UL) != 0U)) {
> #line 2480
23934c23924
< #line 2481
---
> #line 2482
23936c23926
< #line 2483
---
> #line 2484
23939,23940d23928
< #line 2485
<     hg = drbd_asb_recover_0p(mdev);
23941a23930,23931
>     hg = drbd_asb_recover_0p(mdev);
> #line 2487
23944,23945d23933
< #line 2488
<     hg = drbd_asb_recover_1p(mdev);
23946a23935,23936
>     hg = drbd_asb_recover_1p(mdev);
> #line 2490
23949,23950d23938
< #line 2491
<     hg = drbd_asb_recover_2p(mdev);
23951a23940,23941
>     hg = drbd_asb_recover_2p(mdev);
> #line 2493
23955c23945
< #line 2494
---
> #line 2495
23957,23958d23946
< #line 2494
<     if ((__x___0 < 0L ? - __x___0 : __x___0) <= 99L) {
23959a23948,23949
>     if ((__x___0 < 0L ? - __x___0 : __x___0) <= 99L) {
> #line 2496
23961c23951
< #line 2495
---
> #line 2496
23963c23953
< #line 2495
---
> #line 2496
23966,23967d23955
< #line 2498
<       if (forced != 0) {
23968a23957,23958
>       if (forced != 0) {
> #line 2500
23970c23960
< #line 2499
---
> #line 2500
23972c23962
< #line 2499
---
> #line 2500
23975c23965
< #line 2501
---
> #line 2502
23986,23987d23975
< #line 2506
<   if (hg == -100) {
23989c23977
<     if ((unsigned int )*((unsigned char *)mdev->net_conf + 528UL) != 0U && (*(mdev->p_uuid + 5UL) & 1ULL) == 0ULL) {
---
>   if (hg == -100) {
23990a23979,23980
>     if ((unsigned int )*((unsigned char *)mdev->net_conf + 528UL) != 0U && (*(mdev->p_uuid + 5UL) & 1ULL) == 0ULL) {
> #line 2509
23995,23996d23984
< #line 2509
<     if ((unsigned int )*((unsigned char *)mdev->net_conf + 528UL) == 0U && (int )*(mdev->p_uuid + 5UL) & 1) {
23997a23986,23987
>     if ((unsigned int )*((unsigned char *)mdev->net_conf + 528UL) == 0U && (int )*(mdev->p_uuid + 5UL) & 1) {
> #line 2511
24002c23992
< #line 2512
---
> #line 2513
24004,24005d23993
< #line 2512
<     if ((__x___1 < 0L ? - __x___1 : __x___1) <= 99L) {
24006a23995,23996
>     if ((__x___1 < 0L ? - __x___1 : __x___1) <= 99L) {
> #line 2514
24008c23998
< #line 2513
---
> #line 2514
24010c24000
< #line 2513
---
> #line 2514
24019,24020d24008
< #line 2518
<   if (hg == -100) {
24021a24010,24011
>   if (hg == -100) {
> #line 2520
24023c24013
< #line 2519
---
> #line 2520
24025,24026d24014
< #line 2519
<     printk("<1>%s %s: Split-Brain detected, dropping connection!\n", tmp___17, tmp___16);
24028c24016
<     drbd_khelper(mdev, (char *)"split-brain");
---
>     printk("<1>%s %s: Split-Brain detected, dropping connection!\n", tmp___17, tmp___16);
24029a24018,24019
>     drbd_khelper(mdev, (char *)"split-brain");
> #line 2522
24034,24035d24023
< #line 2524
<   if (hg > 0 && (unsigned int )mydisk <= 4U) {
24036a24025,24026
>   if (hg > 0 && (unsigned int )mydisk <= 4U) {
> #line 2526
24038c24028
< #line 2525
---
> #line 2526
24040c24030
< #line 2525
---
> #line 2526
24043c24033
< #line 2526
---
> #line 2527
24048c24038
< #line 2529
---
> #line 2530
24050c24040
< #line 2531
---
> #line 2532
24053c24043
< #line 2533
---
> #line 2534
24056c24046
< #line 2536
---
> #line 2537
24058c24048
< #line 2536
---
> #line 2537
24060,24061d24049
< #line 2536
<     printk("<3>%s %s: I shall become SyncTarget, but I am primary!\n", tmp___21, tmp___20);
24062a24051,24052
>     printk("<3>%s %s: I shall become SyncTarget, but I am primary!\n", tmp___21, tmp___20);
> #line 2538
24065c24055
< #line 2539
---
> #line 2540
24067c24057
< #line 2539
---
> #line 2540
24069c24059
< #line 2539
---
> #line 2540
24076c24066
< #line 2544
---
> #line 2545
24078,24079d24067
< #line 2544
<   if ((__x___2 < 0L ? - __x___2 : __x___2) > 1L) {
24080a24069,24070
>   if ((__x___2 < 0L ? - __x___2 : __x___2) > 1L) {
> #line 2546
24082c24072
< #line 2545
---
> #line 2546
24084c24074
< #line 2545
---
> #line 2546
24087c24077
< #line 2546
---
> #line 2547
24089,24090d24078
< #line 2546
<     if (tmp___26 != 0) {
24091a24080,24081
>     if (tmp___26 != 0) {
> #line 2548
24099,24100d24088
< #line 2550
<   if (hg > 0) {
24101a24090,24091
>   if (hg > 0) {
> #line 2552
24104,24105d24093
< #line 2552
<   if (hg < 0) {
24106a24095,24096
>   if (hg < 0) {
> #line 2554
24109,24110d24098
< #line 2555
<     rv = C_CONNECTED;
24111a24100,24101
>     rv = C_CONNECTED;
> #line 2557
24113,24114d24102
< #line 2556
<     if (tmp___30 != 0UL) {
24115a24104,24105
>     if (tmp___30 != 0UL) {
> #line 2558
24117c24107
< #line 2557
---
> #line 2558
24119c24109
< #line 2557
---
> #line 2558
24121c24111
< #line 2557
---
> #line 2558
24128c24118
< #line 2562
---
> #line 2563
24132c24122
< #line 2566 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2567 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
24138c24128
< #line 2569
---
> #line 2570
24140c24130
< #line 2571
---
> #line 2572
24145c24135
< #line 2574
---
> #line 2575
24147c24137
< #line 2576
---
> #line 2577
24152,24153d24141
< #line 2579
<   if ((unsigned int )peer == (unsigned int )self) {
24154a24143,24144
>   if ((unsigned int )peer == (unsigned int )self) {
> #line 2581
24159c24149
< #line 2583
---
> #line 2584
24163c24153
< #line 2586 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2587 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
24210c24200
< #line 2588
---
> #line 2589
24212c24202
< #line 2592
---
> #line 2593
24214c24204
< #line 2592
---
> #line 2593
24216c24206
< #line 2592
---
> #line 2593
24218c24208
< #line 2592
---
> #line 2593
24220c24210
< #line 2592
---
> #line 2593
24225c24215
< #line 2592
---
> #line 2593
24227c24217
< #line 2592
---
> #line 2593
24230,24231d24219
< #line 2594
<   header_size = 24;
24232a24221,24222
>   header_size = 24;
> #line 2596
24234c24224
< #line 2597
---
> #line 2598
24236,24237d24225
< #line 2597
<   if (tmp___0 != header_size) {
24238a24227,24228
>   if (tmp___0 != header_size) {
> #line 2599
24243c24233
< #line 2600
---
> #line 2601
24245,24246d24234
< #line 2600
<   p_proto = (int )tmp___1;
24247a24236,24237
>   p_proto = (int )tmp___1;
> #line 2602
24249,24250d24238
< #line 2601
<   p_after_sb_0p = (int )tmp___2;
24251a24240,24241
>   p_after_sb_0p = (int )tmp___2;
> #line 2603
24253,24254d24242
< #line 2602
<   p_after_sb_1p = (int )tmp___3;
24255a24244,24245
>   p_after_sb_1p = (int )tmp___3;
> #line 2604
24257,24258d24246
< #line 2603
<   p_after_sb_2p = (int )tmp___4;
24259a24248,24249
>   p_after_sb_2p = (int )tmp___4;
> #line 2605
24261,24262d24250
< #line 2604
<   p_want_lose = (int )tmp___5;
24263a24252,24253
>   p_want_lose = (int )tmp___5;
> #line 2606
24265c24255
< #line 2605
---
> #line 2606
24267,24268d24256
< #line 2607
<   if ((mdev->net_conf)->wire_protocol != p_proto) {
24269a24258,24259
>   if ((mdev->net_conf)->wire_protocol != p_proto) {
> #line 2609
24271c24261
< #line 2608
---
> #line 2609
24273,24274d24262
< #line 2608
<     printk("<3>%s %s: incompatible communication protocols\n", tmp___8, tmp___7);
24275a24264,24265
>     printk("<3>%s %s: incompatible communication protocols\n", tmp___8, tmp___7);
> #line 2610
24280c24270
< #line 2612
---
> #line 2613
24282,24283d24271
< #line 2612
<   if (tmp___11 != 0) {
24284a24273,24274
>   if (tmp___11 != 0) {
> #line 2614
24286c24276
< #line 2613
---
> #line 2614
24288,24289d24277
< #line 2613
<     printk("<3>%s %s: incompatible after-sb-0pri settings\n", tmp___10, tmp___9);
24290a24279,24280
>     printk("<3>%s %s: incompatible after-sb-0pri settings\n", tmp___10, tmp___9);
> #line 2615
24295c24285
< #line 2617
---
> #line 2618
24297,24298d24286
< #line 2617
<   if (tmp___14 != 0) {
24299a24288,24289
>   if (tmp___14 != 0) {
> #line 2619
24301c24291
< #line 2618
---
> #line 2619
24303,24304d24292
< #line 2618
<     printk("<3>%s %s: incompatible after-sb-1pri settings\n", tmp___13, tmp___12);
24305a24294,24295
>     printk("<3>%s %s: incompatible after-sb-1pri settings\n", tmp___13, tmp___12);
> #line 2620
24310c24300
< #line 2622
---
> #line 2623
24312,24313d24301
< #line 2622
<   if (tmp___17 != 0) {
24314a24303,24304
>   if (tmp___17 != 0) {
> #line 2624
24316c24306
< #line 2623
---
> #line 2624
24318,24319d24307
< #line 2623
<     printk("<3>%s %s: incompatible after-sb-2pri settings\n", tmp___16, tmp___15);
24320a24309,24310
>     printk("<3>%s %s: incompatible after-sb-2pri settings\n", tmp___16, tmp___15);
> #line 2625
24325,24326d24314
< #line 2627
<   if (p_want_lose != 0 && (unsigned int )*((unsigned char *)mdev->net_conf + 528UL) != 0U) {
24327a24316,24317
>   if (p_want_lose != 0 && (unsigned int )*((unsigned char *)mdev->net_conf + 528UL) != 0U) {
> #line 2629
24329c24319
< #line 2628
---
> #line 2629
24331,24332d24320
< #line 2628
<     printk("<3>%s %s: both sides have the \'want_lose\' flag set\n", tmp___19, tmp___18);
24333a24322,24323
>     printk("<3>%s %s: both sides have the \'want_lose\' flag set\n", tmp___19, tmp___18);
> #line 2630
24338,24339d24327
< #line 2632
<   if ((int )(mdev->net_conf)->two_primaries != p_two_primaries) {
24340a24329,24330
>   if ((int )(mdev->net_conf)->two_primaries != p_two_primaries) {
> #line 2634
24342c24332
< #line 2633
---
> #line 2634
24344c24334
< #line 2633
---
> #line 2634
24347c24337
< #line 2634
---
> #line 2635
24352,24353d24341
< #line 2637
<   if (mdev->agreed_pro_version > 86) {
24354a24343,24344
>   if (mdev->agreed_pro_version > 86) {
> #line 2639
24356c24346
< #line 2640
---
> #line 2641
24358,24359d24347
< #line 2640
<     if (tmp___22 != data_size) {
24360a24349,24350
>     if (tmp___22 != data_size) {
> #line 2642
24365,24366d24354
< #line 2643
<     p_integrity_alg[63] = 0;
24367a24356,24357
>     p_integrity_alg[63] = 0;
> #line 2645
24369,24370d24358
< #line 2644
<     if (tmp___25 != 0) {
24371a24360,24361
>     if (tmp___25 != 0) {
> #line 2646
24373c24363
< #line 2645
---
> #line 2646
24375c24365
< #line 2645
---
> #line 2646
24378c24368
< #line 2646
---
> #line 2647
24383c24373
< #line 2648
---
> #line 2649
24385c24375
< #line 2648
---
> #line 2649
24387c24377
< #line 2648
---
> #line 2649
24392c24382
< #line 2652
---
> #line 2653
24395c24385
< #line 2655
---
> #line 2656
24397c24387
< #line 2655
---
> #line 2656
24399c24389
< #line 2655
---
> #line 2656
24401c24391
< #line 2655
---
> #line 2656
24403,24404d24392
< #line 2655
<   drbd_force_state(mdev, mask, val);
24405a24394,24395
>   drbd_force_state(mdev, mask, val);
> #line 2657
24409c24399
< #line 2664 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2665 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
24425,24426d24414
< #line 2669
<   if ((int )((signed char )*alg) == 0) {
24427a24416,24417
>   if ((int )((signed char )*alg) == 0) {
> #line 2671
24432,24433d24421
< #line 2672
<   tfm = crypto_alloc_hash(alg, 0U, 128U);
24434a24423,24424
>   tfm = crypto_alloc_hash(alg, 0U, 128U);
> #line 2674
24436,24437d24425
< #line 2673
<   if (tmp___2 != 0L) {
24438a24427,24428
>   if (tmp___2 != 0L) {
> #line 2675
24440c24430
< #line 2674
---
> #line 2675
24442c24432
< #line 2674
---
> #line 2675
24444c24434
< #line 2674
---
> #line 2675
24447c24437
< #line 2676
---
> #line 2677
24452c24442
< #line 2678
---
> #line 2679
24454c24444
< #line 2678
---
> #line 2679
24456,24457d24445
< #line 2678
<   if (tmp___7 == 0) {
24459c24447
<     crypto_free_hash(tfm);
---
>   if (tmp___7 == 0) {
24460a24449,24450
>     crypto_free_hash(tfm);
> #line 2681
24462c24452
< #line 2680
---
> #line 2681
24464,24465d24453
< #line 2680
<     printk("<3>%s %s: \"%s\" is not a digest (%s)\n", tmp___4, tmp___3, alg, name);
24466a24455,24456
>     printk("<3>%s %s: \"%s\" is not a digest (%s)\n", tmp___4, tmp___3, alg, name);
> #line 2682
24468c24458
< #line 2681
---
> #line 2682
24473c24463
< #line 2683
---
> #line 2684
24477c24467
< #line 2686 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2687 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
24521,24522d24510
< #line 2688
<   ok = 1;
24523a24512,24513
>   ok = 1;
> #line 2690
24525,24526d24514
< #line 2691
<   verify_tfm = 0;
24528c24516
<   csums_tfm = 0;
---
>   verify_tfm = 0;
24529a24518,24519
>   csums_tfm = 0;
> #line 2694
24531c24521
< #line 2695
---
> #line 2696
24533,24534d24522
< #line 2700
<   if ((unsigned int )h->length > exp_max_sz) {
24535a24524,24525
>   if ((unsigned int )h->length > exp_max_sz) {
> #line 2702
24537c24527
< #line 2701
---
> #line 2702
24539c24529
< #line 2701
---
> #line 2702
24542c24532
< #line 2703
---
> #line 2704
24547,24548d24536
< #line 2706
<   if (apv <= 88) {
24550c24538
<     header_size = 4U;
---
>   if (apv <= 88) {
24551a24540,24541
>     header_size = 4U;
> #line 2709
24554,24555d24543
< #line 2710
<     header_size = 132U;
24557c24545
<     data_size = (unsigned int )h->length - header_size;
---
>     header_size = 132U;
24558a24547,24548
>     data_size = (unsigned int )h->length - header_size;
> #line 2713
24560c24550
< #line 2712
---
> #line 2713
24562c24552
< #line 2712
---
> #line 2713
24564c24554
< #line 2712
---
> #line 2713
24566c24556
<              2712);
---
>              2713);
24571c24561
< #line 2716
---
> #line 2717
24573c24563
< #line 2718
---
> #line 2719
24575,24576d24564
< #line 2718
<   if ((unsigned int )tmp___3 != header_size) {
24577a24566,24567
>   if ((unsigned int )tmp___3 != header_size) {
> #line 2720
24582c24572
< #line 2721
---
> #line 2722
24584c24574
< #line 2721
---
> #line 2722
24586,24587d24575
< #line 2723
<   if (apv > 87) {
24589c24577
<     if (apv == 88) {
---
>   if (apv > 87) {
24591c24579
<       if (data_size > 64U) {
---
>     if (apv == 88) {
24592a24581,24582
>       if (data_size > 64U) {
> #line 2727
24594c24584
< #line 2726
---
> #line 2727
24596c24586
< #line 2726
---
> #line 2727
24599c24589
< #line 2729
---
> #line 2730
24604c24594
< #line 2732
---
> #line 2733
24606,24607d24595
< #line 2732
<       if ((unsigned int )tmp___7 != data_size) {
24608a24597,24598
>       if ((unsigned int )tmp___7 != data_size) {
> #line 2734
24613c24603
< #line 2737
---
> #line 2738
24615c24605
< #line 2737
---
> #line 2738
24617c24607
< #line 2737
---
> #line 2738
24619c24609
< #line 2737
---
> #line 2738
24622c24612
<                2737);
---
>                2738);
24626c24616
< #line 2738
---
> #line 2739
24629c24619
< #line 2743
---
> #line 2744
24631c24621
< #line 2743
---
> #line 2744
24633c24623
< #line 2743
---
> #line 2744
24635c24625
< #line 2743
---
> #line 2744
24638c24628
<                2743);
---
>                2744);
24642c24632
< #line 2744
---
> #line 2745
24644c24634
< #line 2744
---
> #line 2745
24646c24636
< #line 2744
---
> #line 2745
24648c24638
< #line 2744
---
> #line 2745
24651c24641
<                2744);
---
>                2745);
24655,24656d24644
< #line 2745
<       p->verify_alg[63] = 0;
24657a24646,24647
>       p->verify_alg[63] = 0;
> #line 2747
24660c24650
< #line 2749
---
> #line 2750
24662,24663d24651
< #line 2749
<     if (tmp___17 != 0) {
24665c24653
<       if ((unsigned int )*((unsigned short *)mdev + 902UL) == 144U) {
---
>     if (tmp___17 != 0) {
24666a24655,24656
>       if ((unsigned int )*((unsigned short *)mdev + 902UL) == 144U) {
> #line 2752
24668c24658
< #line 2751
---
> #line 2752
24670c24660
< #line 2751
---
> #line 2752
24674c24664
< #line 2753
---
> #line 2754
24679c24669
< #line 2755
---
> #line 2756
24683c24673
< #line 2757
---
> #line 2758
24685,24686d24674
< #line 2757
<       if (tmp___16 != 0L) {
24688c24676
<         verify_tfm = 0;
---
>       if (tmp___16 != 0L) {
24689a24678,24679
>         verify_tfm = 0;
> #line 2760
24697c24687
< #line 2763
---
> #line 2764
24699c24689
< #line 2763
---
> #line 2764
24701,24702d24690
< #line 2763
<       if (tmp___21 != 0) {
24704c24692
<         if ((unsigned int )*((unsigned short *)mdev + 902UL) == 144U) {
---
>       if (tmp___21 != 0) {
24705a24694,24695
>         if ((unsigned int )*((unsigned short *)mdev + 902UL) == 144U) {
> #line 2766
24707c24697
< #line 2765
---
> #line 2766
24709c24699
< #line 2765
---
> #line 2766
24713c24703
< #line 2767
---
> #line 2768
24718c24708
< #line 2769
---
> #line 2770
24722c24712
< #line 2771
---
> #line 2772
24724,24725d24713
< #line 2771
<         if (tmp___20 != 0L) {
24727c24715
<           csums_tfm = 0;
---
>         if (tmp___20 != 0L) {
24728a24717,24718
>           csums_tfm = 0;
> #line 2774
24739c24729
< #line 2778
---
> #line 2779
24741,24742d24730
< #line 2780
<     if ((unsigned long )verify_tfm != (unsigned long )((struct crypto_hash *)0)) {
24744c24732
<       strcpy((char *)(& mdev->sync_conf.verify_alg), (char const   *)(& p->verify_alg));
---
>     if ((unsigned long )verify_tfm != (unsigned long )((struct crypto_hash *)0)) {
24745a24734,24735
>       strcpy((char *)(& mdev->sync_conf.verify_alg), (char const   *)(& p->verify_alg));
> #line 2783
24747,24748d24736
< #line 2782
<       mdev->sync_conf.verify_alg_len = (int )((unsigned int )tmp___22 + 1U);
24750c24738
<       crypto_free_hash(mdev->verify_tfm);
---
>       mdev->sync_conf.verify_alg_len = (int )((unsigned int )tmp___22 + 1U);
24752c24740
<       mdev->verify_tfm = verify_tfm;
---
>       crypto_free_hash(mdev->verify_tfm);
24753a24742,24743
>       mdev->verify_tfm = verify_tfm;
> #line 2786
24755c24745
< #line 2785
---
> #line 2786
24757c24747
< #line 2785
---
> #line 2786
24762,24763d24751
< #line 2787
<     if ((unsigned long )csums_tfm != (unsigned long )((struct crypto_hash *)0)) {
24765c24753
<       strcpy((char *)(& mdev->sync_conf.csums_alg), (char const   *)(& p->csums_alg));
---
>     if ((unsigned long )csums_tfm != (unsigned long )((struct crypto_hash *)0)) {
24766a24755,24756
>       strcpy((char *)(& mdev->sync_conf.csums_alg), (char const   *)(& p->csums_alg));
> #line 2790
24768,24769d24757
< #line 2789
<       mdev->sync_conf.csums_alg_len = (int )((unsigned int )tmp___25 + 1U);
24771c24759
<       crypto_free_hash(mdev->csums_tfm);
---
>       mdev->sync_conf.csums_alg_len = (int )((unsigned int )tmp___25 + 1U);
24773c24761
<       mdev->csums_tfm = csums_tfm;
---
>       crypto_free_hash(mdev->csums_tfm);
24774a24763,24764
>       mdev->csums_tfm = csums_tfm;
> #line 2793
24776c24766
< #line 2792
---
> #line 2793
24778c24768
< #line 2792
---
> #line 2793
24783c24773
< #line 2794
---
> #line 2795
24788c24778
< #line 2797
---
> #line 2798
24791c24781
< #line 2801
---
> #line 2802
24793,24794d24782
< #line 2803
<   crypto_free_hash(verify_tfm);
24795a24784,24785
>   crypto_free_hash(verify_tfm);
> #line 2805
24797c24787
< #line 2804
---
> #line 2805
24799c24789
< #line 2804
---
> #line 2805
24801c24791
< #line 2804
---
> #line 2805
24803,24804d24792
< #line 2804
<   drbd_force_state(mdev, mask, val);
24805a24794,24795
>   drbd_force_state(mdev, mask, val);
> #line 2806
24809c24799
< #line 2808 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2809 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
24815c24805
< #line 2810
---
> #line 2811
24819c24809
< #line 2815 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2816 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
24828,24829d24817
< #line 2819
<   if (a == 0UL || b == 0UL) {
24830a24819,24820
>   if (a == 0UL || b == 0UL) {
> #line 2821
24835,24836d24824
< #line 2821
<   d = a > b ? a - b : b - a;
24838c24826
<   if (a >> 3 < d || b >> 3 < d) {
---
>   d = a > b ? a - b : b - a;
24839a24828,24829
>   if (a >> 3 < d || b >> 3 < d) {
> #line 2824
24841c24831
< #line 2823
---
> #line 2824
24843c24833
< #line 2823
---
> #line 2824
24849c24839
< #line 2824
---
> #line 2825
24853c24843
< #line 2827 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2828 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
24906,24907d24895
< #line 2829
<   p = (struct p_sizes *)h;
24908a24897,24898
>   p = (struct p_sizes *)h;
> #line 2831
24910c24900
< #line 2833
---
> #line 2834
24912c24902
< #line 2836
---
> #line 2837
24914c24904
< #line 2836
---
> #line 2837
24916c24906
< #line 2836
---
> #line 2837
24918c24908
< #line 2836
---
> #line 2837
24920c24910
< #line 2836
---
> #line 2837
24923c24913
<            2836);
---
>            2837);
24927c24917
< #line 2836
---
> #line 2837
24929c24919
< #line 2836
---
> #line 2837
24934c24924
< #line 2837
---
> #line 2838
24936,24937d24925
< #line 2837
<   if (tmp___1 != (int )h->length) {
24938a24927,24928
>   if (tmp___1 != (int )h->length) {
> #line 2839
24943c24933
< #line 2840
---
> #line 2841
24945,24946d24934
< #line 2840
<   p_size = (sector_t )tmp___2;
24947a24936,24937
>   p_size = (sector_t )tmp___2;
> #line 2842
24949c24939
< #line 2841
---
> #line 2842
24951,24952d24940
< #line 2843
<   if (p_size == 0UL && (unsigned int )*((unsigned char *)mdev + 1805UL) == 0U) {
24953a24942,24943
>   if (p_size == 0UL && (unsigned int )*((unsigned char *)mdev + 1805UL) == 0U) {
> #line 2845
24955c24945
< #line 2844
---
> #line 2845
24957,24958d24946
< #line 2844
<     printk("<3>%s %s: some backing storage is needed\n", tmp___5, tmp___4);
24959a24948,24949
>     printk("<3>%s %s: some backing storage is needed\n", tmp___5, tmp___4);
> #line 2846
24961c24951
< #line 2845
---
> #line 2846
24963c24953
< #line 2845
---
> #line 2846
24965c24955
< #line 2845
---
> #line 2846
24967,24968d24956
< #line 2845
<     drbd_force_state(mdev, mask, val);
24969a24958,24959
>     drbd_force_state(mdev, mask, val);
> #line 2847
24974c24964
< #line 2851
---
> #line 2852
24976c24966
< #line 2854
---
> #line 2855
24978,24979d24967
< #line 2854
<   if (tmp___14 != 0) {
24980a24969,24970
>   if (tmp___14 != 0) {
> #line 2856
24982c24972
< #line 2855
---
> #line 2856
24984c24974
< #line 2857
---
> #line 2858
24986,24987d24975
< #line 2862
<     if ((unsigned int )*((unsigned short *)mdev + 902UL) == 144U) {
24988a24977,24978
>     if ((unsigned int )*((unsigned short *)mdev + 902UL) == 144U) {
> #line 2864
24990c24980
< #line 2863
---
> #line 2864
24992c24982
< #line 2863
---
> #line 2864
24995c24985
< #line 2863
---
> #line 2864
24997c24987
< #line 2863
---
> #line 2864
24999c24989
< #line 2863
---
> #line 2864
25002c24992
< #line 2863
---
> #line 2864
25005c24995
< #line 2863
---
> #line 2864
25011c25001
< #line 2866
---
> #line 2867
25013,25014d25002
< #line 2868
<     if ((mdev->ldev)->dc.disk_size != (unsigned long long )p_usize) {
25016c25004
<       (mdev->ldev)->dc.disk_size = (__u64 )p_usize;
---
>     if ((mdev->ldev)->dc.disk_size != (unsigned long long )p_usize) {
25017a25006,25007
>       (mdev->ldev)->dc.disk_size = (__u64 )p_usize;
> #line 2871
25019c25009
< #line 2870
---
> #line 2871
25021c25011
< #line 2870
---
> #line 2871
25026c25016
< #line 2876
---
> #line 2877
25028c25018
< #line 2876
---
> #line 2877
25030c25020
< #line 2876
---
> #line 2877
25032c25022
< #line 2880
---
> #line 2881
25034c25024
< #line 2880
---
> #line 2881
25036,25037d25025
< #line 2880
<       printk("<3>%s %s: The peer\'s disk size is too small!\n", tmp___11, tmp___10);
25038a25027,25028
>       printk("<3>%s %s: The peer\'s disk size is too small!\n", tmp___11, tmp___10);
> #line 2882
25040c25030
< #line 2881
---
> #line 2882
25042c25032
< #line 2881
---
> #line 2882
25044c25034
< #line 2881
---
> #line 2882
25046,25047d25035
< #line 2881
<       drbd_force_state(mdev, mask___0, val___0);
25049c25037
<       (mdev->ldev)->dc.disk_size = (__u64 )my_usize;
---
>       drbd_force_state(mdev, mask___0, val___0);
25051c25039
<       put_ldev(mdev);
---
>       (mdev->ldev)->dc.disk_size = (__u64 )my_usize;
25052a25041,25042
>       put_ldev(mdev);
> #line 2885
25057c25047
< #line 2886
---
> #line 2887
25062c25052
< #line 2890
---
> #line 2891
25064,25065d25053
< #line 2890
<   if (tmp___15 != 0) {
25067c25055
<     dd = drbd_determin_dev_size(mdev);
---
>   if (tmp___15 != 0) {
25069c25057
<     put_ldev(mdev);
---
>     dd = drbd_determin_dev_size(mdev);
25071c25059
<     if ((int )dd == -1) {
---
>     put_ldev(mdev);
25072a25061,25062
>     if ((int )dd == -1) {
> #line 2895
25077c25067
< #line 2895
---
> #line 2896
25080c25070
< #line 2898
---
> #line 2899
25083c25073
< #line 2901
---
> #line 2902
25085c25075
< #line 2901
---
> #line 2902
25087,25088d25076
< #line 2901
<     if (tmp___17 != 0) {
25089a25078,25079
>     if (tmp___17 != 0) {
> #line 2903
25092c25082
< #line 2904
---
> #line 2905
25094,25095d25083
< #line 2906
<       if ((unsigned int )nconn == 31U) {
25096a25085,25086
>       if ((unsigned int )nconn == 31U) {
> #line 2908
25098c25088
< #line 2907
---
> #line 2908
25100c25090
< #line 2907
---
> #line 2908
25102c25092
< #line 2907
---
> #line 2908
25104,25105d25093
< #line 2907
<         drbd_force_state(mdev, mask___1, val___1);
25106a25095,25096
>         drbd_force_state(mdev, mask___1, val___1);
> #line 2909
25111c25101
< #line 2911
---
> #line 2912
25113c25103
< #line 2911
---
> #line 2912
25115c25105
< #line 2911
---
> #line 2912
25117c25107
< #line 2911
---
> #line 2912
25119c25109
< #line 2911
---
> #line 2912
25121,25122d25110
< #line 2911
<       if (tmp___16 <= 0) {
25123a25112,25113
>       if (tmp___16 <= 0) {
> #line 2913
25125c25115
< #line 2912
---
> #line 2913
25127c25117
< #line 2912
---
> #line 2913
25129c25119
< #line 2912
---
> #line 2913
25131,25132d25120
< #line 2912
<         drbd_force_state(mdev, mask___2, val___2);
25133a25122,25123
>         drbd_force_state(mdev, mask___2, val___2);
> #line 2914
25144c25134
< #line 2917
---
> #line 2918
25146,25147d25135
< #line 2917
<   if (tmp___22 != 0) {
25148a25137,25138
>   if (tmp___22 != 0) {
> #line 2919
25150,25151d25139
< #line 2918
<     if ((mdev->ldev)->known_size != tmp___18) {
25153c25141
<       (mdev->ldev)->known_size = drbd_get_capacity((mdev->ldev)->backing_bdev);
---
>     if ((mdev->ldev)->known_size != tmp___18) {
25154a25143,25144
>       (mdev->ldev)->known_size = drbd_get_capacity((mdev->ldev)->backing_bdev);
> #line 2921
25159c25149
< #line 2923
---
> #line 2924
25161,25162d25150
< #line 2923
<     max_seg_s = tmp___19;
25163a25152,25153
>     max_seg_s = tmp___19;
> #line 2925
25165,25166d25154
< #line 2924
<     if (tmp___20 != max_seg_s) {
25167a25156,25157
>     if (tmp___20 != max_seg_s) {
> #line 2926
25172c25162
< #line 2927
---
> #line 2928
25174,25175d25163
< #line 2927
<     drbd_setup_order_type(mdev, (int )tmp___21);
25176a25165,25166
>     drbd_setup_order_type(mdev, (int )tmp___21);
> #line 2929
25181,25182d25170
< #line 2931
<   if ((int )mdev->state.ldv_32636.conn > 9) {
25183a25172,25173
>   if ((int )mdev->state.ldv_32636.conn > 9) {
> #line 2933
25185c25175
< #line 2932
---
> #line 2933
25187c25177
< #line 2932
---
> #line 2933
25189c25179
< #line 2936
---
> #line 2937
25194c25184
< #line 2938
---
> #line 2939
25196c25186
< #line 2938
---
> #line 2939
25198c25188
< #line 2940
---
> #line 2941
25200c25190
< #line 2942
---
> #line 2943
25203c25193
< #line 2944
---
> #line 2945
25212c25202
< #line 2948
---
> #line 2949
25216c25206
< #line 2951 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2952 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
25243c25233
< #line 2953
---
> #line 2954
25245c25235
< #line 2957
---
> #line 2958
25247c25237
< #line 2957
---
> #line 2958
25249c25239
< #line 2957
---
> #line 2958
25251c25241
< #line 2957
---
> #line 2958
25253c25243
< #line 2957
---
> #line 2958
25256c25246
<            2957);
---
>            2958);
25260c25250
< #line 2957
---
> #line 2958
25262c25252
< #line 2957
---
> #line 2958
25267c25257
< #line 2958
---
> #line 2959
25269,25270d25258
< #line 2958
<   if (tmp___1 != (int )h->length) {
25271a25260,25261
>   if (tmp___1 != (int )h->length) {
> #line 2960
25276c25266
< #line 2961
---
> #line 2962
25278c25268
< #line 2961
---
> #line 2962
25280c25270
< #line 2963
---
> #line 2964
25282c25272
< #line 2963
---
> #line 2964
25285c25275
< #line 2964
---
> #line 2965
25287c25277
< #line 2964
---
> #line 2965
25289c25279
< #line 2963
---
> #line 2964
25292,25293d25281
< #line 2963
<   if (i <= 5) {
25294a25283,25284
>   if (i <= 5) {
> #line 2965
25299,25300d25288
< #line 2966
<   kfree((void const   *)mdev->p_uuid);
25301a25290,25291
>   kfree((void const   *)mdev->p_uuid);
> #line 2968
25303c25293
< #line 2969
---
> #line 2970
25305c25295
< #line 2973
---
> #line 2974
25307c25297
< #line 2973
---
> #line 2974
25309c25299
< #line 2973
---
> #line 2974
25312c25302
< #line 2975
---
> #line 2976
25314c25304
< #line 2975
---
> #line 2976
25316c25306
< #line 2975
---
> #line 2976
25318c25308
< #line 2975
---
> #line 2976
25320,25321d25309
< #line 2975
<     drbd_force_state(mdev, mask, val);
25322a25311,25312
>     drbd_force_state(mdev, mask, val);
> #line 2977
25327c25317
< #line 2979
---
> #line 2980
25329,25330d25318
< #line 2979
<   if (tmp___8 != 0) {
25331a25320,25321
>   if (tmp___8 != 0) {
> #line 2981
25333,25334d25322
< #line 2985
<     if (skip_initial_sync != 0) {
25335a25324,25325
>     if (skip_initial_sync != 0) {
> #line 2987
25337c25327
< #line 2986
---
> #line 2987
25339c25329
< #line 2986
---
> #line 2987
25342c25332
< #line 2987
---
> #line 2988
25344,25345d25333
< #line 2989
<       _drbd_uuid_set(mdev, 0, *p_uuid);
25347c25335
<       _drbd_uuid_set(mdev, 1, 0ULL);
---
>       _drbd_uuid_set(mdev, 0, *p_uuid);
25348a25337,25338
>       _drbd_uuid_set(mdev, 1, 0ULL);
> #line 2992
25350c25340
< #line 2991
---
> #line 2992
25352c25342
< #line 2991
---
> #line 2992
25354c25344
< #line 2991
---
> #line 2992
25356c25346
< #line 2993
---
> #line 2994
25361c25351
< #line 2995
---
> #line 2996
25366c25356
< #line 3002
---
> #line 3003
25368c25358
< #line 3002
---
> #line 3003
25370c25360
< #line 3002
---
> #line 3003
25375c25365
< #line 3002
---
> #line 3003
25377c25367
< #line 3002
---
> #line 3003
25379c25369
< #line 3002
---
> #line 3003
25381c25371
< #line 3002
---
> #line 3003
25383c25373
< #line 3002
---
> #line 3003
25385c25375
< #line 3002
---
> #line 3003
25388c25378
< #line 3002
---
> #line 3003
25390c25380
< #line 3002
---
> #line 3003
25392c25382
< #line 3002
---
> #line 3003
25394c25384
< #line 3002
---
> #line 3003
25399c25389
< #line 3002
---
> #line 3003
25401c25391
< #line 3002
---
> #line 3003
25404c25394
< #line 3002
---
> #line 3003
25407,25408d25396
< #line 3003
<   if ((int )mdev->state.ldv_32636.conn > 9 && (int )mdev->state.ldv_32636.disk <= 3) {
25409a25398,25399
>   if ((int )mdev->state.ldv_32636.conn > 9 && (int )mdev->state.ldv_32636.disk <= 3) {
> #line 3005
25414c25404
< #line 3006
---
> #line 3007
25418c25408
< #line 3013 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3014 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
25425c25415
< #line 3017
---
> #line 3018
25427c25417
< #line 3017
---
> #line 3018
25429c25419
< #line 3017
---
> #line 3018
25431c25421
< #line 3017
---
> #line 3018
25433c25423
< #line 3017
---
> #line 3018
25435c25425
< #line 3017
---
> #line 3018
25437c25427
< #line 3017
---
> #line 3018
25439c25429
< #line 3017
---
> #line 3018
25441c25431
< #line 3017
---
> #line 3018
25443c25433
< #line 3017
---
> #line 3018
25445c25435
< #line 3017
---
> #line 3018
25447c25437
< #line 3017
---
> #line 3018
25449c25439
< #line 3017
---
> #line 3018
25451c25441
< #line 3017
---
> #line 3018
25453c25443
< #line 3017
---
> #line 3018
25455c25445
< #line 3017
---
> #line 3018
25457c25447
< #line 3017
---
> #line 3018
25459c25449
< #line 3017
---
> #line 3018
25461c25451
< #line 3017
---
> #line 3018
25463c25453
< #line 3017
---
> #line 3018
25465c25455
< #line 3017
---
> #line 3018
25467c25457
< #line 3017
---
> #line 3018
25469c25459
< #line 3017
---
> #line 3018
25471c25461
< #line 3017
---
> #line 3018
25473c25463
< #line 3017
---
> #line 3018
25475c25465
< #line 3017
---
> #line 3018
25477c25467
< #line 3017
---
> #line 3018
25479c25469
< #line 3017
---
> #line 3018
25481c25471
< #line 3017
---
> #line 3018
25483c25473
< #line 3017
---
> #line 3018
25485c25475
< #line 3017
---
> #line 3018
25487c25477
< #line 3017
---
> #line 3018
25489c25479
< #line 3027
---
> #line 3028
25491,25492d25480
< #line 3029
<   ms.ldv_32636.conn = (unsigned char )c_tab[(int )ps.ldv_32636.conn];
25494c25482
<   ms.ldv_32636.peer = ps.ldv_32636.role;
---
>   ms.ldv_32636.conn = (unsigned char )c_tab[(int )ps.ldv_32636.conn];
25496c25484
<   ms.ldv_32636.role = ps.ldv_32636.peer;
---
>   ms.ldv_32636.peer = ps.ldv_32636.role;
25498c25486
<   ms.ldv_32636.pdsk = ps.ldv_32636.disk;
---
>   ms.ldv_32636.role = ps.ldv_32636.peer;
25500c25488
<   ms.ldv_32636.disk = ps.ldv_32636.pdsk;
---
>   ms.ldv_32636.pdsk = ps.ldv_32636.disk;
25501a25490,25491
>   ms.ldv_32636.disk = ps.ldv_32636.pdsk;
> #line 3035
25503c25493
< #line 3036
---
> #line 3037
25507c25497
< #line 3039 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3040 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
25524c25514
< #line 3041
---
> #line 3042
25526c25516
< #line 3045
---
> #line 3046
25528c25518
< #line 3045
---
> #line 3046
25530c25520
< #line 3045
---
> #line 3046
25532c25522
< #line 3045
---
> #line 3046
25534c25524
< #line 3045
---
> #line 3046
25537c25527
<            3045);
---
>            3046);
25541c25531
< #line 3045
---
> #line 3046
25543c25533
< #line 3045
---
> #line 3046
25548c25538
< #line 3046
---
> #line 3047
25550,25551d25539
< #line 3046
<   if (tmp___1 != (int )h->length) {
25552a25541,25542
>   if (tmp___1 != (int )h->length) {
> #line 3048
25557c25547
< #line 3049
---
> #line 3050
25559,25560d25548
< #line 3049
<   mask.i = tmp___2;
25561a25550,25551
>   mask.i = tmp___2;
> #line 3051
25563c25553
< #line 3050
---
> #line 3051
25565c25555
< #line 3052
---
> #line 3053
25567c25557
< #line 3052
---
> #line 3053
25569c25559
< #line 3052
---
> #line 3053
25571c25561
< #line 3052
---
> #line 3053
25573,25574d25562
< #line 3054
<       drbd_send_sr_reply(mdev, -19);
25575a25564,25565
>       drbd_send_sr_reply(mdev, -19);
> #line 3056
25583,25584d25572
< #line 3058
<   mask = convert_state(mask);
25585a25574,25575
>   mask = convert_state(mask);
> #line 3060
25587c25577
< #line 3061
---
> #line 3062
25589,25590d25578
< #line 3063
<   drbd_send_sr_reply(mdev, rv);
25591a25580,25581
>   drbd_send_sr_reply(mdev, rv);
> #line 3065
25593c25583
< #line 3066
---
> #line 3067
25597c25587
< #line 3069 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3070 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
25630c25620
< #line 3071
---
> #line 3072
25632c25622
< #line 3077
---
> #line 3078
25634c25624
< #line 3077
---
> #line 3078
25636c25626
< #line 3077
---
> #line 3078
25638c25628
< #line 3077
---
> #line 3078
25640c25630
< #line 3077
---
> #line 3078
25643c25633
<            3077);
---
>            3078);
25647,25648d25636
< #line 3077
<   if (_b != 0) {
25649a25638,25639
>   if (_b != 0) {
> #line 3079
25654c25644
< #line 3080
---
> #line 3081
25656,25657d25645
< #line 3080
<   if (tmp___1 != (int )h->length) {
25658a25647,25648
>   if (tmp___1 != (int )h->length) {
> #line 3082
25663c25653
< #line 3083
---
> #line 3084
25665c25655
< #line 3083
---
> #line 3084
25667,25668d25656
< #line 3085
<   real_peer_disk = (enum drbd_disk_state )peer_state.ldv_32636.disk;
25670c25658
<   if ((unsigned int )*((unsigned char *)(& peer_state) + 1UL) == 6U) {
---
>   real_peer_disk = (enum drbd_disk_state )peer_state.ldv_32636.disk;
25672c25660
<     real_peer_disk = (*(mdev->p_uuid + 5UL) & 4ULL) != 0ULL ? D_INCONSISTENT : D_CONSISTENT;
---
>   if ((unsigned int )*((unsigned char *)(& peer_state) + 1UL) == 6U) {
25673a25662,25663
>     real_peer_disk = (*(mdev->p_uuid + 5UL) & 4ULL) != 0ULL ? D_INCONSISTENT : D_CONSISTENT;
> #line 3089
25675c25665
< #line 3088
---
> #line 3089
25677c25667
< #line 3088
---
> #line 3089
25679c25669
< #line 3088
---
> #line 3089
25684c25674
< #line 3091
---
> #line 3092
25687c25677
< #line 3093
---
> #line 3094
25689,25690d25678
< #line 3093
<   oconn = nconn;
25691a25680,25681
>   oconn = nconn;
> #line 3095
25693,25694d25682
< #line 3096
<   if ((unsigned int )nconn == 9U) {
25695a25684,25685
>   if ((unsigned int )nconn == 9U) {
> #line 3098
25700c25690
< #line 3099
---
> #line 3100
25702c25692
< #line 3099
---
> #line 3100
25704c25694
< #line 3099
---
> #line 3100
25706c25696
< #line 3104
---
> #line 3105
25708c25698
< #line 3107
---
> #line 3108
25710c25700
< #line 3112
---
> #line 3113
25712c25702
< #line 3112
---
> #line 3113
25714c25704
< #line 3115
---
> #line 3116
25716,25717d25705
< #line 3119
<       if (cr != 0) {
25718a25707,25708
>       if (cr != 0) {
> #line 3121
25724,25725d25713
< #line 3122
<       put_ldev(mdev);
25727c25715
<       if ((unsigned int )nconn == 31U) {
---
>       put_ldev(mdev);
25729c25717
<         if ((unsigned int )*((unsigned char *)mdev + 1805UL) == 6U) {
---
>       if ((unsigned int )nconn == 31U) {
25730a25719,25720
>         if ((unsigned int )*((unsigned char *)mdev + 1805UL) == 6U) {
> #line 3126
25732c25722
< #line 3125
---
> #line 3126
25734c25724
< #line 3125
---
> #line 3126
25736c25726
< #line 3125
---
> #line 3126
25738,25739d25727
< #line 3125
<           drbd_force_state(mdev, mask, val);
25740a25729,25730
>           drbd_force_state(mdev, mask, val);
> #line 3127
25743,25744d25732
< #line 3127
<         if ((unsigned int )*((unsigned char *)(& peer_state) + 1UL) == 6U) {
25745a25734,25735
>         if ((unsigned int )*((unsigned char *)(& peer_state) + 1UL) == 6U) {
> #line 3129
25747c25737
< #line 3128
---
> #line 3129
25749c25739
< #line 3128
---
> #line 3129
25752c25742
< #line 3129
---
> #line 3130
25755c25745
< #line 3131
---
> #line 3132
25757c25747
< #line 3131
---
> #line 3132
25759c25749
< #line 3131
---
> #line 3132
25761c25751
< #line 3131
---
> #line 3132
25764c25754
<                    3131);
---
>                    3132);
25768c25758
< #line 3132
---
> #line 3133
25770c25760
< #line 3132
---
> #line 3133
25772c25762
< #line 3132
---
> #line 3133
25774c25764
< #line 3132
---
> #line 3133
25776,25777d25765
< #line 3132
<           drbd_force_state(mdev, mask___0, val___0);
25778a25767,25768
>           drbd_force_state(mdev, mask___0, val___0);
> #line 3134
25790,25791d25779
< #line 3138
<   spin_lock_irq(& mdev->req_lock);
25793c25781
<   if ((unsigned int )mdev->state.ldv_32636.conn != (unsigned int )oconn) {
---
>   spin_lock_irq(& mdev->req_lock);
25794a25783,25784
>   if ((unsigned int )mdev->state.ldv_32636.conn != (unsigned int )oconn) {
> #line 3141
25799,25800d25788
< #line 3141
<   clear_bit(15, (unsigned long volatile   *)(& mdev->flags));
25802c25790
<   ns.i = mdev->state.i;
---
>   clear_bit(15, (unsigned long volatile   *)(& mdev->flags));
25804c25792
<   ns.ldv_32636.conn = (unsigned char )nconn;
---
>   ns.i = mdev->state.i;
25806c25794
<   ns.ldv_32636.peer = peer_state.ldv_32636.role;
---
>   ns.ldv_32636.conn = (unsigned char )nconn;
25808c25796
<   ns.ldv_32636.pdsk = (unsigned char )real_peer_disk;
---
>   ns.ldv_32636.peer = peer_state.ldv_32636.role;
25810c25798
<   ns.ldv_32636.peer_isp = (unsigned char )((int )peer_state.ldv_32636.aftr_isp | (int )peer_state.ldv_32636.user_isp);
---
>   ns.ldv_32636.pdsk = (unsigned char )real_peer_disk;
25812c25800
<   if (((unsigned int )nconn == 10U || (unsigned int )nconn == 13U) && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 6U) {
---
>   ns.ldv_32636.peer_isp = (unsigned char )((int )peer_state.ldv_32636.aftr_isp | (int )peer_state.ldv_32636.user_isp);
25813a25802,25803
>   if (((unsigned int )nconn == 10U || (unsigned int )nconn == 13U) && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 6U) {
> #line 3149
25818,25819d25807
< #line 3150
<   rv = _drbd_set_state(mdev, ns, 3, 0);
25821c25809
<   ns = mdev->state;
---
>   rv = _drbd_set_state(mdev, ns, 3, 0);
25822a25811,25812
>   ns = mdev->state;
> #line 3153
25824,25825d25813
< #line 3154
<   if (rv <= 0) {
25826a25815,25816
>   if (rv <= 0) {
> #line 3156
25828c25818
< #line 3155
---
> #line 3156
25830c25820
< #line 3155
---
> #line 3156
25832c25822
< #line 3155
---
> #line 3156
25834,25835d25823
< #line 3155
<     drbd_force_state(mdev, mask___1, val___1);
25836a25825,25826
>     drbd_force_state(mdev, mask___1, val___1);
> #line 3157
25841,25842d25830
< #line 3159
<   if ((unsigned int )oconn > 9U) {
25843a25832,25833
>   if ((unsigned int )oconn > 9U) {
> #line 3161
25845,25846d25834
< #line 3165
<       drbd_send_uuids(mdev);
25847a25836,25837
>       drbd_send_uuids(mdev);
> #line 3167
25855c25845
< #line 3170
---
> #line 3171
25857c25847
< #line 3172
---
> #line 3173
25859c25849
< #line 3174
---
> #line 3175
25863c25853
< #line 3177 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3178 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
25879c25869
< #line 3179
---
> #line 3180
25881c25871
< #line 3181
---
> #line 3182
25883c25873
< #line 3181
---
> #line 3182
25888c25878
< #line 3181
---
> #line 3182
25890c25880
< #line 3181
---
> #line 3182
25892c25882
< #line 3181
---
> #line 3182
25894c25884
< #line 3181
---
> #line 3182
25896c25886
< #line 3181
---
> #line 3182
25898c25888
< #line 3181
---
> #line 3182
25901c25891
< #line 3181
---
> #line 3182
25903c25893
< #line 3181
---
> #line 3182
25905c25895
< #line 3181
---
> #line 3182
25910c25900
< #line 3181
---
> #line 3182
25912c25902
< #line 3181
---
> #line 3182
25915c25905
< #line 3181
---
> #line 3182
25918c25908
< #line 3188
---
> #line 3189
25920c25910
< #line 3188
---
> #line 3189
25922c25912
< #line 3188
---
> #line 3189
25924c25914
< #line 3188
---
> #line 3189
25926c25916
< #line 3188
---
> #line 3189
25929c25919
<            3188);
---
>            3189);
25933c25923
< #line 3188
---
> #line 3189
25935c25925
< #line 3188
---
> #line 3189
25940c25930
< #line 3189
---
> #line 3190
25942,25943d25931
< #line 3189
<   if (tmp___2 != (int )h->length) {
25944a25933,25934
>   if (tmp___2 != (int )h->length) {
> #line 3191
25949c25939
< #line 3194
---
> #line 3195
25951,25952d25940
< #line 3194
<   if (tmp___6 != 0) {
25953a25942,25943
>   if (tmp___6 != 0) {
> #line 3196
25955,25956d25944
< #line 3195
<     _drbd_uuid_set(mdev, 0, tmp___3);
25957a25946,25947
>     _drbd_uuid_set(mdev, 0, tmp___3);
> #line 3197
25959c25949
< #line 3198
---
> #line 3199
25961c25951
< #line 3200
---
> #line 3201
25964c25954
< #line 3202
---
> #line 3203
25966c25956
< #line 3202
---
> #line 3203
25968c25958
< #line 3202
---
> #line 3203
25971c25961
< #line 3204
---
> #line 3205
25975c25965
< #line 3210 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3211 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
25988c25978
< #line 3213
---
> #line 3214
25990c25980
< #line 3213
---
> #line 3214
25992,25993d25981
< #line 3213
<   num_words = (unsigned int )(__min1 < __min2 ? __min1 : __min2);
25994a25983,25984
>   num_words = (unsigned int )(__min1 < __min2 ? __min1 : __min2);
> #line 3215
25996,25997d25985
< #line 3216
<   if ((unsigned int )h->length != want) {
25998a25987,25988
>   if ((unsigned int )h->length != want) {
> #line 3218
26000c25990
< #line 3217
---
> #line 3218
26002c25992
< #line 3217
---
> #line 3218
26005c25995
< #line 3218
---
> #line 3219
26010,26011d25999
< #line 3220
<   if (want == 0U) {
26012a26001,26002
>   if (want == 0U) {
> #line 3222
26017c26007
< #line 3222
---
> #line 3223
26019,26020d26008
< #line 3222
<   if ((unsigned int )tmp___1 != want) {
26021a26010,26011
>   if ((unsigned int )tmp___1 != want) {
> #line 3224
26026c26016
< #line 3225
---
> #line 3226
26028,26029d26017
< #line 3227
<   c->word_offset = c->word_offset + (unsigned long )num_words;
26031c26019
<   c->bit_offset = c->word_offset * 64UL;
---
>   c->word_offset = c->word_offset + (unsigned long )num_words;
26033c26021
<   if (c->bit_offset > c->bm_bits) {
---
>   c->bit_offset = c->word_offset * 64UL;
26034a26023,26024
>   if (c->bit_offset > c->bm_bits) {
> #line 3231
26039c26029
< #line 3232
---
> #line 3233
26043c26033
< #line 3236 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3237 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
26065c26055
< #line 3244
---
> #line 3245
26067,26068d26056
< #line 3246
<   len = (int )((unsigned int )p->head.length - 1U);
26069a26058,26059
>   len = (int )((unsigned int )p->head.length - 1U);
> #line 3248
26071c26061
< #line 3247
---
> #line 3248
26073c26063
< #line 3251
---
> #line 3252
26075c26065
< #line 3251
---
> #line 3252
26077,26078d26066
< #line 3253
<   bits = bitstream_get_bits(& bs, & look_ahead, 64);
26080c26068
<   if (bits < 0) {
---
>   bits = bitstream_get_bits(& bs, & look_ahead, 64);
26081a26070,26071
>   if (bits < 0) {
> #line 3256
26086c26076
< #line 3257
---
> #line 3258
26088c26078
< #line 3257
---
> #line 3258
26091,26092d26080
< #line 3258
<   bits = vli_decode_bits(& rl, look_ahead);
26094c26082
<   if (bits <= 0) {
---
>   bits = vli_decode_bits(& rl, look_ahead);
26095a26084,26085
>   if (bits <= 0) {
> #line 3261
26100,26101d26089
< #line 3262
<   if (toggle != 0) {
26103c26091
<     e = (unsigned long )(((unsigned long long )s + rl) - 1ULL);
---
>   if (toggle != 0) {
26105c26093
<     if (c->bm_bits <= e) {
---
>     e = (unsigned long )(((unsigned long long )s + rl) - 1ULL);
26106a26095,26096
>     if (c->bm_bits <= e) {
> #line 3266
26108c26098
< #line 3265
---
> #line 3266
26110c26100
< #line 3265
---
> #line 3266
26113c26103
< #line 3266
---
> #line 3267
26118c26108
< #line 3268
---
> #line 3269
26123,26124d26112
< #line 3271
<   if (have < bits) {
26125a26114,26115
>   if (have < bits) {
> #line 3273
26127c26117
< #line 3272
---
> #line 3273
26129c26119
< #line 3272
---
> #line 3273
26133c26123
< #line 3276
---
> #line 3277
26138,26139d26127
< #line 3278
<   look_ahead = look_ahead >> bits;
26140a26129,26130
>   look_ahead = look_ahead >> bits;
> #line 3280
26142,26143d26131
< #line 3281
<   bits = bitstream_get_bits(& bs, & tmp, 64 - have);
26145c26133
<   if (bits < 0) {
---
>   bits = bitstream_get_bits(& bs, & tmp, 64 - have);
26146a26135,26136
>   if (bits < 0) {
> #line 3284
26151,26152d26140
< #line 3284
<   look_ahead = (tmp << have) | look_ahead;
26153a26142,26143
>   look_ahead = (tmp << have) | look_ahead;
> #line 3286
26155c26145
< #line 3257
---
> #line 3258
26157c26147
< #line 3257
---
> #line 3258
26160,26161d26149
< #line 3257
<   if (have > 0) {
26162a26151,26152
>   if (have > 0) {
> #line 3259
26167,26168d26156
< #line 3288
<   c->bit_offset = s;
26169a26158,26159
>   c->bit_offset = s;
> #line 3290
26171c26161
< #line 3291
---
> #line 3292
26175c26165
< #line 3295 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3296 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
26187c26177
< #line 3299
---
> #line 3300
26189,26190d26178
< #line 3299
<   if ((unsigned int )tmp___0 == 2U) {
26191a26180,26181
>   if ((unsigned int )tmp___0 == 2U) {
> #line 3301
26193c26183
< #line 3300
---
> #line 3301
26198c26188
< #line 3306
---
> #line 3307
26200c26190
< #line 3306
---
> #line 3307
26202,26203d26191
< #line 3306
<   printk("<3>%s %s: receive_bitmap_c: unknown encoding %u\n", tmp___2, tmp___1, (int )p->encoding);
26204a26193,26194
>   printk("<3>%s %s: receive_bitmap_c: unknown encoding %u\n", tmp___2, tmp___1, (int )p->encoding);
> #line 3308
26206c26196
< #line 3307
---
> #line 3308
26208c26198
< #line 3307
---
> #line 3308
26210c26200
< #line 3307
---
> #line 3308
26212,26213d26201
< #line 3307
<   drbd_force_state(mdev, mask, val);
26214a26203,26204
>   drbd_force_state(mdev, mask, val);
> #line 3309
26218c26208
< #line 3311 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3312 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
26228c26218
< #line 3315
---
> #line 3316
26230c26220
< #line 3318
---
> #line 3319
26232,26233d26221
< #line 3322
<   if (total == 0U) {
26234a26223,26224
>   if (total == 0U) {
> #line 3324
26239,26240d26228
< #line 3326
<   if (total >= plain) {
26241a26230,26231
>   if (total >= plain) {
> #line 3328
26246c26236
< #line 3330
---
> #line 3331
26248,26249d26237
< #line 3333
<   if (r > 1000U) {
26250a26239,26240
>   if (r > 1000U) {
> #line 3335
26255,26256d26244
< #line 3336
<   r = 1000U - r;
26257a26246,26247
>   r = 1000U - r;
> #line 3338
26259c26249
< #line 3337
---
> #line 3338
26261c26251
< #line 3337
---
> #line 3338
26265c26255
< #line 3338
---
> #line 3339
26269c26259
< #line 3353 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3354 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
26307c26297
< #line 3358
---
> #line 3359
26309c26299
< #line 3360
---
> #line 3361
26311c26301
< #line 3360
---
> #line 3361
26313c26303
< #line 3360
---
> #line 3361
26318c26308
< #line 3360
---
> #line 3361
26320c26310
< #line 3360
---
> #line 3361
26322c26312
< #line 3360
---
> #line 3361
26324c26314
< #line 3360
---
> #line 3361
26326c26316
< #line 3360
---
> #line 3361
26328c26318
< #line 3360
---
> #line 3361
26331c26321
< #line 3360
---
> #line 3361
26333c26323
< #line 3360
---
> #line 3361
26335c26325
< #line 3360
---
> #line 3361
26337c26327
< #line 3360
---
> #line 3361
26342c26332
< #line 3360
---
> #line 3361
26344c26334
< #line 3360
---
> #line 3361
26347c26337
< #line 3360
---
> #line 3361
26350c26340
< #line 3362
---
> #line 3363
26352c26342
< #line 3366
---
> #line 3367
26354,26355d26343
< #line 3366
<   buffer = (void *)tmp___2;
26357c26345
<   if ((unsigned long )buffer == (unsigned long )((void *)0)) {
---
>   buffer = (void *)tmp___2;
26358a26347,26348
>   if ((unsigned long )buffer == (unsigned long )((void *)0)) {
> #line 3369
26360c26350
< #line 3368
---
> #line 3369
26362c26352
< #line 3368
---
> #line 3369
26365c26355
< #line 3369
---
> #line 3370
26370c26360
< #line 3372
---
> #line 3373
26372c26362
< #line 3372
---
> #line 3373
26374c26364
< #line 3372
---
> #line 3373
26376c26366
< #line 3372
---
> #line 3373
26378c26368
< #line 3372
---
> #line 3373
26380c26370
< #line 3372
---
> #line 3373
26382c26372
< #line 3372
---
> #line 3373
26384c26374
< #line 3372
---
> #line 3373
26386c26376
< #line 3372
---
> #line 3373
26388c26378
< #line 3372
---
> #line 3373
26390c26380
< #line 3372
---
> #line 3373
26393,26394d26382
< #line 3378
<   if ((unsigned int )h->command == 4U) {
26395a26384,26385
>   if ((unsigned int )h->command == 4U) {
> #line 3380
26398c26388
< #line 3380
---
> #line 3381
26400,26401d26389
< #line 3385
<     if ((unsigned int )h->length > 4088U) {
26402a26391,26392
>     if ((unsigned int )h->length > 4088U) {
> #line 3387
26404c26394
< #line 3386
---
> #line 3387
26406,26407d26395
< #line 3386
<       printk("<3>%s %s: ReportCBitmap packet too large\n", tmp___8, tmp___7);
26408a26397,26398
>       printk("<3>%s %s: ReportCBitmap packet too large\n", tmp___8, tmp___7);
> #line 3388
26413,26414d26402
< #line 3390
<     p = (struct p_compressed_bm *)buffer;
26415a26404,26405
>     p = (struct p_compressed_bm *)buffer;
> #line 3392
26417c26407
< #line 3391
---
> #line 3392
26419c26409
< #line 3391
---
> #line 3392
26422c26412
< #line 3391
---
> #line 3392
26425c26415
< #line 3392
---
> #line 3393
26427,26428d26416
< #line 3392
<     if (tmp___9 != (int )h->length) {
26429a26418,26419
>     if (tmp___9 != (int )h->length) {
> #line 3394
26434,26435d26423
< #line 3394
<     if ((unsigned int )p->head.length <= 1U) {
26436a26425,26426
>     if ((unsigned int )p->head.length <= 1U) {
> #line 3396
26438c26428
< #line 3395
---
> #line 3396
26440c26430
< #line 3395
---
> #line 3396
26443c26433
< #line 3396
---
> #line 3397
26448c26438
< #line 3398
---
> #line 3399
26451c26441
< #line 3400
---
> #line 3401
26453c26443
< #line 3400
---
> #line 3401
26455c26445
< #line 3400
---
> #line 3401
26458c26448
< #line 3401
---
> #line 3402
26461,26462d26450
< #line 3404
<   c.packets[(unsigned int )h->command == 4U] = c.packets[(unsigned int )h->command == 4U] + 1U;
26463a26452,26453
>   c.packets[(unsigned int )h->command == 4U] = c.packets[(unsigned int )h->command == 4U] + 1U;
> #line 3406
26465,26466d26454
< #line 3407
<   if ((unsigned int )ret != 0U) {
26467a26456,26457
>   if ((unsigned int )ret != 0U) {
> #line 3409
26472c26462
< #line 3410
---
> #line 3411
26474,26475d26463
< #line 3410
<   if (tmp___14 == 0) {
26476a26465,26466
>   if (tmp___14 == 0) {
> #line 3412
26481,26482d26470
< #line 3412
<   if ((unsigned int )ret == 0U) {
26483a26472,26473
>   if ((unsigned int )ret == 0U) {
> #line 3414
26489,26490d26478
< #line 3413
<   if ((unsigned int )ret == 2U) {
26491a26480,26481
>   if ((unsigned int )ret == 2U) {
> #line 3415
26496c26486
< #line 3416
---
> #line 3417
26498,26499d26487
< #line 3418
<   if ((unsigned int )*((unsigned short *)mdev + 902UL) == 224U) {
26500a26489,26490
>   if ((unsigned int )*((unsigned short *)mdev + 902UL) == 224U) {
> #line 3420
26502,26503d26491
< #line 3419
<     ok = tmp___15 == 0;
26505c26493
<     if (ok == 0) {
---
>     ok = tmp___15 == 0;
26506a26495,26496
>     if (ok == 0) {
> #line 3422
26511c26501
< #line 3423
---
> #line 3424
26513c26503
< #line 3423
---
> #line 3424
26515c26505
< #line 3423
---
> #line 3424
26517c26507
< #line 3423
---
> #line 3424
26519,26520d26508
< #line 3423
<     ok = _drbd_request_state(mdev, mask, val, CS_VERBOSE);
26521a26510,26511
>     ok = _drbd_request_state(mdev, mask, val, CS_VERBOSE);
> #line 3425
26523c26513
< #line 3424
---
> #line 3425
26525c26515
< #line 3424
---
> #line 3425
26527c26517
< #line 3424
---
> #line 3425
26530c26520
<              3424);
---
>              3425);
26535c26525
< #line 3425
---
> #line 3426
26537c26527
< #line 3428
---
> #line 3429
26539c26529
< #line 3428
---
> #line 3429
26541c26531
< #line 3428
---
> #line 3429
26543c26533
< #line 3428
---
> #line 3429
26549c26539
< #line 3432
---
> #line 3433
26552,26553d26541
< #line 3434
<   drbd_bm_unlock(mdev);
26555c26543
<   if (ok != 0 && (unsigned int )*((unsigned short *)mdev + 902UL) == 208U) {
---
>   drbd_bm_unlock(mdev);
26556a26545,26546
>   if (ok != 0 && (unsigned int )*((unsigned short *)mdev + 902UL) == 208U) {
> #line 3437
26561,26562d26550
< #line 3437
<   free_pages((unsigned long )buffer, 0U);
26563a26552,26553
>   free_pages((unsigned long )buffer, 0U);
> #line 3439
26567c26557
< #line 3441 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3442 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
26583c26573
< #line 3447
---
> #line 3448
26585c26575
< #line 3447
---
> #line 3448
26587c26577
< #line 3447
---
> #line 3448
26590,26591d26579
< #line 3450
<   size = (int )h->length;
26592a26581,26582
>   size = (int )h->length;
> #line 3452
26595c26585
< #line 3452
---
> #line 3453
26597c26587
< #line 3452
---
> #line 3453
26599,26600d26588
< #line 3452
<   want = __min1 < __min2 ? __min1 : __min2;
26602c26590
<   r = drbd_recv(mdev, (void *)(& sink), (size_t )want);
---
>   want = __min1 < __min2 ? __min1 : __min2;
26603a26592,26593
>   r = drbd_recv(mdev, (void *)(& sink), (size_t )want);
> #line 3455
26605c26595
< #line 3454
---
> #line 3455
26607c26597
< #line 3454
---
> #line 3455
26609c26599
< #line 3454
---
> #line 3455
26611c26601
< #line 3454
---
> #line 3455
26614c26604
<            3454);
---
>            3455);
26618c26608
< #line 3454
---
> #line 3455
26620c26610
< #line 3454
---
> #line 3455
26625c26615
< #line 3455
---
> #line 3456
26628,26629d26617
< #line 3451
<   if (size > 0) {
26630a26619,26620
>   if (size > 0) {
> #line 3453
26636c26626
< #line 3457
---
> #line 3458
26640c26630
< #line 3460 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3461 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
26646,26647d26635
< #line 3462
<   if ((int )mdev->state.ldv_32636.disk > 3) {
26648a26637,26638
>   if ((int )mdev->state.ldv_32636.disk > 3) {
> #line 3464
26653c26643
< #line 3467
---
> #line 3468
26655c26645
< #line 3469
---
> #line 3470
26659c26649
< #line 3474 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3475 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
26661c26651
< #line 3474
---
> #line 3475
26672c26662
< #line 3500 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3501 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
26675c26665
< #line 3501 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3502 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
26677c26667
< #line 3503 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3504 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
26700c26690
< #line 3506
---
> #line 3507
26702c26692
< #line 3508
---
> #line 3509
26705,26706d26694
< #line 3509
<   drbd_thread_current_set_cpu(mdev);
26707a26696,26697
>   drbd_thread_current_set_cpu(mdev);
> #line 3511
26709,26710d26698
< #line 3510
<   if (tmp == 0) {
26711a26700,26701
>   if (tmp == 0) {
> #line 3512
26713c26703
< #line 3511
---
> #line 3512
26715c26705
< #line 3511
---
> #line 3512
26717c26707
< #line 3511
---
> #line 3512
26719,26720d26708
< #line 3511
<     drbd_force_state(mdev, mask, val);
26721a26710,26711
>     drbd_force_state(mdev, mask, val);
> #line 3513
26726,26727d26715
< #line 3515
<   if ((unsigned int )header->command <= 36U) {
26728a26717,26718
>   if ((unsigned int )header->command <= 36U) {
> #line 3517
26731c26721
< #line 3517
---
> #line 3518
26733c26723
< #line 3519
---
> #line 3520
26736,26737d26725
< #line 3520
<   if ((unsigned int )header->command > 257U) {
26738a26727,26728
>   if ((unsigned int )header->command > 257U) {
> #line 3522
26741c26731
< #line 3523
---
> #line 3524
26744c26734
< #line 3525
---
> #line 3526
26748,26749d26737
< #line 3525
<   if (tmp___2 != 0L) {
26750a26739,26740
>   if (tmp___2 != 0L) {
> #line 3527
26752c26742
< #line 3526
---
> #line 3527
26754c26744
< #line 3526
---
> #line 3527
26757c26747
< #line 3528
---
> #line 3529
26759c26749
< #line 3528
---
> #line 3529
26761c26751
< #line 3528
---
> #line 3529
26763c26753
< #line 3528
---
> #line 3529
26765,26766d26754
< #line 3528
<     drbd_force_state(mdev, mask___0, val___0);
26767a26756,26757
>     drbd_force_state(mdev, mask___0, val___0);
> #line 3530
26772c26762
< #line 3531
---
> #line 3532
26774c26764
< #line 3531
---
> #line 3532
26776,26777d26765
< #line 3531
<   if (tmp___7 != 0L) {
26778a26767,26768
>   if (tmp___7 != 0L) {
> #line 3533
26780c26770
< #line 3532
---
> #line 3533
26782c26772
< #line 3532
---
> #line 3533
26784c26774
< #line 3532
---
> #line 3533
26786c26776
< #line 3534
---
> #line 3535
26788c26778
< #line 3534
---
> #line 3535
26790c26780
< #line 3534
---
> #line 3535
26792c26782
< #line 3534
---
> #line 3535
26794,26795d26783
< #line 3534
<     drbd_force_state(mdev, mask___1, val___1);
26796a26785,26786
>     drbd_force_state(mdev, mask___1, val___1);
> #line 3536
26802c26792
< #line 3508
---
> #line 3509
26804,26805d26793
< #line 3508
<   if ((unsigned int )tmp___8 == 1U) {
26806a26795,26796
>   if ((unsigned int )tmp___8 == 1U) {
> #line 3510
26812c26802
< #line 3513
---
> #line 3514
26816c26806
< #line 3540 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3541 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
26833,26834d26822
< #line 3551
<   spin_lock_irq(& mdev->req_lock);
26835a26824,26825
>   spin_lock_irq(& mdev->req_lock);
> #line 3553
26837c26827
< #line 3552
---
> #line 3553
26840,26841d26829
< #line 3553
<   slot = mdev->app_reads_hash + (unsigned long )i;
26842a26831,26832
>   slot = mdev->app_reads_hash + (unsigned long )i;
> #line 3555
26844c26834
< #line 3554
---
> #line 3555
26847c26837
< #line 3560
---
> #line 3561
26849c26839
< #line 3560
---
> #line 3561
26851c26841
< #line 3560
---
> #line 3561
26853c26843
< #line 3560
---
> #line 3561
26855c26845
< #line 3560
---
> #line 3561
26858c26848
<            3560);
---
>            3561);
26862c26852
< #line 3563
---
> #line 3564
26864c26854
< #line 3554
---
> #line 3555
26867c26857
< #line 3554
---
> #line 3555
26869c26859
< #line 3554
---
> #line 3555
26871c26861
< #line 3554
---
> #line 3555
26873c26863
< #line 3554
---
> #line 3555
26875c26865
< #line 3554
---
> #line 3555
26877,26878d26866
< #line 3554
<       if (1 != 0) {
26879a26868,26869
>       if (1 != 0) {
> #line 3556
26882c26872
< #line 3557
---
> #line 3558
26886c26876
< #line 3557
---
> #line 3558
26893c26883
< #line 3552
---
> #line 3553
26896,26897d26885
< #line 3552
<   if (i <= 14) {
26898a26887,26888
>   if (i <= 14) {
> #line 3554
26903c26893
< #line 3566
---
> #line 3567
26905c26895
< #line 3566
---
> #line 3567
26908c26898
< #line 3567
---
> #line 3568
26910,26911d26899
< #line 3567
<   if (tmp___5 == 0) {
26912a26901,26902
>   if (tmp___5 == 0) {
> #line 3569
26914c26904
< #line 3568
---
> #line 3569
26916c26906
< #line 3568
---
> #line 3569
26922c26912
< #line 3566
---
> #line 3567
26925,26926d26914
< #line 3566
<   if (i <= 14) {
26927a26916,26917
>   if (i <= 14) {
> #line 3568
26932,26933d26921
< #line 3571
<   memset((void *)mdev->app_reads_hash, 0, 120UL);
26935c26923
<   spin_unlock_irq(& mdev->req_lock);
---
>   memset((void *)mdev->app_reads_hash, 0, 120UL);
26936a26925,26926
>   spin_unlock_irq(& mdev->req_lock);
> #line 3574
26940c26930
< #line 3575 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3576 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
26946,26947d26935
< #line 3579
<   barr.w.cb = & w_prev_work_done;
26949c26937
<   init_completion(& barr.done);
---
>   barr.w.cb = & w_prev_work_done;
26951c26939
<   drbd_queue_work(& mdev->data.work, & barr.w);
---
>   init_completion(& barr.done);
26953c26941
<   wait_for_completion(& barr.done);
---
>   drbd_queue_work(& mdev->data.work, & barr.w);
26954a26943,26944
>   wait_for_completion(& barr.done);
> #line 3584
26958c26948
< #line 3585 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3586 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
27014c27004
< #line 3589
---
> #line 3590
27016,27017d27005
< #line 3592
<   if ((unsigned int )*((unsigned short *)mdev + 902UL) == 0U) {
27018a27007,27008
>   if ((unsigned int )*((unsigned short *)mdev + 902UL) == 0U) {
> #line 3594
27023,27024d27012
< #line 3594
<   if ((int )mdev->state.ldv_32636.conn > 7) {
27025a27014,27015
>   if ((int )mdev->state.ldv_32636.conn > 7) {
> #line 3596
27027c27017
< #line 3595
---
> #line 3596
27029c27019
< #line 3595
---
> #line 3596
27031c27021
< #line 3595
---
> #line 3596
27037c27027
< #line 3599
---
> #line 3600
27039,27040d27028
< #line 3601
<   mutex_lock_nested(& mdev->data.mutex, 0U);
27042c27030
<   drbd_free_sock(mdev);
---
>   mutex_lock_nested(& mdev->data.mutex, 0U);
27043a27032,27033
>   drbd_free_sock(mdev);
> #line 3604
27045,27046d27034
< #line 3605
<   spin_lock_irq(& mdev->req_lock);
27048c27036
<   _drbd_wait_ee_list_empty(mdev, & mdev->active_ee);
---
>   spin_lock_irq(& mdev->req_lock);
27050c27038
<   _drbd_wait_ee_list_empty(mdev, & mdev->sync_ee);
---
>   _drbd_wait_ee_list_empty(mdev, & mdev->active_ee);
27052c27040
<   _drbd_wait_ee_list_empty(mdev, & mdev->read_ee);
---
>   _drbd_wait_ee_list_empty(mdev, & mdev->sync_ee);
27053a27042,27043
>   _drbd_wait_ee_list_empty(mdev, & mdev->read_ee);
> #line 3610
27055,27056d27044
< #line 3621
<   drbd_rs_cancel_all(mdev);
27058c27046
<   mdev->rs_total = 0UL;
---
>   drbd_rs_cancel_all(mdev);
27060c27048
<   mdev->rs_failed = 0UL;
---
>   mdev->rs_total = 0UL;
27062c27050
<   atomic_set(& mdev->rs_pending_cnt, 0);
---
>   mdev->rs_failed = 0UL;
27063a27052,27053
>   atomic_set(& mdev->rs_pending_cnt, 0);
> #line 3626
27065,27066d27054
< #line 3628
<   del_timer_sync(& mdev->resync_timer);
27068c27056
<   set_bit(3U, (unsigned long volatile   *)(& mdev->flags));
---
>   del_timer_sync(& mdev->resync_timer);
27069a27058,27059
>   set_bit(3U, (unsigned long volatile   *)(& mdev->flags));
> #line 3631
27071c27061
< #line 3635
---
> #line 3636
27073c27063
< #line 3639
---
> #line 3640
27075,27076d27064
< #line 3641
<   kfree((void const   *)mdev->p_uuid);
27077a27066,27067
>   kfree((void const   *)mdev->p_uuid);
> #line 3643
27079,27080d27068
< #line 3644
<   if ((unsigned int )*((unsigned char *)mdev + 1806UL) == 0U) {
27081a27070,27071
>   if ((unsigned int )*((unsigned char *)mdev + 1806UL) == 0U) {
> #line 3646
27086c27076
< #line 3647
---
> #line 3648
27088c27078
< #line 3649
---
> #line 3650
27090c27080
< #line 3649
---
> #line 3650
27092c27082
< #line 3649
---
> #line 3650
27094c27084
< #line 3651
---
> #line 3652
27096,27097d27085
< #line 3653
<   fp = FP_DONT_CARE;
27098a27087,27088
>   fp = FP_DONT_CARE;
> #line 3655
27100,27101d27089
< #line 3654
<   if (tmp___4 != 0) {
27103c27091
<     fp = (enum drbd_fencing_p )(mdev->ldev)->dc.fencing;
---
>   if (tmp___4 != 0) {
27104a27093,27094
>     fp = (enum drbd_fencing_p )(mdev->ldev)->dc.fencing;
> #line 3657
27109,27110d27098
< #line 3659
<   if ((unsigned int )*((unsigned char *)mdev + 1804UL) == 1U) {
27112c27100
<     if ((unsigned int )fp != 0U && (int )mdev->state.ldv_32636.pdsk > 5) {
---
>   if ((unsigned int )*((unsigned char *)mdev + 1804UL) == 1U) {
27113a27102,27103
>     if ((unsigned int )fp != 0U && (int )mdev->state.ldv_32636.pdsk > 5) {
> #line 3662
27115,27116d27104
< #line 3661
<       nps = tmp___5;
27117a27106,27107
>       nps = tmp___5;
> #line 3663
27119c27109
< #line 3662
---
> #line 3663
27121c27111
< #line 3662
---
> #line 3663
27123c27113
< #line 3662
---
> #line 3663
27125c27115
< #line 3662
---
> #line 3663
27133,27134d27122
< #line 3666
<   spin_lock_irq(& mdev->req_lock);
27136c27124
<   os = mdev->state;
---
>   spin_lock_irq(& mdev->req_lock);
27137a27126,27127
>   os = mdev->state;
> #line 3669
27139,27140d27128
< #line 3670
<     ns = os;
27142c27130
<     ns.ldv_32636.conn = 2U;
---
>     ns = os;
27143a27132,27133
>     ns.ldv_32636.conn = 2U;
> #line 3673
27148c27138
< #line 3674
---
> #line 3675
27150c27140
< #line 3676
---
> #line 3677
27152c27142
< #line 3678
---
> #line 3679
27154c27144
< #line 3678
---
> #line 3679
27156c27146
< #line 3678
---
> #line 3679
27161c27151
< #line 3678
---
> #line 3679
27163c27153
< #line 3678
---
> #line 3679
27165c27155
< #line 3678
---
> #line 3679
27167c27157
< #line 3678
---
> #line 3679
27169c27159
< #line 3678
---
> #line 3679
27171c27161
< #line 3678
---
> #line 3679
27174c27164
< #line 3678
---
> #line 3679
27176c27166
< #line 3678
---
> #line 3679
27178c27168
< #line 3678
---
> #line 3679
27180c27170
< #line 3678
---
> #line 3679
27185c27175
< #line 3678
---
> #line 3679
27187c27177
< #line 3678
---
> #line 3679
27190c27180
< #line 3678
---
> #line 3679
27193c27183
< #line 3682
---
> #line 3683
27195c27185
< #line 3682
---
> #line 3683
27197c27187
< #line 3682
---
> #line 3683
27202c27192
< #line 3682
---
> #line 3683
27204c27194
< #line 3682
---
> #line 3683
27206c27196
< #line 3682
---
> #line 3683
27208c27198
< #line 3682
---
> #line 3683
27210c27200
< #line 3682
---
> #line 3683
27212c27202
< #line 3682
---
> #line 3683
27215c27205
< #line 3682
---
> #line 3683
27217c27207
< #line 3682
---
> #line 3683
27219c27209
< #line 3682
---
> #line 3683
27221c27211
< #line 3682
---
> #line 3683
27226c27216
< #line 3682
---
> #line 3683
27228c27218
< #line 3682
---
> #line 3683
27231c27221
< #line 3682
---
> #line 3683
27234c27224
< #line 3684
---
> #line 3685
27236c27226
< #line 3686
---
> #line 3687
27238c27228
< #line 3686
---
> #line 3687
27241,27242d27230
< #line 3687
<     if ((unsigned long )h->first != (unsigned long )((struct hlist_node *)0)) {
27243a27232,27233
>     if ((unsigned long )h->first != (unsigned long )((struct hlist_node *)0)) {
> #line 3689
27245c27235
< #line 3688
---
> #line 3689
27247c27237
< #line 3688
---
> #line 3689
27253c27243
< #line 3686
---
> #line 3687
27256,27257d27245
< #line 3686
<     if ((unsigned long )(mdev->ee_hash + (unsigned long )mdev->ee_hash_s) > (unsigned long )h) {
27258a27247,27248
>     if ((unsigned long )(mdev->ee_hash + (unsigned long )mdev->ee_hash_s) > (unsigned long )h) {
> #line 3688
27263,27264d27252
< #line 3690
<     kfree((void const   *)mdev->ee_hash);
27266c27254
<     mdev->ee_hash = 0;
---
>     kfree((void const   *)mdev->ee_hash);
27267a27256,27257
>     mdev->ee_hash = 0;
> #line 3693
27269c27259
< #line 3695
---
> #line 3696
27271c27261
< #line 3695
---
> #line 3696
27274,27275d27263
< #line 3696
<     if ((unsigned long )h->first != (unsigned long )((struct hlist_node *)0)) {
27276a27265,27266
>     if ((unsigned long )h->first != (unsigned long )((struct hlist_node *)0)) {
> #line 3698
27278c27268
< #line 3697
---
> #line 3698
27280c27270
< #line 3697
---
> #line 3698
27286c27276
< #line 3695
---
> #line 3696
27289,27290d27278
< #line 3695
<     if ((unsigned long )(mdev->tl_hash + (unsigned long )mdev->tl_hash_s) > (unsigned long )h) {
27291a27280,27281
>     if ((unsigned long )(mdev->tl_hash + (unsigned long )mdev->tl_hash_s) > (unsigned long )h) {
> #line 3697
27296,27297d27285
< #line 3699
<     kfree((void const   *)mdev->tl_hash);
27299c27287
<     mdev->tl_hash = 0;
---
>     kfree((void const   *)mdev->tl_hash);
27301c27289
<     mdev->tl_hash_s = 0U;
---
>     mdev->tl_hash = 0;
27302a27291,27292
>     mdev->tl_hash_s = 0U;
> #line 3703
27304,27305d27293
< #line 3704
<     crypto_free_hash(mdev->cram_hmac_tfm);
27306a27295,27296
>     crypto_free_hash(mdev->cram_hmac_tfm);
> #line 3706
27308,27309d27297
< #line 3707
<     kfree((void const   *)mdev->net_conf);
27311c27299
<     mdev->net_conf = 0;
---
>     kfree((void const   *)mdev->net_conf);
27312a27301,27302
>     mdev->net_conf = 0;
> #line 3710
27314c27304
< #line 3709
---
> #line 3710
27316c27306
< #line 3709
---
> #line 3710
27318c27308
< #line 3709
---
> #line 3710
27320c27310
< #line 3709
---
> #line 3710
27325c27315
< #line 3719
---
> #line 3720
27327,27328d27316
< #line 3719
<   i = (unsigned int )tmp___16;
27330c27318
<   if (i != 0U) {
---
>   i = (unsigned int )tmp___16;
27331a27320,27321
>   if (i != 0U) {
> #line 3722
27333c27323
< #line 3721
---
> #line 3722
27335c27325
< #line 3721
---
> #line 3722
27341c27331
< #line 3722
---
> #line 3723
27343,27344d27332
< #line 3722
<   i = (unsigned int )tmp___19;
27346c27334
<   if (i != 0U) {
---
>   i = (unsigned int )tmp___19;
27347a27336,27337
>   if (i != 0U) {
> #line 3725
27349c27339
< #line 3724
---
> #line 3725
27351c27341
< #line 3724
---
> #line 3725
27356c27346
< #line 3726
---
> #line 3727
27358c27348
< #line 3726
---
> #line 3727
27360c27350
< #line 3726
---
> #line 3727
27362c27352
< #line 3726
---
> #line 3727
27364c27354
< #line 3726
---
> #line 3727
27367c27357
<            3726);
---
>            3727);
27371c27361
< #line 3727
---
> #line 3728
27373c27363
< #line 3727
---
> #line 3728
27375c27365
< #line 3727
---
> #line 3728
27377c27367
< #line 3727
---
> #line 3728
27379c27369
< #line 3727
---
> #line 3728
27382c27372
<            3727);
---
>            3728);
27386c27376
< #line 3728
---
> #line 3729
27388c27378
< #line 3728
---
> #line 3729
27390c27380
< #line 3728
---
> #line 3729
27392c27382
< #line 3728
---
> #line 3729
27394c27384
< #line 3728
---
> #line 3729
27397c27387
<            3728);
---
>            3729);
27401c27391
< #line 3729
---
> #line 3730
27403c27393
< #line 3729
---
> #line 3730
27405c27395
< #line 3729
---
> #line 3730
27407c27397
< #line 3729
---
> #line 3730
27409c27399
< #line 3729
---
> #line 3730
27412c27402
<            3729);
---
>            3730);
27416,27417d27405
< #line 3732
<   atomic_set(& (mdev->current_epoch)->epoch_size, 0);
27418a27407,27408
>   atomic_set(& (mdev->current_epoch)->epoch_size, 0);
> #line 3734
27420c27410
< #line 3733
---
> #line 3734
27422c27412
< #line 3733
---
> #line 3734
27424c27414
< #line 3733
---
> #line 3734
27426c27416
< #line 3733
---
> #line 3734
27429c27419
<            3733);
---
>            3734);
27433c27423
< #line 3734
---
> #line 3735
27437c27427
< #line 3745 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3746 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
27447c27437
< #line 3748
---
> #line 3749
27449c27439
< #line 3751
---
> #line 3752
27451,27452d27440
< #line 3751
<   if (tmp___1 != 0) {
27453a27442,27443
>   if (tmp___1 != 0) {
> #line 3753
27455c27445
< #line 3752
---
> #line 3753
27457,27458d27446
< #line 3752
<     printk("<3>%s %s: interrupted during initial handshake\n", tmp___0, tmp);
27459a27448,27449
>     printk("<3>%s %s: interrupted during initial handshake\n", tmp___0, tmp);
> #line 3754
27464,27465d27453
< #line 3756
<   if ((unsigned long )mdev->data.socket == (unsigned long )((struct socket *)0)) {
27467c27455
<     mutex_unlock(& mdev->data.mutex);
---
>   if ((unsigned long )mdev->data.socket == (unsigned long )((struct socket *)0)) {
27468a27457,27458
>     mutex_unlock(& mdev->data.mutex);
> #line 3759
27473,27474d27462
< #line 3761
<   memset((void *)p, 0, 80UL);
27476c27464
<   p->protocol_min = 1442840576U;
---
>   memset((void *)p, 0, 80UL);
27478c27466
<   p->protocol_max = 1526726656U;
---
>   p->protocol_min = 1442840576U;
27479a27468,27469
>   p->protocol_max = 1526726656U;
> #line 3765
27482,27483d27471
< #line 3766
<   mutex_unlock(& mdev->data.mutex);
27484a27473,27474
>   mutex_unlock(& mdev->data.mutex);
> #line 3768
27488c27478
< #line 3777 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3778 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
27511,27512d27500
< #line 3780
<   p = & mdev->data.rbuf.handshake;
27513a27502,27503
>   p = & mdev->data.rbuf.handshake;
> #line 3782
27515,27516d27504
< #line 3785
<   rv = drbd_send_handshake(mdev);
27518c27506
<   if (rv == 0) {
---
>   rv = drbd_send_handshake(mdev);
27519a27508,27509
>   if (rv == 0) {
> #line 3788
27524,27525d27513
< #line 3789
<   rv = drbd_recv_header(mdev, & p->head);
27527c27515
<   if (rv == 0) {
---
>   rv = drbd_recv_header(mdev, & p->head);
27528a27517,27518
>   if (rv == 0) {
> #line 3792
27533,27534d27522
< #line 3793
<   if ((unsigned int )p->head.command != 65534U) {
27535a27524,27525
>   if ((unsigned int )p->head.command != 65534U) {
> #line 3795
27537c27527
< #line 3794
---
> #line 3795
27539c27529
< #line 3794
---
> #line 3795
27541c27531
< #line 3794
---
> #line 3795
27544c27534
< #line 3796
---
> #line 3797
27549,27550d27538
< #line 3799
<   if ((int )p->head.length != expect) {
27551a27540,27541
>   if ((int )p->head.length != expect) {
> #line 3801
27553c27543
< #line 3800
---
> #line 3801
27555c27545
< #line 3800
---
> #line 3801
27558c27548
< #line 3802
---
> #line 3803
27563c27553
< #line 3805
---
> #line 3806
27565,27566d27554
< #line 3807
<   if (rv != expect) {
27567a27556,27557
>   if (rv != expect) {
> #line 3809
27569c27559
< #line 3808
---
> #line 3809
27571c27561
< #line 3808
---
> #line 3809
27574c27564
< #line 3809
---
> #line 3810
27579c27569
< #line 3812
---
> #line 3813
27581,27582d27570
< #line 3812
<   p->protocol_min = tmp___6;
27583a27572,27573
>   p->protocol_min = tmp___6;
> #line 3814
27585,27586d27574
< #line 3813
<   p->protocol_max = tmp___7;
27588c27576
<   if (p->protocol_max == 0U) {
---
>   p->protocol_max = tmp___7;
27589a27578,27579
>   if (p->protocol_max == 0U) {
> #line 3816
27594c27584
< #line 3817
---
> #line 3818
27596c27586
< #line 3819
---
> #line 3820
27601c27591
< #line 3821
---
> #line 3822
27603c27593
< #line 3821
---
> #line 3822
27605c27595
< #line 3821
---
> #line 3822
27607c27597
< #line 3823
---
> #line 3824
27609c27599
< #line 3823
---
> #line 3824
27611c27601
< #line 3823
---
> #line 3824
27614c27604
< #line 3826
---
> #line 3827
27617c27607
< #line 3829
---
> #line 3830
27619c27609
< #line 3829
---
> #line 3830
27621c27611
< #line 3829
---
> #line 3830
27624c27614
< #line 3833
---
> #line 3834
27628c27618
< #line 3845 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3846 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
27676,27677d27665
< #line 3849
<   response = 0;
27679c27667
<   right_response = 0;
---
>   response = 0;
27680a27669,27670
>   right_response = 0;
> #line 3852
27682c27672
< #line 3853
---
> #line 3854
27684c27674
< #line 3853
---
> #line 3854
27686,27687d27675
< #line 3858
<   desc.tfm = mdev->cram_hmac_tfm;
27688a27677,27678
>   desc.tfm = mdev->cram_hmac_tfm;
> #line 3860
27690c27680
< #line 3861
---
> #line 3862
27693,27694d27682
< #line 3863
<   if (rv != 0) {
27695a27684,27685
>   if (rv != 0) {
> #line 3865
27697c27687
< #line 3864
---
> #line 3865
27699,27700d27688
< #line 3864
<     printk("<3>%s %s: crypto_hash_setkey() failed with %d\n", tmp___1, tmp___0, rv);
27702c27690
<     rv = 0;
---
>     printk("<3>%s %s: crypto_hash_setkey() failed with %d\n", tmp___1, tmp___0, rv);
27703a27692,27693
>     rv = 0;
> #line 3867
27708c27698
< #line 3869
---
> #line 3870
27710,27711d27699
< #line 3871
<   rv = drbd_send_cmd2(mdev, P_AUTH_CHALLENGE, (char *)(& my_challenge), 64UL);
27713c27701
<   if (rv == 0) {
---
>   rv = drbd_send_cmd2(mdev, P_AUTH_CHALLENGE, (char *)(& my_challenge), 64UL);
27714a27703,27704
>   if (rv == 0) {
> #line 3874
27719,27720d27708
< #line 3875
<   rv = drbd_recv_header(mdev, & p);
27722c27710
<   if (rv == 0) {
---
>   rv = drbd_recv_header(mdev, & p);
27723a27712,27713
>   if (rv == 0) {
> #line 3878
27728,27729d27717
< #line 3879
<   if ((unsigned int )p.command != 16U) {
27730a27719,27720
>   if ((unsigned int )p.command != 16U) {
> #line 3881
27732c27722
< #line 3880
---
> #line 3881
27734c27724
< #line 3880
---
> #line 3881
27736c27726
< #line 3880
---
> #line 3881
27739,27740d27728
< #line 3882
<     rv = 0;
27741a27730,27731
>     rv = 0;
> #line 3884
27746,27747d27735
< #line 3886
<   if ((unsigned int )p.length > 128U) {
27748a27737,27738
>   if ((unsigned int )p.length > 128U) {
> #line 3888
27750c27740
< #line 3887
---
> #line 3888
27752,27753d27741
< #line 3887
<     printk("<3>%s %s: expected AuthChallenge payload too big.\n", tmp___6, tmp___5);
27755c27743
<     rv = 0;
---
>     printk("<3>%s %s: expected AuthChallenge payload too big.\n", tmp___6, tmp___5);
27756a27745,27746
>     rv = 0;
> #line 3890
27761c27751
< #line 3892
---
> #line 3893
27763,27764d27752
< #line 3892
<   peers_ch = (char *)tmp___7;
27766c27754
<   if ((unsigned long )peers_ch == (unsigned long )((char *)0)) {
---
>   peers_ch = (char *)tmp___7;
27767a27756,27757
>   if ((unsigned long )peers_ch == (unsigned long )((char *)0)) {
> #line 3895
27769c27759
< #line 3894
---
> #line 3895
27771,27772d27760
< #line 3894
<     printk("<3>%s %s: kmalloc of peers_ch failed\n", tmp___9, tmp___8);
27774c27762
<     rv = 0;
---
>     printk("<3>%s %s: kmalloc of peers_ch failed\n", tmp___9, tmp___8);
27775a27764,27765
>     rv = 0;
> #line 3897
27780c27770
< #line 3899
---
> #line 3900
27782,27783d27771
< #line 3901
<   if ((int )p.length != rv) {
27784a27773,27774
>   if ((int )p.length != rv) {
> #line 3903
27786c27776
< #line 3902
---
> #line 3903
27788,27789d27777
< #line 3902
<     printk("<3>%s %s: short read AuthChallenge: l=%u\n", tmp___11, tmp___10, rv);
27791c27779
<     rv = 0;
---
>     printk("<3>%s %s: short read AuthChallenge: l=%u\n", tmp___11, tmp___10, rv);
27792a27781,27782
>     rv = 0;
> #line 3905
27797,27798d27786
< #line 3907
<   resp_size = crypto_hash_digestsize(mdev->cram_hmac_tfm);
27799a27788,27789
>   resp_size = crypto_hash_digestsize(mdev->cram_hmac_tfm);
> #line 3909
27801,27802d27790
< #line 3908
<   response = (char *)tmp___12;
27804c27792
<   if ((unsigned long )response == (unsigned long )((char *)0)) {
---
>   response = (char *)tmp___12;
27805a27794,27795
>   if ((unsigned long )response == (unsigned long )((char *)0)) {
> #line 3911
27807c27797
< #line 3910
---
> #line 3911
27809,27810d27798
< #line 3910
<     printk("<3>%s %s: kmalloc of response failed\n", tmp___14, tmp___13);
27812c27800
<     rv = 0;
---
>     printk("<3>%s %s: kmalloc of response failed\n", tmp___14, tmp___13);
27813a27802,27803
>     rv = 0;
> #line 3913
27818,27819d27807
< #line 3915
<   sg_init_table(& sg, 1U);
27820a27809,27810
>   sg_init_table(& sg, 1U);
> #line 3917
27822,27823d27811
< #line 3918
<   rv = crypto_hash_digest(& desc, & sg, sg.length, (u8 *)response);
27825c27813
<   if (rv != 0) {
---
>   rv = crypto_hash_digest(& desc, & sg, sg.length, (u8 *)response);
27826a27815,27816
>   if (rv != 0) {
> #line 3921
27828c27818
< #line 3920
---
> #line 3921
27830c27820
< #line 3920
---
> #line 3921
27833,27834d27822
< #line 3921
<     rv = 0;
27835a27824,27825
>     rv = 0;
> #line 3923
27840,27841d27829
< #line 3925
<   rv = drbd_send_cmd2(mdev, P_AUTH_RESPONSE, response, (size_t )resp_size);
27843c27831
<   if (rv == 0) {
---
>   rv = drbd_send_cmd2(mdev, P_AUTH_RESPONSE, response, (size_t )resp_size);
27844a27833,27834
>   if (rv == 0) {
> #line 3928
27849,27850d27838
< #line 3929
<   rv = drbd_recv_header(mdev, & p);
27852c27840
<   if (rv == 0) {
---
>   rv = drbd_recv_header(mdev, & p);
27853a27842,27843
>   if (rv == 0) {
> #line 3932
27858,27859d27847
< #line 3933
<   if ((unsigned int )p.command != 17U) {
27860a27849,27850
>   if ((unsigned int )p.command != 17U) {
> #line 3935
27862c27852
< #line 3934
---
> #line 3935
27864c27854
< #line 3934
---
> #line 3935
27866c27856
< #line 3934
---
> #line 3935
27869,27870d27858
< #line 3936
<     rv = 0;
27871a27860,27861
>     rv = 0;
> #line 3938
27876,27877d27865
< #line 3940
<   if ((unsigned int )p.length != resp_size) {
27878a27867,27868
>   if ((unsigned int )p.length != resp_size) {
> #line 3942
27880c27870
< #line 3941
---
> #line 3942
27882,27883d27871
< #line 3941
<     printk("<3>%s %s: expected AuthResponse payload of wrong size\n", tmp___21, tmp___20);
27885c27873
<     rv = 0;
---
>     printk("<3>%s %s: expected AuthResponse payload of wrong size\n", tmp___21, tmp___20);
27886a27875,27876
>     rv = 0;
> #line 3944
27891c27881
< #line 3946
---
> #line 3947
27893,27894d27882
< #line 3948
<   if ((unsigned int )rv != resp_size) {
27895a27884,27885
>   if ((unsigned int )rv != resp_size) {
> #line 3950
27897c27887
< #line 3949
---
> #line 3950
27899c27889
< #line 3949
---
> #line 3950
27902,27903d27891
< #line 3950
<     rv = 0;
27904a27893,27894
>     rv = 0;
> #line 3952
27909c27899
< #line 3954
---
> #line 3955
27911,27912d27900
< #line 3954
<   right_response = (char *)tmp___24;
27914c27902
<   if ((unsigned long )response == (unsigned long )((char *)0)) {
---
>   right_response = (char *)tmp___24;
27915a27904,27905
>   if ((unsigned long )response == (unsigned long )((char *)0)) {
> #line 3957
27917c27907
< #line 3956
---
> #line 3957
27919,27920d27908
< #line 3956
<     printk("<3>%s %s: kmalloc of right_response failed\n", tmp___26, tmp___25);
27922c27910
<     rv = 0;
---
>     printk("<3>%s %s: kmalloc of right_response failed\n", tmp___26, tmp___25);
27923a27912,27913
>     rv = 0;
> #line 3959
27928c27918
< #line 3961
---
> #line 3962
27930,27931d27919
< #line 3963
<   rv = crypto_hash_digest(& desc, & sg, sg.length, (u8 *)right_response);
27933c27921
<   if (rv != 0) {
---
>   rv = crypto_hash_digest(& desc, & sg, sg.length, (u8 *)right_response);
27934a27923,27924
>   if (rv != 0) {
> #line 3966
27936c27926
< #line 3965
---
> #line 3966
27938c27928
< #line 3965
---
> #line 3966
27941,27942d27930
< #line 3966
<     rv = 0;
27943a27932,27933
>     rv = 0;
> #line 3968
27948c27938
< #line 3970
---
> #line 3971
27950c27940
< #line 3970
---
> #line 3971
27952,27953d27941
< #line 3972
<   if (rv != 0) {
27954a27943,27944
>   if (rv != 0) {
> #line 3974
27956c27946
< #line 3973
---
> #line 3974
27958c27948
< #line 3973
---
> #line 3974
27965,27966d27954
< #line 3977
<   kfree((void const   *)peers_ch);
27968c27956
<   kfree((void const   *)response);
---
>   kfree((void const   *)peers_ch);
27969a27958,27959
>   kfree((void const   *)response);
> #line 3980
27971c27961
< #line 3981
---
> #line 3982
27975c27965
< #line 3985 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3986 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
27995,27996d27984
< #line 3987
<   mdev = thi->mdev;
27997a27986,27987
>   mdev = thi->mdev;
> #line 3989
27999c27989
< #line 3988
---
> #line 3989
28001c27991
< #line 3991
---
> #line 3992
28003c27993
< #line 3991
---
> #line 3992
28005c27995
< #line 3993
---
> #line 3994
28007c27997
< #line 3993
---
> #line 3994
28009c27999
< #line 3993
---
> #line 3994
28012,28013d28001
< #line 3996
<   h = drbd_connect(mdev);
28015c28003
<   if (h == 0) {
---
>   h = drbd_connect(mdev);
28017c28005
<     drbd_disconnect(mdev);
---
>   if (h == 0) {
28018a28007,28008
>     drbd_disconnect(mdev);
> #line 4000
28020,28021d28009
< #line 3999
<     tmp___3->state = 1L;
28022a28011,28012
>     tmp___3->state = 1L;
> #line 4001
28027,28028d28016
< #line 4002
<   if (h == -1) {
28029a28018,28019
>   if (h == -1) {
> #line 4004
28031c28021
< #line 4003
---
> #line 4004
28033,28034d28022
< #line 4003
<     printk("<4>%s %s: Discarding network configuration.\n", tmp___5, tmp___4);
28035a28024,28025
>     printk("<4>%s %s: Discarding network configuration.\n", tmp___5, tmp___4);
> #line 4005
28037c28027
< #line 4004
---
> #line 4005
28039c28029
< #line 4004
---
> #line 4005
28041c28031
< #line 4004
---
> #line 4005
28043c28033
< #line 4004
---
> #line 4005
28048,28049d28037
< #line 4006
<   if (h == 0) {
28050a28039,28040
>   if (h == 0) {
> #line 4008
28056,28057d28045
< #line 4008
<   if (h > 0) {
28058a28047,28048
>   if (h > 0) {
> #line 4010
28060,28061d28049
< #line 4009
<     if (tmp___6 != 0) {
28063c28051
<       drbdd(mdev);
---
>     if (tmp___6 != 0) {
28064a28053,28054
>       drbdd(mdev);
> #line 4012
28072c28062
< #line 4015
---
> #line 4016
28074c28064
< #line 4017
---
> #line 4018
28076c28066
< #line 4017
---
> #line 4018
28078,28079d28067
< #line 4017
<   printk("<6>%s %s: receiver terminated\n", tmp___8, tmp___7);
28080a28069,28070
>   printk("<6>%s %s: receiver terminated\n", tmp___8, tmp___7);
> #line 4019
28084c28074
< #line 4023 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4024 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
28095c28085
< #line 4025
---
> #line 4026
28097c28087
< #line 4027
---
> #line 4028
28099c28089
< #line 4027
---
> #line 4028
28101,28102d28090
< #line 4029
<   if (retcode > 0) {
28103a28092,28093
>   if (retcode > 0) {
> #line 4031
28106,28107d28095
< #line 4032
<     set_bit(11U, (unsigned long volatile   *)(& mdev->flags));
28108a28097,28098
>     set_bit(11U, (unsigned long volatile   *)(& mdev->flags));
> #line 4034
28110c28100
< #line 4033
---
> #line 4034
28112c28102
< #line 4033
---
> #line 4034
28114c28104
< #line 4033
---
> #line 4034
28118c28108
< #line 4036
---
> #line 4037
28120c28110
< #line 4038
---
> #line 4039
28124c28114
< #line 4041 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4042 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
28130c28120
< #line 4043
---
> #line 4044
28132c28122
< #line 4043
---
> #line 4044
28136c28126
< #line 4047 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4048 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
28142c28132
< #line 4050
---
> #line 4051
28144c28134
< #line 4052
---
> #line 4053
28148c28138
< #line 4055 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4056 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
28165,28166d28154
< #line 4057
<   p = (struct p_block_ack *)h;
28167a28156,28157
>   p = (struct p_block_ack *)h;
> #line 4059
28169,28170d28158
< #line 4058
<   sector = (sector_t )tmp;
28171a28160,28161
>   sector = (sector_t )tmp;
> #line 4060
28173c28163
< #line 4059
---
> #line 4060
28175c28165
< #line 4061
---
> #line 4062
28177c28167
< #line 4061
---
> #line 4062
28179c28169
< #line 4061
---
> #line 4062
28181c28171
< #line 4061
---
> #line 4062
28184c28174
<            4061);
---
>            4062);
28188c28178
< #line 4063
---
> #line 4064
28190c28180
< #line 4063
---
> #line 4064
28192,28193d28181
< #line 4065
<   drbd_rs_complete_io(mdev, sector);
28194a28183,28184
>   drbd_rs_complete_io(mdev, sector);
> #line 4067
28196,28198c28186
<                      4066U);
< #line 4068
<   mdev->rs_same_csum = mdev->rs_same_csum + (unsigned long )(blksize >> 12);
---
>                      4067U);
28199a28188,28189
>   mdev->rs_same_csum = mdev->rs_same_csum + (unsigned long )(blksize >> 12);
> #line 4070
28201c28191
< #line 4069
---
> #line 4070
28203c28193
< #line 4069
---
> #line 4070
28205c28195
< #line 4069
---
> #line 4070
28207c28197
< #line 4069
---
> #line 4070
28209c28199
< #line 4069
---
> #line 4070
28211c28201
< #line 4069
---
> #line 4070
28213c28203
<            4069, tmp___4);
---
>            4070, tmp___4);
28217c28207
< #line 4071
---
> #line 4072
28221c28211
< #line 4076 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4077 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
28235c28225
< #line 4079
---
> #line 4080
28237c28227
< #line 4079
---
> #line 4080
28239c28229
< #line 4083
---
> #line 4084
28241c28231
< #line 4083
---
> #line 4084
28244,28245d28233
< #line 4084
<   if ((unsigned long )req == (unsigned long )id) {
28247c28235
<     if (req->sector != sector) {
---
>   if ((unsigned long )req == (unsigned long )id) {
28248a28237,28238
>     if (req->sector != sector) {
> #line 4087
28250c28240
< #line 4086
---
> #line 4087
28252c28242
< #line 4086
---
> #line 4087
28255c28245
< #line 4090
---
> #line 4091
28260c28250
< #line 4092
---
> #line 4093
28265c28255
< #line 4083
---
> #line 4084
28268c28258
< #line 4083
---
> #line 4084
28270c28260
< #line 4083
---
> #line 4084
28272c28262
< #line 4083
---
> #line 4084
28274c28264
< #line 4083
---
> #line 4084
28276c28266
< #line 4083
---
> #line 4084
28278,28279d28267
< #line 4083
<       if (1 != 0) {
28280a28269,28270
>       if (1 != 0) {
> #line 4085
28283c28273
< #line 4086
---
> #line 4087
28287c28277
< #line 4086
---
> #line 4087
28294c28284
< #line 4095
---
> #line 4096
28296c28286
< #line 4095
---
> #line 4096
28298c28288
< #line 4095
---
> #line 4096
28301c28291
< #line 4097
---
> #line 4098
28305c28295
< #line 4103 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4104 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
28317,28318d28306
< #line 4110
<   spin_lock_irq(& mdev->req_lock);
28320c28308
<   req = (*validator)(mdev, id, sector);
---
>   spin_lock_irq(& mdev->req_lock);
28321a28310,28311
>   req = (*validator)(mdev, id, sector);
> #line 4113
28324,28325d28313
< #line 4112
<   if (tmp___1 != 0L) {
28327c28315
<     spin_unlock_irq(& mdev->req_lock);
---
>   if (tmp___1 != 0L) {
28328a28317,28318
>     spin_unlock_irq(& mdev->req_lock);
> #line 4115
28330c28320
< #line 4114
---
> #line 4115
28332,28333d28321
< #line 4114
<     printk("<3>%s %s: %s: got a corrupt block_id/sector pair\n", tmp___0, tmp, func);
28334a28323,28324
>     printk("<3>%s %s: %s: got a corrupt block_id/sector pair\n", tmp___0, tmp, func);
> #line 4116
28339,28340d28328
< #line 4117
<   __req_mod(req, what, & m);
28341a28330,28331
>   __req_mod(req, what, & m);
> #line 4119
28343,28344d28332
< #line 4120
<   if ((unsigned long )m.bio != (unsigned long )((struct bio *)0)) {
28345a28334,28335
>   if ((unsigned long )m.bio != (unsigned long )((struct bio *)0)) {
> #line 4122
28350c28340
< #line 4122
---
> #line 4123
28354c28344
< #line 4125 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4126 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
28382,28383d28371
< #line 4127
<   p = (struct p_block_ack *)h;
28384a28373,28374
>   p = (struct p_block_ack *)h;
> #line 4129
28386,28387d28375
< #line 4128
<   sector = (sector_t )tmp;
28388a28377,28378
>   sector = (sector_t )tmp;
> #line 4130
28390c28380
< #line 4129
---
> #line 4130
28392c28382
< #line 4132
---
> #line 4133
28394c28384
< #line 4132
---
> #line 4133
28396,28397d28385
< #line 4134
<   if (p->block_id == 0xffffffffffffffffULL) {
28399,28400c28387
<     __drbd_set_in_sync(mdev, sector, blksize, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
<                        4135U);
---
>   if (p->block_id == 0xffffffffffffffffULL) {
28401a28389,28391
>     __drbd_set_in_sync(mdev, sector, blksize, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>                        4136U);
> #line 4137
28403c28393
< #line 4136
---
> #line 4137
28405c28395
< #line 4136
---
> #line 4137
28407c28397
< #line 4136
---
> #line 4137
28409c28399
< #line 4136
---
> #line 4137
28411c28401
< #line 4136
---
> #line 4137
28413c28403
< #line 4136
---
> #line 4137
28415c28405
<              "got_BlockAck", 4136, tmp___2);
---
>              "got_BlockAck", 4137, tmp___2);
28419c28409
< #line 4137
---
> #line 4138
28424c28414
< #line 4139
---
> #line 4140
28426c28416
< #line 4139
---
> #line 4140
28429c28419
< #line 4141
---
> #line 4142
28431c28421
< #line 4141
---
> #line 4142
28433c28423
< #line 4141
---
> #line 4142
28435c28425
< #line 4141
---
> #line 4142
28438c28428
<            4141);
---
>            4142);
28442,28443d28431
< #line 4142
<   what = write_acked_by_peer_and_sis;
28444a28433,28434
>   what = write_acked_by_peer_and_sis;
> #line 4144
28447c28437
< #line 4145
---
> #line 4146
28449c28439
< #line 4145
---
> #line 4146
28451c28441
< #line 4145
---
> #line 4146
28453c28443
< #line 4145
---
> #line 4146
28456c28446
<            4145);
---
>            4146);
28460,28461d28449
< #line 4146
<   what = write_acked_by_peer;
28462a28451,28452
>   what = write_acked_by_peer;
> #line 4148
28465c28455
< #line 4149
---
> #line 4150
28467c28457
< #line 4149
---
> #line 4150
28469c28459
< #line 4149
---
> #line 4150
28471c28461
< #line 4149
---
> #line 4150
28474c28464
<            4149);
---
>            4150);
28478,28479d28467
< #line 4150
<   what = recv_acked_by_peer;
28480a28469,28470
>   what = recv_acked_by_peer;
> #line 4152
28483c28473
< #line 4153
---
> #line 4154
28485c28475
< #line 4153
---
> #line 4154
28487c28477
< #line 4153
---
> #line 4154
28489c28479
< #line 4153
---
> #line 4154
28492c28482
<            4153);
---
>            4154);
28496,28497d28485
< #line 4154
<   what = conflict_discarded_by_peer;
28498a28487,28488
>   what = conflict_discarded_by_peer;
> #line 4156
28501c28491
< #line 4157
---
> #line 4158
28503c28493
< #line 4157
---
> #line 4158
28505,28507d28494
< #line 4157
<   printk("<3>%s %s: ASSERT( 0 ) in %s:%d\n", tmp___16, tmp___15, (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
<          4157);
28508a28496,28498
>   printk("<3>%s %s: ASSERT( 0 ) in %s:%d\n", tmp___16, tmp___15, (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>          4158);
> #line 4159
28512c28502
< #line 4161
---
> #line 4162
28515c28505
< #line 4161
---
> #line 4162
28519c28509
< #line 4165 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4166 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
28538,28539d28527
< #line 4167
<   p = (struct p_block_ack *)h;
28540a28529,28530
>   p = (struct p_block_ack *)h;
> #line 4169
28542c28532
< #line 4168
---
> #line 4169
28544c28534
< #line 4170
---
> #line 4171
28546,28547d28535
< #line 4170
<   if (tmp___2 != 0) {
28548a28537,28538
>   if (tmp___2 != 0) {
> #line 4172
28550c28540
< #line 4171
---
> #line 4172
28552c28542
< #line 4171
---
> #line 4172
28557c28547
< #line 4173
---
> #line 4174
28559c28549
< #line 4173
---
> #line 4174
28561,28562d28550
< #line 4175
<   if (p->block_id == 0xffffffffffffffffULL) {
28563a28552,28553
>   if (p->block_id == 0xffffffffffffffffULL) {
> #line 4177
28565,28566d28554
< #line 4176
<     size = (int )tmp___4;
28567a28556,28557
>     size = (int )tmp___4;
> #line 4178
28569c28559
< #line 4177
---
> #line 4178
28571c28561
< #line 4177
---
> #line 4178
28573c28563
< #line 4177
---
> #line 4178
28575c28565
< #line 4177
---
> #line 4178
28577c28567
< #line 4177
---
> #line 4178
28579c28569
< #line 4177
---
> #line 4178
28581c28571
<              "got_NegAck", 4177, tmp___5);
---
>              "got_NegAck", 4178, tmp___5);
28585,28586d28574
< #line 4178
<     drbd_rs_failed_io(mdev, sector, size);
28587a28576,28577
>     drbd_rs_failed_io(mdev, sector, size);
> #line 4180
28592c28582
< #line 4181
---
> #line 4182
28595c28585
< #line 4181
---
> #line 4182
28599c28589
< #line 4185 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4186 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
28612,28613d28601
< #line 4187
<   p = (struct p_block_ack *)h;
28614a28603,28604
>   p = (struct p_block_ack *)h;
> #line 4189
28616c28606
< #line 4188
---
> #line 4189
28618c28608
< #line 4190
---
> #line 4191
28620,28621d28609
< #line 4190
<   update_peer_seq(mdev, tmp___0);
28622a28611,28612
>   update_peer_seq(mdev, tmp___0);
> #line 4192
28624c28614
< #line 4191
---
> #line 4192
28626c28616
< #line 4191
---
> #line 4192
28628c28618
< #line 4191
---
> #line 4192
28631c28621
< #line 4194
---
> #line 4195
28634c28624
< #line 4194
---
> #line 4195
28638c28628
< #line 4198 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4199 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
28656c28646
< #line 4202
---
> #line 4203
28658c28648
< #line 4204
---
> #line 4205
28660,28661d28649
< #line 4204
<   sector = (sector_t )tmp;
28662a28651,28652
>   sector = (sector_t )tmp;
> #line 4206
28664,28665d28653
< #line 4205
<   size = (int )tmp___0;
28666a28655,28656
>   size = (int )tmp___0;
> #line 4207
28668c28658
< #line 4206
---
> #line 4207
28670c28660
< #line 4206
---
> #line 4207
28672c28662
< #line 4206
---
> #line 4207
28675c28665
<            4206);
---
>            4207);
28679c28669
< #line 4208
---
> #line 4209
28681c28671
< #line 4208
---
> #line 4209
28683c28673
< #line 4210
---
> #line 4211
28685c28675
< #line 4210
---
> #line 4211
28687c28677
< #line 4210
---
> #line 4211
28689c28679
< #line 4210
---
> #line 4211
28691c28681
< #line 4210
---
> #line 4211
28693c28683
< #line 4210
---
> #line 4211
28695c28685
< #line 4210
---
> #line 4211
28697c28687
<            4210, tmp___4);
---
>            4211, tmp___4);
28701c28691
< #line 4212
---
> #line 4213
28703,28704d28692
< #line 4212
<   if (tmp___8 != 0) {
28706c28694
<     drbd_rs_complete_io(mdev, sector);
---
>   if (tmp___8 != 0) {
28708c28696
<     drbd_rs_failed_io(mdev, sector, size);
---
>     drbd_rs_complete_io(mdev, sector);
28709a28698,28699
>     drbd_rs_failed_io(mdev, sector, size);
> #line 4216
28714c28704
< #line 4218
---
> #line 4219
28718c28708
< #line 4221 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4222 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
28725c28715
< #line 4223
---
> #line 4224
28727c28717
< #line 4225
---
> #line 4226
28729c28719
< #line 4225
---
> #line 4226
28731c28721
< #line 4227
---
> #line 4228
28735c28725
< #line 4230 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4231 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
28755c28745
< #line 4232
---
> #line 4233
28757c28747
< #line 4237
---
> #line 4238
28759,28760d28748
< #line 4237
<   sector = (sector_t )tmp;
28761a28750,28751
>   sector = (sector_t )tmp;
> #line 4239
28763c28753
< #line 4238
---
> #line 4239
28765c28755
< #line 4240
---
> #line 4241
28767c28757
< #line 4240
---
> #line 4241
28769c28759
< #line 4242
---
> #line 4243
28771,28772d28760
< #line 4242
<   if (tmp___2 == 4712ULL) {
28773a28762,28763
>   if (tmp___2 == 4712ULL) {
> #line 4244
28776c28766
< #line 4245
---
> #line 4246
28779,28780d28768
< #line 4247
<   drbd_rs_complete_io(mdev, sector);
28781a28770,28771
>   drbd_rs_complete_io(mdev, sector);
> #line 4249
28783c28773
< #line 4248
---
> #line 4249
28785c28775
< #line 4248
---
> #line 4249
28787c28777
< #line 4248
---
> #line 4249
28789c28779
< #line 4248
---
> #line 4249
28791c28781
< #line 4248
---
> #line 4249
28793c28783
< #line 4248
---
> #line 4249
28795c28785
<            4248, tmp___3);
---
>            4249, tmp___3);
28799c28789
< #line 4250
---
> #line 4251
28801,28802d28790
< #line 4250
<   if (mdev->ov_left == 0UL) {
28803a28792,28793
>   if (mdev->ov_left == 0UL) {
> #line 4252
28805,28806d28794
< #line 4251
<     w = (struct drbd_work *)tmp___7;
28808c28796
<     if ((unsigned long )w != (unsigned long )((struct drbd_work *)0)) {
---
>     w = (struct drbd_work *)tmp___7;
28810c28798
<       w->cb = & w_ov_finished;
---
>     if ((unsigned long )w != (unsigned long )((struct drbd_work *)0)) {
28811a28800,28801
>       w->cb = & w_ov_finished;
> #line 4255
28814c28804
< #line 4256
---
> #line 4257
28816c28806
< #line 4256
---
> #line 4257
28818,28819d28807
< #line 4256
<       printk("<3>%s %s: kmalloc(w) failed.", tmp___9, tmp___8);
28821c28809
<       ov_oos_print(mdev);
---
>       printk("<3>%s %s: kmalloc(w) failed.", tmp___9, tmp___8);
28822a28811,28812
>       ov_oos_print(mdev);
> #line 4259
28828c28818
< #line 4261
---
> #line 4262
28832c28822
< #line 4269 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4270 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
28838c28828
< #line 4271
---
> #line 4272
28840c28830
< #line 4271
---
> #line 4272
28842c28832
< #line 4271
---
> #line 4272
28844c28834
< #line 4271
---
> #line 4272
28846c28836
< #line 4271
---
> #line 4272
28848c28838
< #line 4271
---
> #line 4272
28850c28840
< #line 4271
---
> #line 4272
28852c28842
< #line 4271
---
> #line 4272
28854c28844
< #line 4271
---
> #line 4272
28856c28846
< #line 4271
---
> #line 4272
28858c28848
< #line 4271
---
> #line 4272
28860c28850
< #line 4271
---
> #line 4272
28862c28852
< #line 4271
---
> #line 4272
28864c28854
< #line 4271
---
> #line 4272
28866c28856
< #line 4271
---
> #line 4272
28868c28858
< #line 4271
---
> #line 4272
28870c28860
< #line 4271
---
> #line 4272
28872c28862
< #line 4271
---
> #line 4272
28874c28864
< #line 4271
---
> #line 4272
28876c28866
< #line 4271
---
> #line 4272
28878c28868
< #line 4271
---
> #line 4272
28880c28870
< #line 4271
---
> #line 4272
28882c28872
< #line 4271
---
> #line 4272
28884c28874
< #line 4271
---
> #line 4272
28886c28876
< #line 4271
---
> #line 4272
28888c28878
< #line 4271
---
> #line 4272
28890c28880
< #line 4271
---
> #line 4272
28892c28882
< #line 4271
---
> #line 4272
28894c28884
< #line 4271
---
> #line 4272
28896c28886
< #line 4271
---
> #line 4272
28898c28888
< #line 4271
---
> #line 4272
28900c28890
< #line 4271
---
> #line 4272
28902c28892
< #line 4271
---
> #line 4272
28904c28894
< #line 4271
---
> #line 4272
28906c28896
< #line 4271
---
> #line 4272
28908c28898
< #line 4271
---
> #line 4272
28910c28900
< #line 4271
---
> #line 4272
28912c28902
< #line 4271
---
> #line 4272
28914c28904
< #line 4271
---
> #line 4272
28916c28906
< #line 4271
---
> #line 4272
28918c28908
< #line 4271
---
> #line 4272
28920c28910
< #line 4271
---
> #line 4272
28922c28912
< #line 4271
---
> #line 4272
28924c28914
< #line 4271
---
> #line 4272
28926c28916
< #line 4271
---
> #line 4272
28928c28918
< #line 4271
---
> #line 4272
28930c28920
< #line 4271
---
> #line 4272
28932c28922
< #line 4271
---
> #line 4272
28934c28924
< #line 4271
---
> #line 4272
28936c28926
< #line 4271
---
> #line 4272
28938c28928
< #line 4271
---
> #line 4272
28940c28930
< #line 4271
---
> #line 4272
28942c28932
< #line 4271
---
> #line 4272
28944c28934
< #line 4271
---
> #line 4272
28946c28936
< #line 4271
---
> #line 4272
28948c28938
< #line 4271
---
> #line 4272
28950c28940
< #line 4271
---
> #line 4272
28952c28942
< #line 4271
---
> #line 4272
28954c28944
< #line 4271
---
> #line 4272
28956c28946
< #line 4271
---
> #line 4272
28958c28948
< #line 4271
---
> #line 4272
28960c28950
< #line 4271
---
> #line 4272
28962c28952
< #line 4271
---
> #line 4272
28964c28954
< #line 4271
---
> #line 4272
28966c28956
< #line 4271
---
> #line 4272
28968c28958
< #line 4271
---
> #line 4272
28970c28960
< #line 4271
---
> #line 4272
28972c28962
< #line 4271
---
> #line 4272
28974c28964
< #line 4271
---
> #line 4272
28976c28966
< #line 4271
---
> #line 4272
28978c28968
< #line 4271
---
> #line 4272
28980c28970
< #line 4271
---
> #line 4272
28982c28972
< #line 4271
---
> #line 4272
28984c28974
< #line 4271
---
> #line 4272
28986c28976
< #line 4271
---
> #line 4272
28988c28978
< #line 4271
---
> #line 4272
28990c28980
< #line 4290
---
> #line 4291
28993c28983
< #line 4291
---
> #line 4292
28998c28988
< #line 4292
---
> #line 4293
29002c28992
< #line 4295 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4296 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
29065,29066d29054
< #line 4297
<   mdev = thi->mdev;
29068c29056
<   h = & mdev->meta.rbuf.header;
---
>   mdev = thi->mdev;
29069a29058,29059
>   h = & mdev->meta.rbuf.header;
> #line 4300
29071,29072d29060
< #line 4302
<   buf = (void *)h;
29074c29062
<   received = 0;
---
>   buf = (void *)h;
29075a29064,29065
>   received = 0;
> #line 4305
29077c29067
< #line 4307
---
> #line 4308
29079c29069
< #line 4307
---
> #line 4308
29081c29071
< #line 4307
---
> #line 4308
29083c29073
< #line 4309
---
> #line 4310
29085,29086d29074
< #line 4309
<   tmp___1->policy = 2U;
29087a29076,29077
>   tmp___1->policy = 2U;
> #line 4311
29089c29079
< #line 4310
---
> #line 4311
29091c29081
< #line 4312
---
> #line 4313
29094,29095d29083
< #line 4313
<   drbd_thread_current_set_cpu(mdev);
29096a29085,29086
>   drbd_thread_current_set_cpu(mdev);
> #line 4315
29098,29099d29087
< #line 4314
<   if (tmp___6 != 0) {
29100a29089,29090
>   if (tmp___6 != 0) {
> #line 4316
29102c29092
< #line 4315
---
> #line 4316
29104c29094
< #line 4315
---
> #line 4316
29106c29096
< #line 4315
---
> #line 4316
29108c29098
< #line 4315
---
> #line 4316
29110c29100
< #line 4315
---
> #line 4316
29113c29103
<              4315);
---
>              4316);
29117c29107
< #line 4315
---
> #line 4316
29119c29109
< #line 4315
---
> #line 4316
29124c29114
< #line 4316
---
> #line 4317
29129c29119
< #line 4322
---
> #line 4323
29131c29121
< #line 4322
---
> #line 4323
29133c29123
< #line 4322
---
> #line 4323
29135c29125
< #line 4324
---
> #line 4325
29144,29145d29133
< #line 4326
<   clear_bit(1, (unsigned long volatile   *)(& mdev->flags));
29146a29135,29136
>   clear_bit(1, (unsigned long volatile   *)(& mdev->flags));
> #line 4328
29148,29149d29137
< #line 4327
<   flush_signals(tmp___8);
29150a29139,29140
>   flush_signals(tmp___8);
> #line 4329
29152,29153d29141
< #line 4328
<   if (tmp___11 == 0) {
29154a29143,29144
>   if (tmp___11 == 0) {
> #line 4330
29156c29146
< #line 4329
---
> #line 4330
29158,29159d29147
< #line 4329
<     printk("<3>%s %s: process_done_ee() = NOT_OK\n", tmp___10, tmp___9);
29160a29149,29150
>     printk("<3>%s %s: process_done_ee() = NOT_OK\n", tmp___10, tmp___9);
> #line 4331
29165,29166d29154
< #line 4333
<   set_bit(1U, (unsigned long volatile   *)(& mdev->flags));
29168c29156
<   spin_lock_irq(& mdev->req_lock);
---
>   set_bit(1U, (unsigned long volatile   *)(& mdev->flags));
29170c29158
<   empty = list_empty((struct list_head  const  *)(& mdev->done_ee));
---
>   spin_lock_irq(& mdev->req_lock);
29171a29160,29161
>   empty = list_empty((struct list_head  const  *)(& mdev->done_ee));
> #line 4337
29173,29174d29162
< #line 4340
<   if (empty != 0) {
29175a29164,29165
>   if (empty != 0) {
> #line 4342
29180c29170
< #line 4342
---
> #line 4343
29183,29184d29172
< #line 4344
<   if ((unsigned int )*((unsigned char *)mdev->net_conf + 528UL) == 0U) {
29185a29174,29175
>   if ((unsigned int )*((unsigned char *)mdev->net_conf + 528UL) == 0U) {
> #line 4346
29190c29180
< #line 4348
---
> #line 4349
29192c29182
< #line 4348
---
> #line 4349
29194,29195d29183
< #line 4348
<   if (tmp___13 != 0) {
29196a29185,29186
>   if (tmp___13 != 0) {
> #line 4350
29201c29191
< #line 4351
---
> #line 4352
29204c29194
< #line 4353
---
> #line 4354
29206c29196
< #line 4355
---
> #line 4356
29208c29198
< #line 4355
---
> #line 4356
29210c29200
< #line 4367
---
> #line 4368
29212,29213d29201
< #line 4367
<   if (tmp___21 != 0L) {
29215c29203
<     received = received + rv;
---
>   if (tmp___21 != 0L) {
29216a29205,29206
>     received = received + rv;
> #line 4370
29219,29220d29208
< #line 4370
<   if (rv == 0) {
29221a29210,29211
>   if (rv == 0) {
> #line 4372
29223c29213
< #line 4371
---
> #line 4372
29225,29226d29214
< #line 4371
<     printk("<3>%s %s: meta connection shut down by peer.\n", tmp___16, tmp___15);
29227a29216,29217
>     printk("<3>%s %s: meta connection shut down by peer.\n", tmp___16, tmp___15);
> #line 4373
29230,29231d29219
< #line 4373
<   if (rv == -11) {
29232a29221,29222
>   if (rv == -11) {
> #line 4375
29234c29224
< #line 4376
---
> #line 4377
29236c29226
< #line 4376
---
> #line 4377
29238,29239d29227
< #line 4376
<       printk("<3>%s %s: PingAck did not arrive in time.\n", tmp___18, tmp___17);
29240a29229,29230
>       printk("<3>%s %s: PingAck did not arrive in time.\n", tmp___18, tmp___17);
> #line 4378
29245,29246d29234
< #line 4379
<     set_bit(2U, (unsigned long volatile   *)(& mdev->flags));
29247a29236,29237
>     set_bit(2U, (unsigned long volatile   *)(& mdev->flags));
> #line 4381
29250,29251d29239
< #line 4381
<   if (rv == -4) {
29252a29241,29242
>   if (rv == -4) {
> #line 4383
29255c29245
< #line 4384
---
> #line 4385
29257c29247
< #line 4384
---
> #line 4385
29259,29260d29248
< #line 4384
<     printk("<3>%s %s: sock_recvmsg returned %d\n", tmp___20, tmp___19, rv);
29261a29250,29251
>     printk("<3>%s %s: sock_recvmsg returned %d\n", tmp___20, tmp___19, rv);
> #line 4386
29264,29265d29253
< #line 4388
<   if (received == expect && (unsigned long )cmd == (unsigned long )((struct asender_cmd *)0)) {
29266a29255,29256
>   if (received == expect && (unsigned long )cmd == (unsigned long )((struct asender_cmd *)0)) {
> #line 4390
29268,29269d29257
< #line 4389
<     if (tmp___25 != 0L) {
29270a29259,29260
>     if (tmp___25 != 0L) {
> #line 4391
29272c29262
< #line 4390
---
> #line 4391
29274c29264
< #line 4390
---
> #line 4391
29276c29266
< #line 4390
---
> #line 4391
29279c29269
< #line 4393
---
> #line 4394
29284c29274
< #line 4395
---
> #line 4396
29286,29287d29275
< #line 4395
<     cmd = get_asender_cmd((int )tmp___26);
29288a29277,29278
>     cmd = get_asender_cmd((int )tmp___26);
> #line 4397
29290,29291d29279
< #line 4396
<     len = (int )tmp___27;
29292a29281,29282
>     len = (int )tmp___27;
> #line 4398
29295,29296d29284
< #line 4397
<     if (tmp___31 != 0L) {
29297a29286,29287
>     if (tmp___31 != 0L) {
> #line 4399
29299c29289
< #line 4398
---
> #line 4399
29301c29291
< #line 4398
---
> #line 4399
29303c29293
< #line 4398
---
> #line 4399
29306c29296
< #line 4401
---
> #line 4402
29311,29312d29300
< #line 4403
<     expect = (int )cmd->pkt_size;
29313a29302,29303
>     expect = (int )cmd->pkt_size;
> #line 4405
29315c29305
< #line 4404
---
> #line 4405
29317c29307
< #line 4404
---
> #line 4405
29319c29309
< #line 4404
---
> #line 4405
29321c29311
< #line 4404
---
> #line 4405
29324c29314
<              4404);
---
>              4405);
29328,29329d29317
< #line 4404
<     if (_b___0 != 0) {
29330a29319,29320
>     if (_b___0 != 0) {
> #line 4406
29338,29339d29327
< #line 4407
<   if (received == expect) {
29340a29329,29330
>   if (received == expect) {
> #line 4409
29342c29332
< #line 4408
---
> #line 4409
29344c29334
< #line 4408
---
> #line 4409
29346c29336
< #line 4408
---
> #line 4409
29348c29338
<              4408);
---
>              4409);
29352c29342
< #line 4409
---
> #line 4410
29354,29355d29343
< #line 4409
<     if (tmp___36 == 0) {
29356a29345,29346
>     if (tmp___36 == 0) {
> #line 4411
29361,29362d29350
< #line 4412
<     buf = (void *)h;
29364c29352
<     received = 0;
---
>     buf = (void *)h;
29366c29354
<     expect = 8;
---
>     received = 0;
29367a29356,29357
>     expect = 8;
> #line 4416
29373c29363
< #line 4312
---
> #line 4313
29375,29376d29364
< #line 4312
<   if ((unsigned int )tmp___37 == 1U) {
29377a29366,29367
>   if ((unsigned int )tmp___37 == 1U) {
> #line 4314
29383c29373
< #line 4419
---
> #line 4420
29386c29376
< #line 4421
---
> #line 4422
29388c29378
< #line 4421
---
> #line 4422
29390c29380
< #line 4421
---
> #line 4422
29392c29382
< #line 4421
---
> #line 4422
29394c29384
< #line 4421
---
> #line 4422
29399c29389
< #line 4423
---
> #line 4424
29402c29392
< #line 4425
---
> #line 4426
29404c29394
< #line 4425
---
> #line 4426
29406c29396
< #line 4425
---
> #line 4426
29408c29398
< #line 4425
---
> #line 4426
29410c29400
< #line 4425
---
> #line 4426
29415c29405
< #line 4427
---
> #line 4428
29417c29407
< #line 4429
---
> #line 4430
29419c29409
< #line 4429
---
> #line 4430
29421c29411
< #line 4429
---
> #line 4430
29423c29413
< #line 4429
---
> #line 4430
29426c29416
<            4429);
---
>            4430);
29430c29420
< #line 4430
---
> #line 4431
29432c29422
< #line 4430
---
> #line 4431
29434c29424
< #line 4430
---
> #line 4431
29436c29426
< #line 4432
---
> #line 4433
29440c29430
< #line 4472 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4473 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
29447c29437
< #line 4484
---
> #line 4485
29449c29439
< #line 4493
---
> #line 4494
29451c29441
< #line 4495
---
> #line 4496
29454c29444
< #line 4498
---
> #line 4499
29456c29446
< #line 4498
---
> #line 4499
29459c29449
< #line 4500
---
> #line 4501
29464c29454
< #line 4495
---
> #line 4496
29466,29467d29455
< #line 4495
<   if (tmp___0 != 0) {
29468a29457,29458
>   if (tmp___0 != 0) {
> #line 4497
29475c29465
< #line 4509
---
> #line 4510
29477c29467
< #line 4512
---
> #line 4513
