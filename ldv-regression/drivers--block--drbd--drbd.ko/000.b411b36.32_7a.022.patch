6718c6718
< #line 3230
---
> #line 3231
6724c6724
< #line 3496 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3497 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
6726c6726
< #line 4124 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4125 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
6728c6728
< #line 4287 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4288 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
6733c6733
< #line 4592 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4593 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
21368,21373c21368,21373
<   char const   *tmp___4 ;
<   char const   *tmp___5 ;
<   enum finish_epoch tmp___6 ;
<   void *tmp___7 ;
<   char const   *tmp___8 ;
<   char const   *tmp___9 ;
---
>   enum finish_epoch tmp___4 ;
>   void *tmp___5 ;
>   char const   *tmp___6 ;
>   char const   *tmp___7 ;
>   int tmp___8 ;
>   enum finish_epoch tmp___9 ;
21375,21376d21374
<   enum finish_epoch tmp___11 ;
<   int tmp___12 ;
21458,21469c21456
<   if (rv != 0) {
< #line 1236
<     tmp___4 = dev_name((struct device  const  *)(& (mdev->vdisk)->part0.__dev));
< #line 1236
<     tmp___5 = dev_driver_string((struct device  const  *)(& (mdev->vdisk)->part0.__dev));
< #line 1236
<     printk("<3>%s %s: ASSERT( rv == FE_STILL_LIVE ) in %s:%d\n", tmp___5, tmp___4,
<            (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<            1236);
<   } else {
< 
<   }
---
>   if (rv == 0) {
21471c21458
<   set_bit(0U, (unsigned long volatile   *)(& (mdev->current_epoch)->flags));
---
>     set_bit(0U, (unsigned long volatile   *)(& (mdev->current_epoch)->flags));
21473c21460
<   drbd_wait_ee_list_empty(mdev, & mdev->active_ee);
---
>     drbd_wait_ee_list_empty(mdev, & mdev->active_ee);
21475c21462
<   tmp___6 = drbd_flush_after_epoch(mdev, mdev->current_epoch);
---
>     tmp___4 = drbd_flush_after_epoch(mdev, mdev->current_epoch);
21477,21479c21464,21467
<   rv = (int )tmp___6;
< #line 1240
<   if (rv == 2) {
---
>     rv = (int )tmp___4;
>   } else {
> 
>   }
21480a21469,21470
>   if (rv == 2) {
> #line 1242
21485c21475
< #line 1246
---
> #line 1247
21489,21492d21478
< #line 1251
<   tmp___7 = kmalloc___1(40UL, 16U);
< #line 1251
<   epoch = (struct drbd_epoch *)tmp___7;
21494,21498c21480,21482
<   if ((unsigned long )epoch == (unsigned long )((struct drbd_epoch *)0)) {
< #line 1253
<     tmp___8 = dev_name((struct device  const  *)(& (mdev->vdisk)->part0.__dev));
< #line 1253
<     tmp___9 = dev_driver_string((struct device  const  *)(& (mdev->vdisk)->part0.__dev));
---
>   tmp___5 = kmalloc___1(40UL, 16U);
> #line 1252
>   epoch = (struct drbd_epoch *)tmp___5;
21500c21484
<     printk("<4>%s %s: Allocation of an epoch failed, slowing down\n", tmp___9, tmp___8);
---
>   if ((unsigned long )epoch == (unsigned long )((struct drbd_epoch *)0)) {
21502c21486
<     tmp___10 = test_and_set_bit(0, (unsigned long volatile   *)(& epoch->flags));
---
>     tmp___6 = dev_name((struct device  const  *)(& (mdev->vdisk)->part0.__dev));
21504c21488,21490
<     issue_flush = tmp___10 == 0;
---
>     tmp___7 = dev_driver_string((struct device  const  *)(& (mdev->vdisk)->part0.__dev));
> #line 1254
>     printk("<4>%s %s: Allocation of an epoch failed, slowing down\n", tmp___7, tmp___6);
21506c21492,21494
<     drbd_wait_ee_list_empty(mdev, & mdev->active_ee);
---
>     tmp___8 = test_and_set_bit(0, (unsigned long volatile   *)(& epoch->flags));
> #line 1255
>     issue_flush = tmp___8 == 0;
21508,21510c21496
<     if (issue_flush != 0) {
< #line 1257
<       tmp___11 = drbd_flush_after_epoch(mdev, mdev->current_epoch);
---
>     drbd_wait_ee_list_empty(mdev, & mdev->active_ee);
21512c21498
<       rv = (int )tmp___11;
---
>     if (issue_flush != 0) {
21514c21500,21502
<       if (rv == 2) {
---
>       tmp___9 = drbd_flush_after_epoch(mdev, mdev->current_epoch);
> #line 1258
>       rv = (int )tmp___9;
21515a21504,21505
>       if (rv == 2) {
> #line 1260
21523c21513
< #line 1262
---
> #line 1263
21525c21515
< #line 1264
---
> #line 1265
21530,21531d21519
< #line 1267
<   epoch->flags = 0UL;
21533c21521
<   atomic_set(& epoch->epoch_size, 0);
---
>   epoch->flags = 0UL;
21534a21523,21524
>   atomic_set(& epoch->epoch_size, 0);
> #line 1270
21536,21539d21525
< #line 1271
<   spin_lock(& mdev->epoch_lock);
< #line 1272
<   tmp___12 = atomic_read((atomic_t const   *)(& (mdev->current_epoch)->epoch_size));
21541c21527
<   if (tmp___12 != 0) {
---
>   spin_lock(& mdev->epoch_lock);
21543c21529,21531
<     list_add(& epoch->list, & (mdev->current_epoch)->list);
---
>   tmp___10 = atomic_read((atomic_t const   *)(& (mdev->current_epoch)->epoch_size));
> #line 1273
>   if (tmp___10 != 0) {
21545c21533
<     mdev->current_epoch = epoch;
---
>     list_add(& epoch->list, & (mdev->current_epoch)->list);
21546a21535,21536
>     mdev->current_epoch = epoch;
> #line 1276
21549c21539
< #line 1278
---
> #line 1279
21552c21542
< #line 1280
---
> #line 1281
21554c21544
< #line 1282
---
> #line 1283
21558c21548
< #line 1288 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 1289 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
21595,21596d21584
< #line 1295
<   dig_in = mdev->int_dig_in;
21597a21586,21587
>   dig_in = mdev->int_dig_in;
> #line 1297
21599c21589
< #line 1298
---
> #line 1299
21601c21591
< #line 1298
---
> #line 1299
21603c21593
< #line 1298
---
> #line 1299
21606c21596
< #line 1298
---
> #line 1299
21609,21610d21598
< #line 1301
<   if (dgs != 0) {
21612c21600
<     rr = drbd_recv(mdev, dig_in, (size_t )dgs);
---
>   if (dgs != 0) {
21614c21602
<     if (rr != dgs) {
---
>     rr = drbd_recv(mdev, dig_in, (size_t )dgs);
21615a21604,21605
>     if (rr != dgs) {
> #line 1305
21617c21607
< #line 1304
---
> #line 1305
21619c21609
< #line 1304
---
> #line 1305
21622c21612
< #line 1306
---
> #line 1307
21630c21620
< #line 1310
---
> #line 1311
21632c21622
< #line 1312
---
> #line 1313
21634c21624
< #line 1312
---
> #line 1313
21636c21626
< #line 1312
---
> #line 1313
21638c21628
< #line 1312
---
> #line 1313
21640c21630
< #line 1312
---
> #line 1313
21643c21633
<            1312);
---
>            1313);
21647c21637
< #line 1312
---
> #line 1313
21649c21639
< #line 1312
---
> #line 1313
21654c21644
< #line 1313
---
> #line 1314
21656c21646
< #line 1313
---
> #line 1314
21658c21648
< #line 1313
---
> #line 1314
21660c21650
< #line 1313
---
> #line 1314
21662c21652
< #line 1313
---
> #line 1314
21665c21655
<            1313);
---
>            1314);
21669c21659
< #line 1313
---
> #line 1314
21671c21661
< #line 1313
---
> #line 1314
21676,21677d21665
< #line 1318
<   e = drbd_alloc_ee(mdev, id, sector, (unsigned int )data_size, 16U);
21679c21667
<   if ((unsigned long )e == (unsigned long )((struct drbd_epoch_entry *)0)) {
---
>   e = drbd_alloc_ee(mdev, id, sector, (unsigned int )data_size, 16U);
21680a21669,21670
>   if ((unsigned long )e == (unsigned long )((struct drbd_epoch_entry *)0)) {
> #line 1321
21685,21686d21674
< #line 1321
<   bio = e->private_bio;
21688c21676
<   ds = data_size;
---
>   bio = e->private_bio;
21689a21678,21679
>   ds = data_size;
> #line 1324
21691c21681
< #line 1323
---
> #line 1324
21693c21683
< #line 1323
---
> #line 1324
21696,21697d21685
< #line 1324
<   page = bvec->bv_page;
21698a21687,21688
>   page = bvec->bv_page;
> #line 1326
21700c21690
< #line 1325
---
> #line 1326
21702c21692
< #line 1325
---
> #line 1326
21704,21705d21693
< #line 1325
<   rr = drbd_recv(mdev, tmp___6, (size_t )(__min1 < __min2 ? __min1 : __min2));
21707c21695
<   kunmap(page);
---
>   rr = drbd_recv(mdev, tmp___6, (size_t )(__min1 < __min2 ? __min1 : __min2));
21708a21697,21698
>   kunmap(page);
> #line 1328
21710c21700
< #line 1327
---
> #line 1328
21712,21713d21701
< #line 1327
<   if ((__min1___1 < __min2___1 ? __min1___1 : __min2___1) != rr) {
21715c21703
<     drbd_free_ee(mdev, e);
---
>   if ((__min1___1 < __min2___1 ? __min1___1 : __min2___1) != rr) {
21716a21705,21706
>     drbd_free_ee(mdev, e);
> #line 1330
21718c21708
< #line 1329
---
> #line 1330
21720c21710
< #line 1329
---
> #line 1330
21722c21712
< #line 1329
---
> #line 1330
21724c21714
< #line 1329
---
> #line 1330
21727c21717
< #line 1331
---
> #line 1332
21732c21722
< #line 1333
---
> #line 1334
21734c21724
< #line 1323
---
> #line 1324
21736c21726
< #line 1323
---
> #line 1324
21739,21740d21728
< #line 1323
<   if ((int )bio->bi_vcnt > i) {
21741a21730,21731
>   if ((int )bio->bi_vcnt > i) {
> #line 1325
21747,21748d21736
< #line 1336
<   if (dgs != 0) {
21750c21738
<     drbd_csum(mdev, mdev->integrity_r_tfm, bio, dig_vv);
---
>   if (dgs != 0) {
21751a21740,21741
>     drbd_csum(mdev, mdev->integrity_r_tfm, bio, dig_vv);
> #line 1339
21753,21754d21742
< #line 1338
<     if (tmp___11 != 0) {
21755a21744,21745
>     if (tmp___11 != 0) {
> #line 1340
21757c21747
< #line 1339
---
> #line 1340
21759,21760d21748
< #line 1339
<       printk("<3>%s %s: Digest integrity check FAILED.\n", tmp___10, tmp___9);
21761a21750,21751
>       printk("<3>%s %s: Digest integrity check FAILED.\n", tmp___10, tmp___9);
> #line 1341
21764,21765d21753
< #line 1342
<       drbd_free_ee(mdev, e);
21766a21755,21756
>       drbd_free_ee(mdev, e);
> #line 1344
21774,21775d21763
< #line 1346
<   mdev->recv_cnt = mdev->recv_cnt + (unsigned int )(data_size >> 9);
21776a21765,21766
>   mdev->recv_cnt = mdev->recv_cnt + (unsigned int )(data_size >> 9);
> #line 1348
21780c21770
< #line 1353 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 1354 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
21797c21787
< #line 1356
---
> #line 1357
21799c21789
< #line 1359
---
> #line 1360
21801,21802d21790
< #line 1361
<   data = kmap(page);
21803a21792,21793
>   data = kmap(page);
> #line 1363
21806c21796
< #line 1363
---
> #line 1364
21808c21798
< #line 1363
---
> #line 1364
21810,21811d21799
< #line 1363
<   rr = drbd_recv(mdev, data, (size_t )(__min1 < __min2 ? __min1 : __min2));
21812a21801,21802
>   rr = drbd_recv(mdev, data, (size_t )(__min1 < __min2 ? __min1 : __min2));
> #line 1365
21814c21804
< #line 1364
---
> #line 1365
21816,21817d21805
< #line 1364
<   if ((__min1___1 < __min2___1 ? __min1___1 : __min2___1) != rr) {
21819c21807
<     rv = 0;
---
>   if ((__min1___1 < __min2___1 ? __min1___1 : __min2___1) != rr) {
21820a21809,21810
>     rv = 0;
> #line 1367
21822c21812
< #line 1366
---
> #line 1367
21824c21814
< #line 1366
---
> #line 1367
21826c21816
< #line 1366
---
> #line 1367
21828c21818
< #line 1366
---
> #line 1367
21831c21821
< #line 1368
---
> #line 1369
21836c21826
< #line 1370
---
> #line 1371
21839,21840d21828
< #line 1362
<   if (data_size != 0) {
21841a21830,21831
>   if (data_size != 0) {
> #line 1364
21847,21848d21836
< #line 1372
<   kunmap(page);
21850c21838
<   drbd_pp_free(mdev, page);
---
>   kunmap(page);
21851a21840,21841
>   drbd_pp_free(mdev, page);
> #line 1375
21855c21845
< #line 1377 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 1378 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
21884,21885d21873
< #line 1383
<   dig_in = mdev->int_dig_in;
21886a21875,21876
>   dig_in = mdev->int_dig_in;
> #line 1385
21888c21878
< #line 1386
---
> #line 1387
21890c21880
< #line 1386
---
> #line 1387
21892c21882
< #line 1386
---
> #line 1387
21895c21885
< #line 1386
---
> #line 1387
21898,21899d21887
< #line 1389
<   if (dgs != 0) {
21901c21889
<     rr = drbd_recv(mdev, dig_in, (size_t )dgs);
---
>   if (dgs != 0) {
21903c21891
<     if (rr != dgs) {
---
>     rr = drbd_recv(mdev, dig_in, (size_t )dgs);
21904a21893,21894
>     if (rr != dgs) {
> #line 1393
21906c21896
< #line 1392
---
> #line 1393
21908c21898
< #line 1392
---
> #line 1393
21911c21901
< #line 1394
---
> #line 1395
21919c21909
< #line 1398
---
> #line 1399
21921c21911
< #line 1402
---
> #line 1403
21923,21924d21912
< #line 1404
<   bio = req->master_bio;
21925a21914,21915
>   bio = req->master_bio;
> #line 1406
21927c21917
< #line 1405
---
> #line 1406
21929c21919
< #line 1405
---
> #line 1406
21931c21921
< #line 1405
---
> #line 1406
21934c21924
<            1405);
---
>            1406);
21938c21928
< #line 1407
---
> #line 1408
21940c21930
< #line 1407
---
> #line 1408
21942c21932
< #line 1407
---
> #line 1408
21945c21935
< #line 1408
---
> #line 1409
21947c21937
< #line 1408
---
> #line 1409
21949,21950d21938
< #line 1408
<   expect = __min1 < __min2 ? __min1 : __min2;
21951a21940,21941
>   expect = __min1 < __min2 ? __min1 : __min2;
> #line 1410
21953c21943
< #line 1409
---
> #line 1410
21955,21956d21944
< #line 1412
<   kunmap(bvec->bv_page);
21958c21946
<   if (rr != expect) {
---
>   kunmap(bvec->bv_page);
21959a21948,21949
>   if (rr != expect) {
> #line 1415
21961c21951
< #line 1414
---
> #line 1415
21963c21953
< #line 1414
---
> #line 1415
21966c21956
< #line 1417
---
> #line 1418
21971c21961
< #line 1419
---
> #line 1420
21973c21963
< #line 1407
---
> #line 1408
21975c21965
< #line 1407
---
> #line 1408
21978,21979d21967
< #line 1407
<   if ((int )bio->bi_vcnt > i) {
21980a21969,21970
>   if ((int )bio->bi_vcnt > i) {
> #line 1409
21986,21987d21975
< #line 1422
<   if (dgs != 0) {
21989c21977
<     drbd_csum(mdev, mdev->integrity_r_tfm, bio, dig_vv);
---
>   if (dgs != 0) {
21990a21979,21980
>     drbd_csum(mdev, mdev->integrity_r_tfm, bio, dig_vv);
> #line 1425
21992,21993d21981
< #line 1424
<     if (tmp___9 != 0) {
21994a21983,21984
>     if (tmp___9 != 0) {
> #line 1426
21996c21986
< #line 1425
---
> #line 1426
21998,21999d21987
< #line 1425
<       printk("<3>%s %s: Digest integrity check FAILED. Broken NICs?\n", tmp___8, tmp___7);
22000a21989,21990
>       printk("<3>%s %s: Digest integrity check FAILED. Broken NICs?\n", tmp___8, tmp___7);
> #line 1427
22008c21998
< #line 1430
---
> #line 1431
22010c22000
< #line 1430
---
> #line 1431
22012c22002
< #line 1430
---
> #line 1431
22014c22004
< #line 1430
---
> #line 1431
22016c22006
<            1430);
---
>            1431);
22020c22010
< #line 1431
---
> #line 1432
22024c22014
< #line 1436 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 1437 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
22040,22041d22029
< #line 1438
<   e = (struct drbd_epoch_entry *)w;
22042a22031,22032
>   e = (struct drbd_epoch_entry *)w;
> #line 1440
22044c22034
< #line 1442
---
> #line 1443
22046c22036
< #line 1442
---
> #line 1443
22048c22038
< #line 1442
---
> #line 1443
22050c22040
< #line 1442
---
> #line 1443
22052c22042
< #line 1442
---
> #line 1443
22055c22045
<            1442);
---
>            1443);
22059c22049
< #line 1444
---
> #line 1445
22061,22062d22050
< #line 1444
<   if (tmp___2 != 0L) {
22064,22065c22052
<     __drbd_set_in_sync(mdev, sector, (int )e->size, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<                        1445U);
---
>   if (tmp___2 != 0L) {
22066a22054,22056
>     __drbd_set_in_sync(mdev, sector, (int )e->size, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>                        1446U);
> #line 1447
22069c22059
< #line 1449
---
> #line 1450
22071c22061
< #line 1451
---
> #line 1452
22074c22064
< #line 1453
---
> #line 1454
22076c22066
< #line 1453
---
> #line 1454
22078c22068
< #line 1453
---
> #line 1454
22080c22070
< #line 1453
---
> #line 1454
22082c22072
< #line 1453
---
> #line 1454
22084c22074
< #line 1453
---
> #line 1454
22086c22076
< #line 1453
---
> #line 1454
22088c22078
<            1453, tmp___3);
---
>            1454, tmp___3);
22092c22082
< #line 1455
---
> #line 1456
22096c22086
< #line 1458 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 1459 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
22106,22107d22095
< #line 1462
<   e = read_in_block(mdev, 0xffffffffffffffffULL, sector, data_size);
22109c22097
<   if ((unsigned long )e == (unsigned long )((struct drbd_epoch_entry *)0)) {
---
>   e = read_in_block(mdev, 0xffffffffffffffffULL, sector, data_size);
22111c22099
<     put_ldev(mdev);
---
>   if ((unsigned long )e == (unsigned long )((struct drbd_epoch_entry *)0)) {
22112a22101,22102
>     put_ldev(mdev);
> #line 1466
22117c22107
< #line 1468
---
> #line 1469
22119c22109
< #line 1468
---
> #line 1469
22121c22111
< #line 1468
---
> #line 1469
22123c22113
< #line 1468
---
> #line 1469
22125c22115
< #line 1468
---
> #line 1469
22127c22117
< #line 1468
---
> #line 1469
22129c22119
< #line 1468
---
> #line 1469
22131c22121
<            1468, tmp);
---
>            1469, tmp);
22135,22136d22124
< #line 1470
<   (e->private_bio)->bi_end_io = & drbd_endio_write_sec;
22138c22126
<   (e->private_bio)->bi_rw = 1UL;
---
>   (e->private_bio)->bi_end_io = & drbd_endio_write_sec;
22139a22128,22129
>   (e->private_bio)->bi_rw = 1UL;
> #line 1473
22141c22131
< #line 1474
---
> #line 1475
22143,22144d22132
< #line 1478
<   spin_lock_irq(& mdev->req_lock);
22146c22134
<   list_add(& e->w.list, & mdev->sync_ee);
---
>   spin_lock_irq(& mdev->req_lock);
22147a22136,22137
>   list_add(& e->w.list, & mdev->sync_ee);
> #line 1481
22149c22139
< #line 1482
---
> #line 1483
22151,22152d22140
< #line 1485
<   maybe_kick_lo(mdev);
22153a22142,22143
>   maybe_kick_lo(mdev);
> #line 1487
22157c22147
< #line 1489 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 1490 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
22176c22166
< #line 1495
---
> #line 1496
22178,22179d22167
< #line 1497
<   header_size = 24U;
22180a22169,22170
>   header_size = 24U;
> #line 1499
22182c22172
< #line 1500
---
> #line 1501
22184c22174
< #line 1500
---
> #line 1501
22186c22176
< #line 1500
---
> #line 1501
22188c22178
< #line 1500
---
> #line 1501
22190c22180
< #line 1500
---
> #line 1501
22193c22183
<            1500);
---
>            1501);
22197c22187
< #line 1500
---
> #line 1501
22199c22189
< #line 1500
---
> #line 1501
22204c22194
< #line 1502
---
> #line 1503
22206,22207d22195
< #line 1502
<   if ((unsigned int )tmp___1 != header_size) {
22208a22197,22198
>   if ((unsigned int )tmp___1 != header_size) {
> #line 1504
22213c22203
< #line 1505
---
> #line 1506
22215c22205
< #line 1505
---
> #line 1506
22217,22218d22206
< #line 1507
<   spin_lock_irq(& mdev->req_lock);
22220c22208
<   req = _ar_id_to_req(mdev, p->block_id, sector);
---
>   spin_lock_irq(& mdev->req_lock);
22222c22210
<   spin_unlock_irq(& mdev->req_lock);
---
>   req = _ar_id_to_req(mdev, p->block_id, sector);
22223a22212,22213
>   spin_unlock_irq(& mdev->req_lock);
> #line 1511
22226,22227d22215
< #line 1510
<   if (tmp___5 != 0L) {
22228a22217,22218
>   if (tmp___5 != 0L) {
> #line 1512
22230c22220
< #line 1511
---
> #line 1512
22232,22233d22221
< #line 1511
<     printk("<3>%s %s: Got a corrupt block_id/sector pair(1).\n", tmp___4, tmp___3);
22234a22223,22224
>     printk("<3>%s %s: Got a corrupt block_id/sector pair(1).\n", tmp___4, tmp___3);
> #line 1513
22239c22229
< #line 1518
---
> #line 1519
22241,22242d22230
< #line 1520
<   if (ok != 0) {
22243a22232,22233
>   if (ok != 0) {
> #line 1522
22248c22238
< #line 1526
---
> #line 1527
22252c22242
< #line 1529 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 1530 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
22273c22263
< #line 1534
---
> #line 1535
22275,22276d22264
< #line 1536
<   header_size = 24U;
22277a22266,22267
>   header_size = 24U;
> #line 1538
22279c22269
< #line 1539
---
> #line 1540
22281c22271
< #line 1539
---
> #line 1540
22283c22273
< #line 1539
---
> #line 1540
22285c22275
< #line 1539
---
> #line 1540
22287c22277
< #line 1539
---
> #line 1540
22290c22280
<            1539);
---
>            1540);
22294c22284
< #line 1539
---
> #line 1540
22296c22286
< #line 1539
---
> #line 1540
22301c22291
< #line 1541
---
> #line 1542
22303,22304d22292
< #line 1541
<   if ((unsigned int )tmp___1 != header_size) {
22305a22294,22295
>   if ((unsigned int )tmp___1 != header_size) {
> #line 1543
22310c22300
< #line 1544
---
> #line 1545
22312,22313d22301
< #line 1544
<   sector = (sector_t )tmp___2;
22314a22303,22304
>   sector = (sector_t )tmp___2;
> #line 1546
22316c22306
< #line 1545
---
> #line 1546
22318c22308
< #line 1545
---
> #line 1546
22320c22310
< #line 1545
---
> #line 1546
22323c22313
<            1545);
---
>            1546);
22327c22317
< #line 1547
---
> #line 1548
22329c22319
< #line 1547
---
> #line 1548
22331c22321
< #line 1551
---
> #line 1552
22334c22324
< #line 1553
---
> #line 1554
22336,22337d22325
< #line 1553
<     if (tmp___7 != 0) {
22338a22327,22328
>     if (tmp___7 != 0) {
> #line 1555
22340c22330
< #line 1554
---
> #line 1555
22342c22332
< #line 1554
---
> #line 1555
22347c22337
< #line 1556
---
> #line 1557
22349c22339
< #line 1558
---
> #line 1559
22352c22342
< #line 1561
---
> #line 1562
22356c22346
< #line 1567 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 1568 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
22378,22379d22367
< #line 1569
<   e = (struct drbd_epoch_entry *)w;
22380a22369,22370
>   e = (struct drbd_epoch_entry *)w;
> #line 1571
22382c22372
< #line 1572
---
> #line 1573
22384,22385d22373
< #line 1574
<   if ((e->flags & 8U) != 0U) {
22387c22375
<     epoch = previous_epoch(mdev, e->epoch);
---
>   if ((e->flags & 8U) != 0U) {
22389c22377
<     if ((unsigned long )epoch != (unsigned long )((struct drbd_epoch *)0)) {
---
>     epoch = previous_epoch(mdev, e->epoch);
22390a22379,22380
>     if ((unsigned long )epoch != (unsigned long )((struct drbd_epoch *)0)) {
> #line 1578
22398,22399d22387
< #line 1580
<   if ((mdev->net_conf)->wire_protocol == 3) {
22400a22389,22390
>   if ((mdev->net_conf)->wire_protocol == 3) {
> #line 1582
22402,22403d22391
< #line 1581
<     if (tmp___0 != 0L) {
22404a22393,22394
>     if (tmp___0 != 0L) {
> #line 1583
22406c22396
< #line 1586
---
> #line 1587
22408,22409d22397
< #line 1586
<       ok = tmp & ok;
22411c22399
<       if (pcmd == 23) {
---
>       ok = tmp & ok;
22412a22401,22402
>       if (pcmd == 23) {
> #line 1589
22414c22404
<                            1588U);
---
>                            1589U);
22419c22409
< #line 1590
---
> #line 1591
22422c22412
< #line 1594
---
> #line 1595
22424c22414
< #line 1594
---
> #line 1595
22426c22416
< #line 1594
---
> #line 1595
22428c22418
< #line 1594
---
> #line 1595
22430c22420
< #line 1594
---
> #line 1595
22432c22422
< #line 1594
---
> #line 1595
22434c22424
< #line 1594
---
> #line 1595
22436c22426
<              1594, tmp___1);
---
>              1595, tmp___1);
22443,22444d22432
< #line 1598
<   if ((unsigned int )*((unsigned char *)mdev->net_conf + 528UL) != 0U) {
22446c22434
<     spin_lock_irq(& mdev->req_lock);
---
>   if ((unsigned int )*((unsigned char *)mdev->net_conf + 528UL) != 0U) {
22447a22436,22437
>     spin_lock_irq(& mdev->req_lock);
> #line 1601
22449c22439
< #line 1600
---
> #line 1601
22451c22441
< #line 1600
---
> #line 1601
22453c22443
< #line 1600
---
> #line 1601
22455c22445
< #line 1600
---
> #line 1601
22458c22448
<              1600);
---
>              1601);
22462,22463d22451
< #line 1601
<     hlist_del_init(& e->colision);
22464a22453,22454
>     hlist_del_init(& e->colision);
> #line 1603
22467c22457
< #line 1604
---
> #line 1605
22469c22459
< #line 1604
---
> #line 1605
22471c22461
< #line 1604
---
> #line 1605
22473c22463
< #line 1604
---
> #line 1605
22475c22465
< #line 1604
---
> #line 1605
22478c22468
<              1604);
---
>              1605);
22483c22473
< #line 1607
---
> #line 1608
22485c22475
< #line 1609
---
> #line 1610
22489c22479
< #line 1612 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 1613 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
22505,22506d22494
< #line 1614
<   e = (struct drbd_epoch_entry *)w;
22507a22496,22497
>   e = (struct drbd_epoch_entry *)w;
> #line 1616
22509c22499
< #line 1617
---
> #line 1618
22511c22501
< #line 1617
---
> #line 1618
22513c22503
< #line 1617
---
> #line 1618
22515c22505
< #line 1617
---
> #line 1618
22518c22508
<            1617);
---
>            1618);
22522c22512
< #line 1618
---
> #line 1619
22524,22525d22513
< #line 1620
<   spin_lock_irq(& mdev->req_lock);
22526a22515,22516
>   spin_lock_irq(& mdev->req_lock);
> #line 1622
22528c22518
< #line 1621
---
> #line 1622
22530c22520
< #line 1621
---
> #line 1622
22532c22522
< #line 1621
---
> #line 1622
22534c22524
< #line 1621
---
> #line 1622
22537c22527
<            1621);
---
>            1622);
22541,22542d22530
< #line 1622
<   hlist_del_init(& e->colision);
22543a22532,22533
>   hlist_del_init(& e->colision);
> #line 1624
22545c22535
< #line 1625
---
> #line 1626
22547c22537
< #line 1625
---
> #line 1626
22549c22539
< #line 1625
---
> #line 1626
22551c22541
< #line 1625
---
> #line 1626
22553c22543
< #line 1625
---
> #line 1626
22555c22545
< #line 1625
---
> #line 1626
22557c22547
< #line 1625
---
> #line 1626
22559c22549
<            1625, tmp___4);
---
>            1626, tmp___4);
22563c22553
< #line 1627
---
> #line 1628
22567c22557
< #line 1651 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 1652 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
22582c22572
< #line 1653
---
> #line 1654
22584c22574
< #line 1653
---
> #line 1654
22586c22576
< #line 1653
---
> #line 1654
22588c22578
< #line 1653
---
> #line 1654
22590c22580
< #line 1653
---
> #line 1654
22592c22582
< #line 1653
---
> #line 1654
22594,22595d22583
< #line 1656
<   ret = 0;
22596a22585,22586
>   ret = 0;
> #line 1658
22599,22600d22588
< #line 1659
<   prepare_to_wait(& mdev->seq_wait, & wait, 1);
22601a22590,22591
>   prepare_to_wait(& mdev->seq_wait, & wait, 1);
> #line 1661
22603,22604d22592
< #line 1660
<   if (tmp___0 <= 0) {
22605a22594,22595
>   if (tmp___0 <= 0) {
> #line 1662
22610c22600
< #line 1662
---
> #line 1663
22612c22602
< #line 1662
---
> #line 1663
22614,22615d22603
< #line 1662
<   if (tmp___2 != 0) {
22617c22605
<     ret = -512;
---
>   if (tmp___2 != 0) {
22618a22607,22608
>     ret = -512;
> #line 1665
22623,22624d22612
< #line 1666
<   p_seq = mdev->peer_seq;
22626c22614
<   spin_unlock(& mdev->peer_seq_lock);
---
>   p_seq = mdev->peer_seq;
22628c22616
<   timeout = schedule_timeout(7500L);
---
>   spin_unlock(& mdev->peer_seq_lock);
22630c22618
<   spin_lock(& mdev->peer_seq_lock);
---
>   timeout = schedule_timeout(7500L);
22632c22620
<   if (timeout == 0L && mdev->peer_seq == p_seq) {
---
>   spin_lock(& mdev->peer_seq_lock);
22634c22622
<     ret = -110;
---
>   if (timeout == 0L && mdev->peer_seq == p_seq) {
22635a22624,22625
>     ret = -110;
> #line 1673
22637c22627
< #line 1672
---
> #line 1673
22639c22629
< #line 1672
---
> #line 1673
22642c22632
< #line 1673
---
> #line 1674
22647c22637
< #line 1675
---
> #line 1676
22650,22651d22639
< #line 1676
<   finish_wait(& mdev->seq_wait, & wait);
22653c22641
<   if (mdev->peer_seq + 1U == (unsigned int )packet_seq) {
---
>   finish_wait(& mdev->seq_wait, & wait);
22654a22643,22644
>   if (mdev->peer_seq + 1U == (unsigned int )packet_seq) {
> #line 1679
22659,22660d22648
< #line 1679
<   spin_unlock(& mdev->peer_seq_lock);
22661a22650,22651
>   spin_unlock(& mdev->peer_seq_lock);
> #line 1681
22665c22655
< #line 1684 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 1685 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
22728c22718
< #line 1688
---
> #line 1689
22730c22720
< #line 1690
---
> #line 1691
22732,22733d22721
< #line 1693
<   header_size = 24;
22734a22723,22724
>   header_size = 24;
> #line 1695
22736c22726
< #line 1696
---
> #line 1697
22738c22728
< #line 1696
---
> #line 1697
22740c22730
< #line 1696
---
> #line 1697
22742c22732
< #line 1696
---
> #line 1697
22744c22734
< #line 1696
---
> #line 1697
22747c22737
<            1696);
---
>            1697);
22751c22741
< #line 1696
---
> #line 1697
22753c22743
< #line 1696
---
> #line 1697
22758c22748
< #line 1698
---
> #line 1699
22760,22761d22749
< #line 1698
<   if (tmp___1 != header_size) {
22762a22751,22752
>   if (tmp___1 != header_size) {
> #line 1700
22767c22757
< #line 1701
---
> #line 1702
22769,22770d22758
< #line 1701
<   if (tmp___7 == 0) {
22771a22760,22761
>   if (tmp___7 == 0) {
> #line 1703
22773,22774d22762
< #line 1702
<     if (tmp___4 != 0) {
22775a22764,22765
>     if (tmp___4 != 0) {
> #line 1704
22777c22767
< #line 1703
---
> #line 1704
22779c22769
< #line 1703
---
> #line 1704
22785,22786d22774
< #line 1705
<     spin_lock(& mdev->peer_seq_lock);
22787a22776,22777
>     spin_lock(& mdev->peer_seq_lock);
> #line 1707
22789,22790d22778
< #line 1706
<     if (mdev->peer_seq + 1U == tmp___5) {
22791a22780,22781
>     if (mdev->peer_seq + 1U == tmp___5) {
> #line 1708
22796c22786
< #line 1708
---
> #line 1709
22798,22799d22787
< #line 1710
<     drbd_send_ack_dp(mdev, P_NEG_ACK, p);
22801c22789
<     atomic_inc(& (mdev->current_epoch)->epoch_size);
---
>     drbd_send_ack_dp(mdev, P_NEG_ACK, p);
22802a22791,22792
>     atomic_inc(& (mdev->current_epoch)->epoch_size);
> #line 1713
22804c22794
< #line 1712
---
> #line 1713
22809c22799
< #line 1720
---
> #line 1721
22811,22812d22800
< #line 1720
<   sector = (sector_t )tmp___8;
22814c22802
<   e = read_in_block(mdev, p->block_id, sector, data_size);
---
>   sector = (sector_t )tmp___8;
22816c22804
<   if ((unsigned long )e == (unsigned long )((struct drbd_epoch_entry *)0)) {
---
>   e = read_in_block(mdev, p->block_id, sector, data_size);
22818c22806
<     put_ldev(mdev);
---
>   if ((unsigned long )e == (unsigned long )((struct drbd_epoch_entry *)0)) {
22819a22808,22809
>     put_ldev(mdev);
> #line 1725
22824,22825d22813
< #line 1727
<   (e->private_bio)->bi_end_io = & drbd_endio_write_sec;
22826a22815,22816
>   (e->private_bio)->bi_end_io = & drbd_endio_write_sec;
> #line 1729
22828,22829d22817
< #line 1730
<   spin_lock(& mdev->epoch_lock);
22831c22819
<   e->epoch = mdev->current_epoch;
---
>   spin_lock(& mdev->epoch_lock);
22833c22821
<   atomic_inc(& (e->epoch)->epoch_size);
---
>   e->epoch = mdev->current_epoch;
22834a22823,22824
>   atomic_inc(& (e->epoch)->epoch_size);
> #line 1734
22836c22826
< #line 1735
---
> #line 1736
22838c22828
< #line 1735
---
> #line 1736
22840c22830
< #line 1735
---
> #line 1736
22842c22832
< #line 1740
---
> #line 1741
22844,22845d22833
< #line 1740
<       epoch = (struct drbd_epoch *)__mptr;
22847c22835
<       if ((unsigned long )e->epoch == (unsigned long )epoch) {
---
>       epoch = (struct drbd_epoch *)__mptr;
22849c22837
<         set_bit(2U, (unsigned long volatile   *)(& (e->epoch)->flags));
---
>       if ((unsigned long )e->epoch == (unsigned long )epoch) {
22851c22839
<         rw = rw | 32;
---
>         set_bit(2U, (unsigned long volatile   *)(& (e->epoch)->flags));
22852a22841,22842
>         rw = rw | 32;
> #line 1745
22855c22845
< #line 1746
---
> #line 1747
22857c22847
< #line 1746
---
> #line 1747
22859,22860d22848
< #line 1748
<           set_bit(0U, (unsigned long volatile   *)(& epoch->flags));
22862c22850
<           set_bit(2U, (unsigned long volatile   *)(& (e->epoch)->flags));
---
>           set_bit(0U, (unsigned long volatile   *)(& epoch->flags));
22864c22852
<           rw = rw | 32;
---
>           set_bit(2U, (unsigned long volatile   *)(& (e->epoch)->flags));
22865a22854,22855
>           rw = rw | 32;
> #line 1752
22868c22858
< #line 1746
---
> #line 1747
22870c22860
< #line 1746
---
> #line 1747
22872,22873d22861
< #line 1748
<             set_bit(0U, (unsigned long volatile   *)(& epoch->flags));
22875c22863
<             set_bit(2U, (unsigned long volatile   *)(& (e->epoch)->flags));
---
>             set_bit(0U, (unsigned long volatile   *)(& epoch->flags));
22877c22865
<             rw = rw | 32;
---
>             set_bit(2U, (unsigned long volatile   *)(& (e->epoch)->flags));
22878a22867,22868
>             rw = rw | 32;
> #line 1752
22891c22881
< #line 1755
---
> #line 1756
22893c22883
< #line 1757
---
> #line 1758
22895,22896d22884
< #line 1757
<   dp_flags = tmp___12;
22898c22886
<   if ((int )dp_flags & 1) {
---
>   dp_flags = tmp___12;
22899a22888,22889
>   if ((int )dp_flags & 1) {
> #line 1760
22901c22891
< #line 1759
---
> #line 1760
22903c22893
< #line 1759
---
> #line 1760
22909,22910d22898
< #line 1762
<   if ((dp_flags & 2U) != 0U) {
22911a22900,22901
>   if ((dp_flags & 2U) != 0U) {
> #line 1764
22916,22917d22905
< #line 1764
<   if ((dp_flags & 4U) != 0U) {
22918a22907,22908
>   if ((dp_flags & 4U) != 0U) {
> #line 1766
22923,22924d22912
< #line 1768
<   if ((unsigned int )*((unsigned char *)mdev->net_conf + 528UL) == 0U) {
22925a22914,22915
>   if ((unsigned int )*((unsigned char *)mdev->net_conf + 528UL) == 0U) {
> #line 1770
22928,22929d22917
< #line 1773
<     size = (int const   )e->size;
22930a22919,22920
>     size = (int const   )e->size;
> #line 1775
22932,22933d22921
< #line 1774
<     discard = tmp___15;
22934a22923,22924
>     discard = tmp___15;
> #line 1776
22936c22926
< #line 1775
---
> #line 1776
22938c22928
< #line 1775
---
> #line 1776
22940c22930
< #line 1775
---
> #line 1776
22942c22932
< #line 1775
---
> #line 1776
22944c22934
< #line 1775
---
> #line 1776
22946c22936
< #line 1781
---
> #line 1782
22948c22938
< #line 1781
---
> #line 1782
22950c22940
< #line 1781
---
> #line 1782
22952c22942
< #line 1781
---
> #line 1782
22955c22945
<              1781);
---
>              1782);
22959c22949
< #line 1782
---
> #line 1783
22962c22952
< #line 1782
---
> #line 1783
22964c22954
< #line 1782
---
> #line 1783
22966c22956
<                            "i" (1782), "i" (12UL));
---
>                            "i" (1783), "i" (12UL));
22968c22958
< #line 1782
---
> #line 1783
22973c22963
< #line 1783
---
> #line 1784
22976c22966
< #line 1783
---
> #line 1784
22978c22968
< #line 1783
---
> #line 1784
22980c22970
<                            "i" (1783), "i" (12UL));
---
>                            "i" (1784), "i" (12UL));
22982c22972
< #line 1783
---
> #line 1784
22987c22977
< #line 1819
---
> #line 1820
22989c22979
< #line 1819
---
> #line 1820
22991,22992d22980
< #line 1819
<     if (tmp___22 != 0) {
22993a22982,22983
>     if (tmp___22 != 0) {
> #line 1821
22998c22988
< #line 1822
---
> #line 1823
23000c22990
< #line 1824
---
> #line 1825
23002c22992
< #line 1824
---
> #line 1825
23004,23005d22993
< #line 1827
<     slot = tl_hash_slot(mdev, sector);
23006a22995,22996
>     slot = tl_hash_slot(mdev, sector);
> #line 1829
23009,23010d22998
< #line 1830
<     have_unacked = 0;
23012c23000
<     have_conflict = 0;
---
>     have_unacked = 0;
23013a23002,23003
>     have_conflict = 0;
> #line 1833
23015c23005
< #line 1834
---
> #line 1835
23017c23007
< #line 1834
---
> #line 1835
23020c23010
< #line 1835
---
> #line 1836
23022c23012
< #line 1835
---
> #line 1836
23024,23025d23013
< #line 1838
<       if (first != 0) {
23026a23015,23016
>       if (first != 0) {
> #line 1840
23028c23018
< #line 1839
---
> #line 1840
23030c23020
< #line 1839
---
> #line 1840
23032c23022
< #line 1839
---
> #line 1840
23034c23024
< #line 1839
---
> #line 1840
23041,23042d23030
< #line 1844
<       if ((i->rq_state & 8UL) != 0UL) {
23043a23032,23033
>       if ((i->rq_state & 8UL) != 0UL) {
> #line 1846
23048c23038
< #line 1846
---
> #line 1847
23053c23043
< #line 1834
---
> #line 1835
23056c23046
< #line 1834
---
> #line 1835
23058c23048
< #line 1834
---
> #line 1835
23060c23050
< #line 1834
---
> #line 1835
23062c23052
< #line 1834
---
> #line 1835
23064c23054
< #line 1834
---
> #line 1835
23066,23067d23055
< #line 1834
<         if (1 != 0) {
23068a23057,23058
>         if (1 != 0) {
> #line 1836
23071c23061
< #line 1837
---
> #line 1838
23075c23065
< #line 1837
---
> #line 1838
23082,23083d23071
< #line 1850
<     if (have_conflict == 0) {
23084a23073,23074
>     if (have_conflict == 0) {
> #line 1852
23089,23090d23078
< #line 1854
<     if ((first != 0 && discard != 0) && have_unacked != 0) {
23091a23080,23081
>     if ((first != 0 && discard != 0) && have_unacked != 0) {
> #line 1856
23093c23083
< #line 1855
---
> #line 1856
23095c23085
< #line 1855
---
> #line 1856
23098,23099d23087
< #line 1857
<       inc_unacked(mdev);
23101c23089
<       e->w.cb = & e_send_discard_ack;
---
>       inc_unacked(mdev);
23102a23091,23092
>       e->w.cb = & e_send_discard_ack;
> #line 1860
23104c23094
< #line 1861
---
> #line 1862
23106,23107d23095
< #line 1866
<       put_ldev(mdev);
23109c23097
<       wake_asender(mdev);
---
>       put_ldev(mdev);
23111c23099
<       finish_wait(& mdev->misc_wait, & wait);
---
>       wake_asender(mdev);
23112a23101,23102
>       finish_wait(& mdev->misc_wait, & wait);
> #line 1870
23117c23107
< #line 1872
---
> #line 1873
23119c23109
< #line 1872
---
> #line 1873
23121,23122d23110
< #line 1872
<     if (tmp___32 != 0) {
23123a23112,23113
>     if (tmp___32 != 0) {
> #line 1874
23125c23115
< #line 1875
---
> #line 1876
23127,23128d23116
< #line 1877
<       finish_wait(& mdev->misc_wait, & wait);
23129a23118,23119
>       finish_wait(& mdev->misc_wait, & wait);
> #line 1879
23134,23135d23123
< #line 1881
<     spin_unlock_irq(& mdev->req_lock);
23137c23125
<     if (first != 0) {
---
>     spin_unlock_irq(& mdev->req_lock);
23139c23127
<       first = 0;
---
>     if (first != 0) {
23140a23129,23130
>       first = 0;
> #line 1885
23142c23132
< #line 1884
---
> #line 1885
23144c23134
< #line 1884
---
> #line 1885
23148c23138
< #line 1886
---
> #line 1887
23150c23140
< #line 1889
---
> #line 1890
23152c23142
< #line 1889
---
> #line 1890
23154c23144
< #line 1889
---
> #line 1890
23156c23146
< #line 1889
---
> #line 1890
23159c23149
<                1889);
---
>                1890);
23166,23167d23155
< #line 1891
<     schedule();
23169c23157
<     spin_lock_irq(& mdev->req_lock);
---
>     schedule();
23170a23159,23160
>     spin_lock_irq(& mdev->req_lock);
> #line 1894
23173c23163
< #line 1894
---
> #line 1895
23176,23177d23165
< #line 1897
<   list_add(& e->w.list, & mdev->active_ee);
23178a23167,23168
>   list_add(& e->w.list, & mdev->active_ee);
> #line 1899
23180c23170
< #line 1900
---
> #line 1901
23183c23173
< #line 1902
---
> #line 1903
23185c23175
< #line 1905
---
> #line 1906
23188,23189d23177
< #line 1909
<   drbd_send_ack(mdev, P_RECV_ACK, e);
23190a23179,23180
>   drbd_send_ack(mdev, P_RECV_ACK, e);
> #line 1911
23193c23183
< #line 1913
---
> #line 1914
23197c23187
< #line 1916
---
> #line 1917
23199,23201d23188
< #line 1918
<     __drbd_set_out_of_sync(mdev, e->sector, (int )e->size, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<                            1918U);
23203c23190,23191
<     e->flags = e->flags | 1U;
---
>     __drbd_set_out_of_sync(mdev, e->sector, (int )e->size, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>                            1919U);
23204a23193,23194
>     e->flags = e->flags | 1U;
> #line 1921
23209,23210d23198
< #line 1923
<   (e->private_bio)->bi_rw = (unsigned long )rw;
23211a23200,23201
>   (e->private_bio)->bi_rw = (unsigned long )rw;
> #line 1925
23213,23214d23202
< #line 1927
<   maybe_kick_lo(mdev);
23215a23204,23205
>   maybe_kick_lo(mdev);
> #line 1929
23218,23219d23207
< #line 1934
<   put_ldev(mdev);
23221c23209
<   drbd_free_ee(mdev, e);
---
>   put_ldev(mdev);
23222a23211,23212
>   drbd_free_ee(mdev, e);
> #line 1937
23226c23216
< #line 1939 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 1940 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
23283c23273
< #line 1942
---
> #line 1943
23285c23275
< #line 1942
---
> #line 1943
23287c23277
< #line 1944
---
> #line 1945
23289c23279
< #line 1947
---
> #line 1948
23291c23281
< #line 1949
---
> #line 1950
23293c23283
< #line 1951
---
> #line 1952
23295,23296d23284
< #line 1951
<   if (tmp___0 != brps) {
23297a23286,23287
>   if (tmp___0 != brps) {
> #line 1953
23302c23292
< #line 1954
---
> #line 1955
23304,23305d23293
< #line 1954
<   sector = (sector_t )tmp___1;
23306a23295,23296
>   sector = (sector_t )tmp___1;
> #line 1956
23308c23298
< #line 1955
---
> #line 1956
23310,23311d23299
< #line 1957
<   if ((size <= 0 || (size & 511) != 0) || (unsigned int )size > 32768U) {
23312a23301,23302
>   if ((size <= 0 || (size & 511) != 0) || (unsigned int )size > 32768U) {
> #line 1959
23314c23304
< #line 1958
---
> #line 1959
23316c23306
< #line 1958
---
> #line 1959
23318,23319c23308,23309
<            1959, (unsigned long long )sector, size);
< #line 1960
---
>            1960, (unsigned long long )sector, size);
> #line 1961
23324,23325d23313
< #line 1962
<   if ((sector_t )(size >> 9) + sector > capacity) {
23326a23315,23316
>   if ((sector_t )(size >> 9) + sector > capacity) {
> #line 1964
23328c23318
< #line 1963
---
> #line 1964
23330c23320
< #line 1963
---
> #line 1964
23332,23333c23322,23323
<            1964, (unsigned long long )sector, size);
< #line 1965
---
>            1965, (unsigned long long )sector, size);
> #line 1966
23338c23328
< #line 1968
---
> #line 1969
23340,23341d23329
< #line 1968
<   if (tmp___10 == 0) {
23342a23331,23332
>   if (tmp___10 == 0) {
> #line 1970
23344,23345d23333
< #line 1969
<     if (tmp___9 != 0) {
23346a23335,23336
>     if (tmp___9 != 0) {
> #line 1971
23348c23338
< #line 1970
---
> #line 1971
23350c23340
< #line 1970
---
> #line 1971
23356c23346
< #line 1972
---
> #line 1973
23359c23349
< #line 1974
---
> #line 1975
23364,23365d23353
< #line 1980
<   e = drbd_alloc_ee(mdev, p->block_id, sector, (unsigned int )size, 16U);
23367c23355
<   if ((unsigned long )e == (unsigned long )((struct drbd_epoch_entry *)0)) {
---
>   e = drbd_alloc_ee(mdev, p->block_id, sector, (unsigned int )size, 16U);
23369c23357
<     put_ldev(mdev);
---
>   if ((unsigned long )e == (unsigned long )((struct drbd_epoch_entry *)0)) {
23370a23359,23360
>     put_ldev(mdev);
> #line 1984
23375,23376d23364
< #line 1986
<   (e->private_bio)->bi_rw = 0UL;
23377a23366,23367
>   (e->private_bio)->bi_rw = 0UL;
> #line 1988
23379c23369
< #line 1989
---
> #line 1990
23382,23383d23371
< #line 1991
<   e->w.cb = & w_e_end_data_req;
23385c23373
<   fault_type = 5U;
---
>   e->w.cb = & w_e_end_data_req;
23386a23375,23376
>   fault_type = 5U;
> #line 1994
23389,23390d23378
< #line 1995
<   e->w.cb = & w_e_end_rsdata_req;
23391a23380,23381
>   e->w.cb = & w_e_end_rsdata_req;
> #line 1997
23393c23383
< #line 2002
---
> #line 2003
23395c23385
< #line 2002
---
> #line 2003
23397c23387
< #line 2005
---
> #line 2006
23399c23389
< #line 2005
---
> #line 2006
23401c23391
< #line 2005
---
> #line 2006
23403c23393
< #line 2005
---
> #line 2006
23405c23395
< #line 2005
---
> #line 2006
23407c23397
< #line 2005
---
> #line 2006
23410c23400
<              2005);
---
>              2006);
23414c23404
< #line 2006
---
> #line 2007
23419c23409
< #line 2008
---
> #line 2009
23423,23424d23412
< #line 2012
<   fault_type = 3U;
23426c23414
<   digest_size = (int )h->length - brps;
---
>   fault_type = 3U;
23427a23416,23417
>   digest_size = (int )h->length - brps;
> #line 2015
23429,23430d23418
< #line 2014
<   di = (struct digest_info *)tmp___16;
23432c23420
<   if ((unsigned long )di == (unsigned long )((struct digest_info *)0)) {
---
>   di = (struct digest_info *)tmp___16;
23433a23422,23423
>   if ((unsigned long )di == (unsigned long )((struct digest_info *)0)) {
> #line 2017
23438,23439d23427
< #line 2018
<   di->digest_size = digest_size;
23440a23429,23430
>   di->digest_size = digest_size;
> #line 2020
23442c23432
< #line 2021
---
> #line 2022
23444,23445d23433
< #line 2021
<   if (tmp___17 != digest_size) {
23446a23435,23436
>   if (tmp___17 != digest_size) {
> #line 2023
23451,23452d23440
< #line 2024
<   e->block_id = (unsigned long long )di;
23454c23442
<   if ((unsigned int )h->command == 33U) {
---
>   e->block_id = (unsigned long long )di;
23455a23444,23445
>   if ((unsigned int )h->command == 33U) {
> #line 2027
23457c23447
< #line 2026
---
> #line 2027
23459c23449
< #line 2026
---
> #line 2027
23461c23451
< #line 2026
---
> #line 2027
23464c23454
<              2026);
---
>              2027);
23468c23458
< #line 2027
---
> #line 2028
23471,23472d23460
< #line 2028
<   if ((unsigned int )h->command == 31U) {
23474c23462
<     e->w.cb = & w_e_end_ov_reply;
---
>   if ((unsigned int )h->command == 31U) {
23475a23464,23465
>     e->w.cb = & w_e_end_ov_reply;
> #line 2031
23477c23467
< #line 2030
---
> #line 2031
23479c23469
< #line 2030
---
> #line 2031
23481c23471
< #line 2030
---
> #line 2031
23483c23473
< #line 2030
---
> #line 2031
23485c23475
< #line 2030
---
> #line 2031
23487c23477
< #line 2030
---
> #line 2031
23489c23479
<              "receive_DataRequest", 2030, tmp___20);
---
>              "receive_DataRequest", 2031, tmp___20);
23493c23483
< #line 2031
---
> #line 2032
23498c23488
< #line 2034
---
> #line 2035
23500c23490
< #line 2034
---
> #line 2035
23502c23492
< #line 2036
---
> #line 2037
23504c23494
< #line 2036
---
> #line 2037
23506c23496
< #line 2036
---
> #line 2037
23508c23498
< #line 2036
---
> #line 2037
23510c23500
< #line 2036
---
> #line 2037
23512c23502
< #line 2036
---
> #line 2037
23515c23505
<              2036);
---
>              2037);
23519c23509
< #line 2037
---
> #line 2038
23524c23514
< #line 2039
---
> #line 2040
23527c23517
< #line 2042
---
> #line 2043
23529c23519
< #line 2044
---
> #line 2045
23531c23521
< #line 2044
---
> #line 2045
23533c23523
< #line 2044
---
> #line 2045
23535c23525
< #line 2044
---
> #line 2045
23541c23531
< #line 2046
---
> #line 2047
23543,23544d23532
< #line 2048
<     mdev->ov_start_sector = sector;
23546c23534
<     mdev->ov_position = sector;
---
>     mdev->ov_start_sector = sector;
23548c23536
<     mdev->ov_left = mdev->rs_total - (sector >> 3);
---
>     mdev->ov_position = sector;
23549a23538,23539
>     mdev->ov_left = mdev->rs_total - (sector >> 3);
> #line 2052
23551c23541
< #line 2051
---
> #line 2052
23553c23543
< #line 2051
---
> #line 2052
23558,23559d23547
< #line 2054
<   e->w.cb = & w_e_end_ov_req;
23560a23549,23550
>   e->w.cb = & w_e_end_ov_req;
> #line 2056
23562c23552
< #line 2061
---
> #line 2062
23564c23554
< #line 2061
---
> #line 2062
23566c23556
< #line 2064
---
> #line 2065
23568c23558
< #line 2064
---
> #line 2065
23570c23560
< #line 2064
---
> #line 2065
23572c23562
< #line 2064
---
> #line 2065
23574c23564
< #line 2064
---
> #line 2065
23576c23566
< #line 2064
---
> #line 2065
23579c23569
<              2064);
---
>              2065);
23583c23573
< #line 2065
---
> #line 2066
23588c23578
< #line 2067
---
> #line 2068
23591c23581
< #line 2071
---
> #line 2072
23593c23583
< #line 2071
---
> #line 2072
23595c23585
< #line 2071
---
> #line 2072
23597c23587
< #line 2071
---
> #line 2072
23600c23590
< #line 2073
---
> #line 2074
23604,23605d23593
< #line 2076
<   spin_lock_irq(& mdev->req_lock);
23607c23595
<   list_add(& e->w.list, & mdev->read_ee);
---
>   spin_lock_irq(& mdev->req_lock);
23608a23597,23598
>   list_add(& e->w.list, & mdev->read_ee);
> #line 2079
23610c23600
< #line 2080
---
> #line 2081
23612,23613d23601
< #line 2082
<   drbd_generic_make_request(mdev, (int )fault_type, e->private_bio);
23614a23603,23604
>   drbd_generic_make_request(mdev, (int )fault_type, e->private_bio);
> #line 2084
23616c23606
< #line 2085
---
> #line 2086
23619,23620d23608
< #line 2088
<   kfree((void const   *)di);
23622c23610
<   put_ldev(mdev);
---
>   kfree((void const   *)di);
23624c23612
<   drbd_free_ee(mdev, e);
---
>   put_ldev(mdev);
23625a23614,23615
>   drbd_free_ee(mdev, e);
> #line 2092
23629c23619
< #line 2094 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2095 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
23645c23635
< #line 2096
---
> #line 2097
23647,23648d23636
< #line 2099
<   self = (int )(mdev->ldev)->md.uuid[1] & 1;
23649a23638,23639
>   self = (int )(mdev->ldev)->md.uuid[1] & 1;
> #line 2101
23651,23652d23640
< #line 2102
<   ch_peer = (unsigned long )*(mdev->p_uuid + 4UL);
23653a23642,23643
>   ch_peer = (unsigned long )*(mdev->p_uuid + 4UL);
> #line 2104
23655c23645
< #line 2105
---
> #line 2106
23660c23650
< #line 2109
---
> #line 2110
23662c23652
< #line 2109
---
> #line 2110
23664,23665d23653
< #line 2109
<   printk("<3>%s %s: Configuration error.\n", tmp___0, tmp);
23666a23655,23656
>   printk("<3>%s %s: Configuration error.\n", tmp___0, tmp);
> #line 2111
23669c23659
< #line 2112
---
> #line 2113
23672,23673d23661
< #line 2114
<   if (self == 0 && peer == 1) {
23675c23663
<     rv = -1;
---
>   if (self == 0 && peer == 1) {
23676a23665,23666
>     rv = -1;
> #line 2117
23681,23682d23670
< #line 2118
<   if (self == 1 && peer == 0) {
23684c23672
<     rv = 1;
---
>   if (self == 1 && peer == 0) {
23685a23674,23675
>     rv = 1;
> #line 2121
23691,23692d23680
< #line 2124
<   if (self == 0 && peer == 1) {
23694c23682
<     rv = 1;
---
>   if (self == 0 && peer == 1) {
23695a23684,23685
>     rv = 1;
> #line 2127
23700,23701d23689
< #line 2128
<   if (self == 1 && peer == 0) {
23703c23691
<     rv = -1;
---
>   if (self == 1 && peer == 0) {
23704a23693,23694
>     rv = -1;
> #line 2131
23709c23699
< #line 2133
---
> #line 2134
23711c23701
< #line 2133
---
> #line 2134
23713c23703
< #line 2133
---
> #line 2134
23717,23718d23706
< #line 2136
<   if (ch_peer == 0UL && ch_self == 0UL) {
23719a23708,23709
>   if (ch_peer == 0UL && ch_self == 0UL) {
> #line 2138
23721c23711
< #line 2137
---
> #line 2138
23723c23713
< #line 2139
---
> #line 2140
23726c23716
< #line 2141
---
> #line 2142
23728c23718
< #line 2141
---
> #line 2142
23730c23720
< #line 2141
---
> #line 2142
23735c23725
< #line 2142
---
> #line 2143
23737c23727
< #line 2142
---
> #line 2143
23739c23729
< #line 2142
---
> #line 2143
23745,23746d23734
< #line 2144
<   if ((mdev->net_conf)->after_sb_0p == 3) {
23747a23736,23737
>   if ((mdev->net_conf)->after_sb_0p == 3) {
> #line 2146
23753,23754d23742
< #line 2147
<   if (ch_self < ch_peer) {
23755a23744,23745
>   if (ch_self < ch_peer) {
> #line 2149
23758,23759d23747
< #line 2149
<   if (ch_self > ch_peer) {
23760a23749,23750
>   if (ch_self > ch_peer) {
> #line 2151
23763c23753
< #line 2153
---
> #line 2154
23765c23755
< #line 2153
---
> #line 2154
23768c23758
< #line 2155
---
> #line 2156
23771,23772d23760
< #line 2157
<   rv = -1;
23773a23762,23763
>   rv = -1;
> #line 2159
23776c23766
< #line 2160
---
> #line 2161
23780c23770
< #line 2163
---
> #line 2164
23784c23774
< #line 2166 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2167 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
23799c23789
< #line 2168
---
> #line 2169
23801,23802d23790
< #line 2170
<   self = (int )(mdev->ldev)->md.uuid[1] & 1;
23803a23792,23793
>   self = (int )(mdev->ldev)->md.uuid[1] & 1;
> #line 2172
23805c23795
< #line 2173
---
> #line 2174
23812c23802
< #line 2179
---
> #line 2180
23814c23804
< #line 2179
---
> #line 2180
23816,23817d23805
< #line 2179
<   printk("<3>%s %s: Configuration error.\n", tmp___0, tmp);
23818a23807,23808
>   printk("<3>%s %s: Configuration error.\n", tmp___0, tmp);
> #line 2181
23821c23811
< #line 2182
---
> #line 2183
23824,23825d23813
< #line 2184
<   hg = drbd_asb_recover_0p(mdev);
23827c23815
<   if (hg == -1 && (unsigned int )*((unsigned char *)mdev + 1804UL) == 2U) {
---
>   hg = drbd_asb_recover_0p(mdev);
23828a23817,23818
>   if (hg == -1 && (unsigned int )*((unsigned char *)mdev + 1804UL) == 2U) {
> #line 2187
23833,23834d23822
< #line 2187
<   if (hg == 1 && (unsigned int )*((unsigned char *)mdev + 1804UL) == 1U) {
23835a23824,23825
>   if (hg == 1 && (unsigned int )*((unsigned char *)mdev + 1804UL) == 1U) {
> #line 2189
23840c23830
< #line 2189
---
> #line 2190
23843,23844d23832
< #line 2191
<   rv = drbd_asb_recover_0p(mdev);
23845a23834,23835
>   rv = drbd_asb_recover_0p(mdev);
> #line 2193
23848c23838
< #line 2194
---
> #line 2195
23851,23852d23840
< #line 2196
<   hg = drbd_asb_recover_0p(mdev);
23854c23842
<   if (hg == -1 && (unsigned int )*((unsigned char *)mdev + 1804UL) == 1U) {
---
>   hg = drbd_asb_recover_0p(mdev);
23855a23844,23845
>   if (hg == -1 && (unsigned int )*((unsigned char *)mdev + 1804UL) == 1U) {
> #line 2199
23857c23847
< #line 2202
---
> #line 2203
23859c23849
< #line 2202
---
> #line 2203
23861c23851
< #line 2202
---
> #line 2203
23863c23853
< #line 2202
---
> #line 2203
23865,23866d23854
< #line 2202
<     self = drbd_change_state(mdev, CS_VERBOSE, mask, val);
23868c23856
<     if (self != 1) {
---
>     self = drbd_change_state(mdev, CS_VERBOSE, mask, val);
23869a23858,23859
>     if (self != 1) {
> #line 2205
23872c23862
< #line 2206
---
> #line 2207
23874c23864
< #line 2206
---
> #line 2207
23876,23877d23865
< #line 2206
<       printk("<4>%s %s: Successfully gave up primary role.\n", tmp___2, tmp___1);
23878a23867,23868
>       printk("<4>%s %s: Successfully gave up primary role.\n", tmp___2, tmp___1);
> #line 2208
23882c23872
< #line 2210
---
> #line 2211
23887c23877
< #line 2213
---
> #line 2214
23891c23881
< #line 2216 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2217 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
23906c23896
< #line 2218
---
> #line 2219
23908,23909d23897
< #line 2220
<   self = (int )(mdev->ldev)->md.uuid[1] & 1;
23910a23899,23900
>   self = (int )(mdev->ldev)->md.uuid[1] & 1;
> #line 2222
23912c23902
< #line 2223
---
> #line 2224
23921c23911
< #line 2231
---
> #line 2232
23923c23913
< #line 2231
---
> #line 2232
23925,23926d23914
< #line 2231
<   printk("<3>%s %s: Configuration error.\n", tmp___0, tmp);
23927a23916,23917
>   printk("<3>%s %s: Configuration error.\n", tmp___0, tmp);
> #line 2233
23930,23931d23919
< #line 2234
<   rv = drbd_asb_recover_0p(mdev);
23932a23921,23922
>   rv = drbd_asb_recover_0p(mdev);
> #line 2236
23935c23925
< #line 2237
---
> #line 2238
23938,23939d23927
< #line 2239
<   hg = drbd_asb_recover_0p(mdev);
23940a23929,23930
>   hg = drbd_asb_recover_0p(mdev);
> #line 2241
23942c23932
< #line 2244
---
> #line 2245
23944c23934
< #line 2244
---
> #line 2245
23946c23936
< #line 2244
---
> #line 2245
23948c23938
< #line 2244
---
> #line 2245
23950,23951d23939
< #line 2244
<     self = drbd_change_state(mdev, CS_VERBOSE, mask, val);
23953c23941
<     if (self != 1) {
---
>     self = drbd_change_state(mdev, CS_VERBOSE, mask, val);
23954a23943,23944
>     if (self != 1) {
> #line 2247
23957c23947
< #line 2248
---
> #line 2249
23959c23949
< #line 2248
---
> #line 2249
23961,23962d23950
< #line 2248
<       printk("<4>%s %s: Successfully gave up primary role.\n", tmp___2, tmp___1);
23963a23952,23953
>       printk("<4>%s %s: Successfully gave up primary role.\n", tmp___2, tmp___1);
> #line 2250
23967c23957
< #line 2252
---
> #line 2253
23972c23962
< #line 2255
---
> #line 2256
23976c23966
< #line 2258 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2259 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
23986,23987d23975
< #line 2261
<   if ((unsigned long )uuid == (unsigned long )((u64 *)0)) {
23988a23977,23978
>   if ((unsigned long )uuid == (unsigned long )((u64 *)0)) {
> #line 2263
23990c23980
< #line 2262
---
> #line 2263
23992c23982
< #line 2262
---
> #line 2263
23995c23985
< #line 2263
---
> #line 2264
24000c23990
< #line 2265
---
> #line 2266
24002c23992
< #line 2265
---
> #line 2266
24004c23994
< #line 2265
---
> #line 2266
24008c23998
< #line 2266
---
> #line 2267
24012c24002
< #line 2285 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2286 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
24038,24039d24027
< #line 2290
<   self = (mdev->ldev)->md.uuid[0] & 0xfffffffffffffffeULL;
24040a24029,24030
>   self = (mdev->ldev)->md.uuid[0] & 0xfffffffffffffffeULL;
> #line 2292
24042,24043d24031
< #line 2293
<   *rule_nr = 10;
24045c24033
<   if (self == 4ULL && peer == 4ULL) {
---
>   *rule_nr = 10;
24046a24035,24036
>   if (self == 4ULL && peer == 4ULL) {
> #line 2296
24051,24052d24040
< #line 2297
<   *rule_nr = 20;
24053a24042,24043
>   *rule_nr = 20;
> #line 2299
24055c24045
< #line 2300
---
> #line 2301
24060,24061d24049
< #line 2302
<   *rule_nr = 30;
24062a24051,24052
>   *rule_nr = 30;
> #line 2304
24064c24054
< #line 2305
---
> #line 2306
24069c24059
< #line 2307
---
> #line 2308
24071c24061
< #line 2310
---
> #line 2311
24073,24074d24062
< #line 2312
<       if (mdev->agreed_pro_version <= 90) {
24075a24064,24065
>       if (mdev->agreed_pro_version <= 90) {
> #line 2314
24080c24070
< #line 2315
---
> #line 2316
24082c24072
< #line 2317
---
> #line 2318
24084c24074
< #line 2317
---
> #line 2318
24086c24076
< #line 2317
---
> #line 2318
24089c24079
< #line 2318
---
> #line 2319
24091c24081
< #line 2320
---
> #line 2321
24093c24083
< #line 2320
---
> #line 2321
24095c24085
< #line 2320
---
> #line 2321
24098c24088
< #line 2320
---
> #line 2321
24101c24091
< #line 2320
---
> #line 2321
24104c24094
< #line 2322
---
> #line 2323
24107c24097
< #line 2324
---
> #line 2325
24109c24099
< #line 2324
---
> #line 2325
24111c24101
< #line 2324
---
> #line 2325
24114c24104
< #line 2325
---
> #line 2326
24117c24107
< #line 2328
---
> #line 2329
24122c24112
< #line 2331
---
> #line 2332
24124,24125d24113
< #line 2333
<       if (mdev->agreed_pro_version <= 90) {
24126a24115,24116
>       if (mdev->agreed_pro_version <= 90) {
> #line 2335
24131c24121
< #line 2336
---
> #line 2337
24133c24123
< #line 2338
---
> #line 2339
24135c24125
< #line 2338
---
> #line 2339
24137c24127
< #line 2338
---
> #line 2339
24140,24141d24129
< #line 2340
<         *(mdev->p_uuid + 3UL) = *(mdev->p_uuid + 2UL);
24143c24131
<         *(mdev->p_uuid + 2UL) = *(mdev->p_uuid + 1UL);
---
>         *(mdev->p_uuid + 3UL) = *(mdev->p_uuid + 2UL);
24144a24133,24134
>         *(mdev->p_uuid + 2UL) = *(mdev->p_uuid + 1UL);
> #line 2343
24146c24136
< #line 2344
---
> #line 2345
24149c24139
< #line 2345
---
> #line 2346
24152c24142
< #line 2347
---
> #line 2348
24154c24144
< #line 2347
---
> #line 2348
24156c24146
< #line 2347
---
> #line 2348
24159c24149
< #line 2348
---
> #line 2349
24162c24152
< #line 2351
---
> #line 2352
24167c24157
< #line 2355
---
> #line 2356
24169c24159
< #line 2355
---
> #line 2356
24171c24161
< #line 2359
---
> #line 2360
24173c24163
< #line 2361
---
> #line 2362
24176c24166
< #line 2362
---
> #line 2363
24179c24169
< #line 2363
---
> #line 2364
24182c24172
< #line 2364
---
> #line 2365
24185,24186d24174
< #line 2366
<     dc = constant_test_bit(7U, (unsigned long const volatile   *)(& mdev->flags));
24187a24176,24177
>     dc = constant_test_bit(7U, (unsigned long const volatile   *)(& mdev->flags));
> #line 2368
24193,24194d24182
< #line 2371
<   *rule_nr = 50;
24196c24184
<   peer = *(mdev->p_uuid + 1UL) & 0xfffffffffffffffeULL;
---
>   *rule_nr = 50;
24198c24186
<   if (self == peer) {
---
>   peer = *(mdev->p_uuid + 1UL) & 0xfffffffffffffffeULL;
24199a24188,24189
>   if (self == peer) {
> #line 2375
24204,24205d24193
< #line 2376
<   *rule_nr = 51;
24207c24195
<   peer = *(mdev->p_uuid + 2UL) & 0xfffffffffffffffeULL;
---
>   *rule_nr = 51;
24209c24197
<   if (self == peer) {
---
>   peer = *(mdev->p_uuid + 2UL) & 0xfffffffffffffffeULL;
24211c24199
<     self = (mdev->ldev)->md.uuid[2] & 0xfffffffffffffffeULL;
---
>   if (self == peer) {
24213c24201
<     peer = *(mdev->p_uuid + 3UL) & 0xfffffffffffffffeULL;
---
>     self = (mdev->ldev)->md.uuid[2] & 0xfffffffffffffffeULL;
24214a24203,24204
>     peer = *(mdev->p_uuid + 3UL) & 0xfffffffffffffffeULL;
> #line 2382
24216,24217d24205
< #line 2385
<       if (mdev->agreed_pro_version <= 90) {
24218a24207,24208
>       if (mdev->agreed_pro_version <= 90) {
> #line 2387
24223,24224d24212
< #line 2388
<       *(mdev->p_uuid + 1UL) = *(mdev->p_uuid + 2UL);
24226c24214
<       *(mdev->p_uuid + 2UL) = *(mdev->p_uuid + 3UL);
---
>       *(mdev->p_uuid + 1UL) = *(mdev->p_uuid + 2UL);
24227a24216,24217
>       *(mdev->p_uuid + 2UL) = *(mdev->p_uuid + 3UL);
> #line 2391
24235,24236d24224
< #line 2394
<   *rule_nr = 60;
24238c24226
<   self = (mdev->ldev)->md.uuid[0] & 0xfffffffffffffffeULL;
---
>   *rule_nr = 60;
24239a24228,24229
>   self = (mdev->ldev)->md.uuid[0] & 0xfffffffffffffffeULL;
> #line 2397
24241c24231
< #line 2396
---
> #line 2397
24244,24245d24233
< #line 2397
<   peer = *(mdev->p_uuid + (unsigned long )i) & 0xfffffffffffffffeULL;
24247c24235
<   if (self == peer) {
---
>   peer = *(mdev->p_uuid + (unsigned long )i) & 0xfffffffffffffffeULL;
24248a24237,24238
>   if (self == peer) {
> #line 2400
24253c24243
< #line 2396
---
> #line 2397
24256,24257d24245
< #line 2396
<   if (i <= 3) {
24258a24247,24248
>   if (i <= 3) {
> #line 2398
24263,24264d24252
< #line 2402
<   *rule_nr = 70;
24266c24254
<   self = (mdev->ldev)->md.uuid[1] & 0xfffffffffffffffeULL;
---
>   *rule_nr = 70;
24268c24256
<   peer = *(mdev->p_uuid) & 0xfffffffffffffffeULL;
---
>   self = (mdev->ldev)->md.uuid[1] & 0xfffffffffffffffeULL;
24270c24258
<   if (self == peer) {
---
>   peer = *(mdev->p_uuid) & 0xfffffffffffffffeULL;
24271a24260,24261
>   if (self == peer) {
> #line 2407
24276,24277d24265
< #line 2408
<   *rule_nr = 71;
24279c24267
<   self = (mdev->ldev)->md.uuid[2] & 0xfffffffffffffffeULL;
---
>   *rule_nr = 71;
24281c24269
<   if (self == peer) {
---
>   self = (mdev->ldev)->md.uuid[2] & 0xfffffffffffffffeULL;
24283c24271
<     self = (mdev->ldev)->md.uuid[3] & 0xfffffffffffffffeULL;
---
>   if (self == peer) {
24285c24273
<     peer = *(mdev->p_uuid + 2UL) & 0xfffffffffffffffeULL;
---
>     self = (mdev->ldev)->md.uuid[3] & 0xfffffffffffffffeULL;
24286a24275,24276
>     peer = *(mdev->p_uuid + 2UL) & 0xfffffffffffffffeULL;
> #line 2414
24288,24289d24277
< #line 2417
<       if (mdev->agreed_pro_version <= 90) {
24290a24279,24280
>       if (mdev->agreed_pro_version <= 90) {
> #line 2419
24295,24296d24284
< #line 2420
<       _drbd_uuid_set(mdev, 1, (mdev->ldev)->md.uuid[2]);
24297a24286,24287
>       _drbd_uuid_set(mdev, 1, (mdev->ldev)->md.uuid[2]);
> #line 2422
24299c24289
< #line 2423
---
> #line 2424
24301c24291
< #line 2423
---
> #line 2424
24303c24293
< #line 2423
---
> #line 2424
24305c24295
< #line 2425
---
> #line 2426
24307c24297
< #line 2425
---
> #line 2426
24309c24299
< #line 2425
---
> #line 2426
24312c24302
< #line 2425
---
> #line 2426
24315c24305
< #line 2425
---
> #line 2426
24318c24308
< #line 2428
---
> #line 2429
24326,24327d24315
< #line 2433
<   *rule_nr = 80;
24329c24317
<   peer = *(mdev->p_uuid) & 0xfffffffffffffffeULL;
---
>   *rule_nr = 80;
24330a24319,24320
>   peer = *(mdev->p_uuid) & 0xfffffffffffffffeULL;
> #line 2436
24332c24322
< #line 2435
---
> #line 2436
24335,24336d24324
< #line 2436
<   self = (mdev->ldev)->md.uuid[i] & 0xfffffffffffffffeULL;
24338c24326
<   if (self == peer) {
---
>   self = (mdev->ldev)->md.uuid[i] & 0xfffffffffffffffeULL;
24339a24328,24329
>   if (self == peer) {
> #line 2439
24344c24334
< #line 2435
---
> #line 2436
24347,24348d24336
< #line 2435
<   if (i <= 3) {
24349a24338,24339
>   if (i <= 3) {
> #line 2437
24354,24355d24343
< #line 2441
<   *rule_nr = 90;
24357c24345
<   self = (mdev->ldev)->md.uuid[1] & 0xfffffffffffffffeULL;
---
>   *rule_nr = 90;
24359c24347
<   peer = *(mdev->p_uuid + 1UL) & 0xfffffffffffffffeULL;
---
>   self = (mdev->ldev)->md.uuid[1] & 0xfffffffffffffffeULL;
24361c24349
<   if (self == peer && self != 0ULL) {
---
>   peer = *(mdev->p_uuid + 1UL) & 0xfffffffffffffffeULL;
24362a24351,24352
>   if (self == peer && self != 0ULL) {
> #line 2446
24367,24368d24356
< #line 2447
<   *rule_nr = 100;
24369a24358,24359
>   *rule_nr = 100;
> #line 2449
24371c24361
< #line 2448
---
> #line 2449
24374,24375d24363
< #line 2449
<   self = (mdev->ldev)->md.uuid[i] & 0xfffffffffffffffeULL;
24376a24365,24366
>   self = (mdev->ldev)->md.uuid[i] & 0xfffffffffffffffeULL;
> #line 2451
24378c24368
< #line 2450
---
> #line 2451
24381,24382d24370
< #line 2451
<   peer = *(mdev->p_uuid + (unsigned long )j) & 0xfffffffffffffffeULL;
24384c24372
<   if (self == peer) {
---
>   peer = *(mdev->p_uuid + (unsigned long )j) & 0xfffffffffffffffeULL;
24385a24374,24375
>   if (self == peer) {
> #line 2454
24390c24380
< #line 2450
---
> #line 2451
24393,24394d24382
< #line 2450
<   if (j <= 3) {
24395a24384,24385
>   if (j <= 3) {
> #line 2452
24400c24390
< #line 2448
---
> #line 2449
24403,24404d24392
< #line 2448
<   if (i <= 3) {
24405a24394,24395
>   if (i <= 3) {
> #line 2450
24411c24401
< #line 2457
---
> #line 2458
24415c24405
< #line 2463 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2464 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
24464c24454
< #line 2467
---
> #line 2468
24466,24467d24455
< #line 2470
<   mydisk = (enum drbd_disk_state )mdev->state.ldv_32691.disk;
24469c24457
<   if ((unsigned int )mydisk == 3U) {
---
>   mydisk = (enum drbd_disk_state )mdev->state.ldv_32691.disk;
24470a24459,24460
>   if ((unsigned int )mydisk == 3U) {
> #line 2473
24475c24465
< #line 2474
---
> #line 2475
24477c24467
< #line 2474
---
> #line 2475
24479,24480d24468
< #line 2474
<   printk("<6>%s %s: drbd_sync_handshake:\n", tmp___0, tmp);
24481a24470,24471
>   printk("<6>%s %s: drbd_sync_handshake:\n", tmp___0, tmp);
> #line 2476
24484c24474
< #line 2476
---
> #line 2477
24486c24476
< #line 2479
---
> #line 2480
24488c24478
< #line 2481
---
> #line 2482
24490c24480
< #line 2481
---
> #line 2482
24492c24482
< #line 2481
---
> #line 2482
24494,24495d24483
< #line 2483
<   if (hg == -1000) {
24496a24485,24486
>   if (hg == -1000) {
> #line 2485
24498c24488
< #line 2484
---
> #line 2485
24500,24501d24489
< #line 2484
<     printk("<1>%s %s: Unrelated data, aborting!\n", tmp___4, tmp___3);
24502a24491,24492
>     printk("<1>%s %s: Unrelated data, aborting!\n", tmp___4, tmp___3);
> #line 2486
24507,24508d24496
< #line 2487
<   if (hg == -1001) {
24509a24498,24499
>   if (hg == -1001) {
> #line 2489
24511c24501
< #line 2488
---
> #line 2489
24513c24503
< #line 2488
---
> #line 2489
24516c24506
< #line 2489
---
> #line 2490
24521c24511
< #line 2492
---
> #line 2493
24523c24513
< #line 2494
---
> #line 2495
24525c24515
< #line 2494
---
> #line 2495
24528c24518
< #line 2494
---
> #line 2495
24530c24520
< #line 2494
---
> #line 2495
24532c24522
< #line 2494
---
> #line 2495
24535c24525
< #line 2494
---
> #line 2495
24539,24540d24528
< #line 2494
<     f = tmp___7;
24542c24530
<     hg = (unsigned int )mydisk > 4U ? 1 : -1;
---
>     f = tmp___7;
24544c24532
<     if (f != 0) {
---
>     hg = (unsigned int )mydisk > 4U ? 1 : -1;
24545a24534,24535
>     if (f != 0) {
> #line 2498
24550c24540
< #line 2498
---
> #line 2499
24552c24542
< #line 2498
---
> #line 2499
24554c24544
< #line 2498
---
> #line 2499
24559,24560d24548
< #line 2502
<   if (hg == 100 || (hg == -100 && (unsigned int )*((unsigned char *)mdev->net_conf + 528UL) != 0U)) {
24561a24550,24551
>   if (hg == 100 || (hg == -100 && (unsigned int )*((unsigned char *)mdev->net_conf + 528UL) != 0U)) {
> #line 2504
24563c24553
< #line 2505
---
> #line 2506
24565c24555
< #line 2507
---
> #line 2508
24568,24569d24557
< #line 2509
<     hg = drbd_asb_recover_0p(mdev);
24570a24559,24560
>     hg = drbd_asb_recover_0p(mdev);
> #line 2511
24573,24574d24562
< #line 2512
<     hg = drbd_asb_recover_1p(mdev);
24575a24564,24565
>     hg = drbd_asb_recover_1p(mdev);
> #line 2514
24578,24579d24567
< #line 2515
<     hg = drbd_asb_recover_2p(mdev);
24580a24569,24570
>     hg = drbd_asb_recover_2p(mdev);
> #line 2517
24584c24574
< #line 2518
---
> #line 2519
24586,24587d24575
< #line 2518
<     if ((__x___0 < 0L ? - __x___0 : __x___0) <= 99L) {
24588a24577,24578
>     if ((__x___0 < 0L ? - __x___0 : __x___0) <= 99L) {
> #line 2520
24590c24580
< #line 2519
---
> #line 2520
24592c24582
< #line 2519
---
> #line 2520
24595,24596d24584
< #line 2522
<       if (forced != 0) {
24597a24586,24587
>       if (forced != 0) {
> #line 2524
24599c24589
< #line 2523
---
> #line 2524
24601c24591
< #line 2523
---
> #line 2524
24604c24594
< #line 2525
---
> #line 2526
24615,24616d24604
< #line 2530
<   if (hg == -100) {
24618c24606
<     if ((unsigned int )*((unsigned char *)mdev->net_conf + 528UL) != 0U && (*(mdev->p_uuid + 5UL) & 1ULL) == 0ULL) {
---
>   if (hg == -100) {
24619a24608,24609
>     if ((unsigned int )*((unsigned char *)mdev->net_conf + 528UL) != 0U && (*(mdev->p_uuid + 5UL) & 1ULL) == 0ULL) {
> #line 2533
24624,24625d24613
< #line 2533
<     if ((unsigned int )*((unsigned char *)mdev->net_conf + 528UL) == 0U && (int )*(mdev->p_uuid + 5UL) & 1) {
24626a24615,24616
>     if ((unsigned int )*((unsigned char *)mdev->net_conf + 528UL) == 0U && (int )*(mdev->p_uuid + 5UL) & 1) {
> #line 2535
24631c24621
< #line 2536
---
> #line 2537
24633,24634d24622
< #line 2536
<     if ((__x___1 < 0L ? - __x___1 : __x___1) <= 99L) {
24635a24624,24625
>     if ((__x___1 < 0L ? - __x___1 : __x___1) <= 99L) {
> #line 2538
24637c24627
< #line 2537
---
> #line 2538
24639c24629
< #line 2537
---
> #line 2538
24648,24649d24637
< #line 2542
<   if (hg == -100) {
24650a24639,24640
>   if (hg == -100) {
> #line 2544
24652c24642
< #line 2543
---
> #line 2544
24654,24655d24643
< #line 2543
<     printk("<1>%s %s: Split-Brain detected, dropping connection!\n", tmp___17, tmp___16);
24657c24645
<     drbd_khelper(mdev, (char *)"split-brain");
---
>     printk("<1>%s %s: Split-Brain detected, dropping connection!\n", tmp___17, tmp___16);
24658a24647,24648
>     drbd_khelper(mdev, (char *)"split-brain");
> #line 2546
24663,24664d24652
< #line 2548
<   if (hg > 0 && (unsigned int )mydisk <= 4U) {
24665a24654,24655
>   if (hg > 0 && (unsigned int )mydisk <= 4U) {
> #line 2550
24667c24657
< #line 2549
---
> #line 2550
24669c24659
< #line 2549
---
> #line 2550
24672c24662
< #line 2550
---
> #line 2551
24677c24667
< #line 2553
---
> #line 2554
24679c24669
< #line 2555
---
> #line 2556
24682c24672
< #line 2557
---
> #line 2558
24685c24675
< #line 2560
---
> #line 2561
24687c24677
< #line 2560
---
> #line 2561
24689,24690d24678
< #line 2560
<     printk("<3>%s %s: I shall become SyncTarget, but I am primary!\n", tmp___21, tmp___20);
24691a24680,24681
>     printk("<3>%s %s: I shall become SyncTarget, but I am primary!\n", tmp___21, tmp___20);
> #line 2562
24694c24684
< #line 2563
---
> #line 2564
24696c24686
< #line 2563
---
> #line 2564
24698c24688
< #line 2563
---
> #line 2564
24705c24695
< #line 2568
---
> #line 2569
24707,24708d24696
< #line 2568
<   if ((__x___2 < 0L ? - __x___2 : __x___2) > 1L) {
24709a24698,24699
>   if ((__x___2 < 0L ? - __x___2 : __x___2) > 1L) {
> #line 2570
24711c24701
< #line 2569
---
> #line 2570
24713c24703
< #line 2569
---
> #line 2570
24716c24706
< #line 2570
---
> #line 2571
24718,24719d24707
< #line 2570
<     if (tmp___26 != 0) {
24720a24709,24710
>     if (tmp___26 != 0) {
> #line 2572
24728,24729d24717
< #line 2574
<   if (hg > 0) {
24730a24719,24720
>   if (hg > 0) {
> #line 2576
24733,24734d24722
< #line 2576
<   if (hg < 0) {
24735a24724,24725
>   if (hg < 0) {
> #line 2578
24738,24739d24727
< #line 2579
<     rv = C_CONNECTED;
24740a24729,24730
>     rv = C_CONNECTED;
> #line 2581
24742,24743d24731
< #line 2580
<     if (tmp___30 != 0UL) {
24744a24733,24734
>     if (tmp___30 != 0UL) {
> #line 2582
24746c24736
< #line 2581
---
> #line 2582
24748c24738
< #line 2581
---
> #line 2582
24750c24740
< #line 2581
---
> #line 2582
24757c24747
< #line 2586
---
> #line 2587
24761c24751
< #line 2590 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2591 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
24767c24757
< #line 2593
---
> #line 2594
24769c24759
< #line 2595
---
> #line 2596
24774c24764
< #line 2598
---
> #line 2599
24776c24766
< #line 2600
---
> #line 2601
24781,24782d24770
< #line 2603
<   if ((unsigned int )peer == (unsigned int )self) {
24783a24772,24773
>   if ((unsigned int )peer == (unsigned int )self) {
> #line 2605
24788c24778
< #line 2607
---
> #line 2608
24792c24782
< #line 2610 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2611 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
24839c24829
< #line 2612
---
> #line 2613
24841c24831
< #line 2616
---
> #line 2617
24843c24833
< #line 2616
---
> #line 2617
24845c24835
< #line 2616
---
> #line 2617
24847c24837
< #line 2616
---
> #line 2617
24849c24839
< #line 2616
---
> #line 2617
24854c24844
< #line 2616
---
> #line 2617
24856c24846
< #line 2616
---
> #line 2617
24859,24860d24848
< #line 2618
<   header_size = 24;
24861a24850,24851
>   header_size = 24;
> #line 2620
24863c24853
< #line 2621
---
> #line 2622
24865,24866d24854
< #line 2621
<   if (tmp___0 != header_size) {
24867a24856,24857
>   if (tmp___0 != header_size) {
> #line 2623
24872c24862
< #line 2624
---
> #line 2625
24874,24875d24863
< #line 2624
<   p_proto = (int )tmp___1;
24876a24865,24866
>   p_proto = (int )tmp___1;
> #line 2626
24878,24879d24867
< #line 2625
<   p_after_sb_0p = (int )tmp___2;
24880a24869,24870
>   p_after_sb_0p = (int )tmp___2;
> #line 2627
24882,24883d24871
< #line 2626
<   p_after_sb_1p = (int )tmp___3;
24884a24873,24874
>   p_after_sb_1p = (int )tmp___3;
> #line 2628
24886,24887d24875
< #line 2627
<   p_after_sb_2p = (int )tmp___4;
24888a24877,24878
>   p_after_sb_2p = (int )tmp___4;
> #line 2629
24890,24891d24879
< #line 2628
<   p_want_lose = (int )tmp___5;
24892a24881,24882
>   p_want_lose = (int )tmp___5;
> #line 2630
24894c24884
< #line 2629
---
> #line 2630
24896,24897d24885
< #line 2631
<   if ((mdev->net_conf)->wire_protocol != p_proto) {
24898a24887,24888
>   if ((mdev->net_conf)->wire_protocol != p_proto) {
> #line 2633
24900c24890
< #line 2632
---
> #line 2633
24902,24903d24891
< #line 2632
<     printk("<3>%s %s: incompatible communication protocols\n", tmp___8, tmp___7);
24904a24893,24894
>     printk("<3>%s %s: incompatible communication protocols\n", tmp___8, tmp___7);
> #line 2634
24909c24899
< #line 2636
---
> #line 2637
24911,24912d24900
< #line 2636
<   if (tmp___11 != 0) {
24913a24902,24903
>   if (tmp___11 != 0) {
> #line 2638
24915c24905
< #line 2637
---
> #line 2638
24917,24918d24906
< #line 2637
<     printk("<3>%s %s: incompatible after-sb-0pri settings\n", tmp___10, tmp___9);
24919a24908,24909
>     printk("<3>%s %s: incompatible after-sb-0pri settings\n", tmp___10, tmp___9);
> #line 2639
24924c24914
< #line 2641
---
> #line 2642
24926,24927d24915
< #line 2641
<   if (tmp___14 != 0) {
24928a24917,24918
>   if (tmp___14 != 0) {
> #line 2643
24930c24920
< #line 2642
---
> #line 2643
24932,24933d24921
< #line 2642
<     printk("<3>%s %s: incompatible after-sb-1pri settings\n", tmp___13, tmp___12);
24934a24923,24924
>     printk("<3>%s %s: incompatible after-sb-1pri settings\n", tmp___13, tmp___12);
> #line 2644
24939c24929
< #line 2646
---
> #line 2647
24941,24942d24930
< #line 2646
<   if (tmp___17 != 0) {
24943a24932,24933
>   if (tmp___17 != 0) {
> #line 2648
24945c24935
< #line 2647
---
> #line 2648
24947,24948d24936
< #line 2647
<     printk("<3>%s %s: incompatible after-sb-2pri settings\n", tmp___16, tmp___15);
24949a24938,24939
>     printk("<3>%s %s: incompatible after-sb-2pri settings\n", tmp___16, tmp___15);
> #line 2649
24954,24955d24943
< #line 2651
<   if (p_want_lose != 0 && (unsigned int )*((unsigned char *)mdev->net_conf + 528UL) != 0U) {
24956a24945,24946
>   if (p_want_lose != 0 && (unsigned int )*((unsigned char *)mdev->net_conf + 528UL) != 0U) {
> #line 2653
24958c24948
< #line 2652
---
> #line 2653
24960,24961d24949
< #line 2652
<     printk("<3>%s %s: both sides have the \'want_lose\' flag set\n", tmp___19, tmp___18);
24962a24951,24952
>     printk("<3>%s %s: both sides have the \'want_lose\' flag set\n", tmp___19, tmp___18);
> #line 2654
24967,24968d24956
< #line 2656
<   if ((int )(mdev->net_conf)->two_primaries != p_two_primaries) {
24969a24958,24959
>   if ((int )(mdev->net_conf)->two_primaries != p_two_primaries) {
> #line 2658
24971c24961
< #line 2657
---
> #line 2658
24973c24963
< #line 2657
---
> #line 2658
24976c24966
< #line 2658
---
> #line 2659
24981,24982d24970
< #line 2661
<   if (mdev->agreed_pro_version > 86) {
24983a24972,24973
>   if (mdev->agreed_pro_version > 86) {
> #line 2663
24985c24975
< #line 2664
---
> #line 2665
24987,24988d24976
< #line 2664
<     if (tmp___22 != data_size) {
24989a24978,24979
>     if (tmp___22 != data_size) {
> #line 2666
24994,24995d24983
< #line 2667
<     p_integrity_alg[63] = 0;
24996a24985,24986
>     p_integrity_alg[63] = 0;
> #line 2669
24998,24999d24987
< #line 2668
<     if (tmp___25 != 0) {
25000a24989,24990
>     if (tmp___25 != 0) {
> #line 2670
25002c24992
< #line 2669
---
> #line 2670
25004c24994
< #line 2669
---
> #line 2670
25007c24997
< #line 2670
---
> #line 2671
25012c25002
< #line 2672
---
> #line 2673
25014c25004
< #line 2672
---
> #line 2673
25016c25006
< #line 2672
---
> #line 2673
25021c25011
< #line 2676
---
> #line 2677
25024c25014
< #line 2679
---
> #line 2680
25026c25016
< #line 2679
---
> #line 2680
25028c25018
< #line 2679
---
> #line 2680
25030c25020
< #line 2679
---
> #line 2680
25032,25033d25021
< #line 2679
<   drbd_force_state(mdev, mask, val);
25034a25023,25024
>   drbd_force_state(mdev, mask, val);
> #line 2681
25038c25028
< #line 2688 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2689 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
25054,25055d25043
< #line 2693
<   if ((int )((signed char )*alg) == 0) {
25056a25045,25046
>   if ((int )((signed char )*alg) == 0) {
> #line 2695
25061,25062d25050
< #line 2696
<   tfm = crypto_alloc_hash(alg, 0U, 128U);
25063a25052,25053
>   tfm = crypto_alloc_hash(alg, 0U, 128U);
> #line 2698
25065,25066d25054
< #line 2697
<   if (tmp___2 != 0L) {
25067a25056,25057
>   if (tmp___2 != 0L) {
> #line 2699
25069c25059
< #line 2698
---
> #line 2699
25071c25061
< #line 2698
---
> #line 2699
25073c25063
< #line 2698
---
> #line 2699
25076c25066
< #line 2700
---
> #line 2701
25081c25071
< #line 2702
---
> #line 2703
25083c25073
< #line 2702
---
> #line 2703
25085,25086d25074
< #line 2702
<   if (tmp___7 == 0) {
25088c25076
<     crypto_free_hash(tfm);
---
>   if (tmp___7 == 0) {
25089a25078,25079
>     crypto_free_hash(tfm);
> #line 2705
25091c25081
< #line 2704
---
> #line 2705
25093,25094d25082
< #line 2704
<     printk("<3>%s %s: \"%s\" is not a digest (%s)\n", tmp___4, tmp___3, alg, name);
25095a25084,25085
>     printk("<3>%s %s: \"%s\" is not a digest (%s)\n", tmp___4, tmp___3, alg, name);
> #line 2706
25097c25087
< #line 2705
---
> #line 2706
25102c25092
< #line 2707
---
> #line 2708
25106c25096
< #line 2710 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2711 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
25150,25151d25139
< #line 2712
<   ok = 1;
25152a25141,25142
>   ok = 1;
> #line 2714
25154,25155d25143
< #line 2715
<   verify_tfm = 0;
25157c25145
<   csums_tfm = 0;
---
>   verify_tfm = 0;
25158a25147,25148
>   csums_tfm = 0;
> #line 2718
25160c25150
< #line 2719
---
> #line 2720
25162,25163d25151
< #line 2724
<   if ((unsigned int )h->length > exp_max_sz) {
25164a25153,25154
>   if ((unsigned int )h->length > exp_max_sz) {
> #line 2726
25166c25156
< #line 2725
---
> #line 2726
25168c25158
< #line 2725
---
> #line 2726
25171c25161
< #line 2727
---
> #line 2728
25176,25177d25165
< #line 2730
<   if (apv <= 88) {
25179c25167
<     header_size = 4U;
---
>   if (apv <= 88) {
25180a25169,25170
>     header_size = 4U;
> #line 2733
25183,25184d25172
< #line 2734
<     header_size = 132U;
25186c25174
<     data_size = (unsigned int )h->length - header_size;
---
>     header_size = 132U;
25187a25176,25177
>     data_size = (unsigned int )h->length - header_size;
> #line 2737
25189c25179
< #line 2736
---
> #line 2737
25191c25181
< #line 2736
---
> #line 2737
25193c25183
< #line 2736
---
> #line 2737
25195c25185
<              2736);
---
>              2737);
25200c25190
< #line 2740
---
> #line 2741
25202c25192
< #line 2742
---
> #line 2743
25204,25205d25193
< #line 2742
<   if ((unsigned int )tmp___3 != header_size) {
25206a25195,25196
>   if ((unsigned int )tmp___3 != header_size) {
> #line 2744
25211c25201
< #line 2745
---
> #line 2746
25213c25203
< #line 2745
---
> #line 2746
25215,25216d25204
< #line 2747
<   if (apv > 87) {
25218c25206
<     if (apv == 88) {
---
>   if (apv > 87) {
25220c25208
<       if (data_size > 64U) {
---
>     if (apv == 88) {
25221a25210,25211
>       if (data_size > 64U) {
> #line 2751
25223c25213
< #line 2750
---
> #line 2751
25225c25215
< #line 2750
---
> #line 2751
25228c25218
< #line 2753
---
> #line 2754
25233c25223
< #line 2756
---
> #line 2757
25235,25236d25224
< #line 2756
<       if ((unsigned int )tmp___7 != data_size) {
25237a25226,25227
>       if ((unsigned int )tmp___7 != data_size) {
> #line 2758
25242c25232
< #line 2761
---
> #line 2762
25244c25234
< #line 2761
---
> #line 2762
25246c25236
< #line 2761
---
> #line 2762
25248c25238
< #line 2761
---
> #line 2762
25251c25241
<                2761);
---
>                2762);
25255c25245
< #line 2762
---
> #line 2763
25258c25248
< #line 2767
---
> #line 2768
25260c25250
< #line 2767
---
> #line 2768
25262c25252
< #line 2767
---
> #line 2768
25264c25254
< #line 2767
---
> #line 2768
25267c25257
<                2767);
---
>                2768);
25271c25261
< #line 2768
---
> #line 2769
25273c25263
< #line 2768
---
> #line 2769
25275c25265
< #line 2768
---
> #line 2769
25277c25267
< #line 2768
---
> #line 2769
25280c25270
<                2768);
---
>                2769);
25284,25285d25273
< #line 2769
<       p->verify_alg[63] = 0;
25286a25275,25276
>       p->verify_alg[63] = 0;
> #line 2771
25289c25279
< #line 2773
---
> #line 2774
25291,25292d25280
< #line 2773
<     if (tmp___17 != 0) {
25294c25282
<       if ((unsigned int )*((unsigned short *)mdev + 902UL) == 144U) {
---
>     if (tmp___17 != 0) {
25295a25284,25285
>       if ((unsigned int )*((unsigned short *)mdev + 902UL) == 144U) {
> #line 2776
25297c25287
< #line 2775
---
> #line 2776
25299c25289
< #line 2775
---
> #line 2776
25303c25293
< #line 2777
---
> #line 2778
25308c25298
< #line 2779
---
> #line 2780
25312c25302
< #line 2781
---
> #line 2782
25314,25315d25303
< #line 2781
<       if (tmp___16 != 0L) {
25317c25305
<         verify_tfm = 0;
---
>       if (tmp___16 != 0L) {
25318a25307,25308
>         verify_tfm = 0;
> #line 2784
25326c25316
< #line 2787
---
> #line 2788
25328c25318
< #line 2787
---
> #line 2788
25330,25331d25319
< #line 2787
<       if (tmp___21 != 0) {
25333c25321
<         if ((unsigned int )*((unsigned short *)mdev + 902UL) == 144U) {
---
>       if (tmp___21 != 0) {
25334a25323,25324
>         if ((unsigned int )*((unsigned short *)mdev + 902UL) == 144U) {
> #line 2790
25336c25326
< #line 2789
---
> #line 2790
25338c25328
< #line 2789
---
> #line 2790
25342c25332
< #line 2791
---
> #line 2792
25347c25337
< #line 2793
---
> #line 2794
25351c25341
< #line 2795
---
> #line 2796
25353,25354d25342
< #line 2795
<         if (tmp___20 != 0L) {
25356c25344
<           csums_tfm = 0;
---
>         if (tmp___20 != 0L) {
25357a25346,25347
>           csums_tfm = 0;
> #line 2798
25368c25358
< #line 2802
---
> #line 2803
25370,25371d25359
< #line 2804
<     if ((unsigned long )verify_tfm != (unsigned long )((struct crypto_hash *)0)) {
25373c25361
<       strcpy((char *)(& mdev->sync_conf.verify_alg), (char const   *)(& p->verify_alg));
---
>     if ((unsigned long )verify_tfm != (unsigned long )((struct crypto_hash *)0)) {
25374a25363,25364
>       strcpy((char *)(& mdev->sync_conf.verify_alg), (char const   *)(& p->verify_alg));
> #line 2807
25376,25377d25365
< #line 2806
<       mdev->sync_conf.verify_alg_len = (int )((unsigned int )tmp___22 + 1U);
25379c25367
<       crypto_free_hash(mdev->verify_tfm);
---
>       mdev->sync_conf.verify_alg_len = (int )((unsigned int )tmp___22 + 1U);
25381c25369
<       mdev->verify_tfm = verify_tfm;
---
>       crypto_free_hash(mdev->verify_tfm);
25382a25371,25372
>       mdev->verify_tfm = verify_tfm;
> #line 2810
25384c25374
< #line 2809
---
> #line 2810
25386c25376
< #line 2809
---
> #line 2810
25391,25392d25380
< #line 2811
<     if ((unsigned long )csums_tfm != (unsigned long )((struct crypto_hash *)0)) {
25394c25382
<       strcpy((char *)(& mdev->sync_conf.csums_alg), (char const   *)(& p->csums_alg));
---
>     if ((unsigned long )csums_tfm != (unsigned long )((struct crypto_hash *)0)) {
25395a25384,25385
>       strcpy((char *)(& mdev->sync_conf.csums_alg), (char const   *)(& p->csums_alg));
> #line 2814
25397,25398d25386
< #line 2813
<       mdev->sync_conf.csums_alg_len = (int )((unsigned int )tmp___25 + 1U);
25400c25388
<       crypto_free_hash(mdev->csums_tfm);
---
>       mdev->sync_conf.csums_alg_len = (int )((unsigned int )tmp___25 + 1U);
25402c25390
<       mdev->csums_tfm = csums_tfm;
---
>       crypto_free_hash(mdev->csums_tfm);
25403a25392,25393
>       mdev->csums_tfm = csums_tfm;
> #line 2817
25405c25395
< #line 2816
---
> #line 2817
25407c25397
< #line 2816
---
> #line 2817
25412c25402
< #line 2818
---
> #line 2819
25417c25407
< #line 2821
---
> #line 2822
25420c25410
< #line 2825
---
> #line 2826
25422,25423d25411
< #line 2827
<   crypto_free_hash(verify_tfm);
25424a25413,25414
>   crypto_free_hash(verify_tfm);
> #line 2829
25426c25416
< #line 2828
---
> #line 2829
25428c25418
< #line 2828
---
> #line 2829
25430c25420
< #line 2828
---
> #line 2829
25432,25433d25421
< #line 2828
<   drbd_force_state(mdev, mask, val);
25434a25423,25424
>   drbd_force_state(mdev, mask, val);
> #line 2830
25438c25428
< #line 2832 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2833 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
25444c25434
< #line 2834
---
> #line 2835
25448c25438
< #line 2839 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2840 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
25457,25458d25446
< #line 2843
<   if (a == 0UL || b == 0UL) {
25459a25448,25449
>   if (a == 0UL || b == 0UL) {
> #line 2845
25464,25465d25453
< #line 2845
<   d = a > b ? a - b : b - a;
25467c25455
<   if (a >> 3 < d || b >> 3 < d) {
---
>   d = a > b ? a - b : b - a;
25468a25457,25458
>   if (a >> 3 < d || b >> 3 < d) {
> #line 2848
25470c25460
< #line 2847
---
> #line 2848
25472c25462
< #line 2847
---
> #line 2848
25478c25468
< #line 2848
---
> #line 2849
25482c25472
< #line 2851 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2852 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
25535,25536d25524
< #line 2853
<   p = (struct p_sizes *)h;
25537a25526,25527
>   p = (struct p_sizes *)h;
> #line 2855
25539c25529
< #line 2857
---
> #line 2858
25541c25531
< #line 2860
---
> #line 2861
25543c25533
< #line 2860
---
> #line 2861
25545c25535
< #line 2860
---
> #line 2861
25547c25537
< #line 2860
---
> #line 2861
25549c25539
< #line 2860
---
> #line 2861
25552c25542
<            2860);
---
>            2861);
25556c25546
< #line 2860
---
> #line 2861
25558c25548
< #line 2860
---
> #line 2861
25563c25553
< #line 2861
---
> #line 2862
25565,25566d25554
< #line 2861
<   if (tmp___1 != (int )h->length) {
25567a25556,25557
>   if (tmp___1 != (int )h->length) {
> #line 2863
25572c25562
< #line 2864
---
> #line 2865
25574,25575d25563
< #line 2864
<   p_size = (sector_t )tmp___2;
25576a25565,25566
>   p_size = (sector_t )tmp___2;
> #line 2866
25578c25568
< #line 2865
---
> #line 2866
25580,25581d25569
< #line 2867
<   if (p_size == 0UL && (unsigned int )*((unsigned char *)mdev + 1805UL) == 0U) {
25582a25571,25572
>   if (p_size == 0UL && (unsigned int )*((unsigned char *)mdev + 1805UL) == 0U) {
> #line 2869
25584c25574
< #line 2868
---
> #line 2869
25586,25587d25575
< #line 2868
<     printk("<3>%s %s: some backing storage is needed\n", tmp___5, tmp___4);
25588a25577,25578
>     printk("<3>%s %s: some backing storage is needed\n", tmp___5, tmp___4);
> #line 2870
25590c25580
< #line 2869
---
> #line 2870
25592c25582
< #line 2869
---
> #line 2870
25594c25584
< #line 2869
---
> #line 2870
25596,25597d25585
< #line 2869
<     drbd_force_state(mdev, mask, val);
25598a25587,25588
>     drbd_force_state(mdev, mask, val);
> #line 2871
25603c25593
< #line 2875
---
> #line 2876
25605c25595
< #line 2878
---
> #line 2879
25607,25608d25596
< #line 2878
<   if (tmp___14 != 0) {
25609a25598,25599
>   if (tmp___14 != 0) {
> #line 2880
25611c25601
< #line 2879
---
> #line 2880
25613c25603
< #line 2881
---
> #line 2882
25615,25616d25604
< #line 2886
<     if ((unsigned int )*((unsigned short *)mdev + 902UL) == 144U) {
25617a25606,25607
>     if ((unsigned int )*((unsigned short *)mdev + 902UL) == 144U) {
> #line 2888
25619c25609
< #line 2887
---
> #line 2888
25621c25611
< #line 2887
---
> #line 2888
25624c25614
< #line 2887
---
> #line 2888
25626c25616
< #line 2887
---
> #line 2888
25628c25618
< #line 2887
---
> #line 2888
25631c25621
< #line 2887
---
> #line 2888
25634c25624
< #line 2887
---
> #line 2888
25640c25630
< #line 2890
---
> #line 2891
25642,25643d25631
< #line 2892
<     if ((mdev->ldev)->dc.disk_size != (unsigned long long )p_usize) {
25645c25633
<       (mdev->ldev)->dc.disk_size = (__u64 )p_usize;
---
>     if ((mdev->ldev)->dc.disk_size != (unsigned long long )p_usize) {
25646a25635,25636
>       (mdev->ldev)->dc.disk_size = (__u64 )p_usize;
> #line 2895
25648c25638
< #line 2894
---
> #line 2895
25650c25640
< #line 2894
---
> #line 2895
25655c25645
< #line 2900
---
> #line 2901
25657c25647
< #line 2900
---
> #line 2901
25659c25649
< #line 2900
---
> #line 2901
25661c25651
< #line 2904
---
> #line 2905
25663c25653
< #line 2904
---
> #line 2905
25665,25666d25654
< #line 2904
<       printk("<3>%s %s: The peer\'s disk size is too small!\n", tmp___11, tmp___10);
25667a25656,25657
>       printk("<3>%s %s: The peer\'s disk size is too small!\n", tmp___11, tmp___10);
> #line 2906
25669c25659
< #line 2905
---
> #line 2906
25671c25661
< #line 2905
---
> #line 2906
25673c25663
< #line 2905
---
> #line 2906
25675,25676d25664
< #line 2905
<       drbd_force_state(mdev, mask___0, val___0);
25678c25666
<       (mdev->ldev)->dc.disk_size = (__u64 )my_usize;
---
>       drbd_force_state(mdev, mask___0, val___0);
25680c25668
<       put_ldev(mdev);
---
>       (mdev->ldev)->dc.disk_size = (__u64 )my_usize;
25681a25670,25671
>       put_ldev(mdev);
> #line 2909
25686c25676
< #line 2910
---
> #line 2911
25691c25681
< #line 2914
---
> #line 2915
25693,25694d25682
< #line 2914
<   if (tmp___15 != 0) {
25696c25684
<     dd = drbd_determin_dev_size(mdev);
---
>   if (tmp___15 != 0) {
25698c25686
<     put_ldev(mdev);
---
>     dd = drbd_determin_dev_size(mdev);
25700c25688
<     if ((int )dd == -1) {
---
>     put_ldev(mdev);
25701a25690,25691
>     if ((int )dd == -1) {
> #line 2919
25706c25696
< #line 2919
---
> #line 2920
25709c25699
< #line 2922
---
> #line 2923
25712c25702
< #line 2925
---
> #line 2926
25714c25704
< #line 2925
---
> #line 2926
25716,25717d25705
< #line 2925
<     if (tmp___17 != 0) {
25718a25707,25708
>     if (tmp___17 != 0) {
> #line 2927
25721c25711
< #line 2928
---
> #line 2929
25723,25724d25712
< #line 2930
<       if ((unsigned int )nconn == 31U) {
25725a25714,25715
>       if ((unsigned int )nconn == 31U) {
> #line 2932
25727c25717
< #line 2931
---
> #line 2932
25729c25719
< #line 2931
---
> #line 2932
25731c25721
< #line 2931
---
> #line 2932
25733,25734d25722
< #line 2931
<         drbd_force_state(mdev, mask___1, val___1);
25735a25724,25725
>         drbd_force_state(mdev, mask___1, val___1);
> #line 2933
25740c25730
< #line 2935
---
> #line 2936
25742c25732
< #line 2935
---
> #line 2936
25744c25734
< #line 2935
---
> #line 2936
25746c25736
< #line 2935
---
> #line 2936
25748c25738
< #line 2935
---
> #line 2936
25750,25751d25739
< #line 2935
<       if (tmp___16 <= 0) {
25752a25741,25742
>       if (tmp___16 <= 0) {
> #line 2937
25754c25744
< #line 2936
---
> #line 2937
25756c25746
< #line 2936
---
> #line 2937
25758c25748
< #line 2936
---
> #line 2937
25760,25761d25749
< #line 2936
<         drbd_force_state(mdev, mask___2, val___2);
25762a25751,25752
>         drbd_force_state(mdev, mask___2, val___2);
> #line 2938
25773c25763
< #line 2941
---
> #line 2942
25775,25776d25764
< #line 2941
<   if (tmp___22 != 0) {
25777a25766,25767
>   if (tmp___22 != 0) {
> #line 2943
25779,25780d25768
< #line 2942
<     if ((mdev->ldev)->known_size != tmp___18) {
25782c25770
<       (mdev->ldev)->known_size = drbd_get_capacity((mdev->ldev)->backing_bdev);
---
>     if ((mdev->ldev)->known_size != tmp___18) {
25783a25772,25773
>       (mdev->ldev)->known_size = drbd_get_capacity((mdev->ldev)->backing_bdev);
> #line 2945
25788c25778
< #line 2947
---
> #line 2948
25790,25791d25779
< #line 2947
<     max_seg_s = tmp___19;
25792a25781,25782
>     max_seg_s = tmp___19;
> #line 2949
25794,25795d25783
< #line 2948
<     if (tmp___20 != max_seg_s) {
25796a25785,25786
>     if (tmp___20 != max_seg_s) {
> #line 2950
25801c25791
< #line 2951
---
> #line 2952
25803,25804d25792
< #line 2951
<     drbd_setup_order_type(mdev, (int )tmp___21);
25805a25794,25795
>     drbd_setup_order_type(mdev, (int )tmp___21);
> #line 2953
25810,25811d25799
< #line 2955
<   if ((int )mdev->state.ldv_32691.conn > 9) {
25812a25801,25802
>   if ((int )mdev->state.ldv_32691.conn > 9) {
> #line 2957
25814c25804
< #line 2956
---
> #line 2957
25816c25806
< #line 2956
---
> #line 2957
25818c25808
< #line 2960
---
> #line 2961
25823c25813
< #line 2962
---
> #line 2963
25825c25815
< #line 2962
---
> #line 2963
25827c25817
< #line 2964
---
> #line 2965
25829c25819
< #line 2966
---
> #line 2967
25832c25822
< #line 2968
---
> #line 2969
25841c25831
< #line 2972
---
> #line 2973
25845c25835
< #line 2975 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2976 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
25872c25862
< #line 2977
---
> #line 2978
25874c25864
< #line 2981
---
> #line 2982
25876c25866
< #line 2981
---
> #line 2982
25878c25868
< #line 2981
---
> #line 2982
25880c25870
< #line 2981
---
> #line 2982
25882c25872
< #line 2981
---
> #line 2982
25885c25875
<            2981);
---
>            2982);
25889c25879
< #line 2981
---
> #line 2982
25891c25881
< #line 2981
---
> #line 2982
25896c25886
< #line 2982
---
> #line 2983
25898,25899d25887
< #line 2982
<   if (tmp___1 != (int )h->length) {
25900a25889,25890
>   if (tmp___1 != (int )h->length) {
> #line 2984
25905c25895
< #line 2985
---
> #line 2986
25907c25897
< #line 2985
---
> #line 2986
25909c25899
< #line 2987
---
> #line 2988
25911c25901
< #line 2987
---
> #line 2988
25914c25904
< #line 2988
---
> #line 2989
25916c25906
< #line 2988
---
> #line 2989
25918c25908
< #line 2987
---
> #line 2988
25921,25922d25910
< #line 2987
<   if (i <= 5) {
25923a25912,25913
>   if (i <= 5) {
> #line 2989
25928,25929d25917
< #line 2990
<   kfree((void const   *)mdev->p_uuid);
25930a25919,25920
>   kfree((void const   *)mdev->p_uuid);
> #line 2992
25932c25922
< #line 2993
---
> #line 2994
25934c25924
< #line 2997
---
> #line 2998
25936c25926
< #line 2997
---
> #line 2998
25938c25928
< #line 2997
---
> #line 2998
25941c25931
< #line 2999
---
> #line 3000
25943c25933
< #line 2999
---
> #line 3000
25945c25935
< #line 2999
---
> #line 3000
25947c25937
< #line 2999
---
> #line 3000
25949,25950d25938
< #line 2999
<     drbd_force_state(mdev, mask, val);
25951a25940,25941
>     drbd_force_state(mdev, mask, val);
> #line 3001
25956c25946
< #line 3003
---
> #line 3004
25958,25959d25947
< #line 3003
<   if (tmp___8 != 0) {
25960a25949,25950
>   if (tmp___8 != 0) {
> #line 3005
25962,25963d25951
< #line 3009
<     if (skip_initial_sync != 0) {
25964a25953,25954
>     if (skip_initial_sync != 0) {
> #line 3011
25966c25956
< #line 3010
---
> #line 3011
25968c25958
< #line 3010
---
> #line 3011
25971c25961
< #line 3011
---
> #line 3012
25973,25974d25962
< #line 3013
<       _drbd_uuid_set(mdev, 0, *p_uuid);
25976c25964
<       _drbd_uuid_set(mdev, 1, 0ULL);
---
>       _drbd_uuid_set(mdev, 0, *p_uuid);
25977a25966,25967
>       _drbd_uuid_set(mdev, 1, 0ULL);
> #line 3016
25979c25969
< #line 3015
---
> #line 3016
25981c25971
< #line 3015
---
> #line 3016
25983c25973
< #line 3015
---
> #line 3016
25985c25975
< #line 3017
---
> #line 3018
25990c25980
< #line 3019
---
> #line 3020
25995c25985
< #line 3026
---
> #line 3027
25997c25987
< #line 3026
---
> #line 3027
25999c25989
< #line 3026
---
> #line 3027
26004c25994
< #line 3026
---
> #line 3027
26006c25996
< #line 3026
---
> #line 3027
26008c25998
< #line 3026
---
> #line 3027
26010c26000
< #line 3026
---
> #line 3027
26012c26002
< #line 3026
---
> #line 3027
26014c26004
< #line 3026
---
> #line 3027
26017c26007
< #line 3026
---
> #line 3027
26019c26009
< #line 3026
---
> #line 3027
26021c26011
< #line 3026
---
> #line 3027
26023c26013
< #line 3026
---
> #line 3027
26028c26018
< #line 3026
---
> #line 3027
26030c26020
< #line 3026
---
> #line 3027
26033c26023
< #line 3026
---
> #line 3027
26036,26037d26025
< #line 3027
<   if ((int )mdev->state.ldv_32691.conn > 9 && (int )mdev->state.ldv_32691.disk <= 3) {
26038a26027,26028
>   if ((int )mdev->state.ldv_32691.conn > 9 && (int )mdev->state.ldv_32691.disk <= 3) {
> #line 3029
26043c26033
< #line 3030
---
> #line 3031
26047c26037
< #line 3037 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3038 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
26054c26044
< #line 3041
---
> #line 3042
26056c26046
< #line 3041
---
> #line 3042
26058c26048
< #line 3041
---
> #line 3042
26060c26050
< #line 3041
---
> #line 3042
26062c26052
< #line 3041
---
> #line 3042
26064c26054
< #line 3041
---
> #line 3042
26066c26056
< #line 3041
---
> #line 3042
26068c26058
< #line 3041
---
> #line 3042
26070c26060
< #line 3041
---
> #line 3042
26072c26062
< #line 3041
---
> #line 3042
26074c26064
< #line 3041
---
> #line 3042
26076c26066
< #line 3041
---
> #line 3042
26078c26068
< #line 3041
---
> #line 3042
26080c26070
< #line 3041
---
> #line 3042
26082c26072
< #line 3041
---
> #line 3042
26084c26074
< #line 3041
---
> #line 3042
26086c26076
< #line 3041
---
> #line 3042
26088c26078
< #line 3041
---
> #line 3042
26090c26080
< #line 3041
---
> #line 3042
26092c26082
< #line 3041
---
> #line 3042
26094c26084
< #line 3041
---
> #line 3042
26096c26086
< #line 3041
---
> #line 3042
26098c26088
< #line 3041
---
> #line 3042
26100c26090
< #line 3041
---
> #line 3042
26102c26092
< #line 3041
---
> #line 3042
26104c26094
< #line 3041
---
> #line 3042
26106c26096
< #line 3041
---
> #line 3042
26108c26098
< #line 3041
---
> #line 3042
26110c26100
< #line 3041
---
> #line 3042
26112c26102
< #line 3041
---
> #line 3042
26114c26104
< #line 3041
---
> #line 3042
26116c26106
< #line 3041
---
> #line 3042
26118c26108
< #line 3051
---
> #line 3052
26120,26121d26109
< #line 3053
<   ms.ldv_32691.conn = (unsigned char )c_tab[(int )ps.ldv_32691.conn];
26123c26111
<   ms.ldv_32691.peer = ps.ldv_32691.role;
---
>   ms.ldv_32691.conn = (unsigned char )c_tab[(int )ps.ldv_32691.conn];
26125c26113
<   ms.ldv_32691.role = ps.ldv_32691.peer;
---
>   ms.ldv_32691.peer = ps.ldv_32691.role;
26127c26115
<   ms.ldv_32691.pdsk = ps.ldv_32691.disk;
---
>   ms.ldv_32691.role = ps.ldv_32691.peer;
26129c26117
<   ms.ldv_32691.disk = ps.ldv_32691.pdsk;
---
>   ms.ldv_32691.pdsk = ps.ldv_32691.disk;
26130a26119,26120
>   ms.ldv_32691.disk = ps.ldv_32691.pdsk;
> #line 3059
26132c26122
< #line 3060
---
> #line 3061
26136c26126
< #line 3063 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3064 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
26153c26143
< #line 3065
---
> #line 3066
26155c26145
< #line 3069
---
> #line 3070
26157c26147
< #line 3069
---
> #line 3070
26159c26149
< #line 3069
---
> #line 3070
26161c26151
< #line 3069
---
> #line 3070
26163c26153
< #line 3069
---
> #line 3070
26166c26156
<            3069);
---
>            3070);
26170c26160
< #line 3069
---
> #line 3070
26172c26162
< #line 3069
---
> #line 3070
26177c26167
< #line 3070
---
> #line 3071
26179,26180d26168
< #line 3070
<   if (tmp___1 != (int )h->length) {
26181a26170,26171
>   if (tmp___1 != (int )h->length) {
> #line 3072
26186c26176
< #line 3073
---
> #line 3074
26188,26189d26177
< #line 3073
<   mask.i = tmp___2;
26190a26179,26180
>   mask.i = tmp___2;
> #line 3075
26192c26182
< #line 3074
---
> #line 3075
26194c26184
< #line 3076
---
> #line 3077
26196c26186
< #line 3076
---
> #line 3077
26198c26188
< #line 3076
---
> #line 3077
26200c26190
< #line 3076
---
> #line 3077
26202,26203d26191
< #line 3078
<       drbd_send_sr_reply(mdev, -19);
26204a26193,26194
>       drbd_send_sr_reply(mdev, -19);
> #line 3080
26212,26213d26201
< #line 3082
<   mask = convert_state(mask);
26214a26203,26204
>   mask = convert_state(mask);
> #line 3084
26216c26206
< #line 3085
---
> #line 3086
26218,26219d26207
< #line 3087
<   drbd_send_sr_reply(mdev, rv);
26220a26209,26210
>   drbd_send_sr_reply(mdev, rv);
> #line 3089
26222c26212
< #line 3090
---
> #line 3091
26226c26216
< #line 3093 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3094 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
26259c26249
< #line 3095
---
> #line 3096
26261c26251
< #line 3101
---
> #line 3102
26263c26253
< #line 3101
---
> #line 3102
26265c26255
< #line 3101
---
> #line 3102
26267c26257
< #line 3101
---
> #line 3102
26269c26259
< #line 3101
---
> #line 3102
26272c26262
<            3101);
---
>            3102);
26276,26277d26265
< #line 3101
<   if (_b != 0) {
26278a26267,26268
>   if (_b != 0) {
> #line 3103
26283c26273
< #line 3104
---
> #line 3105
26285,26286d26274
< #line 3104
<   if (tmp___1 != (int )h->length) {
26287a26276,26277
>   if (tmp___1 != (int )h->length) {
> #line 3106
26292c26282
< #line 3107
---
> #line 3108
26294c26284
< #line 3107
---
> #line 3108
26296,26297d26285
< #line 3109
<   real_peer_disk = (enum drbd_disk_state )peer_state.ldv_32691.disk;
26299c26287
<   if ((unsigned int )*((unsigned char *)(& peer_state) + 1UL) == 6U) {
---
>   real_peer_disk = (enum drbd_disk_state )peer_state.ldv_32691.disk;
26301c26289
<     real_peer_disk = (*(mdev->p_uuid + 5UL) & 4ULL) != 0ULL ? D_INCONSISTENT : D_CONSISTENT;
---
>   if ((unsigned int )*((unsigned char *)(& peer_state) + 1UL) == 6U) {
26302a26291,26292
>     real_peer_disk = (*(mdev->p_uuid + 5UL) & 4ULL) != 0ULL ? D_INCONSISTENT : D_CONSISTENT;
> #line 3113
26304c26294
< #line 3112
---
> #line 3113
26306c26296
< #line 3112
---
> #line 3113
26308c26298
< #line 3112
---
> #line 3113
26313c26303
< #line 3115
---
> #line 3116
26316c26306
< #line 3117
---
> #line 3118
26318,26319d26307
< #line 3117
<   oconn = nconn;
26320a26309,26310
>   oconn = nconn;
> #line 3119
26322,26323d26311
< #line 3120
<   if ((unsigned int )nconn == 9U) {
26324a26313,26314
>   if ((unsigned int )nconn == 9U) {
> #line 3122
26329c26319
< #line 3123
---
> #line 3124
26331c26321
< #line 3123
---
> #line 3124
26333c26323
< #line 3123
---
> #line 3124
26335c26325
< #line 3128
---
> #line 3129
26337c26327
< #line 3131
---
> #line 3132
26339c26329
< #line 3136
---
> #line 3137
26341c26331
< #line 3136
---
> #line 3137
26343c26333
< #line 3139
---
> #line 3140
26345,26346d26334
< #line 3143
<       if (cr != 0) {
26347a26336,26337
>       if (cr != 0) {
> #line 3145
26353,26354d26342
< #line 3146
<       put_ldev(mdev);
26356c26344
<       if ((unsigned int )nconn == 31U) {
---
>       put_ldev(mdev);
26358c26346
<         if ((unsigned int )*((unsigned char *)mdev + 1805UL) == 6U) {
---
>       if ((unsigned int )nconn == 31U) {
26359a26348,26349
>         if ((unsigned int )*((unsigned char *)mdev + 1805UL) == 6U) {
> #line 3150
26361c26351
< #line 3149
---
> #line 3150
26363c26353
< #line 3149
---
> #line 3150
26365c26355
< #line 3149
---
> #line 3150
26367,26368d26356
< #line 3149
<           drbd_force_state(mdev, mask, val);
26369a26358,26359
>           drbd_force_state(mdev, mask, val);
> #line 3151
26372,26373d26361
< #line 3151
<         if ((unsigned int )*((unsigned char *)(& peer_state) + 1UL) == 6U) {
26374a26363,26364
>         if ((unsigned int )*((unsigned char *)(& peer_state) + 1UL) == 6U) {
> #line 3153
26376c26366
< #line 3152
---
> #line 3153
26378c26368
< #line 3152
---
> #line 3153
26381c26371
< #line 3153
---
> #line 3154
26384c26374
< #line 3155
---
> #line 3156
26386c26376
< #line 3155
---
> #line 3156
26388c26378
< #line 3155
---
> #line 3156
26390c26380
< #line 3155
---
> #line 3156
26393c26383
<                    3155);
---
>                    3156);
26397c26387
< #line 3156
---
> #line 3157
26399c26389
< #line 3156
---
> #line 3157
26401c26391
< #line 3156
---
> #line 3157
26403c26393
< #line 3156
---
> #line 3157
26405,26406d26394
< #line 3156
<           drbd_force_state(mdev, mask___0, val___0);
26407a26396,26397
>           drbd_force_state(mdev, mask___0, val___0);
> #line 3158
26419,26420d26408
< #line 3162
<   spin_lock_irq(& mdev->req_lock);
26422c26410
<   if ((unsigned int )mdev->state.ldv_32691.conn != (unsigned int )oconn) {
---
>   spin_lock_irq(& mdev->req_lock);
26423a26412,26413
>   if ((unsigned int )mdev->state.ldv_32691.conn != (unsigned int )oconn) {
> #line 3165
26428,26429d26417
< #line 3165
<   clear_bit(15, (unsigned long volatile   *)(& mdev->flags));
26431c26419
<   ns.i = mdev->state.i;
---
>   clear_bit(15, (unsigned long volatile   *)(& mdev->flags));
26433c26421
<   ns.ldv_32691.conn = (unsigned char )nconn;
---
>   ns.i = mdev->state.i;
26435c26423
<   ns.ldv_32691.peer = peer_state.ldv_32691.role;
---
>   ns.ldv_32691.conn = (unsigned char )nconn;
26437c26425
<   ns.ldv_32691.pdsk = (unsigned char )real_peer_disk;
---
>   ns.ldv_32691.peer = peer_state.ldv_32691.role;
26439c26427
<   ns.ldv_32691.peer_isp = (unsigned char )((int )peer_state.ldv_32691.aftr_isp | (int )peer_state.ldv_32691.user_isp);
---
>   ns.ldv_32691.pdsk = (unsigned char )real_peer_disk;
26441c26429
<   if (((unsigned int )nconn == 10U || (unsigned int )nconn == 13U) && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 6U) {
---
>   ns.ldv_32691.peer_isp = (unsigned char )((int )peer_state.ldv_32691.aftr_isp | (int )peer_state.ldv_32691.user_isp);
26442a26431,26432
>   if (((unsigned int )nconn == 10U || (unsigned int )nconn == 13U) && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 6U) {
> #line 3173
26447,26448d26436
< #line 3174
<   rv = _drbd_set_state(mdev, ns, 3, 0);
26450c26438
<   ns = mdev->state;
---
>   rv = _drbd_set_state(mdev, ns, 3, 0);
26451a26440,26441
>   ns = mdev->state;
> #line 3177
26453,26454d26442
< #line 3178
<   if (rv <= 0) {
26455a26444,26445
>   if (rv <= 0) {
> #line 3180
26457c26447
< #line 3179
---
> #line 3180
26459c26449
< #line 3179
---
> #line 3180
26461c26451
< #line 3179
---
> #line 3180
26463,26464d26452
< #line 3179
<     drbd_force_state(mdev, mask___1, val___1);
26465a26454,26455
>     drbd_force_state(mdev, mask___1, val___1);
> #line 3181
26470,26471d26459
< #line 3183
<   if ((unsigned int )oconn > 9U) {
26472a26461,26462
>   if ((unsigned int )oconn > 9U) {
> #line 3185
26474,26475d26463
< #line 3189
<       drbd_send_uuids(mdev);
26476a26465,26466
>       drbd_send_uuids(mdev);
> #line 3191
26484c26474
< #line 3194
---
> #line 3195
26486c26476
< #line 3196
---
> #line 3197
26488c26478
< #line 3198
---
> #line 3199
26492c26482
< #line 3201 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3202 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
26508c26498
< #line 3203
---
> #line 3204
26510c26500
< #line 3205
---
> #line 3206
26512c26502
< #line 3205
---
> #line 3206
26517c26507
< #line 3205
---
> #line 3206
26519c26509
< #line 3205
---
> #line 3206
26521c26511
< #line 3205
---
> #line 3206
26523c26513
< #line 3205
---
> #line 3206
26525c26515
< #line 3205
---
> #line 3206
26527c26517
< #line 3205
---
> #line 3206
26530c26520
< #line 3205
---
> #line 3206
26532c26522
< #line 3205
---
> #line 3206
26534c26524
< #line 3205
---
> #line 3206
26539c26529
< #line 3205
---
> #line 3206
26541c26531
< #line 3205
---
> #line 3206
26544c26534
< #line 3205
---
> #line 3206
26547c26537
< #line 3212
---
> #line 3213
26549c26539
< #line 3212
---
> #line 3213
26551c26541
< #line 3212
---
> #line 3213
26553c26543
< #line 3212
---
> #line 3213
26555c26545
< #line 3212
---
> #line 3213
26558c26548
<            3212);
---
>            3213);
26562c26552
< #line 3212
---
> #line 3213
26564c26554
< #line 3212
---
> #line 3213
26569c26559
< #line 3213
---
> #line 3214
26571,26572d26560
< #line 3213
<   if (tmp___2 != (int )h->length) {
26573a26562,26563
>   if (tmp___2 != (int )h->length) {
> #line 3215
26578c26568
< #line 3218
---
> #line 3219
26580,26581d26569
< #line 3218
<   if (tmp___6 != 0) {
26582a26571,26572
>   if (tmp___6 != 0) {
> #line 3220
26584,26585d26573
< #line 3219
<     _drbd_uuid_set(mdev, 0, tmp___3);
26586a26575,26576
>     _drbd_uuid_set(mdev, 0, tmp___3);
> #line 3221
26588c26578
< #line 3222
---
> #line 3223
26590c26580
< #line 3224
---
> #line 3225
26593c26583
< #line 3226
---
> #line 3227
26595c26585
< #line 3226
---
> #line 3227
26597c26587
< #line 3226
---
> #line 3227
26600c26590
< #line 3228
---
> #line 3229
26604c26594
< #line 3234 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3235 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
26617c26607
< #line 3237
---
> #line 3238
26619c26609
< #line 3237
---
> #line 3238
26621,26622d26610
< #line 3237
<   num_words = (unsigned int )(__min1 < __min2 ? __min1 : __min2);
26623a26612,26613
>   num_words = (unsigned int )(__min1 < __min2 ? __min1 : __min2);
> #line 3239
26625,26626d26614
< #line 3240
<   if ((unsigned int )h->length != want) {
26627a26616,26617
>   if ((unsigned int )h->length != want) {
> #line 3242
26629c26619
< #line 3241
---
> #line 3242
26631c26621
< #line 3241
---
> #line 3242
26634c26624
< #line 3242
---
> #line 3243
26639,26640d26628
< #line 3244
<   if (want == 0U) {
26641a26630,26631
>   if (want == 0U) {
> #line 3246
26646c26636
< #line 3246
---
> #line 3247
26648,26649d26637
< #line 3246
<   if ((unsigned int )tmp___1 != want) {
26650a26639,26640
>   if ((unsigned int )tmp___1 != want) {
> #line 3248
26655c26645
< #line 3249
---
> #line 3250
26657,26658d26646
< #line 3251
<   c->word_offset = c->word_offset + (unsigned long )num_words;
26660c26648
<   c->bit_offset = c->word_offset * 64UL;
---
>   c->word_offset = c->word_offset + (unsigned long )num_words;
26662c26650
<   if (c->bit_offset > c->bm_bits) {
---
>   c->bit_offset = c->word_offset * 64UL;
26663a26652,26653
>   if (c->bit_offset > c->bm_bits) {
> #line 3255
26668c26658
< #line 3256
---
> #line 3257
26672c26662
< #line 3260 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3261 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
26694c26684
< #line 3268
---
> #line 3269
26696,26697d26685
< #line 3270
<   len = (int )((unsigned int )p->head.length - 1U);
26698a26687,26688
>   len = (int )((unsigned int )p->head.length - 1U);
> #line 3272
26700c26690
< #line 3271
---
> #line 3272
26702c26692
< #line 3275
---
> #line 3276
26704c26694
< #line 3275
---
> #line 3276
26706,26707d26695
< #line 3277
<   bits = bitstream_get_bits(& bs, & look_ahead, 64);
26709c26697
<   if (bits < 0) {
---
>   bits = bitstream_get_bits(& bs, & look_ahead, 64);
26710a26699,26700
>   if (bits < 0) {
> #line 3280
26715c26705
< #line 3281
---
> #line 3282
26717c26707
< #line 3281
---
> #line 3282
26720,26721d26709
< #line 3282
<   bits = vli_decode_bits(& rl, look_ahead);
26723c26711
<   if (bits <= 0) {
---
>   bits = vli_decode_bits(& rl, look_ahead);
26724a26713,26714
>   if (bits <= 0) {
> #line 3285
26729,26730d26718
< #line 3286
<   if (toggle != 0) {
26732c26720
<     e = (unsigned long )(((unsigned long long )s + rl) - 1ULL);
---
>   if (toggle != 0) {
26734c26722
<     if (c->bm_bits <= e) {
---
>     e = (unsigned long )(((unsigned long long )s + rl) - 1ULL);
26735a26724,26725
>     if (c->bm_bits <= e) {
> #line 3290
26737c26727
< #line 3289
---
> #line 3290
26739c26729
< #line 3289
---
> #line 3290
26742c26732
< #line 3290
---
> #line 3291
26747c26737
< #line 3292
---
> #line 3293
26752,26753d26741
< #line 3295
<   if (have < bits) {
26754a26743,26744
>   if (have < bits) {
> #line 3297
26756c26746
< #line 3296
---
> #line 3297
26758c26748
< #line 3296
---
> #line 3297
26762c26752
< #line 3300
---
> #line 3301
26767,26768d26756
< #line 3302
<   look_ahead = look_ahead >> bits;
26769a26758,26759
>   look_ahead = look_ahead >> bits;
> #line 3304
26771,26772d26760
< #line 3305
<   bits = bitstream_get_bits(& bs, & tmp, 64 - have);
26774c26762
<   if (bits < 0) {
---
>   bits = bitstream_get_bits(& bs, & tmp, 64 - have);
26775a26764,26765
>   if (bits < 0) {
> #line 3308
26780,26781d26769
< #line 3308
<   look_ahead = (tmp << have) | look_ahead;
26782a26771,26772
>   look_ahead = (tmp << have) | look_ahead;
> #line 3310
26784c26774
< #line 3281
---
> #line 3282
26786c26776
< #line 3281
---
> #line 3282
26789,26790d26778
< #line 3281
<   if (have > 0) {
26791a26780,26781
>   if (have > 0) {
> #line 3283
26796,26797d26785
< #line 3312
<   c->bit_offset = s;
26798a26787,26788
>   c->bit_offset = s;
> #line 3314
26800c26790
< #line 3315
---
> #line 3316
26804c26794
< #line 3319 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3320 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
26816c26806
< #line 3323
---
> #line 3324
26818,26819d26807
< #line 3323
<   if ((unsigned int )tmp___0 == 2U) {
26820a26809,26810
>   if ((unsigned int )tmp___0 == 2U) {
> #line 3325
26822c26812
< #line 3324
---
> #line 3325
26827c26817
< #line 3330
---
> #line 3331
26829c26819
< #line 3330
---
> #line 3331
26831,26832d26820
< #line 3330
<   printk("<3>%s %s: receive_bitmap_c: unknown encoding %u\n", tmp___2, tmp___1, (int )p->encoding);
26833a26822,26823
>   printk("<3>%s %s: receive_bitmap_c: unknown encoding %u\n", tmp___2, tmp___1, (int )p->encoding);
> #line 3332
26835c26825
< #line 3331
---
> #line 3332
26837c26827
< #line 3331
---
> #line 3332
26839c26829
< #line 3331
---
> #line 3332
26841,26842d26830
< #line 3331
<   drbd_force_state(mdev, mask, val);
26843a26832,26833
>   drbd_force_state(mdev, mask, val);
> #line 3333
26847c26837
< #line 3335 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3336 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
26857c26847
< #line 3339
---
> #line 3340
26859c26849
< #line 3342
---
> #line 3343
26861,26862d26850
< #line 3346
<   if (total == 0U) {
26863a26852,26853
>   if (total == 0U) {
> #line 3348
26868,26869d26857
< #line 3350
<   if (total >= plain) {
26870a26859,26860
>   if (total >= plain) {
> #line 3352
26875c26865
< #line 3354
---
> #line 3355
26877,26878d26866
< #line 3357
<   if (r > 1000U) {
26879a26868,26869
>   if (r > 1000U) {
> #line 3359
26884,26885d26873
< #line 3360
<   r = 1000U - r;
26886a26875,26876
>   r = 1000U - r;
> #line 3362
26888c26878
< #line 3361
---
> #line 3362
26890c26880
< #line 3361
---
> #line 3362
26894c26884
< #line 3362
---
> #line 3363
26898c26888
< #line 3377 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3378 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
26936c26926
< #line 3382
---
> #line 3383
26938c26928
< #line 3384
---
> #line 3385
26940c26930
< #line 3384
---
> #line 3385
26942c26932
< #line 3384
---
> #line 3385
26947c26937
< #line 3384
---
> #line 3385
26949c26939
< #line 3384
---
> #line 3385
26951c26941
< #line 3384
---
> #line 3385
26953c26943
< #line 3384
---
> #line 3385
26955c26945
< #line 3384
---
> #line 3385
26957c26947
< #line 3384
---
> #line 3385
26960c26950
< #line 3384
---
> #line 3385
26962c26952
< #line 3384
---
> #line 3385
26964c26954
< #line 3384
---
> #line 3385
26966c26956
< #line 3384
---
> #line 3385
26971c26961
< #line 3384
---
> #line 3385
26973c26963
< #line 3384
---
> #line 3385
26976c26966
< #line 3384
---
> #line 3385
26979c26969
< #line 3386
---
> #line 3387
26981c26971
< #line 3390
---
> #line 3391
26983,26984d26972
< #line 3390
<   buffer = (void *)tmp___2;
26986c26974
<   if ((unsigned long )buffer == (unsigned long )((void *)0)) {
---
>   buffer = (void *)tmp___2;
26987a26976,26977
>   if ((unsigned long )buffer == (unsigned long )((void *)0)) {
> #line 3393
26989c26979
< #line 3392
---
> #line 3393
26991c26981
< #line 3392
---
> #line 3393
26994c26984
< #line 3393
---
> #line 3394
26999c26989
< #line 3396
---
> #line 3397
27001c26991
< #line 3396
---
> #line 3397
27003c26993
< #line 3396
---
> #line 3397
27005c26995
< #line 3396
---
> #line 3397
27007c26997
< #line 3396
---
> #line 3397
27009c26999
< #line 3396
---
> #line 3397
27011c27001
< #line 3396
---
> #line 3397
27013c27003
< #line 3396
---
> #line 3397
27015c27005
< #line 3396
---
> #line 3397
27017c27007
< #line 3396
---
> #line 3397
27019c27009
< #line 3396
---
> #line 3397
27022,27023d27011
< #line 3402
<   if ((unsigned int )h->command == 4U) {
27024a27013,27014
>   if ((unsigned int )h->command == 4U) {
> #line 3404
27027c27017
< #line 3404
---
> #line 3405
27029,27030d27018
< #line 3409
<     if ((unsigned int )h->length > 4088U) {
27031a27020,27021
>     if ((unsigned int )h->length > 4088U) {
> #line 3411
27033c27023
< #line 3410
---
> #line 3411
27035,27036d27024
< #line 3410
<       printk("<3>%s %s: ReportCBitmap packet too large\n", tmp___8, tmp___7);
27037a27026,27027
>       printk("<3>%s %s: ReportCBitmap packet too large\n", tmp___8, tmp___7);
> #line 3412
27042,27043d27031
< #line 3414
<     p = (struct p_compressed_bm *)buffer;
27044a27033,27034
>     p = (struct p_compressed_bm *)buffer;
> #line 3416
27046c27036
< #line 3415
---
> #line 3416
27048c27038
< #line 3415
---
> #line 3416
27051c27041
< #line 3415
---
> #line 3416
27054c27044
< #line 3416
---
> #line 3417
27056,27057d27045
< #line 3416
<     if (tmp___9 != (int )h->length) {
27058a27047,27048
>     if (tmp___9 != (int )h->length) {
> #line 3418
27063,27064d27052
< #line 3418
<     if ((unsigned int )p->head.length <= 1U) {
27065a27054,27055
>     if ((unsigned int )p->head.length <= 1U) {
> #line 3420
27067c27057
< #line 3419
---
> #line 3420
27069c27059
< #line 3419
---
> #line 3420
27072c27062
< #line 3420
---
> #line 3421
27077c27067
< #line 3422
---
> #line 3423
27080c27070
< #line 3424
---
> #line 3425
27082c27072
< #line 3424
---
> #line 3425
27084c27074
< #line 3424
---
> #line 3425
27087c27077
< #line 3425
---
> #line 3426
27090,27091d27079
< #line 3428
<   c.packets[(unsigned int )h->command == 4U] = c.packets[(unsigned int )h->command == 4U] + 1U;
27092a27081,27082
>   c.packets[(unsigned int )h->command == 4U] = c.packets[(unsigned int )h->command == 4U] + 1U;
> #line 3430
27094,27095d27083
< #line 3431
<   if ((unsigned int )ret != 0U) {
27096a27085,27086
>   if ((unsigned int )ret != 0U) {
> #line 3433
27101c27091
< #line 3434
---
> #line 3435
27103,27104d27092
< #line 3434
<   if (tmp___14 == 0) {
27105a27094,27095
>   if (tmp___14 == 0) {
> #line 3436
27110,27111d27099
< #line 3436
<   if ((unsigned int )ret == 0U) {
27112a27101,27102
>   if ((unsigned int )ret == 0U) {
> #line 3438
27118,27119d27107
< #line 3437
<   if ((unsigned int )ret == 2U) {
27120a27109,27110
>   if ((unsigned int )ret == 2U) {
> #line 3439
27125c27115
< #line 3440
---
> #line 3441
27127,27128d27116
< #line 3442
<   if ((unsigned int )*((unsigned short *)mdev + 902UL) == 224U) {
27129a27118,27119
>   if ((unsigned int )*((unsigned short *)mdev + 902UL) == 224U) {
> #line 3444
27131,27132d27120
< #line 3443
<     ok = tmp___15 == 0;
27134c27122
<     if (ok == 0) {
---
>     ok = tmp___15 == 0;
27135a27124,27125
>     if (ok == 0) {
> #line 3446
27140c27130
< #line 3447
---
> #line 3448
27142c27132
< #line 3447
---
> #line 3448
27144c27134
< #line 3447
---
> #line 3448
27146c27136
< #line 3447
---
> #line 3448
27148,27149d27137
< #line 3447
<     ok = _drbd_request_state(mdev, mask, val, CS_VERBOSE);
27150a27139,27140
>     ok = _drbd_request_state(mdev, mask, val, CS_VERBOSE);
> #line 3449
27152c27142
< #line 3448
---
> #line 3449
27154c27144
< #line 3448
---
> #line 3449
27156c27146
< #line 3448
---
> #line 3449
27159c27149
<              3448);
---
>              3449);
27164c27154
< #line 3449
---
> #line 3450
27166c27156
< #line 3452
---
> #line 3453
27168c27158
< #line 3452
---
> #line 3453
27170c27160
< #line 3452
---
> #line 3453
27172c27162
< #line 3452
---
> #line 3453
27178c27168
< #line 3456
---
> #line 3457
27181,27182d27170
< #line 3458
<   drbd_bm_unlock(mdev);
27184c27172
<   if (ok != 0 && (unsigned int )*((unsigned short *)mdev + 902UL) == 208U) {
---
>   drbd_bm_unlock(mdev);
27185a27174,27175
>   if (ok != 0 && (unsigned int )*((unsigned short *)mdev + 902UL) == 208U) {
> #line 3461
27190,27191d27179
< #line 3461
<   free_pages((unsigned long )buffer, 0U);
27192a27181,27182
>   free_pages((unsigned long )buffer, 0U);
> #line 3463
27196c27186
< #line 3465 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3466 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
27212c27202
< #line 3471
---
> #line 3472
27214c27204
< #line 3471
---
> #line 3472
27216c27206
< #line 3471
---
> #line 3472
27219,27220d27208
< #line 3474
<   size = (int )h->length;
27221a27210,27211
>   size = (int )h->length;
> #line 3476
27224c27214
< #line 3476
---
> #line 3477
27226c27216
< #line 3476
---
> #line 3477
27228,27229d27217
< #line 3476
<   want = __min1 < __min2 ? __min1 : __min2;
27231c27219
<   r = drbd_recv(mdev, (void *)(& sink), (size_t )want);
---
>   want = __min1 < __min2 ? __min1 : __min2;
27232a27221,27222
>   r = drbd_recv(mdev, (void *)(& sink), (size_t )want);
> #line 3479
27234c27224
< #line 3478
---
> #line 3479
27236c27226
< #line 3478
---
> #line 3479
27238c27228
< #line 3478
---
> #line 3479
27240c27230
< #line 3478
---
> #line 3479
27243c27233
<            3478);
---
>            3479);
27247c27237
< #line 3478
---
> #line 3479
27249c27239
< #line 3478
---
> #line 3479
27254c27244
< #line 3479
---
> #line 3480
27257,27258d27246
< #line 3475
<   if (size > 0) {
27259a27248,27249
>   if (size > 0) {
> #line 3477
27265c27255
< #line 3481
---
> #line 3482
27269c27259
< #line 3484 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3485 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
27275,27276d27264
< #line 3486
<   if ((int )mdev->state.ldv_32691.disk > 3) {
27277a27266,27267
>   if ((int )mdev->state.ldv_32691.disk > 3) {
> #line 3488
27282c27272
< #line 3491
---
> #line 3492
27284c27274
< #line 3493
---
> #line 3494
27288c27278
< #line 3498 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3499 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
27290c27280
< #line 3498
---
> #line 3499
27301c27291
< #line 3524 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3525 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
27304c27294
< #line 3525 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3526 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
27306c27296
< #line 3527 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3528 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
27329c27319
< #line 3530
---
> #line 3531
27331c27321
< #line 3532
---
> #line 3533
27334,27335d27323
< #line 3533
<   drbd_thread_current_set_cpu(mdev);
27336a27325,27326
>   drbd_thread_current_set_cpu(mdev);
> #line 3535
27338,27339d27327
< #line 3534
<   if (tmp == 0) {
27340a27329,27330
>   if (tmp == 0) {
> #line 3536
27342c27332
< #line 3535
---
> #line 3536
27344c27334
< #line 3535
---
> #line 3536
27346c27336
< #line 3535
---
> #line 3536
27348,27349d27337
< #line 3535
<     drbd_force_state(mdev, mask, val);
27350a27339,27340
>     drbd_force_state(mdev, mask, val);
> #line 3537
27355,27356d27344
< #line 3539
<   if ((unsigned int )header->command <= 36U) {
27357a27346,27347
>   if ((unsigned int )header->command <= 36U) {
> #line 3541
27360c27350
< #line 3541
---
> #line 3542
27362c27352
< #line 3543
---
> #line 3544
27365,27366d27354
< #line 3544
<   if ((unsigned int )header->command > 257U) {
27367a27356,27357
>   if ((unsigned int )header->command > 257U) {
> #line 3546
27370c27360
< #line 3547
---
> #line 3548
27373c27363
< #line 3549
---
> #line 3550
27377,27378d27366
< #line 3549
<   if (tmp___2 != 0L) {
27379a27368,27369
>   if (tmp___2 != 0L) {
> #line 3551
27381c27371
< #line 3550
---
> #line 3551
27383c27373
< #line 3550
---
> #line 3551
27386c27376
< #line 3552
---
> #line 3553
27388c27378
< #line 3552
---
> #line 3553
27390c27380
< #line 3552
---
> #line 3553
27392c27382
< #line 3552
---
> #line 3553
27394,27395d27383
< #line 3552
<     drbd_force_state(mdev, mask___0, val___0);
27396a27385,27386
>     drbd_force_state(mdev, mask___0, val___0);
> #line 3554
27401c27391
< #line 3555
---
> #line 3556
27403c27393
< #line 3555
---
> #line 3556
27405,27406d27394
< #line 3555
<   if (tmp___7 != 0L) {
27407a27396,27397
>   if (tmp___7 != 0L) {
> #line 3557
27409c27399
< #line 3556
---
> #line 3557
27411c27401
< #line 3556
---
> #line 3557
27413c27403
< #line 3556
---
> #line 3557
27415c27405
< #line 3558
---
> #line 3559
27417c27407
< #line 3558
---
> #line 3559
27419c27409
< #line 3558
---
> #line 3559
27421c27411
< #line 3558
---
> #line 3559
27423,27424d27412
< #line 3558
<     drbd_force_state(mdev, mask___1, val___1);
27425a27414,27415
>     drbd_force_state(mdev, mask___1, val___1);
> #line 3560
27431c27421
< #line 3532
---
> #line 3533
27433,27434d27422
< #line 3532
<   if ((unsigned int )tmp___8 == 1U) {
27435a27424,27425
>   if ((unsigned int )tmp___8 == 1U) {
> #line 3534
27441c27431
< #line 3537
---
> #line 3538
27445c27435
< #line 3564 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3565 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
27462,27463d27451
< #line 3575
<   spin_lock_irq(& mdev->req_lock);
27464a27453,27454
>   spin_lock_irq(& mdev->req_lock);
> #line 3577
27466c27456
< #line 3576
---
> #line 3577
27469,27470d27458
< #line 3577
<   slot = mdev->app_reads_hash + (unsigned long )i;
27471a27460,27461
>   slot = mdev->app_reads_hash + (unsigned long )i;
> #line 3579
27473c27463
< #line 3578
---
> #line 3579
27476c27466
< #line 3584
---
> #line 3585
27478c27468
< #line 3584
---
> #line 3585
27480c27470
< #line 3584
---
> #line 3585
27482c27472
< #line 3584
---
> #line 3585
27484c27474
< #line 3584
---
> #line 3585
27487c27477
<            3584);
---
>            3585);
27491c27481
< #line 3587
---
> #line 3588
27493c27483
< #line 3578
---
> #line 3579
27496c27486
< #line 3578
---
> #line 3579
27498c27488
< #line 3578
---
> #line 3579
27500c27490
< #line 3578
---
> #line 3579
27502c27492
< #line 3578
---
> #line 3579
27504c27494
< #line 3578
---
> #line 3579
27506,27507d27495
< #line 3578
<       if (1 != 0) {
27508a27497,27498
>       if (1 != 0) {
> #line 3580
27511c27501
< #line 3581
---
> #line 3582
27515c27505
< #line 3581
---
> #line 3582
27522c27512
< #line 3576
---
> #line 3577
27525,27526d27514
< #line 3576
<   if (i <= 14) {
27527a27516,27517
>   if (i <= 14) {
> #line 3578
27532c27522
< #line 3590
---
> #line 3591
27534c27524
< #line 3590
---
> #line 3591
27537c27527
< #line 3591
---
> #line 3592
27539,27540d27528
< #line 3591
<   if (tmp___5 == 0) {
27541a27530,27531
>   if (tmp___5 == 0) {
> #line 3593
27543c27533
< #line 3592
---
> #line 3593
27545c27535
< #line 3592
---
> #line 3593
27551c27541
< #line 3590
---
> #line 3591
27554,27555d27543
< #line 3590
<   if (i <= 14) {
27556a27545,27546
>   if (i <= 14) {
> #line 3592
27561,27562d27550
< #line 3595
<   memset((void *)mdev->app_reads_hash, 0, 120UL);
27564c27552
<   spin_unlock_irq(& mdev->req_lock);
---
>   memset((void *)mdev->app_reads_hash, 0, 120UL);
27565a27554,27555
>   spin_unlock_irq(& mdev->req_lock);
> #line 3598
27569c27559
< #line 3599 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3600 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
27575,27576d27564
< #line 3603
<   barr.w.cb = & w_prev_work_done;
27578c27566
<   init_completion(& barr.done);
---
>   barr.w.cb = & w_prev_work_done;
27580c27568
<   drbd_queue_work(& mdev->data.work, & barr.w);
---
>   init_completion(& barr.done);
27582c27570
<   wait_for_completion(& barr.done);
---
>   drbd_queue_work(& mdev->data.work, & barr.w);
27583a27572,27573
>   wait_for_completion(& barr.done);
> #line 3608
27587c27577
< #line 3609 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3610 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
27643c27633
< #line 3613
---
> #line 3614
27645,27646d27634
< #line 3616
<   if ((unsigned int )*((unsigned short *)mdev + 902UL) == 0U) {
27647a27636,27637
>   if ((unsigned int )*((unsigned short *)mdev + 902UL) == 0U) {
> #line 3618
27652,27653d27641
< #line 3618
<   if ((int )mdev->state.ldv_32691.conn > 7) {
27654a27643,27644
>   if ((int )mdev->state.ldv_32691.conn > 7) {
> #line 3620
27656c27646
< #line 3619
---
> #line 3620
27658c27648
< #line 3619
---
> #line 3620
27660c27650
< #line 3619
---
> #line 3620
27666c27656
< #line 3623
---
> #line 3624
27668,27669d27657
< #line 3625
<   ldv_mutex_lock_42(& mdev->data.mutex);
27671c27659
<   drbd_free_sock(mdev);
---
>   ldv_mutex_lock_42(& mdev->data.mutex);
27672a27661,27662
>   drbd_free_sock(mdev);
> #line 3628
27674,27675d27663
< #line 3629
<   spin_lock_irq(& mdev->req_lock);
27677c27665
<   _drbd_wait_ee_list_empty(mdev, & mdev->active_ee);
---
>   spin_lock_irq(& mdev->req_lock);
27679c27667
<   _drbd_wait_ee_list_empty(mdev, & mdev->sync_ee);
---
>   _drbd_wait_ee_list_empty(mdev, & mdev->active_ee);
27681c27669
<   _drbd_wait_ee_list_empty(mdev, & mdev->read_ee);
---
>   _drbd_wait_ee_list_empty(mdev, & mdev->sync_ee);
27682a27671,27672
>   _drbd_wait_ee_list_empty(mdev, & mdev->read_ee);
> #line 3634
27684,27685d27673
< #line 3645
<   drbd_rs_cancel_all(mdev);
27687c27675
<   mdev->rs_total = 0UL;
---
>   drbd_rs_cancel_all(mdev);
27689c27677
<   mdev->rs_failed = 0UL;
---
>   mdev->rs_total = 0UL;
27691c27679
<   atomic_set(& mdev->rs_pending_cnt, 0);
---
>   mdev->rs_failed = 0UL;
27692a27681,27682
>   atomic_set(& mdev->rs_pending_cnt, 0);
> #line 3650
27694,27695d27683
< #line 3652
<   del_timer_sync(& mdev->resync_timer);
27697c27685
<   set_bit(3U, (unsigned long volatile   *)(& mdev->flags));
---
>   del_timer_sync(& mdev->resync_timer);
27698a27687,27688
>   set_bit(3U, (unsigned long volatile   *)(& mdev->flags));
> #line 3655
27700c27690
< #line 3659
---
> #line 3660
27702c27692
< #line 3663
---
> #line 3664
27704,27705d27693
< #line 3665
<   kfree((void const   *)mdev->p_uuid);
27706a27695,27696
>   kfree((void const   *)mdev->p_uuid);
> #line 3667
27708,27709d27697
< #line 3668
<   if ((unsigned int )*((unsigned char *)mdev + 1806UL) == 0U) {
27710a27699,27700
>   if ((unsigned int )*((unsigned char *)mdev + 1806UL) == 0U) {
> #line 3670
27715c27705
< #line 3671
---
> #line 3672
27717c27707
< #line 3673
---
> #line 3674
27719c27709
< #line 3673
---
> #line 3674
27721c27711
< #line 3673
---
> #line 3674
27723c27713
< #line 3675
---
> #line 3676
27725,27726d27714
< #line 3677
<   fp = FP_DONT_CARE;
27727a27716,27717
>   fp = FP_DONT_CARE;
> #line 3679
27729,27730d27718
< #line 3678
<   if (tmp___4 != 0) {
27732c27720
<     fp = (enum drbd_fencing_p )(mdev->ldev)->dc.fencing;
---
>   if (tmp___4 != 0) {
27733a27722,27723
>     fp = (enum drbd_fencing_p )(mdev->ldev)->dc.fencing;
> #line 3681
27738,27739d27727
< #line 3683
<   if ((unsigned int )*((unsigned char *)mdev + 1804UL) == 1U) {
27741c27729
<     if ((unsigned int )fp != 0U && (int )mdev->state.ldv_32691.pdsk > 5) {
---
>   if ((unsigned int )*((unsigned char *)mdev + 1804UL) == 1U) {
27742a27731,27732
>     if ((unsigned int )fp != 0U && (int )mdev->state.ldv_32691.pdsk > 5) {
> #line 3686
27744,27745d27733
< #line 3685
<       nps = tmp___5;
27746a27735,27736
>       nps = tmp___5;
> #line 3687
27748c27738
< #line 3686
---
> #line 3687
27750c27740
< #line 3686
---
> #line 3687
27752c27742
< #line 3686
---
> #line 3687
27754c27744
< #line 3686
---
> #line 3687
27762,27763d27751
< #line 3690
<   spin_lock_irq(& mdev->req_lock);
27765c27753
<   os = mdev->state;
---
>   spin_lock_irq(& mdev->req_lock);
27766a27755,27756
>   os = mdev->state;
> #line 3693
27768,27769d27757
< #line 3694
<     ns = os;
27771c27759
<     ns.ldv_32691.conn = 2U;
---
>     ns = os;
27772a27761,27762
>     ns.ldv_32691.conn = 2U;
> #line 3697
27777c27767
< #line 3698
---
> #line 3699
27779c27769
< #line 3700
---
> #line 3701
27781c27771
< #line 3702
---
> #line 3703
27783c27773
< #line 3702
---
> #line 3703
27785c27775
< #line 3702
---
> #line 3703
27790c27780
< #line 3702
---
> #line 3703
27792c27782
< #line 3702
---
> #line 3703
27794c27784
< #line 3702
---
> #line 3703
27796c27786
< #line 3702
---
> #line 3703
27798c27788
< #line 3702
---
> #line 3703
27800c27790
< #line 3702
---
> #line 3703
27803c27793
< #line 3702
---
> #line 3703
27805c27795
< #line 3702
---
> #line 3703
27807c27797
< #line 3702
---
> #line 3703
27809c27799
< #line 3702
---
> #line 3703
27814c27804
< #line 3702
---
> #line 3703
27816c27806
< #line 3702
---
> #line 3703
27819c27809
< #line 3702
---
> #line 3703
27822c27812
< #line 3706
---
> #line 3707
27824c27814
< #line 3706
---
> #line 3707
27826c27816
< #line 3706
---
> #line 3707
27831c27821
< #line 3706
---
> #line 3707
27833c27823
< #line 3706
---
> #line 3707
27835c27825
< #line 3706
---
> #line 3707
27837c27827
< #line 3706
---
> #line 3707
27839c27829
< #line 3706
---
> #line 3707
27841c27831
< #line 3706
---
> #line 3707
27844c27834
< #line 3706
---
> #line 3707
27846c27836
< #line 3706
---
> #line 3707
27848c27838
< #line 3706
---
> #line 3707
27850c27840
< #line 3706
---
> #line 3707
27855c27845
< #line 3706
---
> #line 3707
27857c27847
< #line 3706
---
> #line 3707
27860c27850
< #line 3706
---
> #line 3707
27863c27853
< #line 3708
---
> #line 3709
27865c27855
< #line 3710
---
> #line 3711
27867c27857
< #line 3710
---
> #line 3711
27870,27871d27859
< #line 3711
<     if ((unsigned long )h->first != (unsigned long )((struct hlist_node *)0)) {
27872a27861,27862
>     if ((unsigned long )h->first != (unsigned long )((struct hlist_node *)0)) {
> #line 3713
27874c27864
< #line 3712
---
> #line 3713
27876c27866
< #line 3712
---
> #line 3713
27882c27872
< #line 3710
---
> #line 3711
27885,27886d27874
< #line 3710
<     if ((unsigned long )(mdev->ee_hash + (unsigned long )mdev->ee_hash_s) > (unsigned long )h) {
27887a27876,27877
>     if ((unsigned long )(mdev->ee_hash + (unsigned long )mdev->ee_hash_s) > (unsigned long )h) {
> #line 3712
27892,27893d27881
< #line 3714
<     kfree((void const   *)mdev->ee_hash);
27895c27883
<     mdev->ee_hash = 0;
---
>     kfree((void const   *)mdev->ee_hash);
27896a27885,27886
>     mdev->ee_hash = 0;
> #line 3717
27898c27888
< #line 3719
---
> #line 3720
27900c27890
< #line 3719
---
> #line 3720
27903,27904d27892
< #line 3720
<     if ((unsigned long )h->first != (unsigned long )((struct hlist_node *)0)) {
27905a27894,27895
>     if ((unsigned long )h->first != (unsigned long )((struct hlist_node *)0)) {
> #line 3722
27907c27897
< #line 3721
---
> #line 3722
27909c27899
< #line 3721
---
> #line 3722
27915c27905
< #line 3719
---
> #line 3720
27918,27919d27907
< #line 3719
<     if ((unsigned long )(mdev->tl_hash + (unsigned long )mdev->tl_hash_s) > (unsigned long )h) {
27920a27909,27910
>     if ((unsigned long )(mdev->tl_hash + (unsigned long )mdev->tl_hash_s) > (unsigned long )h) {
> #line 3721
27925,27926d27914
< #line 3723
<     kfree((void const   *)mdev->tl_hash);
27928c27916
<     mdev->tl_hash = 0;
---
>     kfree((void const   *)mdev->tl_hash);
27930c27918
<     mdev->tl_hash_s = 0U;
---
>     mdev->tl_hash = 0;
27931a27920,27921
>     mdev->tl_hash_s = 0U;
> #line 3727
27933,27934d27922
< #line 3728
<     crypto_free_hash(mdev->cram_hmac_tfm);
27935a27924,27925
>     crypto_free_hash(mdev->cram_hmac_tfm);
> #line 3730
27937,27938d27926
< #line 3731
<     kfree((void const   *)mdev->net_conf);
27940c27928
<     mdev->net_conf = 0;
---
>     kfree((void const   *)mdev->net_conf);
27941a27930,27931
>     mdev->net_conf = 0;
> #line 3734
27943c27933
< #line 3733
---
> #line 3734
27945c27935
< #line 3733
---
> #line 3734
27947c27937
< #line 3733
---
> #line 3734
27949c27939
< #line 3733
---
> #line 3734
27954c27944
< #line 3743
---
> #line 3744
27956,27957d27945
< #line 3743
<   i = (unsigned int )tmp___16;
27959c27947
<   if (i != 0U) {
---
>   i = (unsigned int )tmp___16;
27960a27949,27950
>   if (i != 0U) {
> #line 3746
27962c27952
< #line 3745
---
> #line 3746
27964c27954
< #line 3745
---
> #line 3746
27970c27960
< #line 3746
---
> #line 3747
27972,27973d27961
< #line 3746
<   i = (unsigned int )tmp___19;
27975c27963
<   if (i != 0U) {
---
>   i = (unsigned int )tmp___19;
27976a27965,27966
>   if (i != 0U) {
> #line 3749
27978c27968
< #line 3748
---
> #line 3749
27980c27970
< #line 3748
---
> #line 3749
27985c27975
< #line 3750
---
> #line 3751
27987c27977
< #line 3750
---
> #line 3751
27989c27979
< #line 3750
---
> #line 3751
27991c27981
< #line 3750
---
> #line 3751
27993c27983
< #line 3750
---
> #line 3751
27996c27986
<            3750);
---
>            3751);
28000c27990
< #line 3751
---
> #line 3752
28002c27992
< #line 3751
---
> #line 3752
28004c27994
< #line 3751
---
> #line 3752
28006c27996
< #line 3751
---
> #line 3752
28008c27998
< #line 3751
---
> #line 3752
28011c28001
<            3751);
---
>            3752);
28015c28005
< #line 3752
---
> #line 3753
28017c28007
< #line 3752
---
> #line 3753
28019c28009
< #line 3752
---
> #line 3753
28021c28011
< #line 3752
---
> #line 3753
28023c28013
< #line 3752
---
> #line 3753
28026c28016
<            3752);
---
>            3753);
28030c28020
< #line 3753
---
> #line 3754
28032c28022
< #line 3753
---
> #line 3754
28034c28024
< #line 3753
---
> #line 3754
28036c28026
< #line 3753
---
> #line 3754
28038c28028
< #line 3753
---
> #line 3754
28041c28031
<            3753);
---
>            3754);
28045,28046d28034
< #line 3756
<   atomic_set(& (mdev->current_epoch)->epoch_size, 0);
28047a28036,28037
>   atomic_set(& (mdev->current_epoch)->epoch_size, 0);
> #line 3758
28049c28039
< #line 3757
---
> #line 3758
28051c28041
< #line 3757
---
> #line 3758
28053c28043
< #line 3757
---
> #line 3758
28055c28045
< #line 3757
---
> #line 3758
28058c28048
<            3757);
---
>            3758);
28062c28052
< #line 3758
---
> #line 3759
28066c28056
< #line 3769 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3770 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
28076c28066
< #line 3772
---
> #line 3773
28078c28068
< #line 3775
---
> #line 3776
28080,28081d28069
< #line 3775
<   if (tmp___1 != 0) {
28082a28071,28072
>   if (tmp___1 != 0) {
> #line 3777
28084c28074
< #line 3776
---
> #line 3777
28086,28087d28075
< #line 3776
<     printk("<3>%s %s: interrupted during initial handshake\n", tmp___0, tmp);
28088a28077,28078
>     printk("<3>%s %s: interrupted during initial handshake\n", tmp___0, tmp);
> #line 3778
28093,28094d28082
< #line 3780
<   if ((unsigned long )mdev->data.socket == (unsigned long )((struct socket *)0)) {
28096c28084
<     ldv_mutex_unlock_45(& mdev->data.mutex);
---
>   if ((unsigned long )mdev->data.socket == (unsigned long )((struct socket *)0)) {
28097a28086,28087
>     ldv_mutex_unlock_45(& mdev->data.mutex);
> #line 3783
28102,28103d28091
< #line 3785
<   memset((void *)p, 0, 80UL);
28105c28093
<   p->protocol_min = 1442840576U;
---
>   memset((void *)p, 0, 80UL);
28107c28095
<   p->protocol_max = 1526726656U;
---
>   p->protocol_min = 1442840576U;
28108a28097,28098
>   p->protocol_max = 1526726656U;
> #line 3789
28111,28112d28100
< #line 3790
<   ldv_mutex_unlock_46(& mdev->data.mutex);
28113a28102,28103
>   ldv_mutex_unlock_46(& mdev->data.mutex);
> #line 3792
28117c28107
< #line 3801 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3802 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
28140,28141d28129
< #line 3804
<   p = & mdev->data.rbuf.handshake;
28142a28131,28132
>   p = & mdev->data.rbuf.handshake;
> #line 3806
28144,28145d28133
< #line 3809
<   rv = drbd_send_handshake(mdev);
28147c28135
<   if (rv == 0) {
---
>   rv = drbd_send_handshake(mdev);
28148a28137,28138
>   if (rv == 0) {
> #line 3812
28153,28154d28142
< #line 3813
<   rv = drbd_recv_header(mdev, & p->head);
28156c28144
<   if (rv == 0) {
---
>   rv = drbd_recv_header(mdev, & p->head);
28157a28146,28147
>   if (rv == 0) {
> #line 3816
28162,28163d28151
< #line 3817
<   if ((unsigned int )p->head.command != 65534U) {
28164a28153,28154
>   if ((unsigned int )p->head.command != 65534U) {
> #line 3819
28166c28156
< #line 3818
---
> #line 3819
28168c28158
< #line 3818
---
> #line 3819
28170c28160
< #line 3818
---
> #line 3819
28173c28163
< #line 3820
---
> #line 3821
28178,28179d28167
< #line 3823
<   if ((int )p->head.length != expect) {
28180a28169,28170
>   if ((int )p->head.length != expect) {
> #line 3825
28182c28172
< #line 3824
---
> #line 3825
28184c28174
< #line 3824
---
> #line 3825
28187c28177
< #line 3826
---
> #line 3827
28192c28182
< #line 3829
---
> #line 3830
28194,28195d28183
< #line 3831
<   if (rv != expect) {
28196a28185,28186
>   if (rv != expect) {
> #line 3833
28198c28188
< #line 3832
---
> #line 3833
28200c28190
< #line 3832
---
> #line 3833
28203c28193
< #line 3833
---
> #line 3834
28208c28198
< #line 3836
---
> #line 3837
28210,28211d28199
< #line 3836
<   p->protocol_min = tmp___6;
28212a28201,28202
>   p->protocol_min = tmp___6;
> #line 3838
28214,28215d28203
< #line 3837
<   p->protocol_max = tmp___7;
28217c28205
<   if (p->protocol_max == 0U) {
---
>   p->protocol_max = tmp___7;
28218a28207,28208
>   if (p->protocol_max == 0U) {
> #line 3840
28223c28213
< #line 3841
---
> #line 3842
28225c28215
< #line 3843
---
> #line 3844
28230c28220
< #line 3845
---
> #line 3846
28232c28222
< #line 3845
---
> #line 3846
28234c28224
< #line 3845
---
> #line 3846
28236c28226
< #line 3847
---
> #line 3848
28238c28228
< #line 3847
---
> #line 3848
28240c28230
< #line 3847
---
> #line 3848
28243c28233
< #line 3850
---
> #line 3851
28246c28236
< #line 3853
---
> #line 3854
28248c28238
< #line 3853
---
> #line 3854
28250c28240
< #line 3853
---
> #line 3854
28253c28243
< #line 3857
---
> #line 3858
28257c28247
< #line 3869 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3870 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
28305,28306d28294
< #line 3873
<   response = 0;
28308c28296
<   right_response = 0;
---
>   response = 0;
28309a28298,28299
>   right_response = 0;
> #line 3876
28311c28301
< #line 3877
---
> #line 3878
28313c28303
< #line 3877
---
> #line 3878
28315,28316d28304
< #line 3882
<   desc.tfm = mdev->cram_hmac_tfm;
28317a28306,28307
>   desc.tfm = mdev->cram_hmac_tfm;
> #line 3884
28319c28309
< #line 3885
---
> #line 3886
28322,28323d28311
< #line 3887
<   if (rv != 0) {
28324a28313,28314
>   if (rv != 0) {
> #line 3889
28326c28316
< #line 3888
---
> #line 3889
28328,28329d28317
< #line 3888
<     printk("<3>%s %s: crypto_hash_setkey() failed with %d\n", tmp___1, tmp___0, rv);
28331c28319
<     rv = 0;
---
>     printk("<3>%s %s: crypto_hash_setkey() failed with %d\n", tmp___1, tmp___0, rv);
28332a28321,28322
>     rv = 0;
> #line 3891
28337c28327
< #line 3893
---
> #line 3894
28339,28340d28328
< #line 3895
<   rv = drbd_send_cmd2(mdev, P_AUTH_CHALLENGE, (char *)(& my_challenge), 64UL);
28342c28330
<   if (rv == 0) {
---
>   rv = drbd_send_cmd2(mdev, P_AUTH_CHALLENGE, (char *)(& my_challenge), 64UL);
28343a28332,28333
>   if (rv == 0) {
> #line 3898
28348,28349d28337
< #line 3899
<   rv = drbd_recv_header(mdev, & p);
28351c28339
<   if (rv == 0) {
---
>   rv = drbd_recv_header(mdev, & p);
28352a28341,28342
>   if (rv == 0) {
> #line 3902
28357,28358d28346
< #line 3903
<   if ((unsigned int )p.command != 16U) {
28359a28348,28349
>   if ((unsigned int )p.command != 16U) {
> #line 3905
28361c28351
< #line 3904
---
> #line 3905
28363c28353
< #line 3904
---
> #line 3905
28365c28355
< #line 3904
---
> #line 3905
28368,28369d28357
< #line 3906
<     rv = 0;
28370a28359,28360
>     rv = 0;
> #line 3908
28375,28376d28364
< #line 3910
<   if ((unsigned int )p.length > 128U) {
28377a28366,28367
>   if ((unsigned int )p.length > 128U) {
> #line 3912
28379c28369
< #line 3911
---
> #line 3912
28381,28382d28370
< #line 3911
<     printk("<3>%s %s: expected AuthChallenge payload too big.\n", tmp___6, tmp___5);
28384c28372
<     rv = 0;
---
>     printk("<3>%s %s: expected AuthChallenge payload too big.\n", tmp___6, tmp___5);
28385a28374,28375
>     rv = 0;
> #line 3914
28390c28380
< #line 3916
---
> #line 3917
28392,28393d28381
< #line 3916
<   peers_ch = (char *)tmp___7;
28395c28383
<   if ((unsigned long )peers_ch == (unsigned long )((char *)0)) {
---
>   peers_ch = (char *)tmp___7;
28396a28385,28386
>   if ((unsigned long )peers_ch == (unsigned long )((char *)0)) {
> #line 3919
28398c28388
< #line 3918
---
> #line 3919
28400,28401d28389
< #line 3918
<     printk("<3>%s %s: kmalloc of peers_ch failed\n", tmp___9, tmp___8);
28403c28391
<     rv = 0;
---
>     printk("<3>%s %s: kmalloc of peers_ch failed\n", tmp___9, tmp___8);
28404a28393,28394
>     rv = 0;
> #line 3921
28409c28399
< #line 3923
---
> #line 3924
28411,28412d28400
< #line 3925
<   if ((int )p.length != rv) {
28413a28402,28403
>   if ((int )p.length != rv) {
> #line 3927
28415c28405
< #line 3926
---
> #line 3927
28417,28418d28406
< #line 3926
<     printk("<3>%s %s: short read AuthChallenge: l=%u\n", tmp___11, tmp___10, rv);
28420c28408
<     rv = 0;
---
>     printk("<3>%s %s: short read AuthChallenge: l=%u\n", tmp___11, tmp___10, rv);
28421a28410,28411
>     rv = 0;
> #line 3929
28426,28427d28415
< #line 3931
<   resp_size = crypto_hash_digestsize(mdev->cram_hmac_tfm);
28428a28417,28418
>   resp_size = crypto_hash_digestsize(mdev->cram_hmac_tfm);
> #line 3933
28430,28431d28419
< #line 3932
<   response = (char *)tmp___12;
28433c28421
<   if ((unsigned long )response == (unsigned long )((char *)0)) {
---
>   response = (char *)tmp___12;
28434a28423,28424
>   if ((unsigned long )response == (unsigned long )((char *)0)) {
> #line 3935
28436c28426
< #line 3934
---
> #line 3935
28438,28439d28427
< #line 3934
<     printk("<3>%s %s: kmalloc of response failed\n", tmp___14, tmp___13);
28441c28429
<     rv = 0;
---
>     printk("<3>%s %s: kmalloc of response failed\n", tmp___14, tmp___13);
28442a28431,28432
>     rv = 0;
> #line 3937
28447,28448d28436
< #line 3939
<   sg_init_table(& sg, 1U);
28449a28438,28439
>   sg_init_table(& sg, 1U);
> #line 3941
28451,28452d28440
< #line 3942
<   rv = crypto_hash_digest(& desc, & sg, sg.length, (u8 *)response);
28454c28442
<   if (rv != 0) {
---
>   rv = crypto_hash_digest(& desc, & sg, sg.length, (u8 *)response);
28455a28444,28445
>   if (rv != 0) {
> #line 3945
28457c28447
< #line 3944
---
> #line 3945
28459c28449
< #line 3944
---
> #line 3945
28462,28463d28451
< #line 3945
<     rv = 0;
28464a28453,28454
>     rv = 0;
> #line 3947
28469,28470d28458
< #line 3949
<   rv = drbd_send_cmd2(mdev, P_AUTH_RESPONSE, response, (size_t )resp_size);
28472c28460
<   if (rv == 0) {
---
>   rv = drbd_send_cmd2(mdev, P_AUTH_RESPONSE, response, (size_t )resp_size);
28473a28462,28463
>   if (rv == 0) {
> #line 3952
28478,28479d28467
< #line 3953
<   rv = drbd_recv_header(mdev, & p);
28481c28469
<   if (rv == 0) {
---
>   rv = drbd_recv_header(mdev, & p);
28482a28471,28472
>   if (rv == 0) {
> #line 3956
28487,28488d28476
< #line 3957
<   if ((unsigned int )p.command != 17U) {
28489a28478,28479
>   if ((unsigned int )p.command != 17U) {
> #line 3959
28491c28481
< #line 3958
---
> #line 3959
28493c28483
< #line 3958
---
> #line 3959
28495c28485
< #line 3958
---
> #line 3959
28498,28499d28487
< #line 3960
<     rv = 0;
28500a28489,28490
>     rv = 0;
> #line 3962
28505,28506d28494
< #line 3964
<   if ((unsigned int )p.length != resp_size) {
28507a28496,28497
>   if ((unsigned int )p.length != resp_size) {
> #line 3966
28509c28499
< #line 3965
---
> #line 3966
28511,28512d28500
< #line 3965
<     printk("<3>%s %s: expected AuthResponse payload of wrong size\n", tmp___21, tmp___20);
28514c28502
<     rv = 0;
---
>     printk("<3>%s %s: expected AuthResponse payload of wrong size\n", tmp___21, tmp___20);
28515a28504,28505
>     rv = 0;
> #line 3968
28520c28510
< #line 3970
---
> #line 3971
28522,28523d28511
< #line 3972
<   if ((unsigned int )rv != resp_size) {
28524a28513,28514
>   if ((unsigned int )rv != resp_size) {
> #line 3974
28526c28516
< #line 3973
---
> #line 3974
28528c28518
< #line 3973
---
> #line 3974
28531,28532d28520
< #line 3974
<     rv = 0;
28533a28522,28523
>     rv = 0;
> #line 3976
28538c28528
< #line 3978
---
> #line 3979
28540,28541d28529
< #line 3978
<   right_response = (char *)tmp___24;
28543c28531
<   if ((unsigned long )response == (unsigned long )((char *)0)) {
---
>   right_response = (char *)tmp___24;
28544a28533,28534
>   if ((unsigned long )response == (unsigned long )((char *)0)) {
> #line 3981
28546c28536
< #line 3980
---
> #line 3981
28548,28549d28537
< #line 3980
<     printk("<3>%s %s: kmalloc of right_response failed\n", tmp___26, tmp___25);
28551c28539
<     rv = 0;
---
>     printk("<3>%s %s: kmalloc of right_response failed\n", tmp___26, tmp___25);
28552a28541,28542
>     rv = 0;
> #line 3983
28557c28547
< #line 3985
---
> #line 3986
28559,28560d28548
< #line 3987
<   rv = crypto_hash_digest(& desc, & sg, sg.length, (u8 *)right_response);
28562c28550
<   if (rv != 0) {
---
>   rv = crypto_hash_digest(& desc, & sg, sg.length, (u8 *)right_response);
28563a28552,28553
>   if (rv != 0) {
> #line 3990
28565c28555
< #line 3989
---
> #line 3990
28567c28557
< #line 3989
---
> #line 3990
28570,28571d28559
< #line 3990
<     rv = 0;
28572a28561,28562
>     rv = 0;
> #line 3992
28577c28567
< #line 3994
---
> #line 3995
28579c28569
< #line 3994
---
> #line 3995
28581,28582d28570
< #line 3996
<   if (rv != 0) {
28583a28572,28573
>   if (rv != 0) {
> #line 3998
28585c28575
< #line 3997
---
> #line 3998
28587c28577
< #line 3997
---
> #line 3998
28594,28595d28583
< #line 4001
<   kfree((void const   *)peers_ch);
28597c28585
<   kfree((void const   *)response);
---
>   kfree((void const   *)peers_ch);
28598a28587,28588
>   kfree((void const   *)response);
> #line 4004
28600c28590
< #line 4005
---
> #line 4006
28604c28594
< #line 4009 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4010 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
28624,28625d28613
< #line 4011
<   mdev = thi->mdev;
28626a28615,28616
>   mdev = thi->mdev;
> #line 4013
28628c28618
< #line 4012
---
> #line 4013
28630c28620
< #line 4015
---
> #line 4016
28632c28622
< #line 4015
---
> #line 4016
28634c28624
< #line 4017
---
> #line 4018
28636c28626
< #line 4017
---
> #line 4018
28638c28628
< #line 4017
---
> #line 4018
28641,28642d28630
< #line 4020
<   h = drbd_connect(mdev);
28644c28632
<   if (h == 0) {
---
>   h = drbd_connect(mdev);
28646c28634
<     drbd_disconnect(mdev);
---
>   if (h == 0) {
28647a28636,28637
>     drbd_disconnect(mdev);
> #line 4024
28649,28650d28638
< #line 4023
<     tmp___3->state = 1L;
28651a28640,28641
>     tmp___3->state = 1L;
> #line 4025
28656,28657d28645
< #line 4026
<   if (h == -1) {
28658a28647,28648
>   if (h == -1) {
> #line 4028
28660c28650
< #line 4027
---
> #line 4028
28662,28663d28651
< #line 4027
<     printk("<4>%s %s: Discarding network configuration.\n", tmp___5, tmp___4);
28664a28653,28654
>     printk("<4>%s %s: Discarding network configuration.\n", tmp___5, tmp___4);
> #line 4029
28666c28656
< #line 4028
---
> #line 4029
28668c28658
< #line 4028
---
> #line 4029
28670c28660
< #line 4028
---
> #line 4029
28672c28662
< #line 4028
---
> #line 4029
28677,28678d28666
< #line 4030
<   if (h == 0) {
28679a28668,28669
>   if (h == 0) {
> #line 4032
28685,28686d28674
< #line 4032
<   if (h > 0) {
28687a28676,28677
>   if (h > 0) {
> #line 4034
28689,28690d28678
< #line 4033
<     if (tmp___6 != 0) {
28692c28680
<       drbdd(mdev);
---
>     if (tmp___6 != 0) {
28693a28682,28683
>       drbdd(mdev);
> #line 4036
28701c28691
< #line 4039
---
> #line 4040
28703c28693
< #line 4041
---
> #line 4042
28705c28695
< #line 4041
---
> #line 4042
28707,28708d28696
< #line 4041
<   printk("<6>%s %s: receiver terminated\n", tmp___8, tmp___7);
28709a28698,28699
>   printk("<6>%s %s: receiver terminated\n", tmp___8, tmp___7);
> #line 4043
28713c28703
< #line 4047 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4048 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
28724c28714
< #line 4049
---
> #line 4050
28726c28716
< #line 4051
---
> #line 4052
28728c28718
< #line 4051
---
> #line 4052
28730,28731d28719
< #line 4053
<   if (retcode > 0) {
28732a28721,28722
>   if (retcode > 0) {
> #line 4055
28735,28736d28724
< #line 4056
<     set_bit(11U, (unsigned long volatile   *)(& mdev->flags));
28737a28726,28727
>     set_bit(11U, (unsigned long volatile   *)(& mdev->flags));
> #line 4058
28739c28729
< #line 4057
---
> #line 4058
28741c28731
< #line 4057
---
> #line 4058
28743c28733
< #line 4057
---
> #line 4058
28747c28737
< #line 4060
---
> #line 4061
28749c28739
< #line 4062
---
> #line 4063
28753c28743
< #line 4065 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4066 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
28759c28749
< #line 4067
---
> #line 4068
28761c28751
< #line 4067
---
> #line 4068
28765c28755
< #line 4071 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4072 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
28771c28761
< #line 4074
---
> #line 4075
28773c28763
< #line 4076
---
> #line 4077
28777c28767
< #line 4079 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4080 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
28794,28795d28783
< #line 4081
<   p = (struct p_block_ack *)h;
28796a28785,28786
>   p = (struct p_block_ack *)h;
> #line 4083
28798,28799d28787
< #line 4082
<   sector = (sector_t )tmp;
28800a28789,28790
>   sector = (sector_t )tmp;
> #line 4084
28802c28792
< #line 4083
---
> #line 4084
28804c28794
< #line 4085
---
> #line 4086
28806c28796
< #line 4085
---
> #line 4086
28808c28798
< #line 4085
---
> #line 4086
28810c28800
< #line 4085
---
> #line 4086
28813c28803
<            4085);
---
>            4086);
28817c28807
< #line 4087
---
> #line 4088
28819c28809
< #line 4087
---
> #line 4088
28821,28822d28810
< #line 4089
<   drbd_rs_complete_io(mdev, sector);
28823a28812,28813
>   drbd_rs_complete_io(mdev, sector);
> #line 4091
28825,28827c28815
<                      4090U);
< #line 4092
<   mdev->rs_same_csum = mdev->rs_same_csum + (unsigned long )(blksize >> 12);
---
>                      4091U);
28828a28817,28818
>   mdev->rs_same_csum = mdev->rs_same_csum + (unsigned long )(blksize >> 12);
> #line 4094
28830c28820
< #line 4093
---
> #line 4094
28832c28822
< #line 4093
---
> #line 4094
28834c28824
< #line 4093
---
> #line 4094
28836c28826
< #line 4093
---
> #line 4094
28838c28828
< #line 4093
---
> #line 4094
28840c28830
< #line 4093
---
> #line 4094
28842c28832
<            4093, tmp___4);
---
>            4094, tmp___4);
28846c28836
< #line 4095
---
> #line 4096
28850c28840
< #line 4100 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4101 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
28864c28854
< #line 4103
---
> #line 4104
28866c28856
< #line 4103
---
> #line 4104
28868c28858
< #line 4107
---
> #line 4108
28870c28860
< #line 4107
---
> #line 4108
28873,28874d28862
< #line 4108
<   if ((unsigned long )req == (unsigned long )id) {
28876c28864
<     if (req->sector != sector) {
---
>   if ((unsigned long )req == (unsigned long )id) {
28877a28866,28867
>     if (req->sector != sector) {
> #line 4111
28879c28869
< #line 4110
---
> #line 4111
28881c28871
< #line 4110
---
> #line 4111
28884c28874
< #line 4114
---
> #line 4115
28889c28879
< #line 4116
---
> #line 4117
28894c28884
< #line 4107
---
> #line 4108
28897c28887
< #line 4107
---
> #line 4108
28899c28889
< #line 4107
---
> #line 4108
28901c28891
< #line 4107
---
> #line 4108
28903c28893
< #line 4107
---
> #line 4108
28905c28895
< #line 4107
---
> #line 4108
28907,28908d28896
< #line 4107
<       if (1 != 0) {
28909a28898,28899
>       if (1 != 0) {
> #line 4109
28912c28902
< #line 4110
---
> #line 4111
28916c28906
< #line 4110
---
> #line 4111
28923c28913
< #line 4119
---
> #line 4120
28925c28915
< #line 4119
---
> #line 4120
28927c28917
< #line 4119
---
> #line 4120
28930c28920
< #line 4121
---
> #line 4122
28934c28924
< #line 4127 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4128 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
28946,28947d28935
< #line 4134
<   spin_lock_irq(& mdev->req_lock);
28949c28937
<   req = (*validator)(mdev, id, sector);
---
>   spin_lock_irq(& mdev->req_lock);
28950a28939,28940
>   req = (*validator)(mdev, id, sector);
> #line 4137
28953,28954d28942
< #line 4136
<   if (tmp___1 != 0L) {
28956c28944
<     spin_unlock_irq(& mdev->req_lock);
---
>   if (tmp___1 != 0L) {
28957a28946,28947
>     spin_unlock_irq(& mdev->req_lock);
> #line 4139
28959c28949
< #line 4138
---
> #line 4139
28961,28962d28950
< #line 4138
<     printk("<3>%s %s: %s: got a corrupt block_id/sector pair\n", tmp___0, tmp, func);
28963a28952,28953
>     printk("<3>%s %s: %s: got a corrupt block_id/sector pair\n", tmp___0, tmp, func);
> #line 4140
28968,28969d28957
< #line 4141
<   __req_mod(req, what, & m);
28970a28959,28960
>   __req_mod(req, what, & m);
> #line 4143
28972,28973d28961
< #line 4144
<   if ((unsigned long )m.bio != (unsigned long )((struct bio *)0)) {
28974a28963,28964
>   if ((unsigned long )m.bio != (unsigned long )((struct bio *)0)) {
> #line 4146
28979c28969
< #line 4146
---
> #line 4147
28983c28973
< #line 4149 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4150 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
29011,29012d29000
< #line 4151
<   p = (struct p_block_ack *)h;
29013a29002,29003
>   p = (struct p_block_ack *)h;
> #line 4153
29015,29016d29004
< #line 4152
<   sector = (sector_t )tmp;
29017a29006,29007
>   sector = (sector_t )tmp;
> #line 4154
29019c29009
< #line 4153
---
> #line 4154
29021c29011
< #line 4156
---
> #line 4157
29023c29013
< #line 4156
---
> #line 4157
29025,29026d29014
< #line 4158
<   if (p->block_id == 0xffffffffffffffffULL) {
29028,29029c29016
<     __drbd_set_in_sync(mdev, sector, blksize, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<                        4159U);
---
>   if (p->block_id == 0xffffffffffffffffULL) {
29030a29018,29020
>     __drbd_set_in_sync(mdev, sector, blksize, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>                        4160U);
> #line 4161
29032c29022
< #line 4160
---
> #line 4161
29034c29024
< #line 4160
---
> #line 4161
29036c29026
< #line 4160
---
> #line 4161
29038c29028
< #line 4160
---
> #line 4161
29040c29030
< #line 4160
---
> #line 4161
29042c29032
< #line 4160
---
> #line 4161
29044c29034
<              "got_BlockAck", 4160, tmp___2);
---
>              "got_BlockAck", 4161, tmp___2);
29048c29038
< #line 4161
---
> #line 4162
29053c29043
< #line 4163
---
> #line 4164
29055c29045
< #line 4163
---
> #line 4164
29058c29048
< #line 4165
---
> #line 4166
29060c29050
< #line 4165
---
> #line 4166
29062c29052
< #line 4165
---
> #line 4166
29064c29054
< #line 4165
---
> #line 4166
29067c29057
<            4165);
---
>            4166);
29071,29072d29060
< #line 4166
<   what = write_acked_by_peer_and_sis;
29073a29062,29063
>   what = write_acked_by_peer_and_sis;
> #line 4168
29076c29066
< #line 4169
---
> #line 4170
29078c29068
< #line 4169
---
> #line 4170
29080c29070
< #line 4169
---
> #line 4170
29082c29072
< #line 4169
---
> #line 4170
29085c29075
<            4169);
---
>            4170);
29089,29090d29078
< #line 4170
<   what = write_acked_by_peer;
29091a29080,29081
>   what = write_acked_by_peer;
> #line 4172
29094c29084
< #line 4173
---
> #line 4174
29096c29086
< #line 4173
---
> #line 4174
29098c29088
< #line 4173
---
> #line 4174
29100c29090
< #line 4173
---
> #line 4174
29103c29093
<            4173);
---
>            4174);
29107,29108d29096
< #line 4174
<   what = recv_acked_by_peer;
29109a29098,29099
>   what = recv_acked_by_peer;
> #line 4176
29112c29102
< #line 4177
---
> #line 4178
29114c29104
< #line 4177
---
> #line 4178
29116c29106
< #line 4177
---
> #line 4178
29118c29108
< #line 4177
---
> #line 4178
29121c29111
<            4177);
---
>            4178);
29125,29126d29114
< #line 4178
<   what = conflict_discarded_by_peer;
29127a29116,29117
>   what = conflict_discarded_by_peer;
> #line 4180
29130c29120
< #line 4181
---
> #line 4182
29132c29122
< #line 4181
---
> #line 4182
29134,29136d29123
< #line 4181
<   printk("<3>%s %s: ASSERT( 0 ) in %s:%d\n", tmp___16, tmp___15, (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<          4181);
29137a29125,29127
>   printk("<3>%s %s: ASSERT( 0 ) in %s:%d\n", tmp___16, tmp___15, (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>          4182);
> #line 4183
29141c29131
< #line 4185
---
> #line 4186
29144c29134
< #line 4185
---
> #line 4186
29148c29138
< #line 4189 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4190 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
29167,29168d29156
< #line 4191
<   p = (struct p_block_ack *)h;
29169a29158,29159
>   p = (struct p_block_ack *)h;
> #line 4193
29171c29161
< #line 4192
---
> #line 4193
29173c29163
< #line 4194
---
> #line 4195
29175,29176d29164
< #line 4194
<   if (tmp___2 != 0) {
29177a29166,29167
>   if (tmp___2 != 0) {
> #line 4196
29179c29169
< #line 4195
---
> #line 4196
29181c29171
< #line 4195
---
> #line 4196
29186c29176
< #line 4197
---
> #line 4198
29188c29178
< #line 4197
---
> #line 4198
29190,29191d29179
< #line 4199
<   if (p->block_id == 0xffffffffffffffffULL) {
29192a29181,29182
>   if (p->block_id == 0xffffffffffffffffULL) {
> #line 4201
29194,29195d29183
< #line 4200
<     size = (int )tmp___4;
29196a29185,29186
>     size = (int )tmp___4;
> #line 4202
29198c29188
< #line 4201
---
> #line 4202
29200c29190
< #line 4201
---
> #line 4202
29202c29192
< #line 4201
---
> #line 4202
29204c29194
< #line 4201
---
> #line 4202
29206c29196
< #line 4201
---
> #line 4202
29208c29198
< #line 4201
---
> #line 4202
29210c29200
<              "got_NegAck", 4201, tmp___5);
---
>              "got_NegAck", 4202, tmp___5);
29214,29215d29203
< #line 4202
<     drbd_rs_failed_io(mdev, sector, size);
29216a29205,29206
>     drbd_rs_failed_io(mdev, sector, size);
> #line 4204
29221c29211
< #line 4205
---
> #line 4206
29224c29214
< #line 4205
---
> #line 4206
29228c29218
< #line 4209 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4210 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
29241,29242d29230
< #line 4211
<   p = (struct p_block_ack *)h;
29243a29232,29233
>   p = (struct p_block_ack *)h;
> #line 4213
29245c29235
< #line 4212
---
> #line 4213
29247c29237
< #line 4214
---
> #line 4215
29249,29250d29238
< #line 4214
<   update_peer_seq(mdev, tmp___0);
29251a29240,29241
>   update_peer_seq(mdev, tmp___0);
> #line 4216
29253c29243
< #line 4215
---
> #line 4216
29255c29245
< #line 4215
---
> #line 4216
29257c29247
< #line 4215
---
> #line 4216
29260c29250
< #line 4218
---
> #line 4219
29263c29253
< #line 4218
---
> #line 4219
29267c29257
< #line 4222 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4223 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
29285c29275
< #line 4226
---
> #line 4227
29287c29277
< #line 4228
---
> #line 4229
29289,29290d29278
< #line 4228
<   sector = (sector_t )tmp;
29291a29280,29281
>   sector = (sector_t )tmp;
> #line 4230
29293,29294d29282
< #line 4229
<   size = (int )tmp___0;
29295a29284,29285
>   size = (int )tmp___0;
> #line 4231
29297c29287
< #line 4230
---
> #line 4231
29299c29289
< #line 4230
---
> #line 4231
29301c29291
< #line 4230
---
> #line 4231
29304c29294
<            4230);
---
>            4231);
29308c29298
< #line 4232
---
> #line 4233
29310c29300
< #line 4232
---
> #line 4233
29312c29302
< #line 4234
---
> #line 4235
29314c29304
< #line 4234
---
> #line 4235
29316c29306
< #line 4234
---
> #line 4235
29318c29308
< #line 4234
---
> #line 4235
29320c29310
< #line 4234
---
> #line 4235
29322c29312
< #line 4234
---
> #line 4235
29324c29314
< #line 4234
---
> #line 4235
29326c29316
<            4234, tmp___4);
---
>            4235, tmp___4);
29330c29320
< #line 4236
---
> #line 4237
29332,29333d29321
< #line 4236
<   if (tmp___8 != 0) {
29335c29323
<     drbd_rs_complete_io(mdev, sector);
---
>   if (tmp___8 != 0) {
29337c29325
<     drbd_rs_failed_io(mdev, sector, size);
---
>     drbd_rs_complete_io(mdev, sector);
29338a29327,29328
>     drbd_rs_failed_io(mdev, sector, size);
> #line 4240
29343c29333
< #line 4242
---
> #line 4243
29347c29337
< #line 4245 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4246 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
29354c29344
< #line 4247
---
> #line 4248
29356c29346
< #line 4249
---
> #line 4250
29358c29348
< #line 4249
---
> #line 4250
29360c29350
< #line 4251
---
> #line 4252
29364c29354
< #line 4254 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4255 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
29384c29374
< #line 4256
---
> #line 4257
29386c29376
< #line 4261
---
> #line 4262
29388,29389d29377
< #line 4261
<   sector = (sector_t )tmp;
29390a29379,29380
>   sector = (sector_t )tmp;
> #line 4263
29392c29382
< #line 4262
---
> #line 4263
29394c29384
< #line 4264
---
> #line 4265
29396c29386
< #line 4264
---
> #line 4265
29398c29388
< #line 4266
---
> #line 4267
29400,29401d29389
< #line 4266
<   if (tmp___2 == 4712ULL) {
29402a29391,29392
>   if (tmp___2 == 4712ULL) {
> #line 4268
29405c29395
< #line 4269
---
> #line 4270
29408,29409d29397
< #line 4271
<   drbd_rs_complete_io(mdev, sector);
29410a29399,29400
>   drbd_rs_complete_io(mdev, sector);
> #line 4273
29412c29402
< #line 4272
---
> #line 4273
29414c29404
< #line 4272
---
> #line 4273
29416c29406
< #line 4272
---
> #line 4273
29418c29408
< #line 4272
---
> #line 4273
29420c29410
< #line 4272
---
> #line 4273
29422c29412
< #line 4272
---
> #line 4273
29424c29414
<            4272, tmp___3);
---
>            4273, tmp___3);
29428c29418
< #line 4274
---
> #line 4275
29430,29431d29419
< #line 4274
<   if (mdev->ov_left == 0UL) {
29432a29421,29422
>   if (mdev->ov_left == 0UL) {
> #line 4276
29434,29435d29423
< #line 4275
<     w = (struct drbd_work *)tmp___7;
29437c29425
<     if ((unsigned long )w != (unsigned long )((struct drbd_work *)0)) {
---
>     w = (struct drbd_work *)tmp___7;
29439c29427
<       w->cb = & w_ov_finished;
---
>     if ((unsigned long )w != (unsigned long )((struct drbd_work *)0)) {
29440a29429,29430
>       w->cb = & w_ov_finished;
> #line 4279
29443c29433
< #line 4280
---
> #line 4281
29445c29435
< #line 4280
---
> #line 4281
29447,29448d29436
< #line 4280
<       printk("<3>%s %s: kmalloc(w) failed.", tmp___9, tmp___8);
29450c29438
<       ov_oos_print(mdev);
---
>       printk("<3>%s %s: kmalloc(w) failed.", tmp___9, tmp___8);
29451a29440,29441
>       ov_oos_print(mdev);
> #line 4283
29457c29447
< #line 4285
---
> #line 4286
29461c29451
< #line 4293 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4294 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
29467c29457
< #line 4295
---
> #line 4296
29469c29459
< #line 4295
---
> #line 4296
29471c29461
< #line 4295
---
> #line 4296
29473c29463
< #line 4295
---
> #line 4296
29475c29465
< #line 4295
---
> #line 4296
29477c29467
< #line 4295
---
> #line 4296
29479c29469
< #line 4295
---
> #line 4296
29481c29471
< #line 4295
---
> #line 4296
29483c29473
< #line 4295
---
> #line 4296
29485c29475
< #line 4295
---
> #line 4296
29487c29477
< #line 4295
---
> #line 4296
29489c29479
< #line 4295
---
> #line 4296
29491c29481
< #line 4295
---
> #line 4296
29493c29483
< #line 4295
---
> #line 4296
29495c29485
< #line 4295
---
> #line 4296
29497c29487
< #line 4295
---
> #line 4296
29499c29489
< #line 4295
---
> #line 4296
29501c29491
< #line 4295
---
> #line 4296
29503c29493
< #line 4295
---
> #line 4296
29505c29495
< #line 4295
---
> #line 4296
29507c29497
< #line 4295
---
> #line 4296
29509c29499
< #line 4295
---
> #line 4296
29511c29501
< #line 4295
---
> #line 4296
29513c29503
< #line 4295
---
> #line 4296
29515c29505
< #line 4295
---
> #line 4296
29517c29507
< #line 4295
---
> #line 4296
29519c29509
< #line 4295
---
> #line 4296
29521c29511
< #line 4295
---
> #line 4296
29523c29513
< #line 4295
---
> #line 4296
29525c29515
< #line 4295
---
> #line 4296
29527c29517
< #line 4295
---
> #line 4296
29529c29519
< #line 4295
---
> #line 4296
29531c29521
< #line 4295
---
> #line 4296
29533c29523
< #line 4295
---
> #line 4296
29535c29525
< #line 4295
---
> #line 4296
29537c29527
< #line 4295
---
> #line 4296
29539c29529
< #line 4295
---
> #line 4296
29541c29531
< #line 4295
---
> #line 4296
29543c29533
< #line 4295
---
> #line 4296
29545c29535
< #line 4295
---
> #line 4296
29547c29537
< #line 4295
---
> #line 4296
29549c29539
< #line 4295
---
> #line 4296
29551c29541
< #line 4295
---
> #line 4296
29553c29543
< #line 4295
---
> #line 4296
29555c29545
< #line 4295
---
> #line 4296
29557c29547
< #line 4295
---
> #line 4296
29559c29549
< #line 4295
---
> #line 4296
29561c29551
< #line 4295
---
> #line 4296
29563c29553
< #line 4295
---
> #line 4296
29565c29555
< #line 4295
---
> #line 4296
29567c29557
< #line 4295
---
> #line 4296
29569c29559
< #line 4295
---
> #line 4296
29571c29561
< #line 4295
---
> #line 4296
29573c29563
< #line 4295
---
> #line 4296
29575c29565
< #line 4295
---
> #line 4296
29577c29567
< #line 4295
---
> #line 4296
29579c29569
< #line 4295
---
> #line 4296
29581c29571
< #line 4295
---
> #line 4296
29583c29573
< #line 4295
---
> #line 4296
29585c29575
< #line 4295
---
> #line 4296
29587c29577
< #line 4295
---
> #line 4296
29589c29579
< #line 4295
---
> #line 4296
29591c29581
< #line 4295
---
> #line 4296
29593c29583
< #line 4295
---
> #line 4296
29595c29585
< #line 4295
---
> #line 4296
29597c29587
< #line 4295
---
> #line 4296
29599c29589
< #line 4295
---
> #line 4296
29601c29591
< #line 4295
---
> #line 4296
29603c29593
< #line 4295
---
> #line 4296
29605c29595
< #line 4295
---
> #line 4296
29607c29597
< #line 4295
---
> #line 4296
29609c29599
< #line 4295
---
> #line 4296
29611c29601
< #line 4295
---
> #line 4296
29613c29603
< #line 4295
---
> #line 4296
29615c29605
< #line 4295
---
> #line 4296
29617c29607
< #line 4295
---
> #line 4296
29619c29609
< #line 4314
---
> #line 4315
29622c29612
< #line 4315
---
> #line 4316
29627c29617
< #line 4316
---
> #line 4317
29631c29621
< #line 4319 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4320 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
29694,29695d29683
< #line 4321
<   mdev = thi->mdev;
29697c29685
<   h = & mdev->meta.rbuf.header;
---
>   mdev = thi->mdev;
29698a29687,29688
>   h = & mdev->meta.rbuf.header;
> #line 4324
29700,29701d29689
< #line 4326
<   buf = (void *)h;
29703c29691
<   received = 0;
---
>   buf = (void *)h;
29704a29693,29694
>   received = 0;
> #line 4329
29706c29696
< #line 4331
---
> #line 4332
29708c29698
< #line 4331
---
> #line 4332
29710c29700
< #line 4331
---
> #line 4332
29712c29702
< #line 4333
---
> #line 4334
29714,29715d29703
< #line 4333
<   tmp___1->policy = 2U;
29716a29705,29706
>   tmp___1->policy = 2U;
> #line 4335
29718c29708
< #line 4334
---
> #line 4335
29720c29710
< #line 4336
---
> #line 4337
29723,29724d29712
< #line 4337
<   drbd_thread_current_set_cpu(mdev);
29725a29714,29715
>   drbd_thread_current_set_cpu(mdev);
> #line 4339
29727,29728d29716
< #line 4338
<   if (tmp___6 != 0) {
29729a29718,29719
>   if (tmp___6 != 0) {
> #line 4340
29731c29721
< #line 4339
---
> #line 4340
29733c29723
< #line 4339
---
> #line 4340
29735c29725
< #line 4339
---
> #line 4340
29737c29727
< #line 4339
---
> #line 4340
29739c29729
< #line 4339
---
> #line 4340
29742c29732
<              4339);
---
>              4340);
29746c29736
< #line 4339
---
> #line 4340
29748c29738
< #line 4339
---
> #line 4340
29753c29743
< #line 4340
---
> #line 4341
29758c29748
< #line 4346
---
> #line 4347
29760c29750
< #line 4346
---
> #line 4347
29762c29752
< #line 4346
---
> #line 4347
29764c29754
< #line 4348
---
> #line 4349
29773,29774d29762
< #line 4350
<   clear_bit(1, (unsigned long volatile   *)(& mdev->flags));
29775a29764,29765
>   clear_bit(1, (unsigned long volatile   *)(& mdev->flags));
> #line 4352
29777,29778d29766
< #line 4351
<   flush_signals(tmp___8);
29779a29768,29769
>   flush_signals(tmp___8);
> #line 4353
29781,29782d29770
< #line 4352
<   if (tmp___11 == 0) {
29783a29772,29773
>   if (tmp___11 == 0) {
> #line 4354
29785c29775
< #line 4353
---
> #line 4354
29787,29788d29776
< #line 4353
<     printk("<3>%s %s: process_done_ee() = NOT_OK\n", tmp___10, tmp___9);
29789a29778,29779
>     printk("<3>%s %s: process_done_ee() = NOT_OK\n", tmp___10, tmp___9);
> #line 4355
29794,29795d29783
< #line 4357
<   set_bit(1U, (unsigned long volatile   *)(& mdev->flags));
29797c29785
<   spin_lock_irq(& mdev->req_lock);
---
>   set_bit(1U, (unsigned long volatile   *)(& mdev->flags));
29799c29787
<   empty = list_empty((struct list_head  const  *)(& mdev->done_ee));
---
>   spin_lock_irq(& mdev->req_lock);
29800a29789,29790
>   empty = list_empty((struct list_head  const  *)(& mdev->done_ee));
> #line 4361
29802,29803d29791
< #line 4364
<   if (empty != 0) {
29804a29793,29794
>   if (empty != 0) {
> #line 4366
29809c29799
< #line 4366
---
> #line 4367
29812,29813d29801
< #line 4368
<   if ((unsigned int )*((unsigned char *)mdev->net_conf + 528UL) == 0U) {
29814a29803,29804
>   if ((unsigned int )*((unsigned char *)mdev->net_conf + 528UL) == 0U) {
> #line 4370
29819c29809
< #line 4372
---
> #line 4373
29821c29811
< #line 4372
---
> #line 4373
29823,29824d29812
< #line 4372
<   if (tmp___13 != 0) {
29825a29814,29815
>   if (tmp___13 != 0) {
> #line 4374
29830c29820
< #line 4375
---
> #line 4376
29833c29823
< #line 4377
---
> #line 4378
29835c29825
< #line 4379
---
> #line 4380
29837c29827
< #line 4379
---
> #line 4380
29839c29829
< #line 4391
---
> #line 4392
29841,29842d29830
< #line 4391
<   if (tmp___21 != 0L) {
29844c29832
<     received = received + rv;
---
>   if (tmp___21 != 0L) {
29845a29834,29835
>     received = received + rv;
> #line 4394
29848,29849d29837
< #line 4394
<   if (rv == 0) {
29850a29839,29840
>   if (rv == 0) {
> #line 4396
29852c29842
< #line 4395
---
> #line 4396
29854,29855d29843
< #line 4395
<     printk("<3>%s %s: meta connection shut down by peer.\n", tmp___16, tmp___15);
29856a29845,29846
>     printk("<3>%s %s: meta connection shut down by peer.\n", tmp___16, tmp___15);
> #line 4397
29859,29860d29848
< #line 4397
<   if (rv == -11) {
29861a29850,29851
>   if (rv == -11) {
> #line 4399
29863c29853
< #line 4400
---
> #line 4401
29865c29855
< #line 4400
---
> #line 4401
29867,29868d29856
< #line 4400
<       printk("<3>%s %s: PingAck did not arrive in time.\n", tmp___18, tmp___17);
29869a29858,29859
>       printk("<3>%s %s: PingAck did not arrive in time.\n", tmp___18, tmp___17);
> #line 4402
29874,29875d29863
< #line 4403
<     set_bit(2U, (unsigned long volatile   *)(& mdev->flags));
29876a29865,29866
>     set_bit(2U, (unsigned long volatile   *)(& mdev->flags));
> #line 4405
29879,29880d29868
< #line 4405
<   if (rv == -4) {
29881a29870,29871
>   if (rv == -4) {
> #line 4407
29884c29874
< #line 4408
---
> #line 4409
29886c29876
< #line 4408
---
> #line 4409
29888,29889d29877
< #line 4408
<     printk("<3>%s %s: sock_recvmsg returned %d\n", tmp___20, tmp___19, rv);
29890a29879,29880
>     printk("<3>%s %s: sock_recvmsg returned %d\n", tmp___20, tmp___19, rv);
> #line 4410
29893,29894d29882
< #line 4412
<   if (received == expect && (unsigned long )cmd == (unsigned long )((struct asender_cmd *)0)) {
29895a29884,29885
>   if (received == expect && (unsigned long )cmd == (unsigned long )((struct asender_cmd *)0)) {
> #line 4414
29897,29898d29886
< #line 4413
<     if (tmp___25 != 0L) {
29899a29888,29889
>     if (tmp___25 != 0L) {
> #line 4415
29901c29891
< #line 4414
---
> #line 4415
29903c29893
< #line 4414
---
> #line 4415
29905c29895
< #line 4414
---
> #line 4415
29908c29898
< #line 4417
---
> #line 4418
29913c29903
< #line 4419
---
> #line 4420
29915,29916d29904
< #line 4419
<     cmd = get_asender_cmd((int )tmp___26);
29917a29906,29907
>     cmd = get_asender_cmd((int )tmp___26);
> #line 4421
29919,29920d29908
< #line 4420
<     len = (int )tmp___27;
29921a29910,29911
>     len = (int )tmp___27;
> #line 4422
29924,29925d29913
< #line 4421
<     if (tmp___31 != 0L) {
29926a29915,29916
>     if (tmp___31 != 0L) {
> #line 4423
29928c29918
< #line 4422
---
> #line 4423
29930c29920
< #line 4422
---
> #line 4423
29932c29922
< #line 4422
---
> #line 4423
29935c29925
< #line 4425
---
> #line 4426
29940,29941d29929
< #line 4427
<     expect = (int )cmd->pkt_size;
29942a29931,29932
>     expect = (int )cmd->pkt_size;
> #line 4429
29944c29934
< #line 4428
---
> #line 4429
29946c29936
< #line 4428
---
> #line 4429
29948c29938
< #line 4428
---
> #line 4429
29950c29940
< #line 4428
---
> #line 4429
29953c29943
<              4428);
---
>              4429);
29957,29958d29946
< #line 4428
<     if (_b___0 != 0) {
29959a29948,29949
>     if (_b___0 != 0) {
> #line 4430
29967,29968d29956
< #line 4431
<   if (received == expect) {
29969a29958,29959
>   if (received == expect) {
> #line 4433
29971c29961
< #line 4432
---
> #line 4433
29973c29963
< #line 4432
---
> #line 4433
29975c29965
< #line 4432
---
> #line 4433
29977c29967
<              4432);
---
>              4433);
29981c29971
< #line 4433
---
> #line 4434
29983,29984d29972
< #line 4433
<     if (tmp___36 == 0) {
29985a29974,29975
>     if (tmp___36 == 0) {
> #line 4435
29990,29991d29979
< #line 4436
<     buf = (void *)h;
29993c29981
<     received = 0;
---
>     buf = (void *)h;
29995c29983
<     expect = 8;
---
>     received = 0;
29996a29985,29986
>     expect = 8;
> #line 4440
30002c29992
< #line 4336
---
> #line 4337
30004,30005d29993
< #line 4336
<   if ((unsigned int )tmp___37 == 1U) {
30006a29995,29996
>   if ((unsigned int )tmp___37 == 1U) {
> #line 4338
30012c30002
< #line 4443
---
> #line 4444
30015c30005
< #line 4445
---
> #line 4446
30017c30007
< #line 4445
---
> #line 4446
30019c30009
< #line 4445
---
> #line 4446
30021c30011
< #line 4445
---
> #line 4446
30023c30013
< #line 4445
---
> #line 4446
30028c30018
< #line 4447
---
> #line 4448
30031c30021
< #line 4449
---
> #line 4450
30033c30023
< #line 4449
---
> #line 4450
30035c30025
< #line 4449
---
> #line 4450
30037c30027
< #line 4449
---
> #line 4450
30039c30029
< #line 4449
---
> #line 4450
30044c30034
< #line 4451
---
> #line 4452
30046c30036
< #line 4453
---
> #line 4454
30048c30038
< #line 4453
---
> #line 4454
30050c30040
< #line 4453
---
> #line 4454
30052c30042
< #line 4453
---
> #line 4454
30055c30045
<            4453);
---
>            4454);
30059c30049
< #line 4454
---
> #line 4455
30061c30051
< #line 4454
---
> #line 4455
30063c30053
< #line 4454
---
> #line 4455
30065c30055
< #line 4456
---
> #line 4457
30069c30059
< #line 4496 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4497 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
30076c30066
< #line 4508
---
> #line 4509
30078c30068
< #line 4517
---
> #line 4518
30080c30070
< #line 4519
---
> #line 4520
30083c30073
< #line 4522
---
> #line 4523
30085c30075
< #line 4522
---
> #line 4523
30088c30078
< #line 4524
---
> #line 4525
30093c30083
< #line 4519
---
> #line 4520
30095,30096d30084
< #line 4519
<   if (tmp___0 != 0) {
30097a30086,30087
>   if (tmp___0 != 0) {
> #line 4521
30104c30094
< #line 4533
---
> #line 4534
30106c30096
< #line 4536
---
> #line 4537
30110c30100
< #line 4540 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4541 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
30116c30106
< #line 4545
---
> #line 4546
30118,30119d30107
< #line 4547
<   mutex_lock(ldv_func_arg1);
30120a30109,30110
>   mutex_lock(ldv_func_arg1);
> #line 4549
30124c30114
< #line 4550 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4551 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
30130c30120
< #line 4555
---
> #line 4556
30132,30133d30121
< #line 4557
<   mutex_unlock(ldv_func_arg1);
30134a30123,30124
>   mutex_unlock(ldv_func_arg1);
> #line 4559
30138c30128
< #line 4560 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4561 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
30144c30134
< #line 4565
---
> #line 4566
30146,30147d30135
< #line 4567
<   mutex_unlock(ldv_func_arg1);
30148a30137,30138
>   mutex_unlock(ldv_func_arg1);
> #line 4569
30152c30142
< #line 4570 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4571 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
30158c30148
< #line 4575
---
> #line 4576
30160,30161d30149
< #line 4577
<   mutex_lock(ldv_func_arg1);
30162a30151,30152
>   mutex_lock(ldv_func_arg1);
> #line 4579
30166c30156
< #line 4580 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4581 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
30172c30162
< #line 4585
---
> #line 4586
30174,30175d30163
< #line 4587
<   mutex_unlock(ldv_func_arg1);
30176a30165,30166
>   mutex_unlock(ldv_func_arg1);
> #line 4589
30180c30170
< #line 4590 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4591 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
30188c30178
< #line 4595
---
> #line 4596
30190c30180
< #line 4595
---
> #line 4596
30192c30182
< #line 4597
---
> #line 4598
30194c30184
< #line 4597
---
> #line 4598
30196c30186
< #line 4599
---
> #line 4600
30200c30190
< #line 4602 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4603 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
30206c30196
< #line 4607
---
> #line 4608
30208,30209d30197
< #line 4609
<   mutex_unlock(ldv_func_arg1);
30210a30199,30200
>   mutex_unlock(ldv_func_arg1);
> #line 4611
30214c30204
< #line 4612 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4613 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
30220c30210
< #line 4617
---
> #line 4618
30222,30223d30211
< #line 4619
<   mutex_unlock(ldv_func_arg1);
30224a30213,30214
>   mutex_unlock(ldv_func_arg1);
> #line 4621
