581c581
< #line 100 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 112 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
583c583
< #line 101
---
> #line 113
585c585
< #line 102 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 114 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
594c594
< #line 102 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 114 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
601c601
< #line 102
---
> #line 114
603c603
< #line 102 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 114 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
611,612c611,612
< #line 102 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
< union __anonunion_ldv_6252_31 {
---
> #line 114 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
> union __anonunion_ldv_6276_31 {
617c617
< #line 102 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 114 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
620c620
<    union __anonunion_ldv_6252_31 ldv_6252 ;
---
>    union __anonunion_ldv_6276_31 ldv_6276 ;
1280c1280
< union __anonunion_ldv_14687_130 {
---
> union __anonunion_ldv_14711_130 {
1286c1286
< struct __anonstruct_ldv_14697_134 {
---
> struct __anonstruct_ldv_14721_134 {
1292c1292
< union __anonunion_ldv_14699_133 {
---
> union __anonunion_ldv_14723_133 {
1294c1294
<    struct __anonstruct_ldv_14697_134 ldv_14697 ;
---
>    struct __anonstruct_ldv_14721_134 ldv_14721 ;
1298,1299c1298,1299
< struct __anonstruct_ldv_14701_132 {
<    union __anonunion_ldv_14699_133 ldv_14699 ;
---
> struct __anonstruct_ldv_14725_132 {
>    union __anonunion_ldv_14723_133 ldv_14723 ;
1303c1303
< union __anonunion_ldv_14702_131 {
---
> union __anonunion_ldv_14726_131 {
1305c1305
<    struct __anonstruct_ldv_14701_132 ldv_14701 ;
---
>    struct __anonstruct_ldv_14725_132 ldv_14725 ;
1308,1310c1308,1310
< struct __anonstruct_ldv_14703_129 {
<    union __anonunion_ldv_14687_130 ldv_14687 ;
<    union __anonunion_ldv_14702_131 ldv_14702 ;
---
> struct __anonstruct_ldv_14727_129 {
>    union __anonunion_ldv_14711_130 ldv_14711 ;
>    union __anonunion_ldv_14726_131 ldv_14726 ;
1313c1313
< struct __anonstruct_ldv_14710_136 {
---
> struct __anonstruct_ldv_14734_136 {
1321c1321
< struct __anonstruct_ldv_14716_137 {
---
> struct __anonstruct_ldv_14740_137 {
1326c1326
< union __anonunion_ldv_14717_135 {
---
> union __anonunion_ldv_14741_135 {
1328c1328
<    struct __anonstruct_ldv_14710_136 ldv_14710 ;
---
>    struct __anonstruct_ldv_14734_136 ldv_14734 ;
1330c1330
<    struct __anonstruct_ldv_14716_137 ldv_14716 ;
---
>    struct __anonstruct_ldv_14740_137 ldv_14740 ;
1333c1333
< union __anonunion_ldv_14722_138 {
---
> union __anonunion_ldv_14746_138 {
1342,1344c1342,1344
<    struct __anonstruct_ldv_14703_129 ldv_14703 ;
<    union __anonunion_ldv_14717_135 ldv_14717 ;
<    union __anonunion_ldv_14722_138 ldv_14722 ;
---
>    struct __anonstruct_ldv_14727_129 ldv_14727 ;
>    union __anonunion_ldv_14741_135 ldv_14741 ;
>    union __anonunion_ldv_14746_138 ldv_14746 ;
1565a1566,1570
> #line 12 "include/uapi/linux/socket.h"
> struct __kernel_sockaddr_storage {
>    __kernel_sa_family_t ss_family ;
>    char __data[126U] ;
> };
1709c1714
< struct __anonstruct_ldv_18528_154 {
---
> struct __anonstruct_ldv_18552_154 {
1714,1715c1719,1720
< union __anonunion_ldv_18530_153 {
<    struct __anonstruct_ldv_18528_154 ldv_18528 ;
---
> union __anonunion_ldv_18554_153 {
>    struct __anonstruct_ldv_18552_154 ldv_18552 ;
1720c1725
<    union __anonunion_ldv_18530_153 ldv_18530 ;
---
>    union __anonunion_ldv_18554_153 ldv_18554 ;
1813,1818d1817
< #line 217 "include/linux/capability.h"
< struct semaphore {
<    raw_spinlock_t lock ;
<    unsigned int count ;
<    struct list_head wait_list ;
< };
1986c1985
< union __anonunion_ldv_19689_157 {
---
> union __anonunion_ldv_19713_157 {
1993c1992
<    union __anonunion_ldv_19689_157 ldv_19689 ;
---
>    union __anonunion_ldv_19713_157 ldv_19713 ;
2185c2184
< union __anonunion_ldv_20124_160 {
---
> union __anonunion_ldv_20148_160 {
2190c2189
< union __anonunion_ldv_20144_161 {
---
> union __anonunion_ldv_20168_161 {
2199c2198
< union __anonunion_ldv_20160_162 {
---
> union __anonunion_ldv_20184_162 {
2218c2217
<    union __anonunion_ldv_20124_160 ldv_20124 ;
---
>    union __anonunion_ldv_20148_160 ldv_20148 ;
2235c2234
<    union __anonunion_ldv_20144_161 ldv_20144 ;
---
>    union __anonunion_ldv_20168_161 ldv_20168 ;
2245c2244
<    union __anonunion_ldv_20160_162 ldv_20160 ;
---
>    union __anonunion_ldv_20184_162 ldv_20184 ;
2785c2784
< struct __anonstruct_ldv_23730_178 {
---
> struct __anonstruct_ldv_23754_178 {
2792,2793c2791,2792
< union __anonunion_ldv_23732_177 {
<    struct __anonstruct_ldv_23730_178 ldv_23730 ;
---
> union __anonunion_ldv_23756_177 {
>    struct __anonstruct_ldv_23754_178 ldv_23754 ;
2800c2799
<    union __anonunion_ldv_23732_177 ldv_23732 ;
---
>    union __anonunion_ldv_23756_177 ldv_23756 ;
2837c2836
< union __anonunion_ldv_23811_179 {
---
> union __anonunion_ldv_23835_179 {
2844c2843
< union __anonunion_ldv_23820_180 {
---
> union __anonunion_ldv_23844_180 {
2866c2865
<    union __anonunion_ldv_23811_179 ldv_23811 ;
---
>    union __anonunion_ldv_23835_179 ldv_23835 ;
2871c2870
<    union __anonunion_ldv_23820_180 ldv_23820 ;
---
>    union __anonunion_ldv_23844_180 ldv_23844 ;
3462c3461
< enum ldv_22048 {
---
> enum ldv_22060 {
3470c3469
< typedef enum ldv_22048 socket_state;
---
> typedef enum ldv_22060 socket_state;
3627c3626
< struct __anonstruct_ldv_28226_201 {
---
> struct __anonstruct_ldv_28250_201 {
3632c3631
< union __anonunion_ldv_28227_200 {
---
> union __anonunion_ldv_28251_200 {
3634c3633
<    struct __anonstruct_ldv_28226_201 ldv_28226 ;
---
>    struct __anonstruct_ldv_28250_201 ldv_28250 ;
3637c3636
< union __anonunion_ldv_28265_202 {
---
> union __anonunion_ldv_28289_202 {
3656c3655
<    union __anonunion_ldv_28227_200 ldv_28227 ;
---
>    union __anonunion_ldv_28251_200 ldv_28251 ;
3689c3688
<    union __anonunion_ldv_28265_202 ldv_28265 ;
---
>    union __anonunion_ldv_28289_202 ldv_28289 ;
5164c5163
< union __anonunion_ldv_35518_214 {
---
> union __anonunion_ldv_35542_214 {
5265c5264
<    union __anonunion_ldv_35518_214 ldv_35518 ;
---
>    union __anonunion_ldv_35542_214 ldv_35542 ;
5466c5465
< union __anonunion_ldv_38363_219 {
---
> union __anonunion_ldv_38387_219 {
5473c5472
< union __anonunion_ldv_38388_220 {
---
> union __anonunion_ldv_38412_220 {
5486c5485
<    union __anonunion_ldv_38363_219 ldv_38363 ;
---
>    union __anonunion_ldv_38387_219 ldv_38387 ;
5503c5502
<    union __anonunion_ldv_38388_220 ldv_38388 ;
---
>    union __anonunion_ldv_38412_220 ldv_38412 ;
5517c5516
< union __anonunion_ldv_38603_222 {
---
> union __anonunion_ldv_38627_222 {
5522c5521
< union __anonunion_ldv_38611_223 {
---
> union __anonunion_ldv_38635_223 {
5527c5526
< union __anonunion_ldv_38618_224 {
---
> union __anonunion_ldv_38642_224 {
5535c5534
<    union __anonunion_ldv_38603_222 ldv_38603 ;
---
>    union __anonunion_ldv_38627_222 ldv_38627 ;
5540c5539
<    union __anonunion_ldv_38611_223 ldv_38611 ;
---
>    union __anonunion_ldv_38635_223 ldv_38635 ;
5544c5543
<    union __anonunion_ldv_38618_224 ldv_38618 ;
---
>    union __anonunion_ldv_38642_224 ldv_38642 ;
5705c5704,5738
< #line 189 "include/linux/drbd.h"
---
> #line 55 "include/linux/drbd.h"
> enum drbd_io_error_p {
>     EP_PASS_ON = 0,
>     EP_CALL_HELPER = 1,
>     EP_DETACH = 2
> } ;
> #line 183
> enum drbd_conns {
>     C_STANDALONE = 0,
>     C_DISCONNECTING = 1,
>     C_UNCONNECTED = 2,
>     C_TIMEOUT = 3,
>     C_BROKEN_PIPE = 4,
>     C_NETWORK_FAILURE = 5,
>     C_PROTOCOL_ERROR = 6,
>     C_TEAR_DOWN = 7,
>     C_WF_CONNECTION = 8,
>     C_WF_REPORT_PARAMS = 9,
>     C_CONNECTED = 10,
>     C_STARTING_SYNC_S = 11,
>     C_STARTING_SYNC_T = 12,
>     C_WF_BITMAP_S = 13,
>     C_WF_BITMAP_T = 14,
>     C_WF_SYNC_UUID = 15,
>     C_SYNC_SOURCE = 16,
>     C_SYNC_TARGET = 17,
>     C_VERIFY_S = 18,
>     C_VERIFY_T = 19,
>     C_PAUSED_SYNC_S = 20,
>     C_PAUSED_SYNC_T = 21,
>     C_AHEAD = 22,
>     C_BEHIND = 23,
>     C_MASK = 31
> } ;
> #line 211
5718,5719c5751,5752
< #line 202 "include/linux/drbd.h"
< struct __anonstruct_ldv_39979_227 {
---
> #line 224 "include/linux/drbd.h"
> struct __anonstruct_ldv_40024_227 {
5733c5766
< #line 202 "include/linux/drbd.h"
---
> #line 224 "include/linux/drbd.h"
5735c5768
<    struct __anonstruct_ldv_39979_227 ldv_39979 ;
---
>    struct __anonstruct_ldv_40024_227 ldv_40024 ;
5738c5771
< #line 274
---
> #line 296
5763c5796,5797
<     SS_AFTER_LAST_ERROR = -20
---
>     SS_O_VOL_PEER_PRI = -20,
>     SS_AFTER_LAST_ERROR = -21
5765c5799
< #line 368
---
> #line 346
5767c5801
< #line 369
---
> #line 347
5769c5803
< #line 370
---
> #line 348
5771c5805
< #line 371
---
> #line 349
5773c5807
< #line 372
---
> #line 350
5775c5809
< #line 373
---
> #line 351
5777c5811
< #line 374
---
> #line 352
5779c5813
< #line 375
---
> #line 353
5781c5815
< #line 376
---
> #line 354
5783c5817
< #line 377
---
> #line 355
6203c6237
< union __anonunion_ldv_43418_236 {
---
> union __anonunion_ldv_43454_236 {
6208c6242
< union __anonunion_ldv_43422_237 {
---
> union __anonunion_ldv_43458_237 {
6216,6217c6250,6251
<    union __anonunion_ldv_43418_236 ldv_43418 ;
<    union __anonunion_ldv_43422_237 ldv_43422 ;
---
>    union __anonunion_ldv_43454_236 ldv_43454 ;
>    union __anonunion_ldv_43458_237 ldv_43458 ;
6302c6336
< union __anonunion_ldv_43869_238 {
---
> union __anonunion_ldv_43905_238 {
6318c6352
< union __anonunion_ldv_43880_239 {
---
> union __anonunion_ldv_43916_239 {
6336,6337c6370,6371
<    union __anonunion_ldv_43869_238 ldv_43869 ;
<    union __anonunion_ldv_43880_239 ldv_43880 ;
---
>    union __anonunion_ldv_43905_238 ldv_43905 ;
>    union __anonunion_ldv_43916_239 ldv_43916 ;
6749c6783
< union __anonunion_ldv_46535_248 {
---
> union __anonunion_ldv_46571_248 {
6755c6789
<    union __anonunion_ldv_46535_248 ldv_46535 ;
---
>    union __anonunion_ldv_46571_248 ldv_46571 ;
6763c6797
< union __anonunion_ldv_46550_249 {
---
> union __anonunion_ldv_46586_249 {
6768c6802
< struct __anonstruct_ldv_46555_251 {
---
> struct __anonstruct_ldv_46591_251 {
6773,6774c6807,6808
< union __anonunion_ldv_46558_250 {
<    struct __anonstruct_ldv_46555_251 ldv_46555 ;
---
> union __anonunion_ldv_46594_250 {
>    struct __anonstruct_ldv_46591_251 ldv_46591 ;
6787,6788c6821,6822
<    union __anonunion_ldv_46550_249 ldv_46550 ;
<    union __anonunion_ldv_46558_250 ldv_46558 ;
---
>    union __anonunion_ldv_46586_249 ldv_46586 ;
>    union __anonunion_ldv_46594_250 ldv_46594 ;
6845a6880
>    unsigned int lc_new_number ;
6847c6882
< #line 170 "include/linux/lru_cache.h"
---
> #line 175 "include/linux/lru_cache.h"
6851a6887
>    struct list_head to_be_changed ;
6855a6892,6893
>    unsigned int max_pending_changes ;
>    unsigned int pending_changes ;
6860c6898
<    unsigned long dirty ;
---
>    unsigned long locked ;
6863,6864d6900
<    unsigned int new_number ;
<    struct lc_element *changing_element ;
6870,6941c6906,6937
< #line 73 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct drbd_conf;
< #line 315 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct p_header80 {
<    u32 magic ;
<    u16 command ;
<    u16 length ;
<    u8 payload[0U] ;
< };
< #line 342 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct p_header95 {
<    u16 magic ;
<    u16 command ;
<    u32 length ;
<    u8 payload[0U] ;
< };
< #line 350 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< union p_header {
<    struct p_header80 h80 ;
<    struct p_header95 h95 ;
< };
< #line 355 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct p_data {
<    union p_header head ;
<    u64 sector ;
<    u64 block_id ;
<    u32 seq_num ;
<    u32 dp_flags ;
< };
< #line 388 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct p_block_ack {
<    struct p_header80 head ;
<    u64 sector ;
<    u64 block_id ;
<    u32 blksize ;
<    u32 seq_num ;
< };
< #line 404 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct p_block_req {
<    struct p_header80 head ;
<    u64 sector ;
<    u64 block_id ;
<    u32 blksize ;
<    u32 pad ;
< };
< #line 413 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct p_handshake {
<    struct p_header80 head ;
<    u32 protocol_min ;
<    u32 feature_flags ;
<    u32 protocol_max ;
<    u32 _pad ;
<    u64 reserverd[7U] ;
< };
< #line 436 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct p_barrier {
<    struct p_header80 head ;
<    u32 barrier ;
<    u32 pad ;
< };
< #line 443 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct p_barrier_ack {
<    struct p_header80 head ;
<    u32 barrier ;
<    u32 set_size ;
< };
< #line 457 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct p_rs_param_89 {
<    struct p_header80 head ;
<    u32 rate ;
<    char verify_alg[64U] ;
<    char csums_alg[64U] ;
---
> #line 99 "include/linux/drbd_genl.h"
> struct disk_conf {
>    char backing_dev[128U] ;
>    __u32 backing_dev_len ;
>    char meta_dev[128U] ;
>    __u32 meta_dev_len ;
>    __s32 meta_dev_idx ;
>    __u64 disk_size ;
>    __u32 max_bio_bvecs ;
>    __u32 on_io_error ;
>    __u32 fencing ;
>    __u32 resync_rate ;
>    __s32 resync_after ;
>    __u32 al_extents ;
>    __u32 c_plan_ahead ;
>    __u32 c_delay_target ;
>    __u32 c_fill_target ;
>    __u32 c_max_rate ;
>    __u32 c_min_rate ;
>    char disk_barrier ;
>    char disk_flushes ;
>    char disk_drain ;
>    char md_flushes ;
>    __u32 disk_timeout ;
>    __u32 read_balancing ;
>    char al_updates ;
> };
> #line 106 "include/linux/drbd_genl.h"
> struct res_opts {
>    char cpu_mask[32U] ;
>    __u32 cpu_mask_len ;
>    __u32 on_no_data ;
6943,6946c6939,6946
< #line 465 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct p_rs_param_95 {
<    struct p_header80 head ;
<    u32 rate ;
---
> #line 139 "include/linux/drbd_genl.h"
> struct net_conf {
>    char shared_secret[64U] ;
>    __u32 shared_secret_len ;
>    char cram_hmac_alg[64U] ;
>    __u32 cram_hmac_alg_len ;
>    char integrity_alg[64U] ;
>    __u32 integrity_alg_len ;
6947a6948
>    __u32 verify_alg_len ;
6949,7006c6950,6974
<    u32 c_plan_ahead ;
<    u32 c_delay_target ;
<    u32 c_fill_target ;
<    u32 c_max_rate ;
< };
< #line 481 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct p_protocol {
<    struct p_header80 head ;
<    u32 protocol ;
<    u32 after_sb_0p ;
<    u32 after_sb_1p ;
<    u32 after_sb_2p ;
<    u32 conn_flags ;
<    u32 two_primaries ;
<    char integrity_alg[0U] ;
< };
< #line 494 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct p_uuids {
<    struct p_header80 head ;
<    u64 uuid[6U] ;
< };
< #line 500 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct p_rs_uuid {
<    struct p_header80 head ;
<    u64 uuid ;
< };
< #line 505 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct p_sizes {
<    struct p_header80 head ;
<    u64 d_size ;
<    u64 u_size ;
<    u64 c_size ;
<    u32 max_bio_size ;
<    u16 queue_order_type ;
<    u16 dds_flags ;
< };
< #line 515 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct p_state {
<    struct p_header80 head ;
<    u32 state ;
< };
< #line 520 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct p_req_state {
<    struct p_header80 head ;
<    u32 mask ;
<    u32 val ;
< };
< #line 526 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct p_req_state_reply {
<    struct p_header80 head ;
<    u32 retcode ;
< };
< #line 548 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct p_block_desc {
<    struct p_header80 head ;
<    u64 sector ;
<    u32 blksize ;
<    u32 pad ;
---
>    __u32 csums_alg_len ;
>    __u32 wire_protocol ;
>    __u32 connect_int ;
>    __u32 timeout ;
>    __u32 ping_int ;
>    __u32 ping_timeo ;
>    __u32 sndbuf_size ;
>    __u32 rcvbuf_size ;
>    __u32 ko_count ;
>    __u32 max_buffers ;
>    __u32 max_epoch_size ;
>    __u32 unplug_watermark ;
>    __u32 after_sb_0p ;
>    __u32 after_sb_1p ;
>    __u32 after_sb_2p ;
>    __u32 rr_conflict ;
>    __u32 on_congestion ;
>    __u32 cong_fill ;
>    __u32 cong_extents ;
>    char two_primaries ;
>    char discard_my_data ;
>    char tcp_cork ;
>    char always_asbp ;
>    char tentative ;
>    char use_rle ;
7008,7012c6976,7008
< #line 576 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct p_delay_probe93 {
<    struct p_header80 head ;
<    u32 seq_num ;
<    u32 offset ;
---
> #line 375
> struct drbd_conf;
> #line 376
> struct drbd_tconn;
> #line 377
> enum chg_state_flags {
>     CS_HARD = 1,
>     CS_VERBOSE = 2,
>     CS_WAIT_COMPLETE = 4,
>     CS_SERIALIZE = 8,
>     CS_ORDERED = 12,
>     CS_LOCAL_ONLY = 16,
>     CS_DC_ROLE = 32,
>     CS_DC_PEER = 64,
>     CS_DC_CONN = 128,
>     CS_DC_DISK = 256,
>     CS_DC_PDSK = 512,
>     CS_DC_SUSP = 1024,
>     CS_DC_MASK = 992,
>     CS_IGN_OUTD_FAIL = 2048
> } ;
> #line 394 "include/linux/drbd_genl.h"
> struct __anonstruct_ldv_49522_255 {
>    unsigned char role : 2 ;
>    unsigned char peer : 2 ;
>    unsigned char conn : 5 ;
>    unsigned char disk : 4 ;
>    unsigned char pdsk : 4 ;
>    unsigned char _unused : 1 ;
>    unsigned char aftr_isp : 1 ;
>    unsigned char peer_isp : 1 ;
>    unsigned char user_isp : 1 ;
>    unsigned short _pad : 11 ;
7014,7033c7010,7013
< #line 621 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< union p_polymorph {
<    union p_header header ;
<    struct p_handshake handshake ;
<    struct p_data data ;
<    struct p_block_ack block_ack ;
<    struct p_barrier barrier ;
<    struct p_barrier_ack barrier_ack ;
<    struct p_rs_param_89 rs_param_89 ;
<    struct p_rs_param_95 rs_param_95 ;
<    struct p_protocol protocol ;
<    struct p_sizes sizes ;
<    struct p_uuids uuids ;
<    struct p_state state ;
<    struct p_req_state req_state ;
<    struct p_req_state_reply req_state_reply ;
<    struct p_block_req block_req ;
<    struct p_delay_probe93 delay_probe93 ;
<    struct p_rs_uuid rs_uuid ;
<    struct p_block_desc block_desc ;
---
> #line 394 "include/linux/drbd_genl.h"
> union drbd_dev_state {
>    struct __anonstruct_ldv_49522_255 ldv_49522 ;
>    unsigned int i ;
7035c7015
< #line 655
---
> #line 499 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
7037,7040c7017,7020
<     None = 0,
<     Running = 1,
<     Exiting = 2,
<     Restarting = 3
---
>     NONE = 0,
>     RUNNING = 1,
>     EXITING = 2,
>     RESTARTING = 3
7042c7022
< #line 662 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 506 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
7049c7029
<    struct drbd_conf *mdev ;
---
>    struct drbd_tconn *tconn ;
7050a7031
>    char name[9U] ;
7052,7054c7033,7038
< #line 683
< struct drbd_work;
< #line 686 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 534 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> union __anonunion_ldv_49807_256 {
>    struct drbd_conf *mdev ;
>    struct drbd_tconn *tconn ;
> };
> #line 534 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
7057,7067c7041,7042
<    int (*cb)(struct drbd_conf * , struct drbd_work * , int  ) ;
< };
< #line 690
< struct drbd_tl_epoch;
< #line 717 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct drbd_tl_epoch {
<    struct drbd_work w ;
<    struct list_head requests ;
<    struct drbd_tl_epoch *next ;
<    unsigned int br_number ;
<    int n_writes ;
---
>    int (*cb)(struct drbd_work * , int  ) ;
>    union __anonunion_ldv_49807_256 ldv_49807 ;
7069c7044
< #line 725 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 580 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
7070a7046
>    struct drbd_tconn *tconn ;
7077,7137c7053
< #line 759 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct digest_info {
<    int digest_size ;
<    void *digest ;
< };
< #line 764 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< union __anonunion_ldv_49189_254 {
<    u64 block_id ;
<    struct digest_info *digest ;
< };
< #line 764 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct drbd_epoch_entry {
<    struct drbd_work w ;
<    struct hlist_node collision ;
<    struct drbd_epoch *epoch ;
<    struct drbd_conf *mdev ;
<    struct page *pages ;
<    atomic_t pending_bios ;
<    unsigned int size ;
<    unsigned long flags ;
<    sector_t sector ;
<    union __anonunion_ldv_49189_254 ldv_49189 ;
< };
< #line 789
< enum drbd_flag {
<     CREATE_BARRIER = 0,
<     SIGNAL_ASENDER = 1,
<     SEND_PING = 2,
<     UNPLUG_REMOTE = 3,
<     MD_DIRTY = 4,
<     DISCARD_CONCURRENT = 5,
<     USE_DEGR_WFC_T = 6,
<     CLUSTER_ST_CHANGE = 7,
<     CL_ST_CHG_SUCCESS = 8,
<     CL_ST_CHG_FAIL = 9,
<     CRASHED_PRIMARY = 10,
<     CONSIDER_RESYNC = 11,
<     MD_NO_FUA = 12,
<     SUSPEND_IO = 13,
<     BITMAP_IO = 14,
<     BITMAP_IO_QUEUED = 15,
<     GO_DISKLESS = 16,
<     WAS_IO_ERROR = 17,
<     WAS_READ_ERROR = 18,
<     FORCE_DETACH = 19,
<     RESYNC_AFTER_NEG = 20,
<     NET_CONGESTED = 21,
<     CONFIG_PENDING = 22,
<     DEVICE_DYING = 23,
<     RESIZE_PENDING = 24,
<     CONN_DRY_RUN = 25,
<     GOT_PING_ACK = 26,
<     NEW_CUR_UUID = 27,
<     AL_SUSPENDED = 28,
<     AHEAD_TO_SYNC_SOURCE = 29,
<     STATE_SENT = 30,
<     CALLBACK_PENDING = 31,
<     DISCONNECT_SENT = 32,
<     DRBD_N_FLAGS = 33
< } ;
< #line 826
---
> #line 662
7139c7055
< #line 827
---
> #line 663
7151c7067
< #line 839 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 675 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
7154d7069
<    struct semaphore s ;
7155a7071
>    wait_queue_head_t q_wait ;
7157c7073
< #line 905 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 736 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
7159d7074
<    struct drbd_work_queue work ;
7162,7163c7077,7078
<    union p_polymorph sbuf ;
<    union p_polymorph rbuf ;
---
>    void *sbuf ;
>    void *rbuf ;
7165c7080
< #line 915 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 745 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
7177,7252c7092
< #line 19 "include/linux/drbd_nl.h"
< struct disk_conf {
<    __u64 disk_size ;
<    unsigned char backing_dev[128U] ;
<    int backing_dev_len ;
<    unsigned char meta_dev[128U] ;
<    int meta_dev_len ;
<    int meta_dev_idx ;
<    int on_io_error ;
<    int fencing ;
<    unsigned char use_bmbv : 1 ;
<    unsigned char no_disk_flush : 1 ;
<    unsigned char no_md_flush : 1 ;
<    int max_bio_bvecs ;
<    unsigned char no_disk_barrier : 1 ;
<    unsigned char no_disk_drain : 1 ;
<    int disk_timeout ;
< };
< #line 39 "include/linux/drbd_nl.h"
< struct net_conf {
<    unsigned char my_addr[128U] ;
<    int my_addr_len ;
<    unsigned char peer_addr[128U] ;
<    int peer_addr_len ;
<    unsigned char shared_secret[64U] ;
<    int shared_secret_len ;
<    unsigned char cram_hmac_alg[64U] ;
<    int cram_hmac_alg_len ;
<    unsigned char integrity_alg[64U] ;
<    int integrity_alg_len ;
<    int timeout ;
<    int wire_protocol ;
<    int try_connect_int ;
<    int ping_int ;
<    int max_epoch_size ;
<    int max_buffers ;
<    int unplug_watermark ;
<    int sndbuf_size ;
<    int ko_count ;
<    int after_sb_0p ;
<    int after_sb_1p ;
<    int after_sb_2p ;
<    int rr_conflict ;
<    int ping_timeo ;
<    int rcvbuf_size ;
<    int on_congestion ;
<    int cong_fill ;
<    int cong_extents ;
<    unsigned char mind_af : 1 ;
<    unsigned char want_lose : 1 ;
<    unsigned char two_primaries : 1 ;
<    unsigned char always_asbp : 1 ;
<    unsigned char no_cork : 1 ;
<    unsigned char auto_sndbuf_size : 1 ;
<    unsigned char dry_run : 1 ;
< };
< #line 81 "include/linux/drbd_nl.h"
< struct syncer_conf {
<    int rate ;
<    int after ;
<    int al_extents ;
<    unsigned char verify_alg[64U] ;
<    int verify_alg_len ;
<    unsigned char cpu_mask[32U] ;
<    int cpu_mask_len ;
<    unsigned char csums_alg[64U] ;
<    int csums_alg_len ;
<    unsigned char use_rle : 1 ;
<    int on_no_data ;
<    int c_plan_ahead ;
<    int c_delay_target ;
<    int c_fill_target ;
<    int c_max_rate ;
<    int c_min_rate ;
< };
< #line 153 "include/linux/drbd_nl.h"
---
> #line 759 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
7257c7097
<    struct disk_conf dc ;
---
>    struct disk_conf *disk_conf ;
7260c7100
< #line 950 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 772 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
7265c7105
< #line 955 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 777 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
7273c7113
< #line 963
---
> #line 785
7279c7119
< #line 969 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 791 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
7281d7120
<    int *values ;
7283a7123,7124
>    int total ;
>    int values[0U] ;
7285,7287c7126,7143
< #line 975 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct drbd_conf {
<    unsigned long drbd_flags[1U] ;
---
> #line 815 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct __anonstruct_send_258 {
>    bool seen_any_write_yet ;
>    int current_epoch_nr ;
>    unsigned int current_epoch_writes ;
> };
> #line 815 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct drbd_tconn {
>    char *name ;
>    struct list_head all_tconn ;
>    struct kref kref ;
>    struct idr volumes ;
>    enum drbd_conns cstate ;
>    unsigned char susp : 1 ;
>    unsigned char susp_nod : 1 ;
>    unsigned char susp_fen : 1 ;
>    struct mutex cstate_mutex ;
>    unsigned long flags ;
7289,7294c7145,7151
<    struct syncer_conf sync_conf ;
<    struct drbd_backing_dev *ldev ;
<    sector_t p_size ;
<    struct request_queue *rq_queue ;
<    struct block_device *this_bdev ;
<    struct gendisk *vdisk ;
---
>    struct mutex conf_update ;
>    wait_queue_head_t ping_wait ;
>    struct res_opts res_opts ;
>    struct __kernel_sockaddr_storage my_addr ;
>    int my_addr_len ;
>    struct __kernel_sockaddr_storage peer_addr ;
>    int peer_addr_len ;
7299a7157,7191
>    spinlock_t req_lock ;
>    struct list_head transfer_log ;
>    struct crypto_hash *cram_hmac_tfm ;
>    struct crypto_hash *integrity_tfm ;
>    struct crypto_hash *peer_integrity_tfm ;
>    struct crypto_hash *csums_tfm ;
>    struct crypto_hash *verify_tfm ;
>    void *int_dig_in ;
>    void *int_dig_vv ;
>    struct drbd_epoch *current_epoch ;
>    spinlock_t epoch_lock ;
>    unsigned int epochs ;
>    enum write_ordering_e write_ordering ;
>    atomic_t current_tle_nr ;
>    unsigned int current_tle_writes ;
>    unsigned long last_reconnect_jif ;
>    struct drbd_thread receiver ;
>    struct drbd_thread worker ;
>    struct drbd_thread asender ;
>    cpumask_var_t cpu_mask ;
>    struct drbd_work_queue sender_work ;
>    struct __anonstruct_send_258 send ;
> };
> #line 893 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct drbd_conf {
>    struct drbd_tconn *tconn ;
>    int vnr ;
>    struct kref kref ;
>    unsigned long flags ;
>    struct drbd_backing_dev *ldev ;
>    sector_t p_size ;
>    struct request_queue *rq_queue ;
>    struct block_device *this_bdev ;
>    struct gendisk *vdisk ;
>    unsigned long last_reattach_jif ;
7310c7202
<    union drbd_state state ;
---
>    union drbd_dev_state state ;
7313d7204
<    wait_queue_head_t net_cnt_wait ;
7325,7333c7216,7217
<    atomic_t net_cnt ;
<    spinlock_t req_lock ;
<    struct drbd_tl_epoch *unused_spare_tle ;
<    struct drbd_tl_epoch *newest_tle ;
<    struct drbd_tl_epoch *oldest_tle ;
<    struct list_head out_of_sequence_requests ;
<    struct list_head barrier_acked_requests ;
<    struct hlist_head *tl_hash ;
<    unsigned int tl_hash_s ;
---
>    struct rb_root read_requests ;
>    struct rb_root write_requests ;
7341a7226
>    unsigned long rs_last_bcast ;
7348,7354d7232
<    struct crypto_hash *csums_tfm ;
<    struct crypto_hash *verify_tfm ;
<    unsigned long last_reattach_jif ;
<    unsigned long last_reconnect_jif ;
<    struct drbd_thread receiver ;
<    struct drbd_thread worker ;
<    struct drbd_thread asender ;
7362,7365d7239
<    struct drbd_epoch *current_epoch ;
<    spinlock_t epoch_lock ;
<    unsigned int epochs ;
<    enum write_ordering_e write_ordering ;
7371,7373d7244
<    struct hlist_head *ee_hash ;
<    unsigned int ee_hash_s ;
<    struct drbd_epoch_entry *last_write_w_barrier ;
7375d7245
<    struct hlist_head *app_reads_hash ;
7381d7250
<    struct page *md_io_tmpp ;
7390,7395d7258
<    struct crypto_hash *cram_hmac_tfm ;
<    struct crypto_hash *integrity_w_tfm ;
<    struct crypto_hash *integrity_r_tfm ;
<    void *int_dig_out ;
<    void *int_dig_in ;
<    void *int_dig_vv ;
7402d7264
<    cpumask_var_t cpu_mask ;
7405c7267,7268
<    struct mutex state_mutex ;
---
>    struct mutex own_state_mutex ;
>    struct mutex *state_mutex ;
7412c7275
<    struct fifo_buffer rs_plan_s ;
---
>    struct fifo_buffer *rs_plan_s ;
7414d7276
<    int rs_planed ;
7419,7427c7281
< #line 1212
< enum chg_state_flags {
<     CS_HARD = 1,
<     CS_VERBOSE = 2,
<     CS_WAIT_COMPLETE = 4,
<     CS_SERIALIZE = 8,
<     CS_ORDERED = 12
< } ;
< #line 1881
---
> #line 1666
7434c7288
< #line 2557 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 2335 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
7449c7303
< #line 958 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1005 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
7458c7312
< #line 1783 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1820 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
7460,7461c7314,7315
< #line 1895 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
< typedef int ldv_func_ret_type___13;
---
> #line 1902 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
> typedef int ldv_func_ret_type___10;
7509c7363
< union __anonunion_ldv_13726_134 {
---
> union __anonunion_ldv_13750_134 {
7520c7374
<    union __anonunion_ldv_13726_134 ldv_13726 ;
---
>    union __anonunion_ldv_13750_134 ldv_13750 ;
7700c7554
< #line 154 "include/linux/drbd.h"
---
> #line 176 "include/linux/drbd.h"
7707,7735c7561
< #line 161
< enum drbd_conns {
<     C_STANDALONE = 0,
<     C_DISCONNECTING = 1,
<     C_UNCONNECTED = 2,
<     C_TIMEOUT = 3,
<     C_BROKEN_PIPE = 4,
<     C_NETWORK_FAILURE = 5,
<     C_PROTOCOL_ERROR = 6,
<     C_TEAR_DOWN = 7,
<     C_WF_CONNECTION = 8,
<     C_WF_REPORT_PARAMS = 9,
<     C_CONNECTED = 10,
<     C_STARTING_SYNC_S = 11,
<     C_STARTING_SYNC_T = 12,
<     C_WF_BITMAP_S = 13,
<     C_WF_BITMAP_T = 14,
<     C_WF_SYNC_UUID = 15,
<     C_SYNC_SOURCE = 16,
<     C_SYNC_TARGET = 17,
<     C_VERIFY_S = 18,
<     C_VERIFY_T = 19,
<     C_PAUSED_SYNC_S = 20,
<     C_PAUSED_SYNC_T = 21,
<     C_AHEAD = 22,
<     C_BEHIND = 23,
<     C_MASK = 31
< } ;
< #line 1341 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1153 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
7742c7568
< #line 607 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
---
> #line 622 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
7746,7747c7572,7636
< #line 159 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< enum drbd_packets {
---
> #line 113 "include/linux/drbd.h"
> enum drbd_ret_code {
>     ERR_CODE_BASE = 100,
>     NO_ERROR = 101,
>     ERR_LOCAL_ADDR = 102,
>     ERR_PEER_ADDR = 103,
>     ERR_OPEN_DISK = 104,
>     ERR_OPEN_MD_DISK = 105,
>     ERR_DISK_NOT_BDEV = 107,
>     ERR_MD_NOT_BDEV = 108,
>     ERR_DISK_TOO_SMALL = 111,
>     ERR_MD_DISK_TOO_SMALL = 112,
>     ERR_BDCLAIM_DISK = 114,
>     ERR_BDCLAIM_MD_DISK = 115,
>     ERR_MD_IDX_INVALID = 116,
>     ERR_IO_MD_DISK = 118,
>     ERR_MD_INVALID = 119,
>     ERR_AUTH_ALG = 120,
>     ERR_AUTH_ALG_ND = 121,
>     ERR_NOMEM = 122,
>     ERR_DISCARD_IMPOSSIBLE = 123,
>     ERR_DISK_CONFIGURED = 124,
>     ERR_NET_CONFIGURED = 125,
>     ERR_MANDATORY_TAG = 126,
>     ERR_MINOR_INVALID = 127,
>     ERR_INTR = 129,
>     ERR_RESIZE_RESYNC = 130,
>     ERR_NO_PRIMARY = 131,
>     ERR_RESYNC_AFTER = 132,
>     ERR_RESYNC_AFTER_CYCLE = 133,
>     ERR_PAUSE_IS_SET = 134,
>     ERR_PAUSE_IS_CLEAR = 135,
>     ERR_PACKET_NR = 137,
>     ERR_NO_DISK = 138,
>     ERR_NOT_PROTO_C = 139,
>     ERR_NOMEM_BITMAP = 140,
>     ERR_INTEGRITY_ALG = 141,
>     ERR_INTEGRITY_ALG_ND = 142,
>     ERR_CPU_MASK_PARSE = 143,
>     ERR_CSUMS_ALG = 144,
>     ERR_CSUMS_ALG_ND = 145,
>     ERR_VERIFY_ALG = 146,
>     ERR_VERIFY_ALG_ND = 147,
>     ERR_CSUMS_RESYNC_RUNNING = 148,
>     ERR_VERIFY_RUNNING = 149,
>     ERR_DATA_NOT_CURRENT = 150,
>     ERR_CONNECTED = 151,
>     ERR_PERM = 152,
>     ERR_NEED_APV_93 = 153,
>     ERR_STONITH_AND_PROT_A = 154,
>     ERR_CONG_NOT_PROTO_A = 155,
>     ERR_PIC_AFTER_DEP = 156,
>     ERR_PIC_PEER_DEP = 157,
>     ERR_RES_NOT_KNOWN = 158,
>     ERR_RES_IN_USE = 159,
>     ERR_MINOR_CONFIGURED = 160,
>     ERR_MINOR_EXISTS = 161,
>     ERR_INVALID_REQUEST = 162,
>     ERR_NEED_APV_100 = 163,
>     ERR_NEED_ALLOW_TWO_PRI = 164,
>     ERR_MD_UNCLEAN = 165,
>     AFTER_LAST_ERR_CODE = 166
> } ;
> #line 169 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> enum drbd_packet {
7772c7661
<     P_DISCARD_ACK = 24,
---
>     P_SUPERSEDED = 24,
7788c7677,7680
<     P_MAX_CMD = 42,
---
>     P_CONN_ST_CHG_REQ = 42,
>     P_CONN_ST_CHG_REPLY = 43,
>     P_RETRY_WRITE = 44,
>     P_PROTOCOL_UPDATE = 45,
7791,7793c7683,7685
<     P_HAND_SHAKE_M = 65521,
<     P_HAND_SHAKE_S = 65522,
<     P_HAND_SHAKE = 65534
---
>     P_INITIAL_META = 65521,
>     P_INITIAL_DATA = 65522,
>     P_CONNECTION_FEATURES = 65534
7795c7687,7701
< #line 691 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 376 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct p_barrier {
>    u32 barrier ;
>    u32 pad ;
> };
> #line 543 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct drbd_interval {
>    struct rb_node rb ;
>    sector_t sector ;
>    unsigned int size ;
>    sector_t end ;
>    signed char local : 1 ;
>    signed char waiting : 1 ;
> };
> #line 547 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
7798d7703
<    struct drbd_conf *mdev ;
7800,7802c7705
<    struct hlist_node collision ;
<    sector_t sector ;
<    unsigned int size ;
---
>    struct drbd_interval i ;
7806d7708
<    unsigned long rq_state ;
7807a7710,7712
>    atomic_t completion_ref ;
>    struct kref kref ;
>    unsigned int rq_state ;
7809c7714
< #line 753 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 600 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
7814c7719,7739
< #line 53 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_wrappers.h"
---
> #line 606 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct digest_info {
>    int digest_size ;
>    void *digest ;
> };
> #line 611 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> union __anonunion_ldv_50726_262 {
>    u64 block_id ;
>    struct digest_info *digest ;
> };
> #line 611 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct drbd_peer_request {
>    struct drbd_work w ;
>    struct drbd_epoch *epoch ;
>    struct page *pages ;
>    atomic_t pending_bios ;
>    struct drbd_interval i ;
>    unsigned long flags ;
>    union __anonunion_ldv_50726_262 ldv_50726 ;
> };
> #line 48 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_wrappers.h"
7816,7843c7741,7769
<     created = 0,
<     to_be_send = 1,
<     to_be_submitted = 2,
<     queue_for_net_write = 3,
<     queue_for_net_read = 4,
<     queue_for_send_oos = 5,
<     send_canceled = 6,
<     send_failed = 7,
<     handed_over_to_network = 8,
<     oos_handed_to_network = 9,
<     connection_lost_while_pending = 10,
<     read_retry_remote_canceled = 11,
<     recv_acked_by_peer = 12,
<     write_acked_by_peer = 13,
<     write_acked_by_peer_and_sis = 14,
<     conflict_discarded_by_peer = 15,
<     neg_acked = 16,
<     barrier_acked = 17,
<     data_received = 18,
<     read_completed_with_error = 19,
<     read_ahead_completed_with_error = 20,
<     write_completed_with_error = 21,
<     abort_disk_io = 22,
<     completed_ok = 23,
<     resend = 24,
<     fail_frozen_disk_io = 25,
<     restart_frozen_disk_io = 26,
<     nothing = 27
---
>     CREATED = 0,
>     TO_BE_SENT = 1,
>     TO_BE_SUBMITTED = 2,
>     QUEUE_FOR_NET_WRITE = 3,
>     QUEUE_FOR_NET_READ = 4,
>     QUEUE_FOR_SEND_OOS = 5,
>     SEND_CANCELED = 6,
>     SEND_FAILED = 7,
>     HANDED_OVER_TO_NETWORK = 8,
>     OOS_HANDED_TO_NETWORK = 9,
>     CONNECTION_LOST_WHILE_PENDING = 10,
>     READ_RETRY_REMOTE_CANCELED = 11,
>     RECV_ACKED_BY_PEER = 12,
>     WRITE_ACKED_BY_PEER = 13,
>     WRITE_ACKED_BY_PEER_AND_SIS = 14,
>     CONFLICT_RESOLVED = 15,
>     POSTPONE_WRITE = 16,
>     NEG_ACKED = 17,
>     BARRIER_ACKED = 18,
>     DATA_RECEIVED = 19,
>     READ_COMPLETED_WITH_ERROR = 20,
>     READ_AHEAD_COMPLETED_WITH_ERROR = 21,
>     WRITE_COMPLETED_WITH_ERROR = 22,
>     ABORT_DISK_IO = 23,
>     COMPLETED_OK = 24,
>     RESEND = 25,
>     FAIL_FROZEN_DISK_IO = 26,
>     RESTART_FROZEN_DISK_IO = 27,
>     NOTHING = 28
7845c7771
< #line 315 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"
---
> #line 261 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"
7849a7776,7777
> #line 2154 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> typedef int ldv_func_ret_type___12;
7876,7882c7804
< #line 62 "include/linux/drbd.h"
< enum drbd_fencing_p {
<     FP_DONT_CARE = 0,
<     FP_RESOURCE = 1,
<     FP_STONITH = 2
< } ;
< #line 74
---
> #line 74 "include/linux/drbd.h"
7896c7818
< #line 281 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 237 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
7905c7827,7937
< #line 555
---
> #line 271 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct p_header80 {
>    u32 magic ;
>    u16 command ;
>    u16 length ;
> };
> #line 297 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct p_header95 {
>    u16 magic ;
>    u16 command ;
>    u32 length ;
> };
> #line 304 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct p_header100 {
>    u32 magic ;
>    u16 volume ;
>    u16 command ;
>    u32 length ;
>    u32 pad ;
> };
> #line 314 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct p_data {
>    u64 sector ;
>    u64 block_id ;
>    u32 seq_num ;
>    u32 dp_flags ;
> };
> #line 332 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct p_block_ack {
>    u64 sector ;
>    u64 block_id ;
>    u32 blksize ;
>    u32 seq_num ;
> };
> #line 347 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct p_block_req {
>    u64 sector ;
>    u64 block_id ;
>    u32 blksize ;
>    u32 pad ;
> };
> #line 354 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct p_connection_features {
>    u32 protocol_min ;
>    u32 feature_flags ;
>    u32 protocol_max ;
>    u32 _pad ;
>    u64 reserved[7U] ;
> };
> #line 381 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct p_barrier_ack {
>    u32 barrier ;
>    u32 set_size ;
> };
> #line 400 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct p_rs_param_95 {
>    u32 resync_rate ;
>    char verify_alg[64U] ;
>    char csums_alg[64U] ;
>    u32 c_plan_ahead ;
>    u32 c_delay_target ;
>    u32 c_fill_target ;
>    u32 c_max_rate ;
> };
> #line 415 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct p_protocol {
>    u32 protocol ;
>    u32 after_sb_0p ;
>    u32 after_sb_1p ;
>    u32 after_sb_2p ;
>    u32 conn_flags ;
>    u32 two_primaries ;
>    char integrity_alg[0U] ;
> };
> #line 427 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct p_uuids {
>    u64 uuid[6U] ;
> };
> #line 432 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct p_rs_uuid {
>    u64 uuid ;
> };
> #line 436 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct p_sizes {
>    u64 d_size ;
>    u64 u_size ;
>    u64 c_size ;
>    u32 max_bio_size ;
>    u16 queue_order_type ;
>    u16 dds_flags ;
> };
> #line 445 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct p_state {
>    u32 state ;
> };
> #line 449 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct p_req_state {
>    u32 mask ;
>    u32 val ;
> };
> #line 454 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct p_req_state_reply {
>    u32 retcode ;
> };
> #line 468 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct p_block_desc {
>    u64 sector ;
>    u32 blksize ;
>    u32 pad ;
> };
> #line 474
7909c7941
< #line 559 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 478 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
7911d7942
<    struct p_header80 head ;
7915c7946
< #line 746
---
> #line 593
7922c7953
< #line 1220
---
> #line 1051
7927c7958
< #line 1589
---
> #line 1434
7946c7977,7984
< #line 350
---
> #line 350 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_vli.h"
> struct packet_info {
>    enum drbd_packet cmd ;
>    unsigned int size ;
>    unsigned int vnr ;
>    void *data ;
> };
> #line 145 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
7952c7990,7997
< #line 3767 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 741 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> struct accept_wait_data {
>    struct drbd_tconn *tconn ;
>    struct socket *s_listen ;
>    struct completion door_bell ;
>    void (*original_sk_state_change)(struct sock * ) ;
> };
> #line 4418 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
7956c8001
<    int (*function)(struct drbd_conf * , enum drbd_packets  , unsigned int  ) ;
---
>    int (*fn)(struct drbd_tconn * , struct packet_info * ) ;
7958,7960c8003
< #line 4416 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< typedef struct drbd_request *req_validator_fn(struct drbd_conf * , u64  , sector_t  );
< #line 4635 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 5295 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
7963c8006
<    int (*process)(struct drbd_conf * , struct p_header80 * ) ;
---
>    int (*fn)(struct drbd_tconn * , struct packet_info * ) ;
7964a8008,8011
> #line 5826 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> typedef int ldv_func_ret_type___25;
> #line 5838 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> typedef int ldv_func_ret_type___26;
7967,7979c8014,8033
< #line 187 "include/linux/bio.h"
< struct bio_pair {
<    struct bio bio1 ;
<    struct bio bio2 ;
<    struct bio_vec bv1 ;
<    struct bio_vec bv2 ;
<    struct bio_integrity_payload bip1 ;
<    struct bio_integrity_payload bip2 ;
<    struct bio_vec iv1 ;
<    struct bio_vec iv2 ;
<    atomic_t cnt ;
<    int error ;
< };
---
> #line 93 "include/linux/drbd.h"
> enum drbd_on_congestion {
>     OC_BLOCK = 0,
>     OC_PULL_AHEAD = 1,
>     OC_DISCONNECT = 2
> } ;
> #line 99
> enum drbd_read_balancing {
>     RB_PREFER_LOCAL = 0,
>     RB_PREFER_REMOTE = 1,
>     RB_ROUND_ROBIN = 2,
>     RB_LEAST_PENDING = 3,
>     RB_CONGESTED_REMOTE = 4,
>     RB_32K_STRIPING = 5,
>     RB_64K_STRIPING = 6,
>     RB_128K_STRIPING = 7,
>     RB_256K_STRIPING = 8,
>     RB_512K_STRIPING = 9,
>     RB_1M_STRIPING = 10
> } ;
7982,7985c8036,8062
< #line 53 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_wrappers.h"
< struct __anonstruct_updates_255 {
<    u32 pos ;
<    u32 extent ;
---
> #line 34 "include/linux/drbd_genl_api.h"
> enum drbd_state_info_bcast_reason {
>     SIB_GET_STATUS_REPLY = 1,
>     SIB_STATE_CHANGE = 2,
>     SIB_HELPER_PRE = 3,
>     SIB_HELPER_POST = 4,
>     SIB_SYNC_PROGRESS = 5
> } ;
> #line 1598 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct __anonstruct_ldv_50737_260 {
>    char *helper_name ;
>    unsigned int helper_exit_code ;
> };
> #line 1598 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct __anonstruct_ldv_50741_261 {
>    union drbd_state os ;
>    union drbd_state ns ;
> };
> #line 1598 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> union __anonunion_ldv_50742_259 {
>    struct __anonstruct_ldv_50737_260 ldv_50737 ;
>    struct __anonstruct_ldv_50741_261 ldv_50741 ;
> };
> #line 1598 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct sib_info {
>    enum drbd_state_info_bcast_reason sib_reason ;
>    union __anonunion_ldv_50742_259 ldv_50742 ;
7988,7992c8065,8076
< struct al_transaction {
<    u32 magic ;
<    u32 tr_number ;
<    struct __anonstruct_updates_255 updates[62U] ;
<    u32 xor_sum ;
---
> struct al_transaction_on_disk {
>    __be32 magic ;
>    __be32 tr_number ;
>    __be32 crc32c ;
>    __be16 transaction_type ;
>    __be16 n_updates ;
>    __be16 context_size ;
>    __be16 context_start_slot_nr ;
>    __be32 __reserved[4U] ;
>    __be16 update_slot_nr[64U] ;
>    __be32 update_extent_nr[64U] ;
>    __be32 context[919U] ;
7994c8078
< #line 114 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
---
> #line 183 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
7999c8083
< #line 119 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
---
> #line 188 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
8002d8085
<    struct lc_element *al_ext ;
8004,8005c8087
<    unsigned int enr ;
<    unsigned int old_enr ;
---
>    int err ;
8008a8091,8092
> #line 266
> struct workqueue_struct;
8015,8027c8099,8104
< #line 56 "include/linux/drbd.h"
< enum drbd_io_error_p {
<     EP_PASS_ON = 0,
<     EP_CALL_HELPER = 1,
<     EP_DETACH = 2
< } ;
< #line 350 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_vli.h"
< struct after_state_chg_work {
<    struct drbd_work w ;
<    union drbd_state os ;
<    union drbd_state ns ;
<    enum chg_state_flags flags ;
<    struct completion *done ;
---
> #line 2284 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> struct retry_worker {
>    struct workqueue_struct *wq ;
>    struct work_struct worker ;
>    spinlock_t lock ;
>    struct list_head writes ;
8029,8038c8106
< #line 634 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< enum sanitize_state_warnings {
<     NO_WARNING = 0,
<     ABORTED_ONLINE_VERIFY = 1,
<     ABORTED_RESYNC = 2,
<     CONNECTION_LOST_NEGOTIATING = 3,
<     IMPLICITLY_UPGRADED_DISK = 4,
<     IMPLICITLY_UPGRADED_PDSK = 5
< } ;
< #line 3910 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 2927 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
8054c8122
< #line 4435 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 3568 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
8061,8067c8129
< #line 32 "include/uapi/linux/types.h"
< typedef __u16 __le16;
< #line 34 "include/uapi/linux/types.h"
< typedef __u32 __le32;
< #line 36 "include/uapi/linux/types.h"
< typedef __u64 __le64;
< #line 255 "include/linux/timer.h"
---
> #line 255
8105,8172c8167,8172
< #line 2228 "include/net/sock.h"
< struct cb_id {
<    __u32 idx ;
<    __u32 val ;
< };
< #line 65 "include/uapi/linux/connector.h"
< struct cn_msg {
<    struct cb_id id ;
<    __u32 seq ;
<    __u32 ack ;
<    __u16 len ;
<    __u16 flags ;
<    __u8 data[0U] ;
< };
< #line 99 "include/linux/drbd.h"
< enum drbd_ret_code {
<     ERR_CODE_BASE = 100,
<     NO_ERROR = 101,
<     ERR_LOCAL_ADDR = 102,
<     ERR_PEER_ADDR = 103,
<     ERR_OPEN_DISK = 104,
<     ERR_OPEN_MD_DISK = 105,
<     ERR_DISK_NOT_BDEV = 107,
<     ERR_MD_NOT_BDEV = 108,
<     ERR_DISK_TOO_SMALL = 111,
<     ERR_MD_DISK_TOO_SMALL = 112,
<     ERR_BDCLAIM_DISK = 114,
<     ERR_BDCLAIM_MD_DISK = 115,
<     ERR_MD_IDX_INVALID = 116,
<     ERR_IO_MD_DISK = 118,
<     ERR_MD_INVALID = 119,
<     ERR_AUTH_ALG = 120,
<     ERR_AUTH_ALG_ND = 121,
<     ERR_NOMEM = 122,
<     ERR_DISCARD = 123,
<     ERR_DISK_CONFIGURED = 124,
<     ERR_NET_CONFIGURED = 125,
<     ERR_MANDATORY_TAG = 126,
<     ERR_MINOR_INVALID = 127,
<     ERR_INTR = 129,
<     ERR_RESIZE_RESYNC = 130,
<     ERR_NO_PRIMARY = 131,
<     ERR_SYNC_AFTER = 132,
<     ERR_SYNC_AFTER_CYCLE = 133,
<     ERR_PAUSE_IS_SET = 134,
<     ERR_PAUSE_IS_CLEAR = 135,
<     ERR_PACKET_NR = 137,
<     ERR_NO_DISK = 138,
<     ERR_NOT_PROTO_C = 139,
<     ERR_NOMEM_BITMAP = 140,
<     ERR_INTEGRITY_ALG = 141,
<     ERR_INTEGRITY_ALG_ND = 142,
<     ERR_CPU_MASK_PARSE = 143,
<     ERR_CSUMS_ALG = 144,
<     ERR_CSUMS_ALG_ND = 145,
<     ERR_VERIFY_ALG = 146,
<     ERR_VERIFY_ALG_ND = 147,
<     ERR_CSUMS_RESYNC_RUNNING = 148,
<     ERR_VERIFY_RUNNING = 149,
<     ERR_DATA_NOT_CURRENT = 150,
<     ERR_CONNECTED = 151,
<     ERR_PERM = 152,
<     ERR_NEED_APV_93 = 153,
<     ERR_STONITH_AND_PROT_A = 154,
<     ERR_CONG_NOT_PROTO_A = 155,
<     ERR_PIC_AFTER_DEP = 156,
<     ERR_PIC_PEER_DEP = 157,
<     AFTER_LAST_ERR_CODE = 158
---
> #line 61 "include/linux/drbd.h"
> enum drbd_fencing_p {
>     FP_NOT_AVAIL = -1,
>     FP_DONT_CARE = 0,
>     FP_RESOURCE = 1,
>     FP_STONITH = 2
8174,8179c8174,8266
< #line 323 "include/linux/drbd.h"
< struct drbd_nl_cfg_req {
<    int packet_type ;
<    unsigned int drbd_minor ;
<    int flags ;
<    unsigned short tag_list[] ;
---
> #line 56 "include/linux/prefetch.h"
> union __anonunion_ldv_49826_259 {
>    __u32 flags ;
>    __s32 ret_code ;
> };
> #line 56 "include/linux/prefetch.h"
> struct drbd_genlmsghdr {
>    __u32 minor ;
>    union __anonunion_ldv_49826_259 ldv_49826 ;
> };
> #line 42 "include/linux/drbd_genl_api.h"
> struct genlmsghdr {
>    __u8 cmd ;
>    __u8 version ;
>    __u16 reserved ;
> };
> #line 89 "include/linux/drbd_genl.h"
> struct drbd_cfg_context {
>    __u32 ctx_volume ;
>    char ctx_resource_name[128U] ;
>    __u32 ctx_resource_name_len ;
>    char ctx_my_addr[128U] ;
>    __u32 ctx_my_addr_len ;
>    char ctx_peer_addr[128U] ;
>    __u32 ctx_peer_addr_len ;
> };
> #line 144 "include/linux/drbd_genl.h"
> struct set_role_parms {
>    char assume_uptodate ;
> };
> #line 178 "include/linux/drbd_genl.h"
> struct resize_parms {
>    __u64 resize_size ;
>    char resize_force ;
>    char no_resync ;
> };
> #line 182 "include/linux/drbd_genl.h"
> struct state_info {
>    __u32 sib_reason ;
>    __u32 current_state ;
>    __u64 capacity ;
>    __u64 ed_uuid ;
>    __u32 prev_state ;
>    __u32 new_state ;
>    char uuids[32U] ;
>    __u32 uuids_len ;
>    __u32 disk_flags ;
>    __u64 bits_total ;
>    __u64 bits_oos ;
>    __u64 bits_rs_total ;
>    __u64 bits_rs_failed ;
>    char helper[32U] ;
>    __u32 helper_len ;
>    __u32 helper_exit_code ;
>    __u64 send_cnt ;
>    __u64 recv_cnt ;
>    __u64 read_cnt ;
>    __u64 writ_cnt ;
>    __u64 al_writ_cnt ;
>    __u64 bm_writ_cnt ;
>    __u32 ap_bio_cnt ;
>    __u32 ap_pending_cnt ;
>    __u32 rs_pending_cnt ;
> };
> #line 188 "include/linux/drbd_genl.h"
> struct start_ov_parms {
>    __u64 ov_start_sector ;
>    __u64 ov_stop_sector ;
> };
> #line 228 "include/linux/drbd_genl.h"
> struct new_c_uuid_parms {
>    char clear_bm ;
> };
> #line 233 "include/linux/drbd_genl.h"
> struct timeout_parms {
>    __u32 timeout_type ;
> };
> #line 237 "include/linux/drbd_genl.h"
> struct disconnect_parms {
>    char force_disconnect ;
> };
> #line 241 "include/linux/drbd_genl.h"
> struct detach_parms {
>    char force_detach ;
> };
> #line 138 "include/linux/kthread.h"
> struct genl_family;
> #line 138 "include/linux/kthread.h"
> struct genl_multicast_group {
>    struct genl_family *family ;
>    struct list_head list ;
>    char name[16U] ;
>    u32 id ;
8181,8183c8268,8310
< #line 361 "include/linux/drbd.h"
< struct drbd_nl_cfg_reply {
<    int packet_type ;
---
> #line 24 "include/net/genetlink.h"
> struct genl_ops;
> #line 25
> struct genl_info;
> #line 26 "include/net/genetlink.h"
> struct genl_family {
>    unsigned int id ;
>    unsigned int hdrsize ;
>    char name[16U] ;
>    unsigned int version ;
>    unsigned int maxattr ;
>    bool netnsok ;
>    int (*pre_doit)(struct genl_ops * , struct sk_buff * , struct genl_info * ) ;
>    void (*post_doit)(struct genl_ops * , struct sk_buff * , struct genl_info * ) ;
>    struct nlattr **attrbuf ;
>    struct list_head ops_list ;
>    struct list_head family_list ;
>    struct list_head mcast_groups ;
> };
> #line 64 "include/net/genetlink.h"
> struct genl_info {
>    u32 snd_seq ;
>    u32 snd_portid ;
>    struct nlmsghdr *nlhdr ;
>    struct genlmsghdr *genlhdr ;
>    void *userhdr ;
>    struct nlattr **attrs ;
>    struct net *_net ;
>    void *user_ptr[2U] ;
> };
> #line 98 "include/net/genetlink.h"
> struct genl_ops {
>    u8 cmd ;
>    u8 internal_flags ;
>    unsigned int flags ;
>    struct nla_policy  const  *policy ;
>    int (*doit)(struct sk_buff * , struct genl_info * ) ;
>    int (*dumpit)(struct sk_buff * , struct netlink_callback * ) ;
>    int (*done)(struct netlink_callback * ) ;
>    struct list_head ops_list ;
> };
> #line 170 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> struct drbd_config_context {
8185,8186c8312,8326
<    int ret_code ;
<    unsigned short tag_list[] ;
---
>    unsigned int volume ;
>    char *resource_name ;
>    struct nlattr *my_addr ;
>    struct nlattr *peer_addr ;
>    struct sk_buff *reply_skb ;
>    struct drbd_genlmsghdr *reply_dh ;
>    struct drbd_conf *mdev ;
>    struct drbd_tconn *tconn ;
> };
> #line 1936 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> struct crypto {
>    struct crypto_hash *verify_tfm ;
>    struct crypto_hash *csums_tfm ;
>    struct crypto_hash *cram_hmac_tfm ;
>    struct crypto_hash *integrity_tfm ;
8188,8198c8328,8332
< #line 929 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct primary {
<    unsigned char primary_force : 1 ;
< };
< #line 22 "include/linux/drbd_nl.h"
< struct detach {
<    unsigned char detach_force : 1 ;
< };
< #line 43 "include/linux/drbd_nl.h"
< struct disconnect {
<    unsigned char force : 1 ;
---
> #line 83 "include/linux/rbtree.h"
> struct rb_augment_callbacks {
>    void (*propagate)(struct rb_node * , struct rb_node * ) ;
>    void (*copy)(struct rb_node * , struct rb_node * ) ;
>    void (*rotate)(struct rb_node * , struct rb_node * ) ;
8200,8204c8334,8342
< #line 77 "include/linux/drbd_nl.h"
< struct resize {
<    __u64 resize_size ;
<    unsigned char resize_force : 1 ;
<    unsigned char no_resync : 1 ;
---
> #line 255 "include/linux/timer.h"
> enum hrtimer_restart;
> #line 121 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> struct after_state_chg_work {
>    struct drbd_work w ;
>    union drbd_state os ;
>    union drbd_state ns ;
>    enum chg_state_flags flags ;
>    struct completion *done ;
8206,8297c8344,8351
< #line 111 "include/linux/drbd_nl.h"
< struct get_state {
<    int state_i ;
< };
< #line 139 "include/linux/drbd_nl.h"
< struct start_ov {
<    __u64 start_sector ;
<    __u64 stop_sector ;
< };
< #line 148 "include/linux/drbd_nl.h"
< struct new_c_uuid {
<    unsigned char clear_bm : 1 ;
< };
< #line 35 "include/linux/drbd_tag_magic.h"
< enum drbd_tags {
<     T_primary_force = 32769,
<     T_disk_size = 16386,
<     T_backing_dev = 57347,
<     T_meta_dev = 57348,
<     T_meta_dev_idx = 8197,
<     T_on_io_error = 6,
<     T_fencing = 7,
<     T_use_bmbv = 32805,
<     T_no_disk_flush = 32821,
<     T_no_md_flush = 32822,
<     T_max_bio_bvecs = 56,
<     T_no_disk_barrier = 32825,
<     T_no_disk_drain = 32826,
<     T_disk_timeout = 89,
<     T_detach_force = 41048,
<     T_my_addr = 57352,
<     T_peer_addr = 57353,
<     T_shared_secret = 49162,
<     T_cram_hmac_alg = 49163,
<     T_integrity_alg = 49196,
<     T_timeout = 14,
<     T_wire_protocol = 8207,
<     T_try_connect_int = 16,
<     T_ping_int = 17,
<     T_max_epoch_size = 18,
<     T_max_buffers = 19,
<     T_unplug_watermark = 20,
<     T_sndbuf_size = 21,
<     T_ko_count = 22,
<     T_after_sb_0p = 24,
<     T_after_sb_1p = 25,
<     T_after_sb_2p = 26,
<     T_rr_conflict = 39,
<     T_ping_timeo = 40,
<     T_rcvbuf_size = 67,
<     T_on_congestion = 81,
<     T_cong_fill = 82,
<     T_cong_extents = 83,
<     T_mind_af = 41020,
<     T_want_lose = 32795,
<     T_two_primaries = 32796,
<     T_always_asbp = 32809,
<     T_no_cork = 32829,
<     T_auto_sndbuf_size = 41022,
<     T_dry_run = 41030,
<     T_force = 32852,
<     T_resize_size = 16413,
<     T_resize_force = 32836,
<     T_no_resync = 41029,
<     T_rate = 30,
<     T_after = 31,
<     T_al_extents = 32,
<     T_verify_alg = 49204,
<     T_cpu_mask = 49203,
<     T_csums_alg = 49216,
<     T_use_rle = 32833,
<     T_on_no_data = 75,
<     T_c_plan_ahead = 76,
<     T_c_delay_target = 77,
<     T_c_fill_target = 78,
<     T_c_max_rate = 79,
<     T_c_min_rate = 80,
<     T_state_i = 33,
<     T_uuids = 49186,
<     T_uuids_flags = 35,
<     T_use_degraded = 32804,
<     T_helper = 49190,
<     T_sync_progress = 43,
<     T_dump_ee_reason = 49197,
<     T_seen_digest = 49198,
<     T_calc_digest = 49199,
<     T_ee_sector = 16432,
<     T_ee_block_id = 16433,
<     T_ee_data = 49202,
<     T_start_sector = 16450,
<     T_stop_sector = 24666,
<     T_clear_bm = 41023
---
> #line 129
> enum sanitize_state_warnings {
>     NO_WARNING = 0,
>     ABORTED_ONLINE_VERIFY = 1,
>     ABORTED_RESYNC = 2,
>     CONNECTION_LOST_NEGOTIATING = 3,
>     IMPLICITLY_UPGRADED_DISK = 4,
>     IMPLICITLY_UPGRADED_PDSK = 5
8299,8308c8353,8359
< #line 115 "include/linux/drbd_tag_magic.h"
< struct tag {
<    char const   *name ;
<    int type_n_flags ;
<    int max_len ;
< };
< #line 2374 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< struct cn_handler_struct {
<    int (*function)(struct drbd_conf * , struct drbd_nl_cfg_req * , struct drbd_nl_cfg_reply * ) ;
<    int reply_body_size ;
---
> #line 1592 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> struct after_conn_state_chg_work {
>    struct drbd_work w ;
>    enum drbd_conns oc ;
>    union drbd_state ns_min ;
>    union drbd_state ns_max ;
>    enum chg_state_flags flags ;
8309a8361,8364
> #line 1998 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> typedef int ldv_func_ret_type___4;
> #line 255 "include/linux/timer.h"
> enum hrtimer_restart;
8337a8393,8406
> #line 121 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/bitops.h"
> __inline static void clear_bit_unlock(unsigned int nr , unsigned long volatile   *addr ) 
> { 
> 
> 
>   {
> #line 123
>   __asm__  volatile   ("": : : "memory");
> #line 124
>   clear_bit((int )nr, addr);
> #line 125
>   return;
> }
> }
8362a8432,8444
> #line 248 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/bitops.h"
> __inline static int test_and_clear_bit(int nr , unsigned long volatile   *addr ) 
> { 
>   int oldbit ;
> 
>   {
> #line 252
>   __asm__  volatile   (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; btr %2,%1\n\tsbb %0,%0": "=r" (oldbit),
>                        "+m" (*((long volatile   *)addr)): "Ir" (nr): "memory");
> #line 256
>   return (oldbit);
> }
> }
8661a8744,8752
> #line 333 "include/linux/lockdep.h"
> extern void lock_acquire(struct lockdep_map * , unsigned int  , int  , int  , int  ,
>                          struct lockdep_map * , unsigned long  ) ;
> #line 337
> extern void lock_release(struct lockdep_map * , int  , unsigned long  ) ;
> #line 342
> extern int lock_is_held(struct lockdep_map * ) ;
> #line 573
> extern void lockdep_rcu_suspicious(char const   * , int const    , char const   * ) ;
8669c8760
< int ldv_mutex_trylock_15(struct mutex *ldv_func_arg1 ) ;
---
> int ldv_mutex_trylock_12(struct mutex *ldv_func_arg1 ) ;
8683,8684d8773
< void ldv_mutex_unlock_13(struct mutex *ldv_func_arg1 ) ;
< #line 204
8686,8688c8775
< #line 208
< void ldv_mutex_unlock_17(struct mutex *ldv_func_arg1 ) ;
< #line 7 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 7 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
8701,8704c8788,8789
< void ldv_mutex_lock_12(struct mutex *ldv_func_arg1 ) ;
< #line 34
< void ldv_mutex_lock_16(struct mutex *ldv_func_arg1 ) ;
< #line 39
---
> void ldv_mutex_lock_13(struct mutex *ldv_func_arg1 ) ;
> #line 35
8706c8791
< #line 40
---
> #line 36
8708c8793
< #line 43
---
> #line 39
8710,8711d8794
< #line 47
< void ldv_mutex_lock_cred_guard_mutex_of_signal_struct(struct mutex *lock ) ;
8712a8796,8797
> void ldv_mutex_lock_cred_guard_mutex_of_signal_struct(struct mutex *lock ) ;
> #line 55
8714c8799
< #line 63
---
> #line 75
8716c8801
< #line 67
---
> #line 79
8718c8803
< #line 71
---
> #line 83
8720c8805
< #line 75
---
> #line 87
8722c8807
< #line 79
---
> #line 91
8724c8809
< #line 80
---
> #line 92
8726c8811
< #line 83
---
> #line 95
8728,8731d8812
< #line 87
< void ldv_mutex_lock_mutex_of_drbd_socket(struct mutex *lock ) ;
< #line 91
< void ldv_mutex_unlock_mutex_of_drbd_socket(struct mutex *lock ) ;
8747c8828
<   goto ldv_6275;
---
>   goto ldv_6299;
8752c8833
<   goto ldv_6275;
---
>   goto ldv_6299;
8757c8838
<   goto ldv_6275;
---
>   goto ldv_6299;
8762c8843
<   goto ldv_6275;
---
>   goto ldv_6299;
8767c8848
<   ldv_6275: 
---
>   ldv_6299: 
8849a8931,9115
> #line 163 "include/linux/rcupdate.h"
> __inline static void __rcu_read_lock(void) 
> { 
>   struct thread_info *tmp ;
> 
>   {
> #line 165
>   tmp = current_thread_info();
> #line 165
>   tmp->preempt_count = tmp->preempt_count + 1;
> #line 165
>   __asm__  volatile   ("": : : "memory");
> #line 166
>   return;
> }
> }
> #line 168 "include/linux/rcupdate.h"
> __inline static void __rcu_read_unlock(void) 
> { 
>   struct thread_info *tmp ;
> 
>   {
> #line 170
>   __asm__  volatile   ("": : : "memory");
> #line 170
>   tmp = current_thread_info();
> #line 170
>   tmp->preempt_count = tmp->preempt_count + -1;
> #line 170
>   __asm__  volatile   ("": : : "memory");
> #line 171
>   return;
> }
> }
> #line 273
> extern int rcu_is_cpu_idle(void) ;
> #line 277
> extern bool rcu_lockdep_current_cpu_online(void) ;
> #line 287 "include/linux/rcupdate.h"
> __inline static void rcu_lock_acquire(struct lockdep_map *map ) 
> { 
> 
> 
>   {
> #line 289
>   lock_acquire(map, 0U, 0, 2, 1, 0, (unsigned long )((void *)0));
> #line 291
>   return;
> }
> }
> #line 292 "include/linux/rcupdate.h"
> __inline static void rcu_lock_release(struct lockdep_map *map ) 
> { 
> 
> 
>   {
> #line 294
>   lock_release(map, 1, (unsigned long )((void *)0));
> #line 296
>   return;
> }
> }
> #line 297
> extern struct lockdep_map rcu_lock_map ;
> #line 300
> extern int debug_lockdep_rcu_enabled(void) ;
> #line 322 "include/linux/rcupdate.h"
> __inline static int rcu_read_lock_held(void) 
> { 
>   int tmp ;
>   int tmp___0 ;
>   bool tmp___1 ;
>   int tmp___2 ;
>   int tmp___3 ;
> 
>   {
> #line 324
>   tmp = debug_lockdep_rcu_enabled();
> #line 324
>   if (tmp == 0) {
> #line 325
>     return (1);
>   } else {
> 
>   }
> #line 326
>   tmp___0 = rcu_is_cpu_idle();
> #line 326
>   if (tmp___0 != 0) {
> #line 327
>     return (0);
>   } else {
> 
>   }
> #line 328
>   tmp___1 = rcu_lockdep_current_cpu_online();
> #line 328
>   if (tmp___1) {
> #line 328
>     tmp___2 = 0;
>   } else {
> #line 328
>     tmp___2 = 1;
>   }
> #line 328
>   if (tmp___2) {
> #line 329
>     return (0);
>   } else {
> 
>   }
> #line 330
>   tmp___3 = lock_is_held(& rcu_lock_map);
> #line 330
>   return (tmp___3);
> }
> }
> #line 732 "include/linux/rcupdate.h"
> __inline static void rcu_read_lock(void) 
> { 
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
> 
>   {
> #line 734
>   __rcu_read_lock();
> #line 736
>   rcu_lock_acquire(& rcu_lock_map);
> #line 737
>   tmp = debug_lockdep_rcu_enabled();
> #line 737
>   if (tmp != 0 && ! __warned) {
> #line 737
>     tmp___0 = rcu_is_cpu_idle();
> #line 737
>     if (tmp___0 != 0) {
> #line 737
>       __warned = 1;
> #line 737
>       lockdep_rcu_suspicious("include/linux/rcupdate.h", 738, "rcu_read_lock() used illegally while idle");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 740
>   return;
> }
> }
> #line 756 "include/linux/rcupdate.h"
> __inline static void rcu_read_unlock(void) 
> { 
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
> 
>   {
> #line 758
>   tmp = debug_lockdep_rcu_enabled();
> #line 758
>   if (tmp != 0 && ! __warned) {
> #line 758
>     tmp___0 = rcu_is_cpu_idle();
> #line 758
>     if (tmp___0 != 0) {
> #line 758
>       __warned = 1;
> #line 758
>       lockdep_rcu_suspicious("include/linux/rcupdate.h", 759, "rcu_read_unlock() used illegally while idle");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 760
>   rcu_lock_release(& rcu_lock_map);
> #line 762
>   __rcu_read_unlock();
> #line 763
>   return;
> }
> }
8968,9001d9233
< #line 16 "include/linux/uaccess.h"
< __inline static void pagefault_disable(void) 
< { 
<   struct thread_info *tmp ;
< 
<   {
< #line 18
<   tmp = current_thread_info();
< #line 18
<   tmp->preempt_count = tmp->preempt_count + 1;
< #line 23
<   __asm__  volatile   ("": : : "memory");
< #line 24
<   return;
< }
< }
< #line 26 "include/linux/uaccess.h"
< __inline static void pagefault_enable(void) 
< { 
<   struct thread_info *tmp ;
< 
<   {
< #line 32
<   __asm__  volatile   ("": : : "memory");
< #line 33
<   tmp = current_thread_info();
< #line 33
<   tmp->preempt_count = tmp->preempt_count + -1;
< #line 37
<   __asm__  volatile   ("": : : "memory");
< #line 38
<   return;
< }
< }
9009c9241
<   pagefault_disable();
---
>   __rcu_read_lock();
9023c9255
<   pagefault_enable();
---
>   __rcu_read_unlock();
9040c9272,9275
< #line 67 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 120 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_state.h"
> enum drbd_state_rv __drbd_set_state(struct drbd_conf *mdev , union drbd_state ns ,
>                                     enum chg_state_flags flags , struct completion *done ) ;
> #line 70 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
9042c9277
< #line 68
---
> #line 71
9044c9279
< #line 135
---
> #line 148
9046c9281
< #line 138 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 151 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
9053c9288
< #line 140
---
> #line 153
9055c9290
< #line 140
---
> #line 153
9057c9292
< #line 140
---
> #line 153
9059c9294
< #line 140
---
> #line 153
9062c9297
< #line 140
---
> #line 153
9066c9301
< #line 140
---
> #line 153
9069c9304
< #line 140
---
> #line 153
9073c9308
< #line 158
---
> #line 166
9075,9080c9310,9311
< #line 1149 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static void drbd_set_flag(struct drbd_conf *mdev , enum drbd_flag f ) 
< { 
< 
< 
<   {
---
> #line 1066
> char *drbd_task_to_thread_name(struct drbd_tconn *tconn , struct task_struct *task ) ;
9082,9102d9312
<   set_bit((unsigned int )f, (unsigned long volatile   *)(& mdev->drbd_flags));
< #line 1152
<   return;
< }
< }
< #line 1159 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static int drbd_test_flag(struct drbd_conf *mdev , enum drbd_flag f ) 
< { 
<   int tmp ;
< 
<   {
< #line 1161
<   tmp = variable_test_bit((int )f, (unsigned long const volatile   *)(& mdev->drbd_flags));
< #line 1161
<   return (tmp);
< }
< }
< #line 1243
< enum drbd_state_rv __drbd_set_state(struct drbd_conf *mdev , union drbd_state ns ,
<                                     enum chg_state_flags flags , struct completion *done ) ;
< #line 1339
9104c9314
< #line 1340
---
> #line 1152
9106c9316
< #line 1483
---
> #line 1317
9108c9318
< #line 1484
---
> #line 1318
9110c9320
< #line 1485
---
> #line 1319
9112c9322
< #line 1486
---
> #line 1320
9114c9324
< #line 1487
---
> #line 1321
9116c9326
< #line 1489
---
> #line 1323
9118c9328
< #line 1491
---
> #line 1325
9120c9330
< #line 1493
---
> #line 1327
9122c9332
< #line 1497
---
> #line 1331
9124c9334
< #line 1499
---
> #line 1333
9126c9336
< #line 1500
---
> #line 1334
9128c9338
< #line 1501
---
> #line 1335
9130c9340
< #line 1502
---
> #line 1336
9132c9342,9344
< #line 1503
---
> #line 1337
> void drbd_bm_mark_for_writeout(struct drbd_conf *mdev , int page_nr ) ;
> #line 1338
9134c9346,9348
< #line 1504
---
> #line 1339
> int drbd_bm_write_hinted(struct drbd_conf *mdev ) ;
> #line 1340
9136c9350
< #line 1505
---
> #line 1341
9138,9140c9352
< #line 1506
< unsigned long drbd_bm_ALe_set_all(struct drbd_conf *mdev , unsigned long al_enr ) ;
< #line 1508
---
> #line 1342
9142c9354
< #line 1509
---
> #line 1343
9144c9356
< #line 1510
---
> #line 1344
9146c9358
< #line 1513
---
> #line 1347
9148c9360
< #line 1515
---
> #line 1349
9150c9362
< #line 1516
---
> #line 1350
9152c9364
< #line 1517
---
> #line 1351
9154c9366
< #line 1518
---
> #line 1352
9156c9368
< #line 1521
---
> #line 1355
9158c9370
< #line 1524
---
> #line 1358
9160c9372
< #line 1527
---
> #line 1361
9162c9374
< #line 1528
---
> #line 1362
9164c9376
< #line 1562
---
> #line 1396
9166c9378
< #line 1568
---
> #line 1402
9168c9380
< #line 1570
---
> #line 1404
9170c9382
< #line 1587
---
> #line 1432
9172c9384
< #line 1612
---
> #line 1459
9175c9387
< #line 1853 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1643 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
9182c9394
< #line 1858
---
> #line 1648
9184c9396
< #line 1859
---
> #line 1649
9186c9398
< #line 1860
---
> #line 1650
9188c9400,9418
< #line 1862
---
> #line 1652
>   return (rv);
> }
> }
> #line 1655 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static union drbd_state drbd_read_state(struct drbd_conf *mdev ) 
> { 
>   union drbd_state rv ;
> 
>   {
> #line 1659
>   rv.i = mdev->state.i;
> #line 1660
>   rv.ldv_40024.susp = (mdev->tconn)->susp;
> #line 1661
>   rv.ldv_40024.susp_nod = (mdev->tconn)->susp_nod;
> #line 1662
>   rv.ldv_40024.susp_fen = (mdev->tconn)->susp_fen;
> #line 1664
9192c9422
< #line 1890 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1675 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
9195a9426,9428
>   enum drbd_io_error_p ep ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
9196a9430,9431
>   int tmp___0 ;
>   int tmp___1 ;
9201,9204c9436,9466
< #line 1894
<   switch ((mdev->ldev)->dc.on_io_error) {
<   case 0: ;
< #line 1896
---
> #line 1681
>   rcu_read_lock();
> #line 1682
>   _________p1 = *((struct disk_conf * volatile  *)(& (mdev->ldev)->disk_conf));
> #line 1682
>   tmp = debug_lockdep_rcu_enabled();
> #line 1682
>   if (tmp != 0 && ! __warned) {
> #line 1682
>     tmp___0 = rcu_read_lock_held();
> #line 1682
>     if (tmp___0 == 0 && 1) {
> #line 1682
>       __warned = 1;
> #line 1682
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h",
>                              1682, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1682
>   ep = (enum drbd_io_error_p )_________p1->on_io_error;
> #line 1683
>   rcu_read_unlock();
> #line 1684
>   switch ((unsigned int )ep) {
>   case 0U: ;
> #line 1686
9206,9210c9468,9472
< #line 1897
<     tmp = ___ratelimit(& drbd_ratelimit_state, "__drbd_chk_io_error_");
< #line 1897
<     if (tmp != 0) {
< #line 1898
---
> #line 1687
>     tmp___1 = ___ratelimit(& drbd_ratelimit_state, "__drbd_chk_io_error_");
> #line 1687
>     if (tmp___1 != 0) {
> #line 1688
9216,9222c9478,9484
< #line 1899
<     if ((int )mdev->state.ldv_39979.disk > 4) {
< #line 1900
<       __ns.i = mdev->state.i;
< #line 1900
<       __ns.ldv_39979.disk = 4U;
< #line 1900
---
> #line 1689
>     if ((int )mdev->state.ldv_49522.disk > 4) {
> #line 1690
>       __ns = drbd_read_state(mdev);
> #line 1690
>       __ns.ldv_40024.disk = 4U;
> #line 1690
9227,9228c9489,9490
< #line 1901
<     goto ldv_50254;
---
> #line 1691
>     goto ldv_50794;
9232,9236c9494,9498
<   case 2: ;
<   case 1: 
< #line 1926
<   drbd_set_flag(mdev, WAS_IO_ERROR);
< #line 1927
---
>   case 2U: ;
>   case 1U: 
> #line 1716
>   set_bit(12U, (unsigned long volatile   *)(& mdev->flags));
> #line 1717
9238,9239c9500,9501
< #line 1928
<     drbd_set_flag(mdev, WAS_READ_ERROR);
---
> #line 1718
>     set_bit(13U, (unsigned long volatile   *)(& mdev->flags));
9243c9505
< #line 1929
---
> #line 1719
9245,9246c9507,9508
< #line 1930
<     drbd_set_flag(mdev, FORCE_DETACH);
---
> #line 1720
>     set_bit(14U, (unsigned long volatile   *)(& mdev->flags));
9250,9256c9512,9518
< #line 1931
<   if ((int )mdev->state.ldv_39979.disk > 2) {
< #line 1932
<     __ns___0.i = mdev->state.i;
< #line 1932
<     __ns___0.ldv_39979.disk = 2U;
< #line 1932
---
> #line 1721
>   if ((int )mdev->state.ldv_49522.disk > 2) {
> #line 1722
>     __ns___0 = drbd_read_state(mdev);
> #line 1722
>     __ns___0.ldv_40024.disk = 2U;
> #line 1722
9258c9520
< #line 1933
---
> #line 1723
9264,9265c9526,9527
< #line 1936
<   goto ldv_50254;
---
> #line 1726
>   goto ldv_50794;
9267,9268c9529,9530
<   ldv_50254: ;
< #line 1939
---
>   ldv_50794: ;
> #line 1729
9272c9534
< #line 1949 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1739 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
9280c9542
< #line 1952
---
> #line 1742
9282,9284c9544,9546
< #line 1954
<     tmp = spinlock_check(& mdev->req_lock);
< #line 1954
---
> #line 1744
>     tmp = spinlock_check(& (mdev->tconn)->req_lock);
> #line 1744
9286c9548
< #line 1955
---
> #line 1745
9288,9289c9550,9551
< #line 1956
<     spin_unlock_irqrestore(& mdev->req_lock, flags);
---
> #line 1746
>     spin_unlock_irqrestore(& (mdev->tconn)->req_lock, flags);
9293c9555
< #line 1958
---
> #line 1748
9297c9559
< #line 1984 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1785 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
9300c9562,9566
< 
---
>   int meta_dev_idx ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
9303,9304c9569,9597
< #line 1986
<   switch (bdev->dc.meta_dev_idx) {
---
> #line 1789
>   rcu_read_lock();
> #line 1790
>   _________p1 = *((struct disk_conf * volatile  *)(& bdev->disk_conf));
> #line 1790
>   tmp = debug_lockdep_rcu_enabled();
> #line 1790
>   if (tmp != 0 && ! __warned) {
> #line 1790
>     tmp___0 = rcu_read_lock_held();
> #line 1790
>     if (tmp___0 == 0 && 1) {
> #line 1790
>       __warned = 1;
> #line 1790
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h",
>                              1790, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1790
>   meta_dev_idx = _________p1->meta_dev_idx;
> #line 1791
>   rcu_read_unlock();
> #line 1793
>   switch (meta_dev_idx) {
9307c9600
< #line 1989
---
> #line 1796
9311c9604
< #line 1992
---
> #line 1799
9316c9609
< #line 2247 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 2043 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
9323c9616
< #line 2249
---
> #line 2045
9325c9618
< #line 2249
---
> #line 2045
9327c9620
< #line 2255
---
> #line 2051
9329c9622
< #line 2255
---
> #line 2051
9332c9625
<             2255);
---
>             2051);
9336c9629
< #line 2256
---
> #line 2052
9338,9340c9631,9633
< #line 2257
<     if ((unsigned int )*((unsigned char *)mdev + 2277UL) == 0U) {
< #line 2259
---
> #line 2053
>     if ((unsigned int )*((unsigned char *)mdev + 749UL) == 0U) {
> #line 2055
9345,9347c9638,9640
< #line 2260
<     if ((unsigned int )*((unsigned char *)mdev + 2277UL) == 4U) {
< #line 2262
---
> #line 2056
>     if ((unsigned int )*((unsigned char *)mdev + 749UL) == 4U) {
> #line 2058
9352c9645
< #line 2263
---
> #line 2059
9357c9650
< #line 2265
---
> #line 2061
9361c9654
< #line 2268 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 2064 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
9367,9369c9660,9662
< #line 2273
<   if ((unsigned int )*((unsigned char *)mdev + 2277UL) == 0U) {
< #line 2274
---
> #line 2069
>   if ((unsigned int )*((unsigned char *)mdev + 749UL) == 0U) {
> #line 2070
9374c9667
< #line 2276
---
> #line 2072
9376,9378c9669,9671
< #line 2277
<   io_allowed = (unsigned int )mdev->state.ldv_39979.disk >= (unsigned int )mins;
< #line 2278
---
> #line 2073
>   io_allowed = (unsigned int )mdev->state.ldv_49522.disk >= (unsigned int )mins;
> #line 2074
9380c9673
< #line 2279
---
> #line 2075
9385c9678
< #line 2280
---
> #line 2076
9389c9682
< #line 2544 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 2317 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
9396,9398c9689,9700
< #line 2548
<   tmp = drbd_test_flag(mdev, MD_NO_FUA);
< #line 2548
---
> #line 2321
>   if ((unsigned long )mdev->ldev == (unsigned long )((struct drbd_backing_dev *)0)) {
> #line 2322
>     dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "mdev->ldev == NULL in drbd_md_flush\n");
> #line 2323
>     return;
>   } else {
> 
>   }
> #line 2326
>   tmp = constant_test_bit(7U, (unsigned long const volatile   *)(& mdev->flags));
> #line 2326
9400c9702
< #line 2549
---
> #line 2327
9405c9707
< #line 2551
---
> #line 2329
9407c9709
< #line 2552
---
> #line 2330
9409,9411c9711,9713
< #line 2553
<     drbd_set_flag(mdev, MD_NO_FUA);
< #line 2554
---
> #line 2331
>     set_bit(7U, (unsigned long volatile   *)(& mdev->flags));
> #line 2332
9417c9719
< #line 2556
---
> #line 2334
9421c9723
< #line 187 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 203 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
9426,9432c9728,9730
<   struct task_struct *tmp___3 ;
<   char *tmp___4 ;
<   struct task_struct *tmp___5 ;
<   char *tmp___6 ;
<   struct task_struct *tmp___7 ;
<   char *tmp___8 ;
<   struct task_struct *tmp___9 ;
---
>   char *tmp___0 ;
>   struct task_struct *tmp___1 ;
>   char *tmp___2 ;
9435c9733
< #line 189
---
> #line 205
9437c9735
< #line 190
---
> #line 206
9439c9737
< #line 190
---
> #line 206
9441c9739
< #line 191
---
> #line 207
9446,9478c9744,9750
< #line 192
<   tmp___9 = get_current();
< #line 192
<   if ((unsigned long )tmp___9 != (unsigned long )mdev->receiver.task) {
< #line 192
<     tmp___7 = get_current();
< #line 192
<     if ((unsigned long )tmp___7 != (unsigned long )mdev->asender.task) {
< #line 192
<       tmp___5 = get_current();
< #line 192
<       if ((unsigned long )tmp___5 != (unsigned long )mdev->worker.task) {
< #line 192
<         tmp___3 = get_current();
< #line 192
<         tmp___4 = (char *)(& tmp___3->comm);
<       } else {
< #line 192
<         tmp___4 = (char *)"worker";
<       }
< #line 192
<       tmp___6 = tmp___4;
<     } else {
< #line 192
<       tmp___6 = (char *)"asender";
<     }
< #line 192
<     tmp___8 = tmp___6;
<   } else {
< #line 192
<     tmp___8 = (char *)"receiver";
<   }
< #line 192
---
> #line 208
>   tmp___0 = drbd_task_to_thread_name(mdev->tconn, b->bm_task);
> #line 208
>   tmp___1 = get_current();
> #line 208
>   tmp___2 = drbd_task_to_thread_name(mdev->tconn, tmp___1);
> #line 208
9480,9482c9752,9754
<           tmp___8, func, (unsigned long )b->bm_why != (unsigned long )((char *)0) ? b->bm_why : (char *)"?",
<           (unsigned long )b->bm_task != (unsigned long )mdev->receiver.task ? ((unsigned long )b->bm_task != (unsigned long )mdev->asender.task ? ((unsigned long )b->bm_task == (unsigned long )mdev->worker.task ? (char *)"worker" : (char *)"?") : (char *)"asender") : (char *)"receiver");
< #line 198
---
>           tmp___2, func, (unsigned long )b->bm_why != (unsigned long )((char *)0) ? b->bm_why : (char *)"?",
>           tmp___0);
> #line 212
9486c9758
< #line 202 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 214 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
9492,9498c9764,9766
<   struct task_struct *tmp___3 ;
<   char *tmp___4 ;
<   struct task_struct *tmp___5 ;
<   char *tmp___6 ;
<   struct task_struct *tmp___7 ;
<   char *tmp___8 ;
<   struct task_struct *tmp___9 ;
---
>   char *tmp___0 ;
>   struct task_struct *tmp___1 ;
>   char *tmp___2 ;
9501c9769
< #line 204
---
> #line 216
9503c9771
< #line 207
---
> #line 219
9505c9773
< #line 208
---
> #line 220
9507c9775
< #line 209
---
> #line 221
9512,9514c9780,9782
< #line 212
<   tmp = ldv_mutex_trylock_15(& b->bm_change);
< #line 212
---
> #line 224
>   tmp = ldv_mutex_trylock_12(& b->bm_change);
> #line 224
9516c9784
< #line 214
---
> #line 226
9518,9550c9786,9792
< #line 215
<     tmp___9 = get_current();
< #line 215
<     if ((unsigned long )tmp___9 != (unsigned long )mdev->receiver.task) {
< #line 215
<       tmp___7 = get_current();
< #line 215
<       if ((unsigned long )tmp___7 != (unsigned long )mdev->asender.task) {
< #line 215
<         tmp___5 = get_current();
< #line 215
<         if ((unsigned long )tmp___5 != (unsigned long )mdev->worker.task) {
< #line 215
<           tmp___3 = get_current();
< #line 215
<           tmp___4 = (char *)(& tmp___3->comm);
<         } else {
< #line 215
<           tmp___4 = (char *)"worker";
<         }
< #line 215
<         tmp___6 = tmp___4;
<       } else {
< #line 215
<         tmp___6 = (char *)"asender";
<       }
< #line 215
<       tmp___8 = tmp___6;
<     } else {
< #line 215
<       tmp___8 = (char *)"receiver";
<     }
< #line 215
---
> #line 227
>     tmp___0 = drbd_task_to_thread_name(mdev->tconn, b->bm_task);
> #line 227
>     tmp___1 = get_current();
> #line 227
>     tmp___2 = drbd_task_to_thread_name(mdev->tconn, tmp___1);
> #line 227
9552,9555c9794,9797
<              tmp___8, why, (unsigned long )b->bm_why != (unsigned long )((char *)0) ? b->bm_why : (char *)"?",
<              (unsigned long )b->bm_task != (unsigned long )mdev->receiver.task ? ((unsigned long )b->bm_task != (unsigned long )mdev->asender.task ? ((unsigned long )b->bm_task == (unsigned long )mdev->worker.task ? (char *)"worker" : (char *)"?") : (char *)"asender") : (char *)"receiver");
< #line 223
<     ldv_mutex_lock_16(& b->bm_change);
---
>              tmp___2, why, (unsigned long )b->bm_why != (unsigned long )((char *)0) ? b->bm_why : (char *)"?",
>              tmp___0);
> #line 231
>     ldv_mutex_lock_13(& b->bm_change);
9559c9801
< #line 225
---
> #line 233
9561c9803
< #line 226
---
> #line 234
9566c9808
< #line 227
---
> #line 235
9568c9810
< #line 229
---
> #line 237
9570c9812
< #line 230
---
> #line 238
9572c9814
< #line 231
---
> #line 239
9576c9818
< #line 233 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 241 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
9582c9824
< #line 235
---
> #line 243
9584c9826
< #line 236
---
> #line 244
9586c9828
< #line 237
---
> #line 245
9588c9830
< #line 238
---
> #line 246
9593c9835
< #line 241
---
> #line 249
9595c9837
< #line 242
---
> #line 250
9600c9842
< #line 244
---
> #line 252
9602c9844
< #line 245
---
> #line 253
9604c9846
< #line 246
---
> #line 254
9606,9608c9848,9850
< #line 247
<   ldv_mutex_unlock_17(& b->bm_change);
< #line 248
---
> #line 255
>   ldv_mutex_unlock_14(& b->bm_change);
> #line 256
9612c9854
< #line 276 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 287 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
9618c9860
< #line 278
---
> #line 289
9620c9862
< #line 278
---
> #line 289
9622,9627c9864,9869
< #line 278
<     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"),
<                          "i" (278), "i" (12UL));
<     ldv_50525: ;
< #line 278
<     goto ldv_50525;
---
> #line 289
>     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"),
>                          "i" (289), "i" (12UL));
>     ldv_51111: ;
> #line 289
>     goto ldv_51111;
9631,9633c9873,9875
< #line 279
<   page->ldv_14722.private = idx;
< #line 280
---
> #line 290
>   page->ldv_14746.private = idx;
> #line 291
9637c9879
< #line 282 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 293 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
9643,9644c9885,9886
< #line 284
<   return (page->ldv_14722.private & 16777215UL);
---
> #line 295
>   return (page->ldv_14746.private & 16777215UL);
9647c9889
< #line 290 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 301 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
9658c9900
< #line 292
---
> #line 303
9660,9662c9902,9904
< #line 293
<   addr = (void *)(& (*(b->bm_pages + (unsigned long )page_nr))->ldv_14722.private);
< #line 294
---
> #line 304
>   addr = (void *)(& (*(b->bm_pages + (unsigned long )page_nr))->ldv_14746.private);
> #line 305
9664c9906
< #line 294
---
> #line 305
9666,9667c9908,9909
< #line 294
<     goto ldv_50535;
---
> #line 305
>     goto ldv_51121;
9671c9913
< #line 294
---
> #line 305
9673c9915
< #line 294
---
> #line 305
9675c9917
< #line 294
---
> #line 305
9677c9919
< #line 294
---
> #line 305
9679c9921
< #line 294
---
> #line 305
9681c9923
< #line 294
---
> #line 305
9683,9684c9925,9926
<   ldv_50538: 
< #line 294
---
>   ldv_51124: 
> #line 305
9686c9928
< #line 294
---
> #line 305
9688c9930
< #line 294
---
> #line 305
9690,9691c9932,9933
< #line 294
<     goto ldv_50537;
---
> #line 305
>     goto ldv_51123;
9695c9937
< #line 294
---
> #line 305
9697,9700c9939,9942
< #line 294
<   goto ldv_50538;
<   ldv_50537: 
< #line 294
---
> #line 305
>   goto ldv_51124;
>   ldv_51123: 
> #line 305
9702,9703c9944,9945
<   ldv_50535: ;
< #line 297
---
>   ldv_51121: ;
> #line 308
9707c9949
< #line 297 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 308 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
9714c9956
< #line 299
---
> #line 310
9716,9722c9958,9962
< #line 300
<   addr = (void *)(& (*(b->bm_pages + (unsigned long )page_nr))->ldv_14722.private);
< #line 301
<   clear_bit(31, (unsigned long volatile   *)addr);
< #line 302
<   __asm__  volatile   ("": : : "memory");
< #line 303
---
> #line 311
>   addr = (void *)(& (*(b->bm_pages + (unsigned long )page_nr))->ldv_14746.private);
> #line 312
>   clear_bit_unlock(31U, (unsigned long volatile   *)addr);
> #line 313
9724c9964
< #line 304
---
> #line 314
9728c9968
< #line 308 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 318 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
9734,9738c9974,9978
< #line 311
<   clear_bit(29, (unsigned long volatile   *)(& page->ldv_14722.private));
< #line 312
<   clear_bit(28, (unsigned long volatile   *)(& page->ldv_14722.private));
< #line 313
---
> #line 321
>   clear_bit(29, (unsigned long volatile   *)(& page->ldv_14746.private));
> #line 322
>   clear_bit(28, (unsigned long volatile   *)(& page->ldv_14746.private));
> #line 323
9742c9982
< #line 315 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 325 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
9748,9750c9988,10014
< #line 317
<   set_bit(29U, (unsigned long volatile   *)(& page->ldv_14722.private));
< #line 318
---
> #line 327
>   set_bit(29U, (unsigned long volatile   *)(& page->ldv_14746.private));
> #line 328
>   return;
> }
> }
> #line 339 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
> void drbd_bm_mark_for_writeout(struct drbd_conf *mdev , int page_nr ) 
> { 
>   struct page *page ;
> 
>   {
> #line 342
>   if ((size_t )page_nr >= (mdev->bitmap)->bm_number_of_pages) {
> #line 343
>     dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "BAD: page_nr: %u, number_of_pages: %u\n",
>              page_nr, (int )(mdev->bitmap)->bm_number_of_pages);
> #line 345
>     return;
>   } else {
> 
>   }
> #line 347
>   page = *((mdev->bitmap)->bm_pages + (unsigned long )page_nr);
> #line 348
>   set_bit(27U, (unsigned long volatile   *)(& page->ldv_14746.private));
> #line 349
9754c10018
< #line 320 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 351 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
9760,9762c10024,10026
< #line 322
<   addr = (unsigned long const volatile   *)(& page->ldv_14722.private);
< #line 323
---
> #line 353
>   addr = (unsigned long const volatile   *)(& page->ldv_14746.private);
> #line 354
9766c10030
< #line 326 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 357 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
9772,9774c10036,10038
< #line 328
<   set_bit(30U, (unsigned long volatile   *)(& page->ldv_14722.private));
< #line 329
---
> #line 359
>   set_bit(30U, (unsigned long volatile   *)(& page->ldv_14746.private));
> #line 360
9778c10042
< #line 331 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 362 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
9784,9786c10048,10050
< #line 333
<   clear_bit(30, (unsigned long volatile   *)(& page->ldv_14722.private));
< #line 334
---
> #line 364
>   clear_bit(30, (unsigned long volatile   *)(& page->ldv_14746.private));
> #line 365
9790c10054
< #line 336 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 367 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
9796,9798c10060,10062
< #line 338
<   set_bit(28U, (unsigned long volatile   *)(& page->ldv_14722.private));
< #line 339
---
> #line 369
>   set_bit(28U, (unsigned long volatile   *)(& page->ldv_14746.private));
> #line 370
9802c10066
< #line 341 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 372 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
9808,9810c10072,10074
< #line 343
<   tmp = constant_test_bit(28U, (unsigned long const volatile   *)(& page->ldv_14722.private));
< #line 343
---
> #line 374
>   tmp = constant_test_bit(28U, (unsigned long const volatile   *)(& page->ldv_14746.private));
> #line 374
9814c10078
< #line 347 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 378 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
9821c10085
< #line 350
---
> #line 381
9823c10087
< #line 351
---
> #line 382
9825c10089
< #line 351
---
> #line 382
9827,9832c10091,10096
< #line 351
<     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"),
<                          "i" (351), "i" (12UL));
<     ldv_50572: ;
< #line 351
<     goto ldv_50572;
---
> #line 382
>     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"),
>                          "i" (382), "i" (12UL));
>     ldv_51163: ;
> #line 382
>     goto ldv_51163;
9836c10100
< #line 352
---
> #line 383
9840c10104
< #line 355 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 386 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
9847c10111
< #line 358
---
> #line 389
9849c10113
< #line 359
---
> #line 390
9851c10115
< #line 359
---
> #line 390
9853,9858c10117,10122
< #line 359
<     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"),
<                          "i" (359), "i" (12UL));
<     ldv_50578: ;
< #line 359
<     goto ldv_50578;
---
> #line 390
>     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"),
>                          "i" (390), "i" (12UL));
>     ldv_51169: ;
> #line 390
>     goto ldv_51169;
9862c10126
< #line 360
---
> #line 391
9866c10130
< #line 363 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 394 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
9873c10137
< #line 365
---
> #line 396
9875c10139
< #line 366
---
> #line 397
9877c10141
< #line 366
---
> #line 397
9881c10145
< #line 369 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 400 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
9887c10151
< #line 371
---
> #line 402
9889c10153
< #line 371
---
> #line 402
9893c10157
< #line 374 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 405 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
9899c10163
< #line 376
---
> #line 407
9901c10165
< #line 377
---
> #line 408
9905c10169
< #line 379 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 410 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
9911c10175
< #line 381
---
> #line 412
9915c10179
< #line 404 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 435 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
9921c10185
< #line 407
---
> #line 438
9923c10187
< #line 408
---
> #line 439
9928c10192
< #line 410
---
> #line 441
9930,9933c10194,10197
< #line 410
<   goto ldv_50601;
<   ldv_50600: ;
< #line 411
---
> #line 441
>   goto ldv_51192;
>   ldv_51191: ;
> #line 442
9935c10199
< #line 412
---
> #line 443
9938,9939c10202,10203
< #line 415
<     goto ldv_50599;
---
> #line 446
>     goto ldv_51190;
9943c10207
< #line 417
---
> #line 448
9945c10209
< #line 418
---
> #line 449
9947,9948c10211,10212
<   ldv_50599: 
< #line 410
---
>   ldv_51190: 
> #line 441
9950,9951c10214,10215
<   ldv_50601: ;
< #line 410
---
>   ldv_51192: ;
> #line 441
9953,9954c10217,10218
< #line 411
<     goto ldv_50600;
---
> #line 442
>     goto ldv_51191;
9959c10223
< #line 415
---
> #line 446
9963c10227
< #line 422 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 453 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
9969c10233
< #line 424
---
> #line 455
9971c10235
< #line 425
---
> #line 456
9974c10238
< #line 427
---
> #line 458
9977c10241
< #line 428
---
> #line 459
9981c10245
< #line 433 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 464 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
10000c10264
< #line 435
---
> #line 466
10002c10266
< #line 437
---
> #line 468
10004c10268
< #line 438
---
> #line 469
10006c10270
< #line 440
---
> #line 471
10008c10272
< #line 440
---
> #line 471
10010c10274
< #line 440
---
> #line 471
10013c10277
< #line 440
---
> #line 471
10015,10020c10279,10284
< #line 440
<       __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"),
<                            "i" (440), "i" (12UL));
<       ldv_50618: ;
< #line 440
<       goto ldv_50618;
---
> #line 471
>       __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"),
>                            "i" (471), "i" (12UL));
>       ldv_51209: ;
> #line 471
>       goto ldv_51209;
10027c10291
< #line 441
---
> #line 472
10029c10293
< #line 441
---
> #line 472
10031c10295
< #line 441
---
> #line 472
10034c10298
< #line 441
---
> #line 472
10036,10041c10300,10305
< #line 441
<       __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"),
<                            "i" (441), "i" (12UL));
<       ldv_50619: ;
< #line 441
<       goto ldv_50619;
---
> #line 472
>       __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"),
>                            "i" (472), "i" (12UL));
>       ldv_51210: ;
> #line 472
>       goto ldv_51210;
10048c10312
< #line 443
---
> #line 474
10050c10314
< #line 444
---
> #line 475
10055c10319
< #line 451
---
> #line 482
10057c10321
< #line 452
---
> #line 483
10059c10323
< #line 452
---
> #line 483
10061c10325
< #line 453
---
> #line 484
10063c10327
< #line 454
---
> #line 485
10065c10329
< #line 454
---
> #line 485
10067c10331
< #line 454
---
> #line 485
10069c10333
< #line 457
---
> #line 488
10071c10335
< #line 458
---
> #line 489
10076c10340
< #line 459
---
> #line 490
10081c10345
< #line 462
---
> #line 493
10083c10347
< #line 463
---
> #line 494
10085,10088c10349,10352
< #line 463
<     goto ldv_50622;
<     ldv_50621: 
< #line 464
---
> #line 494
>     goto ldv_51213;
>     ldv_51212: 
> #line 495
10090c10354
< #line 463
---
> #line 494
10092,10093c10356,10357
<     ldv_50622: ;
< #line 463
---
>     ldv_51213: ;
> #line 494
10095,10096c10359,10360
< #line 464
<       goto ldv_50621;
---
> #line 495
>       goto ldv_51212;
10101,10104c10365,10368
< #line 465
<     goto ldv_50625;
<     ldv_50624: 
< #line 466
---
> #line 496
>     goto ldv_51216;
>     ldv_51215: 
> #line 497
10106c10370
< #line 467
---
> #line 498
10108c10372
< #line 468
---
> #line 499
10110c10374
< #line 469
---
> #line 500
10112c10376
< #line 470
---
> #line 501
10117c10381
< #line 474
---
> #line 505
10119c10383
< #line 475
---
> #line 506
10121c10385
< #line 465
---
> #line 496
10123,10124c10387,10388
<     ldv_50625: ;
< #line 465
---
>     ldv_51216: ;
> #line 496
10126,10127c10390,10391
< #line 466
<       goto ldv_50624;
---
> #line 497
>       goto ldv_51215;
10133c10397
< #line 478
---
> #line 509
10135,10138c10399,10402
< #line 478
<     goto ldv_50628;
<     ldv_50627: 
< #line 479
---
> #line 509
>     goto ldv_51219;
>     ldv_51218: 
> #line 510
10140c10404
< #line 478
---
> #line 509
10142,10143c10406,10407
<     ldv_50628: ;
< #line 478
---
>     ldv_51219: ;
> #line 509
10145,10146c10409,10410
< #line 479
<       goto ldv_50627;
---
> #line 510
>       goto ldv_51218;
10152c10416
< #line 485
---
> #line 516
10154c10418
< #line 486
---
> #line 517
10157c10421
< #line 488
---
> #line 519
10160c10424
< #line 490
---
> #line 521
10164c10428
< #line 497 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 528 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
10176c10440
< #line 499
---
> #line 530
10178c10442
< #line 500
---
> #line 531
10180c10444
< #line 500
---
> #line 531
10182c10446
< #line 500
---
> #line 531
10184,10186c10448,10450
< #line 500
<     warn_slowpath_null("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<                        500);
---
> #line 531
>     warn_slowpath_null("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
>                        531);
10190c10454
< #line 500
---
> #line 531
10192c10456
< #line 501
---
> #line 532
10194c10458
< #line 501
---
> #line 532
10196c10460
< #line 502
---
> #line 533
10198c10462
< #line 503
---
> #line 534
10203c10467
< #line 504
---
> #line 535
10205c10469
< #line 504
---
> #line 535
10207c10471
< #line 505
---
> #line 536
10209c10473
< #line 506
---
> #line 537
10211c10475
< #line 508
---
> #line 539
10213c10477
< #line 510
---
> #line 541
10217c10481
< #line 513 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 544 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
10220c10484,10485
<   int _b ;
---
>   bool _bool ;
>   int tmp ;
10223,10230c10488,10494
< #line 515
<   _b = (unsigned long )mdev->bitmap == (unsigned long )((struct drbd_bitmap *)0);
< #line 515
<   if (_b != 0) {
< #line 515
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_bm_capacity", (char *)"!mdev->bitmap", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             515);
---
> #line 546
>   _bool = (unsigned long )mdev->bitmap != (unsigned long )((struct drbd_bitmap *)0);
> #line 546
>   if (! _bool) {
> #line 546
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"mdev->bitmap", "drbd_bm_capacity");
10234,10236c10498,10508
< #line 515
<   if (_b != 0) {
< #line 515
---
> #line 546
>   if (_bool) {
> #line 546
>     tmp = 0;
>   } else {
> #line 546
>     tmp = 1;
>   }
> #line 546
>   if (tmp) {
> #line 547
10241c10513
< #line 516
---
> #line 548
10245c10517
< #line 521 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 553 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
10248c10520,10521
<   int _b ;
---
>   bool _bool ;
>   int tmp ;
10251,10258c10524,10530
< #line 523
<   _b = (unsigned long )mdev->bitmap == (unsigned long )((struct drbd_bitmap *)0);
< #line 523
<   if (_b != 0) {
< #line 523
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_bm_cleanup", (char *)"!mdev->bitmap", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             523);
---
> #line 555
>   _bool = (unsigned long )mdev->bitmap != (unsigned long )((struct drbd_bitmap *)0);
> #line 555
>   if (! _bool) {
> #line 555
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"mdev->bitmap", "drbd_bm_cleanup");
10262,10264c10534,10544
< #line 523
<   if (_b != 0) {
< #line 523
---
> #line 555
>   if (_bool) {
> #line 555
>     tmp = 0;
>   } else {
> #line 555
>     tmp = 1;
>   }
> #line 555
>   if (tmp) {
> #line 556
10269c10549
< #line 524
---
> #line 557
10271c10551
< #line 525
---
> #line 558
10273c10553
< #line 526
---
> #line 559
10275c10555
< #line 527
---
> #line 560
10277c10557
< #line 528
---
> #line 561
10281c10561
< #line 538 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 571 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
10292c10572
< #line 543
---
> #line 576
10294c10574
< #line 546
---
> #line 579
10296c10576
< #line 548
---
> #line 581
10298c10578
< #line 551
---
> #line 584
10300c10580
< #line 553
---
> #line 586
10302c10582
< #line 554
---
> #line 587
10304c10584
< #line 555
---
> #line 588
10306c10586
< #line 560
---
> #line 593
10308c10588
< #line 560
---
> #line 593
10310c10590
< #line 561
---
> #line 594
10312c10592
< #line 562
---
> #line 595
10317c10597
< #line 571
---
> #line 604
10319c10599
< #line 572
---
> #line 605
10323c10603
< #line 575 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 608 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
10332c10612
< #line 582
---
> #line 615
10334c10614
< #line 584
---
> #line 617
10336c10616
< #line 587
---
> #line 620
10338c10618
< #line 589
---
> #line 622
10340c10620
< #line 590
---
> #line 623
10342c10622
< #line 591
---
> #line 624
10344c10624
< #line 596
---
> #line 629
10346c10626
< #line 597
---
> #line 630
10351c10631
< #line 605
---
> #line 638
10353c10633
< #line 606
---
> #line 639
10357c10637
< #line 610 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 643 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
10371c10651
< #line 613
---
> #line 646
10373c10653
< #line 614
---
> #line 647
10375c10655
< #line 618
---
> #line 651
10377,10380c10657,10660
< #line 618
<   goto ldv_50680;
<   ldv_50679: 
< #line 619
---
> #line 651
>   goto ldv_51271;
>   ldv_51270: 
> #line 652
10382c10662
< #line 620
---
> #line 653
10384,10387c10664,10667
< #line 620
<   goto ldv_50676;
<   ldv_50675: 
< #line 621
---
> #line 653
>   goto ldv_51267;
>   ldv_51266: 
> #line 654
10389c10669
< #line 621
---
> #line 654
10391c10671
< #line 620
---
> #line 653
10393,10394c10673,10674
<   ldv_50676: ;
< #line 620
---
>   ldv_51267: ;
> #line 653
10396,10397c10676,10677
< #line 621
<     goto ldv_50675;
---
> #line 654
>     goto ldv_51266;
10401c10681
< #line 622
---
> #line 655
10403,10406c10683,10686
< #line 623
<   __might_sleep("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<                 623, 0);
< #line 623
---
> #line 656
>   __might_sleep("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
>                 656, 0);
> #line 656
10408c10688
< #line 618
---
> #line 651
10410,10411c10690,10691
<   ldv_50680: ;
< #line 618
---
>   ldv_51271: ;
> #line 651
10413,10414c10693,10694
< #line 619
<     goto ldv_50679;
---
> #line 652
>     goto ldv_51270;
10418c10698
< #line 626
---
> #line 659
10420c10700
< #line 627
---
> #line 660
10422c10702
< #line 628
---
> #line 661
10424,10427c10704,10707
< #line 628
<   goto ldv_50683;
<   ldv_50682: 
< #line 629
---
> #line 661
>   goto ldv_51274;
>   ldv_51273: 
> #line 662
10429c10709
< #line 629
---
> #line 662
10431c10711
< #line 628
---
> #line 661
10433,10434c10713,10714
<   ldv_50683: ;
< #line 628
---
>   ldv_51274: ;
> #line 661
10436,10437c10716,10717
< #line 629
<     goto ldv_50682;
---
> #line 662
>     goto ldv_51273;
10441c10721
< #line 630
---
> #line 663
10443c10723
< #line 631
---
> #line 664
10445c10725
< #line 631
---
> #line 664
10447c10727
< #line 635
---
> #line 668
10449c10729
< #line 636
---
> #line 669
10453c10733
< #line 640 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 673 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
10465c10745
< #line 646
---
> #line 679
10467c10747
< #line 648
---
> #line 681
10469c10749
< #line 649
---
> #line 682
10471c10751
< #line 650
---
> #line 683
10476,10479c10756,10759
< #line 653
<   goto ldv_50700;
<   ldv_50699: 
< #line 654
---
> #line 686
>   goto ldv_51291;
>   ldv_51290: 
> #line 687
10481c10761
< #line 654
---
> #line 687
10483c10763
< #line 654
---
> #line 687
10485c10765
< #line 655
---
> #line 688
10487c10767
< #line 656
---
> #line 689
10489c10769
< #line 657
---
> #line 690
10491c10771
< #line 658
---
> #line 691
10493c10773
< #line 659
---
> #line 692
10496c10776
< #line 662
---
> #line 695
10499c10779
< #line 663
---
> #line 696
10501c10781
< #line 664
---
> #line 697
10503c10783
< #line 665
---
> #line 698
10505,10506c10785,10786
<   ldv_50700: ;
< #line 653
---
>   ldv_51291: ;
> #line 686
10508,10509c10788,10789
< #line 654
<     goto ldv_50699;
---
> #line 687
>     goto ldv_51290;
10514c10794
< #line 658
---
> #line 691
10518c10798
< #line 677 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 710 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
10534,10535c10814,10815
<   int _b ;
<   unsigned long tmp ;
---
>   bool _bool ;
>   int tmp ;
10537,10538c10817,10819
<   size_t tmp___1 ;
<   sector_t tmp___2 ;
---
>   unsigned long tmp___1 ;
>   size_t tmp___2 ;
>   sector_t tmp___3 ;
10540d10820
<   int tmp___3 ;
10541a10822
>   int tmp___5 ;
10544c10825
< #line 679
---
> #line 712
10546c10827
< #line 682
---
> #line 715
10548c10829
< #line 683
---
> #line 716
10550,10557c10831,10837
< #line 686
<   _b = (unsigned long )b == (unsigned long )((struct drbd_bitmap *)0);
< #line 686
<   if (_b != 0) {
< #line 686
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_bm_resize", (char *)"!b", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             686);
---
> #line 719
>   _bool = (unsigned long )b != (unsigned long )((struct drbd_bitmap *)0);
> #line 719
>   if (! _bool) {
> #line 719
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"b", "drbd_bm_resize");
10561,10563c10841,10851
< #line 686
<   if (_b != 0) {
< #line 686
---
> #line 719
>   if (_bool) {
> #line 719
>     tmp = 0;
>   } else {
> #line 719
>     tmp = 1;
>   }
> #line 719
>   if (tmp) {
> #line 720
10568c10856
< #line 688
---
> #line 722
10570c10858
< #line 690
---
> #line 724
10573c10861
< #line 693
---
> #line 727
10575c10863
< #line 694
---
> #line 728
10580c10868
< #line 696
---
> #line 730
10582c10870
< #line 698
---
> #line 732
10584c10872
< #line 699
---
> #line 733
10586c10874
< #line 700
---
> #line 734
10588c10876
< #line 701
---
> #line 735
10590c10878
< #line 702
---
> #line 736
10592c10880
< #line 703
---
> #line 737
10594,10598c10882,10890
< #line 704
<     tmp___2 = 0UL;
< #line 704
<     b->bm_dev_capacity = tmp___2;
< #line 704
---
> #line 738
>     tmp___3 = 0UL;
> #line 738
>     b->bm_dev_capacity = tmp___3;
> #line 738
>     tmp___2 = tmp___3;
> #line 738
>     b->bm_words = tmp___2;
> #line 738
10600,10602c10892,10894
< #line 704
<     b->bm_words = tmp___1;
< #line 704
---
> #line 738
>     b->bm_bits = tmp___1;
> #line 738
10604,10612c10896,10900
< #line 704
<     b->bm_bits = tmp___0;
< #line 704
<     tmp = tmp___0;
< #line 704
<     b->bm_set = tmp;
< #line 704
<     b->bm_number_of_pages = tmp;
< #line 709
---
> #line 738
>     b->bm_set = tmp___0;
> #line 738
>     b->bm_number_of_pages = tmp___0;
> #line 743
10614c10902
< #line 710
---
> #line 744
10616c10904
< #line 711
---
> #line 745
10618c10906
< #line 712
---
> #line 746
10623c10911
< #line 714
---
> #line 748
10625c10913
< #line 721
---
> #line 755
10627,10631c10915,10919
< #line 723
<   tmp___3 = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 723
<   if (tmp___3 != 0) {
< #line 724
---
> #line 757
>   tmp___4 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 757
>   if (tmp___4 != 0) {
> #line 758
10633c10921
< #line 725
---
> #line 759
10635c10923
< #line 726
---
> #line 760
10637c10925
< #line 727
---
> #line 761
10640c10928
< #line 728
---
> #line 762
10643c10931
< #line 729
---
> #line 763
10645c10933
< #line 730
---
> #line 764
10653c10941
< #line 734
---
> #line 768
10655c10943
< #line 735
---
> #line 769
10657c10945
< #line 736
---
> #line 770
10659c10947
< #line 737
---
> #line 771
10661c10949
< #line 737
---
> #line 771
10663,10664c10951,10952
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<               737);
---
>               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
>               771);
10668c10956
< #line 738
---
> #line 772
10671,10675c10959,10963
< #line 740
<     tmp___4 = drbd_insert_fault(mdev, 7U);
< #line 740
<     if (tmp___4 != 0) {
< #line 741
---
> #line 774
>     tmp___5 = drbd_insert_fault(mdev, 7U);
> #line 774
>     if (tmp___5 != 0) {
> #line 775
10678c10966
< #line 743
---
> #line 777
10682c10970
< #line 746
---
> #line 780
10684c10972
< #line 747
---
> #line 781
10686c10974
< #line 748
---
> #line 782
10691c10979
< #line 751
---
> #line 785
10693c10981
< #line 752
---
> #line 786
10695c10983
< #line 753
---
> #line 787
10697c10985
< #line 754
---
> #line 788
10699c10987
< #line 756
---
> #line 790
10701c10989
< #line 757
---
> #line 791
10703c10991
< #line 758
---
> #line 792
10708c10996
< #line 760
---
> #line 794
10710c10998
< #line 761
---
> #line 795
10712c11000
< #line 762
---
> #line 796
10714c11002
< #line 763
---
> #line 797
10716c11004
< #line 764
---
> #line 798
10718c11006
< #line 766
---
> #line 800
10720c11008
< #line 767
---
> #line 801
10722c11010
< #line 768
---
> #line 802
10724c11012
< #line 769
---
> #line 803
10727c11015
< #line 771
---
> #line 805
10733c11021
< #line 775
---
> #line 809
10735c11023
< #line 777
---
> #line 811
10740c11028
< #line 780
---
> #line 814
10742c11030
< #line 782
---
> #line 816
10744c11032
< #line 783
---
> #line 817
10746c11034
< #line 784
---
> #line 818
10751c11039
< #line 785
---
> #line 819
10753c11041
< #line 786
---
> #line 820
10758c11046
< #line 787
---
> #line 821
10762c11050
< #line 790
---
> #line 824
10764c11052
< #line 791
---
> #line 825
10768c11056
< #line 802 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 836 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
10774,10776c11062,11066
<   int _b ;
<   int _b___0 ;
<   raw_spinlock_t *tmp ;
---
>   bool _bool ;
>   int tmp ;
>   bool _bool___0 ;
>   int tmp___0 ;
>   raw_spinlock_t *tmp___1 ;
10779c11069
< #line 804
---
> #line 838
10781,10788c11071,11077
< #line 808
<   _b = (unsigned long )b == (unsigned long )((struct drbd_bitmap *)0);
< #line 808
<   if (_b != 0) {
< #line 808
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "_drbd_bm_total_weight", (char *)"!b", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             808);
---
> #line 842
>   _bool = (unsigned long )b != (unsigned long )((struct drbd_bitmap *)0);
> #line 842
>   if (! _bool) {
> #line 842
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"b", "_drbd_bm_total_weight");
10792,10794c11081,11091
< #line 808
<   if (_b != 0) {
< #line 808
---
> #line 842
>   if (_bool) {
> #line 842
>     tmp = 0;
>   } else {
> #line 842
>     tmp = 1;
>   }
> #line 842
>   if (tmp) {
> #line 843
10799,10806c11096,11102
< #line 809
<   _b___0 = (unsigned long )b->bm_pages == (unsigned long )((struct page **)0);
< #line 809
<   if (_b___0 != 0) {
< #line 809
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "_drbd_bm_total_weight", (char *)"!b->bm_pages", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             809);
---
> #line 844
>   _bool___0 = (unsigned long )b->bm_pages != (unsigned long )((struct page **)0);
> #line 844
>   if (! _bool___0) {
> #line 844
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"b->bm_pages", "_drbd_bm_total_weight");
10810,10812c11106,11116
< #line 809
<   if (_b___0 != 0) {
< #line 809
---
> #line 844
>   if (_bool___0) {
> #line 844
>     tmp___0 = 0;
>   } else {
> #line 844
>     tmp___0 = 1;
>   }
> #line 844
>   if (tmp___0) {
> #line 845
10817,10821c11121,11125
< #line 811
<   tmp = spinlock_check(& b->bm_lock);
< #line 811
<   flags = _raw_spin_lock_irqsave(tmp);
< #line 812
---
> #line 847
>   tmp___1 = spinlock_check(& b->bm_lock);
> #line 847
>   flags = _raw_spin_lock_irqsave(tmp___1);
> #line 848
10823c11127
< #line 813
---
> #line 849
10825c11129
< #line 815
---
> #line 851
10829c11133
< #line 818 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 854 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
10836c11140
< #line 822
---
> #line 858
10838c11142
< #line 822
---
> #line 858
10840c11144
< #line 823
---
> #line 859
10845c11149
< #line 824
---
> #line 860
10847c11151
< #line 825
---
> #line 861
10849c11153
< #line 826
---
> #line 862
10853c11157
< #line 829 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 865 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
10857,10858c11161,11164
<   int _b ;
<   int _b___0 ;
---
>   bool _bool ;
>   int tmp ;
>   bool _bool___0 ;
>   int tmp___0 ;
10861c11167
< #line 831
---
> #line 867
10863,10870c11169,11175
< #line 832
<   _b = (unsigned long )b == (unsigned long )((struct drbd_bitmap *)0);
< #line 832
<   if (_b != 0) {
< #line 832
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_bm_words", (char *)"!b", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             832);
---
> #line 868
>   _bool = (unsigned long )b != (unsigned long )((struct drbd_bitmap *)0);
> #line 868
>   if (! _bool) {
> #line 868
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"b", "drbd_bm_words");
10874,10876c11179,11189
< #line 832
<   if (_b != 0) {
< #line 832
---
> #line 868
>   if (_bool) {
> #line 868
>     tmp = 0;
>   } else {
> #line 868
>     tmp = 1;
>   }
> #line 868
>   if (tmp) {
> #line 869
10881,10888c11194,11200
< #line 833
<   _b___0 = (unsigned long )b->bm_pages == (unsigned long )((struct page **)0);
< #line 833
<   if (_b___0 != 0) {
< #line 833
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_bm_words", (char *)"!b->bm_pages", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             833);
---
> #line 870
>   _bool___0 = (unsigned long )b->bm_pages != (unsigned long )((struct page **)0);
> #line 870
>   if (! _bool___0) {
> #line 870
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"b->bm_pages", "drbd_bm_words");
10892,10894c11204,11214
< #line 833
<   if (_b___0 != 0) {
< #line 833
---
> #line 870
>   if (_bool___0) {
> #line 870
>     tmp___0 = 0;
>   } else {
> #line 870
>     tmp___0 = 1;
>   }
> #line 870
>   if (tmp___0) {
> #line 871
10899c11219
< #line 835
---
> #line 873
10903c11223
< #line 838 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 876 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
10907c11227,11228
<   int _b ;
---
>   bool _bool ;
>   int tmp ;
10910c11231
< #line 840
---
> #line 878
10912,10919c11233,11239
< #line 841
<   _b = (unsigned long )b == (unsigned long )((struct drbd_bitmap *)0);
< #line 841
<   if (_b != 0) {
< #line 841
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_bm_bits", (char *)"!b", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             841);
---
> #line 879
>   _bool = (unsigned long )b != (unsigned long )((struct drbd_bitmap *)0);
> #line 879
>   if (! _bool) {
> #line 879
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"b", "drbd_bm_bits");
10923,10925c11243,11253
< #line 841
<   if (_b != 0) {
< #line 841
---
> #line 879
>   if (_bool) {
> #line 879
>     tmp = 0;
>   } else {
> #line 879
>     tmp = 1;
>   }
> #line 879
>   if (tmp) {
> #line 880
10930c11258
< #line 843
---
> #line 882
10934c11262
< #line 851 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 890 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
10945,10946c11273,11276
<   int _b ;
<   int _b___0 ;
---
>   bool _bool ;
>   int tmp ;
>   bool _bool___0 ;
>   int tmp___0 ;
10948c11278
<   long tmp ;
---
>   long tmp___1 ;
10950c11280
<   long tmp___0 ;
---
>   long tmp___2 ;
10953,10957c11283,11287
<   unsigned long *tmp___1 ;
<   unsigned long *tmp___2 ;
<   unsigned long tmp___3 ;
<   size_t tmp___4 ;
<   int tmp___5 ;
---
>   unsigned long *tmp___3 ;
>   unsigned long *tmp___4 ;
>   unsigned long tmp___5 ;
>   size_t tmp___6 ;
>   int tmp___7 ;
10960c11290
< #line 854
---
> #line 893
10962c11292
< #line 860
---
> #line 899
10964,10971c11294,11300
< #line 862
<   _b = (unsigned long )b == (unsigned long )((struct drbd_bitmap *)0);
< #line 862
<   if (_b != 0) {
< #line 862
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_bm_merge_lel", (char *)"!b", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             862);
---
> #line 901
>   _bool = (unsigned long )b != (unsigned long )((struct drbd_bitmap *)0);
> #line 901
>   if (! _bool) {
> #line 901
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"b", "drbd_bm_merge_lel");
10975,10977c11304,11314
< #line 862
<   if (_b != 0) {
< #line 862
---
> #line 901
>   if (_bool) {
> #line 901
>     tmp = 0;
>   } else {
> #line 901
>     tmp = 1;
>   }
> #line 901
>   if (tmp) {
> #line 902
10982,10989c11319,11325
< #line 863
<   _b___0 = (unsigned long )b->bm_pages == (unsigned long )((struct page **)0);
< #line 863
<   if (_b___0 != 0) {
< #line 863
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_bm_merge_lel", (char *)"!b->bm_pages", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             863);
---
> #line 903
>   _bool___0 = (unsigned long )b->bm_pages != (unsigned long )((struct page **)0);
> #line 903
>   if (! _bool___0) {
> #line 903
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"b->bm_pages", "drbd_bm_merge_lel");
10993,10995c11329,11339
< #line 863
<   if (_b___0 != 0) {
< #line 863
---
> #line 903
>   if (_bool___0) {
> #line 903
>     tmp___0 = 0;
>   } else {
> #line 903
>     tmp___0 = 1;
>   }
> #line 903
>   if (tmp___0) {
> #line 904
11000c11344
< #line 864
---
> #line 905
11002c11346
< #line 865
---
> #line 906
11007c11351
< #line 866
---
> #line 907
11009,11015c11353,11359
< #line 866
<   tmp = __builtin_expect(__ret_warn_on != 0, 0L);
< #line 866
<   if (tmp != 0L) {
< #line 866
<     warn_slowpath_null("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<                        866);
---
> #line 907
>   tmp___1 = __builtin_expect(__ret_warn_on != 0, 0L);
> #line 907
>   if (tmp___1 != 0L) {
> #line 907
>     warn_slowpath_null("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
>                        907);
11019c11363
< #line 866
---
> #line 907
11021c11365
< #line 867
---
> #line 908
11023,11029c11367,11373
< #line 867
<   tmp___0 = __builtin_expect(__ret_warn_on___0 != 0, 0L);
< #line 867
<   if (tmp___0 != 0L) {
< #line 867
<     warn_slowpath_null("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<                        867);
---
> #line 908
>   tmp___2 = __builtin_expect(__ret_warn_on___0 != 0, 0L);
> #line 908
>   if (tmp___2 != 0L) {
> #line 908
>     warn_slowpath_null("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
>                        908);
11033c11377
< #line 867
---
> #line 908
11035c11379
< #line 869
---
> #line 910
11037,11040c11381,11384
< #line 870
<   goto ldv_50789;
<   ldv_50788: 
< #line 871
---
> #line 911
>   goto ldv_51380;
>   ldv_51379: 
> #line 912
11042c11386
< #line 871
---
> #line 912
11044c11388
< #line 871
---
> #line 912
11046c11390
< #line 872
---
> #line 913
11048c11392
< #line 873
---
> #line 914
11050c11394
< #line 874
---
> #line 915
11052c11396
< #line 875
---
> #line 916
11054,11057c11398,11401
< #line 876
<   goto ldv_50786;
<   ldv_50785: 
< #line 877
---
> #line 917
>   goto ldv_51377;
>   ldv_51376: 
> #line 918
11059,11061c11403,11405
< #line 878
<   tmp___1 = buffer;
< #line 878
---
> #line 919
>   tmp___3 = buffer;
> #line 919
11063,11067c11407,11411
< #line 878
<   word = *bm | *tmp___1;
< #line 879
<   tmp___2 = bm;
< #line 879
---
> #line 919
>   word = *bm | *tmp___3;
> #line 920
>   tmp___4 = bm;
> #line 920
11069,11078c11413,11422
< #line 879
<   *tmp___2 = word;
< #line 880
<   tmp___3 = hweight_long(word);
< #line 880
<   b->bm_set = b->bm_set + (tmp___3 - bits);
<   ldv_50786: 
< #line 876
<   tmp___4 = do_now;
< #line 876
---
> #line 920
>   *tmp___4 = word;
> #line 921
>   tmp___5 = hweight_long(word);
> #line 921
>   b->bm_set = b->bm_set + (tmp___5 - bits);
>   ldv_51377: 
> #line 917
>   tmp___6 = do_now;
> #line 917
11080,11083c11424,11427
< #line 876
<   if (tmp___4 != 0UL) {
< #line 877
<     goto ldv_50785;
---
> #line 917
>   if (tmp___6 != 0UL) {
> #line 918
>     goto ldv_51376;
11087c11431
< #line 882
---
> #line 923
11089c11433
< #line 883
---
> #line 924
11091,11092c11435,11436
<   ldv_50789: ;
< #line 870
---
>   ldv_51380: ;
> #line 911
11094,11095c11438,11439
< #line 871
<     goto ldv_50788;
---
> #line 912
>     goto ldv_51379;
11100c11444
< #line 890
---
> #line 931
11102,11105c11446,11449
< #line 891
<     tmp___5 = bm_clear_surplus(b);
< #line 891
<     b->bm_set = b->bm_set - (unsigned long )tmp___5;
---
> #line 932
>     tmp___7 = bm_clear_surplus(b);
> #line 932
>     b->bm_set = b->bm_set - (unsigned long )tmp___7;
11109c11453
< #line 892
---
> #line 933
11111c11455
< #line 893
---
> #line 934
11115c11459
< #line 898 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 939 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
11123,11124c11467,11470
<   int _b ;
<   int _b___0 ;
---
>   bool _bool ;
>   int tmp ;
>   bool _bool___0 ;
>   int tmp___0 ;
11127,11130c11473,11476
<   unsigned int tmp ;
<   unsigned long *tmp___0 ;
<   unsigned long *tmp___1 ;
<   size_t tmp___2 ;
---
>   unsigned int tmp___1 ;
>   unsigned long *tmp___2 ;
>   unsigned long *tmp___3 ;
>   size_t tmp___4 ;
11133c11479
< #line 901
---
> #line 942
11135c11481
< #line 905
---
> #line 946
11137,11144c11483,11489
< #line 907
<   _b = (unsigned long )b == (unsigned long )((struct drbd_bitmap *)0);
< #line 907
<   if (_b != 0) {
< #line 907
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_bm_get_lel", (char *)"!b", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             907);
---
> #line 948
>   _bool = (unsigned long )b != (unsigned long )((struct drbd_bitmap *)0);
> #line 948
>   if (! _bool) {
> #line 948
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"b", "drbd_bm_get_lel");
11148,11150c11493,11503
< #line 907
<   if (_b != 0) {
< #line 907
---
> #line 948
>   if (_bool) {
> #line 948
>     tmp = 0;
>   } else {
> #line 948
>     tmp = 1;
>   }
> #line 948
>   if (tmp) {
> #line 949
11155,11162c11508,11514
< #line 908
<   _b___0 = (unsigned long )b->bm_pages == (unsigned long )((struct page **)0);
< #line 908
<   if (_b___0 != 0) {
< #line 908
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_bm_get_lel", (char *)"!b->bm_pages", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             908);
---
> #line 950
>   _bool___0 = (unsigned long )b->bm_pages != (unsigned long )((struct page **)0);
> #line 950
>   if (! _bool___0) {
> #line 950
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"b->bm_pages", "drbd_bm_get_lel");
11166,11168c11518,11528
< #line 908
<   if (_b___0 != 0) {
< #line 908
---
> #line 950
>   if (_bool___0) {
> #line 950
>     tmp___0 = 0;
>   } else {
> #line 950
>     tmp___0 = 1;
>   }
> #line 950
>   if (tmp___0) {
> #line 951
11173c11533
< #line 910
---
> #line 953
11175c11535
< #line 911
---
> #line 954
11177c11537
< #line 914
---
> #line 957
11181,11184c11541,11544
< #line 919
<     goto ldv_50814;
<     ldv_50813: 
< #line 920
---
> #line 962
>     goto ldv_51405;
>     ldv_51404: 
> #line 963
11186c11546
< #line 920
---
> #line 963
11188c11548
< #line 920
---
> #line 963
11190,11194c11550,11554
< #line 921
<     tmp = bm_word_to_page_idx(b, offset);
< #line 921
<     p_addr = bm_map_pidx(b, tmp);
< #line 922
---
> #line 964
>     tmp___1 = bm_word_to_page_idx(b, offset);
> #line 964
>     p_addr = bm_map_pidx(b, tmp___1);
> #line 965
11196c11556
< #line 923
---
> #line 966
11198,11203c11558,11563
< #line 924
<     goto ldv_50811;
<     ldv_50810: 
< #line 925
<     tmp___0 = buffer;
< #line 925
---
> #line 967
>     goto ldv_51402;
>     ldv_51401: 
> #line 968
>     tmp___2 = buffer;
> #line 968
11205,11207c11565,11567
< #line 925
<     tmp___1 = bm;
< #line 925
---
> #line 968
>     tmp___3 = bm;
> #line 968
11209,11214c11569,11574
< #line 925
<     *tmp___0 = *tmp___1;
<     ldv_50811: 
< #line 924
<     tmp___2 = do_now;
< #line 924
---
> #line 968
>     *tmp___2 = *tmp___3;
>     ldv_51402: 
> #line 967
>     tmp___4 = do_now;
> #line 967
11216,11219c11576,11579
< #line 924
<     if (tmp___2 != 0UL) {
< #line 925
<       goto ldv_50810;
---
> #line 967
>     if (tmp___4 != 0UL) {
> #line 968
>       goto ldv_51401;
11223c11583
< #line 926
---
> #line 969
11225,11226c11585,11586
<     ldv_50814: ;
< #line 919
---
>     ldv_51405: ;
> #line 962
11228,11229c11588,11589
< #line 920
<       goto ldv_50813;
---
> #line 963
>       goto ldv_51404;
11235c11595
< #line 929
---
> #line 972
11237c11597
< #line 930
---
> #line 973
11241c11601
< #line 933 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 976 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
11245,11246c11605,11608
<   int _b ;
<   int _b___0 ;
---
>   bool _bool ;
>   int tmp ;
>   bool _bool___0 ;
>   int tmp___0 ;
11249c11611
< #line 935
---
> #line 978
11251,11258c11613,11619
< #line 936
<   _b = (unsigned long )b == (unsigned long )((struct drbd_bitmap *)0);
< #line 936
<   if (_b != 0) {
< #line 936
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_bm_set_all", (char *)"!b", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             936);
---
> #line 979
>   _bool = (unsigned long )b != (unsigned long )((struct drbd_bitmap *)0);
> #line 979
>   if (! _bool) {
> #line 979
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"b", "drbd_bm_set_all");
11262,11264c11623,11633
< #line 936
<   if (_b != 0) {
< #line 936
---
> #line 979
>   if (_bool) {
> #line 979
>     tmp = 0;
>   } else {
> #line 979
>     tmp = 1;
>   }
> #line 979
>   if (tmp) {
> #line 980
11269,11276c11638,11644
< #line 937
<   _b___0 = (unsigned long )b->bm_pages == (unsigned long )((struct page **)0);
< #line 937
<   if (_b___0 != 0) {
< #line 937
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_bm_set_all", (char *)"!b->bm_pages", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             937);
---
> #line 981
>   _bool___0 = (unsigned long )b->bm_pages != (unsigned long )((struct page **)0);
> #line 981
>   if (! _bool___0) {
> #line 981
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"b->bm_pages", "drbd_bm_set_all");
11280,11282c11648,11658
< #line 937
<   if (_b___0 != 0) {
< #line 937
---
> #line 981
>   if (_bool___0) {
> #line 981
>     tmp___0 = 0;
>   } else {
> #line 981
>     tmp___0 = 1;
>   }
> #line 981
>   if (tmp___0) {
> #line 982
11287c11663
< #line 939
---
> #line 984
11289c11665
< #line 940
---
> #line 985
11291c11667
< #line 941
---
> #line 986
11293c11669
< #line 942
---
> #line 987
11295c11671
< #line 943
---
> #line 988
11297c11673
< #line 944
---
> #line 989
11301c11677
< #line 947 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 992 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
11305,11306c11681,11684
<   int _b ;
<   int _b___0 ;
---
>   bool _bool ;
>   int tmp ;
>   bool _bool___0 ;
>   int tmp___0 ;
11309c11687
< #line 949
---
> #line 994
11311,11318c11689,11695
< #line 950
<   _b = (unsigned long )b == (unsigned long )((struct drbd_bitmap *)0);
< #line 950
<   if (_b != 0) {
< #line 950
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_bm_clear_all", (char *)"!b", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             950);
---
> #line 995
>   _bool = (unsigned long )b != (unsigned long )((struct drbd_bitmap *)0);
> #line 995
>   if (! _bool) {
> #line 995
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"b", "drbd_bm_clear_all");
11322,11324c11699,11709
< #line 950
<   if (_b != 0) {
< #line 950
---
> #line 995
>   if (_bool) {
> #line 995
>     tmp = 0;
>   } else {
> #line 995
>     tmp = 1;
>   }
> #line 995
>   if (tmp) {
> #line 996
11329,11336c11714,11720
< #line 951
<   _b___0 = (unsigned long )b->bm_pages == (unsigned long )((struct page **)0);
< #line 951
<   if (_b___0 != 0) {
< #line 951
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_bm_clear_all", (char *)"!b->bm_pages", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             951);
---
> #line 997
>   _bool___0 = (unsigned long )b->bm_pages != (unsigned long )((struct page **)0);
> #line 997
>   if (! _bool___0) {
> #line 997
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"b->bm_pages", "drbd_bm_clear_all");
11340,11342c11724,11734
< #line 951
<   if (_b___0 != 0) {
< #line 951
---
> #line 997
>   if (_bool___0) {
> #line 997
>     tmp___0 = 0;
>   } else {
> #line 997
>     tmp___0 = 1;
>   }
> #line 997
>   if (tmp___0) {
> #line 998
11347c11739
< #line 953
---
> #line 1000
11349c11741
< #line 954
---
> #line 1001
11351c11743
< #line 955
---
> #line 1002
11353c11745
< #line 956
---
> #line 1003
11355c11747
< #line 957
---
> #line 1004
11359c11751
< #line 970 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1018 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
11366c11758
< #line 972
---
> #line 1020
11368c11760
< #line 972
---
> #line 1020
11370c11762
< #line 974
---
> #line 1022
11372c11764
< #line 975
---
> #line 1023
11374c11766
< #line 976
---
> #line 1024
11378c11770
< #line 979 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1027 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
11394c11786
< #line 981
---
> #line 1029
11396c11788
< #line 982
---
> #line 1030
11398c11790
< #line 983
---
> #line 1031
11400c11792
< #line 984
---
> #line 1032
11402c11794
< #line 984
---
> #line 1032
11404c11796
< #line 985
---
> #line 1033
11406c11798
< #line 992
---
> #line 1040
11408c11800
< #line 993
---
> #line 1041
11413c11805
< #line 995
---
> #line 1043
11415c11807
< #line 995
---
> #line 1043
11417c11809
< #line 995
---
> #line 1043
11419c11811
< #line 997
---
> #line 1045
11428c11820
< #line 999
---
> #line 1047
11430c11822
< #line 1002
---
> #line 1050
11432c11824
< #line 1003
---
> #line 1051
11434c11826
< #line 1006
---
> #line 1054
11436c11828
< #line 1006
---
> #line 1054
11438c11830
< #line 1007
---
> #line 1055
11445c11837
< #line 1010
---
> #line 1058
11447c11839
< #line 1011
---
> #line 1059
11449c11841
< #line 1011
---
> #line 1059
11451,11453c11843,11845
< #line 1011
<     descriptor.filename = "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared";
< #line 1011
---
> #line 1059
>     descriptor.filename = "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared";
> #line 1059
11455,11457c11847,11849
< #line 1011
<     descriptor.lineno = 1011U;
< #line 1011
---
> #line 1059
>     descriptor.lineno = 1059U;
> #line 1059
11459c11851
< #line 1011
---
> #line 1059
11461c11853
< #line 1011
---
> #line 1059
11463c11855
< #line 1011
---
> #line 1059
11470c11862
< #line 1014
---
> #line 1062
11472c11864
< #line 1016
---
> #line 1064
11474c11866
< #line 1017
---
> #line 1065
11479c11871
< #line 1019
---
> #line 1067
11481c11873
< #line 1021
---
> #line 1069
11483c11875
< #line 1021
---
> #line 1069
11485c11877
< #line 1022
---
> #line 1070
11487c11879
< #line 1023
---
> #line 1071
11489c11881
< #line 1024
---
> #line 1072
11494c11886
< #line 1026
---
> #line 1074
11498c11890
< #line 1028 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1076 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
11519c11911
< #line 1030
---
> #line 1078
11521c11913
< #line 1030
---
> #line 1078
11523c11915
< #line 1031
---
> #line 1079
11525c11917
< #line 1032
---
> #line 1080
11527c11919
< #line 1036
---
> #line 1084
11529c11921
< #line 1038
---
> #line 1086
11531c11923
< #line 1043
---
> #line 1091
11533c11925
< #line 1043
---
> #line 1091
11535c11927
< #line 1043
---
> #line 1091
11537c11929
< #line 1043
---
> #line 1091
11539c11931
< #line 1047
---
> #line 1095
11541c11933
< #line 1050
---
> #line 1098
11543c11935
< #line 1052
---
> #line 1100
11545c11937
< #line 1054
---
> #line 1102
11547c11939
< #line 1054
---
> #line 1102
11549c11941
< #line 1055
---
> #line 1103
11551c11943
< #line 1056
---
> #line 1104
11553c11945
< #line 1057
---
> #line 1105
11555c11947
< #line 1057
---
> #line 1105
11557c11949
< #line 1057
---
> #line 1105
11560c11952
< #line 1057
---
> #line 1105
11563c11955
< #line 1058
---
> #line 1106
11565c11957
< #line 1059
---
> #line 1107
11567c11959
< #line 1060
---
> #line 1108
11570c11962
< #line 1062
---
> #line 1110
11573c11965
< #line 1064
---
> #line 1112
11575c11967
< #line 1065
---
> #line 1113
11577c11969
< #line 1068
---
> #line 1116
11579c11971
< #line 1069
---
> #line 1117
11581c11973
< #line 1070
---
> #line 1118
11583c11975
< #line 1072
---
> #line 1120
11585c11977
< #line 1072
---
> #line 1120
11587c11979
< #line 1073
---
> #line 1121
11589c11981
< #line 1074
---
> #line 1122
11592c11984
< #line 1076
---
> #line 1124
11594c11986
< #line 1079
---
> #line 1127
11597c11989
< #line 1081
---
> #line 1129
11601c11993
< #line 1086 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1134 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
11616a12009
>   int tmp___2 ;
11618,11619c12011,12012
<   long tmp___2 ;
<   int tmp___3 ;
---
>   long tmp___3 ;
>   int tmp___4 ;
11621,11622c12014
<   long tmp___4 ;
<   int tmp___5 ;
---
>   long tmp___5 ;
11625c12017,12018
<   char *tmp___8 ;
---
>   int tmp___8 ;
>   char *tmp___9 ;
11628c12021
< #line 1089
---
> #line 1137
11630c12023
< #line 1090
---
> #line 1138
11632c12025
< #line 1093
---
> #line 1141
11634c12027
< #line 1104
---
> #line 1152
11636c12029
< #line 1104
---
> #line 1152
11638c12031
< #line 1105
---
> #line 1153
11640c12033
< #line 1106
---
> #line 1154
11645c12038
< #line 1108
---
> #line 1156
11647c12040
< #line 1108
---
> #line 1156
11649c12042
< #line 1108
---
> #line 1156
11651c12044
< #line 1108
---
> #line 1156
11653c12046
< #line 1108
---
> #line 1156
11655c12048
< #line 1108
---
> #line 1156
11657c12050
< #line 1108
---
> #line 1156
11659c12052
< #line 1117
---
> #line 1165
11661c12054
< #line 1117
---
> #line 1165
11663c12056
< #line 1118
---
> #line 1166
11665c12058
< #line 1119
---
> #line 1167
11667c12060
< #line 1120
---
> #line 1168
11672c12065
< #line 1123
---
> #line 1171
11674c12067
< #line 1124
---
> #line 1172
11676c12069
< #line 1124
---
> #line 1172
11678c12071
< #line 1124
---
> #line 1172
11680,11682c12073,12075
< #line 1124
<       warn_slowpath_null("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<                          1124);
---
> #line 1172
>       warn_slowpath_null("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
>                          1172);
11686c12079
< #line 1124
---
> #line 1172
11691c12084
< #line 1126
---
> #line 1174
11693c12086
< #line 1128
---
> #line 1176
11695c12088
< #line 1131
---
> #line 1179
11697,11700c12090,12093
< #line 1131
<   goto ldv_50901;
<   ldv_50900: ;
< #line 1133
---
> #line 1179
>   goto ldv_51492;
>   ldv_51491: ;
> #line 1181
11702,11703c12095,12096
< #line 1134
<     goto ldv_50894;
---
> #line 1182
>     goto ldv_51485;
11707c12100
< #line 1135
---
> #line 1183
11709,11715c12102,12122
< #line 1136
<     if ((flags & 2U) == 0U) {
< #line 1136
<       tmp___3 = bm_test_page_unchanged(*(b->bm_pages + (unsigned long )i));
< #line 1136
<       if (tmp___3 != 0) {
< #line 1138
---
> #line 1184
>     if ((flags & 2U) != 0U) {
> #line 1184
>       tmp___2 = test_and_clear_bit(27, (unsigned long volatile   *)(& (*(b->bm_pages + (unsigned long )i))->ldv_14746.private));
> #line 1184
>       if (tmp___2 == 0) {
> #line 1187
>         goto ldv_51486;
>       } else {
> 
>       }
>     } else {
> 
>     }
> #line 1189
>     if ((flags & 4U) == 0U) {
> #line 1189
>       tmp___4 = bm_test_page_unchanged(*(b->bm_pages + (unsigned long )i));
> #line 1189
>       if (tmp___4 != 0) {
> #line 1191
11717c12124
< #line 1138
---
> #line 1191
11719,11721c12126,12128
< #line 1138
<         descriptor.filename = "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared";
< #line 1138
---
> #line 1191
>         descriptor.filename = "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared";
> #line 1191
11723,11725c12130,12132
< #line 1138
<         descriptor.lineno = 1138U;
< #line 1138
---
> #line 1191
>         descriptor.lineno = 1191U;
> #line 1191
11727,11731c12134,12138
< #line 1138
<         tmp___2 = __builtin_expect((long )descriptor.flags & 1L, 0L);
< #line 1138
<         if (tmp___2 != 0L) {
< #line 1138
---
> #line 1191
>         tmp___3 = __builtin_expect((long )descriptor.flags & 1L, 0L);
> #line 1191
>         if (tmp___3 != 0L) {
> #line 1191
11737,11738c12144,12145
< #line 1139
<         goto ldv_50897;
---
> #line 1192
>         goto ldv_51486;
11745c12152
< #line 1143
---
> #line 1196
11747,11751c12154,12158
< #line 1143
<       tmp___5 = bm_test_page_lazy_writeout(*(b->bm_pages + (unsigned long )i));
< #line 1143
<       if (tmp___5 == 0) {
< #line 1145
---
> #line 1196
>       tmp___6 = bm_test_page_lazy_writeout(*(b->bm_pages + (unsigned long )i));
> #line 1196
>       if (tmp___6 == 0) {
> #line 1198
11753c12160
< #line 1145
---
> #line 1198
11755,11757c12162,12164
< #line 1145
<         descriptor___0.filename = "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared";
< #line 1145
---
> #line 1198
>         descriptor___0.filename = "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared";
> #line 1198
11759,11761c12166,12168
< #line 1145
<         descriptor___0.lineno = 1145U;
< #line 1145
---
> #line 1198
>         descriptor___0.lineno = 1198U;
> #line 1198
11763,11767c12170,12174
< #line 1145
<         tmp___4 = __builtin_expect((long )descriptor___0.flags & 1L, 0L);
< #line 1145
<         if (tmp___4 != 0L) {
< #line 1145
---
> #line 1198
>         tmp___5 = __builtin_expect((long )descriptor___0.flags & 1L, 0L);
> #line 1198
>         if (tmp___5 != 0L) {
> #line 1198
11773,11774c12180,12181
< #line 1146
<         goto ldv_50897;
---
> #line 1199
>         goto ldv_51486;
11784c12191
< #line 1149
---
> #line 1202
11786c12193
< #line 1150
---
> #line 1203
11788c12195
< #line 1151
---
> #line 1204
11790,11793c12197,12200
< #line 1152
<   __might_sleep("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<                 1152, 0);
< #line 1152
---
> #line 1205
>   __might_sleep("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
>                 1205, 0);
> #line 1205
11795,11796c12202,12203
<   ldv_50897: 
< #line 1131
---
>   ldv_51486: 
> #line 1179
11798,11799c12205,12206
<   ldv_50901: ;
< #line 1131
---
>   ldv_51492: ;
> #line 1179
11801,11802c12208,12209
< #line 1132
<     goto ldv_50900;
---
> #line 1180
>     goto ldv_51491;
11806,11811c12213,12218
<   ldv_50894: 
< #line 1163
<   tmp___6 = atomic_dec_and_test(& ctx->in_flight);
< #line 1163
<   if (tmp___6 == 0) {
< #line 1164
---
>   ldv_51485: 
> #line 1216
>   tmp___7 = atomic_dec_and_test(& ctx->in_flight);
> #line 1216
>   if (tmp___7 == 0) {
> #line 1217
11814c12221
< #line 1166
---
> #line 1219
11817,11820c12224,12232
< #line 1168
<   _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "bitmap %s of %u pages took %lu jiffies\n",
<             rw == 1 ? (char *)"WRITE" : (char *)"READ", count, (unsigned long )jiffies - now);
< #line 1172
---
> #line 1222
>   if (flags == 0U) {
> #line 1223
>     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "bitmap %s of %u pages took %lu jiffies\n",
>               rw == 1 ? (char *)"WRITE" : (char *)"READ", count, (unsigned long )jiffies - now);
>   } else {
> 
>   }
> #line 1227
11822c12234
< #line 1173
---
> #line 1228
11824c12236
< #line 1174
---
> #line 1229
11826c12238
< #line 1175
---
> #line 1230
11831,11835c12243,12247
< #line 1178
<   tmp___7 = atomic_read((atomic_t const   *)(& ctx->in_flight));
< #line 1178
<   if (tmp___7 != 0) {
< #line 1179
---
> #line 1233
>   tmp___8 = atomic_read((atomic_t const   *)(& ctx->in_flight));
> #line 1233
>   if (tmp___8 != 0) {
> #line 1234
11840c12252
< #line 1181
---
> #line 1236
11842c12254
< #line 1182
---
> #line 1237
11844c12256
< #line 1183
---
> #line 1238
11847c12259
< #line 1185
---
> #line 1240
11849c12261
< #line 1186
---
> #line 1241
11853c12265
< #line 1189
---
> #line 1244
11855,11860c12267,12277
< #line 1191
<   tmp___8 = ppsize((char *)(& ppb), (unsigned long long )(now << 2));
< #line 1191
<   _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "%s (%lu bits) marked out-of-sync by on disk bit-map.\n",
<             tmp___8, now);
< #line 1194
---
> #line 1246
>   if (flags == 0U) {
> #line 1247
>     tmp___9 = ppsize((char *)(& ppb), (unsigned long long )(now << 2));
> #line 1247
>     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "%s (%lu bits) marked out-of-sync by on disk bit-map.\n",
>               tmp___9, now);
>   } else {
> 
>   }
> #line 1250
11862c12279
< #line 1195
---
> #line 1251
11866c12283
< #line 1202 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1258 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
11872c12289
< #line 1204
---
> #line 1260
11874c12291
< #line 1204
---
> #line 1260
11878c12295
< #line 1213 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1269 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
11884c12301
< #line 1215
---
> #line 1271
11886c12303
< #line 1215
---
> #line 1271
11890c12307
< #line 1224 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1280 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
11896,11898c12313,12315
< #line 1226
<   tmp = bm_rw(mdev, 1, 2U, 0U);
< #line 1226
---
> #line 1282
>   tmp = bm_rw(mdev, 1, 4U, 0U);
> #line 1282
11902c12319
< #line 1234 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1290 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
11908c12325
< #line 1236
---
> #line 1292
11910c12327
< #line 1236
---
> #line 1292
11914c12331
< #line 1250 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1306 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
11920c12337
< #line 1252
---
> #line 1308
11922c12339
< #line 1252
---
> #line 1308
11926c12343,12355
< #line 1268 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1315 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
> int drbd_bm_write_hinted(struct drbd_conf *mdev ) 
> { 
>   int tmp ;
> 
>   {
> #line 1317
>   tmp = bm_rw(mdev, 1, 3U, 0U);
> #line 1317
>   return (tmp);
> }
> }
> #line 1332 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
11940c12369
< #line 1273
---
> #line 1337
11942c12371
< #line 1273
---
> #line 1337
11944c12373
< #line 1274
---
> #line 1338
11946c12375
< #line 1274
---
> #line 1338
11948,11950c12377,12379
< #line 1274
<     descriptor.filename = "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared";
< #line 1274
---
> #line 1338
>     descriptor.filename = "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared";
> #line 1338
11952,11954c12381,12383
< #line 1274
<     descriptor.lineno = 1274U;
< #line 1274
---
> #line 1338
>     descriptor.lineno = 1338U;
> #line 1338
11956c12385
< #line 1274
---
> #line 1338
11958c12387
< #line 1274
---
> #line 1338
11960c12389
< #line 1274
---
> #line 1338
11966c12395
< #line 1275
---
> #line 1339
11971c12400
< #line 1278
---
> #line 1342
11973c12402
< #line 1278
---
> #line 1342
11975c12404
< #line 1279
---
> #line 1343
11977c12406
< #line 1280
---
> #line 1344
11982c12411
< #line 1282
---
> #line 1346
11984c12413
< #line 1282
---
> #line 1346
11986c12415
< #line 1282
---
> #line 1346
11988c12417
< #line 1282
---
> #line 1346
11990c12419
< #line 1282
---
> #line 1346
11992c12421
< #line 1282
---
> #line 1346
11994c12423
< #line 1282
---
> #line 1346
11996c12425
< #line 1291
---
> #line 1355
11998c12427
< #line 1291
---
> #line 1355
12000c12429
< #line 1292
---
> #line 1356
12002c12431
< #line 1293
---
> #line 1357
12004c12433
< #line 1294
---
> #line 1358
12009c12438
< #line 1297
---
> #line 1361
12011c12440
< #line 1298
---
> #line 1362
12013c12442
< #line 1300
---
> #line 1364
12015c12444
< #line 1301
---
> #line 1365
12020c12449
< #line 1305
---
> #line 1369
12022c12451
< #line 1306
---
> #line 1370
12024c12453
< #line 1306
---
> #line 1370
12026c12455
< #line 1307
---
> #line 1371
12028c12457
< #line 1308
---
> #line 1372
12032c12461
< #line 1319 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1383 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
12045c12474
< #line 1322
---
> #line 1386
12047c12476
< #line 1328
---
> #line 1392
12049c12478
< #line 1329
---
> #line 1393
12052c12481
< #line 1330
---
> #line 1394
12055,12058c12484,12487
< #line 1332
<     goto ldv_50939;
<     ldv_50938: 
< #line 1334
---
> #line 1396
>     goto ldv_51533;
>     ldv_51532: 
> #line 1398
12060c12489
< #line 1335
---
> #line 1399
12062c12491
< #line 1335
---
> #line 1399
12064c12493
< #line 1337
---
> #line 1401
12066c12495
< #line 1338
---
> #line 1402
12068c12497
< #line 1338
---
> #line 1402
12071c12500
< #line 1341
---
> #line 1405
12073c12502
< #line 1341
---
> #line 1405
12076c12505
< #line 1344
---
> #line 1408
12078c12507
< #line 1345
---
> #line 1409
12080c12509
< #line 1346
---
> #line 1410
12082c12511
< #line 1347
---
> #line 1411
12084,12085c12513,12514
< #line 1348
<         goto ldv_50936;
---
> #line 1412
>         goto ldv_51530;
12089c12518
< #line 1349
---
> #line 1413
12094c12523
< #line 1351
---
> #line 1415
12096,12097c12525,12526
<     ldv_50939: ;
< #line 1332
---
>     ldv_51533: ;
> #line 1396
12099,12100c12528,12529
< #line 1333
<       goto ldv_50938;
---
> #line 1397
>       goto ldv_51532;
12104,12105c12533,12534
<     ldv_50936: 
< #line 1353
---
>     ldv_51530: 
> #line 1417
12109c12538
< #line 1356
---
> #line 1420
12113c12542
< #line 1359 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1423 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
12118,12119c12547,12550
<   int _b ;
<   int _b___0 ;
---
>   bool _bool ;
>   int tmp ;
>   bool _bool___0 ;
>   int tmp___0 ;
12122c12553
< #line 1362
---
> #line 1426
12124c12555
< #line 1363
---
> #line 1427
12126,12133c12557,12563
< #line 1365
<   _b = (unsigned long )b == (unsigned long )((struct drbd_bitmap *)0);
< #line 1365
<   if (_b != 0) {
< #line 1365
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "bm_find_next", (char *)"!b", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             1365);
---
> #line 1429
>   _bool = (unsigned long )b != (unsigned long )((struct drbd_bitmap *)0);
> #line 1429
>   if (! _bool) {
> #line 1429
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"b", "bm_find_next");
12137,12139c12567,12577
< #line 1365
<   if (_b != 0) {
< #line 1365
---
> #line 1429
>   if (_bool) {
> #line 1429
>     tmp = 0;
>   } else {
> #line 1429
>     tmp = 1;
>   }
> #line 1429
>   if (tmp) {
> #line 1430
12144,12151c12582,12588
< #line 1366
<   _b___0 = (unsigned long )b->bm_pages == (unsigned long )((struct page **)0);
< #line 1366
<   if (_b___0 != 0) {
< #line 1366
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "bm_find_next", (char *)"!b->bm_pages", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             1366);
---
> #line 1431
>   _bool___0 = (unsigned long )b->bm_pages != (unsigned long )((struct page **)0);
> #line 1431
>   if (! _bool___0) {
> #line 1431
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"b->bm_pages", "bm_find_next");
12155,12157c12592,12602
< #line 1366
<   if (_b___0 != 0) {
< #line 1366
---
> #line 1431
>   if (_bool___0) {
> #line 1431
>     tmp___0 = 0;
>   } else {
> #line 1431
>     tmp___0 = 1;
>   }
> #line 1431
>   if (tmp___0) {
> #line 1432
12162c12607
< #line 1368
---
> #line 1434
12164c12609
< #line 1369
---
> #line 1435
12166c12611
< #line 1370
---
> #line 1436
12171c12616
< #line 1372
---
> #line 1438
12173c12618
< #line 1374
---
> #line 1440
12175c12620
< #line 1375
---
> #line 1441
12179c12624
< #line 1378 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1444 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
12185c12630
< #line 1380
---
> #line 1446
12187c12632
< #line 1380
---
> #line 1446
12191c12636
< #line 1393 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1459 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
12197c12642
< #line 1396
---
> #line 1462
12199c12644
< #line 1396
---
> #line 1462
12203c12648
< #line 1399 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1465 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
12209c12654
< #line 1402
---
> #line 1468
12211c12656
< #line 1402
---
> #line 1468
12215c12660
< #line 1411 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1477 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
12231c12676
< #line 1414
---
> #line 1480
12233c12678
< #line 1415
---
> #line 1481
12235c12680
< #line 1417
---
> #line 1483
12237c12682
< #line 1418
---
> #line 1484
12239c12684
< #line 1419
---
> #line 1485
12241c12686
< #line 1421
---
> #line 1487
12243c12688
< #line 1422
---
> #line 1488
12246c12691
< #line 1424
---
> #line 1490
12251c12696
< #line 1426
---
> #line 1492
12253,12256c12698,12701
< #line 1426
<   goto ldv_50978;
<   ldv_50977: 
< #line 1427
---
> #line 1492
>   goto ldv_51572;
>   ldv_51571: 
> #line 1493
12258c12703
< #line 1427
---
> #line 1493
12260c12705
< #line 1428
---
> #line 1494
12262c12707
< #line 1429
---
> #line 1495
12264c12709
< #line 1430
---
> #line 1496
12269c12714
< #line 1431
---
> #line 1497
12271c12716
< #line 1432
---
> #line 1498
12274c12719
< #line 1433
---
> #line 1499
12276c12721
< #line 1434
---
> #line 1500
12281c12726
< #line 1435
---
> #line 1501
12283c12728
< #line 1436
---
> #line 1502
12285c12730
< #line 1437
---
> #line 1503
12287c12732
< #line 1438
---
> #line 1504
12292c12737
< #line 1440
---
> #line 1506
12294c12739
< #line 1441
---
> #line 1507
12296c12741
< #line 1441
---
> #line 1507
12299c12744
< #line 1443
---
> #line 1509
12301c12746
< #line 1443
---
> #line 1509
12304c12749
< #line 1426
---
> #line 1492
12306,12307c12751,12752
<   ldv_50978: ;
< #line 1426
---
>   ldv_51572: ;
> #line 1492
12309,12310c12754,12755
< #line 1427
<     goto ldv_50977;
---
> #line 1493
>     goto ldv_51571;
12315c12760
< #line 1445
---
> #line 1511
12317c12762
< #line 1446
---
> #line 1512
12322c12767
< #line 1447
---
> #line 1513
12324c12769
< #line 1448
---
> #line 1514
12327c12772
< #line 1449
---
> #line 1515
12329c12774
< #line 1450
---
> #line 1516
12334c12779
< #line 1451
---
> #line 1517
12336c12781
< #line 1452
---
> #line 1518
12338c12783
< #line 1453
---
> #line 1519
12342c12787
< #line 1460 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1526 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
12349,12351c12794,12798
<   int _b ;
<   int _b___0 ;
<   raw_spinlock_t *tmp ;
---
>   bool _bool ;
>   int tmp ;
>   bool _bool___0 ;
>   int tmp___0 ;
>   raw_spinlock_t *tmp___1 ;
12354c12801
< #line 1464
---
> #line 1530
12356c12803
< #line 1465
---
> #line 1531
12358,12365c12805,12811
< #line 1467
<   _b = (unsigned long )b == (unsigned long )((struct drbd_bitmap *)0);
< #line 1467
<   if (_b != 0) {
< #line 1467
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "bm_change_bits_to", (char *)"!b", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             1467);
---
> #line 1533
>   _bool = (unsigned long )b != (unsigned long )((struct drbd_bitmap *)0);
> #line 1533
>   if (! _bool) {
> #line 1533
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"b", "bm_change_bits_to");
12369,12371c12815,12825
< #line 1467
<   if (_b != 0) {
< #line 1467
---
> #line 1533
>   if (_bool) {
> #line 1533
>     tmp = 0;
>   } else {
> #line 1533
>     tmp = 1;
>   }
> #line 1533
>   if (tmp) {
> #line 1534
12376,12383c12830,12836
< #line 1468
<   _b___0 = (unsigned long )b->bm_pages == (unsigned long )((struct page **)0);
< #line 1468
<   if (_b___0 != 0) {
< #line 1468
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "bm_change_bits_to", (char *)"!b->bm_pages", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             1468);
---
> #line 1535
>   _bool___0 = (unsigned long )b->bm_pages != (unsigned long )((struct page **)0);
> #line 1535
>   if (! _bool___0) {
> #line 1535
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"b->bm_pages", "bm_change_bits_to");
12387,12389c12840,12850
< #line 1468
<   if (_b___0 != 0) {
< #line 1468
---
> #line 1535
>   if (_bool___0) {
> #line 1535
>     tmp___0 = 0;
>   } else {
> #line 1535
>     tmp___0 = 1;
>   }
> #line 1535
>   if (tmp___0) {
> #line 1536
12394,12398c12855,12859
< #line 1470
<   tmp = spinlock_check(& b->bm_lock);
< #line 1470
<   flags = _raw_spin_lock_irqsave(tmp);
< #line 1471
---
> #line 1538
>   tmp___1 = spinlock_check(& b->bm_lock);
> #line 1538
>   flags = _raw_spin_lock_irqsave(tmp___1);
> #line 1539
12400c12861
< #line 1472
---
> #line 1540
12405c12866
< #line 1474
---
> #line 1542
12407c12868
< #line 1476
---
> #line 1544
12409c12870
< #line 1477
---
> #line 1545
12413c12874
< #line 1481 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1549 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
12419c12880
< #line 1483
---
> #line 1551
12421c12882
< #line 1483
---
> #line 1551
12425c12886
< #line 1487 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1555 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
12431c12892
< #line 1489
---
> #line 1557
12433c12894
< #line 1489
---
> #line 1557
12437c12898
< #line 1494 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1562 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
12442a12904
>   int changed ;
12448c12910,12912
< #line 1499
---
> #line 1567
>   changed = 0;
> #line 1568
12450c12914
< #line 1499
---
> #line 1568
12452c12916
< #line 1500
---
> #line 1569
12454,12457c12918,12921
< #line 1500
<   goto ldv_51017;
<   ldv_51016: 
< #line 1501
---
> #line 1569
>   goto ldv_51612;
>   ldv_51611: 
> #line 1570
12459c12923
< #line 1501
---
> #line 1570
12461c12925
< #line 1502
---
> #line 1571
12463,12465c12927,12929
< #line 1503
<   b->bm_set = b->bm_set + (unsigned long )(64 - bits);
< #line 1500
---
> #line 1572
>   changed = (64 - bits) + changed;
> #line 1569
12467,12468c12931,12932
<   ldv_51017: ;
< #line 1500
---
>   ldv_51612: ;
> #line 1569
12470,12471c12934,12935
< #line 1501
<     goto ldv_51016;
---
> #line 1570
>     goto ldv_51611;
12475c12939
< #line 1505
---
> #line 1574
12477c12941,12950
< #line 1506
---
> #line 1575
>   if (changed != 0) {
> #line 1579
>     bm_set_page_lazy_writeout(*(b->bm_pages + (unsigned long )page_nr));
> #line 1580
>     b->bm_set = b->bm_set + (unsigned long )changed;
>   } else {
> 
>   }
> #line 1582
12481c12954
< #line 1513 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1589 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
12494c12967
< #line 1523
---
> #line 1599
12496c12969
< #line 1524
---
> #line 1600
12498c12971
< #line 1525
---
> #line 1601
12500c12973
< #line 1532
---
> #line 1608
12502c12975
< #line 1534
---
> #line 1610
12504c12977
< #line 1535
---
> #line 1611
12506c12979
< #line 1536
---
> #line 1612
12508c12981
< #line 1537
---
> #line 1613
12513c12986
< #line 1542
---
> #line 1618
12515c12988
< #line 1545
---
> #line 1621
12517c12990
< #line 1546
---
> #line 1622
12522c12995
< #line 1548
---
> #line 1624
12524c12997
< #line 1549
---
> #line 1625
12526c12999
< #line 1553
---
> #line 1629
12528c13001
< #line 1554
---
> #line 1630
12530c13003
< #line 1557
---
> #line 1633
12532,12535c13005,13008
< #line 1557
<   goto ldv_51034;
<   ldv_51033: 
< #line 1558
---
> #line 1633
>   goto ldv_51629;
>   ldv_51628: 
> #line 1634
12537c13010
< #line 1559
---
> #line 1635
12539,12542c13012,13015
< #line 1560
<   __might_sleep("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<                 1560, 0);
< #line 1560
---
> #line 1636
>   __might_sleep("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
>                 1636, 0);
> #line 1636
12544c13017
< #line 1561
---
> #line 1637
12546c13019
< #line 1562
---
> #line 1638
12548c13021
< #line 1557
---
> #line 1633
12550,12551c13023,13024
<   ldv_51034: ;
< #line 1557
---
>   ldv_51629: ;
> #line 1633
12553,12554c13026,13027
< #line 1558
<     goto ldv_51033;
---
> #line 1634
>     goto ldv_51628;
12558c13031
< #line 1565
---
> #line 1641
12560c13033
< #line 1573
---
> #line 1649
12562c13035
< #line 1574
---
> #line 1650
12567c13040
< #line 1581
---
> #line 1657
12569c13042
< #line 1582
---
> #line 1658
12574c13047
< #line 1583
---
> #line 1659
12576c13049
< #line 1584
---
> #line 1660
12580c13053
< #line 1593 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1669 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
12587,12591c13060,13066
<   int _b ;
<   int _b___0 ;
<   raw_spinlock_t *tmp ;
<   unsigned int tmp___0 ;
<   int tmp___1 ;
---
>   bool _bool ;
>   int tmp ;
>   bool _bool___0 ;
>   int tmp___0 ;
>   raw_spinlock_t *tmp___1 ;
>   unsigned int tmp___2 ;
>   int tmp___3 ;
12594c13069
< #line 1596
---
> #line 1672
12596,12603c13071,13077
< #line 1600
<   _b = (unsigned long )b == (unsigned long )((struct drbd_bitmap *)0);
< #line 1600
<   if (_b != 0) {
< #line 1600
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_bm_test_bit", (char *)"!b", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             1600);
---
> #line 1676
>   _bool = (unsigned long )b != (unsigned long )((struct drbd_bitmap *)0);
> #line 1676
>   if (! _bool) {
> #line 1676
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"b", "drbd_bm_test_bit");
12607,12609c13081,13091
< #line 1600
<   if (_b != 0) {
< #line 1600
---
> #line 1676
>   if (_bool) {
> #line 1676
>     tmp = 0;
>   } else {
> #line 1676
>     tmp = 1;
>   }
> #line 1676
>   if (tmp) {
> #line 1677
12614,12621c13096,13102
< #line 1601
<   _b___0 = (unsigned long )b->bm_pages == (unsigned long )((struct page **)0);
< #line 1601
<   if (_b___0 != 0) {
< #line 1601
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_bm_test_bit", (char *)"!b->bm_pages", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             1601);
---
> #line 1678
>   _bool___0 = (unsigned long )b->bm_pages != (unsigned long )((struct page **)0);
> #line 1678
>   if (! _bool___0) {
> #line 1678
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"b->bm_pages", "drbd_bm_test_bit");
12625,12627c13106,13116
< #line 1601
<   if (_b___0 != 0) {
< #line 1601
---
> #line 1678
>   if (_bool___0) {
> #line 1678
>     tmp___0 = 0;
>   } else {
> #line 1678
>     tmp___0 = 1;
>   }
> #line 1678
>   if (tmp___0) {
> #line 1679
12632,12636c13121,13125
< #line 1603
<   tmp = spinlock_check(& b->bm_lock);
< #line 1603
<   flags = _raw_spin_lock_irqsave(tmp);
< #line 1604
---
> #line 1681
>   tmp___1 = spinlock_check(& b->bm_lock);
> #line 1681
>   flags = _raw_spin_lock_irqsave(tmp___1);
> #line 1682
12638c13127
< #line 1605
---
> #line 1683
12643c13132
< #line 1606
---
> #line 1684
12645,12653c13134,13142
< #line 1607
<     tmp___0 = bm_bit_to_page_idx(b, (u64 )bitnr);
< #line 1607
<     p_addr = bm_map_pidx(b, tmp___0);
< #line 1608
<     tmp___1 = test_bit_le((int )bitnr & 32767, (void const   *)p_addr);
< #line 1608
<     i = tmp___1 != 0;
< #line 1609
---
> #line 1685
>     tmp___2 = bm_bit_to_page_idx(b, (u64 )bitnr);
> #line 1685
>     p_addr = bm_map_pidx(b, tmp___2);
> #line 1686
>     tmp___3 = test_bit_le((int )bitnr & 32767, (void const   *)p_addr);
> #line 1686
>     i = tmp___3 != 0;
> #line 1687
12656c13145
< #line 1610
---
> #line 1688
12658c13147
< #line 1611
---
> #line 1689
12661c13150
< #line 1613
---
> #line 1691
12664c13153
< #line 1614
---
> #line 1692
12667c13156
< #line 1617
---
> #line 1695
12669c13158
< #line 1618
---
> #line 1696
12673c13162
< #line 1622 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1700 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
12682,12684c13171,13175
<   int _b ;
<   int _b___0 ;
<   raw_spinlock_t *tmp ;
---
>   bool _bool ;
>   int tmp ;
>   bool _bool___0 ;
>   int tmp___0 ;
>   raw_spinlock_t *tmp___1 ;
12686,12688c13177,13179
<   unsigned int tmp___0 ;
<   int tmp___1 ;
<   int _b___1 ;
---
>   unsigned int tmp___2 ;
>   int tmp___3 ;
>   bool _bool___1 ;
12691c13182
< #line 1625
---
> #line 1703
12693c13184
< #line 1626
---
> #line 1704
12695c13186
< #line 1628
---
> #line 1706
12697c13188
< #line 1629
---
> #line 1707
12699,12706c13190,13196
< #line 1635
<   _b = (unsigned long )b == (unsigned long )((struct drbd_bitmap *)0);
< #line 1635
<   if (_b != 0) {
< #line 1635
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_bm_count_bits", (char *)"!b", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             1635);
---
> #line 1713
>   _bool = (unsigned long )b != (unsigned long )((struct drbd_bitmap *)0);
> #line 1713
>   if (! _bool) {
> #line 1713
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"b", "drbd_bm_count_bits");
12710,12712c13200,13210
< #line 1635
<   if (_b != 0) {
< #line 1635
---
> #line 1713
>   if (_bool) {
> #line 1713
>     tmp = 0;
>   } else {
> #line 1713
>     tmp = 1;
>   }
> #line 1713
>   if (tmp) {
> #line 1714
12717,12724c13215,13221
< #line 1636
<   _b___0 = (unsigned long )b->bm_pages == (unsigned long )((struct page **)0);
< #line 1636
<   if (_b___0 != 0) {
< #line 1636
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_bm_count_bits", (char *)"!b->bm_pages", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             1636);
---
> #line 1715
>   _bool___0 = (unsigned long )b->bm_pages != (unsigned long )((struct page **)0);
> #line 1715
>   if (! _bool___0) {
> #line 1715
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"b->bm_pages", "drbd_bm_count_bits");
12728,12730c13225,13235
< #line 1636
<   if (_b___0 != 0) {
< #line 1636
---
> #line 1715
>   if (_bool___0) {
> #line 1715
>     tmp___0 = 0;
>   } else {
> #line 1715
>     tmp___0 = 1;
>   }
> #line 1715
>   if (tmp___0) {
> #line 1716
12735,12739c13240,13244
< #line 1638
<   tmp = spinlock_check(& b->bm_lock);
< #line 1638
<   flags = _raw_spin_lock_irqsave(tmp);
< #line 1639
---
> #line 1718
>   tmp___1 = spinlock_check(& b->bm_lock);
> #line 1718
>   flags = _raw_spin_lock_irqsave(tmp___1);
> #line 1719
12741c13246
< #line 1640
---
> #line 1720
12746c13251
< #line 1641
---
> #line 1721
12748,12755c13253,13260
< #line 1641
<   goto ldv_51075;
<   ldv_51074: 
< #line 1642
<   tmp___0 = bm_bit_to_page_idx(b, (u64 )bitnr);
< #line 1642
<   idx = tmp___0;
< #line 1643
---
> #line 1721
>   goto ldv_51670;
>   ldv_51669: 
> #line 1722
>   tmp___2 = bm_bit_to_page_idx(b, (u64 )bitnr);
> #line 1722
>   idx = tmp___2;
> #line 1723
12757c13262
< #line 1644
---
> #line 1724
12759c13264
< #line 1645
---
> #line 1725
12761c13266
< #line 1646
---
> #line 1726
12766c13271
< #line 1647
---
> #line 1727
12771,12778c13276,13282
< #line 1649
<   _b___1 = b->bm_bits <= bitnr;
< #line 1649
<   if (_b___1 != 0) {
< #line 1649
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_bm_count_bits", (char *)"bitnr >= b->bm_bits", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             1649);
---
> #line 1729
>   _bool___1 = b->bm_bits > bitnr;
> #line 1729
>   if (! _bool___1) {
> #line 1729
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"bitnr < b->bm_bits", "drbd_bm_count_bits");
12782,12784c13286,13293
< #line 1649
<   if (_b___1 != 0) {
< #line 1650
---
> #line 1729
>   if ((int )_bool___1) {
> #line 1730
>     tmp___3 = test_bit_le((int )((unsigned int )bitnr - (page_nr << 15)), (void const   *)p_addr);
> #line 1730
>     c = (tmp___3 != 0) + c;
>   } else {
> #line 1732
12787,12791d13295
<   } else {
< #line 1652
<     tmp___1 = test_bit_le((int )((unsigned int )bitnr - (page_nr << 15)), (void const   *)p_addr);
< #line 1652
<     c = (tmp___1 != 0) + c;
12793c13297
< #line 1641
---
> #line 1721
12795,12796c13299,13300
<   ldv_51075: ;
< #line 1641
---
>   ldv_51670: ;
> #line 1721
12798,12799c13302,13303
< #line 1642
<     goto ldv_51074;
---
> #line 1722
>     goto ldv_51669;
12804c13308
< #line 1655
---
> #line 1734
12806c13310
< #line 1656
---
> #line 1735
12811c13315
< #line 1657
---
> #line 1736
12813c13317
< #line 1658
---
> #line 1737
12817c13321
< #line 1676 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1755 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
12827,12829c13331,13335
<   int _b ;
<   int _b___0 ;
<   raw_spinlock_t *tmp ;
---
>   bool _bool ;
>   int tmp ;
>   bool _bool___0 ;
>   int tmp___0 ;
>   raw_spinlock_t *tmp___1 ;
12833,12836c13339,13342
<   unsigned int tmp___0 ;
<   unsigned long *tmp___1 ;
<   unsigned long tmp___2 ;
<   int tmp___3 ;
---
>   unsigned int tmp___2 ;
>   unsigned long *tmp___3 ;
>   unsigned long tmp___4 ;
>   int tmp___5 ;
12839c13345
< #line 1678
---
> #line 1757
12841,12848c13347,13353
< #line 1683
<   _b = (unsigned long )b == (unsigned long )((struct drbd_bitmap *)0);
< #line 1683
<   if (_b != 0) {
< #line 1683
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_bm_e_weight", (char *)"!b", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             1683);
---
> #line 1762
>   _bool = (unsigned long )b != (unsigned long )((struct drbd_bitmap *)0);
> #line 1762
>   if (! _bool) {
> #line 1762
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"b", "drbd_bm_e_weight");
12852,12854c13357,13367
< #line 1683
<   if (_b != 0) {
< #line 1683
---
> #line 1762
>   if (_bool) {
> #line 1762
>     tmp = 0;
>   } else {
> #line 1762
>     tmp = 1;
>   }
> #line 1762
>   if (tmp) {
> #line 1763
12859,12866c13372,13378
< #line 1684
<   _b___0 = (unsigned long )b->bm_pages == (unsigned long )((struct page **)0);
< #line 1684
<   if (_b___0 != 0) {
< #line 1684
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_bm_e_weight", (char *)"!b->bm_pages", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             1684);
---
> #line 1764
>   _bool___0 = (unsigned long )b->bm_pages != (unsigned long )((struct page **)0);
> #line 1764
>   if (! _bool___0) {
> #line 1764
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"b->bm_pages", "drbd_bm_e_weight");
12870,12872c13382,13392
< #line 1684
<   if (_b___0 != 0) {
< #line 1684
---
> #line 1764
>   if (_bool___0) {
> #line 1764
>     tmp___0 = 0;
>   } else {
> #line 1764
>     tmp___0 = 1;
>   }
> #line 1764
>   if (tmp___0) {
> #line 1765
12877,12881c13397,13401
< #line 1686
<   tmp = spinlock_check(& b->bm_lock);
< #line 1686
<   flags = _raw_spin_lock_irqsave(tmp);
< #line 1687
---
> #line 1767
>   tmp___1 = spinlock_check(& b->bm_lock);
> #line 1767
>   flags = _raw_spin_lock_irqsave(tmp___1);
> #line 1768
12883c13403
< #line 1688
---
> #line 1769
12888c13408
< #line 1690
---
> #line 1771
12890c13410
< #line 1691
---
> #line 1772
12892c13412
< #line 1691
---
> #line 1772
12894c13414
< #line 1691
---
> #line 1772
12896c13416
< #line 1692
---
> #line 1773
12898c13418
< #line 1693
---
> #line 1774
12900c13420
< #line 1694
---
> #line 1775
12902,12906c13422,13426
< #line 1695
<     tmp___0 = bm_word_to_page_idx(b, (unsigned long )s);
< #line 1695
<     p_addr = bm_map_pidx(b, tmp___0);
< #line 1696
---
> #line 1776
>     tmp___2 = bm_word_to_page_idx(b, (unsigned long )s);
> #line 1776
>     p_addr = bm_map_pidx(b, tmp___2);
> #line 1777
12908,12913c13428,13433
< #line 1697
<     goto ldv_51101;
<     ldv_51100: 
< #line 1698
<     tmp___1 = bm;
< #line 1698
---
> #line 1778
>     goto ldv_51696;
>     ldv_51695: 
> #line 1779
>     tmp___3 = bm;
> #line 1779
12915,12922c13435,13442
< #line 1698
<     tmp___2 = hweight_long(*tmp___1);
< #line 1698
<     count = (int )((unsigned int )tmp___2 + (unsigned int )count);
<     ldv_51101: 
< #line 1697
<     tmp___3 = n;
< #line 1697
---
> #line 1779
>     tmp___4 = hweight_long(*tmp___3);
> #line 1779
>     count = (int )((unsigned int )tmp___4 + (unsigned int )count);
>     ldv_51696: 
> #line 1778
>     tmp___5 = n;
> #line 1778
12924,12927c13444,13447
< #line 1697
<     if (tmp___3 != 0) {
< #line 1698
<       goto ldv_51100;
---
> #line 1778
>     if (tmp___5 != 0) {
> #line 1779
>       goto ldv_51695;
12931c13451
< #line 1699
---
> #line 1780
12934c13454
< #line 1701
---
> #line 1782
12938c13458
< #line 1703
---
> #line 1784
12940c13460
< #line 1704
---
> #line 1785
12944,13095c13464
< #line 1709 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
< unsigned long drbd_bm_ALe_set_all(struct drbd_conf *mdev , unsigned long al_enr ) 
< { 
<   struct drbd_bitmap *b ;
<   unsigned long *p_addr ;
<   unsigned long *bm ;
<   unsigned long weight ;
<   unsigned long s ;
<   unsigned long e ;
<   int count ;
<   int i ;
<   int do_now ;
<   int _b ;
<   int _b___0 ;
<   size_t __min1 ;
<   size_t __min2 ;
<   unsigned int tmp ;
<   unsigned long tmp___0 ;
<   int tmp___1 ;
<   int tmp___2 ;
< 
<   {
< #line 1711
<   b = mdev->bitmap;
< #line 1716
<   _b = (unsigned long )b == (unsigned long )((struct drbd_bitmap *)0);
< #line 1716
<   if (_b != 0) {
< #line 1716
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_bm_ALe_set_all", (char *)"!b", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             1716);
<   } else {
< 
<   }
< #line 1716
<   if (_b != 0) {
< #line 1716
<     return (0UL);
<   } else {
< 
<   }
< #line 1717
<   _b___0 = (unsigned long )b->bm_pages == (unsigned long )((struct page **)0);
< #line 1717
<   if (_b___0 != 0) {
< #line 1717
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_bm_ALe_set_all", (char *)"!b->bm_pages", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             1717);
<   } else {
< 
<   }
< #line 1717
<   if (_b___0 != 0) {
< #line 1717
<     return (0UL);
<   } else {
< 
<   }
< #line 1719
<   spin_lock_irq(& b->bm_lock);
< #line 1720
<   if (((unsigned int )b->bm_flags & 2U) != 0U) {
< #line 1721
<     __bm_print_lock_info(mdev, "drbd_bm_ALe_set_all");
<   } else {
< 
<   }
< #line 1722
<   weight = b->bm_set;
< #line 1724
<   s = al_enr * 16UL;
< #line 1725
<   __min1 = s + 16UL;
< #line 1725
<   __min2 = b->bm_words;
< #line 1725
<   e = __min1 < __min2 ? __min1 : __min2;
< #line 1727
<   if ((e - 1UL) >> 9 != s >> 9) {
< #line 1727
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( (e-1) >> (PAGE_SHIFT - LN2_BPL + 3) == s >> (PAGE_SHIFT - LN2_BPL + 3) ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared",
<             1728);
<   } else {
< 
<   }
< #line 1729
<   count = 0;
< #line 1730
<   if (b->bm_words > s) {
< #line 1731
<     do_now = (int )((unsigned int )e - (unsigned int )s);
< #line 1731
<     i = do_now;
< #line 1732
<     tmp = bm_word_to_page_idx(b, s);
< #line 1732
<     p_addr = bm_map_pidx(b, tmp);
< #line 1733
<     bm = p_addr + (s & 511UL);
< #line 1734
<     goto ldv_51125;
<     ldv_51124: 
< #line 1735
<     tmp___0 = hweight_long(*bm);
< #line 1735
<     count = (int )((unsigned int )tmp___0 + (unsigned int )count);
< #line 1736
<     *bm = 0xffffffffffffffffUL;
< #line 1737
<     bm = bm + 1;
<     ldv_51125: 
< #line 1734
<     tmp___1 = i;
< #line 1734
<     i = i - 1;
< #line 1734
<     if (tmp___1 != 0) {
< #line 1735
<       goto ldv_51124;
<     } else {
< 
<     }
< #line 1739
<     bm_unmap(p_addr);
< #line 1740
<     b->bm_set = b->bm_set + (unsigned long )(do_now * 64 - count);
< #line 1741
<     if (b->bm_words == e) {
< #line 1742
<       tmp___2 = bm_clear_surplus(b);
< #line 1742
<       b->bm_set = b->bm_set - (unsigned long )tmp___2;
<     } else {
< 
<     }
<   } else {
< #line 1744
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "start offset (%lu) too large in drbd_bm_ALe_set_all\n",
<             s);
<   }
< #line 1746
<   weight = b->bm_set - weight;
< #line 1747
<   spin_unlock_irq(& b->bm_lock);
< #line 1748
<   return (weight);
< }
< }
< #line 1751 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1788 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
13101c13470
< #line 1756
---
> #line 1793
13103c13472
< #line 1758
---
> #line 1795
13105c13474
< #line 1759
---
> #line 1796
13109c13478
< #line 1761 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1798 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
13115c13484
< #line 1766
---
> #line 1803
13117c13486
< #line 1768
---
> #line 1805
13119c13488
< #line 1769
---
> #line 1806
13123c13492
< #line 1771 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1808 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
13129c13498
< #line 1776
---
> #line 1813
13131c13500
< #line 1778
---
> #line 1815
13133c13502
< #line 1779
---
> #line 1816
13137c13506
< #line 1781 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1818 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
13145c13514
< #line 1786
---
> #line 1823
13147c13516
< #line 1786
---
> #line 1823
13149c13518
< #line 1788
---
> #line 1825
13151c13520
< #line 1788
---
> #line 1825
13153c13522
< #line 1790
---
> #line 1827
13157c13526
< #line 1793 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1830 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
13163c13532
< #line 1798
---
> #line 1835
13165c13534
< #line 1800
---
> #line 1837
13167c13536
< #line 1801
---
> #line 1838
13171c13540
< #line 1803 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1840 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
13177c13546
< #line 1808
---
> #line 1845
13179c13548
< #line 1810
---
> #line 1847
13181c13550
< #line 1811
---
> #line 1848
13185c13554
< #line 1813 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1850 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
13191c13560
< #line 1818
---
> #line 1855
13193c13562
< #line 1820
---
> #line 1857
13195c13564
< #line 1821
---
> #line 1858
13199c13568
< #line 1823 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1860 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
13205c13574
< #line 1828
---
> #line 1865
13207c13576
< #line 1830
---
> #line 1867
13209c13578
< #line 1831
---
> #line 1868
13213c13582
< #line 1833 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1870 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
13219c13588
< #line 1838
---
> #line 1875
13221c13590
< #line 1840
---
> #line 1877
13223c13592
< #line 1841
---
> #line 1878
13227c13596
< #line 1843 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1880 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
13233c13602
< #line 1848
---
> #line 1885
13235c13604
< #line 1850
---
> #line 1887
13237c13606
< #line 1851
---
> #line 1888
13241c13610
< #line 1853 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
---
> #line 1890 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
13247c13616
< #line 1858
---
> #line 1895
13249,13291c13618
< #line 1860
<   mutex_unlock(ldv_func_arg1);
< #line 1861
<   return;
< }
< }
< #line 1863 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
< void ldv_mutex_lock_12(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1868
<   ldv_mutex_lock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 1870
<   mutex_lock(ldv_func_arg1);
< #line 1871
<   return;
< }
< }
< #line 1873 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
< void ldv_mutex_unlock_13(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1878
<   ldv_mutex_unlock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 1880
<   mutex_unlock(ldv_func_arg1);
< #line 1881
<   return;
< }
< }
< #line 1883 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
< void ldv_mutex_unlock_14(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1888
<   ldv_mutex_unlock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 1890
---
> #line 1897
13293c13620
< #line 1891
---
> #line 1898
13297,13298c13624,13625
< #line 1893 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
< int ldv_mutex_trylock_15(struct mutex *ldv_func_arg1 ) 
---
> #line 1900 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
> int ldv_mutex_trylock_12(struct mutex *ldv_func_arg1 ) 
13300c13627
<   ldv_func_ret_type___13 ldv_func_res ;
---
>   ldv_func_ret_type___10 ldv_func_res ;
13305c13632
< #line 1898
---
> #line 1905
13307c13634
< #line 1898
---
> #line 1905
13309c13636
< #line 1900
---
> #line 1907
13311c13638
< #line 1900
---
> #line 1907
13313c13640
< #line 1902
---
> #line 1909
13317,13318c13644,13645
< #line 1905 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
< void ldv_mutex_lock_16(struct mutex *ldv_func_arg1 ) 
---
> #line 1912 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
> void ldv_mutex_lock_13(struct mutex *ldv_func_arg1 ) 
13323c13650
< #line 1910
---
> #line 1917
13325c13652
< #line 1912
---
> #line 1919
13327c13654
< #line 1913
---
> #line 1920
13331,13332c13658,13659
< #line 1915 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
< void ldv_mutex_unlock_17(struct mutex *ldv_func_arg1 ) 
---
> #line 1922 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_bitmap.c.prepared"
> void ldv_mutex_unlock_14(struct mutex *ldv_func_arg1 ) 
13337c13664
< #line 1920
---
> #line 1927
13339c13666
< #line 1922
---
> #line 1929
13341c13668
< #line 1923
---
> #line 1930
13346c13673
< int ldv_mutex_trylock_42(struct mutex *ldv_func_arg1 ) ;
---
> int ldv_mutex_trylock_36(struct mutex *ldv_func_arg1 ) ;
13348c13675
< void ldv_mutex_unlock_36(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_unlock_30(struct mutex *ldv_func_arg1 ) ;
13350c13677
< void ldv_mutex_unlock_38(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_unlock_32(struct mutex *ldv_func_arg1 ) ;
13352c13679
< void ldv_mutex_unlock_40(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_unlock_34(struct mutex *ldv_func_arg1 ) ;
13354c13681
< void ldv_mutex_unlock_43(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_unlock_37(struct mutex *ldv_func_arg1 ) ;
13356,13362c13683,13685
< void ldv_mutex_unlock_45(struct mutex *ldv_func_arg1 ) ;
< #line 196
< void ldv_mutex_unlock_47(struct mutex *ldv_func_arg1 ) ;
< #line 200
< void ldv_mutex_unlock_48(struct mutex *ldv_func_arg1 ) ;
< #line 10 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
< void ldv_mutex_lock_35(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_unlock_39(struct mutex *ldv_func_arg1 ) ;
> #line 10 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
> void ldv_mutex_lock_29(struct mutex *ldv_func_arg1 ) ;
13364c13687
< void ldv_mutex_lock_37(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_lock_31(struct mutex *ldv_func_arg1 ) ;
13366c13689
< void ldv_mutex_lock_39(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_lock_33(struct mutex *ldv_func_arg1 ) ;
13368c13691
< void ldv_mutex_lock_41(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_lock_35(struct mutex *ldv_func_arg1 ) ;
13370,13372c13693,13835
< void ldv_mutex_lock_44(struct mutex *ldv_func_arg1 ) ;
< #line 30
< void ldv_mutex_lock_46(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_lock_38(struct mutex *ldv_func_arg1 ) ;
> #line 208 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/thread_info.h"
> __inline static struct thread_info *current_thread_info___0(void) 
> { 
>   struct thread_info *ti ;
>   unsigned long pfo_ret__ ;
> 
>   {
> #line 211
>   switch (8UL) {
>   case 1UL: 
> #line 211
>   __asm__  ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
> #line 211
>   goto ldv_6318;
>   case 2UL: 
> #line 211
>   __asm__  ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
> #line 211
>   goto ldv_6318;
>   case 4UL: 
> #line 211
>   __asm__  ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
> #line 211
>   goto ldv_6318;
>   case 8UL: 
> #line 211
>   __asm__  ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
> #line 211
>   goto ldv_6318;
>   default: 
> #line 211
>   __bad_percpu_size();
>   }
>   ldv_6318: 
> #line 211
>   ti = (struct thread_info *)(pfo_ret__ - 8152UL);
> #line 213
>   return (ti);
> }
> }
> #line 163 "include/linux/rcupdate.h"
> __inline static void __rcu_read_lock___0(void) 
> { 
>   struct thread_info *tmp ;
> 
>   {
> #line 165
>   tmp = current_thread_info___0();
> #line 165
>   tmp->preempt_count = tmp->preempt_count + 1;
> #line 165
>   __asm__  volatile   ("": : : "memory");
> #line 166
>   return;
> }
> }
> #line 168 "include/linux/rcupdate.h"
> __inline static void __rcu_read_unlock___0(void) 
> { 
>   struct thread_info *tmp ;
> 
>   {
> #line 170
>   __asm__  volatile   ("": : : "memory");
> #line 170
>   tmp = current_thread_info___0();
> #line 170
>   tmp->preempt_count = tmp->preempt_count + -1;
> #line 170
>   __asm__  volatile   ("": : : "memory");
> #line 171
>   return;
> }
> }
> #line 732 "include/linux/rcupdate.h"
> __inline static void rcu_read_lock___0(void) 
> { 
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
> 
>   {
> #line 734
>   __rcu_read_lock___0();
> #line 736
>   rcu_lock_acquire(& rcu_lock_map);
> #line 737
>   tmp = debug_lockdep_rcu_enabled();
> #line 737
>   if (tmp != 0 && ! __warned) {
> #line 737
>     tmp___0 = rcu_is_cpu_idle();
> #line 737
>     if (tmp___0 != 0) {
> #line 737
>       __warned = 1;
> #line 737
>       lockdep_rcu_suspicious("include/linux/rcupdate.h", 738, "rcu_read_lock() used illegally while idle");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 740
>   return;
> }
> }
> #line 756 "include/linux/rcupdate.h"
> __inline static void rcu_read_unlock___0(void) 
> { 
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
> 
>   {
> #line 758
>   tmp = debug_lockdep_rcu_enabled();
> #line 758
>   if (tmp != 0 && ! __warned) {
> #line 758
>     tmp___0 = rcu_is_cpu_idle();
> #line 758
>     if (tmp___0 != 0) {
> #line 758
>       __warned = 1;
> #line 758
>       lockdep_rcu_suspicious("include/linux/rcupdate.h", 759, "rcu_read_unlock() used illegally while idle");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 760
>   rcu_lock_release(& rcu_lock_map);
> #line 762
>   __rcu_read_unlock___0();
> #line 763
>   return;
> }
> }
13413c13876,13878
< #line 55 "include/linux/drbd.h"
---
> #line 110 "include/linux/idr.h"
> extern void *idr_get_next(struct idr * , int * ) ;
> #line 54 "include/linux/drbd.h"
13415c13880
< #line 303
---
> #line 326
13417c13882
< #line 304
---
> #line 327
13419c13884
< #line 305
---
> #line 328
13452c13917
< #line 255 "include/linux/lru_cache.h"
---
> #line 266 "include/linux/lru_cache.h"
13454c13919
< #line 257
---
> #line 268
13457,13473c13922,13924
< #line 61 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< unsigned int minor_count ;
< #line 157
< struct drbd_conf **minor_table ;
< #line 1174 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static struct drbd_conf *minor_to_mdev(unsigned int minor ) 
< { 
<   struct drbd_conf *mdev ;
< 
<   {
< #line 1178
<   mdev = minor < minor_count ? *(minor_table + (unsigned long )minor) : 0;
< #line 1180
<   return (mdev);
< }
< }
< #line 1575
---
> #line 167 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct idr minors ;
> #line 1418
13475c13926
< #line 1722 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1573 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
13477c13928
< #line 1723
---
> #line 1574
13479c13930
< #line 2287 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 2083 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
13491,13493c13942,13944
< #line 2298
<   if ((unsigned int )*((unsigned short *)mdev + 1138UL) == 288U || (unsigned int )*((unsigned short *)mdev + 1138UL) == 304U) {
< #line 2299
---
> #line 2094
>   if ((unsigned int )*((unsigned short *)mdev + 374UL) == 288U || (unsigned int )*((unsigned short *)mdev + 374UL) == 304U) {
> #line 2095
13496c13947
< #line 2301
---
> #line 2097
13498c13949
< #line 2301
---
> #line 2097
13501c13952
< #line 2304
---
> #line 2100
13503c13954
< #line 2310
---
> #line 2106
13505,13507c13956,13958
< #line 2311
<     tmp___0 = drbd_conn_str((enum drbd_conns )mdev->state.ldv_39979.conn);
< #line 2311
---
> #line 2107
>     tmp___0 = drbd_conn_str((enum drbd_conns )mdev->state.ldv_49522.conn);
> #line 2107
13510c13961
< #line 2314
---
> #line 2110
13513c13964
< #line 2325
---
> #line 2121
13515c13966
< #line 2326
---
> #line 2122
13517c13968
< #line 2327
---
> #line 2123
13519c13970
< #line 2328
---
> #line 2124
13521c13972
< #line 2329
---
> #line 2125
13524c13975
< #line 2331
---
> #line 2127
13528,13529c13979,13992
< #line 2417 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static int is_susp(union drbd_state s ) 
---
> #line 2216 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static int drbd_suspended(struct drbd_conf *mdev ) 
> { 
>   struct drbd_tconn *tconn ;
> 
>   {
> #line 2218
>   tconn = mdev->tconn;
> #line 2220
>   return (((unsigned int )*((unsigned char *)tconn + 132UL) != 0U || (unsigned int )*((unsigned char *)tconn + 132UL) != 0U) || (unsigned int )*((unsigned char *)tconn + 132UL) != 0U);
> }
> }
> #line 2294 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static bool verify_can_do_stop_sector(struct drbd_conf *mdev ) 
13534,13535c13997,13998
< #line 2419
<   return (((unsigned int )*((unsigned char *)(& s) + 2UL) != 0U || (unsigned int )*((unsigned char *)(& s) + 2UL) != 0U) || (unsigned int )*((unsigned char *)(& s) + 2UL) != 0U);
---
> #line 2296
>   return ((bool )((mdev->tconn)->agreed_pro_version > 96 && (mdev->tconn)->agreed_pro_version != 100));
13538c14001
< #line 108 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
---
> #line 124 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
13540c14003
< #line 109
---
> #line 125
13542c14005
< #line 113 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
---
> #line 129 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
13544c14007
< #line 113
---
> #line 129
13547c14010
< #line 121 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
---
> #line 137 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
13554c14017
< #line 124
---
> #line 140
13556c14019
< #line 124
---
> #line 140
13558c14021
< #line 126
---
> #line 142
13560c14023
< #line 127
---
> #line 143
13562c14025
< #line 128
---
> #line 144
13565c14028
< #line 129
---
> #line 145
13567c14030
< #line 129
---
> #line 145
13569c14032
< #line 130
---
> #line 146
13572c14035
< #line 132
---
> #line 148
13576c14039
< #line 133
---
> #line 149
13580c14043
< #line 141 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
---
> #line 157 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
13596a14060
>   bool tmp___0 ;
13599c14063
< #line 146
---
> #line 162
13601c14065
< #line 148
---
> #line 164
13603c14067
< #line 150
---
> #line 166
13605c14069
< #line 151
---
> #line 167
13607c14071
< #line 152
---
> #line 168
13609c14073
< #line 153
---
> #line 169
13611,13614c14075,14078
< #line 153
<   goto ldv_51360;
<   ldv_51359: 
< #line 154
---
> #line 169
>   goto ldv_51946;
>   ldv_51945: 
> #line 170
13616c14080
< #line 153
---
> #line 169
13618,13619c14082,14083
<   ldv_51360: ;
< #line 153
---
>   ldv_51946: ;
> #line 169
13621,13622c14085,14086
< #line 154
<     goto ldv_51359;
---
> #line 170
>     goto ldv_51945;
13626c14090
< #line 155
---
> #line 171
13628c14092
< #line 156
---
> #line 172
13630,13633c14094,14097
< #line 156
<   goto ldv_51363;
<   ldv_51362: 
< #line 157
---
> #line 172
>   goto ldv_51949;
>   ldv_51948: 
> #line 173
13635c14099
< #line 156
---
> #line 172
13637,13638c14101,14102
<   ldv_51363: ;
< #line 156
---
>   ldv_51949: ;
> #line 172
13640,13641c14104,14105
< #line 157
<     goto ldv_51362;
---
> #line 173
>     goto ldv_51948;
13645c14109
< #line 158
---
> #line 174
13647,13649c14111,14113
< #line 160
<   if ((unsigned int )*((unsigned short *)mdev + 1138UL) == 288U || (unsigned int )*((unsigned short *)mdev + 1138UL) == 304U) {
< #line 161
---
> #line 176
>   if ((unsigned int )*((unsigned short *)mdev + 374UL) == 288U || (unsigned int )*((unsigned short *)mdev + 374UL) == 304U) {
> #line 177
13652c14116
< #line 163
---
> #line 179
13655c14119
< #line 164
---
> #line 180
13657c14121
< #line 167
---
> #line 183
13659c14123
< #line 168
---
> #line 184
13662c14126
< #line 172
---
> #line 188
13665c14129
< #line 189
---
> #line 205
13667c14131
< #line 190
---
> #line 206
13669c14133
< #line 191
---
> #line 207
13671c14135
< #line 192
---
> #line 208
13676c14140
< #line 194
---
> #line 210
13678c14142
< #line 195
---
> #line 211
13683c14147
< #line 196
---
> #line 212
13685c14149
< #line 197
---
> #line 213
13687c14151
< #line 199
---
> #line 215
13689c14153
< #line 202
---
> #line 218
13691c14155
< #line 203
---
> #line 219
13693c14157
< #line 204
---
> #line 220
13695c14159
< #line 205
---
> #line 221
13697c14161
< #line 207
---
> #line 223
13699c14163
< #line 209
---
> #line 225
13701c14165
< #line 210
---
> #line 226
13703c14167
< #line 211
---
> #line 227
13705c14169
< #line 212
---
> #line 228
13710c14174
< #line 213
---
> #line 229
13712c14176
< #line 214
---
> #line 230
13714c14178
< #line 215
---
> #line 231
13716c14180
< #line 216
---
> #line 232
13721c14185
< #line 222
---
> #line 238
13723c14187
< #line 223
---
> #line 239
13725c14189
< #line 224
---
> #line 240
13730c14194
< #line 225
---
> #line 241
13732c14196
< #line 226
---
> #line 242
13734c14198
< #line 227
---
> #line 243
13736c14200
< #line 228
---
> #line 244
13738,13740c14202,14204
< #line 230
<   if ((unsigned int )*((unsigned short *)mdev + 1138UL) == 272U || (unsigned int )*((unsigned short *)mdev + 1138UL) == 288U) {
< #line 232
---
> #line 246
>   if ((unsigned int )*((unsigned short *)mdev + 374UL) == 272U || (unsigned int )*((unsigned short *)mdev + 374UL) == 288U) {
> #line 248
13742c14206
< #line 233
---
> #line 249
13747c14211
< #line 235
---
> #line 251
13749c14213
< #line 237
---
> #line 253
13751c14215
< #line 240
---
> #line 256
13753c14217
< #line 240
---
> #line 256
13755c14219
< #line 242
---
> #line 258
13757,13759c14221,14223
< #line 243
<     if ((unsigned int )*((unsigned short *)mdev + 1138UL) == 288U || (unsigned int )*((unsigned short *)mdev + 1138UL) == 304U) {
< #line 245
---
> #line 259
>     if ((unsigned int )*((unsigned short *)mdev + 374UL) == 288U || (unsigned int )*((unsigned short *)mdev + 374UL) == 304U) {
> #line 261
13761,13763c14225,14229
< #line 246
<       if (mdev->agreed_pro_version > 96) {
< #line 247
---
> #line 262
>       tmp___0 = verify_can_do_stop_sector(mdev);
> #line 262
>       if ((int )tmp___0) {
> #line 263
13769c14235
< #line 249
---
> #line 265
13772c14238
< #line 252
---
> #line 268
13775c14241
< #line 257
---
> #line 273
13777c14243
< #line 258
---
> #line 274
13782c14248
< #line 259
---
> #line 275
13787c14253
< #line 261
---
> #line 277
13791c14257
< #line 263 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
---
> #line 279 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
13798c14264
< #line 265
---
> #line 281
13800c14266
< #line 265
---
> #line 281
13802c14268
< #line 267
---
> #line 283
13804c14270
< #line 270
---
> #line 286
13808c14274
< #line 273 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
---
> #line 289 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
13812c14278
<   int hole ;
---
>   int prev_i ;
13814a14281,14282
>   struct net_conf *nc ;
>   char wp ;
13817c14285,14287
<   int tmp___0 ;
---
>   void *tmp___0 ;
>   struct net_conf *_________p1 ;
>   bool __warned ;
13824,13826c14294,14296
<   char const   *tmp___7 ;
<   char const   *tmp___8 ;
<   char const   *tmp___9 ;
---
>   int tmp___7 ;
>   int tmp___8 ;
>   int tmp___9 ;
13828,13829c14298,14303
<   unsigned long tmp___11 ;
<   int tmp___12 ;
---
>   char const   *tmp___11 ;
>   char const   *tmp___12 ;
>   char const   *tmp___13 ;
>   unsigned long tmp___14 ;
>   int tmp___15 ;
>   void *tmp___16 ;
13832,13834c14306,14308
< #line 275
<   hole = 0;
< #line 279
---
> #line 291
>   prev_i = -1;
> #line 297
13836c14310
< #line 279
---
> #line 297
13838c14312
< #line 279
---
> #line 297
13840c14314
< #line 285
---
> #line 303
13842,13844c14316,14320
< #line 285
<   seq_printf(seq, "version: 8.3.14 (api:%d/proto:%d-%d)\n%s\n", 88, 86, 97, tmp);
< #line 308
---
> #line 303
>   seq_printf(seq, "version: 8.4.2 (api:%d/proto:%d-%d)\n%s\n", 1, 86, 101, tmp);
> #line 326
>   rcu_read_lock___0();
> #line 327
13846,13864c14322,14331
< #line 308
<   goto ldv_51386;
<   ldv_51385: 
< #line 309
<   mdev = minor_to_mdev((unsigned int )i);
< #line 310
<   if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
< #line 311
<     hole = 1;
< #line 312
<     goto ldv_51384;
<   } else {
< 
<   }
< #line 314
<   if (hole != 0) {
< #line 315
<     hole = 0;
< #line 316
---
> #line 327
>   tmp___0 = idr_get_next(& minors, & i);
> #line 327
>   mdev = (struct drbd_conf *)tmp___0;
> #line 327
>   goto ldv_51976;
>   ldv_51975: ;
> #line 328
>   if (i + -1 != prev_i) {
> #line 329
13869,13873c14336,14342
< #line 319
<   sn = drbd_conn_str((enum drbd_conns )mdev->state.ldv_39979.conn);
< #line 321
<   if (((unsigned int )*((unsigned short *)mdev + 1138UL) == 0U && (unsigned int )*((unsigned char *)mdev + 2277UL) == 0U) && (unsigned int )*((unsigned char *)mdev + 2276UL) == 2U) {
< #line 324
---
> #line 330
>   prev_i = i;
> #line 332
>   sn = drbd_conn_str((enum drbd_conns )mdev->state.ldv_49522.conn);
> #line 334
>   if (((unsigned int )*((unsigned short *)mdev + 374UL) == 0U && (unsigned int )*((unsigned char *)mdev + 749UL) == 0U) && (unsigned int )*((unsigned char *)mdev + 748UL) == 2U) {
> #line 337
13876c14345
< #line 327
---
> #line 340
13878,13900c14347,14394
< #line 329
<     tmp___0 = atomic_read((atomic_t const   *)(& mdev->ap_bio_cnt));
< #line 329
<     tmp___1 = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 329
<     tmp___2 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
< #line 329
<     tmp___3 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
< #line 329
<     tmp___4 = atomic_read((atomic_t const   *)(& mdev->local_cnt));
< #line 329
<     tmp___5 = drbd_test_flag(mdev, AL_SUSPENDED);
< #line 329
<     tmp___6 = is_susp(mdev->state);
< #line 329
<     tmp___7 = drbd_disk_str((enum drbd_disk_state )mdev->state.ldv_39979.pdsk);
< #line 329
<     tmp___8 = drbd_disk_str((enum drbd_disk_state )mdev->state.ldv_39979.disk);
< #line 329
<     tmp___9 = drbd_role_str((enum drbd_role )mdev->state.ldv_39979.peer);
< #line 329
<     tmp___10 = drbd_role_str((enum drbd_role )mdev->state.ldv_39979.role);
< #line 329
---
> #line 342
>     _________p1 = *((struct net_conf * volatile  *)(& (mdev->tconn)->net_conf));
> #line 342
>     tmp___1 = debug_lockdep_rcu_enabled();
> #line 342
>     if (tmp___1 != 0 && ! __warned) {
> #line 342
>       tmp___2 = rcu_read_lock_held();
> #line 342
>       if (tmp___2 == 0 && 1) {
> #line 342
>         __warned = 1;
> #line 342
>         lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared",
>                                342, "suspicious rcu_dereference_check() usage");
>       } else {
> 
>       }
>     } else {
> 
>     }
> #line 342
>     nc = _________p1;
> #line 343
>     wp = (unsigned long )nc != (unsigned long )((struct net_conf *)0) ? (char )((unsigned int )((unsigned char )nc->wire_protocol) + 64U) : 32;
> #line 344
>     tmp___3 = atomic_read((atomic_t const   *)(& mdev->ap_bio_cnt));
> #line 344
>     tmp___4 = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
> #line 344
>     tmp___5 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
> #line 344
>     tmp___6 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
> #line 344
>     tmp___7 = atomic_read((atomic_t const   *)(& mdev->local_cnt));
> #line 344
>     tmp___8 = constant_test_bit(18U, (unsigned long const volatile   *)(& mdev->flags));
> #line 344
>     tmp___9 = drbd_suspended(mdev);
> #line 344
>     tmp___10 = drbd_disk_str((enum drbd_disk_state )mdev->state.ldv_49522.pdsk);
> #line 344
>     tmp___11 = drbd_disk_str((enum drbd_disk_state )mdev->state.ldv_49522.disk);
> #line 344
>     tmp___12 = drbd_role_str((enum drbd_role )mdev->state.ldv_49522.peer);
> #line 344
>     tmp___13 = drbd_role_str((enum drbd_role )mdev->state.ldv_49522.role);
> #line 344
13902,13907c14396,14399
<                i, sn, tmp___10, tmp___9, tmp___8, tmp___7, (unsigned long )mdev->net_conf != (unsigned long )((struct net_conf *)0) ? (mdev->net_conf)->wire_protocol + 64 : 32,
<                tmp___6 != 0 ? 115 : 114, (unsigned int )*((unsigned char *)mdev + 2278UL) != 0U ? 97 : 45,
<                (unsigned int )*((unsigned char *)mdev + 2278UL) != 0U ? 112 : 45,
<                (unsigned int )*((unsigned char *)mdev + 2278UL) != 0U ? 117 : 45,
<                (int )mdev->congestion_reason != 0 ? (int )mdev->congestion_reason : 45,
<                tmp___5 != 0 ? 115 : 45, mdev->send_cnt / 2U, mdev->recv_cnt / 2U,
---
>                i, sn, tmp___13, tmp___12, tmp___11, tmp___10, (int )wp, tmp___9 != 0 ? 115 : 114,
>                (unsigned int )*((unsigned char *)mdev + 750UL) != 0U ? 97 : 45, (unsigned int )*((unsigned char *)mdev + 750UL) != 0U ? 112 : 45,
>                (unsigned int )*((unsigned char *)mdev + 750UL) != 0U ? 117 : 45, (int )mdev->congestion_reason != 0 ? (int )mdev->congestion_reason : 45,
>                tmp___8 != 0 ? 115 : 45, mdev->send_cnt / 2U, mdev->recv_cnt / 2U,
13909,13913c14401,14406
<                tmp___4, tmp___2 + tmp___3, tmp___1, tmp___0, mdev->epochs, (int )write_ordering_chars[(unsigned int )mdev->write_ordering]);
< #line 360
<     tmp___11 = drbd_bm_total_weight(mdev);
< #line 360
<     seq_printf(seq, " oos:%llu\n", (unsigned long long )tmp___11 << 2);
---
>                tmp___7, tmp___5 + tmp___6, tmp___4, tmp___3, (mdev->tconn)->epochs,
>                (int )write_ordering_chars[(unsigned int )(mdev->tconn)->write_ordering]);
> #line 374
>     tmp___14 = drbd_bm_total_weight(mdev);
> #line 374
>     seq_printf(seq, " oos:%llu\n", (unsigned long long )tmp___14 << 2);
13915,13917c14408,14410
< #line 364
<   if ((((unsigned int )*((unsigned short *)mdev + 1138UL) == 256U || (unsigned int )*((unsigned short *)mdev + 1138UL) == 272U) || (unsigned int )*((unsigned short *)mdev + 1138UL) == 288U) || (unsigned int )*((unsigned short *)mdev + 1138UL) == 304U) {
< #line 368
---
> #line 378
>   if ((((unsigned int )*((unsigned short *)mdev + 374UL) == 256U || (unsigned int )*((unsigned short *)mdev + 374UL) == 272U) || (unsigned int )*((unsigned short *)mdev + 374UL) == 288U) || (unsigned int )*((unsigned short *)mdev + 374UL) == 304U) {
> #line 382
13922c14415
< #line 370
---
> #line 384
13924,13928c14417,14421
< #line 370
<     tmp___12 = _get_ldev_if_state(mdev, D_FAILED);
< #line 370
<     if (tmp___12 != 0) {
< #line 371
---
> #line 384
>     tmp___15 = _get_ldev_if_state(mdev, D_FAILED);
> #line 384
>     if (tmp___15 != 0) {
> #line 385
13930c14423
< #line 372
---
> #line 386
13932c14425
< #line 373
---
> #line 387
13940c14433
< #line 376
---
> #line 390
13942c14435
< #line 377
---
> #line 391
13944c14437
< #line 378
---
> #line 392
13952,13953c14445
<   ldv_51384: 
< #line 308
---
> #line 327
13955,13959c14447,14455
<   ldv_51386: ;
< #line 308
<   if ((unsigned int )i < minor_count) {
< #line 309
<     goto ldv_51385;
---
> #line 327
>   tmp___16 = idr_get_next(& minors, & i);
> #line 327
>   mdev = (struct drbd_conf *)tmp___16;
>   ldv_51976: ;
> #line 327
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 328
>     goto ldv_51975;
13963,13964c14459,14461
< 
< #line 384
---
> #line 397
>   rcu_read_unlock___0();
> #line 399
13968c14465
< #line 387 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
---
> #line 402 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
13976c14473
< #line 389
---
> #line 404
13978c14475
< #line 389
---
> #line 404
13980c14477
< #line 390
---
> #line 405
13982c14479
< #line 390
---
> #line 405
13984c14481
< #line 390
---
> #line 405
13989c14486
< #line 391
---
> #line 406
13993c14490
< #line 394 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
---
> #line 409 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
13999c14496
< #line 396
---
> #line 411
14001c14498
< #line 397
---
> #line 412
14003c14500
< #line 397
---
> #line 412
14007c14504
< #line 418
---
> #line 433
14009c14506
< #line 421
---
> #line 436
14011c14508
< #line 427
---
> #line 442
14013c14510
< #line 430
---
> #line 445
14015c14512
< #line 433
---
> #line 448
14017c14514
< #line 436 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
---
> #line 451 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
14019c14516
< #line 439 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
---
> #line 454 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
14030c14527
< #line 473
---
> #line 488
14032c14529
< #line 463
---
> #line 478
14034c14531
< #line 472
---
> #line 487
14036,14039c14533,14536
< #line 476
<   goto ldv_51422;
<   ldv_51421: 
< #line 480
---
> #line 491
>   goto ldv_52012;
>   ldv_52011: 
> #line 495
14041c14538
< #line 480
---
> #line 495
14044c14541
< #line 485
---
> #line 500
14046c14543
< #line 490
---
> #line 505
14048c14545
< #line 491
---
> #line 506
14050c14547
< #line 492
---
> #line 507
14052c14549
< #line 493
---
> #line 508
14054c14551
< #line 494
---
> #line 509
14059c14556
< #line 495
---
> #line 510
14064,14065c14561,14562
< #line 501
<   goto ldv_51418;
---
> #line 516
>   goto ldv_52008;
14067c14564
< #line 505
---
> #line 520
14069c14566
< #line 510
---
> #line 525
14071c14568
< #line 511
---
> #line 526
14073c14570
< #line 512
---
> #line 527
14078,14079c14575,14576
< #line 518
<   goto ldv_51418;
---
> #line 533
>   goto ldv_52008;
14081,14082c14578,14579
< #line 519
<   goto ldv_51418;
---
> #line 534
>   goto ldv_52008;
14084,14086c14581,14583
<   ldv_51418: ;
<   ldv_51422: 
< #line 476
---
>   ldv_52008: ;
>   ldv_52012: 
> #line 491
14088c14585
< #line 476
---
> #line 491
14090,14091c14587,14588
< #line 478
<     goto ldv_51421;
---
> #line 493
>     goto ldv_52011;
14097c14594
< #line 528
---
> #line 543
14099c14596
< #line 531
---
> #line 546
14103,14104c14600,14601
< #line 535 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
< void ldv_mutex_lock_35(struct mutex *ldv_func_arg1 ) 
---
> #line 550 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
> void ldv_mutex_lock_29(struct mutex *ldv_func_arg1 ) 
14109c14606
< #line 540
---
> #line 555
14111c14608
< #line 542
---
> #line 557
14113c14610
< #line 543
---
> #line 558
14117,14118c14614,14615
< #line 545 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
< void ldv_mutex_unlock_36(struct mutex *ldv_func_arg1 ) 
---
> #line 560 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
> void ldv_mutex_unlock_30(struct mutex *ldv_func_arg1 ) 
14123c14620
< #line 550
---
> #line 565
14125c14622
< #line 552
---
> #line 567
14127c14624
< #line 553
---
> #line 568
14131,14132c14628,14629
< #line 555 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
< void ldv_mutex_lock_37(struct mutex *ldv_func_arg1 ) 
---
> #line 570 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
> void ldv_mutex_lock_31(struct mutex *ldv_func_arg1 ) 
14137c14634
< #line 560
---
> #line 575
14139c14636
< #line 562
---
> #line 577
14141c14638
< #line 563
---
> #line 578
14145,14146c14642,14643
< #line 565 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
< void ldv_mutex_unlock_38(struct mutex *ldv_func_arg1 ) 
---
> #line 580 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
> void ldv_mutex_unlock_32(struct mutex *ldv_func_arg1 ) 
14151c14648
< #line 570
---
> #line 585
14153c14650
< #line 572
---
> #line 587
14155c14652
< #line 573
---
> #line 588
14159,14160c14656,14657
< #line 575 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
< void ldv_mutex_lock_39(struct mutex *ldv_func_arg1 ) 
---
> #line 590 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
> void ldv_mutex_lock_33(struct mutex *ldv_func_arg1 ) 
14165c14662
< #line 580
---
> #line 595
14167c14664
< #line 582
---
> #line 597
14169c14666
< #line 583
---
> #line 598
14173,14174c14670,14671
< #line 585 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
< void ldv_mutex_unlock_40(struct mutex *ldv_func_arg1 ) 
---
> #line 600 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
> void ldv_mutex_unlock_34(struct mutex *ldv_func_arg1 ) 
14179c14676
< #line 590
---
> #line 605
14181c14678
< #line 592
---
> #line 607
14183c14680
< #line 593
---
> #line 608
14187,14188c14684,14685
< #line 595 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
< void ldv_mutex_lock_41(struct mutex *ldv_func_arg1 ) 
---
> #line 610 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
> void ldv_mutex_lock_35(struct mutex *ldv_func_arg1 ) 
14193c14690
< #line 600
---
> #line 615
14195c14692
< #line 602
---
> #line 617
14197c14694
< #line 603
---
> #line 618
14201,14202c14698,14699
< #line 605 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
< int ldv_mutex_trylock_42(struct mutex *ldv_func_arg1 ) 
---
> #line 620 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
> int ldv_mutex_trylock_36(struct mutex *ldv_func_arg1 ) 
14209c14706
< #line 610
---
> #line 625
14211c14708
< #line 610
---
> #line 625
14213c14710
< #line 612
---
> #line 627
14215c14712
< #line 612
---
> #line 627
14217c14714
< #line 614
---
> #line 629
14221,14222c14718,14719
< #line 617 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
< void ldv_mutex_unlock_43(struct mutex *ldv_func_arg1 ) 
---
> #line 632 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
> void ldv_mutex_unlock_37(struct mutex *ldv_func_arg1 ) 
14227c14724
< #line 622
---
> #line 637
14229c14726
< #line 624
---
> #line 639
14231c14728
< #line 625
---
> #line 640
14235,14236c14732,14733
< #line 627 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
< void ldv_mutex_lock_44(struct mutex *ldv_func_arg1 ) 
---
> #line 642 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
> void ldv_mutex_lock_38(struct mutex *ldv_func_arg1 ) 
14241c14738
< #line 632
---
> #line 647
14243c14740
< #line 634
---
> #line 649
14245c14742
< #line 635
---
> #line 650
14249,14250c14746,14747
< #line 637 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
< void ldv_mutex_unlock_45(struct mutex *ldv_func_arg1 ) 
---
> #line 652 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
> void ldv_mutex_unlock_39(struct mutex *ldv_func_arg1 ) 
14255c14752
< #line 642
---
> #line 657
14257,14299c14754
< #line 644
<   mutex_unlock(ldv_func_arg1);
< #line 645
<   return;
< }
< }
< #line 647 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
< void ldv_mutex_lock_46(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 652
<   ldv_mutex_lock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 654
<   mutex_lock(ldv_func_arg1);
< #line 655
<   return;
< }
< }
< #line 657 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
< void ldv_mutex_unlock_47(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 662
<   ldv_mutex_unlock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 664
<   mutex_unlock(ldv_func_arg1);
< #line 665
<   return;
< }
< }
< #line 667 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_proc.c.prepared"
< void ldv_mutex_unlock_48(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 672
<   ldv_mutex_unlock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 674
---
> #line 659
14301c14756
< #line 675
---
> #line 660
14309,14310d14763
< #line 323
< extern int sprintf(char * , char const   *  , ...) ;
14368a14822,14849
> #line 153 "include/linux/list.h"
> __inline static void list_move(struct list_head *list , struct list_head *head ) 
> { 
> 
> 
>   {
> #line 155
>   __list_del_entry(list);
> #line 156
>   list_add(list, head);
> #line 157
>   return;
> }
> }
> #line 164 "include/linux/list.h"
> __inline static void list_move_tail(struct list_head *list , struct list_head *head ) 
> { 
> 
> 
>   {
> #line 167
>   __list_del_entry(list);
> #line 168
>   list_add_tail(list, head);
> #line 169
>   return;
> }
> }
14517,14519d14997
< #line 279 "include/linux/lockdep.h"
< extern void lockdep_init_map(struct lockdep_map * , char const   * , struct lock_class_key * ,
<                              int  ) ;
14521,14523c14999,15001
< int ldv_mutex_trylock_66(struct mutex *ldv_func_arg1 ) ;
< #line 176
< void ldv_mutex_unlock_64(struct mutex *ldv_func_arg1 ) ;
---
> int ldv_mutex_trylock_54(struct mutex *ldv_func_arg1 ) ;
> #line 175
> int ldv_mutex_trylock_64(struct mutex *ldv_func_arg1 ) ;
14525c15003
< void ldv_mutex_unlock_67(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_unlock_52(struct mutex *ldv_func_arg1 ) ;
14527c15005
< void ldv_mutex_unlock_69(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_unlock_55(struct mutex *ldv_func_arg1 ) ;
14529c15007
< void ldv_mutex_unlock_71(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_unlock_57(struct mutex *ldv_func_arg1 ) ;
14531c15009
< void ldv_mutex_unlock_73(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_unlock_59(struct mutex *ldv_func_arg1 ) ;
14533c15011
< void ldv_mutex_unlock_75(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_unlock_61(struct mutex *ldv_func_arg1 ) ;
14535c15013
< void ldv_mutex_unlock_76(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_unlock_63(struct mutex *ldv_func_arg1 ) ;
14537c15015
< void ldv_mutex_unlock_78(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_unlock_66(struct mutex *ldv_func_arg1 ) ;
14539c15017
< void ldv_mutex_unlock_80(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_unlock_67(struct mutex *ldv_func_arg1 ) ;
14541,14543c15019,15023
< void ldv_mutex_unlock_82(struct mutex *ldv_func_arg1 ) ;
< #line 10 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void ldv_mutex_lock_63(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_unlock_69(struct mutex *ldv_func_arg1 ) ;
> #line 216
> void ldv_mutex_unlock_71(struct mutex *ldv_func_arg1 ) ;
> #line 10 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> void ldv_mutex_lock_51(struct mutex *ldv_func_arg1 ) ;
14545c15025
< void ldv_mutex_lock_65(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_lock_53(struct mutex *ldv_func_arg1 ) ;
14547c15027
< void ldv_mutex_lock_68(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_lock_56(struct mutex *ldv_func_arg1 ) ;
14549c15029
< void ldv_mutex_lock_70(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_lock_58(struct mutex *ldv_func_arg1 ) ;
14551c15031
< void ldv_mutex_lock_72(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_lock_60(struct mutex *ldv_func_arg1 ) ;
14553c15033
< void ldv_mutex_lock_74(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_lock_62(struct mutex *ldv_func_arg1 ) ;
14555c15035
< void ldv_mutex_lock_77(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_lock_65(struct mutex *ldv_func_arg1 ) ;
14557c15037
< void ldv_mutex_lock_79(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_lock_68(struct mutex *ldv_func_arg1 ) ;
14559c15039,15101
< void ldv_mutex_lock_81(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_lock_70(struct mutex *ldv_func_arg1 ) ;
> #line 111
> void ldv_mutex_lock_mutex_of_drbd_socket(struct mutex *lock ) ;
> #line 115
> void ldv_mutex_unlock_mutex_of_drbd_socket(struct mutex *lock ) ;
> #line 119
> void ldv_mutex_lock_state_mutex_of_drbd_conf(struct mutex *lock ) ;
> #line 120
> int ldv_mutex_trylock_state_mutex_of_drbd_conf(struct mutex *lock ) ;
> #line 123
> void ldv_mutex_unlock_state_mutex_of_drbd_conf(struct mutex *lock ) ;
> #line 208 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/thread_info.h"
> __inline static struct thread_info *current_thread_info___1(void) 
> { 
>   struct thread_info *ti ;
>   unsigned long pfo_ret__ ;
> 
>   {
> #line 211
>   switch (8UL) {
>   case 1UL: 
> #line 211
>   __asm__  ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
> #line 211
>   goto ldv_6358;
>   case 2UL: 
> #line 211
>   __asm__  ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
> #line 211
>   goto ldv_6358;
>   case 4UL: 
> #line 211
>   __asm__  ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
> #line 211
>   goto ldv_6358;
>   case 8UL: 
> #line 211
>   __asm__  ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
> #line 211
>   goto ldv_6358;
>   default: 
> #line 211
>   __bad_percpu_size();
>   }
>   ldv_6358: 
> #line 211
>   ti = (struct thread_info *)(pfo_ret__ - 8152UL);
> #line 213
>   return (ti);
> }
> }
> #line 89 "include/linux/thread_info.h"
> __inline static int test_ti_thread_flag(struct thread_info *ti , int flag ) 
> { 
>   int tmp ;
> 
>   {
> #line 91
>   tmp = variable_test_bit(flag, (unsigned long const volatile   *)(& ti->flags));
> #line 91
>   return (tmp);
> }
> }
14593a15136,15237
> #line 163 "include/linux/rcupdate.h"
> __inline static void __rcu_read_lock___1(void) 
> { 
>   struct thread_info *tmp ;
> 
>   {
> #line 165
>   tmp = current_thread_info___1();
> #line 165
>   tmp->preempt_count = tmp->preempt_count + 1;
> #line 165
>   __asm__  volatile   ("": : : "memory");
> #line 166
>   return;
> }
> }
> #line 168 "include/linux/rcupdate.h"
> __inline static void __rcu_read_unlock___1(void) 
> { 
>   struct thread_info *tmp ;
> 
>   {
> #line 170
>   __asm__  volatile   ("": : : "memory");
> #line 170
>   tmp = current_thread_info___1();
> #line 170
>   tmp->preempt_count = tmp->preempt_count + -1;
> #line 170
>   __asm__  volatile   ("": : : "memory");
> #line 171
>   return;
> }
> }
> #line 732 "include/linux/rcupdate.h"
> __inline static void rcu_read_lock___1(void) 
> { 
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
> 
>   {
> #line 734
>   __rcu_read_lock___1();
> #line 736
>   rcu_lock_acquire(& rcu_lock_map);
> #line 737
>   tmp = debug_lockdep_rcu_enabled();
> #line 737
>   if (tmp != 0 && ! __warned) {
> #line 737
>     tmp___0 = rcu_is_cpu_idle();
> #line 737
>     if (tmp___0 != 0) {
> #line 737
>       __warned = 1;
> #line 737
>       lockdep_rcu_suspicious("include/linux/rcupdate.h", 738, "rcu_read_lock() used illegally while idle");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 740
>   return;
> }
> }
> #line 756 "include/linux/rcupdate.h"
> __inline static void rcu_read_unlock___1(void) 
> { 
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
> 
>   {
> #line 758
>   tmp = debug_lockdep_rcu_enabled();
> #line 758
>   if (tmp != 0 && ! __warned) {
> #line 758
>     tmp___0 = rcu_is_cpu_idle();
> #line 758
>     if (tmp___0 != 0) {
> #line 758
>       __warned = 1;
> #line 758
>       lockdep_rcu_suspicious("include/linux/rcupdate.h", 759, "rcu_read_unlock() used illegally while idle");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 760
>   rcu_lock_release(& rcu_lock_map);
> #line 762
>   __rcu_read_unlock___1();
> #line 763
>   return;
> }
> }
14597a15242,15270
> #line 40 "include/linux/kref.h"
> __inline static void kref_get(struct kref *kref ) 
> { 
>   int __ret_warn_on ;
>   int tmp ;
>   long tmp___0 ;
> 
>   {
> #line 42
>   tmp = atomic_read((atomic_t const   *)(& kref->refcount));
> #line 42
>   __ret_warn_on = tmp == 0;
> #line 42
>   tmp___0 = __builtin_expect(__ret_warn_on != 0, 0L);
> #line 42
>   if (tmp___0 != 0L) {
> #line 42
>     warn_slowpath_null("include/linux/kref.h", 42);
>   } else {
> 
>   }
> #line 42
>   __builtin_expect(__ret_warn_on != 0, 0L);
> #line 43
>   atomic_inc(& kref->refcount);
> #line 44
>   return;
> }
> }
14626c15299
<     return (page->ldv_14722.first_page);
---
>     return (page->ldv_14746.first_page);
14644c15317
<   tmp___0 = atomic_read((atomic_t const   *)(& tmp->ldv_14703.ldv_14702.ldv_14701._count));
---
>   tmp___0 = atomic_read((atomic_t const   *)(& tmp->ldv_14727.ldv_14726.ldv_14725._count));
14667c15340
<     ldv_19186: ;
---
>     ldv_19226: ;
14669c15342
<     goto ldv_19186;
---
>     goto ldv_19226;
14680c15353
<     ldv_19187: ;
---
>     ldv_19227: ;
14682c15355
<     goto ldv_19187;
---
>     goto ldv_19227;
14693c15366
<     ldv_19188: ;
---
>     ldv_19228: ;
14695c15368
<     goto ldv_19188;
---
>     goto ldv_19228;
14724,14770d15396
< #line 32 "include/linux/semaphore.h"
< __inline static void sema_init(struct semaphore *sem , int val ) 
< { 
<   struct lock_class_key __key ;
<   struct semaphore __constr_expr_0 ;
< 
<   {
< #line 35
<   __constr_expr_0.lock.raw_lock.ldv_2023.head_tail = 0U;
< #line 35
<   __constr_expr_0.lock.magic = 3735899821U;
< #line 35
<   __constr_expr_0.lock.owner_cpu = 4294967295U;
< #line 35
<   __constr_expr_0.lock.owner = 0xffffffffffffffffUL;
< #line 35
<   __constr_expr_0.lock.dep_map.key = 0;
< #line 35
<   __constr_expr_0.lock.dep_map.class_cache[0] = 0;
< #line 35
<   __constr_expr_0.lock.dep_map.class_cache[1] = 0;
< #line 35
<   __constr_expr_0.lock.dep_map.name = "(*sem).lock";
< #line 35
<   __constr_expr_0.lock.dep_map.cpu = 0;
< #line 35
<   __constr_expr_0.lock.dep_map.ip = 0UL;
< #line 35
<   __constr_expr_0.count = (unsigned int )val;
< #line 35
<   __constr_expr_0.wait_list.next = & sem->wait_list;
< #line 35
<   __constr_expr_0.wait_list.prev = & sem->wait_list;
< #line 35
<   *sem = __constr_expr_0;
< #line 36
<   lockdep_init_map(& sem->lock.dep_map, "semaphore->lock", & __key, 0);
< #line 37
<   return;
< }
< }
< #line 40
< extern int down_interruptible(struct semaphore * ) ;
< #line 42
< extern int down_trylock(struct semaphore * ) ;
< #line 44
< extern void up(struct semaphore * ) ;
14786a15413,15441
> #line 2533 "include/linux/sched.h"
> __inline static int test_tsk_thread_flag(struct task_struct *tsk , int flag ) 
> { 
>   int tmp ;
> 
>   {
> #line 2535
>   tmp = test_ti_thread_flag((struct thread_info *)tsk->stack, flag);
> #line 2535
>   return (tmp);
> }
> }
> #line 2559 "include/linux/sched.h"
> __inline static int signal_pending(struct task_struct *p ) 
> { 
>   int tmp ;
>   long tmp___0 ;
> 
>   {
> #line 2561
>   tmp = test_tsk_thread_flag(p, 2);
> #line 2561
>   tmp___0 = __builtin_expect(tmp != 0, 0L);
> #line 2561
>   return ((int )tmp___0);
> }
> }
> #line 104 "include/linux/idr.h"
> extern void *idr_find(struct idr * , int  ) ;
14897c15552,15555
< #line 674 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 131 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_state.h"
> enum drbd_state_rv conn_request_state(struct drbd_tconn *tconn , union drbd_state mask ,
>                                       union drbd_state val , enum chg_state_flags flags ) ;
> #line 525 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
14903c15561
< #line 680
---
> #line 531
14905c15563
< #line 681
---
> #line 532
14909,14968c15567,15570
< #line 1154 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static void drbd_clear_flag(struct drbd_conf *mdev , enum drbd_flag f ) 
< { 
< 
< 
<   {
< #line 1156
<   clear_bit((int )f, (unsigned long volatile   *)(& mdev->drbd_flags));
< #line 1157
<   return;
< }
< }
< #line 1164 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static int drbd_test_and_set_flag(struct drbd_conf *mdev , enum drbd_flag f ) 
< { 
<   int tmp ;
< 
<   {
< #line 1166
<   tmp = test_and_set_bit((int )f, (unsigned long volatile   *)(& mdev->drbd_flags));
< #line 1166
<   return (tmp);
< }
< }
< #line 1183 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static unsigned int mdev_to_minor(struct drbd_conf *mdev ) 
< { 
< 
< 
<   {
< #line 1185
<   return (mdev->minor);
< }
< }
< #line 1196 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static int drbd_get_data_sock(struct drbd_conf *mdev ) 
< { 
<   long tmp ;
< 
<   {
< #line 1198
<   ldv_mutex_lock_74(& mdev->data.mutex);
< #line 1201
<   tmp = __builtin_expect((unsigned long )mdev->data.socket == (unsigned long )((struct socket *)0),
<                          0L);
< #line 1201
<   if (tmp != 0L) {
< #line 1202
<     ldv_mutex_unlock_75(& mdev->data.mutex);
< #line 1203
<     return (0);
<   } else {
< 
<   }
< #line 1205
<   return (1);
< }
< }
< #line 1208 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static void drbd_put_data_sock(struct drbd_conf *mdev ) 
---
> #line 798
> struct fifo_buffer *fifo_alloc(int fifo_size ) ;
> #line 1037 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static struct drbd_conf *minor_to_mdev(unsigned int minor ) 
14970c15572
< 
---
>   void *tmp ;
14973,14976c15575,15578
< #line 1210
<   ldv_mutex_unlock_76(& mdev->data.mutex);
< #line 1211
<   return;
---
> #line 1039
>   tmp = idr_find(& minors, (int )minor);
> #line 1039
>   return ((struct drbd_conf *)tmp);
14979,14996c15581,15588
< #line 1237
< void drbd_force_state(struct drbd_conf *mdev , union drbd_state mask , union drbd_state val ) ;
< #line 1249
< void _drbd_thread_stop(struct drbd_thread *thi , int restart , int wait ) ;
< #line 1251
< void drbd_thread_current_set_cpu(struct drbd_conf *mdev ) ;
< #line 1268
< int drbd_gen_and_send_sync_uuid(struct drbd_conf *mdev ) ;
< #line 1272
< int _drbd_send_cmd(struct drbd_conf *mdev , struct socket *sock , enum drbd_packets cmd ,
<                    struct p_header80 *h , size_t size , unsigned int msg_flags ) ;
< #line 1277
< int drbd_send_cmd(struct drbd_conf *mdev , int use_data_socket , enum drbd_packets cmd ,
<                   struct p_header80 *h , size_t size ) ;
< #line 1285
< int drbd_send_ack(struct drbd_conf *mdev , enum drbd_packets cmd , struct drbd_epoch_entry *e ) ;
< #line 1291
< int drbd_send_ack_ex(struct drbd_conf *mdev , enum drbd_packets cmd , sector_t sector ,
---
> #line 1068
> void drbd_thread_current_set_cpu(struct drbd_thread *thi ) ;
> #line 1087
> void drbd_gen_and_send_sync_uuid(struct drbd_conf *mdev ) ;
> #line 1094
> int drbd_send_ack(struct drbd_conf *mdev , enum drbd_packet cmd , struct drbd_peer_request *peer_req ) ;
> #line 1100
> int drbd_send_ack_ex(struct drbd_conf *mdev , enum drbd_packet cmd , sector_t sector ,
14998,15002c15590,15594
< #line 1293
< int drbd_send_oos(struct drbd_conf *mdev , struct drbd_request *req ) ;
< #line 1294
< int drbd_send_block(struct drbd_conf *mdev , enum drbd_packets cmd , struct drbd_epoch_entry *e ) ;
< #line 1296
---
> #line 1102
> int drbd_send_out_of_sync(struct drbd_conf *mdev , struct drbd_request *req ) ;
> #line 1103
> int drbd_send_block(struct drbd_conf *mdev , enum drbd_packet cmd , struct drbd_peer_request *peer_req ) ;
> #line 1105
15004c15596
< #line 1297
---
> #line 1106
15007c15599
< #line 1299
---
> #line 1108
15009,15010c15601,15602
<                             void *digest , int digest_size , enum drbd_packets cmd ) ;
< #line 1303
---
>                             void *digest , int digest_size , enum drbd_packet cmd ) ;
> #line 1111
15012c15604
< #line 1309
---
> #line 1117
15014c15606
< #line 1310
---
> #line 1118
15016c15608
< #line 1312
---
> #line 1121
15018c15610
< #line 1314
---
> #line 1123
15020c15612
< #line 1315
---
> #line 1124
15022c15614
< #line 1317
---
> #line 1126
15024c15616
< #line 1554
---
> #line 1388
15026c15618
< #line 1570 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1404 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
15028c15620,15622
< #line 1598
---
> #line 1408
> void drbd_minor_destroy(struct kref *kref ) ;
> #line 1443
15030c15624
< #line 1601
---
> #line 1446
15032,15034c15626,15630
< #line 1602
< int drbd_alter_sa(struct drbd_conf *mdev , int na ) ;
< #line 1603
---
> #line 1447
> enum drbd_ret_code drbd_resync_after_valid(struct drbd_conf *mdev , int o_minor ) ;
> #line 1448
> void drbd_resync_after_changed(struct drbd_conf *mdev ) ;
> #line 1449
15036c15632
< #line 1604
---
> #line 1450
15038c15634
< #line 1605
---
> #line 1451
15040c15636
< #line 1606
---
> #line 1452
15042c15638
< #line 1609
---
> #line 1455
15044,15046c15640,15642
< #line 1614
< void drbd_ov_oos_found(struct drbd_conf *mdev , sector_t sector , int size ) ;
< #line 1615
---
> #line 1458
> void drbd_ov_out_of_sync_found(struct drbd_conf *mdev , sector_t sector , int size ) ;
> #line 1461
15048,15049c15644,15645
< #line 1617 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static void ov_oos_print(struct drbd_conf *mdev ) 
---
> #line 1463 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static void ov_out_of_sync_print(struct drbd_conf *mdev ) 
15054c15650
< #line 1619
---
> #line 1465
15056c15652
< #line 1620
---
> #line 1466
15062c15658
< #line 1624
---
> #line 1470
15064c15660
< #line 1625
---
> #line 1471
15068c15664
< #line 1628
---
> #line 1474
15071,15072c15667,15668
< #line 1629
< void drbd_csum_ee(struct drbd_conf *mdev , struct crypto_hash *tfm , struct drbd_epoch_entry *e ,
---
> #line 1475
> void drbd_csum_ee(struct drbd_conf *mdev , struct crypto_hash *tfm , struct drbd_peer_request *peer_req ,
15074,15106c15670,15700
< #line 1632
< int w_read_retry_remote(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) ;
< #line 1633
< int w_e_end_data_req(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) ;
< #line 1634
< int w_e_end_rsdata_req(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) ;
< #line 1635
< int w_e_end_csum_rs_req(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) ;
< #line 1636
< int w_e_end_ov_reply(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) ;
< #line 1637
< int w_e_end_ov_req(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) ;
< #line 1638
< int w_ov_finished(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) ;
< #line 1639
< int w_resync_timer(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) ;
< #line 1641
< int w_send_write_hint(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) ;
< #line 1642
< int w_send_dblock(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) ;
< #line 1643
< int w_send_barrier(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) ;
< #line 1644
< int w_send_read_req(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) ;
< #line 1645
< int w_prev_work_done(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) ;
< #line 1647
< int w_restart_disk_io(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) ;
< #line 1648
< int w_send_oos(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) ;
< #line 1649
< int w_start_resync(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) ;
< #line 1651
---
> #line 1478
> int w_e_end_data_req(struct drbd_work *w , int cancel ) ;
> #line 1479
> int w_e_end_rsdata_req(struct drbd_work *w , int cancel ) ;
> #line 1480
> int w_e_end_csum_rs_req(struct drbd_work *w , int cancel ) ;
> #line 1481
> int w_e_end_ov_reply(struct drbd_work *w , int cancel ) ;
> #line 1482
> int w_e_end_ov_req(struct drbd_work *w , int cancel ) ;
> #line 1483
> int w_ov_finished(struct drbd_work *w , int cancel ) ;
> #line 1484
> int w_resync_timer(struct drbd_work *w , int cancel ) ;
> #line 1485
> int w_send_write_hint(struct drbd_work *w , int cancel ) ;
> #line 1486
> int w_make_resync_request(struct drbd_work *w , int cancel ) ;
> #line 1487
> int w_send_dblock(struct drbd_work *w , int cancel ) ;
> #line 1488
> int w_send_read_req(struct drbd_work *w , int cancel ) ;
> #line 1489
> int w_prev_work_done(struct drbd_work *w , int cancel ) ;
> #line 1491
> int w_restart_disk_io(struct drbd_work *w , int cancel ) ;
> #line 1492
> int w_send_out_of_sync(struct drbd_work *w , int cancel ) ;
> #line 1493
> int w_start_resync(struct drbd_work *w , int cancel ) ;
> #line 1495
15108c15702
< #line 1652
---
> #line 1496
15110c15704
< #line 1655
---
> #line 1499
15112,15120c15706,15715
< #line 1656
< int drbd_submit_ee(struct drbd_conf *mdev , struct drbd_epoch_entry *e , unsigned int const   rw ,
<                    int const   fault_type ) ;
< #line 1659
< struct drbd_epoch_entry *drbd_alloc_ee(struct drbd_conf *mdev , u64 id , sector_t sector ,
<                                        unsigned int data_size , gfp_t gfp_mask ) ;
< #line 1664
< void drbd_free_some_ee(struct drbd_conf *mdev , struct drbd_epoch_entry *e , int is_net ) ;
< #line 1679 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1500
> int drbd_submit_peer_request(struct drbd_conf *mdev , struct drbd_peer_request *peer_req ,
>                              unsigned int const   rw , int const   fault_type ) ;
> #line 1504
> struct drbd_peer_request *drbd_alloc_peer_req(struct drbd_conf *mdev , u64 id , sector_t sector ,
>                                               unsigned int data_size , gfp_t gfp_mask ) ;
> #line 1507
> void __drbd_free_peer_req(struct drbd_conf *mdev , struct drbd_peer_request *peer_req ,
>                           int is_net ) ;
> #line 1523 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
15123a15719,15721
>   mm_segment_t oldfs ;
>   struct thread_info *tmp ;
>   char *uoptval ;
15124a15723,15725
>   struct thread_info *tmp___0 ;
>   mm_segment_t __constr_expr_0 ;
>   struct thread_info *tmp___1 ;
15127c15728,15740
< #line 1683
---
> #line 1526
>   tmp = current_thread_info___1();
> #line 1526
>   oldfs = tmp->addr_limit;
> #line 1530
>   uoptval = optval;
> #line 1532
>   tmp___0 = current_thread_info___1();
> #line 1532
>   __constr_expr_0.seg = 0xffffffffffffffffUL;
> #line 1532
>   tmp___0->addr_limit = __constr_expr_0;
> #line 1533
15129,15130c15742,15743
< #line 1684
<     err = sock_setsockopt(sock, level, optname, optval, (unsigned int )optlen);
---
> #line 1534
>     err = sock_setsockopt(sock, level, optname, uoptval, (unsigned int )optlen);
15132,15133c15745,15746
< #line 1686
<     err = (*((sock->ops)->setsockopt))(sock, level, optname, optval, (unsigned int )optlen);
---
> #line 1536
>     err = (*((sock->ops)->setsockopt))(sock, level, optname, uoptval, (unsigned int )optlen);
15135c15748,15752
< #line 1688
---
> #line 1538
>   tmp___1 = current_thread_info___1();
> #line 1538
>   tmp___1->addr_limit = oldfs;
> #line 1539
15139c15756
< #line 1691 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1542 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
15145c15762
< #line 1693
---
> #line 1544
15147c15764
< #line 1694
---
> #line 1545
15149c15766
< #line 1696
---
> #line 1547
15153c15770
< #line 1698 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1549 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
15159c15776
< #line 1700
---
> #line 1551
15161c15778
< #line 1701
---
> #line 1552
15163c15780
< #line 1703
---
> #line 1554
15167,15171c15784,15788
< #line 1728
< void drbd_al_begin_io(struct drbd_conf *mdev , sector_t sector ) ;
< #line 1729
< void drbd_al_complete_io(struct drbd_conf *mdev , sector_t sector ) ;
< #line 1730
---
> #line 1579
> void drbd_al_begin_io(struct drbd_conf *mdev , struct drbd_interval *i ) ;
> #line 1580
> void drbd_al_complete_io(struct drbd_conf *mdev , struct drbd_interval *i ) ;
> #line 1581
15173c15790
< #line 1732
---
> #line 1583
15175c15792
< #line 1734
---
> #line 1585
15177c15794
< #line 1735
---
> #line 1586
15179c15796
< #line 1738
---
> #line 1588
15181c15798
< #line 1739
---
> #line 1589
15184c15801
< #line 1743
---
> #line 1593
15187c15804
< #line 1820 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1621 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
15193,15194c15810,15811
< #line 1822
<   return ((struct page *)page->ldv_14722.private);
---
> #line 1623
>   return ((struct page *)page->ldv_14746.private);
15197,15198c15814,15815
< #line 1830 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static int drbd_ee_has_active_page(struct drbd_epoch_entry *e ) 
---
> #line 1632 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static int drbd_peer_req_has_active_page(struct drbd_peer_request *peer_req ) 
15205,15210c15822,15827
< #line 1832
<   page = e->pages;
< #line 1833
<   goto ldv_51043;
<   ldv_51042: 
< #line 1834
---
> #line 1634
>   page = peer_req->pages;
> #line 1635
>   goto ldv_51606;
>   ldv_51605: 
> #line 1636
15212c15829
< #line 1834
---
> #line 1636
15214c15831
< #line 1835
---
> #line 1637
15219c15836
< #line 1833
---
> #line 1635
15221,15222c15838,15839
<   ldv_51043: ;
< #line 1833
---
>   ldv_51606: ;
> #line 1635
15224c15841
< #line 1833
---
> #line 1635
15226c15843
< #line 1833
---
> #line 1635
15228c15845
< #line 1833
---
> #line 1635
15230,15231c15847,15848
< #line 1834
<       goto ldv_51042;
---
> #line 1636
>       goto ldv_51605;
15233,15234c15850,15851
< #line 1836
<       goto ldv_51044;
---
> #line 1638
>       goto ldv_51607;
15239,15240c15856,15857
<   ldv_51044: ;
< #line 1837
---
>   ldv_51607: ;
> #line 1639
15244,15245c15861,15863
< #line 1840 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static void drbd_state_lock(struct drbd_conf *mdev ) 
---
> #line 1675 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static void __drbd_chk_io_error____0(struct drbd_conf *mdev , enum drbd_force_detach_flags df ,
>                                               char const   *where ) 
15246a15865,15867
>   enum drbd_io_error_p ep ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
15248,15249c15869
<   wait_queue_t __wait ;
<   struct task_struct *tmp___0 ;
---
>   int tmp___0 ;
15250a15871,15872
>   union drbd_state __ns ;
>   union drbd_state __ns___0 ;
15253,15259c15875,15892
< #line 1842
<   tmp = drbd_test_and_set_flag(mdev, CLUSTER_ST_CHANGE);
< #line 1842
<   if (tmp == 0) {
< #line 1842
<     goto ldv_51048;
<   } else {
---
> #line 1681
>   rcu_read_lock___1();
> #line 1682
>   _________p1 = *((struct disk_conf * volatile  *)(& (mdev->ldev)->disk_conf));
> #line 1682
>   tmp = debug_lockdep_rcu_enabled();
> #line 1682
>   if (tmp != 0 && ! __warned) {
> #line 1682
>     tmp___0 = rcu_read_lock_held();
> #line 1682
>     if (tmp___0 == 0 && 1) {
> #line 1682
>       __warned = 1;
> #line 1682
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h",
>                              1682, "suspicious rcu_dereference_check() usage");
>     } else {
15261,15282c15894
<   }
< #line 1842
<   tmp___0 = get_current();
< #line 1842
<   __wait.flags = 0U;
< #line 1842
<   __wait.private = (void *)tmp___0;
< #line 1842
<   __wait.func = & autoremove_wake_function;
< #line 1842
<   __wait.task_list.next = & __wait.task_list;
< #line 1842
<   __wait.task_list.prev = & __wait.task_list;
<   ldv_51051: 
< #line 1842
<   prepare_to_wait(& mdev->misc_wait, & __wait, 2);
< #line 1842
<   tmp___1 = drbd_test_and_set_flag(mdev, CLUSTER_ST_CHANGE);
< #line 1842
<   if (tmp___1 == 0) {
< #line 1842
<     goto ldv_51050;
---
>     }
15286,15324c15898,15905
< #line 1842
<   schedule();
< #line 1842
<   goto ldv_51051;
<   ldv_51050: 
< #line 1842
<   finish_wait(& mdev->misc_wait, & __wait);
<   ldv_51048: ;
< #line 1845
<   return;
< }
< }
< #line 1846 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static void drbd_state_unlock(struct drbd_conf *mdev ) 
< { 
< 
< 
<   {
< #line 1848
<   drbd_clear_flag(mdev, CLUSTER_ST_CHANGE);
< #line 1849
<   __wake_up(& mdev->misc_wait, 3U, 1, 0);
< #line 1850
<   return;
< }
< }
< #line 1890 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static void __drbd_chk_io_error____0(struct drbd_conf *mdev , enum drbd_force_detach_flags df ,
<                                               char const   *where ) 
< { 
<   int tmp ;
<   union drbd_state __ns ;
<   union drbd_state __ns___0 ;
< 
<   {
< #line 1894
<   switch ((mdev->ldev)->dc.on_io_error) {
<   case 0: ;
< #line 1896
---
> #line 1682
>   ep = (enum drbd_io_error_p )_________p1->on_io_error;
> #line 1683
>   rcu_read_unlock___1();
> #line 1684
>   switch ((unsigned int )ep) {
>   case 0U: ;
> #line 1686
15326,15330c15907,15911
< #line 1897
<     tmp = ___ratelimit(& drbd_ratelimit_state, "__drbd_chk_io_error_");
< #line 1897
<     if (tmp != 0) {
< #line 1898
---
> #line 1687
>     tmp___1 = ___ratelimit(& drbd_ratelimit_state, "__drbd_chk_io_error_");
> #line 1687
>     if (tmp___1 != 0) {
> #line 1688
15336,15342c15917,15923
< #line 1899
<     if ((int )mdev->state.ldv_39979.disk > 4) {
< #line 1900
<       __ns.i = mdev->state.i;
< #line 1900
<       __ns.ldv_39979.disk = 4U;
< #line 1900
---
> #line 1689
>     if ((int )mdev->state.ldv_49522.disk > 4) {
> #line 1690
>       __ns = drbd_read_state(mdev);
> #line 1690
>       __ns.ldv_40024.disk = 4U;
> #line 1690
15347,15348c15928,15929
< #line 1901
<     goto ldv_51081;
---
> #line 1691
>     goto ldv_51637;
15352,15356c15933,15937
<   case 2: ;
<   case 1: 
< #line 1926
<   drbd_set_flag(mdev, WAS_IO_ERROR);
< #line 1927
---
>   case 2U: ;
>   case 1U: 
> #line 1716
>   set_bit(12U, (unsigned long volatile   *)(& mdev->flags));
> #line 1717
15358,15359c15939,15940
< #line 1928
<     drbd_set_flag(mdev, WAS_READ_ERROR);
---
> #line 1718
>     set_bit(13U, (unsigned long volatile   *)(& mdev->flags));
15363c15944
< #line 1929
---
> #line 1719
15365,15366c15946,15947
< #line 1930
<     drbd_set_flag(mdev, FORCE_DETACH);
---
> #line 1720
>     set_bit(14U, (unsigned long volatile   *)(& mdev->flags));
15370,15376c15951,15957
< #line 1931
<   if ((int )mdev->state.ldv_39979.disk > 2) {
< #line 1932
<     __ns___0.i = mdev->state.i;
< #line 1932
<     __ns___0.ldv_39979.disk = 2U;
< #line 1932
---
> #line 1721
>   if ((int )mdev->state.ldv_49522.disk > 2) {
> #line 1722
>     __ns___0 = drbd_read_state(mdev);
> #line 1722
>     __ns___0.ldv_40024.disk = 2U;
> #line 1722
15378c15959
< #line 1933
---
> #line 1723
15384,15385c15965,15966
< #line 1936
<   goto ldv_51081;
---
> #line 1726
>   goto ldv_51637;
15387,15388c15968,15969
<   ldv_51081: ;
< #line 1939
---
>   ldv_51637: ;
> #line 1729
15392c15973
< #line 1997 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1804 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
15399c15980
< #line 2000
---
> #line 1807
15401c15982
< #line 2000
---
> #line 1807
15403c15984
< #line 2000
---
> #line 1807
15406c15987
< #line 2000
---
> #line 1807
15409c15990
< #line 2000
---
> #line 1807
15413c15994
< #line 2079 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1897 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
15420c16001
< #line 2082
---
> #line 1900
15422c16003
< #line 2082
---
> #line 1900
15424c16005
< #line 2083
---
> #line 1901
15426,15428c16007
< #line 2084
<   up(& q->s);
< #line 2086
---
> #line 1902
15430c16009,16011
< #line 2087
---
> #line 1903
>   __wake_up(& q->q_wait, 3U, 1, 0);
> #line 1904
15434,15435c16015,16016
< #line 2089 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static void wake_asender(struct drbd_conf *mdev ) 
---
> #line 1906 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static void wake_asender(struct drbd_tconn *tconn ) 
15440,15442c16021,16023
< #line 2091
<   tmp = drbd_test_flag(mdev, SIGNAL_ASENDER);
< #line 2091
---
> #line 1908
>   tmp = constant_test_bit(3U, (unsigned long const volatile   *)(& tconn->flags));
> #line 1908
15444,15445c16025,16026
< #line 2092
<     force_sig(24, mdev->asender.task);
---
> #line 1909
>     force_sig(24, tconn->asender.task);
15449c16030
< #line 2093
---
> #line 1910
15453,15454c16034,16035
< #line 2095 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static void request_ping(struct drbd_conf *mdev ) 
---
> #line 1912 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static void request_ping(struct drbd_tconn *tconn ) 
15459,15463c16040,16044
< #line 2097
<   drbd_set_flag(mdev, SEND_PING);
< #line 2098
<   wake_asender(mdev);
< #line 2099
---
> #line 1914
>   set_bit(2U, (unsigned long volatile   *)(& tconn->flags));
> #line 1915
>   wake_asender(tconn);
> #line 1916
15467,15468c16048,16059
< #line 2101 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static int drbd_send_short_cmd(struct drbd_conf *mdev , enum drbd_packets cmd ) 
---
> #line 1918
> void *conn_prepare_command(struct drbd_tconn *tconn , struct drbd_socket *sock ) ;
> #line 1919
> void *drbd_prepare_command(struct drbd_conf *mdev , struct drbd_socket *sock ) ;
> #line 1920
> int conn_send_command(struct drbd_tconn *tconn , struct drbd_socket *sock , enum drbd_packet cmd ,
>                       unsigned int header_size , void *data , unsigned int size ) ;
> #line 1923
> int drbd_send_command(struct drbd_conf *mdev , struct drbd_socket *sock , enum drbd_packet cmd ,
>                       unsigned int header_size , void *data , unsigned int size ) ;
> #line 1994 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static void inc_rs_pending(struct drbd_conf *mdev ) 
15470,15471c16061
<   struct p_header80 h ;
<   int tmp ;
---
> 
15474,15477c16064,16067
< #line 2105
<   tmp = drbd_send_cmd(mdev, 1, cmd, & h, 8UL);
< #line 2105
<   return (tmp);
---
> #line 1996
>   atomic_inc(& mdev->rs_pending_cnt);
> #line 1997
>   return;
15480,15481c16070,16072
< #line 2120 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static void drbd_thread_stop(struct drbd_thread *thi ) 
---
> #line 2000 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static void _dec_rs_pending(struct drbd_conf *mdev , char const   *func ,
>                                      int line ) 
15483c16074,16075
< 
---
>   int tmp ;
>   int tmp___0 ;
15486,15488c16078,16092
< #line 2122
<   _drbd_thread_stop(thi, 0, 1);
< #line 2123
---
> #line 2002
>   atomic_dec(& mdev->rs_pending_cnt);
> #line 2003
>   tmp___0 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
> #line 2003
>   if (tmp___0 < 0) {
> #line 2003
>     tmp = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
> #line 2003
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: rs_pending_cnt = %d < 0 !\n",
>             func, line, tmp);
>   } else {
> 
>   }
> #line 2004
15492,15493c16096,16097
< #line 2180 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static void inc_rs_pending(struct drbd_conf *mdev ) 
---
> #line 2021 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static void _dec_unacked(struct drbd_conf *mdev , char const   *func , int line ) 
15495c16099,16100
< 
---
>   int tmp ;
>   int tmp___0 ;
15498,15500c16103,16117
< #line 2182
<   atomic_inc(& mdev->rs_pending_cnt);
< #line 2183
---
> #line 2023
>   atomic_dec(& mdev->unacked_cnt);
> #line 2024
>   tmp___0 = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
> #line 2024
>   if (tmp___0 < 0) {
> #line 2024
>     tmp = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
> #line 2024
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: unacked_cnt = %d < 0 !\n",
>             func, line, tmp);
>   } else {
> 
>   }
> #line 2025
15504c16121
< #line 22 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_wrappers.h"
---
> #line 23 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_wrappers.h"
15506,15507d16122
< #line 23
< void drbd_endio_sec(struct bio *bio , int error ) ;
15509,15510c16124,16127
< void drbd_endio_pri(struct bio *bio , int error ) ;
< #line 273 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"
---
> void drbd_peer_request_endio(struct bio *bio , int error ) ;
> #line 25
> void drbd_request_endio(struct bio *bio , int error ) ;
> #line 250 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"
15516c16133
< #line 276
---
> #line 253
15518c16135
< #line 278
---
> #line 255
15520c16137
< #line 280
---
> #line 257
15522,15524c16139,16141
< #line 281
<   bio->bi_end_io = & drbd_endio_pri;
< #line 282
---
> #line 258
>   bio->bi_end_io = & drbd_request_endio;
> #line 259
15526c16143
< #line 283
---
> #line 260
15530c16147
< #line 326
---
> #line 273
15532c16149
< #line 328
---
> #line 275
15534,15557c16151
< #line 335 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"
< __inline static int _req_mod(struct drbd_request *req , enum drbd_req_event what ) 
< { 
<   struct drbd_conf *mdev ;
<   struct bio_and_error m ;
<   int rv ;
< 
<   {
< #line 337
<   mdev = req->mdev;
< #line 342
<   rv = __req_mod(req, what, & m);
< #line 343
<   if ((unsigned long )m.bio != (unsigned long )((struct bio *)0)) {
< #line 344
<     complete_master_bio(mdev, & m);
<   } else {
< 
<   }
< #line 346
<   return (rv);
< }
< }
< #line 353 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"
---
> #line 304 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"
15567,15571c16161,16165
< #line 357
<   mdev = req->mdev;
< #line 361
<   tmp = spinlock_check(& mdev->req_lock);
< #line 361
---
> #line 308
>   mdev = req->w.ldv_49807.mdev;
> #line 312
>   tmp = spinlock_check(& (mdev->tconn)->req_lock);
> #line 312
15573c16167
< #line 362
---
> #line 313
15575,15577c16169,16171
< #line 363
<   spin_unlock_irqrestore(& mdev->req_lock, flags);
< #line 365
---
> #line 314
>   spin_unlock_irqrestore(& (mdev->tconn)->req_lock, flags);
> #line 316
15579c16173
< #line 366
---
> #line 317
15584c16178
< #line 368
---
> #line 319
15588,15592c16182,16184
< #line 112 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< static int w_make_ov_request(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) ;
< #line 113
< static int w_make_resync_request(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) ;
< #line 141 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
---
> #line 128 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> static int w_make_ov_request(struct drbd_work *w , int cancel ) ;
> #line 154 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
15600c16192
< #line 146
---
> #line 159
15602c16194
< #line 147
---
> #line 160
15604,15607c16196,16197
< #line 147
<   mdev = (struct drbd_conf *)__mptr + 0xfffffffffffff060UL;
< #line 149
<   md_io->error = error;
---
> #line 160
>   mdev = (struct drbd_conf *)__mptr + 0xfffffffffffffa38UL;
15608a16199,16200
>   md_io->error = error;
> #line 175
15610c16202
< #line 163
---
> #line 176
15612c16204
< #line 164
---
> #line 177
15614c16206
< #line 165
---
> #line 178
15616c16208
< #line 166
---
> #line 179
15618c16210
< #line 167
---
> #line 180
15622,15623c16214,16215
< #line 172 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void drbd_endio_read_sec_final(struct drbd_epoch_entry *e ) 
---
> #line 185 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> void drbd_endio_read_sec_final(struct drbd_peer_request *peer_req ) 
15632c16224
< #line 174
---
> #line 187
15634,15647c16226,16230
< #line 175
<   mdev = e->mdev;
< #line 177
<   if (e->ldv_49189.block_id == 0ULL) {
< #line 177
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( e->block_id != ID_VACANT ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared",
<             177);
<   } else {
< 
<   }
< #line 179
<   tmp = spinlock_check(& mdev->req_lock);
< #line 179
---
> #line 188
>   mdev = peer_req->w.ldv_49807.mdev;
> #line 190
>   tmp = spinlock_check(& (mdev->tconn)->req_lock);
> #line 190
15649,15653c16232,16236
< #line 180
<   mdev->read_cnt = mdev->read_cnt + (e->size >> 9);
< #line 181
<   list_del(& e->w.list);
< #line 182
---
> #line 191
>   mdev->read_cnt = mdev->read_cnt + (peer_req->i.size >> 9);
> #line 192
>   list_del(& peer_req->w.list);
> #line 193
15655c16238
< #line 182
---
> #line 193
15657c16240
< #line 183
---
> #line 194
15662,15664c16245,16247
< #line 184
<   tmp___1 = constant_test_bit(3U, (unsigned long const volatile   *)(& e->flags));
< #line 184
---
> #line 195
>   tmp___1 = constant_test_bit(3U, (unsigned long const volatile   *)(& peer_req->flags));
> #line 195
15666c16249
< #line 185
---
> #line 196
15671,15675c16254,16258
< #line 186
<   spin_unlock_irqrestore(& mdev->req_lock, flags);
< #line 188
<   drbd_queue_work(& mdev->data.work, & e->w);
< #line 189
---
> #line 197
>   spin_unlock_irqrestore(& (mdev->tconn)->req_lock, flags);
> #line 199
>   drbd_queue_work(& (mdev->tconn)->sender_work, & peer_req->w);
> #line 200
15677c16260
< #line 190
---
> #line 201
15681,15682c16264,16265
< #line 194 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< static void drbd_endio_write_sec_final(struct drbd_epoch_entry *e ) 
---
> #line 205 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> static void drbd_endio_write_sec_final(struct drbd_peer_request *peer_req ) 
15686c16269
<   sector_t e_sector ;
---
>   struct drbd_interval i ;
15688c16271
<   int is_syncer_req ;
---
>   u64 block_id ;
15692,15693d16274
<   int tmp___1 ;
<   int tmp___2 ;
15696c16277
< #line 196
---
> #line 207
15698,15717c16279,16289
< #line 197
<   mdev = e->mdev;
< #line 203
<   if (e->ldv_49189.block_id == 0ULL) {
< #line 203
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( e->block_id != ID_VACANT ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared",
<             203);
<   } else {
< 
<   }
< #line 209
<   e_sector = e->sector;
< #line 210
<   do_al_complete_io = (int )e->flags & 1;
< #line 211
<   is_syncer_req = e->ldv_49189.block_id == 0xffffffffffffffffULL;
< #line 213
<   tmp = spinlock_check(& mdev->req_lock);
< #line 213
---
> #line 208
>   mdev = peer_req->w.ldv_49807.mdev;
> #line 218
>   i = peer_req->i;
> #line 219
>   do_al_complete_io = (int )peer_req->flags & 1;
> #line 220
>   block_id = peer_req->ldv_50726.block_id;
> #line 222
>   tmp = spinlock_check(& (mdev->tconn)->req_lock);
> #line 222
15719,15728d16290
< #line 214
<   mdev->writ_cnt = mdev->writ_cnt + (e->size >> 9);
< #line 215
<   list_del(& e->w.list);
< #line 216
<   list_add_tail(& e->w.list, & mdev->done_ee);
< #line 223
<   if (is_syncer_req != 0) {
< #line 223
<     tmp___0 = list_empty((struct list_head  const  *)(& mdev->sync_ee));
15730,15741c16292,16301
<     do_wake = tmp___0;
<   } else {
< #line 223
<     tmp___1 = list_empty((struct list_head  const  *)(& mdev->active_ee));
< #line 223
<     do_wake = tmp___1;
<   }
< #line 227
<   tmp___2 = constant_test_bit(3U, (unsigned long const volatile   *)(& e->flags));
< #line 227
<   if (tmp___2 != 0) {
< #line 228
---
>   mdev->writ_cnt = mdev->writ_cnt + (peer_req->i.size >> 9);
> #line 224
>   list_move_tail(& peer_req->w.list, & mdev->done_ee);
> #line 234
>   do_wake = list_empty((struct list_head  const  *)(block_id == 0xffffffffffffffffULL ? & mdev->sync_ee : & mdev->active_ee));
> #line 236
>   tmp___0 = constant_test_bit(3U, (unsigned long const volatile   *)(& peer_req->flags));
> #line 236
>   if (tmp___0 != 0) {
> #line 237
15746,15751c16306,16311
< #line 229
<   spin_unlock_irqrestore(& mdev->req_lock, flags);
< #line 231
<   if (is_syncer_req != 0) {
< #line 232
<     drbd_rs_complete_io(mdev, e_sector);
---
> #line 238
>   spin_unlock_irqrestore(& (mdev->tconn)->req_lock, flags);
> #line 240
>   if (block_id == 0xffffffffffffffffULL) {
> #line 241
>     drbd_rs_complete_io(mdev, i.sector);
15755c16315
< #line 234
---
> #line 243
15757c16317
< #line 235
---
> #line 244
15762c16322
< #line 237
---
> #line 246
15764,15765c16324,16325
< #line 238
<     drbd_al_complete_io(mdev, e_sector);
---
> #line 247
>     drbd_al_complete_io(mdev, & i);
15769,15771c16329,16331
< #line 240
<   wake_asender(mdev);
< #line 241
---
> #line 249
>   wake_asender(mdev->tconn);
> #line 250
15773c16333
< #line 242
---
> #line 251
15777,15778c16337,16338
< #line 247 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void drbd_endio_sec(struct bio *bio , int error ) 
---
> #line 256 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> void drbd_peer_request_endio(struct bio *bio , int error ) 
15780c16340
<   struct drbd_epoch_entry *e ;
---
>   struct drbd_peer_request *peer_req ;
15789,15793c16349,16353
< #line 249
<   e = (struct drbd_epoch_entry *)bio->bi_private;
< #line 250
<   mdev = e->mdev;
< #line 251
---
> #line 258
>   peer_req = (struct drbd_peer_request *)bio->bi_private;
> #line 259
>   mdev = peer_req->w.ldv_49807.mdev;
> #line 260
15795c16355
< #line 252
---
> #line 261
15797c16357
< #line 254
---
> #line 263
15799,15801c16359,16361
< #line 254
<     tmp = ___ratelimit(& drbd_ratelimit_state, "drbd_endio_sec");
< #line 254
---
> #line 263
>     tmp = ___ratelimit(& drbd_ratelimit_state, "drbd_peer_request_endio");
> #line 263
15803c16363
< #line 255
---
> #line 264
15805c16365
<                is_write != 0 ? (char *)"write" : (char *)"read", error, (unsigned long long )e->sector);
---
>                is_write != 0 ? (char *)"write" : (char *)"read", error, (unsigned long long )peer_req->i.sector);
15812c16372
< #line 258
---
> #line 267
15814,15816c16374,16376
< #line 259
<     tmp___0 = ___ratelimit(& drbd_ratelimit_state, "drbd_endio_sec");
< #line 259
---
> #line 268
>     tmp___0 = ___ratelimit(& drbd_ratelimit_state, "drbd_peer_request_endio");
> #line 268
15818c16378
< #line 260
---
> #line 269
15820c16380
<                is_write != 0 ? (char *)"write" : (char *)"read", (unsigned long long )e->sector);
---
>                is_write != 0 ? (char *)"write" : (char *)"read", (unsigned long long )peer_req->i.sector);
15824c16384
< #line 266
---
> #line 275
15829c16389
< #line 269
---
> #line 278
15831,15832c16391,16392
< #line 270
<     set_bit(3U, (unsigned long volatile   *)(& e->flags));
---
> #line 279
>     set_bit(3U, (unsigned long volatile   *)(& peer_req->flags));
15836c16396
< #line 272
---
> #line 281
15838,15840c16398,16400
< #line 273
<   tmp___1 = atomic_dec_and_test(& e->pending_bios);
< #line 273
---
> #line 282
>   tmp___1 = atomic_dec_and_test(& peer_req->pending_bios);
> #line 282
15842c16402
< #line 274
---
> #line 283
15844,15845c16404,16405
< #line 275
<       drbd_endio_write_sec_final(e);
---
> #line 284
>       drbd_endio_write_sec_final(peer_req);
15847,15848c16407,16408
< #line 277
<       drbd_endio_read_sec_final(e);
---
> #line 286
>       drbd_endio_read_sec_final(peer_req);
15853c16413
< #line 278
---
> #line 287
15857,15858c16417,16418
< #line 283 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void drbd_endio_pri(struct bio *bio , int error ) 
---
> #line 292 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> void drbd_request_endio(struct bio *bio , int error ) 
15873c16433
< #line 286
---
> #line 295
15875,15877c16435,16437
< #line 287
<   mdev = req->mdev;
< #line 290
---
> #line 296
>   mdev = req->w.ldv_49807.mdev;
> #line 299
15879c16439
< #line 292
---
> #line 301
15881c16441
< #line 293
---
> #line 302
15884c16444
< #line 298
---
> #line 307
15889,15891c16449,16451
< #line 329
<   tmp___0 = __builtin_expect((req->rq_state & 8UL) != 0UL, 0L);
< #line 329
---
> #line 339
>   tmp___0 = __builtin_expect(((unsigned long )req->rq_state & 8UL) != 0UL, 0L);
> #line 339
15893,15895c16453,16455
< #line 330
<     tmp = ___ratelimit(& drbd_ratelimit_state, "drbd_endio_pri");
< #line 330
---
> #line 340
>     tmp = ___ratelimit(& drbd_ratelimit_state, "drbd_request_endio");
> #line 340
15897c16457
< #line 331
---
> #line 341
15902c16462
< #line 333
---
> #line 343
15904c16464
< #line 334
---
> #line 344
15912c16472
< #line 338
---
> #line 348
15914c16474
< #line 338
---
> #line 348
15916,15917c16476,16477
< #line 339
<     what = (int )bio->bi_rw & 1 ? write_completed_with_error : ((bio->bi_rw & 8193UL) == 0UL ? read_completed_with_error : read_ahead_completed_with_error);
---
> #line 349
>     what = (int )bio->bi_rw & 1 ? WRITE_COMPLETED_WITH_ERROR : ((bio->bi_rw & 8193UL) == 0UL ? READ_COMPLETED_WITH_ERROR : READ_AHEAD_COMPLETED_WITH_ERROR);
15919,15920c16479,16480
< #line 345
<     what = completed_ok;
---
> #line 355
>     what = COMPLETED_OK;
15922c16482
< #line 347
---
> #line 357
15924c16484
< #line 348
---
> #line 358
15926c16486
< #line 348
---
> #line 358
15928,15930c16488,16490
< #line 351
<   tmp___3 = spinlock_check(& mdev->req_lock);
< #line 351
---
> #line 361
>   tmp___3 = spinlock_check(& (mdev->tconn)->req_lock);
> #line 361
15932c16492
< #line 352
---
> #line 362
15934,15936c16494,16496
< #line 353
<   spin_unlock_irqrestore(& mdev->req_lock, flags);
< #line 354
---
> #line 363
>   spin_unlock_irqrestore(& (mdev->tconn)->req_lock, flags);
> #line 364
15938c16498
< #line 356
---
> #line 366
15940c16500
< #line 357
---
> #line 367
15945,15960d16504
< #line 358
<   return;
< }
< }
< #line 360 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< int w_read_retry_remote(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) 
< { 
<   struct drbd_request *req ;
<   struct drbd_work  const  *__mptr ;
<   int tmp ;
< 
<   {
< #line 362
<   __mptr = (struct drbd_work  const  *)w;
< #line 362
<   req = (struct drbd_request *)__mptr;
15962,15979c16506
<   spin_lock_irq(& mdev->req_lock);
< #line 369
<   if (cancel != 0 || *((unsigned int *)mdev + 569UL) != 65536U) {
< #line 370
<     _req_mod(req, read_retry_remote_canceled);
< #line 371
<     spin_unlock_irq(& mdev->req_lock);
< #line 372
<     return (1);
<   } else {
< 
<   }
< #line 374
<   spin_unlock_irq(& mdev->req_lock);
< #line 376
<   tmp = w_send_read_req(mdev, w, 0);
< #line 376
<   return (tmp);
---
>   return;
15982,15983c16509,16510
< #line 379 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void drbd_csum_ee(struct drbd_conf *mdev , struct crypto_hash *tfm , struct drbd_epoch_entry *e ,
---
> #line 370 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> void drbd_csum_ee(struct drbd_conf *mdev , struct crypto_hash *tfm , struct drbd_peer_request *peer_req ,
15993,15995c16520,16522
< #line 383
<   page = e->pages;
< #line 387
---
> #line 375
>   page = peer_req->pages;
> #line 379
15997c16524
< #line 388
---
> #line 380
15999c16526
< #line 390
---
> #line 382
16001c16528
< #line 391
---
> #line 383
16003,16006c16530,16533
< #line 393
<   goto ldv_51565;
<   ldv_51564: 
< #line 395
---
> #line 385
>   goto ldv_52122;
>   ldv_52121: 
> #line 387
16008c16535
< #line 396
---
> #line 388
16010c16537
< #line 397
---
> #line 389
16012,16013c16539,16540
<   ldv_51565: 
< #line 393
---
>   ldv_52122: 
> #line 385
16015c16542
< #line 393
---
> #line 385
16017,16018c16544,16545
< #line 394
<     goto ldv_51564;
---
> #line 386
>     goto ldv_52121;
16022,16024c16549,16551
< #line 400
<   len = e->size & 4095U;
< #line 401
---
> #line 392
>   len = peer_req->i.size & 4095U;
> #line 393
16026c16553
< #line 402
---
> #line 394
16028c16555
< #line 403
---
> #line 395
16030c16557
< #line 404
---
> #line 396
16034c16561
< #line 406 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
---
> #line 398 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
16044c16571
< #line 413
---
> #line 405
16046c16573
< #line 414
---
> #line 406
16048c16575
< #line 416
---
> #line 408
16050c16577
< #line 417
---
> #line 409
16052c16579
< #line 419
---
> #line 411
16054c16581
< #line 419
---
> #line 411
16056,16059c16583,16586
< #line 419
<   goto ldv_51578;
<   ldv_51577: 
< #line 420
---
> #line 411
>   goto ldv_52135;
>   ldv_52134: 
> #line 412
16061c16588
< #line 421
---
> #line 413
16063c16590
< #line 419
---
> #line 411
16065c16592
< #line 419
---
> #line 411
16067,16068c16594,16595
<   ldv_51578: ;
< #line 419
---
>   ldv_52135: ;
> #line 411
16070,16071c16597,16598
< #line 420
<     goto ldv_51577;
---
> #line 412
>     goto ldv_52134;
16075c16602
< #line 423
---
> #line 415
16077c16604
< #line 424
---
> #line 416
16081,16082c16608,16609
< #line 427 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< int w_e_send_csum(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) 
---
> #line 419 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> static int w_e_send_csum(struct drbd_work *w , int cancel ) 
16084c16611
<   struct drbd_epoch_entry *e ;
---
>   struct drbd_peer_request *peer_req ;
16085a16613
>   struct drbd_conf *mdev ;
16088c16616
<   int ok ;
---
>   int err ;
16097c16625
< #line 429
---
> #line 421
16099,16112c16627,16633
< #line 429
<   e = (struct drbd_epoch_entry *)__mptr;
< #line 432
<   ok = 1;
< #line 434
<   if (e->ldv_49189.block_id != 2205466966ULL) {
< #line 434
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( e->block_id == DRBD_MAGIC + 0xbeef ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared",
<             434);
<   } else {
< 
<   }
< #line 436
---
> #line 421
>   peer_req = (struct drbd_peer_request *)__mptr;
> #line 422
>   mdev = w->ldv_49807.mdev;
> #line 425
>   err = 0;
> #line 427
16114c16635
< #line 436
---
> #line 427
16116c16637
< #line 437
---
> #line 428
16121,16123c16642,16644
< #line 439
<   tmp___0 = __builtin_expect((e->flags & 8UL) != 0UL, 1L);
< #line 439
---
> #line 430
>   tmp___0 = __builtin_expect((peer_req->flags & 8UL) != 0UL, 0L);
> #line 430
16125c16646
< #line 440
---
> #line 431
16130,16132c16651,16653
< #line 442
<   tmp___1 = crypto_hash_digestsize(mdev->csums_tfm);
< #line 442
---
> #line 433
>   tmp___1 = crypto_hash_digestsize((mdev->tconn)->csums_tfm);
> #line 433
16134c16655
< #line 443
---
> #line 434
16136c16657
< #line 444
---
> #line 435
16137a16659,16666
> #line 436
>     sector = peer_req->i.sector;
> #line 437
>     size = peer_req->i.size;
> #line 438
>     drbd_csum_ee(mdev, (mdev->tconn)->csums_tfm, peer_req, digest);
> #line 444
>     __drbd_free_peer_req(mdev, peer_req, 0);
16139c16668
<     sector = e->sector;
---
>     peer_req = 0;
16141,16148d16669
<     size = e->size;
< #line 447
<     drbd_csum_ee(mdev, mdev->csums_tfm, e, digest);
< #line 453
<     drbd_free_some_ee(mdev, e, 0);
< #line 454
<     e = 0;
< #line 455
16150,16152c16671,16673
< #line 456
<     ok = drbd_send_drequest_csum(mdev, sector, (int )size, digest, digest_size, P_CSUM_RS_REQUEST);
< #line 459
---
> #line 447
>     err = drbd_send_drequest_csum(mdev, sector, (int )size, digest, digest_size, P_CSUM_RS_REQUEST);
> #line 450
16155c16676
< #line 461
---
> #line 452
16157,16158c16678,16679
< #line 462
<     ok = 0;
---
> #line 453
>     err = -12;
16161,16164c16682,16685
< #line 466
<   if ((unsigned long )e != (unsigned long )((struct drbd_epoch_entry *)0)) {
< #line 467
<     drbd_free_some_ee(mdev, e, 0);
---
> #line 457
>   if ((unsigned long )peer_req != (unsigned long )((struct drbd_peer_request *)0)) {
> #line 458
>     __drbd_free_peer_req(mdev, peer_req, 0);
16168,16170c16689,16691
< #line 469
<   tmp___2 = __builtin_expect(ok == 0, 0L);
< #line 469
---
> #line 460
>   tmp___2 = __builtin_expect(err != 0, 0L);
> #line 460
16172c16693
< #line 470
---
> #line 461
16177,16178c16698,16699
< #line 471
<   return (ok);
---
> #line 462
>   return (err);
16181c16702
< #line 476 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
---
> #line 467 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
16184c16705
<   struct drbd_epoch_entry *e ;
---
>   struct drbd_peer_request *peer_req ;
16190c16711
< #line 480
---
> #line 471
16192c16713
< #line 480
---
> #line 471
16194c16715
< #line 481
---
> #line 472
16199c16720
< #line 483
---
> #line 474
16201c16722
< #line 483
---
> #line 474
16203c16724
< #line 484
---
> #line 475
16208,16212c16729,16734
< #line 488
<   e = drbd_alloc_ee(mdev, 2205466966ULL, sector, (unsigned int )size, 514U);
< #line 489
<   if ((unsigned long )e == (unsigned long )((struct drbd_epoch_entry *)0)) {
< #line 490
---
> #line 479
>   peer_req = drbd_alloc_peer_req(mdev, 0xffffffffffffffffULL, sector, (unsigned int )size,
>                                  514U);
> #line 481
>   if ((unsigned long )peer_req == (unsigned long )((struct drbd_peer_request *)0)) {
> #line 482
16217,16225c16739,16747
< #line 492
<   e->w.cb = & w_e_send_csum;
< #line 493
<   spin_lock_irq(& mdev->req_lock);
< #line 494
<   list_add(& e->w.list, & mdev->read_ee);
< #line 495
<   spin_unlock_irq(& mdev->req_lock);
< #line 497
---
> #line 484
>   peer_req->w.cb = & w_e_send_csum;
> #line 485
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 486
>   list_add(& peer_req->w.list, & mdev->read_ee);
> #line 487
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 489
16227,16229c16749,16751
< #line 498
<   tmp___1 = drbd_submit_ee(mdev, e, 0U, 3);
< #line 498
---
> #line 490
>   tmp___1 = drbd_submit_peer_request(mdev, peer_req, 0U, 3);
> #line 490
16231c16753
< #line 499
---
> #line 491
16236,16243c16758,16765
< #line 505
<   spin_lock_irq(& mdev->req_lock);
< #line 506
<   list_del(& e->w.list);
< #line 507
<   spin_unlock_irq(& mdev->req_lock);
< #line 509
<   drbd_free_some_ee(mdev, e, 0);
---
> #line 497
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 498
>   list_del(& peer_req->w.list);
> #line 499
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 501
>   __drbd_free_peer_req(mdev, peer_req, 0);
16245c16767
< #line 511
---
> #line 503
16247c16769
< #line 512
---
> #line 504
16251,16252c16773,16774
< #line 515 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< int w_resync_timer(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) 
---
> #line 507 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> int w_resync_timer(struct drbd_work *w , int cancel ) 
16254c16776
< 
---
>   struct drbd_conf *mdev ;
16257,16258c16779,16782
< #line 517
<   switch ((int )mdev->state.ldv_39979.conn) {
---
> #line 509
>   mdev = w->ldv_49807.mdev;
> #line 510
>   switch ((int )mdev->state.ldv_49522.conn) {
16260,16263c16784,16787
< #line 519
<   w_make_ov_request(mdev, w, cancel);
< #line 520
<   goto ldv_51607;
---
> #line 512
>   w_make_ov_request(w, cancel);
> #line 513
>   goto ldv_52164;
16265,16268c16789,16792
< #line 522
<   w_make_resync_request(mdev, w, cancel);
< #line 523
<   goto ldv_51607;
---
> #line 515
>   w_make_resync_request(w, cancel);
> #line 516
>   goto ldv_52164;
16270,16272c16794,16796
<   ldv_51607: ;
< #line 526
<   return (1);
---
>   ldv_52164: ;
> #line 519
>   return (0);
16275c16799
< #line 529 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
---
> #line 522 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
16282c16806
< #line 531
---
> #line 524
16284c16808
< #line 533
---
> #line 526
16286c16810
< #line 533
---
> #line 526
16288,16289c16812,16813
< #line 534
<     drbd_queue_work(& mdev->data.work, & mdev->resync_work);
---
> #line 527
>     drbd_queue_work(& (mdev->tconn)->sender_work, & mdev->resync_work);
16293c16817
< #line 535
---
> #line 528
16297c16821
< #line 537 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
---
> #line 530 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
16303c16827
< #line 541
---
> #line 534
16305,16310c16829,16834
< #line 541
<   goto ldv_51619;
<   ldv_51618: 
< #line 542
<   *(fb->values + (unsigned long )i) = value;
< #line 541
---
> #line 534
>   goto ldv_52176;
>   ldv_52175: 
> #line 535
>   fb->values[i] = value;
> #line 534
16312,16313c16836,16837
<   ldv_51619: ;
< #line 541
---
>   ldv_52176: ;
> #line 534
16315,16316c16839,16840
< #line 542
<     goto ldv_51618;
---
> #line 535
>     goto ldv_52175;
16321c16845
< #line 546
---
> #line 539
16325c16849
< #line 545 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
---
> #line 538 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
16332,16334c16856,16858
< #line 549
<   ov = *(fb->values + (unsigned long )fb->head_index);
< #line 550
---
> #line 542
>   ov = fb->values[fb->head_index];
> #line 543
16336c16860
< #line 550
---
> #line 543
16338,16340c16862,16864
< #line 550
<   *(fb->values + (unsigned long )tmp) = value;
< #line 552
---
> #line 543
>   fb->values[tmp] = value;
> #line 545
16342c16866
< #line 553
---
> #line 546
16347c16871
< #line 555
---
> #line 548
16351c16875
< #line 558 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
---
> #line 551 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
16357c16881
< #line 562
---
> #line 555
16359,16364c16883,16888
< #line 562
<   goto ldv_51632;
<   ldv_51631: 
< #line 563
<   *(fb->values + (unsigned long )i) = *(fb->values + (unsigned long )i) + value;
< #line 562
---
> #line 555
>   goto ldv_52189;
>   ldv_52188: 
> #line 556
>   fb->values[i] = fb->values[i] + value;
> #line 555
16366,16367c16890,16891
<   ldv_51632: ;
< #line 562
---
>   ldv_52189: ;
> #line 555
16369,16370c16893,16894
< #line 563
<     goto ldv_51631;
---
> #line 556
>     goto ldv_52188;
16375c16899
< #line 567
---
> #line 560
16379c16903,16931
< #line 566 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
---
> #line 559 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> struct fifo_buffer *fifo_alloc(int fifo_size ) 
> { 
>   struct fifo_buffer *fb ;
>   void *tmp ;
> 
>   {
> #line 563
>   tmp = kzalloc(((unsigned long )fifo_size + 3UL) * 4UL, 16U);
> #line 563
>   fb = (struct fifo_buffer *)tmp;
> #line 564
>   if ((unsigned long )fb == (unsigned long )((struct fifo_buffer *)0)) {
> #line 565
>     return (0);
>   } else {
> 
>   }
> #line 567
>   fb->head_index = 0U;
> #line 568
>   fb->size = (unsigned int )fifo_size;
> #line 569
>   fb->total = 0;
> #line 571
>   return (fb);
> }
> }
> #line 574 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
16381a16934
>   struct disk_conf *dc ;
16389a16943
>   struct fifo_buffer *plan ;
16390a16945,16952
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp___0 ;
>   int tmp___1 ;
>   struct fifo_buffer *_________p1___0 ;
>   bool __warned___0 ;
>   int tmp___2 ;
>   int tmp___3 ;
16393c16955
< #line 577
---
> #line 587
16395c16957
< #line 577
---
> #line 587
16397c16959
< #line 578
---
> #line 588
16399,16406c16961,16978
< #line 580
<   spin_lock(& mdev->peer_seq_lock);
< #line 582
<   steps = (int )mdev->rs_plan_s.size;
< #line 584
<   if ((unsigned int )mdev->rs_in_flight + sect_in == 0U) {
< #line 585
<     want = (unsigned int )(((mdev->sync_conf.rate * 50) / 250) * steps);
---
> #line 590
>   _________p1 = *((struct disk_conf * volatile  *)(& (mdev->ldev)->disk_conf));
> #line 590
>   tmp___0 = debug_lockdep_rcu_enabled();
> #line 590
>   if (tmp___0 != 0 && ! __warned) {
> #line 590
>     tmp___1 = rcu_read_lock_held();
> #line 590
>     if (tmp___1 == 0 && 1) {
> #line 590
>       __warned = 1;
> #line 590
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared",
>                              590, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
16408,16409c16980
< #line 587
<     want = mdev->sync_conf.c_fill_target != 0 ? (unsigned int )mdev->sync_conf.c_fill_target : (((unsigned int )mdev->sync_conf.c_delay_target * sect_in) * 250U) / 250U;
---
> 
16410a16982,16983
> #line 590
>   dc = _________p1;
16412,16414c16985,17008
<   correction = (int )((want - (unsigned int )mdev->rs_in_flight) - (unsigned int )mdev->rs_planed);
< #line 594
<   cps = correction / steps;
---
>   _________p1___0 = *((struct fifo_buffer * volatile  *)(& mdev->rs_plan_s));
> #line 591
>   tmp___2 = debug_lockdep_rcu_enabled();
> #line 591
>   if (tmp___2 != 0 && ! __warned___0) {
> #line 591
>     tmp___3 = rcu_read_lock_held();
> #line 591
>     if (tmp___3 == 0 && 1) {
> #line 591
>       __warned___0 = 1;
> #line 591
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared",
>                              591, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 591
>   plan = _________p1___0;
> #line 593
>   steps = (int )plan->size;
16416c17010
<   fifo_add_val(& mdev->rs_plan_s, cps);
---
>   if ((unsigned int )mdev->rs_in_flight + sect_in == 0U) {
16418,16425c17012,17029
<   mdev->rs_planed = mdev->rs_planed + cps * steps;
< #line 599
<   curr_corr = fifo_push(& mdev->rs_plan_s, 0);
< #line 600
<   spin_unlock(& mdev->peer_seq_lock);
< #line 601
<   mdev->rs_planed = mdev->rs_planed - curr_corr;
< #line 603
---
>     want = ((dc->resync_rate * 50U) / 250U) * (__u32 )steps;
>   } else {
> #line 598
>     want = dc->c_fill_target != 0U ? dc->c_fill_target : ((dc->c_delay_target * sect_in) * 250U) / 250U;
>   }
> #line 602
>   correction = (int )((want - (unsigned int )mdev->rs_in_flight) - (unsigned int )plan->total);
> #line 605
>   cps = correction / steps;
> #line 606
>   fifo_add_val(plan, cps);
> #line 607
>   plan->total = plan->total + cps * steps;
> #line 610
>   curr_corr = fifo_push(plan, 0);
> #line 611
>   plan->total = plan->total - curr_corr;
> #line 613
16427c17031
< #line 604
---
> #line 614
16429c17033
< #line 605
---
> #line 615
16434,16436c17038,17040
< #line 607
<   max_sect = (mdev->sync_conf.c_max_rate * 50) / 250;
< #line 608
---
> #line 617
>   max_sect = (int )((dc->c_max_rate * 50U) / 250U);
> #line 618
16438c17042
< #line 609
---
> #line 619
16443c17047
< #line 617
---
> #line 627
16447c17051
< #line 620 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
---
> #line 630 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
16451a17056,17063
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp___0 ;
>   int tmp___1 ;
>   struct fifo_buffer *_________p1___0 ;
>   bool __warned___0 ;
>   int tmp___2 ;
>   int tmp___3 ;
16454,16456c17066,17091
< #line 623
<   if (mdev->rs_plan_s.size != 0U) {
< #line 624
---
> #line 634
>   rcu_read_lock___1();
> #line 635
>   _________p1___0 = *((struct fifo_buffer * volatile  *)(& mdev->rs_plan_s));
> #line 635
>   tmp___2 = debug_lockdep_rcu_enabled();
> #line 635
>   if (tmp___2 != 0 && ! __warned___0) {
> #line 635
>     tmp___3 = rcu_read_lock_held();
> #line 635
>     if (tmp___3 == 0 && 1) {
> #line 635
>       __warned___0 = 1;
> #line 635
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared",
>                              635, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 635
>   if (_________p1___0->size != 0U) {
> #line 636
16458c17093
< #line 624
---
> #line 636
16460c17095
< #line 625
---
> #line 637
16463,16465c17098,17121
< #line 627
<     mdev->c_sync_rate = mdev->sync_conf.rate;
< #line 628
---
> #line 639
>     _________p1 = *((struct disk_conf * volatile  *)(& (mdev->ldev)->disk_conf));
> #line 639
>     tmp___0 = debug_lockdep_rcu_enabled();
> #line 639
>     if (tmp___0 != 0 && ! __warned) {
> #line 639
>       tmp___1 = rcu_read_lock_held();
> #line 639
>       if (tmp___1 == 0 && 1) {
> #line 639
>         __warned = 1;
> #line 639
>         lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared",
>                                639, "suspicious rcu_dereference_check() usage");
>       } else {
> 
>       }
>     } else {
> 
>     }
> #line 639
>     mdev->c_sync_rate = (int )_________p1->resync_rate;
> #line 640
16468c17124,17126
< #line 633
---
> #line 642
>   rcu_read_unlock___1();
> #line 646
16472,16473c17130,17131
< #line 636 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< static int w_make_resync_request(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) 
---
> #line 649 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> int w_make_resync_request(struct drbd_work *w , int cancel ) 
16474a17133
>   struct drbd_conf *mdev ;
16496,16499c17155,17156
<   int tmp___9 ;
<   int tmp___10 ;
<   int tmp___11 ;
<   unsigned long tmp___12 ;
---
>   int err ;
>   unsigned long tmp___9 ;
16502c17159,17161
< #line 641
---
> #line 651
>   mdev = w->ldv_49807.mdev;
> #line 654
16504c17163
< #line 641
---
> #line 654
16506c17165
< #line 645
---
> #line 658
16508c17167
< #line 647
---
> #line 660
16510c17169
< #line 647
---
> #line 660
16512,16513c17171,17172
< #line 648
<     return (1);
---
> #line 661
>     return (0);
16517c17176
< #line 650
---
> #line 663
16519c17178
< #line 652
---
> #line 665
16521,16522c17180,17181
< #line 653
<     return (1);
---
> #line 666
>     return (0);
16526c17185
< #line 656
---
> #line 669
16528c17187
< #line 656
---
> #line 669
16530c17189
< #line 661
---
> #line 674
16532,16533c17191,17192
< #line 662
<     return (1);
---
> #line 675
>     return (0);
16537c17196
< #line 665
---
> #line 678
16539c17198
< #line 665
---
> #line 678
16541c17200
< #line 666
---
> #line 679
16543c17202
< #line 667
---
> #line 680
16545c17204
< #line 668
---
> #line 681
16550c17209
< #line 670
---
> #line 683
16552,16562c17211,17221
< #line 670
<   goto ldv_51680;
<   ldv_51679: 
< #line 672
<   ldv_mutex_lock_77(& mdev->data.mutex);
< #line 673
<   if ((unsigned long )mdev->data.socket != (unsigned long )((struct socket *)0)) {
< #line 674
<     queued = ((mdev->data.socket)->sk)->sk_wmem_queued;
< #line 675
<     sndbuf = ((mdev->data.socket)->sk)->sk_sndbuf;
---
> #line 683
>   goto ldv_52253;
>   ldv_52252: 
> #line 685
>   ldv_mutex_lock_62(& (mdev->tconn)->data.mutex);
> #line 686
>   if ((unsigned long )(mdev->tconn)->data.socket != (unsigned long )((struct socket *)0)) {
> #line 687
>     queued = (((mdev->tconn)->data.socket)->sk)->sk_wmem_queued;
> #line 688
>     sndbuf = (((mdev->tconn)->data.socket)->sk)->sk_sndbuf;
16564c17223
< #line 677
---
> #line 690
16566c17225
< #line 678
---
> #line 691
16569,16571c17228,17230
< #line 680
<   ldv_mutex_unlock_78(& mdev->data.mutex);
< #line 681
---
> #line 693
>   ldv_mutex_unlock_63(& (mdev->tconn)->data.mutex);
> #line 694
16573c17232
< #line 682
---
> #line 695
16579c17238
< #line 685
---
> #line 698
16581c17240
< #line 686
---
> #line 699
16583c17242
< #line 688
---
> #line 701
16585c17244
< #line 689
---
> #line 702
16587c17246
< #line 690
---
> #line 703
16589,16590c17248,17249
< #line 691
<     return (1);
---
> #line 704
>     return (0);
16594c17253
< #line 694
---
> #line 707
16596c17255
< #line 696
---
> #line 709
16598c17257
< #line 696
---
> #line 709
16600c17259
< #line 698
---
> #line 711
16602c17261
< #line 699
---
> #line 712
16605c17264
< #line 696
---
> #line 709
16607c17266
< #line 696
---
> #line 709
16609c17268
< #line 698
---
> #line 711
16611c17270
< #line 699
---
> #line 712
16617c17276
< #line 701
---
> #line 714
16619c17278
< #line 703
---
> #line 716
16621c17280
< #line 703
---
> #line 716
16623c17282
< #line 703
---
> #line 716
16625c17284
< #line 704
---
> #line 717
16627c17286
< #line 705
---
> #line 718
16632c17291
< #line 715
---
> #line 728
16634c17293
< #line 716
---
> #line 729
16636,16637c17295,17296
<   ldv_51668: ;
< #line 718
---
>   ldv_52243: ;
> #line 731
16639,16640c17298,17299
< #line 719
<     goto ldv_51667;
---
> #line 732
>     goto ldv_52242;
16644c17303
< #line 722
---
> #line 735
16646,16647c17305,17306
< #line 723
<     goto ldv_51667;
---
> #line 736
>     goto ldv_52242;
16651c17310
< #line 726
---
> #line 739
16653,16654c17312,17313
< #line 727
<     goto ldv_51667;
---
> #line 740
>     goto ldv_52242;
16658c17317
< #line 733
---
> #line 746
16660c17319
< #line 733
---
> #line 746
16662,16663c17321,17322
< #line 734
<     goto ldv_51667;
---
> #line 747
>     goto ldv_52242;
16667c17326
< #line 735
---
> #line 748
16669c17328
< #line 736
---
> #line 749
16671c17330
< #line 737
---
> #line 750
16673c17332
< #line 738
---
> #line 751
16678c17337
< #line 739
---
> #line 752
16680,16683c17339,17342
< #line 740
<   goto ldv_51668;
<   ldv_51667: ;
< #line 743
---
> #line 753
>   goto ldv_52243;
>   ldv_52242: ;
> #line 756
16685c17344
< #line 744
---
> #line 757
16690c17349
< #line 748
---
> #line 761
16692c17351
< #line 749
---
> #line 762
16697,16699c17356,17358
< #line 750
<   if (mdev->agreed_pro_version > 88 && (unsigned long )mdev->csums_tfm != (unsigned long )((struct crypto_hash *)0)) {
< #line 751
---
> #line 763
>   if ((mdev->tconn)->agreed_pro_version > 88 && (unsigned long )(mdev->tconn)->csums_tfm != (unsigned long )((struct crypto_hash *)0)) {
> #line 764
16701c17360
< #line 751
---
> #line 764
16704c17363
< #line 753
---
> #line 766
16706,16707c17365,17366
< #line 754
<     return (0);
---
> #line 767
>     return (-5);
16709c17368
< #line 756
---
> #line 769
16711c17370
< #line 757
---
> #line 770
16713c17372
< #line 758
---
> #line 771
16715c17374
< #line 759
---
> #line 772
16718,16719c17377,17378
< #line 762
<     goto ldv_51672;
---
> #line 775
>     goto ldv_52247;
16721,16726c17380,17385
< #line 764
<     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"),
<                          "i" (764), "i" (12UL));
<     ldv_51674: ;
< #line 764
<     goto ldv_51674;
---
> #line 777
>     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"),
>                          "i" (777), "i" (12UL));
>     ldv_52249: ;
> #line 777
>     goto ldv_52249;
16728c17387
<     ldv_51672: ;
---
>     ldv_52247: ;
16730c17389
< #line 767
---
> #line 782
16732,16736c17391,17395
< #line 768
<     tmp___11 = drbd_send_drequest(mdev, 9, sector, size, 0xffffffffffffffffULL);
< #line 768
<     if (tmp___11 == 0) {
< #line 770
---
> #line 783
>     err = drbd_send_drequest(mdev, 9, sector, size, 0xffffffffffffffffULL);
> #line 785
>     if (err != 0) {
> #line 786
16738,16752c17397,17399
< #line 771
<       atomic_dec(& mdev->rs_pending_cnt);
< #line 771
<       tmp___10 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
< #line 771
<       if (tmp___10 < 0) {
< #line 771
<         tmp___9 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
< #line 771
<         dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: rs_pending_cnt = %d < 0 !\n",
<                 "w_make_resync_request", 771, tmp___9);
<       } else {
< 
<       }
< #line 772
---
> #line 787
>       _dec_rs_pending(mdev, "w_make_resync_request", 787);
> #line 788
16754,16755c17401,17402
< #line 773
<       return (0);
---
> #line 789
>       return (err);
16760c17407
< #line 670
---
> #line 683
16762,16763c17409,17410
<   ldv_51680: ;
< #line 670
---
>   ldv_52253: ;
> #line 683
16765,16766c17412,17413
< #line 671
<     goto ldv_51679;
---
> #line 684
>     goto ldv_52252;
16770,16774c17417,17421
< #line 778
<   tmp___12 = drbd_bm_bits(mdev);
< #line 778
<   if (mdev->bm_resync_fo >= tmp___12) {
< #line 785
---
> #line 794
>   tmp___9 = drbd_bm_bits(mdev);
> #line 794
>   if (mdev->bm_resync_fo >= tmp___9) {
> #line 801
16776,16777c17423,17424
< #line 786
<     return (1);
---
> #line 802
>     return (0);
16782c17429
< #line 790
---
> #line 806
16784c17431
< #line 791
---
> #line 807
16786c17433
< #line 792
---
> #line 808
16788,16789c17435,17436
< #line 793
<   return (1);
---
> #line 809
>   return (0);
16792,16793c17439,17440
< #line 796 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< static int w_make_ov_request(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) 
---
> #line 812 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> static int w_make_ov_request(struct drbd_work *w , int cancel ) 
16794a17442
>   struct drbd_conf *mdev ;
16803c17451
<   int tmp___1 ;
---
>   bool tmp___1 ;
16810c17458,17460
< #line 800
---
> #line 814
>   mdev = w->ldv_49807.mdev;
> #line 817
16812c17462
< #line 800
---
> #line 817
16814c17464
< #line 801
---
> #line 818
16816c17466
< #line 803
---
> #line 820
16818c17468
< #line 803
---
> #line 820
16820c17470
< #line 804
---
> #line 821
16825c17475
< #line 806
---
> #line 823
16827c17477
< #line 808
---
> #line 825
16829c17479
< #line 809
---
> #line 826
16831,16834c17481,17484
< #line 809
<   goto ldv_51700;
<   ldv_51699: ;
< #line 810
---
> #line 826
>   goto ldv_52270;
>   ldv_52269: ;
> #line 827
16836c17486
< #line 811
---
> #line 828
16841,16843c17491,17515
< #line 816
<   stop_sector_reached = (bool )((i > 0 && mdev->agreed_pro_version > 96) && mdev->ov_stop_sector <= sector);
< #line 819
---
> #line 833
>   if (i > 0) {
> #line 833
>     tmp___1 = verify_can_do_stop_sector(mdev);
> #line 833
>     if ((int )tmp___1) {
> #line 833
>       if (mdev->ov_stop_sector <= sector) {
> #line 833
>         tmp___2 = 1;
>       } else {
> #line 833
>         tmp___2 = 0;
>       }
>     } else {
> #line 833
>       tmp___2 = 0;
>     }
>   } else {
> #line 833
>     tmp___2 = 0;
>   }
> #line 833
>   stop_sector_reached = (bool )tmp___2;
> #line 836
16845,16846c17517,17518
< #line 820
<     goto ldv_51693;
---
> #line 837
>     goto ldv_52266;
16850c17522
< #line 822
---
> #line 839
16852,16856c17524,17528
< #line 824
<   tmp___1 = drbd_rs_should_slow_down(mdev, sector);
< #line 824
<   if (tmp___1 != 0) {
< #line 826
---
> #line 841
>   tmp___3 = drbd_rs_should_slow_down(mdev, sector);
> #line 841
>   if (tmp___3 != 0) {
> #line 843
16858c17530
< #line 827
---
> #line 844
16861,16865c17533,17537
< #line 824
<     tmp___2 = drbd_try_rs_begin_io(mdev, sector);
< #line 824
<     if (tmp___2 != 0) {
< #line 826
---
> #line 841
>     tmp___4 = drbd_try_rs_begin_io(mdev, sector);
> #line 841
>     if (tmp___4 != 0) {
> #line 843
16867c17539
< #line 827
---
> #line 844
16873c17545
< #line 830
---
> #line 847
16875c17547
< #line 831
---
> #line 848
16880c17552
< #line 833
---
> #line 850
16882c17554
< #line 834
---
> #line 851
16884,16900c17556,17560
< #line 834
<   if (tmp___5 == 0) {
< #line 835
<     atomic_dec(& mdev->rs_pending_cnt);
< #line 835
<     tmp___4 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
< #line 835
<     if (tmp___4 < 0) {
< #line 835
<       tmp___3 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
< #line 835
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: rs_pending_cnt = %d < 0 !\n",
<               "w_make_ov_request", 835, tmp___3);
<     } else {
< 
<     }
< #line 836
---
> #line 851
>   if (tmp___5 != 0) {
> #line 852
>     _dec_rs_pending(mdev, "w_make_ov_request", 852);
> #line 853
16905c17565
< #line 838
---
> #line 855
16907c17567
< #line 809
---
> #line 826
16909,16910c17569,17570
<   ldv_51700: ;
< #line 809
---
>   ldv_52270: ;
> #line 826
16912,16913c17572,17573
< #line 810
<     goto ldv_51699;
---
> #line 827
>     goto ldv_52269;
16917,16918c17577,17578
<   ldv_51693: 
< #line 840
---
>   ldv_52266: 
> #line 857
16921c17581
< #line 843
---
> #line 860
16923c17583
< #line 844
---
> #line 861
16925c17585
< #line 845
---
> #line 862
16930c17590
< #line 846
---
> #line 863
16934,16935c17594,17595
< #line 850 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void start_resync_timer_fn(unsigned long data ) 
---
> #line 866 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> int w_ov_finished(struct drbd_work *w , int cancel ) 
16940,16987d17599
< #line 852
<   mdev = (struct drbd_conf *)data;
< #line 854
<   drbd_queue_work(& mdev->data.work, & mdev->start_resync_work);
< #line 855
<   return;
< }
< }
< #line 857 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< int w_start_resync(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) 
< { 
<   int tmp ;
<   int tmp___0 ;
< 
<   {
< #line 859
<   tmp = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 859
<   if (tmp != 0) {
< #line 860
<     dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "w_start_resync later...\n");
< #line 861
<     mdev->start_resync_timer.expires = (unsigned long )jiffies + 25UL;
< #line 862
<     add_timer(& mdev->start_resync_timer);
< #line 863
<     return (1);
<   } else {
< #line 859
<     tmp___0 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
< #line 859
<     if (tmp___0 != 0) {
< #line 860
<       dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "w_start_resync later...\n");
< #line 861
<       mdev->start_resync_timer.expires = (unsigned long )jiffies + 25UL;
< #line 862
<       add_timer(& mdev->start_resync_timer);
< #line 863
<       return (1);
<     } else {
< 
<     }
<   }
< #line 866
<   drbd_start_resync(mdev, C_SYNC_SOURCE);
< #line 867
<   drbd_clear_flag(mdev, AHEAD_TO_SYNC_SOURCE);
16989,16998c17601,17602
<   return (1);
< }
< }
< #line 871 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< int w_ov_finished(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) 
< { 
< 
< 
<   {
< #line 873
---
>   mdev = w->ldv_49807.mdev;
> #line 869
17000,17002c17604,17606
< #line 874
<   ov_oos_print(mdev);
< #line 875
---
> #line 870
>   ov_out_of_sync_print(mdev);
> #line 871
17004,17005c17608,17609
< #line 877
<   return (1);
---
> #line 873
>   return (0);
17008,17009c17612,17613
< #line 880 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< static int w_resync_finished(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) 
---
> #line 876 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> static int w_resync_finished(struct drbd_work *w , int cancel ) 
17011c17615
< 
---
>   struct drbd_conf *mdev ;
17014c17618,17620
< #line 882
---
> #line 878
>   mdev = w->ldv_49807.mdev;
> #line 879
17016c17622
< #line 884
---
> #line 881
17018,17019c17624,17625
< #line 886
<   return (1);
---
> #line 883
>   return (0);
17022c17628
< #line 889 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
---
> #line 886 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
17024a17631
>   struct drbd_tconn *tconn ;
17030a17638,17641
> #line 888
>   tconn = mdev->tconn;
> #line 890
>   clear_bit(4, (unsigned long volatile   *)(& tconn->flags));
17032c17643
<   drbd_clear_flag(mdev, GOT_PING_ACK);
---
>   request_ping(tconn);
17034,17040c17645,17649
<   request_ping(mdev);
< #line 893
<   tmp = drbd_test_flag(mdev, GOT_PING_ACK);
< #line 893
<   if (tmp != 0 || (int )mdev->state.ldv_39979.conn <= 9) {
< #line 893
<     goto ldv_51723;
---
>   tmp = constant_test_bit(4U, (unsigned long const volatile   *)(& tconn->flags));
> #line 892
>   if (tmp != 0 || (int )mdev->state.ldv_49522.conn <= 9) {
> #line 892
>     goto ldv_52285;
17044c17653
< #line 893
---
> #line 892
17046c17655
< #line 893
---
> #line 892
17048c17657
< #line 893
---
> #line 892
17050c17659
< #line 893
---
> #line 892
17052c17661
< #line 893
---
> #line 892
17054c17663
< #line 893
---
> #line 892
17056,17064c17665,17673
<   ldv_51726: 
< #line 893
<   prepare_to_wait(& mdev->misc_wait, & __wait, 2);
< #line 893
<   tmp___1 = drbd_test_flag(mdev, GOT_PING_ACK);
< #line 893
<   if (tmp___1 != 0 || (int )mdev->state.ldv_39979.conn <= 9) {
< #line 893
<     goto ldv_51725;
---
>   ldv_52288: 
> #line 892
>   prepare_to_wait(& tconn->ping_wait, & __wait, 2);
> #line 892
>   tmp___1 = constant_test_bit(4U, (unsigned long const volatile   *)(& tconn->flags));
> #line 892
>   if (tmp___1 != 0 || (int )mdev->state.ldv_49522.conn <= 9) {
> #line 892
>     goto ldv_52287;
17068c17677
< #line 893
---
> #line 892
17070,17076c17679,17685
< #line 893
<   goto ldv_51726;
<   ldv_51725: 
< #line 893
<   finish_wait(& mdev->misc_wait, & __wait);
<   ldv_51723: ;
< #line 896
---
> #line 892
>   goto ldv_52288;
>   ldv_52287: 
> #line 892
>   finish_wait(& tconn->ping_wait, & __wait);
>   ldv_52285: ;
> #line 895
17080c17689
< #line 897 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
---
> #line 896 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
17102c17711
< #line 903
---
> #line 902
17104c17713
< #line 904
---
> #line 903
17106c17715
< #line 909
---
> #line 908
17108c17717
< #line 909
---
> #line 908
17110c17719
< #line 915
---
> #line 914
17112,17114c17721,17723
< #line 916
<     tmp = kmalloc(24UL, 32U);
< #line 916
---
> #line 915
>     tmp = kmalloc(32UL, 32U);
> #line 915
17116c17725
< #line 917
---
> #line 916
17118c17727
< #line 918
---
> #line 917
17119a17729,17730
> #line 918
>       w->ldv_49807.mdev = mdev;
17121c17732
<       drbd_queue_work(& mdev->data.work, w);
---
>       drbd_queue_work(& (mdev->tconn)->sender_work, w);
17144c17755
<   if ((unsigned int )*((unsigned short *)mdev + 1138UL) == 288U || (unsigned int )*((unsigned short *)mdev + 1138UL) == 304U) {
---
>   if ((unsigned int )*((unsigned short *)mdev + 374UL) == 288U || (unsigned int )*((unsigned short *)mdev + 374UL) == 304U) {
17166c17777
<   spin_lock_irq(& mdev->req_lock);
---
>   spin_lock_irq(& (mdev->tconn)->req_lock);
17168c17779
<   os = mdev->state;
---
>   os = drbd_read_state(mdev);
17172c17783
<   if ((int )os.ldv_39979.conn <= 10) {
---
>   if ((int )os.ldv_40024.conn <= 10) {
17181c17792
<   ns.ldv_39979.conn = 10U;
---
>   ns.ldv_40024.conn = 10U;
17202c17813
<                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared",
---
>                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared",
17215c17826
<       if ((unsigned long )mdev->csums_tfm != (unsigned long )((struct crypto_hash *)0) && mdev->rs_total != 0UL) {
---
>       if ((unsigned long )(mdev->tconn)->csums_tfm != (unsigned long )((struct crypto_hash *)0) && mdev->rs_total != 0UL) {
17241c17852
<       ns.ldv_39979.disk = 4U;
---
>       ns.ldv_40024.disk = 4U;
17243c17854
<       ns.ldv_39979.pdsk = 8U;
---
>       ns.ldv_40024.pdsk = 8U;
17246c17857
<       ns.ldv_39979.disk = 8U;
---
>       ns.ldv_40024.disk = 8U;
17248c17859
<       ns.ldv_39979.pdsk = 4U;
---
>       ns.ldv_40024.pdsk = 4U;
17252c17863
<     ns.ldv_39979.disk = 8U;
---
>     ns.ldv_40024.disk = 8U;
17254c17865
<     ns.ldv_39979.pdsk = 8U;
---
>     ns.ldv_40024.pdsk = 8U;
17262,17263c17873,17874
<         goto ldv_51746;
<         ldv_51745: 
---
>         goto ldv_52308;
>         ldv_52307: 
17268c17879
<         ldv_51746: ;
---
>         ldv_52308: ;
17272c17883
<           goto ldv_51745;
---
>           goto ldv_52307;
17298,17299c17909,17910
<         goto ldv_51750;
<         ldv_51749: 
---
>         goto ldv_52312;
>         ldv_52311: 
17304c17915
<         ldv_51750: ;
---
>         ldv_52312: ;
17308c17919
<           goto ldv_51749;
---
>           goto ldv_52311;
17324c17935
<   spin_unlock_irq(& mdev->req_lock);
---
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
17354,17355c17965,17966
< #line 1051 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< static void move_to_net_ee_or_free(struct drbd_conf *mdev , struct drbd_epoch_entry *e ) 
---
> #line 1051 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> static void move_to_net_ee_or_free(struct drbd_conf *mdev , struct drbd_peer_request *peer_req ) 
17362c17973
<   tmp = drbd_ee_has_active_page(e);
---
>   tmp = drbd_peer_req_has_active_page(peer_req);
17366c17977
<     i = (int )(((unsigned long )e->size + 4095UL) >> 12);
---
>     i = (int )(((unsigned long )peer_req->i.size + 4095UL) >> 12);
17372c17983
<     spin_lock_irq(& mdev->req_lock);
---
>     spin_lock_irq(& (mdev->tconn)->req_lock);
17374c17985
<     list_add_tail(& e->w.list, & mdev->net_ee);
---
>     list_add_tail(& peer_req->w.list, & mdev->net_ee);
17376c17987
<     spin_unlock_irq(& mdev->req_lock);
---
>     spin_unlock_irq(& (mdev->tconn)->req_lock);
17381c17992
<     drbd_free_some_ee(mdev, e, 0);
---
>     __drbd_free_peer_req(mdev, peer_req, 0);
17387,17388c17998,17999
< #line 1072 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< int w_e_end_data_req(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) 
---
> #line 1072 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> int w_e_end_data_req(struct drbd_work *w , int cancel ) 
17390c18001
<   struct drbd_epoch_entry *e ;
---
>   struct drbd_peer_request *peer_req ;
17392,17393c18003,18005
<   int ok ;
<   int tmp ;
---
>   struct drbd_conf *mdev ;
>   int err ;
>   long tmp ;
17396,17400c18008
<   int tmp___2 ;
<   long tmp___3 ;
<   int tmp___4 ;
<   int tmp___5 ;
<   long tmp___6 ;
---
>   long tmp___2 ;
17406,17410c18014,18016
<   e = (struct drbd_epoch_entry *)__mptr;
< #line 1077
<   tmp___1 = __builtin_expect(cancel != 0, 0L);
< #line 1077
<   if (tmp___1 != 0L) {
---
>   peer_req = (struct drbd_peer_request *)__mptr;
> #line 1075
>   mdev = w->ldv_49807.mdev;
17412,17420c18018,18020
<     drbd_free_some_ee(mdev, e, 0);
< #line 1079
<     atomic_dec(& mdev->unacked_cnt);
< #line 1079
<     tmp___0 = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 1079
<     if (tmp___0 < 0) {
< #line 1079
<       tmp = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
---
>   tmp = __builtin_expect(cancel != 0, 0L);
> #line 1078
>   if (tmp != 0L) {
17422,17426c18022
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: unacked_cnt = %d < 0 !\n",
<               "w_e_end_data_req", 1079, tmp);
<     } else {
< 
<     }
---
>     __drbd_free_peer_req(mdev, peer_req, 0);
17428c18024,18026
<     return (1);
---
>     _dec_unacked(mdev, "w_e_end_data_req", 1080);
> #line 1081
>     return (0);
17432,17435d18029
< #line 1083
<   tmp___3 = __builtin_expect((e->flags & 8UL) == 0UL, 1L);
< #line 1083
<   if (tmp___3 != 0L) {
17437c18031,18035
<     ok = drbd_send_block(mdev, P_DATA_REPLY, e);
---
>   tmp___1 = __builtin_expect((peer_req->flags & 8UL) == 0UL, 1L);
> #line 1084
>   if (tmp___1 != 0L) {
> #line 1085
>     err = drbd_send_block(mdev, P_DATA_REPLY, peer_req);
17439,17442d18036
< #line 1086
<     tmp___2 = ___ratelimit(& drbd_ratelimit_state, "w_e_end_data_req");
< #line 1086
<     if (tmp___2 != 0) {
17443a18038,18041
>     tmp___0 = ___ratelimit(& drbd_ratelimit_state, "w_e_end_data_req");
> #line 1087
>     if (tmp___0 != 0) {
> #line 1088
17445c18043
<               (unsigned long long )e->sector);
---
>               (unsigned long long )peer_req->i.sector);
17449,17464c18047,18048
< #line 1090
<     ok = drbd_send_ack(mdev, P_NEG_DREPLY, e);
<   }
< #line 1093
<   atomic_dec(& mdev->unacked_cnt);
< #line 1093
<   tmp___5 = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 1093
<   if (tmp___5 < 0) {
< #line 1093
<     tmp___4 = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 1093
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: unacked_cnt = %d < 0 !\n",
<             "w_e_end_data_req", 1093, tmp___4);
<   } else {
< 
---
> #line 1091
>     err = drbd_send_ack(mdev, P_NEG_DREPLY, peer_req);
17466,17471c18050,18053
< #line 1095
<   move_to_net_ee_or_free(mdev, e);
< #line 1097
<   tmp___6 = __builtin_expect(ok == 0, 0L);
< #line 1097
<   if (tmp___6 != 0L) {
---
> #line 1094
>   _dec_unacked(mdev, "w_e_end_data_req", 1094);
> #line 1096
>   move_to_net_ee_or_free(mdev, peer_req);
17472a18055,18058
>   tmp___2 = __builtin_expect(err != 0, 0L);
> #line 1098
>   if (tmp___2 != 0L) {
> #line 1099
17477,17478c18063,18064
< #line 1099
<   return (ok);
---
> #line 1100
>   return (err);
17481,17482c18067,18068
< #line 1108 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< int w_e_end_rsdata_req(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) 
---
> #line 1109 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> int w_e_end_rsdata_req(struct drbd_work *w , int cancel ) 
17484c18070
<   struct drbd_epoch_entry *e ;
---
>   struct drbd_peer_request *peer_req ;
17486,17487c18072,18074
<   int ok ;
<   int tmp ;
---
>   struct drbd_conf *mdev ;
>   int err ;
>   long tmp ;
17489,17490c18076,18077
<   long tmp___1 ;
<   int tmp___2 ;
---
>   int tmp___1 ;
>   long tmp___2 ;
17493,17497c18080
<   int tmp___5 ;
<   long tmp___6 ;
<   int tmp___7 ;
<   int tmp___8 ;
<   long tmp___9 ;
---
>   long tmp___5 ;
17500c18083
< #line 1110
---
> #line 1111
17502,17515c18085,18088
< #line 1110
<   e = (struct drbd_epoch_entry *)__mptr;
< #line 1113
<   tmp___1 = __builtin_expect(cancel != 0, 0L);
< #line 1113
<   if (tmp___1 != 0L) {
< #line 1114
<     drbd_free_some_ee(mdev, e, 0);
< #line 1115
<     atomic_dec(& mdev->unacked_cnt);
< #line 1115
<     tmp___0 = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 1115
<     if (tmp___0 < 0) {
---
> #line 1111
>   peer_req = (struct drbd_peer_request *)__mptr;
> #line 1112
>   mdev = w->ldv_49807.mdev;
17517c18090
<       tmp = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
---
>   tmp = __builtin_expect(cancel != 0, 0L);
17519,17523c18092
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: unacked_cnt = %d < 0 !\n",
<               "w_e_end_rsdata_req", 1115, tmp);
<     } else {
< 
<     }
---
>   if (tmp != 0L) {
17525c18094,18098
<     return (1);
---
>     __drbd_free_peer_req(mdev, peer_req, 0);
> #line 1117
>     _dec_unacked(mdev, "w_e_end_rsdata_req", 1117);
> #line 1118
>     return (0);
17529,17534d18101
< #line 1119
<   tmp___2 = _get_ldev_if_state(mdev, D_FAILED);
< #line 1119
<   if (tmp___2 != 0) {
< #line 1120
<     drbd_rs_complete_io(mdev, e->sector);
17535a18103,18108
>   tmp___0 = _get_ldev_if_state(mdev, D_FAILED);
> #line 1121
>   if (tmp___0 != 0) {
> #line 1122
>     drbd_rs_complete_io(mdev, peer_req->i.sector);
> #line 1123
17540,17546d18112
< #line 1124
<   if ((unsigned int )*((unsigned short *)mdev + 1138UL) == 352U) {
< #line 1125
<     ok = drbd_send_ack(mdev, P_RS_CANCEL, e);
<   } else {
< #line 1126
<     tmp___6 = __builtin_expect((e->flags & 8UL) == 0UL, 1L);
17548c18114
<     if (tmp___6 != 0L) {
---
>   if ((unsigned int )*((unsigned short *)mdev + 374UL) == 352U) {
17550,17552c18116,18117
<       tmp___4 = __builtin_expect((int )mdev->state.ldv_39979.pdsk > 3, 1L);
< #line 1127
<       if (tmp___4 != 0L) {
---
>     err = drbd_send_ack(mdev, P_RS_CANCEL, peer_req);
>   } else {
17554c18119,18121
<         inc_rs_pending(mdev);
---
>     tmp___4 = __builtin_expect((peer_req->flags & 8UL) == 0UL, 1L);
> #line 1128
>     if (tmp___4 != 0L) {
17556,17559c18123,18127
<         ok = drbd_send_block(mdev, P_RS_DATA_REPLY, e);
<       } else {
< #line 1131
<         tmp___3 = ___ratelimit(& drbd_ratelimit_state, "w_e_end_rsdata_req");
---
>       tmp___2 = __builtin_expect((int )mdev->state.ldv_49522.pdsk > 3, 1L);
> #line 1129
>       if (tmp___2 != 0L) {
> #line 1130
>         inc_rs_pending(mdev);
17561,17562c18129,18135
<         if (tmp___3 != 0) {
< #line 1132
---
>         err = drbd_send_block(mdev, P_RS_DATA_REPLY, peer_req);
>       } else {
> #line 1133
>         tmp___1 = ___ratelimit(& drbd_ratelimit_state, "w_e_end_rsdata_req");
> #line 1133
>         if (tmp___1 != 0) {
> #line 1134
17567,17568c18140,18141
< #line 1134
<         ok = 1;
---
> #line 1136
>         err = 0;
17571,17575c18144,18148
< #line 1137
<       tmp___5 = ___ratelimit(& drbd_ratelimit_state, "w_e_end_rsdata_req");
< #line 1137
<       if (tmp___5 != 0) {
< #line 1138
---
> #line 1139
>       tmp___3 = ___ratelimit(& drbd_ratelimit_state, "w_e_end_rsdata_req");
> #line 1139
>       if (tmp___3 != 0) {
> #line 1140
17577c18150
<                 (unsigned long long )e->sector);
---
>                 (unsigned long long )peer_req->i.sector);
17581,17584c18154,18157
< #line 1141
<       ok = drbd_send_ack(mdev, P_NEG_RS_DREPLY, e);
< #line 1144
<       drbd_rs_failed_io(mdev, e->sector, (int )e->size);
---
> #line 1143
>       err = drbd_send_ack(mdev, P_NEG_RS_DREPLY, peer_req);
> #line 1146
>       drbd_rs_failed_io(mdev, peer_req->i.sector, (int )peer_req->i.size);
17587,17600d18159
< #line 1147
<   atomic_dec(& mdev->unacked_cnt);
< #line 1147
<   tmp___8 = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 1147
<   if (tmp___8 < 0) {
< #line 1147
<     tmp___7 = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 1147
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: unacked_cnt = %d < 0 !\n",
<             "w_e_end_rsdata_req", 1147, tmp___7);
<   } else {
< 
<   }
17602,17604c18161
<   move_to_net_ee_or_free(mdev, e);
< #line 1151
<   tmp___9 = __builtin_expect(ok == 0, 0L);
---
>   _dec_unacked(mdev, "w_e_end_rsdata_req", 1149);
17606,17607c18163,18168
<   if (tmp___9 != 0L) {
< #line 1152
---
>   move_to_net_ee_or_free(mdev, peer_req);
> #line 1153
>   tmp___5 = __builtin_expect(err != 0, 0L);
> #line 1153
>   if (tmp___5 != 0L) {
> #line 1154
17612,17613c18173,18174
< #line 1153
<   return (ok);
---
> #line 1155
>   return (err);
17616,17617c18177,18178
< #line 1156 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< int w_e_end_csum_rs_req(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) 
---
> #line 1158 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> int w_e_end_csum_rs_req(struct drbd_work *w , int cancel ) 
17619c18180
<   struct drbd_epoch_entry *e ;
---
>   struct drbd_peer_request *peer_req ;
17620a18182
>   struct drbd_conf *mdev ;
17624c18186
<   int ok ;
---
>   int err ;
17626c18188
<   int tmp ;
---
>   long tmp ;
17628c18190
<   long tmp___1 ;
---
>   unsigned int tmp___1 ;
17630,17636c18192,18194
<   unsigned int tmp___3 ;
<   int tmp___4 ;
<   int tmp___5 ;
<   long tmp___6 ;
<   int tmp___7 ;
<   int tmp___8 ;
<   long tmp___9 ;
---
>   int tmp___3 ;
>   long tmp___4 ;
>   long tmp___5 ;
17639c18197
< #line 1158
---
> #line 1160
17641,17642c18199,18200
< #line 1158
<   e = (struct drbd_epoch_entry *)__mptr;
---
> #line 1160
>   peer_req = (struct drbd_peer_request *)__mptr;
17644,17646c18202
<   digest = 0;
< #line 1162
<   eq = 0;
---
>   mdev = w->ldv_49807.mdev;
17648,17650c18204
<   tmp___1 = __builtin_expect(cancel != 0, 0L);
< #line 1164
<   if (tmp___1 != 0L) {
---
>   digest = 0;
17652,17666c18206
<     drbd_free_some_ee(mdev, e, 0);
< #line 1166
<     atomic_dec(& mdev->unacked_cnt);
< #line 1166
<     tmp___0 = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 1166
<     if (tmp___0 < 0) {
< #line 1166
<       tmp = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 1166
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: unacked_cnt = %d < 0 !\n",
<               "w_e_end_csum_rs_req", 1166, tmp);
<     } else {
< 
<     }
---
>   eq = 0;
17668c18208,18216
<     return (1);
---
>   tmp = __builtin_expect(cancel != 0, 0L);
> #line 1167
>   if (tmp != 0L) {
> #line 1168
>     __drbd_free_peer_req(mdev, peer_req, 0);
> #line 1169
>     _dec_unacked(mdev, "w_e_end_csum_rs_req", 1169);
> #line 1170
>     return (0);
17672,17678c18220,18226
< #line 1170
<   tmp___2 = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 1170
<   if (tmp___2 != 0) {
< #line 1171
<     drbd_rs_complete_io(mdev, e->sector);
< #line 1172
---
> #line 1173
>   tmp___0 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 1173
>   if (tmp___0 != 0) {
> #line 1174
>     drbd_rs_complete_io(mdev, peer_req->i.sector);
> #line 1175
17683,17695c18231,18243
< #line 1175
<   di = e->ldv_49189.digest;
< #line 1177
<   tmp___6 = __builtin_expect((e->flags & 8UL) == 0UL, 1L);
< #line 1177
<   if (tmp___6 != 0L) {
< #line 1181
<     if ((unsigned long )mdev->csums_tfm != (unsigned long )((struct crypto_hash *)0)) {
< #line 1182
<       tmp___3 = crypto_hash_digestsize(mdev->csums_tfm);
< #line 1182
<       digest_size = (int )tmp___3;
< #line 1183
---
> #line 1178
>   di = peer_req->ldv_50726.digest;
> #line 1180
>   tmp___4 = __builtin_expect((peer_req->flags & 8UL) == 0UL, 1L);
> #line 1180
>   if (tmp___4 != 0L) {
> #line 1184
>     if ((unsigned long )(mdev->tconn)->csums_tfm != (unsigned long )((struct crypto_hash *)0)) {
> #line 1185
>       tmp___1 = crypto_hash_digestsize((mdev->tconn)->csums_tfm);
> #line 1185
>       digest_size = (int )tmp___1;
> #line 1186
17697c18245
< #line 1183
---
> #line 1186
17699,17700c18247,18248
<                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared",
<                 1183);
---
>                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared",
>                 1186);
17704c18252
< #line 1184
---
> #line 1187
17709,17716d18256
< #line 1186
<     if ((unsigned long )digest != (unsigned long )((void *)0)) {
< #line 1187
<       drbd_csum_ee(mdev, mdev->csums_tfm, e, digest);
< #line 1188
<       tmp___4 = memcmp((void const   *)digest, (void const   *)di->digest, (size_t )digest_size);
< #line 1188
<       eq = tmp___4 == 0;
17717a18258,18265
>     if ((unsigned long )digest != (unsigned long )((void *)0)) {
> #line 1190
>       drbd_csum_ee(mdev, (mdev->tconn)->csums_tfm, peer_req, digest);
> #line 1191
>       tmp___2 = memcmp((void const   *)digest, (void const   *)di->digest, (size_t )digest_size);
> #line 1191
>       eq = tmp___2 == 0;
> #line 1192
17722,17726d18269
< #line 1192
<     if (eq != 0) {
< #line 1193
<       __drbd_set_in_sync(mdev, e->sector, (int )e->size, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared",
<                          1193U);
17728c18271
<       mdev->rs_same_csum = mdev->rs_same_csum + (unsigned long )(e->size >> 12);
---
>     if (eq != 0) {
17730,17731c18273,18274
<       ok = drbd_send_ack(mdev, P_RS_IS_IN_SYNC, e);
<     } else {
---
>       __drbd_set_in_sync(mdev, peer_req->i.sector, (int )peer_req->i.size, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared",
>                          1196U);
17733c18276
<       inc_rs_pending(mdev);
---
>       mdev->rs_same_csum = mdev->rs_same_csum + (unsigned long )(peer_req->i.size >> 12);
17735,17737c18278,18279
<       e->ldv_49189.block_id = 0xffffffffffffffffULL;
< #line 1200
<       e->flags = e->flags & 0xffffffffffffffefUL;
---
>       err = drbd_send_ack(mdev, P_RS_IS_IN_SYNC, peer_req);
>     } else {
17739c18281
<       kfree((void const   *)di);
---
>       inc_rs_pending(mdev);
17741c18283,18289
<       ok = drbd_send_block(mdev, P_RS_DATA_REPLY, e);
---
>       peer_req->ldv_50726.block_id = 0xffffffffffffffffULL;
> #line 1203
>       peer_req->flags = peer_req->flags & 0xffffffffffffffefUL;
> #line 1204
>       kfree((void const   *)di);
> #line 1205
>       err = drbd_send_block(mdev, P_RS_DATA_REPLY, peer_req);
17744,17750c18292,18298
< #line 1205
<     ok = drbd_send_ack(mdev, P_NEG_RS_DREPLY, e);
< #line 1206
<     tmp___5 = ___ratelimit(& drbd_ratelimit_state, "w_e_end_csum_rs_req");
< #line 1206
<     if (tmp___5 != 0) {
< #line 1207
---
> #line 1208
>     err = drbd_send_ack(mdev, P_NEG_RS_DREPLY, peer_req);
> #line 1209
>     tmp___3 = ___ratelimit(& drbd_ratelimit_state, "w_e_end_csum_rs_req");
> #line 1209
>     if (tmp___3 != 0) {
> #line 1210
17756,17771d18303
< #line 1210
<   atomic_dec(& mdev->unacked_cnt);
< #line 1210
<   tmp___8 = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 1210
<   if (tmp___8 < 0) {
< #line 1210
<     tmp___7 = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 1210
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: unacked_cnt = %d < 0 !\n",
<             "w_e_end_csum_rs_req", 1210, tmp___7);
<   } else {
< 
<   }
< #line 1211
<   move_to_net_ee_or_free(mdev, e);
17773,17775c18305
<   tmp___9 = __builtin_expect(ok == 0, 0L);
< #line 1213
<   if (tmp___9 != 0L) {
---
>   _dec_unacked(mdev, "w_e_end_csum_rs_req", 1213);
17776a18307,18312
>   move_to_net_ee_or_free(mdev, peer_req);
> #line 1216
>   tmp___5 = __builtin_expect(err != 0, 0L);
> #line 1216
>   if (tmp___5 != 0L) {
> #line 1217
17781,17782c18317,18318
< #line 1215
<   return (ok);
---
> #line 1218
>   return (err);
17785,17786c18321,18322
< #line 1219 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< int w_e_end_ov_req(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) 
---
> #line 1221 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> int w_e_end_ov_req(struct drbd_work *w , int cancel ) 
17788c18324
<   struct drbd_epoch_entry *e ;
---
>   struct drbd_peer_request *peer_req ;
17789a18326
>   struct drbd_conf *mdev ;
17794c18331
<   int ok ;
---
>   int err ;
17798,17801d18334
<   int tmp___2 ;
<   int tmp___3 ;
<   int tmp___4 ;
<   int tmp___5 ;
17804c18337
< #line 1221
---
> #line 1223
17806,17809d18338
< #line 1221
<   e = (struct drbd_epoch_entry *)__mptr;
< #line 1222
<   sector = e->sector;
17811c18340,18344
<   size = e->size;
---
>   peer_req = (struct drbd_peer_request *)__mptr;
> #line 1224
>   mdev = w->ldv_49807.mdev;
> #line 1225
>   sector = peer_req->i.sector;
17813,17814c18346,18349
<   ok = 1;
< #line 1228
---
>   size = peer_req->i.size;
> #line 1229
>   err = 0;
> #line 1231
17816c18351
< #line 1228
---
> #line 1231
17818c18353
< #line 1229
---
> #line 1232
17823,17825c18358,18360
< #line 1231
<   tmp___0 = crypto_hash_digestsize(mdev->verify_tfm);
< #line 1231
---
> #line 1234
>   tmp___0 = crypto_hash_digestsize((mdev->tconn)->verify_tfm);
> #line 1234
17827c18362
< #line 1232
---
> #line 1235
17829c18364
< #line 1233
---
> #line 1236
17831,17833c18366,18368
< #line 1234
<     ok = 0;
< #line 1235
---
> #line 1237
>     err = 1;
> #line 1238
17838,17840c18373,18375
< #line 1238
<   tmp___1 = __builtin_expect((e->flags & 8UL) == 0UL, 1L);
< #line 1238
---
> #line 1241
>   tmp___1 = __builtin_expect((peer_req->flags & 8UL) == 0UL, 1L);
> #line 1241
17842,17843c18377,18378
< #line 1239
<     drbd_csum_ee(mdev, mdev->verify_tfm, e, digest);
---
> #line 1242
>     drbd_csum_ee(mdev, (mdev->tconn)->verify_tfm, peer_req, digest);
17845c18380
< #line 1241
---
> #line 1244
17848,17853d18382
< #line 1248
<   drbd_free_some_ee(mdev, e, 0);
< #line 1249
<   e = 0;
< #line 1250
<   inc_rs_pending(mdev);
17855c18384,18388
<   ok = drbd_send_drequest_csum(mdev, sector, (int )size, digest, digest_size, P_OV_REPLY);
---
>   __drbd_free_peer_req(mdev, peer_req, 0);
> #line 1252
>   peer_req = 0;
> #line 1253
>   inc_rs_pending(mdev);
17857c18390
<   if (ok == 0) {
---
>   err = drbd_send_drequest_csum(mdev, sector, (int )size, digest, digest_size, P_OV_REPLY);
17859,17871c18392,18394
<     atomic_dec(& mdev->rs_pending_cnt);
< #line 1255
<     tmp___3 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
< #line 1255
<     if (tmp___3 < 0) {
< #line 1255
<       tmp___2 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
< #line 1255
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: rs_pending_cnt = %d < 0 !\n",
<               "w_e_end_ov_req", 1255, tmp___2);
<     } else {
< 
<     }
---
>   if (err != 0) {
> #line 1256
>     _dec_rs_pending(mdev, "w_e_end_ov_req", 1256);
17875c18398
< #line 1256
---
> #line 1257
17878,17879d18400
< #line 1259
<   if ((unsigned long )e != (unsigned long )((struct drbd_epoch_entry *)0)) {
17881,17892c18402
<     drbd_free_some_ee(mdev, e, 0);
<   } else {
< 
<   }
< #line 1261
<   atomic_dec(& mdev->unacked_cnt);
< #line 1261
<   tmp___5 = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 1261
<   if (tmp___5 < 0) {
< #line 1261
<     tmp___4 = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
---
>   if ((unsigned long )peer_req != (unsigned long )((struct drbd_peer_request *)0)) {
17894,17895c18404
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: unacked_cnt = %d < 0 !\n",
<             "w_e_end_ov_req", 1261, tmp___4);
---
>     __drbd_free_peer_req(mdev, peer_req, 0);
17900c18409,18411
<   return (ok);
---
>   _dec_unacked(mdev, "w_e_end_ov_req", 1262);
> #line 1263
>   return (err);
17903,17904c18414,18415
< #line 1265 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void drbd_ov_oos_found(struct drbd_conf *mdev , sector_t sector , int size ) 
---
> #line 1266 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> void drbd_ov_out_of_sync_found(struct drbd_conf *mdev , sector_t sector , int size ) 
17909,17910d18419
< #line 1267
<   if (mdev->ov_last_oos_start + mdev->ov_last_oos_size == sector) {
17911a18421,18422
>   if (mdev->ov_last_oos_start + mdev->ov_last_oos_size == sector) {
> #line 1269
17914,17915d18424
< #line 1270
<     mdev->ov_last_oos_start = sector;
17916a18426,18427
>     mdev->ov_last_oos_start = sector;
> #line 1272
17919,17921d18429
< #line 1273
<   __drbd_set_out_of_sync(mdev, sector, size, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared",
<                          1273U);
17922a18431,18433
>   __drbd_set_out_of_sync(mdev, sector, size, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared",
>                          1274U);
> #line 1275
17926,17927c18437,18438
< #line 1276 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< int w_e_end_ov_reply(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) 
---
> #line 1277 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> int w_e_end_ov_reply(struct drbd_work *w , int cancel ) 
17929c18440
<   struct drbd_epoch_entry *e ;
---
>   struct drbd_peer_request *peer_req ;
17930a18442
>   struct drbd_conf *mdev ;
17936c18448
<   int ok ;
---
>   int err ;
17939c18451
<   int tmp ;
---
>   long tmp ;
17941c18453
<   long tmp___1 ;
---
>   unsigned int tmp___1 ;
17943,17947c18455,18456
<   unsigned int tmp___3 ;
<   int tmp___4 ;
<   long tmp___5 ;
<   int tmp___6 ;
<   int tmp___7 ;
---
>   long tmp___3 ;
>   bool tmp___4 ;
17950c18459
< #line 1278
---
> #line 1279
17952,17957c18461,18466
< #line 1278
<   e = (struct drbd_epoch_entry *)__mptr;
< #line 1281
<   sector = e->sector;
< #line 1282
<   size = e->size;
---
> #line 1279
>   peer_req = (struct drbd_peer_request *)__mptr;
> #line 1280
>   mdev = w->ldv_49807.mdev;
> #line 1283
>   sector = peer_req->i.sector;
17958a18468,18469
>   size = peer_req->i.size;
> #line 1286
17960,17963d18470
< #line 1285
<   stop_sector_reached = 0;
< #line 1287
<   tmp___1 = __builtin_expect(cancel != 0, 0L);
17965,17973c18472
<   if (tmp___1 != 0L) {
< #line 1288
<     drbd_free_some_ee(mdev, e, 0);
< #line 1289
<     atomic_dec(& mdev->unacked_cnt);
< #line 1289
<     tmp___0 = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 1289
<     if (tmp___0 < 0) {
---
>   stop_sector_reached = 0;
17975c18474
<       tmp = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
---
>   tmp = __builtin_expect(cancel != 0, 0L);
17977,17981c18476
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: unacked_cnt = %d < 0 !\n",
<               "w_e_end_ov_reply", 1289, tmp);
<     } else {
< 
<     }
---
>   if (tmp != 0L) {
17983c18478,18482
<     return (1);
---
>     __drbd_free_peer_req(mdev, peer_req, 0);
> #line 1291
>     _dec_unacked(mdev, "w_e_end_ov_reply", 1291);
> #line 1292
>     return (0);
17987,17992d18485
< #line 1295
<   tmp___2 = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 1295
<   if (tmp___2 != 0) {
< #line 1296
<     drbd_rs_complete_io(mdev, e->sector);
17993a18487,18492
>   tmp___0 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 1297
>   if (tmp___0 != 0) {
> #line 1298
>     drbd_rs_complete_io(mdev, peer_req->i.sector);
> #line 1299
17998,17999d18496
< #line 1300
<   di = e->ldv_49189.digest;
18001,18007c18498
<   tmp___5 = __builtin_expect((e->flags & 8UL) == 0UL, 1L);
< #line 1302
<   if (tmp___5 != 0L) {
< #line 1303
<     tmp___3 = crypto_hash_digestsize(mdev->verify_tfm);
< #line 1303
<     digest_size = (int )tmp___3;
---
>   di = peer_req->ldv_50726.digest;
18009c18500,18502
<     digest = kmalloc((size_t )digest_size, 16U);
---
>   tmp___3 = __builtin_expect((peer_req->flags & 8UL) == 0UL, 1L);
> #line 1304
>   if (tmp___3 != 0L) {
18011c18504,18506
<     if ((unsigned long )digest != (unsigned long )((void *)0)) {
---
>     tmp___1 = crypto_hash_digestsize((mdev->tconn)->verify_tfm);
> #line 1305
>     digest_size = (int )tmp___1;
18013c18508,18510
<       drbd_csum_ee(mdev, mdev->verify_tfm, e, digest);
---
>     digest = kmalloc((size_t )digest_size, 16U);
> #line 1307
>     if ((unsigned long )digest != (unsigned long )((void *)0)) {
18014a18512,18513
>       drbd_csum_ee(mdev, (mdev->tconn)->verify_tfm, peer_req, digest);
> #line 1310
18016c18515
< #line 1308
---
> #line 1310
18018,18019c18517,18518
<                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared",
<                 1308);
---
>                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared",
>                 1310);
18023,18027c18522,18526
< #line 1309
<       tmp___4 = memcmp((void const   *)digest, (void const   *)di->digest, (size_t )digest_size);
< #line 1309
<       eq = tmp___4 == 0;
< #line 1310
---
> #line 1311
>       tmp___2 = memcmp((void const   *)digest, (void const   *)di->digest, (size_t )digest_size);
> #line 1311
>       eq = tmp___2 == 0;
> #line 1312
18035,18038d18533
< #line 1319
<   drbd_free_some_ee(mdev, e, 0);
< #line 1320
<   if (eq == 0) {
18040,18041c18535,18537
<     drbd_ov_oos_found(mdev, sector, (int )size);
<   } else {
---
>   __drbd_free_peer_req(mdev, peer_req, 0);
> #line 1322
>   if (eq == 0) {
18043,18057c18539
<     ov_oos_print(mdev);
<   }
< #line 1325
<   ok = drbd_send_ack_ex(mdev, P_OV_RESULT, sector, (int )size, eq != 0 ? 4711ULL : 4712ULL);
< #line 1328
<   atomic_dec(& mdev->unacked_cnt);
< #line 1328
<   tmp___7 = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 1328
<   if (tmp___7 < 0) {
< #line 1328
<     tmp___6 = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 1328
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: unacked_cnt = %d < 0 !\n",
<             "w_e_end_ov_reply", 1328, tmp___6);
---
>     drbd_ov_out_of_sync_found(mdev, sector, (int )size);
18059c18541,18542
< 
---
> #line 1325
>     ov_out_of_sync_print(mdev);
18060a18544,18545
> #line 1327
>   err = drbd_send_ack_ex(mdev, P_OV_RESULT, sector, (int )size, eq != 0 ? 4711ULL : 4712ULL);
18061a18547,18548
>   _dec_unacked(mdev, "w_e_end_ov_reply", 1330);
> #line 1332
18063c18550
< #line 1333
---
> #line 1335
18065c18552
< #line 1334
---
> #line 1336
18070,18075c18557,18560
< #line 1336
<   stop_sector_reached = (bool )(mdev->agreed_pro_version > 96 && (sector_t )(size >> 9) + sector >= mdev->ov_stop_sector);
< #line 1339
<   if (mdev->ov_left == 0UL || (int )stop_sector_reached) {
< #line 1340
<     ov_oos_print(mdev);
---
> #line 1338
>   tmp___4 = verify_can_do_stop_sector(mdev);
> #line 1338
>   stop_sector_reached = (bool )((int )tmp___4 && (sector_t )(size >> 9) + sector >= mdev->ov_stop_sector);
18076a18562,18565
>   if (mdev->ov_left == 0UL || (int )stop_sector_reached) {
> #line 1342
>     ov_out_of_sync_print(mdev);
> #line 1343
18081,18082c18570,18571
< #line 1344
<   return (ok);
---
> #line 1346
>   return (err);
18085,18086c18574,18575
< #line 1347 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< int w_prev_work_done(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) 
---
> #line 1349 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> int w_prev_work_done(struct drbd_work *w , int cancel ) 
18092c18581
< #line 1349
---
> #line 1351
18094c18583
< #line 1349
---
> #line 1351
18096c18585
< #line 1350
---
> #line 1353
18098,18099c18587,18588
< #line 1351
<   return (1);
---
> #line 1354
>   return (0);
18102,18103c18591,18592
< #line 1354 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< int w_send_barrier(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) 
---
> #line 1362 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> int drbd_send_barrier(struct drbd_tconn *tconn ) 
18105,18106d18593
<   struct drbd_tl_epoch *b ;
<   struct drbd_work  const  *__mptr ;
18108,18109c18595,18597
<   int ok ;
<   int tmp ;
---
>   struct drbd_socket *sock ;
>   void *tmp ;
>   int tmp___0 ;
18112,18123d18599
< #line 1356
<   __mptr = (struct drbd_work  const  *)w;
< #line 1356
<   b = (struct drbd_tl_epoch *)__mptr;
< #line 1357
<   p = & mdev->data.sbuf.barrier;
< #line 1358
<   ok = 1;
< #line 1365
<   spin_lock_irq(& mdev->req_lock);
< #line 1366
<   if ((unsigned long )w->cb != (unsigned long )(& w_send_barrier) || (int )mdev->state.ldv_39979.conn <= 9) {
18125,18128c18601,18603
<     cancel = 1;
<   } else {
< 
<   }
---
>   sock = & tconn->data;
> #line 1368
>   tmp = conn_prepare_command(tconn, sock);
18130c18605
<   spin_unlock_irq(& mdev->req_lock);
---
>   p = (struct p_barrier *)tmp;
18132c18607
<   if (cancel != 0) {
---
>   if ((unsigned long )p == (unsigned long )((struct p_barrier *)0)) {
18134c18609
<     return (1);
---
>     return (-5);
18137a18613,18614
> #line 1371
>   p->barrier = (u32 )tconn->send.current_epoch_nr;
18139,18141c18616
<   tmp = drbd_get_data_sock(mdev);
< #line 1372
<   if (tmp == 0) {
---
>   p->pad = 0U;
18142a18618,18638
>   tconn->send.current_epoch_writes = 0U;
> #line 1375
>   tmp___0 = conn_send_command(tconn, sock, P_BARRIER, 8U, 0, 0U);
> #line 1375
>   return (tmp___0);
> }
> }
> #line 1378 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> int w_send_write_hint(struct drbd_work *w , int cancel ) 
> { 
>   struct drbd_conf *mdev ;
>   struct drbd_socket *sock ;
>   void *tmp ;
>   int tmp___0 ;
> 
>   {
> #line 1380
>   mdev = w->ldv_49807.mdev;
> #line 1383
>   if (cancel != 0) {
> #line 1384
18147,18155c18643,18657
< #line 1374
<   p->barrier = b->br_number;
< #line 1378
<   ok = _drbd_send_cmd(mdev, mdev->data.socket, P_BARRIER, (struct p_header80 *)p,
<                       16UL, 0U);
< #line 1380
<   drbd_put_data_sock(mdev);
< #line 1382
<   return (ok);
---
> #line 1385
>   sock = & (mdev->tconn)->data;
> #line 1386
>   tmp = drbd_prepare_command(mdev, sock);
> #line 1386
>   if ((unsigned long )tmp == (unsigned long )((void *)0)) {
> #line 1387
>     return (-5);
>   } else {
> 
>   }
> #line 1388
>   tmp___0 = drbd_send_command(mdev, sock, P_UNPLUG_REMOTE, 0U, 0, 0U);
> #line 1388
>   return (tmp___0);
18158,18159c18660,18661
< #line 1385 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< int w_send_write_hint(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) 
---
> #line 1391 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> static void re_init_if_first_write(struct drbd_tconn *tconn , unsigned int epoch ) 
18161c18663
<   int tmp ;
---
> 
18164,18167c18666,18673
< #line 1387
<   if (cancel != 0) {
< #line 1388
<     return (1);
---
> #line 1393
>   if (! tconn->send.seen_any_write_yet) {
> #line 1394
>     tconn->send.seen_any_write_yet = 1;
> #line 1395
>     tconn->send.current_epoch_nr = (int )epoch;
> #line 1396
>     tconn->send.current_epoch_writes = 0U;
18171,18174c18677,18678
< #line 1389
<   tmp = drbd_send_short_cmd(mdev, P_UNPLUG_REMOTE);
< #line 1389
<   return (tmp);
---
> #line 1398
>   return;
18177,18178c18681,18682
< #line 1392 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< int w_send_oos(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) 
---
> #line 1400 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> static void maybe_send_barrier(struct drbd_tconn *tconn , unsigned int epoch ) 
18180,18183c18684
<   struct drbd_request *req ;
<   struct drbd_work  const  *__mptr ;
<   int ok ;
<   long tmp ;
---
> 
18186,18197c18687,18690
< #line 1394
<   __mptr = (struct drbd_work  const  *)w;
< #line 1394
<   req = (struct drbd_request *)__mptr;
< #line 1397
<   tmp = __builtin_expect(cancel != 0, 0L);
< #line 1397
<   if (tmp != 0L) {
< #line 1398
<     req_mod(req, send_canceled);
< #line 1399
<     return (1);
---
> #line 1403
>   if (! tconn->send.seen_any_write_yet) {
> #line 1404
>     return;
18201,18204d18693
< #line 1402
<   ok = drbd_send_oos(mdev, req);
< #line 1403
<   req_mod(req, oos_handed_to_network);
18206c18695,18709
<   return (ok);
---
>   if ((unsigned int )tconn->send.current_epoch_nr != epoch) {
> #line 1406
>     if (tconn->send.current_epoch_writes != 0U) {
> #line 1407
>       drbd_send_barrier(tconn);
>     } else {
> 
>     }
> #line 1408
>     tconn->send.current_epoch_nr = (int )epoch;
>   } else {
> 
>   }
> #line 1410
>   return;
18209,18210c18712,18713
< #line 1414 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< int w_send_dblock(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) 
---
> #line 1412 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> int w_send_out_of_sync(struct drbd_work *w , int cancel ) 
18214c18717,18719
<   int ok ;
---
>   struct drbd_conf *mdev ;
>   struct drbd_tconn *tconn ;
>   int err ;
18218c18723
< #line 1416
---
> #line 1414
18220c18725
< #line 1416
---
> #line 1414
18221a18727,18730
> #line 1415
>   mdev = w->ldv_49807.mdev;
> #line 1416
>   tconn = mdev->tconn;
18227c18736
<     req_mod(req, send_canceled);
---
>     req_mod(req, SEND_CANCELED);
18229c18738
<     return (1);
---
>     return (0);
18233,18238c18742,18749
< #line 1424
<   ok = drbd_send_dblock(mdev, req);
< #line 1425
<   req_mod(req, ok != 0 ? handed_over_to_network : send_failed);
< #line 1427
<   return (ok);
---
> #line 1428
>   maybe_send_barrier(tconn, req->epoch);
> #line 1430
>   err = drbd_send_out_of_sync(mdev, req);
> #line 1431
>   req_mod(req, OOS_HANDED_TO_NETWORK);
> #line 1433
>   return (err);
18241,18242c18752,18753
< #line 1436 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< int w_send_read_req(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) 
---
> #line 1442 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> int w_send_dblock(struct drbd_work *w , int cancel ) 
18246c18757,18759
<   int ok ;
---
>   struct drbd_conf *mdev ;
>   struct drbd_tconn *tconn ;
>   int err ;
18248,18249d18760
<   union drbd_state val ;
<   union drbd_state mask ;
18252c18763
< #line 1438
---
> #line 1444
18254c18765
< #line 1438
---
> #line 1444
18256c18767,18771
< #line 1441
---
> #line 1445
>   mdev = w->ldv_49807.mdev;
> #line 1446
>   tconn = mdev->tconn;
> #line 1449
18258c18773
< #line 1441
---
> #line 1449
18260,18263c18775,18778
< #line 1442
<     req_mod(req, send_canceled);
< #line 1443
<     return (1);
---
> #line 1450
>     req_mod(req, SEND_CANCELED);
> #line 1451
>     return (0);
18267,18283c18782,18804
< #line 1446
<   ok = drbd_send_drequest(mdev, 8, req->sector, (int )req->size, (u64 )req);
< #line 1449
<   if (ok == 0) {
< #line 1452
<     if ((int )mdev->state.ldv_39979.conn > 9) {
< #line 1453
<       val.i = 0U;
< #line 1453
<       val.ldv_39979.conn = 5U;
< #line 1453
<       mask.i = 0U;
< #line 1453
<       mask.ldv_39979.conn = 31U;
< #line 1453
<       drbd_force_state(mdev, mask, val);
<     } else {
---
> #line 1454
>   re_init_if_first_write(tconn, req->epoch);
> #line 1455
>   maybe_send_barrier(tconn, req->epoch);
> #line 1456
>   tconn->send.current_epoch_writes = tconn->send.current_epoch_writes + 1U;
> #line 1458
>   err = drbd_send_dblock(mdev, req);
> #line 1459
>   req_mod(req, err != 0 ? SEND_FAILED : HANDED_OVER_TO_NETWORK);
> #line 1461
>   return (err);
> }
> }
> #line 1470 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> int w_send_read_req(struct drbd_work *w , int cancel ) 
> { 
>   struct drbd_request *req ;
>   struct drbd_work  const  *__mptr ;
>   struct drbd_conf *mdev ;
>   struct drbd_tconn *tconn ;
>   int err ;
>   long tmp ;
18285c18806,18822
<     }
---
>   {
> #line 1472
>   __mptr = (struct drbd_work  const  *)w;
> #line 1472
>   req = (struct drbd_request *)__mptr;
> #line 1473
>   mdev = w->ldv_49807.mdev;
> #line 1474
>   tconn = mdev->tconn;
> #line 1477
>   tmp = __builtin_expect(cancel != 0, 0L);
> #line 1477
>   if (tmp != 0L) {
> #line 1478
>     req_mod(req, SEND_CANCELED);
> #line 1479
>     return (0);
18289,18292c18826,18833
< #line 1455
<   req_mod(req, ok != 0 ? handed_over_to_network : send_failed);
< #line 1457
<   return (ok);
---
> #line 1484
>   maybe_send_barrier(tconn, req->epoch);
> #line 1486
>   err = drbd_send_drequest(mdev, 8, req->i.sector, (int )req->i.size, (u64 )req);
> #line 1489
>   req_mod(req, err != 0 ? SEND_FAILED : HANDED_OVER_TO_NETWORK);
> #line 1491
>   return (err);
18295,18296c18836,18837
< #line 1460 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< int w_restart_disk_io(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) 
---
> #line 1494 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> int w_restart_disk_io(struct drbd_work *w , int cancel ) 
18299a18841
>   struct drbd_conf *mdev ;
18302c18844
< #line 1462
---
> #line 1496
18304c18846
< #line 1462
---
> #line 1496
18306,18309c18848,18853
< #line 1464
<   if ((int )(req->master_bio)->bi_rw & 1 && (req->rq_state & 4096UL) != 0UL) {
< #line 1465
<     drbd_al_begin_io(mdev, req->sector);
---
> #line 1497
>   mdev = w->ldv_49807.mdev;
> #line 1499
>   if ((int )(req->master_bio)->bi_rw & 1 && ((unsigned long )req->rq_state & 4096UL) != 0UL) {
> #line 1500
>     drbd_al_begin_io(mdev, & req->i);
18313c18857
< #line 1471
---
> #line 1502
18315c18859
< #line 1472
---
> #line 1503
18317c18861
< #line 1473
---
> #line 1504
18319,18320c18863,18864
< #line 1475
<   return (1);
---
> #line 1506
>   return (0);
18323c18867
< #line 1478 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
---
> #line 1509 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
18327c18871,18877
<   int _b ;
---
>   int resync_after ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
>   bool _bool ;
>   int tmp___1 ;
18330c18880
< #line 1480
---
> #line 1511
18332,18335c18882,18885
<   ldv_51927: ;
< #line 1483
<   if (odev->sync_conf.after == -1) {
< #line 1484
---
>   ldv_52465: ;
> #line 1515
>   if ((unsigned long )odev->ldev == (unsigned long )((struct drbd_backing_dev *)0)) {
> #line 1516
18340,18349c18890,18909
< #line 1485
<   odev = minor_to_mdev((unsigned int )odev->sync_conf.after);
< #line 1486
<   _b = (unsigned long )odev == (unsigned long )((struct drbd_conf *)0);
< #line 1486
<   if (_b != 0) {
< #line 1486
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "_drbd_may_sync_now", (char *)"!odev", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared",
<             1486);
---
> #line 1517
>   rcu_read_lock___1();
> #line 1518
>   _________p1 = *((struct disk_conf * volatile  *)(& (odev->ldev)->disk_conf));
> #line 1518
>   tmp = debug_lockdep_rcu_enabled();
> #line 1518
>   if (tmp != 0 && ! __warned) {
> #line 1518
>     tmp___0 = rcu_read_lock_held();
> #line 1518
>     if (tmp___0 == 0 && 1) {
> #line 1518
>       __warned = 1;
> #line 1518
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared",
>                              1518, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
18353,18355c18913,18919
< #line 1486
<   if (_b != 0) {
< #line 1486
---
> #line 1518
>   resync_after = _________p1->resync_after;
> #line 1519
>   rcu_read_unlock___1();
> #line 1520
>   if (resync_after == -1) {
> #line 1521
18360,18362c18924,18953
< #line 1487
<   if (((((int )odev->state.ldv_39979.conn > 15 && (int )odev->state.ldv_39979.conn <= 21) || (unsigned int )*((unsigned char *)odev + 2278UL) != 0U) || (unsigned int )*((unsigned char *)odev + 2278UL) != 0U) || (unsigned int )*((unsigned char *)odev + 2278UL) != 0U) {
< #line 1491
---
> #line 1522
>   odev = minor_to_mdev((unsigned int )resync_after);
> #line 1523
>   _bool = (unsigned long )odev != (unsigned long )((struct drbd_conf *)0);
> #line 1523
>   if (! _bool) {
> #line 1523
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"odev", "_drbd_may_sync_now");
>   } else {
> 
>   }
> #line 1523
>   if (_bool) {
> #line 1523
>     tmp___1 = 0;
>   } else {
> #line 1523
>     tmp___1 = 1;
>   }
> #line 1523
>   if (tmp___1) {
> #line 1524
>     return (1);
>   } else {
> 
>   }
> #line 1525
>   if (((((int )odev->state.ldv_49522.conn > 15 && (int )odev->state.ldv_49522.conn <= 21) || (unsigned int )*((unsigned char *)odev + 750UL) != 0U) || (unsigned int )*((unsigned char *)odev + 750UL) != 0U) || (unsigned int )*((unsigned char *)odev + 750UL) != 0U) {
> #line 1529
18367,18368c18958,18959
< #line 1492
<   goto ldv_51927;
---
> #line 1530
>   goto ldv_52465;
18371c18962
< #line 1501 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
---
> #line 1539 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
18376a18968
>   void *tmp ;
18378,18379c18970,18972
<   enum drbd_state_rv tmp ;
<   int tmp___0 ;
---
>   enum drbd_state_rv tmp___0 ;
>   int tmp___1 ;
>   void *tmp___2 ;
18382c18975
< #line 1504
---
> #line 1542
18384c18977,18979
< #line 1506
---
> #line 1544
>   rcu_read_lock___1();
> #line 1545
18386,18401c18981,18991
< #line 1506
<   goto ldv_51938;
<   ldv_51937: 
< #line 1507
<   odev = minor_to_mdev((unsigned int )i);
< #line 1508
<   if ((unsigned long )odev == (unsigned long )((struct drbd_conf *)0)) {
< #line 1509
<     goto ldv_51934;
<   } else {
< 
<   }
< #line 1510
<   if ((unsigned int )*((unsigned short *)odev + 1138UL) == 0U && (unsigned int )*((unsigned char *)odev + 2277UL) == 0U) {
< #line 1511
<     goto ldv_51934;
---
> #line 1545
>   tmp = idr_get_next(& minors, & i);
> #line 1545
>   odev = (struct drbd_conf *)tmp;
> #line 1545
>   goto ldv_52476;
>   ldv_52475: ;
> #line 1546
>   if ((unsigned int )*((unsigned short *)odev + 374UL) == 0U && (unsigned int )*((unsigned char *)odev + 749UL) == 0U) {
> #line 1547
>     goto ldv_52472;
18405,18416c18995,19006
< #line 1512
<   tmp___0 = _drbd_may_sync_now(odev);
< #line 1512
<   if (tmp___0 == 0) {
< #line 1513
<     __ns.i = odev->state.i;
< #line 1513
<     __ns.ldv_39979.aftr_isp = 1U;
< #line 1513
<     tmp = __drbd_set_state(odev, __ns, CS_HARD, 0);
< #line 1513
<     rv = ((int )tmp != 2) | rv;
---
> #line 1548
>   tmp___1 = _drbd_may_sync_now(odev);
> #line 1548
>   if (tmp___1 == 0) {
> #line 1549
>     __ns = drbd_read_state(odev);
> #line 1549
>     __ns.ldv_40024.aftr_isp = 1U;
> #line 1549
>     tmp___0 = __drbd_set_state(odev, __ns, CS_HARD, 0);
> #line 1549
>     rv = ((int )tmp___0 != 2) | rv;
18420,18421c19010,19011
<   ldv_51934: 
< #line 1506
---
>   ldv_52472: 
> #line 1545
18423,18427c19013,19021
<   ldv_51938: ;
< #line 1506
<   if ((unsigned int )i < minor_count) {
< #line 1507
<     goto ldv_51937;
---
> #line 1545
>   tmp___2 = idr_get_next(& minors, & i);
> #line 1545
>   odev = (struct drbd_conf *)tmp___2;
>   ldv_52476: ;
> #line 1545
>   if ((unsigned long )odev != (unsigned long )((struct drbd_conf *)0)) {
> #line 1546
>     goto ldv_52475;
18431,18432c19025,19027
< 
< #line 1517
---
> #line 1552
>   rcu_read_unlock___1();
> #line 1554
18436c19031
< #line 1526 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
---
> #line 1563 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
18441a19037
>   void *tmp ;
18443,18444c19039,19041
<   enum drbd_state_rv tmp ;
<   int tmp___0 ;
---
>   enum drbd_state_rv tmp___0 ;
>   int tmp___1 ;
>   void *tmp___2 ;
18447c19044
< #line 1529
---
> #line 1566
18449c19046,19048
< #line 1531
---
> #line 1568
>   rcu_read_lock___1();
> #line 1569
18451,18466c19050,19060
< #line 1531
<   goto ldv_51950;
<   ldv_51949: 
< #line 1532
<   odev = minor_to_mdev((unsigned int )i);
< #line 1533
<   if ((unsigned long )odev == (unsigned long )((struct drbd_conf *)0)) {
< #line 1534
<     goto ldv_51946;
<   } else {
< 
<   }
< #line 1535
<   if ((unsigned int )*((unsigned short *)odev + 1138UL) == 0U && (unsigned int )*((unsigned char *)odev + 2277UL) == 0U) {
< #line 1536
<     goto ldv_51946;
---
> #line 1569
>   tmp = idr_get_next(& minors, & i);
> #line 1569
>   odev = (struct drbd_conf *)tmp;
> #line 1569
>   goto ldv_52488;
>   ldv_52487: ;
> #line 1570
>   if ((unsigned int )*((unsigned short *)odev + 374UL) == 0U && (unsigned int )*((unsigned char *)odev + 749UL) == 0U) {
> #line 1571
>     goto ldv_52484;
18470,18483c19064,19077
< #line 1537
<   if ((unsigned int )*((unsigned char *)odev + 2278UL) != 0U) {
< #line 1538
<     tmp___0 = _drbd_may_sync_now(odev);
< #line 1538
<     if (tmp___0 != 0) {
< #line 1539
<       __ns.i = odev->state.i;
< #line 1539
<       __ns.ldv_39979.aftr_isp = 0U;
< #line 1539
<       tmp = __drbd_set_state(odev, __ns, CS_HARD, 0);
< #line 1539
<       rv = ((int )tmp != 2) | rv;
---
> #line 1572
>   if ((unsigned int )*((unsigned char *)odev + 750UL) != 0U) {
> #line 1573
>     tmp___1 = _drbd_may_sync_now(odev);
> #line 1573
>     if (tmp___1 != 0) {
> #line 1574
>       __ns = drbd_read_state(odev);
> #line 1574
>       __ns.ldv_40024.aftr_isp = 0U;
> #line 1574
>       tmp___0 = __drbd_set_state(odev, __ns, CS_HARD, 0);
> #line 1574
>       rv = ((int )tmp___0 != 2) | rv;
18490,18491c19084,19085
<   ldv_51946: 
< #line 1531
---
>   ldv_52484: 
> #line 1569
18493,18497c19087,19095
<   ldv_51950: ;
< #line 1531
<   if ((unsigned int )i < minor_count) {
< #line 1532
<     goto ldv_51949;
---
> #line 1569
>   tmp___2 = idr_get_next(& minors, & i);
> #line 1569
>   odev = (struct drbd_conf *)tmp___2;
>   ldv_52488: ;
> #line 1569
>   if ((unsigned long )odev != (unsigned long )((struct drbd_conf *)0)) {
> #line 1570
>     goto ldv_52487;
18501,18502c19099,19101
< 
< #line 1544
---
> #line 1579
>   rcu_read_unlock___1();
> #line 1580
18506c19105
< #line 1547 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
---
> #line 1583 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
18512c19111
< #line 1549
---
> #line 1585
18514c19113
< #line 1550
---
> #line 1586
18516c19115
< #line 1551
---
> #line 1587
18518c19117
< #line 1552
---
> #line 1588
18522c19121
< #line 1554 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
---
> #line 1590 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
18528c19127
< #line 1556
---
> #line 1592
18530c19129
< #line 1557
---
> #line 1593
18532c19131
< #line 1558
---
> #line 1594
18534c19133
< #line 1559
---
> #line 1595
18538,18539c19137,19138
< #line 1561 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< static int sync_after_error(struct drbd_conf *mdev , int o_minor ) 
---
> #line 1598 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> enum drbd_ret_code drbd_resync_after_valid(struct drbd_conf *mdev , int o_minor ) 
18541a19141
>   int resync_after ;
18542a19143,19146
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp___0 ;
>   int tmp___1 ;
18545c19149
< #line 1565
---
> #line 1603
18547,18548c19151,19152
< #line 1566
<     return (101);
---
> #line 1604
>     return (NO_ERROR);
18552c19156
< #line 1567
---
> #line 1605
18554,18555c19158,19159
< #line 1568
<     return (132);
---
> #line 1606
>     return (ERR_RESYNC_AFTER);
18557c19161
< #line 1567
---
> #line 1605
18559c19163
< #line 1567
---
> #line 1605
18561,18562c19165,19166
< #line 1568
<       return (132);
---
> #line 1606
>       return (ERR_RESYNC_AFTER);
18567c19171
< #line 1571
---
> #line 1609
18569,18570c19173,19174
<   ldv_51963: ;
< #line 1573
---
>   ldv_52505: ;
> #line 1611
18572,18573c19176,19177
< #line 1574
<     return (133);
---
> #line 1612
>     return (ERR_RESYNC_AFTER_CYCLE);
18577,18580c19181,19200
< #line 1577
<   if (odev->sync_conf.after == -1) {
< #line 1578
<     return (101);
---
> #line 1614
>   rcu_read_lock___1();
> #line 1615
>   _________p1 = *((struct disk_conf * volatile  *)(& (odev->ldev)->disk_conf));
> #line 1615
>   tmp___0 = debug_lockdep_rcu_enabled();
> #line 1615
>   if (tmp___0 != 0 && ! __warned) {
> #line 1615
>     tmp___1 = rcu_read_lock_held();
> #line 1615
>     if (tmp___1 == 0 && 1) {
> #line 1615
>       __warned = 1;
> #line 1615
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared",
>                              1615, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
18584,18587c19204,19218
< #line 1581
<   odev = minor_to_mdev((unsigned int )odev->sync_conf.after);
< #line 1582
<   goto ldv_51963;
---
> #line 1615
>   resync_after = _________p1->resync_after;
> #line 1616
>   rcu_read_unlock___1();
> #line 1618
>   if (resync_after == -1) {
> #line 1619
>     return (NO_ERROR);
>   } else {
> 
>   }
> #line 1622
>   odev = minor_to_mdev((unsigned int )resync_after);
> #line 1623
>   goto ldv_52505;
18590,18591c19221,19222
< #line 1585 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< int drbd_alter_sa(struct drbd_conf *mdev , int na ) 
---
> #line 1627 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> void drbd_resync_after_changed(struct drbd_conf *mdev ) 
18594d19224
<   int retcode ;
18598,18620c19228,19238
< #line 1590
<   _raw_write_lock_irq(& global_state_lock);
< #line 1591
<   retcode = sync_after_error(mdev, na);
< #line 1592
<   if (retcode == 101) {
< #line 1593
<     mdev->sync_conf.after = na;
<     ldv_51970: 
< #line 1595
<     changes = _drbd_pause_after(mdev);
< #line 1596
<     tmp = _drbd_resume_next(mdev);
< #line 1596
<     changes = tmp | changes;
< #line 1597
<     if (changes != 0) {
< #line 1598
<       goto ldv_51970;
<     } else {
< 
<     }
< 
---
>   ldv_52510: 
> #line 1632
>   changes = _drbd_pause_after(mdev);
> #line 1633
>   tmp = _drbd_resume_next(mdev);
> #line 1633
>   changes = tmp | changes;
> #line 1634
>   if (changes != 0) {
> #line 1635
>     goto ldv_52510;
18624,18627c19242,19244
< #line 1599
<   _raw_write_unlock_irq(& global_state_lock);
< #line 1600
<   return (retcode);
---
> 
> #line 1639
>   return;
18630c19247
< #line 1603 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
---
> #line 1637 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
18633c19250,19254
< 
---
>   struct fifo_buffer *plan ;
>   struct fifo_buffer *_________p1 ;
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
18636c19257
< #line 1605
---
> #line 1641
18638c19259
< #line 1606
---
> #line 1642
18640c19261
< #line 1607
---
> #line 1643
18642,18650c19263,19308
< #line 1608
<   mdev->rs_planed = 0;
< #line 1609
<   spin_lock(& mdev->peer_seq_lock);
< #line 1610
<   fifo_set(& mdev->rs_plan_s, 0);
< #line 1611
<   spin_unlock(& mdev->peer_seq_lock);
< #line 1612
---
> #line 1649
>   rcu_read_lock___1();
> #line 1650
>   _________p1 = *((struct fifo_buffer * volatile  *)(& mdev->rs_plan_s));
> #line 1650
>   tmp = debug_lockdep_rcu_enabled();
> #line 1650
>   if (tmp != 0 && ! __warned) {
> #line 1650
>     tmp___0 = rcu_read_lock_held();
> #line 1650
>     if (tmp___0 == 0 && 1) {
> #line 1650
>       __warned = 1;
> #line 1650
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared",
>                              1650, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1650
>   plan = _________p1;
> #line 1651
>   plan->total = 0;
> #line 1652
>   fifo_set(plan, 0);
> #line 1653
>   rcu_read_unlock___1();
> #line 1654
>   return;
> }
> }
> #line 1656 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> void start_resync_timer_fn(unsigned long data ) 
> { 
>   struct drbd_conf *mdev ;
> 
>   {
> #line 1658
>   mdev = (struct drbd_conf *)data;
> #line 1660
>   drbd_queue_work(& (mdev->tconn)->sender_work, & mdev->start_resync_work);
> #line 1661
18654c19312,19359
< #line 1622 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
---
> #line 1663 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> int w_start_resync(struct drbd_work *w , int cancel ) 
> { 
>   struct drbd_conf *mdev ;
>   int tmp ;
>   int tmp___0 ;
> 
>   {
> #line 1665
>   mdev = w->ldv_49807.mdev;
> #line 1667
>   tmp = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
> #line 1667
>   if (tmp != 0) {
> #line 1668
>     dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "w_start_resync later...\n");
> #line 1669
>     mdev->start_resync_timer.expires = (unsigned long )jiffies + 25UL;
> #line 1670
>     add_timer(& mdev->start_resync_timer);
> #line 1671
>     return (0);
>   } else {
> #line 1667
>     tmp___0 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
> #line 1667
>     if (tmp___0 != 0) {
> #line 1668
>       dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "w_start_resync later...\n");
> #line 1669
>       mdev->start_resync_timer.expires = (unsigned long )jiffies + 25UL;
> #line 1670
>       add_timer(& mdev->start_resync_timer);
> #line 1671
>       return (0);
>     } else {
> 
>     }
>   }
> #line 1674
>   drbd_start_resync(mdev, C_SYNC_SOURCE);
> #line 1675
>   clear_bit(19, (unsigned long volatile   *)(& mdev->flags));
> #line 1676
>   return (0);
> }
> }
> #line 1687 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
18665c19370,19373
<   enum drbd_state_rv tmp___1 ;
---
>   struct task_struct *tmp___1 ;
>   int tmp___2 ;
>   int tmp___3 ;
>   enum drbd_state_rv tmp___4 ;
18667c19375
<   unsigned long tmp___2 ;
---
>   unsigned long tmp___5 ;
18670c19378,19384
<   char const   *tmp___3 ;
---
>   char const   *tmp___6 ;
>   struct net_conf *nc ;
>   int timeo ;
>   struct net_conf *_________p1 ;
>   bool __warned ;
>   int tmp___7 ;
>   int tmp___8 ;
18673,18675c19387,19389
< #line 1627
<   if ((int )mdev->state.ldv_39979.conn > 15 && (int )mdev->state.ldv_39979.conn <= 21) {
< #line 1628
---
> #line 1692
>   if ((int )mdev->state.ldv_49522.conn > 15 && (int )mdev->state.ldv_49522.conn <= 21) {
> #line 1693
18677c19391
< #line 1629
---
> #line 1694
18682,18722c19396,19409
< #line 1632
<   if ((unsigned int )side == 17U) {
< #line 1636
<     r = drbd_khelper(mdev, (char *)"before-resync-target");
< #line 1637
<     r = (r >> 8) & 255;
< #line 1638
<     if (r > 0) {
< #line 1639
<       _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "before-resync-target handler returned %d, dropping connection.\n",
<                 r);
< #line 1641
<       val.i = 0U;
< #line 1641
<       val.ldv_39979.conn = 1U;
< #line 1641
<       mask.i = 0U;
< #line 1641
<       mask.ldv_39979.conn = 31U;
< #line 1641
<       drbd_force_state(mdev, mask, val);
< #line 1642
<       return;
<     } else {
< 
<     }
<   } else {
< #line 1645
<     r = drbd_khelper(mdev, (char *)"before-resync-source");
< #line 1646
<     r = (r >> 8) & 255;
< #line 1647
<     if (r > 0) {
< #line 1648
<       if (r == 3) {
< #line 1649
<         _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "before-resync-source handler returned %d, ignoring. Old userland tools?",
<                   r);
<       } else {
< #line 1652
<         _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "before-resync-source handler returned %d, dropping connection.\n",
---
> #line 1697
>   tmp = constant_test_bit(20U, (unsigned long const volatile   *)(& mdev->flags));
> #line 1697
>   if (tmp == 0) {
> #line 1698
>     if ((unsigned int )side == 17U) {
> #line 1702
>       r = drbd_khelper(mdev, (char *)"before-resync-target");
> #line 1703
>       r = (r >> 8) & 255;
> #line 1704
>       if (r > 0) {
> #line 1705
>         _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "before-resync-target handler returned %d, dropping connection.\n",
18724,18734c19411,19421
< #line 1654
<         val___0.i = 0U;
< #line 1654
<         val___0.ldv_39979.conn = 1U;
< #line 1654
<         mask___0.i = 0U;
< #line 1654
<         mask___0.ldv_39979.conn = 31U;
< #line 1654
<         drbd_force_state(mdev, mask___0, val___0);
< #line 1655
---
> #line 1707
>         val.i = 0U;
> #line 1707
>         val.ldv_40024.conn = 1U;
> #line 1707
>         mask.i = 0U;
> #line 1707
>         mask.ldv_40024.conn = 31U;
> #line 1707
>         conn_request_state(mdev->tconn, mask, val, CS_HARD);
> #line 1708
18735a19423,19424
>       } else {
> 
18737a19427,19455
> #line 1711
>       r = drbd_khelper(mdev, (char *)"before-resync-source");
> #line 1712
>       r = (r >> 8) & 255;
> #line 1713
>       if (r > 0) {
> #line 1714
>         if (r == 3) {
> #line 1715
>           _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "before-resync-source handler returned %d, ignoring. Old userland tools?",
>                     r);
>         } else {
> #line 1718
>           _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "before-resync-source handler returned %d, dropping connection.\n",
>                     r);
> #line 1720
>           val___0.i = 0U;
> #line 1720
>           val___0.ldv_40024.conn = 1U;
> #line 1720
>           mask___0.i = 0U;
> #line 1720
>           mask___0.ldv_40024.conn = 31U;
> #line 1720
>           conn_request_state(mdev->tconn, mask___0, val___0, CS_HARD);
> #line 1721
>           return;
>         }
>       } else {
18738a19457
>       }
18739a19459,19460
>   } else {
> 
18741,18743c19462,19487
< #line 1660
<   drbd_state_lock(mdev);
< #line 1661
---
> #line 1727
>   tmp___1 = get_current();
> #line 1727
>   if ((unsigned long )tmp___1 == (unsigned long )(mdev->tconn)->worker.task) {
> #line 1730
>     tmp___0 = ldv_mutex_trylock_64(mdev->state_mutex);
> #line 1730
>     if (tmp___0 == 0) {
> #line 1731
>       set_bit(20U, (unsigned long volatile   *)(& mdev->flags));
> #line 1732
>       mdev->start_resync_timer.expires = (unsigned long )jiffies + 50UL;
> #line 1733
>       add_timer(& mdev->start_resync_timer);
> #line 1734
>       return;
>     } else {
> #line 1737
>       ldv_mutex_lock_65(mdev->state_mutex);
>     }
>   } else {
> 
>   }
> #line 1739
>   clear_bit(20, (unsigned long volatile   *)(& mdev->flags));
> #line 1741
18745,18749c19489,19493
< #line 1662
<   tmp = _get_ldev_if_state(mdev, D_NEGOTIATING);
< #line 1662
<   if (tmp == 0) {
< #line 1663
---
> #line 1742
>   tmp___2 = _get_ldev_if_state(mdev, D_NEGOTIATING);
> #line 1742
>   if (tmp___2 == 0) {
> #line 1743
18751,18753c19495,19497
< #line 1664
<     drbd_state_unlock(mdev);
< #line 1665
---
> #line 1744
>     ldv_mutex_unlock_66(mdev->state_mutex);
> #line 1745
18758,18766c19502,19510
< #line 1668
<   ns.i = mdev->state.i;
< #line 1670
<   tmp___0 = _drbd_may_sync_now(mdev);
< #line 1670
<   ns.ldv_39979.aftr_isp = tmp___0 == 0;
< #line 1672
<   ns.ldv_39979.conn = (unsigned char )side;
< #line 1674
---
> #line 1748
>   ns = drbd_read_state(mdev);
> #line 1750
>   tmp___3 = _drbd_may_sync_now(mdev);
> #line 1750
>   ns.ldv_40024.aftr_isp = tmp___3 == 0;
> #line 1752
>   ns.ldv_40024.conn = (unsigned char )side;
> #line 1754
18768,18769c19512,19513
< #line 1675
<     ns.ldv_39979.disk = 4U;
---
> #line 1755
>     ns.ldv_40024.disk = 4U;
18771,18772c19515,19516
< #line 1677
<     ns.ldv_39979.pdsk = 4U;
---
> #line 1757
>     ns.ldv_40024.pdsk = 4U;
18774,18782c19518,19526
< #line 1679
<   tmp___1 = __drbd_set_state(mdev, ns, CS_VERBOSE, 0);
< #line 1679
<   r = (int )tmp___1;
< #line 1680
<   ns = mdev->state;
< #line 1682
<   if ((int )ns.ldv_39979.conn <= 9) {
< #line 1683
---
> #line 1759
>   tmp___4 = __drbd_set_state(mdev, ns, CS_VERBOSE, 0);
> #line 1759
>   r = (int )tmp___4;
> #line 1760
>   ns = drbd_read_state(mdev);
> #line 1762
>   if ((int )ns.ldv_40024.conn <= 9) {
> #line 1763
18787c19531
< #line 1685
---
> #line 1765
18789,18793c19533,19537
< #line 1686
<     tmp___2 = drbd_bm_total_weight(mdev);
< #line 1686
<     tw = tmp___2;
< #line 1687
---
> #line 1766
>     tmp___5 = drbd_bm_total_weight(mdev);
> #line 1766
>     tw = tmp___5;
> #line 1767
18795c19539
< #line 1690
---
> #line 1770
18797c19541
< #line 1691
---
> #line 1771
18799c19543
< #line 1692
---
> #line 1772
18801c19545
< #line 1693
---
> #line 1773
18803c19547
< #line 1694
---
> #line 1774
18805c19549
< #line 1695
---
> #line 1775
18807c19551
< #line 1696
---
> #line 1776
18809c19553
< #line 1697
---
> #line 1777
18811,18814c19555,19558
< #line 1697
<     goto ldv_51993;
<     ldv_51992: 
< #line 1698
---
> #line 1777
>     goto ldv_52546;
>     ldv_52545: 
> #line 1778
18816c19560
< #line 1699
---
> #line 1779
18818c19562
< #line 1697
---
> #line 1777
18820,18821c19564,19565
<     ldv_51993: ;
< #line 1697
---
>     ldv_52546: ;
> #line 1777
18823,18824c19567,19568
< #line 1698
<       goto ldv_51992;
---
> #line 1778
>       goto ldv_52545;
18828c19572
< #line 1701
---
> #line 1781
18833c19577
< #line 1703
---
> #line 1783
18835c19579
< #line 1705
---
> #line 1785
18837,18839c19581,19585
< #line 1706
<     tmp___3 = drbd_conn_str((enum drbd_conns )ns.ldv_39979.conn);
< #line 1706
---
> #line 1788
>     mdev->rs_last_bcast = (unsigned long )jiffies - 250UL;
> #line 1790
>     tmp___6 = drbd_conn_str((enum drbd_conns )ns.ldv_40024.conn);
> #line 1790
18841,18842c19587,19588
<               tmp___3, mdev->rs_total << 2, mdev->rs_total);
< #line 1710
---
>               tmp___6, mdev->rs_total << 2, mdev->rs_total);
> #line 1794
18844c19590
< #line 1711
---
> #line 1795
18849,18851c19595,19597
< #line 1720
<     if ((unsigned int )side == 16U && mdev->agreed_pro_version <= 95) {
< #line 1721
---
> #line 1804
>     if ((unsigned int )side == 16U && (mdev->tconn)->agreed_pro_version <= 95) {
> #line 1805
18856,18858c19602,19604
< #line 1723
<     if (mdev->agreed_pro_version <= 94 && mdev->rs_total == 0UL) {
< #line 1734
---
> #line 1807
>     if ((mdev->tconn)->agreed_pro_version <= 94 && mdev->rs_total == 0UL) {
> #line 1818
18860,18861c19606,19636
< #line 1735
<         schedule_timeout_interruptible((long )((mdev->net_conf)->ping_int * 250 + ((mdev->net_conf)->ping_timeo * 250) / 9));
---
> #line 1822
>         rcu_read_lock___1();
> #line 1823
>         _________p1 = *((struct net_conf * volatile  *)(& (mdev->tconn)->net_conf));
> #line 1823
>         tmp___7 = debug_lockdep_rcu_enabled();
> #line 1823
>         if (tmp___7 != 0 && ! __warned) {
> #line 1823
>           tmp___8 = rcu_read_lock_held();
> #line 1823
>           if (tmp___8 == 0 && 1) {
> #line 1823
>             __warned = 1;
> #line 1823
>             lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared",
>                                    1823, "suspicious rcu_dereference_check() usage");
>           } else {
> 
>           }
>         } else {
> 
>         }
> #line 1823
>         nc = _________p1;
> #line 1824
>         timeo = (int )(nc->ping_int * 250U + (nc->ping_timeo * 250U) / 9U);
> #line 1825
>         rcu_read_unlock___1();
> #line 1826
>         schedule_timeout_interruptible((long )timeo);
18865c19640
< #line 1738
---
> #line 1828
18870c19645
< #line 1741
---
> #line 1831
18872c19647
< #line 1746
---
> #line 1836
18874c19649
< #line 1747
---
> #line 1837
18879c19654
< #line 1749
---
> #line 1839
18884c19659
< #line 1751
---
> #line 1841
18886,18888c19661,19663
< #line 1752
<   drbd_state_unlock(mdev);
< #line 1753
---
> #line 1842
>   ldv_mutex_unlock_67(mdev->state_mutex);
> #line 1843
18892,18893c19667,19668
< #line 1755 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< int drbd_worker(struct drbd_thread *thi ) 
---
> #line 1849 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> bool need_to_send_barrier(struct drbd_tconn *connection ) 
18895,18901c19670,19754
<   struct drbd_conf *mdev ;
<   struct drbd_work *w ;
<   struct list_head work_list ;
<   int intr ;
<   int i ;
<   unsigned int tmp ;
<   struct task_struct *tmp___0 ;
---
>   int tmp ;
> 
>   {
> #line 1851
>   if (! connection->send.seen_any_write_yet) {
> #line 1852
>     return (0);
>   } else {
> 
>   }
> #line 1856
>   if (connection->send.current_epoch_writes == 0U) {
> #line 1857
>     return (0);
>   } else {
> 
>   }
> #line 1866
>   tmp = atomic_read((atomic_t const   *)(& connection->current_tle_nr));
> #line 1866
>   if (tmp != connection->send.current_epoch_nr + 1) {
> #line 1868
>     return (0);
>   } else {
> 
>   }
> #line 1870
>   return (1);
> }
> }
> #line 1873 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> bool dequeue_work_batch(struct drbd_work_queue *queue , struct list_head *work_list ) 
> { 
>   int tmp ;
> 
>   {
> #line 1875
>   spin_lock_irq(& queue->q_lock);
> #line 1876
>   list_splice_init(& queue->q, work_list);
> #line 1877
>   spin_unlock_irq(& queue->q_lock);
> #line 1878
>   tmp = list_empty((struct list_head  const  *)work_list);
> #line 1878
>   return (tmp == 0);
> }
> }
> #line 1881 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> bool dequeue_work_item(struct drbd_work_queue *queue , struct list_head *work_list ) 
> { 
>   int tmp ;
>   int tmp___0 ;
> 
>   {
> #line 1883
>   spin_lock_irq(& queue->q_lock);
> #line 1884
>   tmp = list_empty((struct list_head  const  *)(& queue->q));
> #line 1884
>   if (tmp == 0) {
> #line 1885
>     list_move(queue->q.next, work_list);
>   } else {
> 
>   }
> #line 1886
>   spin_unlock_irq(& queue->q_lock);
> #line 1887
>   tmp___0 = list_empty((struct list_head  const  *)work_list);
> #line 1887
>   return (tmp___0 == 0);
> }
> }
> #line 1890 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> void wait_for_work(struct drbd_tconn *connection , struct list_head *work_list ) 
> { 
>   wait_queue_t wait ;
>   struct task_struct *tmp ;
>   struct net_conf *nc ;
>   int uncork ;
>   int cork ;
>   int tmp___0 ;
>   struct net_conf *_________p1 ;
>   bool __warned ;
18903,18911c19756,19760
<   struct task_struct *tmp___2 ;
<   int _b ;
<   enum drbd_thread_state tmp___3 ;
<   enum drbd_thread_state tmp___4 ;
<   int _b___0 ;
<   int tmp___5 ;
<   struct list_head  const  *__mptr ;
<   union drbd_state val ;
<   union drbd_state mask ;
---
>   int tmp___2 ;
>   int send_barrier ;
>   int tmp___3 ;
>   int tmp___4 ;
>   struct task_struct *tmp___5 ;
18913c19762,19764
<   enum drbd_thread_state tmp___7 ;
---
>   bool tmp___7 ;
>   struct net_conf *_________p1___0 ;
>   bool __warned___0 ;
18916,18918d19766
<   struct list_head  const  *__mptr___0 ;
<   int tmp___10 ;
<   int tmp___11 ;
18921,18951c19769,19808
< #line 1757
<   mdev = thi->mdev;
< #line 1758
<   w = 0;
< #line 1759
<   work_list.next = & work_list;
< #line 1759
<   work_list.prev = & work_list;
< #line 1760
<   intr = 0;
< #line 1762
<   tmp = mdev_to_minor(mdev);
< #line 1762
<   tmp___0 = get_current();
< #line 1762
<   sprintf((char *)(& tmp___0->comm), "drbd%d_worker", tmp);
< #line 1764
<   goto ldv_52006;
<   ldv_52016: 
< #line 1765
<   drbd_thread_current_set_cpu(mdev);
< #line 1767
<   tmp___1 = down_trylock(& mdev->data.work.s);
< #line 1767
<   if (tmp___1 != 0) {
< #line 1768
<     ldv_mutex_lock_79(& mdev->data.mutex);
< #line 1769
<     if ((unsigned long )mdev->data.socket != (unsigned long )((struct socket *)0) && (unsigned int )*((unsigned char *)mdev->net_conf + 540UL) == 0U) {
< #line 1770
<       drbd_tcp_uncork(mdev->data.socket);
---
> #line 1892
>   tmp = get_current();
> #line 1892
>   wait.flags = 0U;
> #line 1892
>   wait.private = (void *)tmp;
> #line 1892
>   wait.func = & autoremove_wake_function;
> #line 1892
>   wait.task_list.next = & wait.task_list;
> #line 1892
>   wait.task_list.prev = & wait.task_list;
> #line 1896
>   dequeue_work_item(& connection->sender_work, work_list);
> #line 1897
>   tmp___0 = list_empty((struct list_head  const  *)work_list);
> #line 1897
>   if (tmp___0 == 0) {
> #line 1898
>     return;
>   } else {
> 
>   }
> #line 1906
>   rcu_read_lock___1();
> #line 1907
>   _________p1 = *((struct net_conf * volatile  *)(& connection->net_conf));
> #line 1907
>   tmp___1 = debug_lockdep_rcu_enabled();
> #line 1907
>   if (tmp___1 != 0 && ! __warned) {
> #line 1907
>     tmp___2 = rcu_read_lock_held();
> #line 1907
>     if (tmp___2 == 0 && 1) {
> #line 1907
>       __warned = 1;
> #line 1907
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared",
>                              1907, "suspicious rcu_dereference_check() usage");
18955,18964c19812,19828
< #line 1771
<     ldv_mutex_unlock_80(& mdev->data.mutex);
< #line 1773
<     intr = down_interruptible(& mdev->data.work.s);
< #line 1775
<     ldv_mutex_lock_81(& mdev->data.mutex);
< #line 1776
<     if ((unsigned long )mdev->data.socket != (unsigned long )((struct socket *)0) && (unsigned int )*((unsigned char *)mdev->net_conf + 540UL) == 0U) {
< #line 1777
<       drbd_tcp_cork(mdev->data.socket);
---
>   } else {
> 
>   }
> #line 1907
>   nc = _________p1;
> #line 1908
>   uncork = (unsigned long )nc != (unsigned long )((struct net_conf *)0) ? (int )nc->tcp_cork : 0;
> #line 1909
>   rcu_read_unlock___1();
> #line 1910
>   if (uncork != 0) {
> #line 1911
>     ldv_mutex_lock_68(& connection->data.mutex);
> #line 1912
>     if ((unsigned long )connection->data.socket != (unsigned long )((struct socket *)0)) {
> #line 1913
>       drbd_tcp_uncork(connection->data.socket);
18968,18969c19832,19833
< #line 1778
<     ldv_mutex_unlock_82(& mdev->data.mutex);
---
> #line 1914
>     ldv_mutex_unlock_69(& connection->data.mutex);
18973,18980c19837,19873
< #line 1781
<   if (intr != 0) {
< #line 1782
<     if (intr != -4) {
< #line 1782
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( intr == -EINTR ) in %s:%d\n",
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared",
<               1782);
---
>   ldv_52577: 
> #line 1919
>   prepare_to_wait(& connection->sender_work.q_wait, & wait, 1);
> #line 1920
>   spin_lock_irq(& connection->req_lock);
> #line 1921
>   spin_lock(& connection->sender_work.q_lock);
> #line 1924
>   tmp___3 = list_empty((struct list_head  const  *)(& connection->sender_work.q));
> #line 1924
>   if (tmp___3 == 0) {
> #line 1925
>     list_move(connection->sender_work.q.next, work_list);
>   } else {
> 
>   }
> #line 1926
>   spin_unlock(& connection->sender_work.q_lock);
> #line 1927
>   tmp___4 = list_empty((struct list_head  const  *)work_list);
> #line 1927
>   if (tmp___4 == 0) {
> #line 1928
>     spin_unlock_irq(& connection->req_lock);
> #line 1929
>     goto ldv_52576;
>   } else {
> #line 1927
>     tmp___5 = get_current();
> #line 1927
>     tmp___6 = signal_pending(tmp___5);
> #line 1927
>     if (tmp___6 != 0) {
> #line 1928
>       spin_unlock_irq(& connection->req_lock);
> #line 1929
>       goto ldv_52576;
18984,18997c19877,19916
< #line 1783
<     tmp___2 = get_current();
< #line 1783
<     flush_signals(tmp___2);
< #line 1784
<     tmp___3 = get_t_state(thi);
< #line 1784
<     _b = (unsigned int )tmp___3 == 1U;
< #line 1784
<     if (_b != 0) {
< #line 1784
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<               "drbd_worker", (char *)"get_t_state(thi) == Running", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared",
<               1784);
---
>   }
> #line 1931
>   tmp___7 = need_to_send_barrier(connection);
> #line 1931
>   send_barrier = (int )tmp___7;
> #line 1932
>   spin_unlock_irq(& connection->req_lock);
> #line 1933
>   if (send_barrier != 0) {
> #line 1934
>     drbd_send_barrier(connection);
> #line 1935
>     connection->send.current_epoch_nr = connection->send.current_epoch_nr + 1;
>   } else {
> 
>   }
> #line 1937
>   schedule();
> #line 1941
>   goto ldv_52577;
>   ldv_52576: 
> #line 1942
>   finish_wait(& connection->sender_work.q_wait, & wait);
> #line 1945
>   rcu_read_lock___1();
> #line 1946
>   _________p1___0 = *((struct net_conf * volatile  *)(& connection->net_conf));
> #line 1946
>   tmp___8 = debug_lockdep_rcu_enabled();
> #line 1946
>   if (tmp___8 != 0 && ! __warned___0) {
> #line 1946
>     tmp___9 = rcu_read_lock_held();
> #line 1946
>     if (tmp___9 == 0 && 1) {
> #line 1946
>       __warned___0 = 1;
> #line 1946
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared",
>                              1946, "suspicious rcu_dereference_check() usage");
19001,19004c19920,19941
< #line 1784
<     if (_b != 0) {
< #line 1785
<       goto ldv_52006;
---
>   } else {
> 
>   }
> #line 1946
>   nc = _________p1___0;
> #line 1947
>   cork = (unsigned long )nc != (unsigned long )((struct net_conf *)0) ? (int )nc->tcp_cork : 0;
> #line 1948
>   rcu_read_unlock___1();
> #line 1949
>   ldv_mutex_lock_70(& connection->data.mutex);
> #line 1950
>   if ((unsigned long )connection->data.socket != (unsigned long )((struct socket *)0)) {
> #line 1951
>     if (cork != 0) {
> #line 1952
>       drbd_tcp_cork(connection->data.socket);
>     } else
> #line 1953
>     if (uncork == 0) {
> #line 1954
>       drbd_tcp_uncork(connection->data.socket);
19008,19009d19944
< #line 1786
<     goto ldv_52007;
19013,19018c19948,19999
< #line 1789
<   tmp___4 = get_t_state(thi);
< #line 1789
<   if ((unsigned int )tmp___4 != 1U) {
< #line 1790
<     goto ldv_52007;
---
> #line 1956
>   ldv_mutex_unlock_71(& connection->data.mutex);
> #line 1957
>   return;
> }
> }
> #line 1959 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> int drbd_worker(struct drbd_thread *thi ) 
> { 
>   struct drbd_tconn *tconn ;
>   struct drbd_work *w ;
>   struct drbd_conf *mdev ;
>   struct list_head work_list ;
>   int vnr ;
>   int tmp ;
>   struct task_struct *tmp___0 ;
>   enum drbd_thread_state tmp___1 ;
>   struct task_struct *tmp___2 ;
>   int tmp___3 ;
>   enum drbd_thread_state tmp___4 ;
>   struct list_head  const  *__mptr ;
>   int tmp___5 ;
>   union drbd_state val ;
>   union drbd_state mask ;
>   int tmp___6 ;
>   enum drbd_thread_state tmp___7 ;
>   struct list_head  const  *__mptr___0 ;
>   int tmp___8 ;
>   int tmp___9 ;
>   void *tmp___10 ;
>   void *tmp___11 ;
> 
>   {
> #line 1961
>   tconn = thi->tconn;
> #line 1962
>   w = 0;
> #line 1964
>   work_list.next = & work_list;
> #line 1964
>   work_list.prev = & work_list;
> #line 1967
>   goto ldv_52589;
>   ldv_52600: 
> #line 1968
>   drbd_thread_current_set_cpu(thi);
> #line 1972
>   tmp = list_empty((struct list_head  const  *)(& work_list));
> #line 1972
>   if (tmp != 0) {
> #line 1973
>     wait_for_work(tconn, & work_list);
19022,19035c20003,20025
< #line 1795
<   w = 0;
< #line 1796
<   spin_lock_irq(& mdev->data.work.q_lock);
< #line 1797
<   tmp___5 = list_empty((struct list_head  const  *)(& mdev->data.work.q));
< #line 1797
<   _b___0 = tmp___5 != 0;
< #line 1797
<   if (_b___0 != 0) {
< #line 1797
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_worker", (char *)"list_empty(&mdev->data.work.q)", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared",
<             1797);
---
> #line 1975
>   tmp___2 = get_current();
> #line 1975
>   tmp___3 = signal_pending(tmp___2);
> #line 1975
>   if (tmp___3 != 0) {
> #line 1976
>     tmp___0 = get_current();
> #line 1976
>     flush_signals(tmp___0);
> #line 1977
>     tmp___1 = get_t_state(thi);
> #line 1977
>     if ((unsigned int )tmp___1 == 1U) {
> #line 1978
>       printk("\fd-con %s: Worker got an unexpected signal\n", tconn->name);
> #line 1979
>       goto ldv_52589;
>     } else {
> 
>     }
> #line 1981
>     goto ldv_52590;
19039,19044c20029,20034
< #line 1797
<   if (_b___0 != 0) {
< #line 1809
<     spin_unlock_irq(& mdev->data.work.q_lock);
< #line 1810
<     goto ldv_52006;
---
> #line 1984
>   tmp___4 = get_t_state(thi);
> #line 1984
>   if ((unsigned int )tmp___4 != 1U) {
> #line 1985
>     goto ldv_52590;
19048,19050c20038,20043
< #line 1812
<   __mptr = (struct list_head  const  *)mdev->data.work.q.next;
< #line 1812
---
> #line 1987
>   goto ldv_52593;
>   ldv_52598: 
> #line 1988
>   __mptr = (struct list_head  const  *)work_list.next;
> #line 1988
19052c20045
< #line 1813
---
> #line 1989
19054,19074c20047,20052
< #line 1814
<   spin_unlock_irq(& mdev->data.work.q_lock);
< #line 1816
<   tmp___6 = (*(w->cb))(mdev, w, (int )mdev->state.ldv_39979.conn <= 9);
< #line 1816
<   if (tmp___6 == 0) {
< #line 1818
<     if ((int )mdev->state.ldv_39979.conn > 9) {
< #line 1820
<       val.i = 0U;
< #line 1820
<       val.ldv_39979.conn = 5U;
< #line 1820
<       mask.i = 0U;
< #line 1820
<       mask.ldv_39979.conn = 31U;
< #line 1820
<       drbd_force_state(mdev, mask, val);
<     } else {
< 
<     }
---
> #line 1990
>   tmp___5 = (*(w->cb))(w, (unsigned int )tconn->cstate <= 8U);
> #line 1990
>   if (tmp___5 == 0) {
> #line 1991
>     goto ldv_52593;
19078,19084c20056,20067
<   ldv_52006: 
< #line 1764
<   tmp___7 = get_t_state(thi);
< #line 1764
<   if ((unsigned int )tmp___7 == 1U) {
< #line 1765
<     goto ldv_52016;
---
> #line 1992
>   if ((unsigned int )tconn->cstate > 8U) {
> #line 1993
>     val.i = 0U;
> #line 1993
>     val.ldv_40024.conn = 5U;
> #line 1993
>     mask.i = 0U;
> #line 1993
>     mask.ldv_40024.conn = 31U;
> #line 1993
>     conn_request_state(tconn, mask, val, CS_HARD);
19088,19096c20071,20077
<   ldv_52007: 
< #line 1823
<   tmp___8 = drbd_test_flag(mdev, DEVICE_DYING);
< #line 1823
<   if (tmp___8 == 0) {
< #line 1823
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( drbd_test_flag(mdev, DEVICE_DYING) ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared",
<             1823);
---
>   ldv_52593: 
> #line 1987
>   tmp___6 = list_empty((struct list_head  const  *)(& work_list));
> #line 1987
>   if (tmp___6 == 0) {
> #line 1988
>     goto ldv_52598;
19100,19107c20081,20088
< #line 1824
<   tmp___9 = drbd_test_flag(mdev, CONFIG_PENDING);
< #line 1824
<   if (tmp___9 == 0) {
< #line 1824
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( drbd_test_flag(mdev, CONFIG_PENDING) ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared",
<             1824);
---
> 
>   ldv_52589: 
> #line 1967
>   tmp___7 = get_t_state(thi);
> #line 1967
>   if ((unsigned int )tmp___7 == 1U) {
> #line 1968
>     goto ldv_52600;
19111,19125c20092,20097
< #line 1826
<   spin_lock_irq(& mdev->data.work.q_lock);
< #line 1827
<   i = 0;
< #line 1828
<   goto ldv_52023;
<   ldv_52022: 
< #line 1829
<   list_splice_init(& mdev->data.work.q, & work_list);
< #line 1830
<   spin_unlock_irq(& mdev->data.work.q_lock);
< #line 1832
<   goto ldv_52020;
<   ldv_52019: 
< #line 1833
---
>   ldv_52590: ;
>   ldv_52606: ;
> #line 1998
>   goto ldv_52604;
>   ldv_52603: 
> #line 1999
19127c20099
< #line 1833
---
> #line 1999
19129c20101
< #line 1834
---
> #line 2000
19131,19141c20103,20111
< #line 1835
<   (*(w->cb))(mdev, w, 1);
< #line 1836
<   i = i + 1;
<   ldv_52020: 
< #line 1832
<   tmp___10 = list_empty((struct list_head  const  *)(& work_list));
< #line 1832
<   if (tmp___10 == 0) {
< #line 1833
<     goto ldv_52019;
---
> #line 2001
>   (*(w->cb))(w, 1);
>   ldv_52604: 
> #line 1998
>   tmp___8 = list_empty((struct list_head  const  *)(& work_list));
> #line 1998
>   if (tmp___8 == 0) {
> #line 1999
>     goto ldv_52603;
19145,19153c20115,20122
< #line 1839
<   spin_lock_irq(& mdev->data.work.q_lock);
<   ldv_52023: 
< #line 1828
<   tmp___11 = list_empty((struct list_head  const  *)(& mdev->data.work.q));
< #line 1828
<   if (tmp___11 == 0) {
< #line 1829
<     goto ldv_52022;
---
> #line 2003
>   dequeue_work_batch(& tconn->sender_work, & work_list);
> #line 2004
>   tmp___9 = list_empty((struct list_head  const  *)(& work_list));
> #line 2004
>   if (tmp___9 == 0) {
> #line 2005
>     goto ldv_52606;
19157,19163c20126,20139
< #line 1841
<   sema_init(& mdev->data.work.s, 0);
< #line 1847
<   spin_unlock_irq(& mdev->data.work.q_lock);
< #line 1849
<   if ((unsigned int )*((unsigned char *)mdev + 2277UL) != 0U || (unsigned int )*((unsigned short *)mdev + 1138UL) != 0U) {
< #line 1849
---
> #line 2006
>   rcu_read_lock___1();
> #line 2007
>   vnr = 0;
> #line 2007
>   tmp___10 = idr_get_next(& tconn->volumes, & vnr);
> #line 2007
>   mdev = (struct drbd_conf *)tmp___10;
> #line 2007
>   goto ldv_52609;
>   ldv_52608: ;
> #line 2008
>   if ((unsigned int )*((unsigned char *)mdev + 749UL) != 0U || (unsigned int )*((unsigned short *)mdev + 374UL) != 0U) {
> #line 2008
19165,19166c20141,20142
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared",
<             1849);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared",
>             2008);
19170,19172c20146,20150
< #line 1852
<   drbd_thread_stop(& mdev->receiver);
< #line 1853
---
> #line 2009
>   kref_get(& mdev->kref);
> #line 2010
>   rcu_read_unlock___1();
> #line 2011
19174,19182c20152,20172
< #line 1855
<   _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "worker terminated\n");
< #line 1857
<   drbd_clear_flag(mdev, DEVICE_DYING);
< #line 1858
<   drbd_clear_flag(mdev, CONFIG_PENDING);
< #line 1859
<   __wake_up(& mdev->state_wait, 3U, 1, 0);
< #line 1861
---
> #line 2012
>   kref_put(& mdev->kref, & drbd_minor_destroy);
> #line 2013
>   rcu_read_lock___1();
> #line 2007
>   vnr = vnr + 1;
> #line 2007
>   tmp___11 = idr_get_next(& tconn->volumes, & vnr);
> #line 2007
>   mdev = (struct drbd_conf *)tmp___11;
>   ldv_52609: ;
> #line 2007
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 2008
>     goto ldv_52608;
>   } else {
> 
>   }
> #line 2015
>   rcu_read_unlock___1();
> #line 2017
19186,19187c20176,20177
< #line 1864 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void ldv_mutex_lock_63(struct mutex *ldv_func_arg1 ) 
---
> #line 2020 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> void ldv_mutex_lock_51(struct mutex *ldv_func_arg1 ) 
19192c20182
< #line 1869
---
> #line 2025
19194c20184
< #line 1871
---
> #line 2027
19196c20186
< #line 1872
---
> #line 2028
19200,19201c20190,20191
< #line 1874 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void ldv_mutex_unlock_64(struct mutex *ldv_func_arg1 ) 
---
> #line 2030 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> void ldv_mutex_unlock_52(struct mutex *ldv_func_arg1 ) 
19206c20196
< #line 1879
---
> #line 2035
19208c20198
< #line 1881
---
> #line 2037
19210c20200
< #line 1882
---
> #line 2038
19214,19215c20204,20205
< #line 1884 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void ldv_mutex_lock_65(struct mutex *ldv_func_arg1 ) 
---
> #line 2040 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> void ldv_mutex_lock_53(struct mutex *ldv_func_arg1 ) 
19220c20210
< #line 1889
---
> #line 2045
19222c20212
< #line 1891
---
> #line 2047
19224c20214
< #line 1892
---
> #line 2048
19228,19229c20218,20219
< #line 1894 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< int ldv_mutex_trylock_66(struct mutex *ldv_func_arg1 ) 
---
> #line 2050 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> int ldv_mutex_trylock_54(struct mutex *ldv_func_arg1 ) 
19236c20226
< #line 1899
---
> #line 2055
19238c20228
< #line 1899
---
> #line 2055
19240c20230
< #line 1901
---
> #line 2057
19242c20232
< #line 1901
---
> #line 2057
19244c20234
< #line 1903
---
> #line 2059
19248,19249c20238,20239
< #line 1906 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void ldv_mutex_unlock_67(struct mutex *ldv_func_arg1 ) 
---
> #line 2062 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> void ldv_mutex_unlock_55(struct mutex *ldv_func_arg1 ) 
19254c20244
< #line 1911
---
> #line 2067
19256c20246
< #line 1913
---
> #line 2069
19258c20248
< #line 1914
---
> #line 2070
19262,19263c20252,20253
< #line 1916 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void ldv_mutex_lock_68(struct mutex *ldv_func_arg1 ) 
---
> #line 2072 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> void ldv_mutex_lock_56(struct mutex *ldv_func_arg1 ) 
19268c20258
< #line 1921
---
> #line 2077
19270c20260
< #line 1923
---
> #line 2079
19272c20262
< #line 1924
---
> #line 2080
19276,19277c20266,20267
< #line 1926 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void ldv_mutex_unlock_69(struct mutex *ldv_func_arg1 ) 
---
> #line 2082 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> void ldv_mutex_unlock_57(struct mutex *ldv_func_arg1 ) 
19282c20272
< #line 1931
---
> #line 2087
19284c20274
< #line 1933
---
> #line 2089
19286c20276
< #line 1934
---
> #line 2090
19290,19291c20280,20281
< #line 1936 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void ldv_mutex_lock_70(struct mutex *ldv_func_arg1 ) 
---
> #line 2092 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> void ldv_mutex_lock_58(struct mutex *ldv_func_arg1 ) 
19296c20286
< #line 1941
---
> #line 2097
19298c20288
< #line 1943
---
> #line 2099
19300c20290
< #line 1944
---
> #line 2100
19304,19305c20294,20295
< #line 1946 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void ldv_mutex_unlock_71(struct mutex *ldv_func_arg1 ) 
---
> #line 2102 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> void ldv_mutex_unlock_59(struct mutex *ldv_func_arg1 ) 
19310c20300
< #line 1951
---
> #line 2107
19312c20302
< #line 1953
---
> #line 2109
19314c20304
< #line 1954
---
> #line 2110
19318,19319c20308,20309
< #line 1956 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void ldv_mutex_lock_72(struct mutex *ldv_func_arg1 ) 
---
> #line 2112 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> void ldv_mutex_lock_60(struct mutex *ldv_func_arg1 ) 
19324c20314
< #line 1961
---
> #line 2117
19326c20316
< #line 1963
---
> #line 2119
19328c20318
< #line 1964
---
> #line 2120
19332,19333c20322,20323
< #line 1966 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void ldv_mutex_unlock_73(struct mutex *ldv_func_arg1 ) 
---
> #line 2122 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> void ldv_mutex_unlock_61(struct mutex *ldv_func_arg1 ) 
19338c20328
< #line 1971
---
> #line 2127
19340c20330
< #line 1973
---
> #line 2129
19342c20332
< #line 1974
---
> #line 2130
19346,19347c20336,20337
< #line 1976 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void ldv_mutex_lock_74(struct mutex *ldv_func_arg1 ) 
---
> #line 2132 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> void ldv_mutex_lock_62(struct mutex *ldv_func_arg1 ) 
19352c20342
< #line 1981
---
> #line 2137
19354c20344
< #line 1983
---
> #line 2139
19356c20346
< #line 1984
---
> #line 2140
19360,19361c20350,20351
< #line 1986 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void ldv_mutex_unlock_75(struct mutex *ldv_func_arg1 ) 
---
> #line 2142 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> void ldv_mutex_unlock_63(struct mutex *ldv_func_arg1 ) 
19366c20356
< #line 1991
---
> #line 2147
19368c20358
< #line 1993
---
> #line 2149
19370c20360
< #line 1994
---
> #line 2150
19374,19375c20364,20385
< #line 1996 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void ldv_mutex_unlock_76(struct mutex *ldv_func_arg1 ) 
---
> #line 2152 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> int ldv_mutex_trylock_64(struct mutex *ldv_func_arg1 ) 
> { 
>   ldv_func_ret_type___12 ldv_func_res ;
>   int tmp ;
>   int tmp___0 ;
> 
>   {
> #line 2157
>   tmp = mutex_trylock(ldv_func_arg1);
> #line 2157
>   ldv_func_res = tmp;
> #line 2159
>   tmp___0 = ldv_mutex_trylock_state_mutex_of_drbd_conf(ldv_func_arg1);
> #line 2159
>   return (tmp___0);
> #line 2161
>   return (ldv_func_res);
> }
> }
> #line 2164 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> void ldv_mutex_lock_65(struct mutex *ldv_func_arg1 ) 
19380,19384c20390,20394
< #line 2001
<   ldv_mutex_unlock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 2003
<   mutex_unlock(ldv_func_arg1);
< #line 2004
---
> #line 2169
>   ldv_mutex_lock_state_mutex_of_drbd_conf(ldv_func_arg1);
> #line 2171
>   mutex_lock(ldv_func_arg1);
> #line 2172
19388,19389c20398,20399
< #line 2006 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void ldv_mutex_lock_77(struct mutex *ldv_func_arg1 ) 
---
> #line 2174 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> void ldv_mutex_unlock_66(struct mutex *ldv_func_arg1 ) 
19394,19398c20404,20408
< #line 2011
<   ldv_mutex_lock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 2013
<   mutex_lock(ldv_func_arg1);
< #line 2014
---
> #line 2179
>   ldv_mutex_unlock_state_mutex_of_drbd_conf(ldv_func_arg1);
> #line 2181
>   mutex_unlock(ldv_func_arg1);
> #line 2182
19402,19403c20412,20413
< #line 2016 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void ldv_mutex_unlock_78(struct mutex *ldv_func_arg1 ) 
---
> #line 2184 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> void ldv_mutex_unlock_67(struct mutex *ldv_func_arg1 ) 
19408,19410c20418,20420
< #line 2021
<   ldv_mutex_unlock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 2023
---
> #line 2189
>   ldv_mutex_unlock_state_mutex_of_drbd_conf(ldv_func_arg1);
> #line 2191
19412c20422
< #line 2024
---
> #line 2192
19416,19417c20426,20427
< #line 2026 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void ldv_mutex_lock_79(struct mutex *ldv_func_arg1 ) 
---
> #line 2194 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> void ldv_mutex_lock_68(struct mutex *ldv_func_arg1 ) 
19422c20432
< #line 2031
---
> #line 2199
19424c20434
< #line 2033
---
> #line 2201
19426c20436
< #line 2034
---
> #line 2202
19430,19431c20440,20441
< #line 2036 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void ldv_mutex_unlock_80(struct mutex *ldv_func_arg1 ) 
---
> #line 2204 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> void ldv_mutex_unlock_69(struct mutex *ldv_func_arg1 ) 
19436c20446
< #line 2041
---
> #line 2209
19438c20448
< #line 2043
---
> #line 2211
19440c20450
< #line 2044
---
> #line 2212
19444,19445c20454,20455
< #line 2046 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void ldv_mutex_lock_81(struct mutex *ldv_func_arg1 ) 
---
> #line 2214 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> void ldv_mutex_lock_70(struct mutex *ldv_func_arg1 ) 
19450c20460
< #line 2051
---
> #line 2219
19452c20462
< #line 2053
---
> #line 2221
19454c20464
< #line 2054
---
> #line 2222
19458,19459c20468,20469
< #line 2056 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
< void ldv_mutex_unlock_82(struct mutex *ldv_func_arg1 ) 
---
> #line 2224 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_worker.c.prepared"
> void ldv_mutex_unlock_71(struct mutex *ldv_func_arg1 ) 
19464c20474
< #line 2061
---
> #line 2229
19466c20476
< #line 2063
---
> #line 2231
19468c20478
< #line 2064
---
> #line 2232
19472,19484d20481
< #line 248 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/bitops.h"
< __inline static int test_and_clear_bit(int nr , unsigned long volatile   *addr ) 
< { 
<   int oldbit ;
< 
<   {
< #line 252
<   __asm__  volatile   (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; btr %2,%1\n\tsbb %0,%0": "=r" (oldbit),
<                        "+m" (*((long volatile   *)addr)): "Ir" (nr): "memory");
< #line 256
<   return (oldbit);
< }
< }
19545,19664d20541
< #line 153 "include/linux/list.h"
< __inline static void list_move(struct list_head *list , struct list_head *head ) 
< { 
< 
< 
<   {
< #line 155
<   __list_del_entry(list);
< #line 156
<   list_add(list, head);
< #line 157
<   return;
< }
< }
< #line 570 "include/linux/list.h"
< __inline static void INIT_HLIST_NODE(struct hlist_node *h ) 
< { 
< 
< 
<   {
< #line 572
<   h->next = 0;
< #line 573
<   h->pprev = 0;
< #line 574
<   return;
< }
< }
< #line 576 "include/linux/list.h"
< __inline static int hlist_unhashed(struct hlist_node  const  *h ) 
< { 
< 
< 
<   {
< #line 578
<   return ((unsigned long )h->pprev == (unsigned long )((struct hlist_node **/* const  */)0));
< }
< }
< #line 586 "include/linux/list.h"
< __inline static void __hlist_del(struct hlist_node *n ) 
< { 
<   struct hlist_node *next ;
<   struct hlist_node **pprev ;
< 
<   {
< #line 588
<   next = n->next;
< #line 589
<   pprev = n->pprev;
< #line 590
<   *pprev = next;
< #line 591
<   if ((unsigned long )next != (unsigned long )((struct hlist_node *)0)) {
< #line 592
<     next->pprev = pprev;
<   } else {
< 
<   }
< #line 593
<   return;
< }
< }
< #line 602 "include/linux/list.h"
< __inline static void hlist_del_init(struct hlist_node *n ) 
< { 
<   int tmp ;
< 
<   {
< #line 604
<   tmp = hlist_unhashed((struct hlist_node  const  *)n);
< #line 604
<   if (tmp == 0) {
< #line 605
<     __hlist_del(n);
< #line 606
<     INIT_HLIST_NODE(n);
<   } else {
< 
<   }
< #line 608
<   return;
< }
< }
< #line 610 "include/linux/list.h"
< __inline static void hlist_add_head(struct hlist_node *n , struct hlist_head *h ) 
< { 
<   struct hlist_node *first ;
< 
<   {
< #line 612
<   first = h->first;
< #line 613
<   n->next = first;
< #line 614
<   if ((unsigned long )first != (unsigned long )((struct hlist_node *)0)) {
< #line 615
<     first->pprev = & n->next;
<   } else {
< 
<   }
< #line 616
<   h->first = n;
< #line 617
<   n->pprev = & h->first;
< #line 618
<   return;
< }
< }
< #line 642 "include/linux/list.h"
< __inline static void hlist_add_fake(struct hlist_node *n ) 
< { 
< 
< 
<   {
< #line 644
<   n->pprev = & n->next;
< #line 645
<   return;
< }
< }
19767,19768c20644,20661
< #line 171 "include/linux/mutex.h"
< int ldv_mutex_trylock_106(struct mutex *ldv_func_arg1 ) ;
---
> #line 124 "include/linux/mutex.h"
> __inline static int mutex_is_locked(struct mutex *lock ) 
> { 
>   int tmp ;
> 
>   {
> #line 126
>   tmp = atomic_read((atomic_t const   *)(& lock->count));
> #line 126
>   return (tmp != 1);
> }
> }
> #line 130
> __inline static int ldv_mutex_is_locked_119(struct mutex *lock ) ;
> #line 134
> __inline static int ldv_mutex_is_locked_120(struct mutex *lock ) ;
> #line 171
> int ldv_mutex_trylock_96(struct mutex *ldv_func_arg1 ) ;
19770c20663
< void ldv_mutex_unlock_104(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_unlock_94(struct mutex *ldv_func_arg1 ) ;
19772c20665
< void ldv_mutex_unlock_107(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_unlock_97(struct mutex *ldv_func_arg1 ) ;
19774c20667
< void ldv_mutex_unlock_109(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_unlock_99(struct mutex *ldv_func_arg1 ) ;
19776c20669
< void ldv_mutex_unlock_111(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_unlock_101(struct mutex *ldv_func_arg1 ) ;
19778c20671
< void ldv_mutex_unlock_113(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_unlock_103(struct mutex *ldv_func_arg1 ) ;
19780c20673
< void ldv_mutex_unlock_115(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_unlock_105(struct mutex *ldv_func_arg1 ) ;
19782c20675
< void ldv_mutex_unlock_116(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_unlock_108(struct mutex *ldv_func_arg1 ) ;
19784c20677
< void ldv_mutex_unlock_118(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_unlock_109(struct mutex *ldv_func_arg1 ) ;
19786,19790c20679,20691
< void ldv_mutex_unlock_119(struct mutex *ldv_func_arg1 ) ;
< #line 5 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< extern int mutex_lock_interruptible(struct mutex * ) ;
< #line 8
< int ldv_mutex_lock_interruptible_117(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_unlock_111(struct mutex *ldv_func_arg1 ) ;
> #line 212
> void ldv_mutex_unlock_112(struct mutex *ldv_func_arg1 ) ;
> #line 216
> void ldv_mutex_unlock_113(struct mutex *ldv_func_arg1 ) ;
> #line 220
> void ldv_mutex_unlock_114(struct mutex *ldv_func_arg1 ) ;
> #line 224
> void ldv_mutex_unlock_116(struct mutex *ldv_func_arg1 ) ;
> #line 228
> void ldv_mutex_unlock_118(struct mutex *ldv_func_arg1 ) ;
> #line 10 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> void ldv_mutex_lock_93(struct mutex *ldv_func_arg1 ) ;
19792c20693
< void ldv_mutex_lock_103(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_lock_95(struct mutex *ldv_func_arg1 ) ;
19794c20695
< void ldv_mutex_lock_105(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_lock_98(struct mutex *ldv_func_arg1 ) ;
19796c20697
< void ldv_mutex_lock_108(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_lock_100(struct mutex *ldv_func_arg1 ) ;
19798c20699
< void ldv_mutex_lock_110(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_lock_102(struct mutex *ldv_func_arg1 ) ;
19800c20701
< void ldv_mutex_lock_112(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_lock_104(struct mutex *ldv_func_arg1 ) ;
19802,19804c20703,20719
< void ldv_mutex_lock_114(struct mutex *ldv_func_arg1 ) ;
< #line 84
< int ldv_mutex_lock_interruptible_mutex_of_drbd_socket(struct mutex *lock ) ;
---
> void ldv_mutex_lock_106(struct mutex *ldv_func_arg1 ) ;
> #line 38
> void ldv_mutex_lock_107(struct mutex *ldv_func_arg1 ) ;
> #line 42
> void ldv_mutex_lock_110(struct mutex *ldv_func_arg1 ) ;
> #line 46
> void ldv_mutex_lock_115(struct mutex *ldv_func_arg1 ) ;
> #line 50
> void ldv_mutex_lock_117(struct mutex *ldv_func_arg1 ) ;
> #line 63
> void ldv_mutex_lock_conf_update_of_drbd_tconn(struct mutex *lock ) ;
> #line 67
> void ldv_mutex_unlock_conf_update_of_drbd_tconn(struct mutex *lock ) ;
> #line 82
> int ldv_mutex_is_locked_cstate_mutex_of_drbd_tconn(struct mutex *lock ) ;
> #line 130
> int ldv_mutex_is_locked_state_mutex_of_drbd_conf(struct mutex *lock ) ;
19806c20721
< __inline static struct thread_info *current_thread_info___0(void) 
---
> __inline static struct thread_info *current_thread_info___2(void) 
19818c20733
<   goto ldv_6306;
---
>   goto ldv_6388;
19823c20738
<   goto ldv_6306;
---
>   goto ldv_6388;
19828c20743
<   goto ldv_6306;
---
>   goto ldv_6388;
19833c20748
<   goto ldv_6306;
---
>   goto ldv_6388;
19838c20753
<   ldv_6306: 
---
>   ldv_6388: 
19845,19856c20760,20763
< #line 89 "include/linux/thread_info.h"
< __inline static int test_ti_thread_flag(struct thread_info *ti , int flag ) 
< { 
<   int tmp ;
< 
<   {
< #line 91
<   tmp = variable_test_bit(flag, (unsigned long const volatile   *)(& ti->flags));
< #line 91
<   return (tmp);
< }
< }
---
> #line 21 "include/linux/rwlock_api_smp.h"
> extern void _raw_write_lock_bh(rwlock_t * ) ;
> #line 33
> extern void _raw_write_unlock_bh(rwlock_t * ) ;
19872a20780,20897
> #line 84
> extern long wait_for_completion_interruptible_timeout(struct completion * , unsigned long  ) ;
> #line 144 "include/linux/rcupdate.h"
> extern void synchronize_sched(void) ;
> #line 163 "include/linux/rcupdate.h"
> __inline static void __rcu_read_lock___2(void) 
> { 
>   struct thread_info *tmp ;
> 
>   {
> #line 165
>   tmp = current_thread_info___2();
> #line 165
>   tmp->preempt_count = tmp->preempt_count + 1;
> #line 165
>   __asm__  volatile   ("": : : "memory");
> #line 166
>   return;
> }
> }
> #line 168 "include/linux/rcupdate.h"
> __inline static void __rcu_read_unlock___2(void) 
> { 
>   struct thread_info *tmp ;
> 
>   {
> #line 170
>   __asm__  volatile   ("": : : "memory");
> #line 170
>   tmp = current_thread_info___2();
> #line 170
>   tmp->preempt_count = tmp->preempt_count + -1;
> #line 170
>   __asm__  volatile   ("": : : "memory");
> #line 171
>   return;
> }
> }
> #line 173 "include/linux/rcupdate.h"
> __inline static void synchronize_rcu(void) 
> { 
> 
> 
>   {
> #line 175
>   synchronize_sched();
> #line 176
>   return;
> }
> }
> #line 732 "include/linux/rcupdate.h"
> __inline static void rcu_read_lock___2(void) 
> { 
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
> 
>   {
> #line 734
>   __rcu_read_lock___2();
> #line 736
>   rcu_lock_acquire(& rcu_lock_map);
> #line 737
>   tmp = debug_lockdep_rcu_enabled();
> #line 737
>   if (tmp != 0 && ! __warned) {
> #line 737
>     tmp___0 = rcu_is_cpu_idle();
> #line 737
>     if (tmp___0 != 0) {
> #line 737
>       __warned = 1;
> #line 737
>       lockdep_rcu_suspicious("include/linux/rcupdate.h", 738, "rcu_read_lock() used illegally while idle");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 740
>   return;
> }
> }
> #line 756 "include/linux/rcupdate.h"
> __inline static void rcu_read_unlock___2(void) 
> { 
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
> 
>   {
> #line 758
>   tmp = debug_lockdep_rcu_enabled();
> #line 758
>   if (tmp != 0 && ! __warned) {
> #line 758
>     tmp___0 = rcu_is_cpu_idle();
> #line 758
>     if (tmp___0 != 0) {
> #line 758
>       __warned = 1;
> #line 758
>       lockdep_rcu_suspicious("include/linux/rcupdate.h", 759, "rcu_read_unlock() used illegally while idle");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 760
>   rcu_lock_release(& rcu_lock_map);
> #line 762
>   __rcu_read_unlock___2();
> #line 763
>   return;
> }
> }
19875,19880d20899
< #line 345 "include/linux/gfp.h"
< extern unsigned long __get_free_pages(gfp_t  , unsigned int  ) ;
< #line 360
< extern void free_pages(unsigned long  , unsigned int  ) ;
< #line 461 "include/linux/module.h"
< extern void __module_get(struct module * ) ;
19901c20920
<     ldv_19174: ;
---
>     ldv_19256: ;
19903c20922
<     goto ldv_19174;
---
>     goto ldv_19256;
19914c20933
<     ldv_19175: ;
---
>     ldv_19257: ;
19916c20935
<     goto ldv_19175;
---
>     goto ldv_19257;
19927c20946
<     ldv_19176: ;
---
>     ldv_19258: ;
19929c20948
<     goto ldv_19176;
---
>     goto ldv_19258;
19976,20002d20994
< #line 2533 "include/linux/sched.h"
< __inline static int test_tsk_thread_flag(struct task_struct *tsk , int flag ) 
< { 
<   int tmp ;
< 
<   {
< #line 2535
<   tmp = test_ti_thread_flag((struct thread_info *)tsk->stack, flag);
< #line 2535
<   return (tmp);
< }
< }
< #line 2559 "include/linux/sched.h"
< __inline static int signal_pending(struct task_struct *p ) 
< { 
<   int tmp ;
<   long tmp___0 ;
< 
<   {
< #line 2561
<   tmp = test_tsk_thread_flag(p, 2);
< #line 2561
<   tmp___0 = __builtin_expect(tmp != 0, 0L);
< #line 2561
<   return ((int )tmp___0);
< }
< }
20009,20010d21000
< #line 207
< extern int sock_create_lite(int  , int  , int  , struct socket ** ) ;
20015c21005,21007
< #line 306 "include/linux/drbd.h"
---
> #line 255
> extern int kernel_accept(struct socket * , struct socket ** , int  ) ;
> #line 329 "include/linux/drbd.h"
20029,20038d21020
< #line 520 "include/linux/crypto.h"
< __inline static u32 crypto_tfm_alg_type(struct crypto_tfm *tfm ) 
< { 
< 
< 
<   {
< #line 522
<   return ((tfm->__crt_alg)->cra_flags & 15U);
< }
< }
20169c21151
< #line 249 "include/linux/lru_cache.h"
---
> #line 260 "include/linux/lru_cache.h"
20171,20295c21153,21172
< #line 223 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static char const   *cmdname(enum drbd_packets cmd ) 
< { 
<   char const   *cmdnames[43U] ;
< 
<   {
< #line 228
<   cmdnames[0] = "Data";
< #line 228
<   cmdnames[1] = "DataReply";
< #line 228
<   cmdnames[2] = "RSDataReply";
< #line 228
<   cmdnames[3] = "Barrier";
< #line 228
<   cmdnames[4] = "ReportBitMap";
< #line 228
<   cmdnames[5] = "BecomeSyncTarget";
< #line 228
<   cmdnames[6] = "BecomeSyncSource";
< #line 228
<   cmdnames[7] = "UnplugRemote";
< #line 228
<   cmdnames[8] = "DataRequest";
< #line 228
<   cmdnames[9] = "RSDataRequest";
< #line 228
<   cmdnames[10] = "SyncParam";
< #line 228
<   cmdnames[11] = "ReportProtocol";
< #line 228
<   cmdnames[12] = "ReportUUIDs";
< #line 228
<   cmdnames[13] = "ReportSizes";
< #line 228
<   cmdnames[14] = "ReportState";
< #line 228
<   cmdnames[15] = "ReportSyncUUID";
< #line 228
<   cmdnames[16] = "AuthChallenge";
< #line 228
<   cmdnames[17] = "AuthResponse";
< #line 228
<   cmdnames[18] = "StateChgRequest";
< #line 228
<   cmdnames[19] = "Ping";
< #line 228
<   cmdnames[20] = "PingAck";
< #line 228
<   cmdnames[21] = "RecvAck";
< #line 228
<   cmdnames[22] = "WriteAck";
< #line 228
<   cmdnames[23] = "RSWriteAck";
< #line 228
<   cmdnames[24] = "DiscardAck";
< #line 228
<   cmdnames[25] = "NegAck";
< #line 228
<   cmdnames[26] = "NegDReply";
< #line 228
<   cmdnames[27] = "NegRSDReply";
< #line 228
<   cmdnames[28] = "BarrierAck";
< #line 228
<   cmdnames[29] = "StateChgReply";
< #line 228
<   cmdnames[30] = "OVRequest";
< #line 228
<   cmdnames[31] = "OVReply";
< #line 228
<   cmdnames[32] = "OVResult";
< #line 228
<   cmdnames[33] = "CsumRSRequest";
< #line 228
<   cmdnames[34] = "CsumRSIsInSync";
< #line 228
<   cmdnames[35] = "SyncParam89";
< #line 228
<   cmdnames[36] = "CBitmap";
< #line 228
<   cmdnames[37] = 0;
< #line 228
<   cmdnames[38] = 0;
< #line 228
<   cmdnames[39] = "DelayProbe";
< #line 228
<   cmdnames[40] = "OutOfSync";
< #line 228
<   cmdnames[41] = 0;
< #line 228
<   cmdnames[42] = 0;
< #line 271
<   if ((unsigned int )cmd == 65521U) {
< #line 272
<     return ("HandShakeM");
<   } else {
< 
<   }
< #line 273
<   if ((unsigned int )cmd == 65522U) {
< #line 274
<     return ("HandShakeS");
<   } else {
< 
<   }
< #line 275
<   if ((unsigned int )cmd == 65534U) {
< #line 276
<     return ("HandShake");
<   } else {
< 
<   }
< #line 277
<   if ((unsigned int )cmd > 41U) {
< #line 278
<     return ("Unknown");
<   } else {
< 
<   }
< #line 279
<   return (cmdnames[(unsigned int )cmd]);
< }
< }
< #line 300
---
> #line 110 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_state.h"
> enum drbd_state_rv drbd_change_state(struct drbd_conf *mdev , enum chg_state_flags f ,
>                                      union drbd_state mask , union drbd_state val ) ;
> #line 114
> void drbd_force_state(struct drbd_conf *mdev , union drbd_state mask , union drbd_state val ) ;
> #line 116
> enum drbd_state_rv _drbd_request_state(struct drbd_conf *mdev , union drbd_state mask ,
>                                        union drbd_state val , enum chg_state_flags f ) ;
> #line 127
> enum drbd_state_rv _conn_request_state(struct drbd_tconn *tconn , union drbd_state mask ,
>                                        union drbd_state val , enum chg_state_flags flags ) ;
> #line 154
> enum drbd_role conn_highest_role(struct drbd_tconn *tconn ) ;
> #line 158
> enum drbd_disk_state conn_highest_pdsk(struct drbd_tconn *tconn ) ;
> #line 65 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> unsigned int minor_count ;
> #line 236
> char const   *cmdname(enum drbd_packet cmd ) ;
> #line 256
20297c21174
< #line 303 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 259 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
20303c21180
< #line 313
---
> #line 269
20305c21182
< #line 314
---
> #line 270
20309,20310c21186,21189
< #line 585 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static enum drbd_bitmap_code DCBP_get_code(struct p_compressed_bm *p ) 
---
> #line 313
> unsigned int drbd_header_size(struct drbd_tconn *tconn ) ;
> #line 16 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_interval.h"
> __inline static void drbd_clear_interval(struct drbd_interval *i ) 
20315,20316c21194,21197
< #line 587
<   return ((enum drbd_bitmap_code )((int )p->encoding & 15));
---
> #line 18
>   i->rb.__rb_parent_color = (unsigned long )(& i->rb);
> #line 19
>   return;
20319,20320c21200,21201
< #line 598 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static int DCBP_get_start(struct p_compressed_bm *p ) 
---
> #line 21 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_interval.h"
> __inline static bool drbd_interval_empty(struct drbd_interval *i ) 
20325,20326c21206,21207
< #line 600
<   return ((int )((signed char )p->encoding) < 0);
---
> #line 23
>   return (i->rb.__rb_parent_color == (unsigned long )(& i->rb));
20329,20330c21210,21224
< #line 610 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static int DCBP_get_pad_bits(struct p_compressed_bm *p ) 
---
> #line 26
> bool drbd_insert_interval(struct rb_root *root , struct drbd_interval *this ) ;
> #line 27
> bool drbd_contains_interval(struct rb_root *root , sector_t sector , struct drbd_interval *interval ) ;
> #line 29
> void drbd_remove_interval(struct rb_root *root , struct drbd_interval *this ) ;
> #line 30
> struct drbd_interval *drbd_find_overlap(struct rb_root *root , sector_t sector , unsigned int size ) ;
> #line 32
> struct drbd_interval *drbd_next_overlap(struct drbd_interval *i , sector_t sector ,
>                                         unsigned int size ) ;
> #line 546 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> int drbd_wait_misc(struct drbd_conf *mdev , struct drbd_interval *i ) ;
> #line 1042 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static unsigned int mdev_to_minor(struct drbd_conf *mdev ) 
20335,20336c21229,21230
< #line 612
<   return (((int )p->encoding >> 4) & 7);
---
> #line 1044
>   return (mdev->minor);
20339,20340c21233,21234
< #line 1169 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static int drbd_test_and_clear_flag(struct drbd_conf *mdev , enum drbd_flag f ) 
---
> #line 1047 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static struct drbd_conf *vnr_to_mdev(struct drbd_tconn *tconn , int vnr ) 
20342c21236
<   int tmp ;
---
>   void *tmp ;
20345,20348c21239,21242
< #line 1171
<   tmp = test_and_clear_bit((int )f, (unsigned long volatile   *)(& mdev->drbd_flags));
< #line 1171
<   return (tmp);
---
> #line 1049
>   tmp = idr_find(& tconn->volumes, vnr);
> #line 1049
>   return ((struct drbd_conf *)tmp);
20351,20357c21245
< #line 1233
< enum drbd_state_rv drbd_change_state(struct drbd_conf *mdev , enum chg_state_flags f ,
<                                      union drbd_state mask , union drbd_state val ) ;
< #line 1239
< enum drbd_state_rv _drbd_request_state(struct drbd_conf *mdev , union drbd_state mask ,
<                                        union drbd_state val , enum chg_state_flags f ) ;
< #line 1248
---
> #line 1064
20359,20367c21247,21257
< #line 1258
< void tl_release(struct drbd_conf *mdev , unsigned int barrier_nr , unsigned int set_size ) ;
< #line 1260
< void tl_clear(struct drbd_conf *mdev ) ;
< #line 1262
< void drbd_free_sock(struct drbd_conf *mdev ) ;
< #line 1265
< int drbd_send_protocol(struct drbd_conf *mdev ) ;
< #line 1266
---
> #line 1065
> void _drbd_thread_stop(struct drbd_thread *thi , int restart , int wait ) ;
> #line 1074
> void tl_release(struct drbd_tconn *tconn , unsigned int barrier_nr , unsigned int set_size ) ;
> #line 1076
> void tl_clear(struct drbd_tconn *tconn ) ;
> #line 1077
> void drbd_free_sock(struct drbd_tconn *tconn ) ;
> #line 1084
> int drbd_send_protocol(struct drbd_tconn *tconn ) ;
> #line 1085
20369c21259
< #line 1269
---
> #line 1088
20371c21261
< #line 1271
---
> #line 1090
20373,20384c21263,21272
< #line 1280
< int drbd_send_cmd2(struct drbd_conf *mdev , enum drbd_packets cmd , char *data , size_t size ) ;
< #line 1282
< int drbd_send_sync_param(struct drbd_conf *mdev , struct syncer_conf *sc ) ;
< #line 1283
< int drbd_send_b_ack(struct drbd_conf *mdev , u32 barrier_nr , u32 set_size ) ;
< #line 1287
< int drbd_send_ack_rp(struct drbd_conf *mdev , enum drbd_packets cmd , struct p_block_req *rp ) ;
< #line 1289
< int drbd_send_ack_dp(struct drbd_conf *mdev , enum drbd_packets cmd , struct p_data *dp ,
<                      int data_size ) ;
< #line 1305
---
> #line 1091
> int drbd_send_sync_param(struct drbd_conf *mdev ) ;
> #line 1092
> void drbd_send_b_ack(struct drbd_tconn *tconn , u32 barrier_nr , u32 set_size ) ;
> #line 1096
> void drbd_send_ack_rp(struct drbd_conf *mdev , enum drbd_packet cmd , struct p_block_req *rp ) ;
> #line 1098
> void drbd_send_ack_dp(struct drbd_conf *mdev , enum drbd_packet cmd , struct p_data *dp ,
>                       int data_size ) ;
> #line 1113
20386,20388c21274,21280
< #line 1307
< int drbd_send_sr_reply(struct drbd_conf *mdev , enum drbd_state_rv retcode ) ;
< #line 1316
---
> #line 1114
> void drbd_send_sr_reply(struct drbd_conf *mdev , enum drbd_state_rv retcode ) ;
> #line 1115
> void conn_send_sr_reply(struct drbd_tconn *tconn , enum drbd_state_rv retcode ) ;
> #line 1120
> void conn_md_sync(struct drbd_tconn *tconn ) ;
> #line 1125
20390c21282
< #line 1318
---
> #line 1127
20392c21284
< #line 1319
---
> #line 1128
20394c21286
< #line 1334
---
> #line 1143
20397c21289
< #line 1337
---
> #line 1149
20399c21291
< #line 1338
---
> #line 1150
20401c21293
< #line 1536
---
> #line 1370
20403c21295
< #line 1551
---
> #line 1385
20405c21297
< #line 1552
---
> #line 1386
20407c21299
< #line 1553
---
> #line 1387
20409c21301
< #line 1588
---
> #line 1433
20411,20412c21303,21304
<                            int assume_peer_has_space ) ;
< #line 1590
---
>                            sector_t u_size , int assume_peer_has_space ) ;
> #line 1435
20414c21306
< #line 1591
---
> #line 1436
20416c21308
< #line 1592
---
> #line 1437
20418c21310
< #line 1593
---
> #line 1438
20421,20433c21313,21404
< #line 1597
< void drbd_try_outdate_peer_async(struct drbd_conf *mdev ) ;
< #line 1658
< int drbd_release_ee(struct drbd_conf *mdev , struct list_head *list ) ;
< #line 1668
< void drbd_wait_ee_list_empty(struct drbd_conf *mdev , struct list_head *head ) ;
< #line 1670
< void _drbd_wait_ee_list_empty(struct drbd_conf *mdev , struct list_head *head ) ;
< #line 1674
< void drbd_flush_workqueue(struct drbd_conf *mdev ) ;
< #line 1675
< void drbd_free_tl_hash(struct drbd_conf *mdev ) ;
< #line 1705 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1442
> void conn_try_outdate_peer_async(struct drbd_tconn *tconn ) ;
> #line 1503
> int drbd_free_peer_reqs(struct drbd_conf *mdev , struct list_head *list ) ;
> #line 1511
> struct page *drbd_alloc_pages(struct drbd_conf *mdev , unsigned int number , bool retry___0 ) ;
> #line 1514
> void conn_flush_workqueue(struct drbd_tconn *tconn ) ;
> #line 1515
> int drbd_connected(struct drbd_conf *mdev ) ;
> #line 1516 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static void drbd_flush_workqueue(struct drbd_conf *mdev ) 
> { 
> 
> 
>   {
> #line 1518
>   conn_flush_workqueue(mdev->tconn);
> #line 1519
>   return;
> }
> }
> #line 1523 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static int drbd_setsockopt___0(struct socket *sock , int level , int optname ,
>                                         char *optval , int optlen ) 
> { 
>   mm_segment_t oldfs ;
>   struct thread_info *tmp ;
>   char *uoptval ;
>   int err ;
>   struct thread_info *tmp___0 ;
>   mm_segment_t __constr_expr_0 ;
>   struct thread_info *tmp___1 ;
> 
>   {
> #line 1526
>   tmp = current_thread_info___2();
> #line 1526
>   oldfs = tmp->addr_limit;
> #line 1530
>   uoptval = optval;
> #line 1532
>   tmp___0 = current_thread_info___2();
> #line 1532
>   __constr_expr_0.seg = 0xffffffffffffffffUL;
> #line 1532
>   tmp___0->addr_limit = __constr_expr_0;
> #line 1533
>   if (level == 1) {
> #line 1534
>     err = sock_setsockopt(sock, level, optname, uoptval, (unsigned int )optlen);
>   } else {
> #line 1536
>     err = (*((sock->ops)->setsockopt))(sock, level, optname, uoptval, (unsigned int )optlen);
>   }
> #line 1538
>   tmp___1 = current_thread_info___2();
> #line 1538
>   tmp___1->addr_limit = oldfs;
> #line 1539
>   return (err);
> }
> }
> #line 1542 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static void drbd_tcp_cork___0(struct socket *sock ) 
> { 
>   int val ;
> 
>   {
> #line 1544
>   val = 1;
> #line 1545
>   drbd_setsockopt___0(sock, 6, 3, (char *)(& val), 4);
> #line 1547
>   return;
> }
> }
> #line 1549 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static void drbd_tcp_uncork___0(struct socket *sock ) 
> { 
>   int val ;
> 
>   {
> #line 1551
>   val = 0;
> #line 1552
>   drbd_setsockopt___0(sock, 6, 3, (char *)(& val), 4);
> #line 1554
>   return;
> }
> }
> #line 1556 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
20439c21410
< #line 1707
---
> #line 1558
20441,20443c21412,21414
< #line 1708
<   drbd_setsockopt(sock, 6, 1, (char *)(& val), 4);
< #line 1710
---
> #line 1559
>   drbd_setsockopt___0(sock, 6, 1, (char *)(& val), 4);
> #line 1561
20447c21418
< #line 1712 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1563 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
20453c21424
< #line 1714
---
> #line 1565
20455,20457c21426,21428
< #line 1715
<   drbd_setsockopt(sock, 6, 12, (char *)(& val), 4);
< #line 1717
---
> #line 1566
>   drbd_setsockopt___0(sock, 6, 12, (char *)(& val), 4);
> #line 1568
20461,20463c21432,21434
< #line 1719
< void drbd_bump_write_ordering(struct drbd_conf *mdev , enum write_ordering_e wo ) ;
< #line 1731
---
> #line 1570
> void drbd_bump_write_ordering(struct drbd_tconn *tconn , enum write_ordering_e wo ) ;
> #line 1582
20465c21436
< #line 1733
---
> #line 1584
20467,20471c21438,21439
< #line 1757
< void drbd_bcast_ee(struct drbd_conf *mdev , char const   *reason , int const   dgs ,
<                    char const   *seen_hash , char const   *calc_hash , struct drbd_epoch_entry  const  *e ) ;
< #line 1830 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static int drbd_ee_has_active_page___0(struct drbd_epoch_entry *e ) 
---
> #line 1632 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static int drbd_peer_req_has_active_page___0(struct drbd_peer_request *peer_req ) 
20478,20483c21446,21451
< #line 1832
<   page = e->pages;
< #line 1833
<   goto ldv_51493;
<   ldv_51492: 
< #line 1834
---
> #line 1634
>   page = peer_req->pages;
> #line 1635
>   goto ldv_52098;
>   ldv_52097: 
> #line 1636
20485c21453
< #line 1834
---
> #line 1636
20487c21455
< #line 1835
---
> #line 1637
20492c21460
< #line 1833
---
> #line 1635
20494,20495c21462,21463
<   ldv_51493: ;
< #line 1833
---
>   ldv_52098: ;
> #line 1635
20497c21465
< #line 1833
---
> #line 1635
20499c21467
< #line 1833
---
> #line 1635
20501c21469
< #line 1833
---
> #line 1635
20503,20504c21471,21472
< #line 1834
<       goto ldv_51492;
---
> #line 1636
>       goto ldv_52097;
20506,20507c21474,21475
< #line 1836
<       goto ldv_51494;
---
> #line 1638
>       goto ldv_52099;
20512,20513c21480,21481
<   ldv_51494: ;
< #line 1837
---
>   ldv_52099: ;
> #line 1639
20517,20531c21485,21486
< #line 1875 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static int drbd_request_state(struct drbd_conf *mdev , union drbd_state mask ,
<                                        union drbd_state val ) 
< { 
<   enum drbd_state_rv tmp ;
< 
<   {
< #line 1879
<   tmp = _drbd_request_state(mdev, mask, val, 14);
< #line 1879
<   return ((int )tmp);
< }
< }
< #line 1968 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static sector_t drbd_md_first_sector(struct drbd_backing_dev *bdev ) 
---
> #line 1758 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static sector_t _drbd_md_first_sector(int meta_dev_idx , struct drbd_backing_dev *bdev ) 
20536,20537c21491,21492
< #line 1970
<   switch (bdev->dc.meta_dev_idx) {
---
> #line 1760
>   switch (meta_dev_idx) {
20540c21495
< #line 1973
---
> #line 1763
20544c21499
< #line 1976
---
> #line 1766
20549c21504
< #line 2011 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1818 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
20552a21508,21512
>   int meta_dev_idx ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
20555,20556c21515,21516
<   sector_t tmp___0 ;
<   sector_t tmp___1 ;
---
>   sector_t tmp___2 ;
>   sector_t tmp___3 ;
20559c21519
<   sector_t tmp___2 ;
---
>   sector_t tmp___4 ;
20564c21524
<   sector_t tmp___3 ;
---
>   sector_t tmp___5 ;
20567,20568c21527,21555
< #line 2014
<   switch (bdev->dc.meta_dev_idx) {
---
> #line 1823
>   rcu_read_lock___2();
> #line 1824
>   _________p1 = *((struct disk_conf * volatile  *)(& bdev->disk_conf));
> #line 1824
>   tmp = debug_lockdep_rcu_enabled();
> #line 1824
>   if (tmp != 0 && ! __warned) {
> #line 1824
>     tmp___0 = rcu_read_lock_held();
> #line 1824
>     if (tmp___0 == 0 && 1) {
> #line 1824
>       __warned = 1;
> #line 1824
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h",
>                              1824, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1824
>   meta_dev_idx = _________p1->meta_dev_idx;
> #line 1825
>   rcu_read_unlock___2();
> #line 1827
>   switch (meta_dev_idx) {
20571,20575c21558,21562
< #line 2018
<   tmp___1 = drbd_get_capacity(bdev->backing_bdev);
< #line 2018
<   if (tmp___1 != 0UL) {
< #line 2018
---
> #line 1831
>   tmp___3 = drbd_get_capacity(bdev->backing_bdev);
> #line 1831
>   if (tmp___3 != 0UL) {
> #line 1831
20577,20581c21564,21568
< #line 2018
<     tmp___0 = drbd_md_first_sector(bdev);
< #line 2018
<     __min2 = tmp___0;
< #line 2018
---
> #line 1831
>     tmp___2 = _drbd_md_first_sector(meta_dev_idx, bdev);
> #line 1831
>     __min2 = tmp___2;
> #line 1831
20584c21571
< #line 2018
---
> #line 1831
20587,20588c21574,21575
< #line 2021
<   goto ldv_51572;
---
> #line 1834
>   goto ldv_52186;
20590c21577
< #line 2023
---
> #line 1836
20592,20596c21579,21583
< #line 2023
<   tmp___2 = drbd_get_capacity(bdev->backing_bdev);
< #line 2023
<   __min2___0 = tmp___2;
< #line 2023
---
> #line 1836
>   tmp___4 = drbd_get_capacity(bdev->backing_bdev);
> #line 1836
>   __min2___0 = tmp___4;
> #line 1836
20598c21585
< #line 2026
---
> #line 1839
20600c21587
< #line 2026
---
> #line 1839
20602c21589
< #line 2026
---
> #line 1839
20604,20605c21591,21592
< #line 2029
<   goto ldv_51572;
---
> #line 1842
>   goto ldv_52186;
20607c21594
< #line 2031
---
> #line 1844
20609,20613c21596,21600
< #line 2031
<   tmp___3 = drbd_get_capacity(bdev->backing_bdev);
< #line 2031
<   __min2___2 = tmp___3;
< #line 2031
---
> #line 1844
>   tmp___5 = drbd_get_capacity(bdev->backing_bdev);
> #line 1844
>   __min2___2 = tmp___5;
> #line 1844
20616,20617c21603,21604
<   ldv_51572: ;
< #line 2034
---
>   ldv_52186: ;
> #line 1847
20621,20643c21608,21613
< #line 2068 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static void drbd_queue_work_front(struct drbd_work_queue *q , struct drbd_work *w ) 
< { 
<   unsigned long flags ;
<   raw_spinlock_t *tmp ;
< 
<   {
< #line 2071
<   tmp = spinlock_check(& q->q_lock);
< #line 2071
<   flags = _raw_spin_lock_irqsave(tmp);
< #line 2072
<   list_add(& w->list, & q->q);
< #line 2073
<   up(& q->s);
< #line 2075
<   spin_unlock_irqrestore(& q->q_lock, flags);
< #line 2076
<   return;
< }
< }
< #line 2108 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static int drbd_send_ping(struct drbd_conf *mdev ) 
---
> #line 1927
> int drbd_send_ping(struct drbd_tconn *tconn ) ;
> #line 1928
> int drbd_send_ping_ack(struct drbd_tconn *tconn ) ;
> #line 1932 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static void drbd_thread_stop(struct drbd_thread *thi ) 
20645,20646d21614
<   struct p_header80 h ;
<   int tmp ;
20648,20659d21615
<   {
< #line 2111
<   tmp = drbd_send_cmd(mdev, 0, P_PING, & h, 8UL);
< #line 2111
<   return (tmp);
< }
< }
< #line 2114 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static int drbd_send_ping_ack(struct drbd_conf *mdev ) 
< { 
<   struct p_header80 h ;
<   int tmp ;
20662,20665c21618,21621
< #line 2117
<   tmp = drbd_send_cmd(mdev, 0, P_PING_ACK, & h, 8UL);
< #line 2117
<   return (tmp);
---
> #line 1934
>   _drbd_thread_stop(thi, 0, 1);
> #line 1935
>   return;
20668c21624
< #line 2199 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 2015 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
20674c21630
< #line 2201
---
> #line 2017
20676,20695c21632
< #line 2202
<   return;
< }
< }
< #line 2215 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static void put_net_conf(struct drbd_conf *mdev ) 
< { 
<   int tmp ;
< 
<   {
< #line 2217
<   tmp = atomic_dec_and_test(& mdev->net_cnt);
< #line 2217
<   if (tmp != 0) {
< #line 2218
<     __wake_up(& mdev->net_cnt_wait, 3U, 1, 0);
<   } else {
< 
<   }
< #line 2219
---
> #line 2018
20699,20720c21636
< #line 2227 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static int get_net_conf(struct drbd_conf *mdev ) 
< { 
<   int have_net_conf ;
< 
<   {
< #line 2231
<   atomic_inc(& mdev->net_cnt);
< #line 2232
<   have_net_conf = (int )mdev->state.ldv_39979.conn > 1;
< #line 2233
<   if (have_net_conf == 0) {
< #line 2234
<     put_net_conf(mdev);
<   } else {
< 
<   }
< #line 2235
<   return (have_net_conf);
< }
< }
< #line 2493 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 2300 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
20726c21642
< #line 2495
---
> #line 2302
20728c21644
< #line 2496
---
> #line 2303
20730c21646
< #line 2497
---
> #line 2304
20734,20772c21650
< #line 2500 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static int seq_cmp(u32 a , u32 b ) 
< { 
< 
< 
<   {
< #line 2507
<   return ((int )a - (int )b);
< }
< }
< #line 2516 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static void update_peer_seq(struct drbd_conf *mdev , unsigned int new_seq ) 
< { 
<   unsigned int m ;
<   int tmp ;
< 
<   {
< #line 2519
<   spin_lock(& mdev->peer_seq_lock);
< #line 2520
<   tmp = seq_cmp(mdev->peer_seq, new_seq);
< #line 2520
<   m = tmp > 0 ? mdev->peer_seq : new_seq;
< #line 2521
<   mdev->peer_seq = m;
< #line 2522
<   spin_unlock(& mdev->peer_seq_lock);
< #line 2523
<   if (m == new_seq) {
< #line 2524
<     __wake_up(& mdev->seq_wait, 3U, 1, 0);
<   } else {
< 
<   }
< #line 2525
<   return;
< }
< }
< #line 11 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_wrappers.h"
---
> #line 12 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_wrappers.h"
20778,20779d21655
< #line 15
<   set_capacity(mdev->vdisk, size);
20781c21657
<   ((mdev->this_bdev)->bd_inode)->i_size = (long long )size << 9;
---
>   set_capacity(mdev->vdisk, size);
20782a21659,21660
>   ((mdev->this_bdev)->bd_inode)->i_size = (long long )size << 9;
> #line 18
20786c21664
< #line 29 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_wrappers.h"
---
> #line 30 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_wrappers.h"
20794,20795d21671
< #line 33
<   if ((unsigned long )bio->bi_bdev == (unsigned long )((struct block_device *)0)) {
20796a21673,21674
>   if ((unsigned long )bio->bi_bdev == (unsigned long )((struct block_device *)0)) {
> #line 35
20798c21676
< #line 34
---
> #line 35
20800,20801d21677
< #line 37
<     dump_stack();
20803c21679
<     bio_endio(bio, -19);
---
>     dump_stack();
20804a21681,21682
>     bio_endio(bio, -19);
> #line 40
20809c21687
< #line 42
---
> #line 43
20811,20812d21688
< #line 42
<   if (tmp___0 != 0) {
20813a21690,21691
>   if (tmp___0 != 0) {
> #line 44
20816c21694
< #line 45
---
> #line 46
20819c21697
< #line 46
---
> #line 47
20823,20961d21700
< #line 48 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_wrappers.h"
< __inline static int drbd_crypto_is_hash(struct crypto_tfm *tfm ) 
< { 
<   u32 tmp ;
< 
<   {
< #line 50
<   tmp = crypto_tfm_alg_type(tfm);
< #line 50
<   return ((tmp & 14U) == 8U);
< }
< }
< #line 232 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"
< __inline static struct hlist_head *ee_hash_slot(struct drbd_conf *mdev , sector_t sector ) 
< { 
<   long tmp ;
< 
<   {
< #line 234
<   tmp = __builtin_expect(mdev->ee_hash_s == 0U, 0L);
< #line 234
<   if (tmp != 0L) {
< #line 234
<     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"),
<                          "i" (234), "i" (12UL));
<     ldv_51848: ;
< #line 234
<     goto ldv_51848;
<   } else {
< 
<   }
< #line 235
<   return (mdev->ee_hash + (unsigned long )((unsigned int )(sector >> 8) % mdev->ee_hash_s));
< }
< }
< #line 241 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"
< __inline static struct hlist_head *tl_hash_slot(struct drbd_conf *mdev , sector_t sector ) 
< { 
<   long tmp ;
< 
<   {
< #line 243
<   tmp = __builtin_expect(mdev->tl_hash_s == 0U, 0L);
< #line 243
<   if (tmp != 0L) {
< #line 243
<     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"),
<                          "i" (243), "i" (12UL));
<     ldv_51853: ;
< #line 243
<     goto ldv_51853;
<   } else {
< 
<   }
< #line 244
<   return (mdev->tl_hash + (unsigned long )((unsigned int )(sector >> 8) % mdev->tl_hash_s));
< }
< }
< #line 249 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"
< static struct hlist_head *ar_hash_slot(struct drbd_conf *mdev , sector_t sector ) 
< { 
< 
< 
<   {
< #line 251
<   return (mdev->app_reads_hash + (unsigned long )((unsigned int )sector % 15U));
< }
< }
< #line 257 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"
< __inline static struct drbd_request *_ar_id_to_req(struct drbd_conf *mdev , u64 id ,
<                                                    sector_t sector ) 
< { 
<   struct hlist_head *slot ;
<   struct hlist_head *tmp ;
<   struct hlist_node *n ;
<   struct drbd_request *req ;
<   struct hlist_node  const  *__mptr ;
< 
<   {
< #line 260
<   tmp = ar_hash_slot(mdev, sector);
< #line 260
<   slot = tmp;
< #line 264
<   n = slot->first;
< #line 264
<   goto ldv_51870;
<   ldv_51869: ;
< #line 265
<   if ((unsigned long )req == (unsigned long )id) {
< #line 266
<     if (req->sector != sector) {
< #line 266
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( req->sector == sector ) in %s:%d\n",
<               (char *)"/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h",
<               266);
<     } else {
< 
<     }
< #line 267
<     return (req);
<   } else {
< 
<   }
< #line 264
<   n = n->next;
<   ldv_51870: ;
< #line 264
<   if ((unsigned long )n != (unsigned long )((struct hlist_node *)0)) {
< #line 264
<     __mptr = (struct hlist_node  const  *)n;
< #line 264
<     req = (struct drbd_request *)__mptr + 0xffffffffffffffd8UL;
< #line 264
<     if (1 != 0) {
< #line 265
<       goto ldv_51869;
<     } else {
< #line 267
<       goto ldv_51871;
<     }
<   } else {
< 
<   }
<   ldv_51871: ;
< #line 270
<   return (0);
< }
< }
< #line 311 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"
< __inline static int overlaps(sector_t s1 , int l1 , sector_t s2 , int l2 ) 
< { 
< 
< 
<   {
< #line 313
<   return ((sector_t )(l1 >> 9) + s1 > s2 && (sector_t )(l2 >> 9) + s2 > s1);
< }
< }
21083c21822
<   ldv_51938: ;
---
>   ldv_52550: ;
21085c21824
<   goto ldv_51938;
---
>   goto ldv_52550;
21196,21201c21935,21942
< #line 129 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int drbd_do_handshake(struct drbd_conf *mdev ) ;
< #line 130
< static int drbd_do_auth(struct drbd_conf *mdev ) ;
< #line 132
< static enum finish_epoch drbd_may_finish_epoch(struct drbd_conf *mdev , struct drbd_epoch *epoch ,
---
> #line 152 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int drbd_do_features(struct drbd_tconn *tconn ) ;
> #line 153
> static int drbd_do_auth(struct drbd_tconn *tconn ) ;
> #line 154
> static int drbd_disconnected(struct drbd_conf *mdev ) ;
> #line 156
> static enum finish_epoch drbd_may_finish_epoch(struct drbd_tconn *tconn , struct drbd_epoch *epoch ,
21203,21205c21944,21946
< #line 133
< static int e_end_block(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) ;
< #line 147 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 157
> static int e_end_block(struct drbd_work *w , int cancel ) ;
> #line 171 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
21214c21955
< #line 152
---
> #line 176
21216c21957
< #line 152
---
> #line 176
21218,21223c21959,21964
< #line 152
<     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"),
<                          "i" (152), "i" (12UL));
<     ldv_52018: ;
< #line 152
<     goto ldv_52018;
---
> #line 176
>     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"),
>                          "i" (176), "i" (12UL));
>     ldv_52636: ;
> #line 176
>     goto ldv_52636;
21227c21968
< #line 153
---
> #line 177
21230c21971
< #line 153
---
> #line 177
21232,21237c21973,21978
< #line 153
<     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"),
<                          "i" (153), "i" (12UL));
<     ldv_52019: ;
< #line 153
<     goto ldv_52019;
---
> #line 177
>     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"),
>                          "i" (177), "i" (12UL));
>     ldv_52637: ;
> #line 177
>     goto ldv_52637;
21241c21982
< #line 155
---
> #line 179
21243c21984
< #line 157
---
> #line 181
21245c21986
< #line 158
---
> #line 182
21250,21253c21991,21994
< #line 160
<   goto ldv_52022;
<   ldv_52021: 
< #line 161
---
> #line 184
>   goto ldv_52640;
>   ldv_52639: 
> #line 185
21255c21996
< #line 162
---
> #line 186
21257c21998
< #line 162
---
> #line 186
21259,21260c22000,22001
< #line 163
<     goto ldv_52020;
---
> #line 187
>     goto ldv_52638;
21264c22005
< #line 164
---
> #line 188
21266c22007
< #line 166
---
> #line 190
21271c22012
< #line 167
---
> #line 191
21273,21274c22014,22015
<   ldv_52022: ;
< #line 160
---
>   ldv_52640: ;
> #line 184
21276,21277c22017,22018
< #line 161
<     goto ldv_52021;
---
> #line 185
>     goto ldv_52639;
21281,21284c22022,22025
<   ldv_52020: 
< #line 171
<   page->ldv_14722.private = 0UL;
< #line 173
---
>   ldv_52638: 
> #line 195
>   page->ldv_14746.private = 0UL;
> #line 197
21286c22027
< #line 174
---
> #line 198
21288c22029
< #line 175
---
> #line 199
21292c22033
< #line 181 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 205 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
21299c22040
< #line 184
---
> #line 208
21301,21304c22042,22045
< #line 185
<   goto ldv_52030;
<   ldv_52029: 
< #line 186
---
> #line 209
>   goto ldv_52648;
>   ldv_52647: 
> #line 210
21306c22047
< #line 186
---
> #line 210
21308,21309c22049,22050
<   ldv_52030: 
< #line 185
---
>   ldv_52648: 
> #line 209
21311c22052
< #line 185
---
> #line 209
21313,21314c22054,22055
< #line 186
<     goto ldv_52029;
---
> #line 210
>     goto ldv_52647;
21319c22060
< #line 187
---
> #line 211
21321c22062
< #line 188
---
> #line 212
21326c22067
< #line 189
---
> #line 213
21330c22071
< #line 192 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 216 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
21337c22078
< #line 195
---
> #line 219
21339,21342c22080,22083
< #line 196
<   goto ldv_52039;
<   ldv_52038: 
< #line 197
---
> #line 220
>   goto ldv_52657;
>   ldv_52656: 
> #line 221
21344c22085
< #line 198
---
> #line 222
21346c22087
< #line 196
---
> #line 220
21348,21349c22089,22090
<   ldv_52039: ;
< #line 196
---
>   ldv_52657: ;
> #line 220
21351c22092
< #line 196
---
> #line 220
21353c22094
< #line 196
---
> #line 220
21355,21356c22096,22097
< #line 197
<       goto ldv_52038;
---
> #line 221
>       goto ldv_52656;
21358,21359c22099,22100
< #line 199
<       goto ldv_52040;
---
> #line 223
>       goto ldv_52658;
21364,21365c22105,22106
<   ldv_52040: ;
< #line 200
---
>   ldv_52658: ;
> #line 224
21369c22110
< #line 203 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 227 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
21376c22117
< #line 208
---
> #line 232
21378c22119
< #line 209
---
> #line 233
21380c22121
< #line 209
---
> #line 233
21382,21387c22123,22128
< #line 209
<     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"),
<                          "i" (209), "i" (12UL));
<     ldv_52047: ;
< #line 209
<     goto ldv_52047;
---
> #line 233
>     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"),
>                          "i" (233), "i" (12UL));
>     ldv_52665: ;
> #line 233
>     goto ldv_52665;
21391,21393c22132,22134
< #line 213
<   chain_last->ldv_14722.private = (unsigned long )*head;
< #line 214
---
> #line 237
>   chain_last->ldv_14746.private = (unsigned long )*head;
> #line 238
21395c22136
< #line 215
---
> #line 239
21399,21400c22140,22141
< #line 217 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static struct page *drbd_pp_first_pages_or_try_alloc(struct drbd_conf *mdev , int number ) 
---
> #line 241 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static struct page *__drbd_alloc_pages(struct drbd_conf *mdev , unsigned int number ) 
21404c22145
<   int i ;
---
>   unsigned int i ;
21407c22148
< #line 219
---
> #line 244
21409c22150
< #line 220
---
> #line 245
21411,21415c22152,22156
< #line 221
<   i = 0;
< #line 225
<   if (drbd_pp_vacant >= number) {
< #line 226
---
> #line 246
>   i = 0U;
> #line 250
>   if ((unsigned int )drbd_pp_vacant >= number) {
> #line 251
21417,21419c22158,22160
< #line 227
<     page = page_chain_del(& drbd_pp_pool, number);
< #line 228
---
> #line 252
>     page = page_chain_del(& drbd_pp_pool, (int )number);
> #line 253
21421,21422c22162,22163
< #line 229
<       drbd_pp_vacant = drbd_pp_vacant - number;
---
> #line 254
>       drbd_pp_vacant = (int )((unsigned int )drbd_pp_vacant - number);
21426c22167
< #line 230
---
> #line 255
21428c22169
< #line 231
---
> #line 256
21430c22171
< #line 232
---
> #line 257
21438,21443c22179,22184
< #line 238
<   i = 0;
< #line 238
<   goto ldv_52057;
<   ldv_52056: 
< #line 239
---
> #line 263
>   i = 0U;
> #line 263
>   goto ldv_52675;
>   ldv_52674: 
> #line 264
21445c22186
< #line 240
---
> #line 265
21447,21448c22188,22189
< #line 241
<     goto ldv_52055;
---
> #line 266
>     goto ldv_52673;
21452,21454c22193,22195
< #line 242
<   tmp->ldv_14722.private = (unsigned long )page;
< #line 243
---
> #line 267
>   tmp->ldv_14746.private = (unsigned long )page;
> #line 268
21456,21459c22197,22200
< #line 238
<   i = i + 1;
<   ldv_52057: ;
< #line 238
---
> #line 263
>   i = i + 1U;
>   ldv_52675: ;
> #line 263
21461,21462c22202,22203
< #line 239
<     goto ldv_52056;
---
> #line 264
>     goto ldv_52674;
21466,21467c22207,22208
<   ldv_52055: ;
< #line 246
---
>   ldv_52673: ;
> #line 271
21469c22210
< #line 247
---
> #line 272
21474c22215
< #line 252
---
> #line 277
21476c22217
< #line 253
---
> #line 278
21478c22219
< #line 254
---
> #line 279
21480c22221
< #line 255
---
> #line 280
21482,21484c22223,22225
< #line 256
<     drbd_pp_vacant = drbd_pp_vacant + i;
< #line 257
---
> #line 281
>     drbd_pp_vacant = (int )((unsigned int )drbd_pp_vacant + i);
> #line 282
21489c22230
< #line 259
---
> #line 284
21493,21494c22234,22235
< #line 262 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static void reclaim_net_ee(struct drbd_conf *mdev , struct list_head *to_be_freed ) 
---
> #line 287 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static void reclaim_finished_net_peer_reqs(struct drbd_conf *mdev , struct list_head *to_be_freed ) 
21496c22237
<   struct drbd_epoch_entry *e ;
---
>   struct drbd_peer_request *peer_req ;
21503c22244
< #line 272
---
> #line 298
21505c22246
< #line 272
---
> #line 298
21507,21510c22248,22251
< #line 272
<   goto ldv_52069;
<   ldv_52068: 
< #line 273
---
> #line 298
>   goto ldv_52687;
>   ldv_52686: 
> #line 299
21512,21516c22253,22257
< #line 273
<   e = (struct drbd_epoch_entry *)__mptr;
< #line 274
<   tmp = drbd_ee_has_active_page___0(e);
< #line 274
---
> #line 299
>   peer_req = (struct drbd_peer_request *)__mptr;
> #line 300
>   tmp = drbd_peer_req_has_active_page___0(peer_req);
> #line 300
21518,21519c22259,22260
< #line 275
<     goto ldv_52067;
---
> #line 301
>     goto ldv_52685;
21523c22264
< #line 276
---
> #line 302
21525c22266
< #line 272
---
> #line 298
21527c22268
< #line 272
---
> #line 298
21529,21530c22270,22271
<   ldv_52069: ;
< #line 272
---
>   ldv_52687: ;
> #line 298
21532,21533c22273,22274
< #line 273
<     goto ldv_52068;
---
> #line 299
>     goto ldv_52686;
21537,21538c22278,22279
<   ldv_52067: ;
< #line 277
---
>   ldv_52685: ;
> #line 303
21542c22283
< #line 280 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 306 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
21546,21547c22287,22288
<   struct drbd_epoch_entry *e ;
<   struct drbd_epoch_entry *t ;
---
>   struct drbd_peer_request *peer_req ;
>   struct drbd_peer_request *t ;
21553c22294
< #line 282
---
> #line 308
21555c22296
< #line 282
---
> #line 308
21557,21563c22298,22304
< #line 285
<   spin_lock_irq(& mdev->req_lock);
< #line 286
<   reclaim_net_ee(mdev, & reclaimed);
< #line 287
<   spin_unlock_irq(& mdev->req_lock);
< #line 289
---
> #line 311
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 312
>   reclaim_finished_net_peer_reqs(mdev, & reclaimed);
> #line 313
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 315
21565,21578c22306,22319
< #line 289
<   e = (struct drbd_epoch_entry *)__mptr;
< #line 289
<   __mptr___0 = (struct list_head  const  *)e->w.list.next;
< #line 289
<   t = (struct drbd_epoch_entry *)__mptr___0;
< #line 289
<   goto ldv_52083;
<   ldv_52082: 
< #line 290
<   drbd_free_some_ee(mdev, e, 1);
< #line 289
<   e = t;
< #line 289
---
> #line 315
>   peer_req = (struct drbd_peer_request *)__mptr;
> #line 315
>   __mptr___0 = (struct list_head  const  *)peer_req->w.list.next;
> #line 315
>   t = (struct drbd_peer_request *)__mptr___0;
> #line 315
>   goto ldv_52701;
>   ldv_52700: 
> #line 316
>   __drbd_free_peer_req(mdev, peer_req, 1);
> #line 315
>   peer_req = t;
> #line 315
21580,21586c22321,22327
< #line 289
<   t = (struct drbd_epoch_entry *)__mptr___1;
<   ldv_52083: ;
< #line 289
<   if ((unsigned long )(& e->w.list) != (unsigned long )(& reclaimed)) {
< #line 290
<     goto ldv_52082;
---
> #line 315
>   t = (struct drbd_peer_request *)__mptr___1;
>   ldv_52701: ;
> #line 315
>   if ((unsigned long )(& peer_req->w.list) != (unsigned long )(& reclaimed)) {
> #line 316
>     goto ldv_52700;
21591c22332
< #line 294
---
> #line 320
21595,21596c22336,22337
< #line 305 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static struct page *drbd_pp_alloc(struct drbd_conf *mdev , unsigned int number , bool retry ) 
---
> #line 331 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> struct page *drbd_alloc_pages(struct drbd_conf *mdev , unsigned int number , bool retry___0 ) 
21598a22340
>   struct net_conf *nc ;
21600a22343,22345
>   int mxb ;
>   struct net_conf *_________p1 ;
>   bool __warned ;
21603c22348
<   struct task_struct *tmp___2 ;
---
>   int tmp___2 ;
21604a22350,22351
>   struct task_struct *tmp___4 ;
>   int tmp___5 ;
21607c22354
< #line 307
---
> #line 334
21609c22356
< #line 308
---
> #line 336
21611c22358
< #line 308
---
> #line 336
21613c22360
< #line 308
---
> #line 336
21615c22362
< #line 308
---
> #line 336
21617c22364
< #line 308
---
> #line 336
21619c22366
< #line 308
---
> #line 336
21621,21626c22368,22387
< #line 312
<   tmp___0 = atomic_read((atomic_t const   *)(& mdev->pp_in_use));
< #line 312
<   if (tmp___0 < (mdev->net_conf)->max_buffers) {
< #line 313
<     page = drbd_pp_first_pages_or_try_alloc(mdev, (int )number);
---
> #line 341
>   rcu_read_lock___2();
> #line 342
>   _________p1 = *((struct net_conf * volatile  *)(& (mdev->tconn)->net_conf));
> #line 342
>   tmp___0 = debug_lockdep_rcu_enabled();
> #line 342
>   if (tmp___0 != 0 && ! __warned) {
> #line 342
>     tmp___1 = rcu_read_lock_held();
> #line 342
>     if (tmp___1 == 0 && 1) {
> #line 342
>       __warned = 1;
> #line 342
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>                              342, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
21630,21633c22391,22409
< #line 315
<   goto ldv_52094;
<   ldv_52093: 
< #line 316
---
> #line 342
>   nc = _________p1;
> #line 343
>   mxb = (unsigned long )nc != (unsigned long )((struct net_conf *)0) ? (int )nc->max_buffers : 1000000;
> #line 344
>   rcu_read_unlock___2();
> #line 346
>   tmp___2 = atomic_read((atomic_t const   *)(& mdev->pp_in_use));
> #line 346
>   if (tmp___2 < mxb) {
> #line 347
>     page = __drbd_alloc_pages(mdev, number);
>   } else {
> 
>   }
> #line 349
>   goto ldv_52717;
>   ldv_52716: 
> #line 350
21635c22411
< #line 318
---
> #line 352
21637,21643c22413,22419
< #line 320
<   tmp___1 = atomic_read((atomic_t const   *)(& mdev->pp_in_use));
< #line 320
<   if (tmp___1 < (mdev->net_conf)->max_buffers) {
< #line 321
<     page = drbd_pp_first_pages_or_try_alloc(mdev, (int )number);
< #line 322
---
> #line 354
>   tmp___3 = atomic_read((atomic_t const   *)(& mdev->pp_in_use));
> #line 354
>   if (tmp___3 < mxb) {
> #line 355
>     page = __drbd_alloc_pages(mdev, number);
> #line 356
21645,21646c22421,22422
< #line 323
<       goto ldv_52092;
---
> #line 357
>       goto ldv_52715;
21653,21656c22429,22432
< #line 326
<   if (! retry) {
< #line 327
<     goto ldv_52092;
---
> #line 360
>   if (! retry___0) {
> #line 361
>     goto ldv_52715;
21660,21669c22436,22445
< #line 329
<   tmp___2 = get_current();
< #line 329
<   tmp___3 = signal_pending(tmp___2);
< #line 329
<   if (tmp___3 != 0) {
< #line 330
<     dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "drbd_pp_alloc interrupted!\n");
< #line 331
<     goto ldv_52092;
---
> #line 363
>   tmp___4 = get_current();
> #line 363
>   tmp___5 = signal_pending(tmp___4);
> #line 363
>   if (tmp___5 != 0) {
> #line 364
>     dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "drbd_alloc_pages interrupted!\n");
> #line 365
>     goto ldv_52715;
21673c22449
< #line 334
---
> #line 368
21675,21676c22451,22452
<   ldv_52094: ;
< #line 315
---
>   ldv_52717: ;
> #line 349
21678,21679c22454,22455
< #line 316
<     goto ldv_52093;
---
> #line 350
>     goto ldv_52716;
21683,21684c22459,22460
<   ldv_52092: 
< #line 336
---
>   ldv_52715: 
> #line 370
21686c22462
< #line 338
---
> #line 372
21688c22464
< #line 339
---
> #line 373
21693c22469
< #line 340
---
> #line 374
21697,21698c22473,22474
< #line 347 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static void drbd_pp_free(struct drbd_conf *mdev , struct page *page , int is_net ) 
---
> #line 381 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static void drbd_free_pages(struct drbd_conf *mdev , struct page *page , int is_net ) 
21705c22481
< #line 349
---
> #line 383
21707c22483
< #line 352
---
> #line 386
21709c22485
< #line 353
---
> #line 387
21714,21716c22490,22492
< #line 355
<   if ((unsigned long )drbd_pp_vacant > (unsigned long )minor_count * 32UL) {
< #line 356
---
> #line 389
>   if ((unsigned long )drbd_pp_vacant > (unsigned long )minor_count * 256UL) {
> #line 390
21719c22495
< #line 359
---
> #line 393
21721c22497
< #line 360
---
> #line 394
21723c22499
< #line 361
---
> #line 395
21725c22501
< #line 362
---
> #line 396
21727c22503
< #line 363
---
> #line 397
21730c22506
< #line 365
---
> #line 399
21732c22508
< #line 366
---
> #line 400
21734c22510
< #line 367
---
> #line 401
21740c22516
< #line 369
---
> #line 403
21742c22518
< #line 370
---
> #line 404
21746,21748c22522,22524
< #line 387 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< struct drbd_epoch_entry *drbd_alloc_ee(struct drbd_conf *mdev , u64 id , sector_t sector ,
<                                        unsigned int data_size , gfp_t gfp_mask ) 
---
> #line 421 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> struct drbd_peer_request *drbd_alloc_peer_req(struct drbd_conf *mdev , u64 id , sector_t sector ,
>                                               unsigned int data_size , gfp_t gfp_mask ) 
21750c22526
<   struct drbd_epoch_entry *e ;
---
>   struct drbd_peer_request *peer_req ;
21757c22533
< #line 394
---
> #line 425
21759c22535
< #line 395
---
> #line 426
21761c22537
< #line 397
---
> #line 428
21763c22539
< #line 397
---
> #line 428
21765c22541
< #line 398
---
> #line 429
21770c22546
< #line 400
---
> #line 431
21772,21776c22548,22552
< #line 400
<   e = (struct drbd_epoch_entry *)tmp___0;
< #line 401
<   if ((unsigned long )e == (unsigned long )((struct drbd_epoch_entry *)0)) {
< #line 402
---
> #line 431
>   peer_req = (struct drbd_peer_request *)tmp___0;
> #line 432
>   if ((unsigned long )peer_req == (unsigned long )((struct drbd_peer_request *)0)) {
> #line 433
21778,21779c22554,22556
< #line 403
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "alloc_ee: Allocation of an EE failed\n");
---
> #line 434
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "%s: allocation failed\n",
>               "drbd_alloc_peer_req");
21783c22560
< #line 404
---
> #line 435
21788c22565
< #line 407
---
> #line 438
21790,21792c22567,22569
< #line 408
<     page = drbd_pp_alloc(mdev, nr_pages, (gfp_mask & 16U) != 0U);
< #line 409
---
> #line 439
>     page = drbd_alloc_pages(mdev, nr_pages, (gfp_mask & 16U) != 0U);
> #line 440
21794c22571
< #line 410
---
> #line 441
21802,21821c22579,22602
< #line 413
<   INIT_HLIST_NODE(& e->collision);
< #line 414
<   e->epoch = 0;
< #line 415
<   e->mdev = mdev;
< #line 416
<   e->pages = page;
< #line 417
<   atomic_set(& e->pending_bios, 0);
< #line 418
<   e->size = data_size;
< #line 419
<   e->flags = 0UL;
< #line 420
<   e->sector = sector;
< #line 421
<   e->ldv_49189.block_id = id;
< #line 423
<   return (e);
---
> #line 444
>   drbd_clear_interval(& peer_req->i);
> #line 445
>   peer_req->i.size = data_size;
> #line 446
>   peer_req->i.sector = sector;
> #line 447
>   peer_req->i.local = 0;
> #line 448
>   peer_req->i.waiting = 0;
> #line 450
>   peer_req->epoch = 0;
> #line 451
>   peer_req->w.ldv_49807.mdev = mdev;
> #line 452
>   peer_req->pages = page;
> #line 453
>   atomic_set(& peer_req->pending_bios, 0);
> #line 454
>   peer_req->flags = 0UL;
> #line 459
>   peer_req->ldv_50726.block_id = id;
> #line 461
>   return (peer_req);
21823,21825c22604,22606
< #line 426
<   mempool_free((void *)e, drbd_ee_mempool);
< #line 427
---
> #line 464
>   mempool_free((void *)peer_req, drbd_ee_mempool);
> #line 465
21829,21830c22610,22612
< #line 430 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< void drbd_free_some_ee(struct drbd_conf *mdev , struct drbd_epoch_entry *e , int is_net ) 
---
> #line 468 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> void __drbd_free_peer_req(struct drbd_conf *mdev , struct drbd_peer_request *peer_req ,
>                           int is_net ) 
21833c22615,22616
<   int tmp___0 ;
---
>   bool tmp___0 ;
>   int tmp___1 ;
21836,21839c22619,22622
< #line 432
<   if ((e->flags & 16UL) != 0UL) {
< #line 433
<     kfree((void const   *)e->ldv_49189.digest);
---
> #line 471
>   if ((peer_req->flags & 16UL) != 0UL) {
> #line 472
>     kfree((void const   *)peer_req->ldv_50726.digest);
21843,21847c22626,22630
< #line 434
<   drbd_pp_free(mdev, e->pages, is_net);
< #line 435
<   tmp = atomic_read((atomic_t const   *)(& e->pending_bios));
< #line 435
---
> #line 473
>   drbd_free_pages(mdev, peer_req->pages, is_net);
> #line 474
>   tmp = atomic_read((atomic_t const   *)(& peer_req->pending_bios));
> #line 474
21849,21852c22632,22635
< #line 435
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( atomic_read(&e->pending_bios) == 0 ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             435);
---
> #line 474
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( atomic_read(&peer_req->pending_bios) == 0 ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>             474);
21856,21863c22639,22654
< #line 436
<   tmp___0 = hlist_unhashed((struct hlist_node  const  *)(& e->collision));
< #line 436
<   if (tmp___0 == 0) {
< #line 436
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( hlist_unhashed(&e->collision) ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             436);
---
> #line 475
>   tmp___0 = drbd_interval_empty(& peer_req->i);
> #line 475
>   if (tmp___0) {
> #line 475
>     tmp___1 = 0;
>   } else {
> #line 475
>     tmp___1 = 1;
>   }
> #line 475
>   if (tmp___1) {
> #line 475
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( drbd_interval_empty(&peer_req->i) ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>             475);
21867,21869c22658,22660
< #line 437
<   mempool_free((void *)e, drbd_ee_mempool);
< #line 438
---
> #line 476
>   mempool_free((void *)peer_req, drbd_ee_mempool);
> #line 477
21873,21874c22664,22665
< #line 440 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< int drbd_release_ee(struct drbd_conf *mdev , struct list_head *list ) 
---
> #line 479 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> int drbd_free_peer_reqs(struct drbd_conf *mdev , struct list_head *list ) 
21877,21878c22668,22669
<   struct drbd_epoch_entry *e ;
<   struct drbd_epoch_entry *t ;
---
>   struct drbd_peer_request *peer_req ;
>   struct drbd_peer_request *t ;
21886c22677
< #line 442
---
> #line 481
21888c22679
< #line 442
---
> #line 481
21890c22681
< #line 444
---
> #line 483
21892c22683
< #line 445
---
> #line 484
21894,21896c22685,22687
< #line 447
<   spin_lock_irq(& mdev->req_lock);
< #line 448
---
> #line 486
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 487
21898,21900c22689,22691
< #line 449
<   spin_unlock_irq(& mdev->req_lock);
< #line 451
---
> #line 488
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 490
21902,21913c22693,22704
< #line 451
<   e = (struct drbd_epoch_entry *)__mptr;
< #line 451
<   __mptr___0 = (struct list_head  const  *)e->w.list.next;
< #line 451
<   t = (struct drbd_epoch_entry *)__mptr___0;
< #line 451
<   goto ldv_52135;
<   ldv_52134: 
< #line 452
<   drbd_free_some_ee(mdev, e, is_net);
< #line 453
---
> #line 490
>   peer_req = (struct drbd_peer_request *)__mptr;
> #line 490
>   __mptr___0 = (struct list_head  const  *)peer_req->w.list.next;
> #line 490
>   t = (struct drbd_peer_request *)__mptr___0;
> #line 490
>   goto ldv_52759;
>   ldv_52758: 
> #line 491
>   __drbd_free_peer_req(mdev, peer_req, is_net);
> #line 492
21915,21917c22706,22708
< #line 451
<   e = t;
< #line 451
---
> #line 490
>   peer_req = t;
> #line 490
21919,21925c22710,22716
< #line 451
<   t = (struct drbd_epoch_entry *)__mptr___1;
<   ldv_52135: ;
< #line 451
<   if ((unsigned long )(& e->w.list) != (unsigned long )(& work_list)) {
< #line 452
<     goto ldv_52134;
---
> #line 490
>   t = (struct drbd_peer_request *)__mptr___1;
>   ldv_52759: ;
> #line 490
>   if ((unsigned long )(& peer_req->w.list) != (unsigned long )(& work_list)) {
> #line 491
>     goto ldv_52758;
21930c22721
< #line 455
---
> #line 494
21934,21935c22725,22726
< #line 468 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int drbd_process_done_ee(struct drbd_conf *mdev ) 
---
> #line 500 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int drbd_finish_peer_reqs(struct drbd_conf *mdev ) 
21939,21941c22730,22732
<   struct drbd_epoch_entry *e ;
<   struct drbd_epoch_entry *t ;
<   int ok ;
---
>   struct drbd_peer_request *peer_req ;
>   struct drbd_peer_request *t ;
>   int err ;
21947c22738
<   int tmp ;
---
>   int err2 ;
21951c22742
< #line 470
---
> #line 502
21953c22744
< #line 470
---
> #line 502
21955c22746
< #line 471
---
> #line 503
21957c22748
< #line 471
---
> #line 503
21959,21965c22750,22756
< #line 473
<   ok = (int )mdev->state.ldv_39979.conn > 8;
< #line 475
<   spin_lock_irq(& mdev->req_lock);
< #line 476
<   reclaim_net_ee(mdev, & reclaimed);
< #line 477
---
> #line 505
>   err = 0;
> #line 507
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 508
>   reclaim_finished_net_peer_reqs(mdev, & reclaimed);
> #line 509
21967,21969c22758,22760
< #line 478
<   spin_unlock_irq(& mdev->req_lock);
< #line 480
---
> #line 510
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 512
21971,21984c22762,22775
< #line 480
<   e = (struct drbd_epoch_entry *)__mptr;
< #line 480
<   __mptr___0 = (struct list_head  const  *)e->w.list.next;
< #line 480
<   t = (struct drbd_epoch_entry *)__mptr___0;
< #line 480
<   goto ldv_52152;
<   ldv_52151: 
< #line 481
<   drbd_free_some_ee(mdev, e, 1);
< #line 480
<   e = t;
< #line 480
---
> #line 512
>   peer_req = (struct drbd_peer_request *)__mptr;
> #line 512
>   __mptr___0 = (struct list_head  const  *)peer_req->w.list.next;
> #line 512
>   t = (struct drbd_peer_request *)__mptr___0;
> #line 512
>   goto ldv_52776;
>   ldv_52775: 
> #line 513
>   __drbd_free_peer_req(mdev, peer_req, 1);
> #line 512
>   peer_req = t;
> #line 512
21986,21992c22777,22783
< #line 480
<   t = (struct drbd_epoch_entry *)__mptr___1;
<   ldv_52152: ;
< #line 480
<   if ((unsigned long )(& e->w.list) != (unsigned long )(& reclaimed)) {
< #line 481
<     goto ldv_52151;
---
> #line 512
>   t = (struct drbd_peer_request *)__mptr___1;
>   ldv_52776: ;
> #line 512
>   if ((unsigned long )(& peer_req->w.list) != (unsigned long )(& reclaimed)) {
> #line 513
>     goto ldv_52775;
21996c22787
< #line 487
---
> #line 519
21998,22015c22789,22811
< #line 487
<   e = (struct drbd_epoch_entry *)__mptr___2;
< #line 487
<   __mptr___3 = (struct list_head  const  *)e->w.list.next;
< #line 487
<   t = (struct drbd_epoch_entry *)__mptr___3;
< #line 487
<   goto ldv_52161;
<   ldv_52160: 
< #line 489
<   tmp = (*(e->w.cb))(mdev, & e->w, ok == 0);
< #line 489
<   ok = tmp != 0 && ok != 0;
< #line 490
<   drbd_free_some_ee(mdev, e, 0);
< #line 487
<   e = t;
< #line 487
---
> #line 519
>   peer_req = (struct drbd_peer_request *)__mptr___2;
> #line 519
>   __mptr___3 = (struct list_head  const  *)peer_req->w.list.next;
> #line 519
>   t = (struct drbd_peer_request *)__mptr___3;
> #line 519
>   goto ldv_52786;
>   ldv_52785: 
> #line 523
>   err2 = (*(peer_req->w.cb))(& peer_req->w, err != 0);
> #line 524
>   if (err == 0) {
> #line 525
>     err = err2;
>   } else {
> 
>   }
> #line 526
>   __drbd_free_peer_req(mdev, peer_req, 0);
> #line 519
>   peer_req = t;
> #line 519
22017,22023c22813,22819
< #line 487
<   t = (struct drbd_epoch_entry *)__mptr___4;
<   ldv_52161: ;
< #line 487
<   if ((unsigned long )(& e->w.list) != (unsigned long )(& work_list)) {
< #line 488
<     goto ldv_52160;
---
> #line 519
>   t = (struct drbd_peer_request *)__mptr___4;
>   ldv_52786: ;
> #line 519
>   if ((unsigned long )(& peer_req->w.list) != (unsigned long )(& work_list)) {
> #line 520
>     goto ldv_52785;
22027c22823
< #line 492
---
> #line 528
22029,22030c22825,22826
< #line 494
<   return (ok);
---
> #line 530
>   return (err);
22033,22034c22829,22830
< #line 497 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< void _drbd_wait_ee_list_empty(struct drbd_conf *mdev , struct list_head *head ) 
---
> #line 533 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static void _drbd_wait_ee_list_empty(struct drbd_conf *mdev , struct list_head *head ) 
22041c22837
< #line 499
---
> #line 536
22043c22839
< #line 499
---
> #line 536
22045c22841
< #line 499
---
> #line 536
22047c22843
< #line 499
---
> #line 536
22049c22845
< #line 499
---
> #line 536
22051c22847
< #line 499
---
> #line 536
22053,22056c22849,22852
< #line 503
<   goto ldv_52169;
<   ldv_52168: 
< #line 504
---
> #line 540
>   goto ldv_52794;
>   ldv_52793: 
> #line 541
22058,22060c22854,22856
< #line 505
<   spin_unlock_irq(& mdev->req_lock);
< #line 506
---
> #line 542
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 543
22062c22858
< #line 507
---
> #line 544
22064,22067c22860,22863
< #line 508
<   spin_lock_irq(& mdev->req_lock);
<   ldv_52169: 
< #line 503
---
> #line 545
>   spin_lock_irq(& (mdev->tconn)->req_lock);
>   ldv_52794: 
> #line 540
22069c22865
< #line 503
---
> #line 540
22071,22072c22867,22868
< #line 504
<     goto ldv_52168;
---
> #line 541
>     goto ldv_52793;
22077c22873
< #line 508
---
> #line 545
22081,22082c22877,22878
< #line 512 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< void drbd_wait_ee_list_empty(struct drbd_conf *mdev , struct list_head *head ) 
---
> #line 549 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static void drbd_wait_ee_list_empty(struct drbd_conf *mdev , struct list_head *head ) 
22087,22089c22883,22885
< #line 514
<   spin_lock_irq(& mdev->req_lock);
< #line 515
---
> #line 552
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 553
22091,22093c22887,22889
< #line 516
<   spin_unlock_irq(& mdev->req_lock);
< #line 517
---
> #line 554
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 555
22097,22158c22893,22894
< #line 521 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int drbd_accept(struct drbd_conf *mdev , char const   **what , struct socket *sock ,
<                        struct socket **newsock ) 
< { 
<   struct sock *sk ;
<   int err ;
< 
<   {
< #line 524
<   sk = sock->sk;
< #line 525
<   err = 0;
< #line 527
<   *what = "listen";
< #line 528
<   err = (*((sock->ops)->listen))(sock, 5);
< #line 529
<   if (err < 0) {
< #line 530
<     goto out;
<   } else {
< 
<   }
< #line 532
<   *what = "sock_create_lite";
< #line 533
<   err = sock_create_lite((int )sk->__sk_common.skc_family, (int )sk->sk_type, (int )sk->sk_protocol,
<                          newsock);
< #line 535
<   if (err < 0) {
< #line 536
<     goto out;
<   } else {
< 
<   }
< #line 538
<   *what = "accept";
< #line 539
<   err = (*((sock->ops)->accept))(sock, *newsock, 0);
< #line 540
<   if (err < 0) {
< #line 541
<     sock_release(*newsock);
< #line 542
<     *newsock = 0;
< #line 543
<     goto out;
<   } else {
< 
<   }
< #line 545
<   (*newsock)->ops = sock->ops;
< #line 546
<   __module_get(((*newsock)->ops)->owner);
<   out: ;
< #line 549
<   return (err);
< }
< }
< #line 552 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int drbd_recv_short(struct drbd_conf *mdev , struct socket *sock , void *buf ,
<                            size_t size , int flags ) 
---
> #line 557 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int drbd_recv_short(struct socket *sock , void *buf , size_t size , int flags ) 
22170c22906
< #line 556
---
> #line 560
22172,22173d22907
< #line 556
<   iov.iov_len = size;
22174a22909,22910
>   iov.iov_len = size;
> #line 564
22176c22912
< #line 560
---
> #line 564
22178c22914
< #line 560
---
> #line 564
22180c22916
< #line 560
---
> #line 564
22182c22918
< #line 560
---
> #line 564
22184c22920
< #line 560
---
> #line 564
22186c22922
< #line 560
---
> #line 564
22188,22190c22924,22926
< #line 567
<   tmp = current_thread_info___0();
< #line 567
---
> #line 571
>   tmp = current_thread_info___2();
> #line 571
22192,22194c22928,22930
< #line 568
<   tmp___0 = current_thread_info___0();
< #line 568
---
> #line 572
>   tmp___0 = current_thread_info___2();
> #line 572
22196c22932
< #line 568
---
> #line 572
22198c22934
< #line 569
---
> #line 573
22200,22202c22936,22938
< #line 570
<   tmp___1 = current_thread_info___0();
< #line 570
---
> #line 574
>   tmp___1 = current_thread_info___2();
> #line 574
22204c22940
< #line 572
---
> #line 576
22208,22209c22944,22945
< #line 575 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int drbd_recv(struct drbd_conf *mdev , void *buf , size_t size ) 
---
> #line 579 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int drbd_recv(struct drbd_tconn *tconn , void *buf , size_t size ) 
22211,22213d22946
<   mm_segment_t oldfs ;
<   struct kvec iov ;
<   struct msghdr msg ;
22215,22218d22947
<   struct thread_info *tmp ;
<   struct thread_info *tmp___0 ;
<   mm_segment_t __constr_expr_0 ;
<   struct thread_info *tmp___1 ;
22219a22949,22952
>   struct net_conf *_________p1 ;
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
22222,22223c22955,22956
<   struct task_struct *tmp___2 ;
<   int tmp___3 ;
---
>   struct task_struct *tmp___1 ;
>   int tmp___2 ;
22228,22262c22961,22963
< #line 578
<   iov.iov_base = buf;
< #line 578
<   iov.iov_len = size;
< #line 582
<   msg.msg_name = 0;
< #line 582
<   msg.msg_namelen = 0;
< #line 582
<   msg.msg_iov = (struct iovec *)(& iov);
< #line 582
<   msg.msg_iovlen = 1UL;
< #line 582
<   msg.msg_control = 0;
< #line 582
<   msg.msg_controllen = 0UL;
< #line 582
<   msg.msg_flags = 16640U;
< #line 589
<   tmp = current_thread_info___0();
< #line 589
<   oldfs = tmp->addr_limit;
< #line 590
<   tmp___0 = current_thread_info___0();
< #line 590
<   __constr_expr_0.seg = 0xffffffffffffffffUL;
< #line 590
<   tmp___0->addr_limit = __constr_expr_0;
< #line 591
<   rv = sock_recvmsg(mdev->data.socket, & msg, size, (int )msg.msg_flags);
< #line 592
<   tmp___1 = current_thread_info___0();
< #line 592
<   tmp___1->addr_limit = oldfs;
< #line 594
---
> #line 583
>   rv = drbd_recv_short(tconn->data.socket, buf, size, 0);
> #line 585
22264c22965
< #line 595
---
> #line 586
22266,22267c22967,22968
< #line 596
<       _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "sock was reset by peer\n");
---
> #line 587
>       printk("\016d-con %s: sock was reset by peer\n", tconn->name);
22269c22970
< #line 597
---
> #line 588
22271,22273c22972,22973
< #line 598
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "sock_recvmsg returned %d\n",
<               rv);
---
> #line 589
>       printk("\vd-con %s: sock_recvmsg returned %d\n", tconn->name, rv);
22275c22975
< #line 599
---
> #line 590
22277,22287c22977,23014
< #line 600
<       tmp___3 = drbd_test_flag(mdev, DISCONNECT_SENT);
< #line 600
<       if (tmp___3 != 0) {
< #line 602
<         __ret = (long )(((mdev->net_conf)->ping_timeo * 250) / 10);
< #line 602
<         if ((int )mdev->state.ldv_39979.conn > 9) {
< #line 602
<           tmp___2 = get_current();
< #line 602
---
> #line 591
>       tmp___2 = constant_test_bit(12U, (unsigned long const volatile   *)(& tconn->flags));
> #line 591
>       if (tmp___2 != 0) {
> #line 593
>         rcu_read_lock___2();
> #line 594
>         _________p1 = *((struct net_conf * volatile  *)(& tconn->net_conf));
> #line 594
>         tmp = debug_lockdep_rcu_enabled();
> #line 594
>         if (tmp != 0 && ! __warned) {
> #line 594
>           tmp___0 = rcu_read_lock_held();
> #line 594
>           if (tmp___0 == 0 && 1) {
> #line 594
>             __warned = 1;
> #line 594
>             lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>                                    594, "suspicious rcu_dereference_check() usage");
>           } else {
> 
>           }
>         } else {
> 
>         }
> #line 594
>         t = (long )((_________p1->ping_timeo * 250U) / 10U);
> #line 595
>         rcu_read_unlock___2();
> #line 597
>         __ret = t;
> #line 597
>         if ((unsigned int )tconn->cstate > 8U) {
> #line 597
>           tmp___1 = get_current();
> #line 597
22289,22291c23016,23018
< #line 602
<           __wait.private = (void *)tmp___2;
< #line 602
---
> #line 597
>           __wait.private = (void *)tmp___1;
> #line 597
22293c23020
< #line 602
---
> #line 597
22295c23022
< #line 602
---
> #line 597
22297,22303c23024,23030
<           ldv_52210: 
< #line 602
<           prepare_to_wait(& mdev->state_wait, & __wait, 2);
< #line 602
<           if ((int )mdev->state.ldv_39979.conn <= 9) {
< #line 602
<             goto ldv_52209;
---
>           ldv_52824: 
> #line 597
>           prepare_to_wait(& tconn->ping_wait, & __wait, 2);
> #line 597
>           if ((unsigned int )tconn->cstate <= 8U) {
> #line 597
>             goto ldv_52823;
22307c23034
< #line 602
---
> #line 597
22309c23036
< #line 602
---
> #line 597
22311,22312c23038,23039
< #line 602
<             goto ldv_52209;
---
> #line 597
>             goto ldv_52823;
22316,22320c23043,23047
< #line 602
<           goto ldv_52210;
<           ldv_52209: 
< #line 602
<           finish_wait(& mdev->state_wait, & __wait);
---
> #line 597
>           goto ldv_52824;
>           ldv_52823: 
> #line 597
>           finish_wait(& tconn->ping_wait, & __wait);
22324c23051
< #line 602
---
> #line 597
22326c23053
< #line 604
---
> #line 599
22328c23055
< #line 605
---
> #line 600
22336,22337c23063,23064
< #line 607
<       _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "sock was shut down by peer\n");
---
> #line 602
>       printk("\016d-con %s: sock was shut down by peer\n", tconn->name);
22344c23071
< #line 610
---
> #line 605
22346c23073
< #line 611
---
> #line 606
22348,22350c23075,23077
< #line 611
<     val.ldv_39979.conn = 4U;
< #line 611
---
> #line 606
>     val.ldv_40024.conn = 4U;
> #line 606
22352,22355c23079,23082
< #line 611
<     mask.ldv_39979.conn = 31U;
< #line 611
<     drbd_force_state(mdev, mask, val);
---
> #line 606
>     mask.ldv_40024.conn = 31U;
> #line 606
>     conn_request_state(tconn, mask, val, CS_HARD);
22360c23087
< #line 614
---
> #line 609
22364c23091,23146
< #line 622 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 612 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int drbd_recv_all(struct drbd_tconn *tconn , void *buf , size_t size ) 
> { 
>   int err ;
> 
>   {
> #line 616
>   err = drbd_recv(tconn, buf, size);
> #line 617
>   if ((size_t )err != size) {
> #line 618
>     if (err >= 0) {
> #line 619
>       err = -5;
>     } else {
> #line 621
>       err = 0;
>     }
>   } else {
> 
>   }
> #line 622
>   return (err);
> }
> }
> #line 625 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int drbd_recv_all_warn(struct drbd_tconn *tconn , void *buf , size_t size ) 
> { 
>   int err ;
>   struct task_struct *tmp ;
>   int tmp___0 ;
> 
>   {
> #line 629
>   err = drbd_recv_all(tconn, buf, size);
> #line 630
>   if (err != 0) {
> #line 630
>     tmp = get_current();
> #line 630
>     tmp___0 = signal_pending(tmp);
> #line 630
>     if (tmp___0 == 0) {
> #line 631
>       printk("\fd-con %s: short read (expected size %d)\n", tconn->name, (int )size);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 632
>   return (err);
> }
> }
> #line 640 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
22370c23152
< #line 626
---
> #line 644
22372c23154
< #line 627
---
> #line 645
22374c23156
< #line 628
---
> #line 646
22379c23161
< #line 630
---
> #line 648
22381c23163
< #line 631
---
> #line 649
22383c23165
< #line 632
---
> #line 650
22388c23170
< #line 634
---
> #line 652
22392,22393c23174,23175
< #line 636 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static struct socket *drbd_try_connect(struct drbd_conf *mdev ) 
---
> #line 654 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static struct socket *drbd_try_connect(struct drbd_tconn *tconn ) 
22397a23180,23181
>   struct sockaddr_in6 peer_in6 ;
>   struct net_conf *nc ;
22398a23183,23187
>   int peer_addr_len ;
>   int my_addr_len ;
>   int sndbuf_size ;
>   int rcvbuf_size ;
>   int connect_int ;
22399a23189,23190
>   struct net_conf *_________p1 ;
>   bool __warned ;
22401,22402c23192
<   long tmp___0 ;
<   size_t __len ;
---
>   int tmp___0 ;
22404a23195
>   size_t __len ;
22405a23197,23201
>   int __min1___0 ;
>   int __min2___0 ;
>   size_t __len___0 ;
>   void *__ret___0 ;
>   long tmp___1 ;
22410c23206
< #line 642
---
> #line 663
22412,22417c23208,23227
< #line 644
<   tmp = get_net_conf(mdev);
< #line 644
<   if (tmp == 0) {
< #line 645
<     return (0);
---
> #line 665
>   rcu_read_lock___2();
> #line 666
>   _________p1 = *((struct net_conf * volatile  *)(& tconn->net_conf));
> #line 666
>   tmp = debug_lockdep_rcu_enabled();
> #line 666
>   if (tmp != 0 && ! __warned) {
> #line 666
>     tmp___0 = rcu_read_lock_held();
> #line 666
>     if (tmp___0 == 0 && 1) {
> #line 666
>       __warned = 1;
> #line 666
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>                              666, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
22421,22431c23231,23238
< #line 647
<   what = "sock_create_kern";
< #line 648
<   err = sock_create_kern((int )((struct sockaddr *)(& (mdev->net_conf)->my_addr))->sa_family,
<                          1, 6, & sock);
< #line 650
<   if (err < 0) {
< #line 651
<     sock = 0;
< #line 652
<     goto out;
---
> #line 666
>   nc = _________p1;
> #line 667
>   if ((unsigned long )nc == (unsigned long )((struct net_conf *)0)) {
> #line 668
>     rcu_read_unlock___2();
> #line 669
>     return (0);
22435,22445c23242,23252
< #line 655
<   tmp___0 = (long )((mdev->net_conf)->try_connect_int * 250);
< #line 655
<   (sock->sk)->sk_sndtimeo = tmp___0;
< #line 655
<   (sock->sk)->sk_rcvtimeo = tmp___0;
< #line 657
<   drbd_setbufsize(sock, (unsigned int )(mdev->net_conf)->sndbuf_size, (unsigned int )(mdev->net_conf)->rcvbuf_size);
< #line 667
<   __min1 = (mdev->net_conf)->my_addr_len;
< #line 667
---
> #line 671
>   sndbuf_size = (int )nc->sndbuf_size;
> #line 672
>   rcvbuf_size = (int )nc->rcvbuf_size;
> #line 673
>   connect_int = (int )nc->connect_int;
> #line 674
>   rcu_read_unlock___2();
> #line 676
>   __min1 = tconn->my_addr_len;
> #line 676
22447,22450c23254,23259
< #line 667
<   __len = (size_t )(__min1 < __min2 ? __min1 : __min2);
< #line 667
<   __ret = __builtin_memcpy((void *)(& src_in6), (void const   *)(& (mdev->net_conf)->my_addr),
---
> #line 676
>   my_addr_len = __min1 < __min2 ? __min1 : __min2;
> #line 677
>   __len = (size_t )my_addr_len;
> #line 677
>   __ret = __builtin_memcpy((void *)(& src_in6), (void const   *)(& tconn->my_addr),
22452,22454c23261,23263
< #line 669
<   if ((unsigned int )((struct sockaddr *)(& (mdev->net_conf)->my_addr))->sa_family == 10U) {
< #line 670
---
> #line 679
>   if ((unsigned int )((struct sockaddr *)(& tconn->my_addr))->sa_family == 10U) {
> #line 680
22457c23266
< #line 672
---
> #line 682
22460c23269,23302
< #line 674
---
> #line 684
>   __min1___0 = tconn->peer_addr_len;
> #line 684
>   __min2___0 = 28;
> #line 684
>   peer_addr_len = __min1___0 < __min2___0 ? __min1___0 : __min2___0;
> #line 685
>   __len___0 = (size_t )peer_addr_len;
> #line 685
>   __ret___0 = __builtin_memcpy((void *)(& peer_in6), (void const   *)(& tconn->peer_addr),
>                                __len___0);
> #line 687
>   what = "sock_create_kern";
> #line 688
>   err = sock_create_kern((int )((struct sockaddr *)(& src_in6))->sa_family, 1, 6,
>                          & sock);
> #line 690
>   if (err < 0) {
> #line 691
>     sock = 0;
> #line 692
>     goto out;
>   } else {
> 
>   }
> #line 695
>   tmp___1 = (long )(connect_int * 250);
> #line 695
>   (sock->sk)->sk_sndtimeo = tmp___1;
> #line 695
>   (sock->sk)->sk_rcvtimeo = tmp___1;
> #line 697
>   drbd_setbufsize(sock, (unsigned int )sndbuf_size, (unsigned int )rcvbuf_size);
> #line 706
22462,22464c23304,23306
< #line 675
<   err = (*((sock->ops)->bind))(sock, (struct sockaddr *)(& src_in6), (mdev->net_conf)->my_addr_len);
< #line 678
---
> #line 707
>   err = (*((sock->ops)->bind))(sock, (struct sockaddr *)(& src_in6), my_addr_len);
> #line 708
22466c23308
< #line 679
---
> #line 709
22471c23313
< #line 683
---
> #line 713
22473c23315
< #line 684
---
> #line 714
22475,22477c23317,23319
< #line 685
<   err = (*((sock->ops)->connect))(sock, (struct sockaddr *)(& (mdev->net_conf)->peer_addr),
<                                   (mdev->net_conf)->peer_addr_len, 0);
---
> #line 715
>   err = (*((sock->ops)->connect))(sock, (struct sockaddr *)(& peer_in6), peer_addr_len,
>                                   0);
22479c23321
< #line 690
---
> #line 718
22481c23323
< #line 691
---
> #line 719
22483c23325
< #line 692
---
> #line 720
22485c23327
< #line 693
---
> #line 721
22490c23332
< #line 695
---
> #line 723
22501c23343
< #line 702
---
> #line 730
22503,22504c23345,23346
< #line 703
<     goto ldv_52249;
---
> #line 731
>     goto ldv_52888;
22506,22508c23348,23349
< #line 705
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "%s failed, err = %d\n",
<             what, err);
---
> #line 733
>     printk("\vd-con %s: %s failed, err = %d\n", tconn->name, what, err);
22510,22511c23351,23352
<     ldv_52249: ;
< #line 707
---
>     ldv_52888: ;
> #line 735
22513c23354
< #line 708
---
> #line 736
22515,22517c23356,23358
< #line 708
<       val.ldv_39979.conn = 1U;
< #line 708
---
> #line 736
>       val.ldv_40024.conn = 1U;
> #line 736
22519,22522c23360,23363
< #line 708
<       mask.ldv_39979.conn = 31U;
< #line 708
<       drbd_force_state(mdev, mask, val);
---
> #line 736
>       mask.ldv_40024.conn = 31U;
> #line 736
>       conn_request_state(tconn, mask, val, CS_HARD);
22529,22531c23370
< #line 710
<   put_net_conf(mdev);
< #line 711
---
> #line 739
22535,22536c23374,23399
< #line 714 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static struct socket *drbd_wait_for_connect(struct drbd_conf *mdev ) 
---
> #line 750 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static void drbd_incoming_connection(struct sock *sk ) 
> { 
>   struct accept_wait_data *ad ;
>   void (*state_change)(struct sock * ) ;
> 
>   {
> #line 752
>   ad = (struct accept_wait_data *)sk->sk_user_data;
> #line 755
>   state_change = ad->original_sk_state_change;
> #line 756
>   if ((unsigned int )((unsigned char )sk->__sk_common.skc_state) == 1U) {
> #line 757
>     complete(& ad->door_bell);
>   } else {
> 
>   }
> #line 758
>   (*state_change)(sk);
> #line 759
>   return;
> }
> }
> #line 761 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int prepare_listen_socket(struct drbd_tconn *tconn , struct accept_wait_data *ad ) 
22538d23400
<   int timeo ;
22540c23402,23405
<   struct socket *s_estab ;
---
>   int sndbuf_size ;
>   int rcvbuf_size ;
>   int my_addr_len ;
>   struct sockaddr_in6 my_addr ;
22541a23407
>   struct net_conf *nc ;
22542a23409,23410
>   struct net_conf *_________p1 ;
>   bool __warned ;
22544c23412,23416
<   u32 tmp___0 ;
---
>   int tmp___0 ;
>   int __min1 ;
>   int __min2 ;
>   size_t __len ;
>   void *__ret ;
22549,22556c23421,23440
< #line 717
<   s_estab = 0;
< #line 720
<   tmp = get_net_conf(mdev);
< #line 720
<   if (tmp == 0) {
< #line 721
<     return (0);
---
> #line 769
>   rcu_read_lock___2();
> #line 770
>   _________p1 = *((struct net_conf * volatile  *)(& tconn->net_conf));
> #line 770
>   tmp = debug_lockdep_rcu_enabled();
> #line 770
>   if (tmp != 0 && ! __warned) {
> #line 770
>     tmp___0 = rcu_read_lock_held();
> #line 770
>     if (tmp___0 == 0 && 1) {
> #line 770
>       __warned = 1;
> #line 770
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>                              770, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
22560c23444,23472
< #line 723
---
> #line 770
>   nc = _________p1;
> #line 771
>   if ((unsigned long )nc == (unsigned long )((struct net_conf *)0)) {
> #line 772
>     rcu_read_unlock___2();
> #line 773
>     return (-5);
>   } else {
> 
>   }
> #line 775
>   sndbuf_size = (int )nc->sndbuf_size;
> #line 776
>   rcvbuf_size = (int )nc->rcvbuf_size;
> #line 777
>   rcu_read_unlock___2();
> #line 779
>   __min1 = tconn->my_addr_len;
> #line 779
>   __min2 = 28;
> #line 779
>   my_addr_len = __min1 < __min2 ? __min1 : __min2;
> #line 780
>   __len = (size_t )my_addr_len;
> #line 780
>   __ret = __builtin_memcpy((void *)(& my_addr), (void const   *)(& tconn->my_addr),
>                            __len);
> #line 782
22562,22565c23474,23477
< #line 724
<   err = sock_create_kern((int )((struct sockaddr *)(& (mdev->net_conf)->my_addr))->sa_family,
<                          1, 6, & s_listen);
< #line 726
---
> #line 783
>   err = sock_create_kern((int )((struct sockaddr *)(& my_addr))->sa_family, 1, 6,
>                          & s_listen);
> #line 785
22567c23479
< #line 727
---
> #line 786
22569c23481
< #line 728
---
> #line 787
22574,22580c23486
< #line 731
<   timeo = (mdev->net_conf)->try_connect_int * 250;
< #line 732
<   tmp___0 = random32();
< #line 732
<   timeo = ((int )tmp___0 & 1 ? timeo / 7 : - timeo / 7) + timeo;
< #line 734
---
> #line 790
22582,22588c23488,23490
< #line 735
<   (s_listen->sk)->sk_rcvtimeo = (long )timeo;
< #line 736
<   (s_listen->sk)->sk_sndtimeo = (long )timeo;
< #line 737
<   drbd_setbufsize(s_listen, (unsigned int )(mdev->net_conf)->sndbuf_size, (unsigned int )(mdev->net_conf)->rcvbuf_size);
< #line 740
---
> #line 791
>   drbd_setbufsize(s_listen, (unsigned int )sndbuf_size, (unsigned int )rcvbuf_size);
> #line 793
22590,22593c23492,23494
< #line 741
<   err = (*((s_listen->ops)->bind))(s_listen, (struct sockaddr *)(& (mdev->net_conf)->my_addr),
<                                    (mdev->net_conf)->my_addr_len);
< #line 744
---
> #line 794
>   err = (*((s_listen->ops)->bind))(s_listen, (struct sockaddr *)(& my_addr), my_addr_len);
> #line 795
22595c23496
< #line 745
---
> #line 796
22600,22601c23501,23525
< #line 747
<   err = drbd_accept(mdev, & what, s_listen, & s_estab);
---
> #line 798
>   ad->s_listen = s_listen;
> #line 799
>   _raw_write_lock_bh(& (s_listen->sk)->sk_callback_lock);
> #line 800
>   ad->original_sk_state_change = (s_listen->sk)->sk_state_change;
> #line 801
>   (s_listen->sk)->sk_state_change = & drbd_incoming_connection;
> #line 802
>   (s_listen->sk)->sk_user_data = (void *)ad;
> #line 803
>   _raw_write_unlock_bh(& (s_listen->sk)->sk_callback_lock);
> #line 805
>   what = "listen";
> #line 806
>   err = (*((s_listen->ops)->listen))(s_listen, 5);
> #line 807
>   if (err < 0) {
> #line 808
>     goto out;
>   } else {
> 
>   }
> #line 810
>   return (0);
22603c23527
< #line 750
---
> #line 812
22605c23529
< #line 751
---
> #line 813
22610c23534
< #line 752
---
> #line 814
22612c23536
< #line 753
---
> #line 815
22614,22617c23538,23540
< #line 754
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "%s failed, err = %d\n",
<               what, err);
< #line 755
---
> #line 816
>       printk("\vd-con %s: %s failed, err = %d\n", tconn->name, what, err);
> #line 817
22619,22621c23542,23544
< #line 755
<       val.ldv_39979.conn = 1U;
< #line 755
---
> #line 817
>       val.ldv_40024.conn = 1U;
> #line 817
22623,22626c23546,23549
< #line 755
<       mask.ldv_39979.conn = 31U;
< #line 755
<       drbd_force_state(mdev, mask, val);
---
> #line 817
>       mask.ldv_40024.conn = 31U;
> #line 817
>       conn_request_state(tconn, mask, val, CS_HARD);
22633,22636c23556,23575
< #line 758
<   put_net_conf(mdev);
< #line 760
<   return (s_estab);
---
> #line 821
>   return (-5);
> }
> }
> #line 824 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static void unregister_state_change(struct sock *sk , struct accept_wait_data *ad ) 
> { 
> 
> 
>   {
> #line 826
>   _raw_write_lock_bh(& sk->sk_callback_lock);
> #line 827
>   sk->sk_state_change = ad->original_sk_state_change;
> #line 828
>   sk->sk_user_data = 0;
> #line 829
>   _raw_write_unlock_bh(& sk->sk_callback_lock);
> #line 830
>   return;
22639,22640c23578,23579
< #line 763 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int drbd_send_fp(struct drbd_conf *mdev , struct socket *sock , enum drbd_packets cmd ) 
---
> #line 832 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static struct socket *drbd_wait_for_connect(struct drbd_tconn *tconn , struct accept_wait_data *ad ) 
22642c23581,23587
<   struct p_header80 *h ;
---
>   int timeo ;
>   int connect_int ;
>   int err ;
>   struct socket *s_estab ;
>   struct net_conf *nc ;
>   struct net_conf *_________p1 ;
>   bool __warned ;
22643a23589,23593
>   int tmp___0 ;
>   u32 tmp___1 ;
>   long tmp___2 ;
>   union drbd_state val ;
>   union drbd_state mask ;
22646,22651c23596,23687
< #line 766
<   h = & mdev->data.sbuf.header.h80;
< #line 768
<   tmp = _drbd_send_cmd(mdev, sock, cmd, h, 8UL, 0U);
< #line 768
<   return (tmp);
---
> #line 834
>   err = 0;
> #line 835
>   s_estab = 0;
> #line 838
>   rcu_read_lock___2();
> #line 839
>   _________p1 = *((struct net_conf * volatile  *)(& tconn->net_conf));
> #line 839
>   tmp = debug_lockdep_rcu_enabled();
> #line 839
>   if (tmp != 0 && ! __warned) {
> #line 839
>     tmp___0 = rcu_read_lock_held();
> #line 839
>     if (tmp___0 == 0 && 1) {
> #line 839
>       __warned = 1;
> #line 839
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>                              839, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 839
>   nc = _________p1;
> #line 840
>   if ((unsigned long )nc == (unsigned long )((struct net_conf *)0)) {
> #line 841
>     rcu_read_unlock___2();
> #line 842
>     return (0);
>   } else {
> 
>   }
> #line 844
>   connect_int = (int )nc->connect_int;
> #line 845
>   rcu_read_unlock___2();
> #line 847
>   timeo = connect_int * 250;
> #line 848
>   tmp___1 = random32();
> #line 848
>   timeo = ((int )tmp___1 & 1 ? timeo / 7 : - timeo / 7) + timeo;
> #line 850
>   tmp___2 = wait_for_completion_interruptible_timeout(& ad->door_bell, (unsigned long )timeo);
> #line 850
>   err = (int )tmp___2;
> #line 851
>   if (err <= 0) {
> #line 852
>     return (0);
>   } else {
> 
>   }
> #line 854
>   err = kernel_accept(ad->s_listen, & s_estab, 0);
> #line 855
>   if (err < 0) {
> #line 856
>     if ((err != -11 && err != -4) && err != -512) {
> #line 857
>       printk("\vd-con %s: accept failed, err = %d\n", tconn->name, err);
> #line 858
>       val.i = 0U;
> #line 858
>       val.ldv_40024.conn = 1U;
> #line 858
>       mask.i = 0U;
> #line 858
>       mask.ldv_40024.conn = 31U;
> #line 858
>       conn_request_state(tconn, mask, val, CS_HARD);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 862
>   if ((unsigned long )s_estab != (unsigned long )((struct socket *)0)) {
> #line 863
>     unregister_state_change(s_estab->sk, ad);
>   } else {
> 
>   }
> #line 865
>   return (s_estab);
22654,22655c23690,23694
< #line 771 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static enum drbd_packets drbd_recv_fp(struct drbd_conf *mdev , struct socket *sock ) 
---
> #line 868
> static int decode_header(struct drbd_tconn *tconn , void *header , struct packet_info *pi ) ;
> #line 870 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int send_first_packet(struct drbd_tconn *tconn , struct drbd_socket *sock ,
>                              enum drbd_packet cmd ) 
22657,22659c23696,23697
<   struct p_header80 *h ;
<   int rr ;
<   __u16 tmp ;
---
>   void *tmp ;
>   int tmp___0 ;
22662,22671c23700,23705
< #line 773
<   h = & mdev->data.rbuf.header.h80;
< #line 776
<   rr = drbd_recv_short(mdev, sock, (void *)h, 8UL, 0);
< #line 778
<   if (rr == 8 && h->magic == 1728214147U) {
< #line 779
<     tmp = __fswab16((int )h->command);
< #line 779
<     return ((enum drbd_packets )tmp);
---
> #line 873
>   tmp = conn_prepare_command(tconn, sock);
> #line 873
>   if ((unsigned long )tmp == (unsigned long )((void *)0)) {
> #line 874
>     return (-5);
22675,22676c23709,23754
< #line 781
<   return (65535);
---
> #line 875
>   tmp___0 = conn_send_command(tconn, sock, cmd, 0U, 0, 0U);
> #line 875
>   return (tmp___0);
> }
> }
> #line 878 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int receive_first_packet(struct drbd_tconn *tconn , struct socket *sock ) 
> { 
>   unsigned int header_size ;
>   unsigned int tmp ;
>   struct packet_info pi ;
>   int err ;
> 
>   {
> #line 880
>   tmp = drbd_header_size(tconn);
> #line 880
>   header_size = tmp;
> #line 884
>   err = drbd_recv_short(sock, tconn->data.rbuf, (size_t )header_size, 0);
> #line 885
>   if ((unsigned int )err != header_size) {
> #line 886
>     if (err >= 0) {
> #line 887
>       err = -5;
>     } else {
> 
>     }
> #line 888
>     return (err);
>   } else {
> 
>   }
> #line 890
>   err = decode_header(tconn, tconn->data.rbuf, & pi);
> #line 891
>   if (err != 0) {
> #line 892
>     return (err);
>   } else {
> 
>   }
> #line 893
>   return ((int )pi.cmd);
22679,22680c23757,23758
< #line 789 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int drbd_socket_okay(struct drbd_conf *mdev , struct socket **sock ) 
---
> #line 900 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int drbd_socket_okay(struct socket **sock ) 
22686c23764
< #line 794
---
> #line 905
22688c23766
< #line 795
---
> #line 906
22693,22695c23771,23773
< #line 797
<   rr = drbd_recv_short(mdev, *sock, (void *)(& tb), 4UL, 66);
< #line 799
---
> #line 908
>   rr = drbd_recv_short(*sock, (void *)(& tb), 4UL, 66);
> #line 910
22697c23775
< #line 800
---
> #line 911
22700c23778
< #line 802
---
> #line 913
22702c23780
< #line 803
---
> #line 914
22704c23782
< #line 804
---
> #line 915
22709,22710c23787,23788
< #line 816 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int drbd_connect(struct drbd_conf *mdev ) 
---
> #line 920 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> int drbd_connected(struct drbd_conf *mdev ) 
22712,22715c23790,23840
<   struct socket *s ;
<   struct socket *sock ;
<   struct socket *msock ;
<   int try ;
---
>   int err ;
> 
>   {
> #line 924
>   atomic_set(& mdev->packet_seq, 0);
> #line 925
>   mdev->peer_seq = 0U;
> #line 927
>   mdev->state_mutex = (mdev->tconn)->agreed_pro_version <= 99 ? & (mdev->tconn)->cstate_mutex : & mdev->own_state_mutex;
> #line 931
>   err = drbd_send_sync_param(mdev);
> #line 932
>   if (err == 0) {
> #line 933
>     err = drbd_send_sizes(mdev, 0, 0);
>   } else {
> 
>   }
> #line 934
>   if (err == 0) {
> #line 935
>     err = drbd_send_uuids(mdev);
>   } else {
> 
>   }
> #line 936
>   if (err == 0) {
> #line 937
>     err = drbd_send_current_state(mdev);
>   } else {
> 
>   }
> #line 938
>   clear_bit(2, (unsigned long volatile   *)(& mdev->flags));
> #line 939
>   clear_bit(16, (unsigned long volatile   *)(& mdev->flags));
> #line 940
>   mod_timer(& mdev->request_timer, (unsigned long )jiffies + 250UL);
> #line 941
>   return (err);
> }
> }
> #line 952 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int conn_connect(struct drbd_tconn *tconn ) 
> { 
>   struct drbd_socket sock ;
>   struct drbd_socket msock ;
>   struct drbd_conf *mdev ;
>   struct net_conf *nc ;
>   int vnr ;
>   int timeout ;
22717a23843
>   bool discard_my_data ;
22718a23845
>   struct accept_wait_data ad ;
22721c23848,23850
<   int tmp ;
---
>   enum drbd_state_rv tmp ;
>   struct lock_class_key __key ;
>   struct lock_class_key __key___0 ;
22723,22730c23852,23863
<   enum drbd_packets tmp___1 ;
<   u32 tmp___2 ;
<   struct task_struct *tmp___3 ;
<   enum drbd_thread_state tmp___4 ;
<   struct task_struct *tmp___5 ;
<   int tmp___6 ;
<   int tmp___7 ;
<   long tmp___8 ;
---
>   struct socket *s ;
>   struct net_conf *_________p1 ;
>   bool __warned ;
>   int tmp___1 ;
>   int tmp___2 ;
>   int tmp___3 ;
>   int fp ;
>   int tmp___4 ;
>   u32 tmp___5 ;
>   struct task_struct *tmp___6 ;
>   enum drbd_thread_state tmp___7 ;
>   struct task_struct *tmp___8 ;
22733c23866,23876
<   union drbd_state __ns ;
---
>   struct net_conf *_________p1___0 ;
>   bool __warned___0 ;
>   int tmp___11 ;
>   int tmp___12 ;
>   long tmp___13 ;
>   int tmp___14 ;
>   int tmp___15 ;
>   void *tmp___16 ;
>   void *tmp___17 ;
>   union drbd_state val___0 ;
>   union drbd_state mask___0 ;
22736,22747c23879,23891
< #line 822
<   if ((unsigned long )mdev->data.socket != (unsigned long )((struct socket *)0)) {
< #line 822
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( !mdev->data.socket ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             822);
<   } else {
< 
<   }
< #line 824
<   drbd_clear_flag(mdev, DISCONNECT_SENT);
< #line 825
---
> #line 962
>   init_completion(& ad.door_bell);
> #line 962
>   ad.tconn = tconn;
> #line 962
>   ad.s_listen = 0;
> #line 962
>   ad.door_bell = ad.door_bell;
> #line 962
>   ad.original_sk_state_change = 0;
> #line 965
>   clear_bit(12, (unsigned long volatile   *)(& tconn->flags));
> #line 966
22749,22751c23893,23895
< #line 825
<   val.ldv_39979.conn = 8U;
< #line 825
---
> #line 966
>   val.ldv_40024.conn = 8U;
> #line 966
22753,22759c23897,23903
< #line 825
<   mask.ldv_39979.conn = 31U;
< #line 825
<   tmp = drbd_request_state(mdev, mask, val);
< #line 825
<   if (tmp <= 0) {
< #line 826
---
> #line 966
>   mask.ldv_40024.conn = 31U;
> #line 966
>   tmp = conn_request_state(tconn, mask, val, CS_VERBOSE);
> #line 966
>   if ((int )tmp <= 0) {
> #line 967
22764,22777c23908,23931
< #line 828
<   sock = 0;
< #line 829
<   msock = 0;
<   ldv_52309: 
< #line 832
<   try = 0;
<   ldv_52301: 
< #line 834
<   s = drbd_try_connect(mdev);
< #line 835
<   if ((unsigned long )s != (unsigned long )((struct socket *)0)) {
< #line 836
<     goto ldv_52300;
---
> #line 969
>   __mutex_init(& sock.mutex, "&sock.mutex", & __key);
> #line 970
>   sock.sbuf = tconn->data.sbuf;
> #line 971
>   sock.rbuf = tconn->data.rbuf;
> #line 972
>   sock.socket = 0;
> #line 973
>   __mutex_init(& msock.mutex, "&msock.mutex", & __key___0);
> #line 974
>   msock.sbuf = tconn->meta.sbuf;
> #line 975
>   msock.rbuf = tconn->meta.rbuf;
> #line 976
>   msock.socket = 0;
> #line 979
>   tconn->agreed_pro_version = 80;
> #line 981
>   tmp___0 = prepare_listen_socket(tconn, & ad);
> #line 981
>   if (tmp___0 != 0) {
> #line 982
>     return (0);
22779,22785d23932
< #line 835
<     try = try + 1;
< #line 835
<     if (try > 2) {
< #line 836
<       goto ldv_52300;
<     } else {
22787d23933
<     }
22789,22794c23935,23938
< #line 838
<   schedule_timeout_interruptible(25L);
< #line 839
<   goto ldv_52301;
<   ldv_52300: ;
< #line 841
---
>   ldv_53011: 
> #line 987
>   s = drbd_try_connect(tconn);
> #line 988
22796,22803c23940,23945
< #line 842
<     if ((unsigned long )sock == (unsigned long )((struct socket *)0)) {
< #line 843
<       drbd_send_fp(mdev, s, P_HAND_SHAKE_S);
< #line 844
<       sock = s;
< #line 845
<       s = 0;
---
> #line 989
>     if ((unsigned long )sock.socket == (unsigned long )((struct socket *)0)) {
> #line 990
>       sock.socket = s;
> #line 991
>       send_first_packet(tconn, & sock, P_INITIAL_DATA);
22805,22814c23947,23954
< #line 846
<     if ((unsigned long )msock == (unsigned long )((struct socket *)0)) {
< #line 847
<       drbd_clear_flag(mdev, DISCARD_CONCURRENT);
< #line 848
<       drbd_send_fp(mdev, s, P_HAND_SHAKE_M);
< #line 849
<       msock = s;
< #line 850
<       s = 0;
---
> #line 992
>     if ((unsigned long )msock.socket == (unsigned long )((struct socket *)0)) {
> #line 993
>       clear_bit(1, (unsigned long volatile   *)(& tconn->flags));
> #line 994
>       msock.socket = s;
> #line 995
>       send_first_packet(tconn, & msock, P_INITIAL_META);
22816,22818c23956,23958
< #line 852
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Logic error in drbd_connect()\n");
< #line 853
---
> #line 997
>       printk("\vd-con %s: Logic error in conn_connect()\n", tconn->name);
> #line 998
22824,22834c23964,24003
< #line 857
<   if ((unsigned long )sock != (unsigned long )((struct socket *)0) && (unsigned long )msock != (unsigned long )((struct socket *)0)) {
< #line 858
<     schedule_timeout_interruptible((long )(((mdev->net_conf)->ping_timeo * 250) / 10));
< #line 859
<     ok = drbd_socket_okay(mdev, & sock);
< #line 860
<     tmp___0 = drbd_socket_okay(mdev, & msock);
< #line 860
<     ok = tmp___0 != 0 && ok != 0;
< #line 861
---
> #line 1002
>   if ((unsigned long )sock.socket != (unsigned long )((struct socket *)0) && (unsigned long )msock.socket != (unsigned long )((struct socket *)0)) {
> #line 1003
>     rcu_read_lock___2();
> #line 1004
>     _________p1 = *((struct net_conf * volatile  *)(& tconn->net_conf));
> #line 1004
>     tmp___1 = debug_lockdep_rcu_enabled();
> #line 1004
>     if (tmp___1 != 0 && ! __warned) {
> #line 1004
>       tmp___2 = rcu_read_lock_held();
> #line 1004
>       if (tmp___2 == 0 && 1) {
> #line 1004
>         __warned = 1;
> #line 1004
>         lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>                                1004, "suspicious rcu_dereference_check() usage");
>       } else {
> 
>       }
>     } else {
> 
>     }
> #line 1004
>     nc = _________p1;
> #line 1005
>     timeout = (int )((nc->ping_timeo * 250U) / 10U);
> #line 1006
>     rcu_read_unlock___2();
> #line 1007
>     schedule_timeout_interruptible((long )timeout);
> #line 1008
>     ok = drbd_socket_okay(& sock.socket);
> #line 1009
>     tmp___3 = drbd_socket_okay(& msock.socket);
> #line 1009
>     ok = tmp___3 != 0 && ok != 0;
> #line 1010
22836,22837c24005,24006
< #line 862
<       goto ldv_52303;
---
> #line 1011
>       goto ldv_53003;
22845,22847c24014,24016
< #line 866
<   s = drbd_wait_for_connect(mdev);
< #line 867
---
> #line 1015
>   s = drbd_wait_for_connect(tconn, & ad);
> #line 1016
22849,22858c24018,24027
< #line 868
<     tmp___1 = drbd_recv_fp(mdev, s);
< #line 868
<     try = (int )tmp___1;
< #line 869
<     drbd_socket_okay(mdev, & sock);
< #line 870
<     drbd_socket_okay(mdev, & msock);
< #line 871
<     switch (try) {
---
> #line 1017
>     tmp___4 = receive_first_packet(tconn, s);
> #line 1017
>     fp = tmp___4;
> #line 1018
>     drbd_socket_okay(& sock.socket);
> #line 1019
>     drbd_socket_okay(& msock.socket);
> #line 1020
>     switch (fp) {
22860,22865c24029,24038
< #line 873
<     if ((unsigned long )sock != (unsigned long )((struct socket *)0)) {
< #line 874
<       dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "initial packet S crossed\n");
< #line 875
<       sock_release(sock);
---
> #line 1022
>     if ((unsigned long )sock.socket != (unsigned long )((struct socket *)0)) {
> #line 1023
>       printk("\fd-con %s: initial packet S crossed\n", tconn->name);
> #line 1024
>       sock_release(sock.socket);
> #line 1025
>       sock.socket = s;
> #line 1026
>       goto randomize;
22869,22879c24042,24058
< #line 877
<     sock = s;
< #line 878
<     goto ldv_52306;
<     case 65521: ;
< #line 880
<     if ((unsigned long )msock != (unsigned long )((struct socket *)0)) {
< #line 881
<       dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "initial packet M crossed\n");
< #line 882
<       sock_release(msock);
---
> #line 1028
>     sock.socket = s;
> #line 1029
>     goto ldv_53008;
>     case 65521: 
> #line 1031
>     set_bit(1U, (unsigned long volatile   *)(& tconn->flags));
> #line 1032
>     if ((unsigned long )msock.socket != (unsigned long )((struct socket *)0)) {
> #line 1033
>       printk("\fd-con %s: initial packet M crossed\n", tconn->name);
> #line 1034
>       sock_release(msock.socket);
> #line 1035
>       msock.socket = s;
> #line 1036
>       goto randomize;
22883,22888c24062,24065
< #line 884
<     msock = s;
< #line 885
<     drbd_set_flag(mdev, DISCARD_CONCURRENT);
< #line 886
<     goto ldv_52306;
---
> #line 1038
>     msock.socket = s;
> #line 1039
>     goto ldv_53008;
22890,22892c24067,24069
< #line 888
<     dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Error receiving initial packet\n");
< #line 889
---
> #line 1041
>     printk("\fd-con %s: Error receiving initial packet\n", tconn->name);
> #line 1042
22894,22898c24071,24076
< #line 890
<     tmp___2 = random32();
< #line 890
<     if ((int )tmp___2 & 1) {
< #line 891
---
>     randomize: 
> #line 1044
>     tmp___5 = random32();
> #line 1044
>     if ((int )tmp___5 & 1) {
> #line 1045
22904c24082
<     ldv_52306: ;
---
>     ldv_53008: ;
22908,22910c24086,24088
< #line 895
<   if ((int )mdev->state.ldv_39979.conn <= 1) {
< #line 896
---
> #line 1049
>   if ((unsigned int )tconn->cstate <= 1U) {
> #line 1050
22915,22925c24093,24103
< #line 897
<   tmp___5 = get_current();
< #line 897
<   tmp___6 = signal_pending(tmp___5);
< #line 897
<   if (tmp___6 != 0) {
< #line 898
<     tmp___3 = get_current();
< #line 898
<     flush_signals(tmp___3);
< #line 899
---
> #line 1051
>   tmp___8 = get_current();
> #line 1051
>   tmp___9 = signal_pending(tmp___8);
> #line 1051
>   if (tmp___9 != 0) {
> #line 1052
>     tmp___6 = get_current();
> #line 1052
>     flush_signals(tmp___6);
> #line 1053
22927,22931c24105,24109
< #line 900
<     tmp___4 = get_t_state(& mdev->receiver);
< #line 900
<     if ((unsigned int )tmp___4 == 2U) {
< #line 901
---
> #line 1054
>     tmp___7 = get_t_state(& tconn->receiver);
> #line 1054
>     if ((unsigned int )tmp___7 == 2U) {
> #line 1055
22939,22951c24117,24127
< #line 904
<   if ((unsigned long )sock != (unsigned long )((struct socket *)0) && (unsigned long )msock != (unsigned long )((struct socket *)0)) {
< #line 905
<     ok = drbd_socket_okay(mdev, & sock);
< #line 906
<     tmp___7 = drbd_socket_okay(mdev, & msock);
< #line 906
<     ok = tmp___7 != 0 && ok != 0;
< #line 907
<     if (ok != 0) {
< #line 908
<       goto ldv_52303;
<     } else {
---
> #line 1058
>   ok = drbd_socket_okay(& sock.socket);
> #line 1059
>   tmp___10 = drbd_socket_okay(& msock.socket);
> #line 1059
>   ok = tmp___10 != 0 && ok != 0;
> #line 1060
>   if (ok == 0) {
> #line 1061
>     goto ldv_53011;
>   } else {
22953c24129,24134
<     }
---
>   }
>   ldv_53003: ;
> #line 1062
>   if ((unsigned long )ad.s_listen != (unsigned long )((struct socket *)0)) {
> #line 1063
>     sock_release(ad.s_listen);
22957,22997c24138,24169
< #line 910
<   goto ldv_52309;
<   ldv_52303: 
< #line 912
<   (msock->sk)->__sk_common.skc_reuse = 1U;
< #line 913
<   (sock->sk)->__sk_common.skc_reuse = 1U;
< #line 915
<   (sock->sk)->sk_allocation = 16U;
< #line 916
<   (msock->sk)->sk_allocation = 16U;
< #line 918
<   (sock->sk)->sk_priority = 4U;
< #line 919
<   (msock->sk)->sk_priority = 6U;
< #line 926
<   tmp___8 = (long )(((mdev->net_conf)->ping_timeo * 1000) / 10);
< #line 926
<   (sock->sk)->sk_rcvtimeo = tmp___8;
< #line 926
<   (sock->sk)->sk_sndtimeo = tmp___8;
< #line 929
<   (msock->sk)->sk_sndtimeo = (long )(((mdev->net_conf)->timeout * 250) / 10);
< #line 930
<   (msock->sk)->sk_rcvtimeo = (long )((mdev->net_conf)->ping_int * 250);
< #line 934
<   drbd_tcp_nodelay(sock);
< #line 935
<   drbd_tcp_nodelay(msock);
< #line 937
<   mdev->data.socket = sock;
< #line 938
<   mdev->meta.socket = msock;
< #line 939
<   mdev->last_received = jiffies;
< #line 941
<   if ((unsigned long )mdev->asender.task != (unsigned long )((struct task_struct *)0)) {
< #line 941
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mdev->asender.task == NULL ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             941);
---
> #line 1065
>   ((sock.socket)->sk)->__sk_common.skc_reuse = 1U;
> #line 1066
>   ((msock.socket)->sk)->__sk_common.skc_reuse = 1U;
> #line 1068
>   ((sock.socket)->sk)->sk_allocation = 16U;
> #line 1069
>   ((msock.socket)->sk)->sk_allocation = 16U;
> #line 1071
>   ((sock.socket)->sk)->sk_priority = 4U;
> #line 1072
>   ((msock.socket)->sk)->sk_priority = 6U;
> #line 1079
>   rcu_read_lock___2();
> #line 1080
>   _________p1___0 = *((struct net_conf * volatile  *)(& tconn->net_conf));
> #line 1080
>   tmp___11 = debug_lockdep_rcu_enabled();
> #line 1080
>   if (tmp___11 != 0 && ! __warned___0) {
> #line 1080
>     tmp___12 = rcu_read_lock_held();
> #line 1080
>     if (tmp___12 == 0 && 1) {
> #line 1080
>       __warned___0 = 1;
> #line 1080
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>                              1080, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
23001,23003c24173,24203
< #line 943
<   h = drbd_do_handshake(mdev);
< #line 944
---
> #line 1080
>   nc = _________p1___0;
> #line 1082
>   tmp___13 = (long )((nc->ping_timeo * 1000U) / 10U);
> #line 1082
>   ((sock.socket)->sk)->sk_rcvtimeo = tmp___13;
> #line 1082
>   ((sock.socket)->sk)->sk_sndtimeo = tmp___13;
> #line 1085
>   ((msock.socket)->sk)->sk_rcvtimeo = (long )(nc->ping_int * 250U);
> #line 1086
>   timeout = (int )((nc->timeout * 250U) / 10U);
> #line 1087
>   discard_my_data = (int )((signed char )nc->discard_my_data) != 0;
> #line 1088
>   rcu_read_unlock___2();
> #line 1090
>   ((msock.socket)->sk)->sk_sndtimeo = (long )timeout;
> #line 1094
>   drbd_tcp_nodelay(sock.socket);
> #line 1095
>   drbd_tcp_nodelay(msock.socket);
> #line 1097
>   tconn->data.socket = sock.socket;
> #line 1098
>   tconn->meta.socket = msock.socket;
> #line 1099
>   tconn->last_received = jiffies;
> #line 1101
>   h = drbd_do_features(tconn);
> #line 1102
23005c24205
< #line 945
---
> #line 1103
23010,23015c24210,24215
< #line 947
<   if ((unsigned long )mdev->cram_hmac_tfm != (unsigned long )((struct crypto_hash *)0)) {
< #line 949
<     tmp___9 = drbd_do_auth(mdev);
< #line 949
<     switch (tmp___9) {
---
> #line 1105
>   if ((unsigned long )tconn->cram_hmac_tfm != (unsigned long )((struct crypto_hash *)0)) {
> #line 1107
>     tmp___14 = drbd_do_auth(tconn);
> #line 1107
>     switch (tmp___14) {
23017,23019c24217,24219
< #line 951
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Authentication of peer failed\n");
< #line 952
---
> #line 1109
>     printk("\vd-con %s: Authentication of peer failed\n", tconn->name);
> #line 1110
23022,23024c24222,24224
< #line 954
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Authentication of peer failed, trying again.\n");
< #line 955
---
> #line 1112
>     printk("\vd-con %s: Authentication of peer failed, trying again.\n", tconn->name);
> #line 1113
23030,23042c24230,24238
< #line 959
<   (sock->sk)->sk_sndtimeo = (long )(((mdev->net_conf)->timeout * 250) / 10);
< #line 960
<   (sock->sk)->sk_rcvtimeo = 9223372036854775807L;
< #line 962
<   atomic_set(& mdev->packet_seq, 0);
< #line 963
<   mdev->peer_seq = 0U;
< #line 965
<   tmp___10 = drbd_send_protocol(mdev);
< #line 965
<   if (tmp___10 == -1) {
< #line 966
---
> #line 1117
>   ((tconn->data.socket)->sk)->sk_sndtimeo = (long )timeout;
> #line 1118
>   ((tconn->data.socket)->sk)->sk_rcvtimeo = 9223372036854775807L;
> #line 1120
>   tmp___15 = drbd_send_protocol(tconn);
> #line 1120
>   if (tmp___15 == -95) {
> #line 1121
23047,23072c24243,24284
< #line 967
<   drbd_set_flag(mdev, STATE_SENT);
< #line 968
<   drbd_send_sync_param(mdev, & mdev->sync_conf);
< #line 969
<   drbd_send_sizes(mdev, 0, 0);
< #line 970
<   drbd_send_uuids(mdev);
< #line 971
<   drbd_send_current_state(mdev);
< #line 972
<   drbd_clear_flag(mdev, USE_DEGR_WFC_T);
< #line 973
<   drbd_clear_flag(mdev, RESIZE_PENDING);
< #line 975
<   spin_lock_irq(& mdev->req_lock);
< #line 976
<   __ns.i = mdev->state.i;
< #line 976
<   __ns.ldv_39979.conn = 9U;
< #line 976
<   rv = _drbd_set_state(mdev, __ns, CS_VERBOSE, 0);
< #line 977
<   if ((unsigned int )*((unsigned short *)mdev + 1138UL) != 144U) {
< #line 978
<     drbd_clear_flag(mdev, STATE_SENT);
---
> #line 1123
>   set_bit(10U, (unsigned long volatile   *)(& tconn->flags));
> #line 1125
>   rcu_read_lock___2();
> #line 1126
>   vnr = 0;
> #line 1126
>   tmp___16 = idr_get_next(& tconn->volumes, & vnr);
> #line 1126
>   mdev = (struct drbd_conf *)tmp___16;
> #line 1126
>   goto ldv_53018;
>   ldv_53017: 
> #line 1127
>   kref_get(& mdev->kref);
> #line 1128
>   rcu_read_unlock___2();
> #line 1130
>   if ((int )discard_my_data) {
> #line 1131
>     set_bit(21U, (unsigned long volatile   *)(& mdev->flags));
>   } else {
> #line 1133
>     clear_bit(21, (unsigned long volatile   *)(& mdev->flags));
>   }
> #line 1135
>   drbd_connected(mdev);
> #line 1136
>   kref_put(& mdev->kref, & drbd_minor_destroy);
> #line 1137
>   rcu_read_lock___2();
> #line 1126
>   vnr = vnr + 1;
> #line 1126
>   tmp___17 = idr_get_next(& tconn->volumes, & vnr);
> #line 1126
>   mdev = (struct drbd_conf *)tmp___17;
>   ldv_53018: ;
> #line 1126
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 1127
>     goto ldv_53017;
23076,23078c24288,24300
< #line 979
<   spin_unlock_irq(& mdev->req_lock);
< #line 981
---
> #line 1139
>   rcu_read_unlock___2();
> #line 1141
>   val___0.i = 0U;
> #line 1141
>   val___0.ldv_40024.conn = 9U;
> #line 1141
>   mask___0.i = 0U;
> #line 1141
>   mask___0.ldv_40024.conn = 31U;
> #line 1141
>   rv = conn_request_state(tconn, mask___0, val___0, CS_VERBOSE);
> #line 1142
23080c24302,24304
< #line 982
---
> #line 1143
>     clear_bit(10, (unsigned long volatile   *)(& tconn->flags));
> #line 1144
23085,23090c24309,24318
< #line 984
<   drbd_thread_start(& mdev->asender);
< #line 985
<   mod_timer(& mdev->request_timer, (unsigned long )jiffies + 250UL);
< #line 987
<   return (1);
---
> #line 1147
>   drbd_thread_start(& tconn->asender);
> #line 1149
>   ldv_mutex_lock_104(& tconn->conf_update);
> #line 1154
>   (tconn->net_conf)->discard_my_data = 0;
> #line 1155
>   ldv_mutex_unlock_105(& tconn->conf_update);
> #line 1157
>   return (h);
23092,23095c24320,24323
< #line 990
<   if ((unsigned long )sock != (unsigned long )((struct socket *)0)) {
< #line 991
<     sock_release(sock);
---
> #line 1160
>   if ((unsigned long )ad.s_listen != (unsigned long )((struct socket *)0)) {
> #line 1161
>     sock_release(ad.s_listen);
23099,23102c24327,24330
< #line 992
<   if ((unsigned long )msock != (unsigned long )((struct socket *)0)) {
< #line 993
<     sock_release(msock);
---
> #line 1162
>   if ((unsigned long )sock.socket != (unsigned long )((struct socket *)0)) {
> #line 1163
>     sock_release(sock.socket);
23106c24334,24341
< #line 994
---
> #line 1164
>   if ((unsigned long )msock.socket != (unsigned long )((struct socket *)0)) {
> #line 1165
>     sock_release(msock.socket);
>   } else {
> 
>   }
> #line 1166
23110,23111c24345,24346
< #line 997 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int drbd_recv_header(struct drbd_conf *mdev , enum drbd_packets *cmd , unsigned int *packet_size ) 
---
> #line 1169 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int decode_header(struct drbd_tconn *tconn , void *header , struct packet_info *pi ) 
23113,23118c24348,24354
<   union p_header *h ;
<   int r ;
<   struct task_struct *tmp ;
<   int tmp___0 ;
<   long tmp___1 ;
<   __u16 tmp___2 ;
---
>   unsigned int header_size ;
>   unsigned int tmp ;
>   struct p_header100 *h ;
>   __u16 tmp___0 ;
>   __u16 tmp___1 ;
>   __u32 tmp___2 ;
>   struct p_header95 *h___0 ;
23120,23121c24356,24358
<   __u16 tmp___4 ;
<   __u32 tmp___5 ;
---
>   __u32 tmp___4 ;
>   struct p_header80 *h___1 ;
>   __u16 tmp___5 ;
23123,23125c24360
<   __u16 tmp___7 ;
<   __u32 tmp___8 ;
<   long tmp___9 ;
---
>   __u32 tmp___7 ;
23128,23144c24363,24376
< #line 999
<   h = & mdev->data.rbuf.header;
< #line 1002
<   r = drbd_recv(mdev, (void *)h, 8UL);
< #line 1003
<   tmp___1 = __builtin_expect(r != 8, 0L);
< #line 1003
<   if (tmp___1 != 0L) {
< #line 1004
<     tmp = get_current();
< #line 1004
<     tmp___0 = signal_pending(tmp);
< #line 1004
<     if (tmp___0 == 0) {
< #line 1005
<       dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "short read expecting header on sock: r=%d\n",
<                r);
---
> #line 1171
>   tmp = drbd_header_size(tconn);
> #line 1171
>   header_size = tmp;
> #line 1173
>   if (header_size == 16U && *((__be32 *)header) == 552345734U) {
> #line 1175
>     h = (struct p_header100 *)header;
> #line 1176
>     if (h->pad != 0U) {
> #line 1177
>       printk("\vd-con %s: Header padding is not zero\n", tconn->name);
> #line 1178
>       return (-22);
23148,23149c24380,24421
< #line 1006
<     return (0);
---
> #line 1180
>     tmp___0 = __fswab16((int )h->volume);
> #line 1180
>     pi->vnr = (unsigned int )tmp___0;
> #line 1181
>     tmp___1 = __fswab16((int )h->command);
> #line 1181
>     pi->cmd = (enum drbd_packet )tmp___1;
> #line 1182
>     tmp___2 = __fswab32(h->length);
> #line 1182
>     pi->size = tmp___2;
>   } else
> #line 1183
>   if (header_size == 8U && (unsigned int )*((__be16 *)header) == 23171U) {
> #line 1185
>     h___0 = (struct p_header95 *)header;
> #line 1186
>     tmp___3 = __fswab16((int )h___0->command);
> #line 1186
>     pi->cmd = (enum drbd_packet )tmp___3;
> #line 1187
>     tmp___4 = __fswab32(h___0->length);
> #line 1187
>     pi->size = tmp___4;
> #line 1188
>     pi->vnr = 0U;
>   } else
> #line 1189
>   if (header_size == 8U && *((__be32 *)header) == 1728214147U) {
> #line 1191
>     h___1 = (struct p_header80 *)header;
> #line 1192
>     tmp___5 = __fswab16((int )h___1->command);
> #line 1192
>     pi->cmd = (enum drbd_packet )tmp___5;
> #line 1193
>     tmp___6 = __fswab16((int )h___1->length);
> #line 1193
>     pi->size = (unsigned int )tmp___6;
> #line 1194
>     pi->vnr = 0U;
23151c24423,24429
< 
---
> #line 1196
>     tmp___7 = __fswab32(*((__be32 *)header));
> #line 1196
>     printk("\vd-con %s: Wrong magic value 0x%08x in protocol version %d\n", tconn->name,
>            tmp___7, tconn->agreed_pro_version);
> #line 1199
>     return (-22);
23153,23175c24431,24454
< #line 1009
<   tmp___9 = __builtin_expect(h->h80.magic == 1728214147U, 1L);
< #line 1009
<   if (tmp___9 != 0L) {
< #line 1010
<     tmp___2 = __fswab16((int )h->h80.command);
< #line 1010
<     *cmd = (enum drbd_packets )tmp___2;
< #line 1011
<     tmp___3 = __fswab16((int )h->h80.length);
< #line 1011
<     *packet_size = (unsigned int )tmp___3;
<   } else
< #line 1012
<   if ((unsigned int )h->h95.magic == 23171U) {
< #line 1013
<     tmp___4 = __fswab16((int )h->h95.command);
< #line 1013
<     *cmd = (enum drbd_packets )tmp___4;
< #line 1014
<     tmp___5 = __fswab32(h->h95.length);
< #line 1014
<     *packet_size = tmp___5;
---
> #line 1201
>   pi->data = header + (unsigned long )header_size;
> #line 1202
>   return (0);
> }
> }
> #line 1205 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int drbd_recv_header(struct drbd_tconn *tconn , struct packet_info *pi ) 
> { 
>   void *buffer ;
>   int err ;
>   unsigned int tmp ;
> 
>   {
> #line 1207
>   buffer = tconn->data.rbuf;
> #line 1210
>   tmp = drbd_header_size(tconn);
> #line 1210
>   err = drbd_recv_all_warn(tconn, buffer, (size_t )tmp);
> #line 1211
>   if (err != 0) {
> #line 1212
>     return (err);
23177,23187c24456
< #line 1016
<     tmp___6 = __fswab16((int )h->h80.length);
< #line 1016
<     tmp___7 = __fswab16((int )h->h80.command);
< #line 1016
<     tmp___8 = __fswab32(h->h80.magic);
< #line 1016
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "magic?? on data m: 0x%08x c: %d l: %d\n",
<             tmp___8, (int )tmp___7, (int )tmp___6);
< #line 1020
<     return (0);
---
> 
23189,23192c24458,24463
< #line 1022
<   mdev->last_received = jiffies;
< #line 1024
<   return (1);
---
> #line 1214
>   err = decode_header(tconn, buffer, pi);
> #line 1215
>   tconn->last_received = jiffies;
> #line 1217
>   return (err);
23195,23196c24466,24467
< #line 1027 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static void drbd_flush(struct drbd_conf *mdev ) 
---
> #line 1220 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static void drbd_flush(struct drbd_tconn *tconn ) 
23199c24470,24474
<   int tmp ;
---
>   struct drbd_conf *mdev ;
>   int vnr ;
>   void *tmp ;
>   int tmp___0 ;
>   void *tmp___1 ;
23202,23217c24477,24496
< #line 1031
<   if ((unsigned int )mdev->write_ordering > 1U) {
< #line 1031
<     tmp = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 1031
<     if (tmp != 0) {
< #line 1032
<       rv = blkdev_issue_flush((mdev->ldev)->backing_bdev, 16U, 0);
< #line 1034
<       if (rv != 0) {
< #line 1035
<         _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "local disk flush failed with status %d\n",
<                   rv);
< #line 1039
<         drbd_bump_write_ordering(mdev, WO_drain_io);
<       } else {
---
> #line 1226
>   if ((unsigned int )tconn->write_ordering > 1U) {
> #line 1227
>     rcu_read_lock___2();
> #line 1228
>     vnr = 0;
> #line 1228
>     tmp = idr_get_next(& tconn->volumes, & vnr);
> #line 1228
>     mdev = (struct drbd_conf *)tmp;
> #line 1228
>     goto ldv_53048;
>     ldv_53047: 
> #line 1229
>     tmp___0 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 1229
>     if (tmp___0 == 0) {
> #line 1230
>       goto ldv_53045;
>     } else {
23219,23221c24498,24539
<       }
< #line 1041
<       put_ldev(mdev);
---
>     }
> #line 1231
>     kref_get(& mdev->kref);
> #line 1232
>     rcu_read_unlock___2();
> #line 1234
>     rv = blkdev_issue_flush((mdev->ldev)->backing_bdev, 16U, 0);
> #line 1236
>     if (rv != 0) {
> #line 1237
>       _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "local disk flush failed with status %d\n",
>                 rv);
> #line 1241
>       drbd_bump_write_ordering(tconn, WO_drain_io);
>     } else {
> 
>     }
> #line 1243
>     put_ldev(mdev);
> #line 1244
>     kref_put(& mdev->kref, & drbd_minor_destroy);
> #line 1246
>     rcu_read_lock___2();
> #line 1247
>     if (rv != 0) {
> #line 1248
>       goto ldv_53046;
>     } else {
> 
>     }
>     ldv_53045: 
> #line 1228
>     vnr = vnr + 1;
> #line 1228
>     tmp___1 = idr_get_next(& tconn->volumes, & vnr);
> #line 1228
>     mdev = (struct drbd_conf *)tmp___1;
>     ldv_53048: ;
> #line 1228
>     if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 1229
>       goto ldv_53047;
23224a24543,24545
>     ldv_53046: 
> #line 1250
>     rcu_read_unlock___2();
23228c24549
< #line 1043
---
> #line 1252
23232,23233c24553,24554
< #line 1051 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static enum finish_epoch drbd_may_finish_epoch(struct drbd_conf *mdev , struct drbd_epoch *epoch ,
---
> #line 1260 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static enum finish_epoch drbd_may_finish_epoch(struct drbd_tconn *tconn , struct drbd_epoch *epoch ,
23238a24560
>   struct list_head  const  *__mptr ;
23241,23244d24562
<   int tmp___1 ;
<   struct list_head  const  *__mptr ;
<   int tmp___2 ;
<   int tmp___3 ;
23247c24565
< #line 1057
---
> #line 1266
23249,23252c24567,24570
< #line 1059
<   spin_lock(& mdev->epoch_lock);
<   ldv_52344: 
< #line 1061
---
> #line 1268
>   spin_lock(& tconn->epoch_lock);
>   ldv_53064: 
> #line 1270
23254c24572
< #line 1063
---
> #line 1272
23256c24574
< #line 1065
---
> #line 1274
23259c24577
< #line 1067
---
> #line 1276
23261,23262c24579,24580
< #line 1068
<   goto ldv_52334;
---
> #line 1277
>   goto ldv_53058;
23264c24582
< #line 1070
---
> #line 1279
23266,23267c24584,24585
< #line 1071
<   goto ldv_52334;
---
> #line 1280
>   goto ldv_53058;
23269,23270c24587,24588
< #line 1074
<   goto ldv_52334;
---
> #line 1283
>   goto ldv_53058;
23272,23273c24590,24591
<   ldv_52334: ;
< #line 1077
---
>   ldv_53058: ;
> #line 1286
23275,23283c24593,24601
< #line 1077
<     tmp___2 = atomic_read((atomic_t const   *)(& epoch->active));
< #line 1077
<     if (tmp___2 == 0) {
< #line 1077
<       tmp___3 = constant_test_bit(0U, (unsigned long const volatile   *)(& epoch->flags));
< #line 1077
<       if (tmp___3 != 0 || ((unsigned int )ev & 32U) != 0U) {
< #line 1080
---
> #line 1286
>     tmp = atomic_read((atomic_t const   *)(& epoch->active));
> #line 1286
>     if (tmp == 0) {
> #line 1286
>       tmp___0 = constant_test_bit(0U, (unsigned long const volatile   *)(& epoch->flags));
> #line 1286
>       if (tmp___0 != 0 || ((unsigned int )ev & 32U) != 0U) {
> #line 1289
23285,23311c24603,24608
< #line 1081
<           spin_unlock(& mdev->epoch_lock);
< #line 1082
<           drbd_send_b_ack(mdev, epoch->barrier_nr, (u32 )epoch_size);
< #line 1083
<           spin_lock(& mdev->epoch_lock);
<         } else {
< 
<         }
< #line 1085
<         tmp___1 = constant_test_bit(0U, (unsigned long const volatile   *)(& epoch->flags));
< #line 1085
<         if (tmp___1 != 0) {
< #line 1086
<           atomic_dec(& mdev->unacked_cnt);
< #line 1086
<           tmp___0 = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 1086
<           if (tmp___0 < 0) {
< #line 1086
<             tmp = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 1086
<             dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: unacked_cnt = %d < 0 !\n",
<                     "drbd_may_finish_epoch", 1086, tmp);
<           } else {
< 
<           }
---
> #line 1290
>           spin_unlock(& tconn->epoch_lock);
> #line 1291
>           drbd_send_b_ack(epoch->tconn, epoch->barrier_nr, (u32 )epoch_size);
> #line 1292
>           spin_lock(& tconn->epoch_lock);
23315,23317c24612,24614
< #line 1088
<         if ((unsigned long )mdev->current_epoch != (unsigned long )epoch) {
< #line 1089
---
> #line 1301
>         if ((unsigned long )tconn->current_epoch != (unsigned long )epoch) {
> #line 1302
23319,23321c24616,24618
< #line 1089
<           next_epoch = (struct drbd_epoch *)__mptr;
< #line 1090
---
> #line 1302
>           next_epoch = (struct drbd_epoch *)__mptr + 0xfffffffffffffff8UL;
> #line 1303
23323c24620
< #line 1091
---
> #line 1304
23325,23327c24622,24624
< #line 1092
<           mdev->epochs = mdev->epochs - 1U;
< #line 1093
---
> #line 1305
>           tconn->epochs = tconn->epochs - 1U;
> #line 1306
23329c24626
< #line 1095
---
> #line 1308
23331c24628
< #line 1096
---
> #line 1309
23337c24634
< #line 1098
---
> #line 1311
23339c24636
< #line 1099
---
> #line 1312
23341c24638
< #line 1101
---
> #line 1314
23343c24640
< #line 1102
---
> #line 1315
23348,23349d24644
< #line 1103
<           __wake_up(& mdev->ee_wait, 3U, 1, 0);
23360c24655
< #line 1107
---
> #line 1319
23362,23363c24657,24658
< #line 1108
<     goto ldv_52343;
---
> #line 1320
>     goto ldv_53063;
23367c24662
< #line 1110
---
> #line 1322
23369,23374c24664,24669
< #line 1111
<   goto ldv_52344;
<   ldv_52343: 
< #line 1113
<   spin_unlock(& mdev->epoch_lock);
< #line 1115
---
> #line 1323
>   goto ldv_53064;
>   ldv_53063: 
> #line 1325
>   spin_unlock(& tconn->epoch_lock);
> #line 1327
23378,23379c24673,24674
< #line 1123 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< void drbd_bump_write_ordering(struct drbd_conf *mdev , enum write_ordering_e wo ) 
---
> #line 1335 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> void drbd_bump_write_ordering(struct drbd_tconn *tconn , enum write_ordering_e wo ) 
23380a24676,24677
>   struct disk_conf *dc ;
>   struct drbd_conf *mdev ;
23381a24679
>   int vnr ;
23384a24683,24689
>   void *tmp ;
>   int tmp___0 ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp___1 ;
>   int tmp___2 ;
>   void *tmp___3 ;
23387c24692
< #line 1126
---
> #line 1341
23389c24694
< #line 1126
---
> #line 1341
23391c24696
< #line 1126
---
> #line 1341
23393,23395c24698,24700
< #line 1132
<   pwo = mdev->write_ordering;
< #line 1133
---
> #line 1347
>   pwo = tconn->write_ordering;
> #line 1348
23397c24702
< #line 1133
---
> #line 1348
23399c24704
< #line 1133
---
> #line 1348
23401,23403c24706,24751
< #line 1134
<   if ((unsigned int )wo == 2U && (unsigned int )*((unsigned char *)mdev->ldev + 444UL) != 0U) {
< #line 1135
---
> #line 1349
>   rcu_read_lock___2();
> #line 1350
>   vnr = 0;
> #line 1350
>   tmp = idr_get_next(& tconn->volumes, & vnr);
> #line 1350
>   mdev = (struct drbd_conf *)tmp;
> #line 1350
>   goto ldv_53082;
>   ldv_53081: 
> #line 1351
>   tmp___0 = _get_ldev_if_state(mdev, D_ATTACHING);
> #line 1351
>   if (tmp___0 == 0) {
> #line 1352
>     goto ldv_53077;
>   } else {
> 
>   }
> #line 1353
>   _________p1 = *((struct disk_conf * volatile  *)(& (mdev->ldev)->disk_conf));
> #line 1353
>   tmp___1 = debug_lockdep_rcu_enabled();
> #line 1353
>   if (tmp___1 != 0 && ! __warned) {
> #line 1353
>     tmp___2 = rcu_read_lock_held();
> #line 1353
>     if (tmp___2 == 0 && 1) {
> #line 1353
>       __warned = 1;
> #line 1353
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>                              1353, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1353
>   dc = _________p1;
> #line 1355
>   if ((unsigned int )wo == 2U && (int )((signed char )dc->disk_flushes) == 0) {
> #line 1356
23408,23410c24756,24758
< #line 1136
<   if ((unsigned int )wo == 1U && (unsigned int )*((unsigned char *)mdev->ldev + 452UL) != 0U) {
< #line 1137
---
> #line 1357
>   if ((unsigned int )wo == 1U && (int )((signed char )dc->disk_drain) == 0) {
> #line 1358
23415,23421c24763,24776
< #line 1138
<   mdev->write_ordering = wo;
< #line 1139
<   if ((unsigned int )mdev->write_ordering != (unsigned int )pwo || (unsigned int )wo == 2U) {
< #line 1140
<     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Method to ensure write ordering: %s\n",
<               write_ordering_str[(unsigned int )mdev->write_ordering]);
---
> #line 1359
>   put_ldev(mdev);
>   ldv_53077: 
> #line 1350
>   vnr = vnr + 1;
> #line 1350
>   tmp___3 = idr_get_next(& tconn->volumes, & vnr);
> #line 1350
>   mdev = (struct drbd_conf *)tmp___3;
>   ldv_53082: ;
> #line 1350
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 1351
>     goto ldv_53081;
23425c24780,24791
< #line 1141
---
> #line 1361
>   rcu_read_unlock___2();
> #line 1362
>   tconn->write_ordering = wo;
> #line 1363
>   if ((unsigned int )tconn->write_ordering != (unsigned int )pwo || (unsigned int )wo == 2U) {
> #line 1364
>     printk("\016d-con %s: Method to ensure write ordering: %s\n", tconn->name, write_ordering_str[(unsigned int )tconn->write_ordering]);
>   } else {
> 
>   }
> #line 1365
23429,23431c24795,24797
< #line 1160 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< int drbd_submit_ee(struct drbd_conf *mdev , struct drbd_epoch_entry *e , unsigned int const   rw ,
<                    int const   fault_type ) 
---
> #line 1384 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> int drbd_submit_peer_request(struct drbd_conf *mdev , struct drbd_peer_request *peer_req ,
>                              unsigned int const   rw , int const   fault_type ) 
23448c24814
< #line 1163
---
> #line 1388
23450,23456c24816,24822
< #line 1165
<   page = e->pages;
< #line 1166
<   sector = e->sector;
< #line 1167
<   ds = e->size;
< #line 1168
---
> #line 1390
>   page = peer_req->pages;
> #line 1391
>   sector = peer_req->i.sector;
> #line 1392
>   ds = peer_req->i.size;
> #line 1393
23458c24824
< #line 1169
---
> #line 1394
23460c24826
< #line 1170
---
> #line 1395
23463c24829
< #line 1181
---
> #line 1406
23465c24831
< #line 1182
---
> #line 1407
23467c24833
< #line 1183
---
> #line 1408
23469c24835
< #line 1184
---
> #line 1409
23474c24840
< #line 1187
---
> #line 1412
23476c24842
< #line 1188
---
> #line 1413
23478c24844
< #line 1189
---
> #line 1414
23480,23484c24846,24850
< #line 1190
<   bio->bi_private = (void *)e;
< #line 1191
<   bio->bi_end_io = & drbd_endio_sec;
< #line 1193
---
> #line 1415
>   bio->bi_private = (void *)peer_req;
> #line 1416
>   bio->bi_end_io = & drbd_peer_request_endio;
> #line 1418
23486c24852
< #line 1194
---
> #line 1419
23488c24854
< #line 1195
---
> #line 1420
23490,23493c24856,24859
< #line 1197
<   goto ldv_52376;
<   ldv_52375: 
< #line 1198
---
> #line 1422
>   goto ldv_53106;
>   ldv_53105: 
> #line 1423
23495c24861
< #line 1198
---
> #line 1423
23497c24863
< #line 1198
---
> #line 1423
23499c24865
< #line 1199
---
> #line 1424
23501c24867
< #line 1199
---
> #line 1424
23503c24869
< #line 1203
---
> #line 1428
23505c24871
< #line 1204
---
> #line 1429
23508c24874
< #line 1208
---
> #line 1433
23510c24876
< #line 1209
---
> #line 1434
23515c24881
< #line 1211
---
> #line 1436
23520c24886
< #line 1213
---
> #line 1438
23522c24888
< #line 1214
---
> #line 1439
23524c24890
< #line 1215
---
> #line 1440
23526c24892
< #line 1197
---
> #line 1422
23528,23529c24894,24895
<   ldv_52376: ;
< #line 1197
---
>   ldv_53106: ;
> #line 1422
23531c24897
< #line 1197
---
> #line 1422
23533c24899
< #line 1197
---
> #line 1422
23535c24901
< #line 1197
---
> #line 1422
23537,23538c24903,24904
< #line 1198
<       goto ldv_52375;
---
> #line 1423
>       goto ldv_53105;
23540,23541c24906,24907
< #line 1200
<       goto ldv_52377;
---
> #line 1425
>       goto ldv_53107;
23546,23547c24912,24913
<   ldv_52377: ;
< #line 1217
---
>   ldv_53107: ;
> #line 1442
23549c24915
< #line 1217
---
> #line 1442
23551,23552c24917,24918
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             1217);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>             1442);
23556c24922
< #line 1218
---
> #line 1443
23558c24924
< #line 1218
---
> #line 1443
23560,23561c24926,24927
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             1218);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>             1443);
23565,23568c24931,24934
< #line 1220
<   atomic_set(& e->pending_bios, (int )n_bios);
<   ldv_52378: 
< #line 1222
---
> #line 1445
>   atomic_set(& peer_req->pending_bios, (int )n_bios);
>   ldv_53108: 
> #line 1447
23570c24936
< #line 1223
---
> #line 1448
23572c24938
< #line 1224
---
> #line 1449
23574c24940
< #line 1226
---
> #line 1451
23576c24942
< #line 1227
---
> #line 1452
23578,23579c24944,24945
< #line 1228
<     goto ldv_52378;
---
> #line 1453
>     goto ldv_53108;
23584c24950
< #line 1228
---
> #line 1453
23587,23590c24953,24956
< #line 1231
<   goto ldv_52381;
<   ldv_52380: 
< #line 1232
---
> #line 1456
>   goto ldv_53111;
>   ldv_53110: 
> #line 1457
23592c24958
< #line 1233
---
> #line 1458
23594c24960
< #line 1234
---
> #line 1459
23596,23597c24962,24963
<   ldv_52381: ;
< #line 1231
---
>   ldv_53111: ;
> #line 1456
23599,23600c24965,24966
< #line 1232
<     goto ldv_52380;
---
> #line 1457
>     goto ldv_53110;
23605c24971
< #line 1236
---
> #line 1461
23609,23610c24975,25049
< #line 1239 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int receive_Barrier(struct drbd_conf *mdev , enum drbd_packets cmd , unsigned int data_size ) 
---
> #line 1464 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static void drbd_remove_epoch_entry_interval(struct drbd_conf *mdev , struct drbd_peer_request *peer_req ) 
> { 
>   struct drbd_interval *i ;
> 
>   {
> #line 1467
>   i = & peer_req->i;
> #line 1469
>   drbd_remove_interval(& mdev->write_requests, i);
> #line 1470
>   drbd_clear_interval(i);
> #line 1473
>   if ((unsigned int )*((unsigned char *)i + 48UL) != 0U) {
> #line 1474
>     __wake_up(& mdev->misc_wait, 3U, 1, 0);
>   } else {
> 
>   }
> #line 1475
>   return;
> }
> }
> #line 1477 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> void conn_wait_active_ee_empty(struct drbd_tconn *tconn ) 
> { 
>   struct drbd_conf *mdev ;
>   int vnr ;
>   void *tmp ;
>   void *tmp___0 ;
> 
>   {
> #line 1482
>   rcu_read_lock___2();
> #line 1483
>   vnr = 0;
> #line 1483
>   tmp = idr_get_next(& tconn->volumes, & vnr);
> #line 1483
>   mdev = (struct drbd_conf *)tmp;
> #line 1483
>   goto ldv_53124;
>   ldv_53123: 
> #line 1484
>   kref_get(& mdev->kref);
> #line 1485
>   rcu_read_unlock___2();
> #line 1486
>   drbd_wait_ee_list_empty(mdev, & mdev->active_ee);
> #line 1487
>   kref_put(& mdev->kref, & drbd_minor_destroy);
> #line 1488
>   rcu_read_lock___2();
> #line 1483
>   vnr = vnr + 1;
> #line 1483
>   tmp___0 = idr_get_next(& tconn->volumes, & vnr);
> #line 1483
>   mdev = (struct drbd_conf *)tmp___0;
>   ldv_53124: ;
> #line 1483
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 1484
>     goto ldv_53123;
>   } else {
> 
>   }
> #line 1490
>   rcu_read_unlock___2();
> #line 1491
>   return;
> }
> }
> #line 1493 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int receive_Barrier(struct drbd_tconn *tconn , struct packet_info *pi ) 
23620,23624d25058
<   wait_queue_t __wait ;
<   struct task_struct *tmp___4 ;
<   int tmp___5 ;
<   int tmp___6 ;
<   int tmp___7 ;
23627,23635c25061,25069
< #line 1242
<   p = & mdev->data.rbuf.barrier;
< #line 1245
<   inc_unacked(mdev);
< #line 1247
<   (mdev->current_epoch)->barrier_nr = p->barrier;
< #line 1248
<   tmp = drbd_may_finish_epoch(mdev, mdev->current_epoch, EV_GOT_BARRIER_NR);
< #line 1248
---
> #line 1496
>   p = (struct p_barrier *)pi->data;
> #line 1502
>   (tconn->current_epoch)->barrier_nr = p->barrier;
> #line 1503
>   (tconn->current_epoch)->tconn = tconn;
> #line 1504
>   tmp = drbd_may_finish_epoch(tconn, tconn->current_epoch, EV_GOT_BARRIER_NR);
> #line 1504
23637,23638c25071,25072
< #line 1255
<   switch ((unsigned int )mdev->write_ordering) {
---
> #line 1511
>   switch ((unsigned int )tconn->write_ordering) {
23640c25074
< #line 1257
---
> #line 1513
23642,23643c25076,25077
< #line 1258
<     return (1);
---
> #line 1514
>     return (0);
23647,23649c25081,25083
< #line 1262
<   tmp___0 = kmalloc(40UL, 16U);
< #line 1262
---
> #line 1518
>   tmp___0 = kmalloc(48UL, 16U);
> #line 1518
23651c25085
< #line 1263
---
> #line 1519
23653,23654c25087,25088
< #line 1264
<     goto ldv_52392;
---
> #line 1520
>     goto ldv_53134;
23656,23657c25090,25091
< #line 1266
<     dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Allocation of an epoch failed, slowing down\n");
---
> #line 1522
>     printk("\fd-con %s: Allocation of an epoch failed, slowing down\n", tconn->name);
23661,23667c25095,25101
< #line 1271
<   drbd_wait_ee_list_empty(mdev, & mdev->active_ee);
< #line 1272
<   drbd_flush(mdev);
< #line 1274
<   tmp___2 = atomic_read((atomic_t const   *)(& (mdev->current_epoch)->epoch_size));
< #line 1274
---
> #line 1527
>   conn_wait_active_ee_empty(tconn);
> #line 1528
>   drbd_flush(tconn);
> #line 1530
>   tmp___2 = atomic_read((atomic_t const   *)(& (tconn->current_epoch)->epoch_size));
> #line 1530
23669,23671c25103,25105
< #line 1275
<     tmp___1 = kmalloc(40UL, 16U);
< #line 1275
---
> #line 1531
>     tmp___1 = kmalloc(48UL, 16U);
> #line 1531
23673c25107
< #line 1276
---
> #line 1532
23675,23676c25109,25110
< #line 1277
<       goto ldv_52392;
---
> #line 1533
>       goto ldv_53134;
23683,23752c25117
< #line 1280
<   epoch = mdev->current_epoch;
< #line 1281
<   tmp___3 = atomic_read((atomic_t const   *)(& epoch->epoch_size));
< #line 1281
<   if (tmp___3 == 0) {
< #line 1281
<     goto ldv_52395;
<   } else {
< 
<   }
< #line 1281
<   tmp___4 = get_current();
< #line 1281
<   __wait.flags = 0U;
< #line 1281
<   __wait.private = (void *)tmp___4;
< #line 1281
<   __wait.func = & autoremove_wake_function;
< #line 1281
<   __wait.task_list.next = & __wait.task_list;
< #line 1281
<   __wait.task_list.prev = & __wait.task_list;
<   ldv_52398: 
< #line 1281
<   prepare_to_wait(& mdev->ee_wait, & __wait, 2);
< #line 1281
<   tmp___5 = atomic_read((atomic_t const   *)(& epoch->epoch_size));
< #line 1281
<   if (tmp___5 == 0) {
< #line 1281
<     goto ldv_52397;
<   } else {
< 
<   }
< #line 1281
<   schedule();
< #line 1281
<   goto ldv_52398;
<   ldv_52397: 
< #line 1281
<   finish_wait(& mdev->ee_wait, & __wait);
<   ldv_52395: 
< #line 1283
<   tmp___6 = atomic_read((atomic_t const   *)(& epoch->active));
< #line 1283
<   if (tmp___6 != 0) {
< #line 1283
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( atomic_read(&epoch->active) == 0 ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             1283);
<   } else {
< 
<   }
< #line 1284
<   if (epoch->flags != 0UL) {
< #line 1284
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( epoch->flags == 0 ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             1284);
<   } else {
< 
<   }
< #line 1286
<   return (1);
<   default: 
< #line 1288
<   dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Strangeness in mdev->write_ordering %d\n",
<           (unsigned int )mdev->write_ordering);
< #line 1289
---
> #line 1536
23753a25119,25123
>   default: 
> #line 1538
>   printk("\vd-con %s: Strangeness in tconn->write_ordering %d\n", tconn->name, (unsigned int )tconn->write_ordering);
> #line 1539
>   return (-5);
23755,23756c25125,25126
<   ldv_52392: 
< #line 1292
---
>   ldv_53134: 
> #line 1542
23758c25128
< #line 1293
---
> #line 1543
23760c25130
< #line 1294
---
> #line 1544
23762,23773c25132,25143
< #line 1296
<   spin_lock(& mdev->epoch_lock);
< #line 1297
<   tmp___7 = atomic_read((atomic_t const   *)(& (mdev->current_epoch)->epoch_size));
< #line 1297
<   if (tmp___7 != 0) {
< #line 1298
<     list_add(& epoch->list, & (mdev->current_epoch)->list);
< #line 1299
<     mdev->current_epoch = epoch;
< #line 1300
<     mdev->epochs = mdev->epochs + 1U;
---
> #line 1546
>   spin_lock(& tconn->epoch_lock);
> #line 1547
>   tmp___3 = atomic_read((atomic_t const   *)(& (tconn->current_epoch)->epoch_size));
> #line 1547
>   if (tmp___3 != 0) {
> #line 1548
>     list_add(& epoch->list, & (tconn->current_epoch)->list);
> #line 1549
>     tconn->current_epoch = epoch;
> #line 1550
>     tconn->epochs = tconn->epochs + 1U;
23775c25145
< #line 1303
---
> #line 1553
23778,23781c25148,25151
< #line 1305
<   spin_unlock(& mdev->epoch_lock);
< #line 1307
<   return (1);
---
> #line 1555
>   spin_unlock(& tconn->epoch_lock);
> #line 1557
>   return (0);
23784,23786c25154,25156
< #line 1313 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static struct drbd_epoch_entry *read_in_block(struct drbd_conf *mdev , u64 id , sector_t sector ,
<                                               int data_size ) 
---
> #line 1563 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static struct drbd_peer_request *read_in_block(struct drbd_conf *mdev , u64 id , sector_t sector ,
>                                                int data_size ) 
23790c25160
<   struct drbd_epoch_entry *e ;
---
>   struct drbd_peer_request *peer_req ;
23794c25164
<   int rr ;
---
>   int err ;
23799c25169,25171
<   struct task_struct *tmp___1 ;
---
>   bool _bool ;
>   int tmp___1 ;
>   bool _bool___0 ;
23801,23802d25172
<   int _b ;
<   int _b___0 ;
23808c25178
<   struct task_struct *tmp___5 ;
---
>   struct page *tmp___5 ;
23810,23811d25179
<   struct page *tmp___7 ;
<   int tmp___8 ;
23814c25182
< #line 1315
---
> #line 1566
23816c25184
< #line 1315
---
> #line 1566
23818,23826c25186,25196
< #line 1319
<   dig_in = mdev->int_dig_in;
< #line 1320
<   dig_vv = mdev->int_dig_vv;
< #line 1323
<   if (mdev->agreed_pro_version > 86 && (unsigned long )mdev->integrity_r_tfm != (unsigned long )((struct crypto_hash *)0)) {
< #line 1323
<     tmp___0 = crypto_hash_digestsize(mdev->integrity_r_tfm);
< #line 1323
---
> #line 1570
>   dig_in = (mdev->tconn)->int_dig_in;
> #line 1571
>   dig_vv = (mdev->tconn)->int_dig_vv;
> #line 1574
>   dgs = 0;
> #line 1575
>   if ((unsigned long )(mdev->tconn)->peer_integrity_tfm != (unsigned long )((struct crypto_hash *)0)) {
> #line 1576
>     tmp___0 = crypto_hash_digestsize((mdev->tconn)->peer_integrity_tfm);
> #line 1576
23828,23850c25198,25202
<   } else {
< #line 1323
<     dgs = 0;
<   }
< #line 1326
<   if (dgs != 0) {
< #line 1327
<     rr = drbd_recv(mdev, dig_in, (size_t )dgs);
< #line 1328
<     if (rr != dgs) {
< #line 1329
<       tmp___1 = get_current();
< #line 1329
<       tmp___2 = signal_pending(tmp___1);
< #line 1329
<       if (tmp___2 == 0) {
< #line 1330
<         dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "short read receiving data digest: read %d expected %d\n",
<                  rr, dgs);
<       } else {
< 
<       }
< #line 1333
---
> #line 1581
>     err = drbd_recv_all_warn(mdev->tconn, dig_in, (size_t )dgs);
> #line 1582
>     if (err != 0) {
> #line 1583
23854a25207,25208
> #line 1584
>     data_size = data_size - dgs;
23858,23867c25212,25218
< #line 1337
<   data_size = data_size - dgs;
< #line 1339
<   _b = (data_size & 511) != 0;
< #line 1339
<   if (_b != 0) {
< #line 1339
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "read_in_block", (char *)"data_size & 0x1ff", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             1339);
---
> #line 1587
>   _bool = (data_size & 511) == 0;
> #line 1587
>   if (! _bool) {
> #line 1587
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"IS_ALIGNED(data_size, 512)", "read_in_block");
23871,23873c25222,25232
< #line 1339
<   if (_b != 0) {
< #line 1339
---
> #line 1587
>   if (_bool) {
> #line 1587
>     tmp___1 = 0;
>   } else {
> #line 1587
>     tmp___1 = 1;
>   }
> #line 1587
>   if (tmp___1) {
> #line 1588
23878,23885c25237,25243
< #line 1340
<   _b___0 = (unsigned int )data_size > 131072U;
< #line 1340
<   if (_b___0 != 0) {
< #line 1340
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "read_in_block", (char *)"data_size > DRBD_MAX_BIO_SIZE", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             1340);
---
> #line 1589
>   _bool___0 = (unsigned int )data_size <= 1048576U;
> #line 1589
>   if (! _bool___0) {
> #line 1589
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"data_size <= DRBD_MAX_BIO_SIZE", "read_in_block");
23889,23891c25247,25257
< #line 1340
<   if (_b___0 != 0) {
< #line 1340
---
> #line 1589
>   if (_bool___0) {
> #line 1589
>     tmp___2 = 0;
>   } else {
> #line 1589
>     tmp___2 = 1;
>   }
> #line 1589
>   if (tmp___2) {
> #line 1590
23896c25262
< #line 1344
---
> #line 1594
23898c25264
< #line 1345
---
> #line 1595
23901c25267
< #line 1349
---
> #line 1599
23906,23910c25272,25276
< #line 1355
<   e = drbd_alloc_ee(mdev, id, sector, (unsigned int )data_size, 16U);
< #line 1356
<   if ((unsigned long )e == (unsigned long )((struct drbd_epoch_entry *)0)) {
< #line 1357
---
> #line 1605
>   peer_req = drbd_alloc_peer_req(mdev, id, sector, (unsigned int )data_size, 16U);
> #line 1606
>   if ((unsigned long )peer_req == (unsigned long )((struct drbd_peer_request *)0)) {
> #line 1607
23915c25281
< #line 1359
---
> #line 1609
23917,23918c25283,25284
< #line 1360
<     return (e);
---
> #line 1610
>     return (peer_req);
23922c25288
< #line 1362
---
> #line 1612
23924,23929c25290,25295
< #line 1363
<   page = e->pages;
< #line 1364
<   goto ldv_52426;
<   ldv_52425: 
< #line 1365
---
> #line 1613
>   page = peer_req->pages;
> #line 1614
>   goto ldv_53164;
>   ldv_53163: 
> #line 1615
23931c25297
< #line 1365
---
> #line 1615
23933c25299
< #line 1365
---
> #line 1615
23935c25301
< #line 1366
---
> #line 1616
23937c25303
< #line 1366
---
> #line 1616
23939,23941c25305,25307
< #line 1367
<   rr = drbd_recv(mdev, (void *)data, (size_t )len);
< #line 1368
---
> #line 1617
>   err = drbd_recv_all_warn(mdev->tconn, (void *)data, (size_t )len);
> #line 1618
23943c25309
< #line 1368
---
> #line 1618
23945c25311
< #line 1369
---
> #line 1619
23947c25313
< #line 1370
---
> #line 1620
23952c25318
< #line 1372
---
> #line 1622
23954,23970c25320,25324
< #line 1373
<   if ((unsigned int )rr != len) {
< #line 1374
<     drbd_free_some_ee(mdev, e, 0);
< #line 1375
<     tmp___5 = get_current();
< #line 1375
<     tmp___6 = signal_pending(tmp___5);
< #line 1375
<     if (tmp___6 == 0) {
< #line 1376
<       dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "short read receiving data: read %d expected %d\n",
<                rr, len);
<     } else {
< 
<     }
< #line 1378
---
> #line 1623
>   if (err != 0) {
> #line 1624
>     __drbd_free_peer_req(mdev, peer_req, 0);
> #line 1625
23975,23977c25329,25331
< #line 1380
<   ds = ds - rr;
< #line 1364
---
> #line 1627
>   ds = (int )((unsigned int )ds - len);
> #line 1614
23979,23980c25333,25334
<   ldv_52426: ;
< #line 1364
---
>   ldv_53164: ;
> #line 1614
23982,23986c25336,25340
< #line 1364
<     tmp___7 = page_chain_next(page);
< #line 1364
<     __builtin_prefetch((void const   *)tmp___7);
< #line 1364
---
> #line 1614
>     tmp___5 = page_chain_next(page);
> #line 1614
>     __builtin_prefetch((void const   *)tmp___5);
> #line 1614
23988,23989c25342,25343
< #line 1365
<       goto ldv_52425;
---
> #line 1615
>       goto ldv_53163;
23991,23992c25345,25346
< #line 1367
<       goto ldv_52427;
---
> #line 1617
>       goto ldv_53165;
23997,23998c25351,25352
<   ldv_52427: ;
< #line 1383
---
>   ldv_53165: ;
> #line 1630
24000,24006c25354,25360
< #line 1384
<     drbd_csum_ee(mdev, mdev->integrity_r_tfm, e, dig_vv);
< #line 1385
<     tmp___8 = memcmp((void const   *)dig_in, (void const   *)dig_vv, (size_t )dgs);
< #line 1385
<     if (tmp___8 != 0) {
< #line 1386
---
> #line 1631
>     drbd_csum_ee(mdev, (mdev->tconn)->peer_integrity_tfm, peer_req, dig_vv);
> #line 1632
>     tmp___6 = memcmp((void const   *)dig_in, (void const   *)dig_vv, (size_t )dgs);
> #line 1632
>     if (tmp___6 != 0) {
> #line 1633
24009,24014c25363,25365
< #line 1388
<       drbd_bcast_ee(mdev, "digest failed", dgs, (char const   *)dig_in, (char const   *)dig_vv,
<                     (struct drbd_epoch_entry  const  *)e);
< #line 1390
<       drbd_free_some_ee(mdev, e, 0);
< #line 1391
---
> #line 1635
>       __drbd_free_peer_req(mdev, peer_req, 0);
> #line 1636
24022c25373
< #line 1394
---
> #line 1639
24024,24025c25375,25376
< #line 1395
<   return (e);
---
> #line 1640
>   return (peer_req);
24028c25379
< #line 1401 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 1646 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
24032,24033c25383
<   int rr ;
<   int rv ;
---
>   int err ;
24034a25385
>   unsigned int len ;
24037,24042d25387
<   int __min1___0 ;
<   int __min2___0 ;
<   struct task_struct *tmp ;
<   int tmp___0 ;
<   int __min1___1 ;
<   int __min2___1 ;
24045,24047c25390,25392
< #line 1404
<   rv = 1;
< #line 1407
---
> #line 1649
>   err = 0;
> #line 1652
24049,24050c25394,25395
< #line 1408
<     return (1);
---
> #line 1653
>     return (0);
24054,24056c25399,25401
< #line 1410
<   page = drbd_pp_alloc(mdev, 1U, 1);
< #line 1412
---
> #line 1655
>   page = drbd_alloc_pages(mdev, 1U, 1);
> #line 1657
24058,24061c25403,25406
< #line 1413
<   goto ldv_52447;
<   ldv_52446: 
< #line 1414
---
> #line 1658
>   goto ldv_53179;
>   ldv_53178: 
> #line 1659
24063c25408
< #line 1414
---
> #line 1659
24065,24092c25410,25417
< #line 1414
<   rr = drbd_recv(mdev, data, (size_t )(__min1 < __min2 ? __min1 : __min2));
< #line 1415
<   __min1___1 = data_size;
< #line 1415
<   __min2___1 = 4096;
< #line 1415
<   if ((__min1___1 < __min2___1 ? __min1___1 : __min2___1) != rr) {
< #line 1416
<     rv = 0;
< #line 1417
<     tmp = get_current();
< #line 1417
<     tmp___0 = signal_pending(tmp);
< #line 1417
<     if (tmp___0 == 0) {
< #line 1420
<       __min1___0 = data_size;
< #line 1420
<       __min2___0 = 4096;
< #line 1420
<       dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "short read receiving data: read %d expected %d\n",
<                rr, __min1___0 < __min2___0 ? __min1___0 : __min2___0);
<     } else {
< 
<     }
< #line 1421
<     goto ldv_52445;
---
> #line 1659
>   len = (unsigned int )(__min1 < __min2 ? __min1 : __min2);
> #line 1661
>   err = drbd_recv_all_warn(mdev->tconn, data, (size_t )len);
> #line 1662
>   if (err != 0) {
> #line 1663
>     goto ldv_53177;
24096,24099c25421,25424
< #line 1423
<   data_size = data_size - rr;
<   ldv_52447: ;
< #line 1413
---
> #line 1664
>   data_size = (int )((unsigned int )data_size - len);
>   ldv_53179: ;
> #line 1658
24101,24102c25426,25427
< #line 1414
<     goto ldv_52446;
---
> #line 1659
>     goto ldv_53178;
24106,24107c25431,25432
<   ldv_52445: 
< #line 1425
---
>   ldv_53177: 
> #line 1666
24109,24112c25434,25437
< #line 1426
<   drbd_pp_free(mdev, page, 0);
< #line 1427
<   return (rv);
---
> #line 1667
>   drbd_free_pages(mdev, page, 0);
> #line 1668
>   return (err);
24115c25440
< #line 1430 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 1671 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
24122c25447
<   int rr ;
---
>   int err ;
24128,24129c25453,25454
<   struct task_struct *tmp___0 ;
<   int tmp___1 ;
---
>   void *mapped ;
>   void *tmp___0 ;
24132,24135c25457
<   void *tmp___2 ;
<   struct task_struct *tmp___3 ;
<   int tmp___4 ;
<   int tmp___5 ;
---
>   int tmp___1 ;
24138,24146c25460,25470
< #line 1436
<   dig_in = mdev->int_dig_in;
< #line 1437
<   dig_vv = mdev->int_dig_vv;
< #line 1439
<   if (mdev->agreed_pro_version > 86 && (unsigned long )mdev->integrity_r_tfm != (unsigned long )((struct crypto_hash *)0)) {
< #line 1439
<     tmp = crypto_hash_digestsize(mdev->integrity_r_tfm);
< #line 1439
---
> #line 1677
>   dig_in = (mdev->tconn)->int_dig_in;
> #line 1678
>   dig_vv = (mdev->tconn)->int_dig_vv;
> #line 1680
>   dgs = 0;
> #line 1681
>   if ((unsigned long )(mdev->tconn)->peer_integrity_tfm != (unsigned long )((struct crypto_hash *)0)) {
> #line 1682
>     tmp = crypto_hash_digestsize((mdev->tconn)->peer_integrity_tfm);
> #line 1682
24148,24171c25472,25477
<   } else {
< #line 1439
<     dgs = 0;
<   }
< #line 1442
<   if (dgs != 0) {
< #line 1443
<     rr = drbd_recv(mdev, dig_in, (size_t )dgs);
< #line 1444
<     if (rr != dgs) {
< #line 1445
<       tmp___0 = get_current();
< #line 1445
<       tmp___1 = signal_pending(tmp___0);
< #line 1445
<       if (tmp___1 == 0) {
< #line 1446
<         dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "short read receiving data reply digest: read %d expected %d\n",
<                  rr, dgs);
<       } else {
< 
<       }
< #line 1449
<       return (0);
---
> #line 1683
>     err = drbd_recv_all_warn(mdev->tconn, dig_in, (size_t )dgs);
> #line 1684
>     if (err != 0) {
> #line 1685
>       return (err);
24174a25481,25482
> #line 1686
>     data_size = data_size - dgs;
24178,24180c25486
< #line 1453
<   data_size = data_size - dgs;
< #line 1457
---
> #line 1691
24182c25488
< #line 1459
---
> #line 1693
24184c25490
< #line 1460
---
> #line 1694
24186c25492
< #line 1460
---
> #line 1694
24188,24189c25494,25495
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             1460);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>             1694);
24193c25499
< #line 1462
---
> #line 1696
24195c25501
< #line 1462
---
> #line 1696
24197,24200c25503,25510
< #line 1462
<   goto ldv_52466;
<   ldv_52465: 
< #line 1463
---
> #line 1696
>   goto ldv_53199;
>   ldv_53198: 
> #line 1697
>   tmp___0 = kmap(bvec->bv_page);
> #line 1697
>   mapped = tmp___0 + (unsigned long )bvec->bv_offset;
> #line 1698
24202c25512
< #line 1463
---
> #line 1698
24204c25514
< #line 1463
---
> #line 1698
24206,24210c25516,25518
< #line 1464
<   tmp___2 = kmap(bvec->bv_page);
< #line 1464
<   rr = drbd_recv(mdev, tmp___2 + (unsigned long )bvec->bv_offset, (size_t )expect);
< #line 1467
---
> #line 1699
>   err = drbd_recv_all_warn(mdev->tconn, mapped, (size_t )expect);
> #line 1700
24212,24227c25520,25523
< #line 1468
<   if (rr != expect) {
< #line 1469
<     tmp___3 = get_current();
< #line 1469
<     tmp___4 = signal_pending(tmp___3);
< #line 1469
<     if (tmp___4 == 0) {
< #line 1470
<       dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "short read receiving data reply: read %d expected %d\n",
<                rr, expect);
<     } else {
< 
<     }
< #line 1473
<     return (0);
---
> #line 1701
>   if (err != 0) {
> #line 1702
>     return (err);
24231,24233c25527,25529
< #line 1475
<   data_size = data_size - rr;
< #line 1462
---
> #line 1703
>   data_size = data_size - expect;
> #line 1696
24235c25531
< #line 1462
---
> #line 1696
24237,24238c25533,25534
<   ldv_52466: ;
< #line 1462
---
>   ldv_53199: ;
> #line 1696
24240,24241c25536,25537
< #line 1463
<     goto ldv_52465;
---
> #line 1697
>     goto ldv_53198;
24246c25542
< #line 1478
---
> #line 1706
24248,24254c25544,25550
< #line 1479
<     drbd_csum_bio(mdev, mdev->integrity_r_tfm, bio, dig_vv);
< #line 1480
<     tmp___5 = memcmp((void const   *)dig_in, (void const   *)dig_vv, (size_t )dgs);
< #line 1480
<     if (tmp___5 != 0) {
< #line 1481
---
> #line 1707
>     drbd_csum_bio(mdev, (mdev->tconn)->peer_integrity_tfm, bio, dig_vv);
> #line 1708
>     tmp___1 = memcmp((void const   *)dig_in, (void const   *)dig_vv, (size_t )dgs);
> #line 1708
>     if (tmp___1 != 0) {
> #line 1709
24256,24257c25552,25553
< #line 1482
<       return (0);
---
> #line 1710
>       return (-22);
24264c25560
< #line 1486
---
> #line 1714
24266c25562
< #line 1486
---
> #line 1714
24268,24269c25564,25565
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             1486);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>             1714);
24273,24274c25569,25570
< #line 1487
<   return (1);
---
> #line 1715
>   return (0);
24277,24278c25573,25574
< #line 1492 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int e_end_resync_block(struct drbd_conf *mdev , struct drbd_work *w , int unused ) 
---
> #line 1722 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int e_end_resync_block(struct drbd_work *w , int unused ) 
24280c25576,25578
<   struct drbd_epoch_entry *e ;
---
>   struct drbd_peer_request *peer_req ;
>   struct drbd_work  const  *__mptr ;
>   struct drbd_conf *mdev ;
24282,24286c25580,25583
<   int ok ;
<   int tmp ;
<   long tmp___0 ;
<   int tmp___1 ;
<   int tmp___2 ;
---
>   int err ;
>   bool tmp ;
>   int tmp___0 ;
>   long tmp___1 ;
24289,24300c25586,25599
< #line 1494
<   e = (struct drbd_epoch_entry *)w;
< #line 1495
<   sector = e->sector;
< #line 1498
<   tmp = hlist_unhashed((struct hlist_node  const  *)(& e->collision));
< #line 1498
<   if (tmp == 0) {
< #line 1498
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( hlist_unhashed(&e->collision) ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             1498);
---
> #line 1725
>   __mptr = (struct drbd_work  const  *)w;
> #line 1725
>   peer_req = (struct drbd_peer_request *)__mptr;
> #line 1726
>   mdev = w->ldv_49807.mdev;
> #line 1727
>   sector = peer_req->i.sector;
> #line 1730
>   tmp = drbd_interval_empty(& peer_req->i);
> #line 1730
>   if (tmp) {
> #line 1730
>     tmp___0 = 0;
24302c25601,25602
< 
---
> #line 1730
>     tmp___0 = 1;
24304,24312c25604,25609
< #line 1500
<   tmp___0 = __builtin_expect((e->flags & 8UL) == 0UL, 1L);
< #line 1500
<   if (tmp___0 != 0L) {
< #line 1501
<     __drbd_set_in_sync(mdev, sector, (int )e->size, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<                        1501U);
< #line 1502
<     ok = drbd_send_ack(mdev, P_RS_WRITE_ACK, e);
---
> #line 1730
>   if (tmp___0) {
> #line 1730
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( drbd_interval_empty(&peer_req->i) ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>             1730);
24314,24317c25611
< #line 1505
<     drbd_rs_failed_io(mdev, sector, (int )e->size);
< #line 1507
<     ok = drbd_send_ack(mdev, P_NEG_ACK, e);
---
> 
24319,24329c25613,25621
< #line 1509
<   atomic_dec(& mdev->unacked_cnt);
< #line 1509
<   tmp___2 = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 1509
<   if (tmp___2 < 0) {
< #line 1509
<     tmp___1 = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 1509
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: unacked_cnt = %d < 0 !\n",
<             "e_end_resync_block", 1509, tmp___1);
---
> #line 1732
>   tmp___1 = __builtin_expect((peer_req->flags & 8UL) == 0UL, 1L);
> #line 1732
>   if (tmp___1 != 0L) {
> #line 1733
>     __drbd_set_in_sync(mdev, sector, (int )peer_req->i.size, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>                        1733U);
> #line 1734
>     err = drbd_send_ack(mdev, P_RS_WRITE_ACK, peer_req);
24331c25623,25626
< 
---
> #line 1737
>     drbd_rs_failed_io(mdev, sector, (int )peer_req->i.size);
> #line 1739
>     err = drbd_send_ack(mdev, P_NEG_ACK, peer_req);
24333,24334c25628,25631
< #line 1511
<   return (ok);
---
> #line 1741
>   _dec_unacked(mdev, "e_end_resync_block", 1741);
> #line 1743
>   return (err);
24337c25634
< #line 1514 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 1746 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
24340c25637
<   struct drbd_epoch_entry *e ;
---
>   struct drbd_peer_request *peer_req ;
24342,24343d25638
<   int tmp___0 ;
<   int tmp___1 ;
24346,24350c25641,25645
< #line 1518
<   e = read_in_block(mdev, 0xffffffffffffffffULL, sector, data_size);
< #line 1519
<   if ((unsigned long )e == (unsigned long )((struct drbd_epoch_entry *)0)) {
< #line 1520
---
> #line 1750
>   peer_req = read_in_block(mdev, 0xffffffffffffffffULL, sector, data_size);
> #line 1751
>   if ((unsigned long )peer_req == (unsigned long )((struct drbd_peer_request *)0)) {
> #line 1752
24355,24369c25650,25652
< #line 1522
<   atomic_dec(& mdev->rs_pending_cnt);
< #line 1522
<   tmp___0 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
< #line 1522
<   if (tmp___0 < 0) {
< #line 1522
<     tmp = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
< #line 1522
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: rs_pending_cnt = %d < 0 !\n",
<             "recv_resync_read", 1522, tmp);
<   } else {
< 
<   }
< #line 1524
---
> #line 1754
>   _dec_rs_pending(mdev, "recv_resync_read", 1754);
> #line 1756
24371,24379c25654,25662
< #line 1528
<   e->w.cb = & e_end_resync_block;
< #line 1530
<   spin_lock_irq(& mdev->req_lock);
< #line 1531
<   list_add(& e->w.list, & mdev->sync_ee);
< #line 1532
<   spin_unlock_irq(& mdev->req_lock);
< #line 1534
---
> #line 1760
>   peer_req->w.cb = & e_end_resync_block;
> #line 1762
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 1763
>   list_add(& peer_req->w.list, & mdev->sync_ee);
> #line 1764
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 1766
24381,24386c25664,25669
< #line 1535
<   tmp___1 = drbd_submit_ee(mdev, e, 1U, 2);
< #line 1535
<   if (tmp___1 == 0) {
< #line 1536
<     return (1);
---
> #line 1767
>   tmp = drbd_submit_peer_request(mdev, peer_req, 1U, 2);
> #line 1767
>   if (tmp == 0) {
> #line 1768
>     return (0);
24390c25673
< #line 1539
---
> #line 1771
24392,24399c25675,25682
< #line 1540
<   spin_lock_irq(& mdev->req_lock);
< #line 1541
<   list_del(& e->w.list);
< #line 1542
<   spin_unlock_irq(& mdev->req_lock);
< #line 1544
<   drbd_free_some_ee(mdev, e, 0);
---
> #line 1772
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 1773
>   list_del(& peer_req->w.list);
> #line 1774
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 1776
>   __drbd_free_peer_req(mdev, peer_req, 0);
24401c25684
< #line 1546
---
> #line 1778
24403c25686,25718
< #line 1547
---
> #line 1779
>   return (-5);
> }
> }
> #line 1783 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static struct drbd_request *find_request(struct drbd_conf *mdev , struct rb_root *root ,
>                                          u64 id , sector_t sector , bool missing_ok ,
>                                          char const   *func ) 
> { 
>   struct drbd_request *req ;
>   bool tmp ;
> 
>   {
> #line 1789
>   req = (struct drbd_request *)id;
> #line 1790
>   tmp = drbd_contains_interval(root, sector, & req->i);
> #line 1790
>   if ((int )tmp && (unsigned int )*((unsigned char *)req + 88UL) != 0U) {
> #line 1791
>     return (req);
>   } else {
> 
>   }
> #line 1792
>   if (! missing_ok) {
> #line 1793
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "%s: failed to find request 0x%lx, sector %llus\n",
>             func, (unsigned long )id, (unsigned long long )sector);
>   } else {
> 
>   }
> #line 1796
24407,24408c25722,25723
< #line 1550 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int receive_DataReply(struct drbd_conf *mdev , enum drbd_packets cmd , unsigned int data_size ) 
---
> #line 1799 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int receive_DataReply(struct drbd_tconn *tconn , struct packet_info *pi ) 
24409a25725
>   struct drbd_conf *mdev ;
24412c25728
<   int ok ;
---
>   int err ;
24418,24420c25734,25745
< #line 1555
<   p = & mdev->data.rbuf.data;
< #line 1557
---
> #line 1805
>   p = (struct p_data *)pi->data;
> #line 1807
>   mdev = vnr_to_mdev(tconn, (int )pi->vnr);
> #line 1808
>   if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
> #line 1809
>     return (-5);
>   } else {
> 
>   }
> #line 1811
24422c25747
< #line 1557
---
> #line 1811
24424,24430c25749,25755
< #line 1559
<   spin_lock_irq(& mdev->req_lock);
< #line 1560
<   req = _ar_id_to_req(mdev, p->block_id, sector);
< #line 1561
<   spin_unlock_irq(& mdev->req_lock);
< #line 1562
---
> #line 1813
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 1814
>   req = find_request(mdev, & mdev->read_requests, p->block_id, sector, 0, "receive_DataReply");
> #line 1815
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 1816
24433c25758
< #line 1562
---
> #line 1816
24435,24438c25760,25761
< #line 1563
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Got a corrupt block_id/sector pair(1).\n");
< #line 1564
<     return (0);
---
> #line 1817
>     return (-5);
24442,24447c25765,25770
< #line 1570
<   ok = recv_dless_read(mdev, req, sector, (int )data_size);
< #line 1572
<   if (ok != 0) {
< #line 1573
<     req_mod(req, data_received);
---
> #line 1822
>   err = recv_dless_read(mdev, req, sector, (int )pi->size);
> #line 1823
>   if (err == 0) {
> #line 1824
>     req_mod(req, DATA_RECEIVED);
24451,24452c25774,25775
< #line 1578
<   return (ok);
---
> #line 1829
>   return (err);
24455,24456c25778,25779
< #line 1581 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int receive_RSDataReply(struct drbd_conf *mdev , enum drbd_packets cmd , unsigned int data_size ) 
---
> #line 1832 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int receive_RSDataReply(struct drbd_tconn *tconn , struct packet_info *pi ) 
24457a25781
>   struct drbd_conf *mdev ;
24459c25783
<   int ok ;
---
>   int err ;
24466,24468c25790,25801
< #line 1585
<   p = & mdev->data.rbuf.data;
< #line 1587
---
> #line 1837
>   p = (struct p_data *)pi->data;
> #line 1839
>   mdev = vnr_to_mdev(tconn, (int )pi->vnr);
> #line 1840
>   if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
> #line 1841
>     return (-5);
>   } else {
> 
>   }
> #line 1843
24470c25803
< #line 1587
---
> #line 1843
24472c25805
< #line 1588
---
> #line 1844
24474c25807
< #line 1588
---
> #line 1844
24476,24477c25809,25810
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             1588);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>             1844);
24481c25814
< #line 1590
---
> #line 1846
24483c25816
< #line 1590
---
> #line 1846
24485,24486c25818,25819
< #line 1594
<     ok = recv_resync_read(mdev, sector, (int )data_size);
---
> #line 1850
>     err = recv_resync_read(mdev, sector, (int )pi->size);
24488c25821
< #line 1596
---
> #line 1852
24490c25823
< #line 1596
---
> #line 1852
24492c25825
< #line 1597
---
> #line 1853
24497,24500c25830,25833
< #line 1599
<     ok = drbd_drain_block(mdev, (int )data_size);
< #line 1601
<     drbd_send_ack_dp(mdev, P_NEG_ACK, p, (int )data_size);
---
> #line 1855
>     err = drbd_drain_block(mdev, (int )pi->size);
> #line 1857
>     drbd_send_ack_dp(mdev, P_NEG_ACK, p, (int )pi->size);
24502,24505c25835,25838
< #line 1604
<   atomic_add((int )(data_size >> 9), & mdev->rs_sect_in);
< #line 1606
<   return (ok);
---
> #line 1860
>   atomic_add((int )(pi->size >> 9), & mdev->rs_sect_in);
> #line 1862
>   return (err);
24508,24509c25841,25843
< #line 1612 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int e_end_block(struct drbd_conf *mdev , struct drbd_work *w , int cancel ) 
---
> #line 1865 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static void restart_conflicting_writes(struct drbd_conf *mdev , sector_t sector ,
>                                        int size ) 
24511,24520c25845,25847
<   struct drbd_epoch_entry *e ;
<   sector_t sector ;
<   int ok ;
<   int pcmd ;
<   int tmp ;
<   long tmp___0 ;
<   int tmp___1 ;
<   int tmp___2 ;
<   int tmp___3 ;
<   int tmp___4 ;
---
>   struct drbd_interval *i ;
>   struct drbd_request *req ;
>   struct drbd_interval  const  *__mptr ;
24523,24541c25850,25926
< #line 1614
<   e = (struct drbd_epoch_entry *)w;
< #line 1615
<   sector = e->sector;
< #line 1616
<   ok = 1;
< #line 1618
<   if ((mdev->net_conf)->wire_protocol == 3) {
< #line 1619
<     tmp___0 = __builtin_expect((e->flags & 8UL) == 0UL, 1L);
< #line 1619
<     if (tmp___0 != 0L) {
< #line 1620
<       pcmd = ((int )mdev->state.ldv_39979.conn > 15 && (int )mdev->state.ldv_39979.conn <= 21) && (e->flags & 2UL) != 0UL ? 23 : 22;
< #line 1624
<       tmp = drbd_send_ack(mdev, (enum drbd_packets )pcmd, e);
< #line 1624
<       ok = tmp & ok;
< #line 1625
---
> #line 1871
>   i = drbd_find_overlap(& mdev->write_requests, sector, (unsigned int )size);
> #line 1871
>   goto ldv_53259;
>   ldv_53258: ;
> #line 1872
>   if ((unsigned int )*((unsigned char *)i + 48UL) == 0U) {
> #line 1873
>     goto ldv_53255;
>   } else {
> 
>   }
> #line 1874
>   __mptr = (struct drbd_interval  const  *)i;
> #line 1874
>   req = (struct drbd_request *)__mptr + 0xffffffffffffffd8UL;
> #line 1875
>   if ((int )req->rq_state & 1 || ((unsigned long )req->rq_state & 8192UL) == 0UL) {
> #line 1877
>     goto ldv_53255;
>   } else {
> 
>   }
> #line 1880
>   __req_mod(req, CONFLICT_RESOLVED, 0);
>   ldv_53255: 
> #line 1871
>   i = drbd_next_overlap(i, sector, (unsigned int )size);
>   ldv_53259: ;
> #line 1871
>   if ((unsigned long )i != (unsigned long )((struct drbd_interval *)0)) {
> #line 1872
>     goto ldv_53258;
>   } else {
> 
>   }
> 
> #line 1876
>   return;
> }
> }
> #line 1887 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int e_end_block(struct drbd_work *w , int cancel ) 
> { 
>   struct drbd_peer_request *peer_req ;
>   struct drbd_work  const  *__mptr ;
>   struct drbd_conf *mdev ;
>   sector_t sector ;
>   int err ;
>   int pcmd ;
>   long tmp ;
>   bool tmp___0 ;
>   bool tmp___1 ;
>   int tmp___2 ;
> 
>   {
> #line 1890
>   __mptr = (struct drbd_work  const  *)w;
> #line 1890
>   peer_req = (struct drbd_peer_request *)__mptr;
> #line 1891
>   mdev = w->ldv_49807.mdev;
> #line 1892
>   sector = peer_req->i.sector;
> #line 1893
>   err = 0;
> #line 1895
>   if ((peer_req->flags & 64UL) != 0UL) {
> #line 1896
>     tmp = __builtin_expect((peer_req->flags & 8UL) == 0UL, 1L);
> #line 1896
>     if (tmp != 0L) {
> #line 1897
>       pcmd = ((int )mdev->state.ldv_49522.conn > 15 && (int )mdev->state.ldv_49522.conn <= 21) && (peer_req->flags & 2UL) != 0UL ? 23 : 22;
> #line 1901
>       err = drbd_send_ack(mdev, (enum drbd_packet )pcmd, peer_req);
> #line 1902
24543,24545c25928,25930
< #line 1626
<         __drbd_set_in_sync(mdev, sector, (int )e->size, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<                            1626U);
---
> #line 1903
>         __drbd_set_in_sync(mdev, sector, (int )peer_req->i.size, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>                            1903U);
24550,24565c25935,25936
< #line 1628
<       ok = drbd_send_ack(mdev, P_NEG_ACK, e);
<     }
< #line 1632
<     atomic_dec(& mdev->unacked_cnt);
< #line 1632
<     tmp___2 = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 1632
<     if (tmp___2 < 0) {
< #line 1632
<       tmp___1 = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 1632
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: unacked_cnt = %d < 0 !\n",
<               "e_end_block", 1632, tmp___1);
<     } else {
< 
---
> #line 1905
>       err = drbd_send_ack(mdev, P_NEG_ACK, peer_req);
24566a25938,25939
> #line 1909
>     _dec_unacked(mdev, "e_end_block", 1909);
24570,24581c25943,25954
< #line 1636
<   if ((unsigned int )*((unsigned char *)mdev->net_conf + 540UL) != 0U) {
< #line 1637
<     spin_lock_irq(& mdev->req_lock);
< #line 1638
<     tmp___3 = hlist_unhashed((struct hlist_node  const  *)(& e->collision));
< #line 1638
<     if (tmp___3 != 0) {
< #line 1638
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( !hlist_unhashed(&e->collision) ) in %s:%d\n",
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<               1638);
---
> #line 1913
>   if ((peer_req->flags & 128UL) != 0UL) {
> #line 1914
>     spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 1915
>     tmp___0 = drbd_interval_empty(& peer_req->i);
> #line 1915
>     if ((int )tmp___0) {
> #line 1915
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( !drbd_interval_empty(&peer_req->i) ) in %s:%d\n",
>               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>               1915);
24585,24588c25958,25968
< #line 1639
<     hlist_del_init(& e->collision);
< #line 1640
<     spin_unlock_irq(& mdev->req_lock);
---
> #line 1916
>     drbd_remove_epoch_entry_interval(mdev, peer_req);
> #line 1917
>     if ((peer_req->flags & 32UL) != 0UL) {
> #line 1918
>       restart_conflicting_writes(mdev, sector, (int )peer_req->i.size);
>     } else {
> 
>     }
> #line 1919
>     spin_unlock_irq(& (mdev->tconn)->req_lock);
24590,24597c25970,25985
< #line 1642
<     tmp___4 = hlist_unhashed((struct hlist_node  const  *)(& e->collision));
< #line 1642
<     if (tmp___4 == 0) {
< #line 1642
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( hlist_unhashed(&e->collision) ) in %s:%d\n",
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<               1642);
---
> #line 1921
>     tmp___1 = drbd_interval_empty(& peer_req->i);
> #line 1921
>     if (tmp___1) {
> #line 1921
>       tmp___2 = 0;
>     } else {
> #line 1921
>       tmp___2 = 1;
>     }
> #line 1921
>     if (tmp___2) {
> #line 1921
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( drbd_interval_empty(&peer_req->i) ) in %s:%d\n",
>               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>               1921);
24602,24605c25990,25993
< #line 1645
<   drbd_may_finish_epoch(mdev, e->epoch, cancel != 0 ? EV_CLEANUP : EV_PUT);
< #line 1647
<   return (ok);
---
> #line 1923
>   drbd_may_finish_epoch(mdev->tconn, peer_req->epoch, cancel != 0 ? EV_CLEANUP : EV_PUT);
> #line 1925
>   return (err);
24608,24609c25996,25997
< #line 1650 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int e_send_discard_ack(struct drbd_conf *mdev , struct drbd_work *w , int unused ) 
---
> #line 1928 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int e_send_ack(struct drbd_work *w , enum drbd_packet ack ) 
24611,24612c25999,26074
<   struct drbd_epoch_entry *e ;
<   int ok ;
---
>   struct drbd_conf *mdev ;
>   struct drbd_peer_request *peer_req ;
>   struct drbd_work  const  *__mptr ;
>   int err ;
> 
>   {
> #line 1930
>   mdev = w->ldv_49807.mdev;
> #line 1932
>   __mptr = (struct drbd_work  const  *)w;
> #line 1932
>   peer_req = (struct drbd_peer_request *)__mptr;
> #line 1935
>   err = drbd_send_ack(mdev, ack, peer_req);
> #line 1936
>   _dec_unacked(mdev, "e_send_ack", 1936);
> #line 1938
>   return (err);
> }
> }
> #line 1941 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int e_send_superseded(struct drbd_work *w , int unused ) 
> { 
>   int tmp ;
> 
>   {
> #line 1943
>   tmp = e_send_ack(w, P_SUPERSEDED);
> #line 1943
>   return (tmp);
> }
> }
> #line 1946 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int e_send_retry_write(struct drbd_work *w , int unused ) 
> { 
>   struct drbd_tconn *tconn ;
>   int tmp ;
> 
>   {
> #line 1948
>   tconn = (w->ldv_49807.mdev)->tconn;
> #line 1950
>   tmp = e_send_ack(w, tconn->agreed_pro_version > 99 ? P_RETRY_WRITE : P_SUPERSEDED);
> #line 1950
>   return (tmp);
> }
> }
> #line 1954 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static bool seq_greater(u32 a , u32 b ) 
> { 
> 
> 
>   {
> #line 1961
>   return ((int )a - (int )b > 0);
> }
> }
> #line 1964 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static u32 seq_max(u32 a , u32 b ) 
> { 
>   bool tmp ;
> 
>   {
> #line 1966
>   tmp = seq_greater(a, b);
> #line 1966
>   return ((int )tmp ? a : b);
> }
> }
> #line 1969 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static bool need_peer_seq(struct drbd_conf *mdev ) 
> { 
>   struct drbd_tconn *tconn ;
>   int tp ;
>   struct net_conf *_________p1 ;
>   bool __warned ;
24615a26078
>   int tmp___2 ;
24618,24627c26081,26102
< #line 1652
<   e = (struct drbd_epoch_entry *)w;
< #line 1653
<   ok = 1;
< #line 1655
<   if ((mdev->net_conf)->wire_protocol != 3) {
< #line 1655
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mdev->net_conf->wire_protocol == DRBD_PROT_C ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             1655);
---
> #line 1971
>   tconn = mdev->tconn;
> #line 1980
>   rcu_read_lock___2();
> #line 1981
>   _________p1 = *((struct net_conf * volatile  *)(& (mdev->tconn)->net_conf));
> #line 1981
>   tmp = debug_lockdep_rcu_enabled();
> #line 1981
>   if (tmp != 0 && ! __warned) {
> #line 1981
>     tmp___0 = rcu_read_lock_held();
> #line 1981
>     if (tmp___0 == 0 && 1) {
> #line 1981
>       __warned = 1;
> #line 1981
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>                              1981, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
24631,24642c26106,26121
< #line 1656
<   ok = drbd_send_ack(mdev, P_DISCARD_ACK, e);
< #line 1658
<   spin_lock_irq(& mdev->req_lock);
< #line 1659
<   tmp = hlist_unhashed((struct hlist_node  const  *)(& e->collision));
< #line 1659
<   if (tmp != 0) {
< #line 1659
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( !hlist_unhashed(&e->collision) ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             1659);
---
> #line 1981
>   tp = (int )_________p1->two_primaries;
> #line 1982
>   rcu_read_unlock___2();
> #line 1984
>   if (tp != 0) {
> #line 1984
>     tmp___1 = constant_test_bit(1U, (unsigned long const volatile   *)(& tconn->flags));
> #line 1984
>     if (tmp___1 != 0) {
> #line 1984
>       tmp___2 = 1;
>     } else {
> #line 1984
>       tmp___2 = 0;
>     }
24644c26123,26124
< 
---
> #line 1984
>     tmp___2 = 0;
24646,24660c26126,26155
< #line 1660
<   hlist_del_init(& e->collision);
< #line 1661
<   spin_unlock_irq(& mdev->req_lock);
< #line 1663
<   atomic_dec(& mdev->unacked_cnt);
< #line 1663
<   tmp___1 = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 1663
<   if (tmp___1 < 0) {
< #line 1663
<     tmp___0 = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 1663
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: unacked_cnt = %d < 0 !\n",
<             "e_send_discard_ack", 1663, tmp___0);
---
> #line 1984
>   return ((bool )tmp___2);
> }
> }
> #line 1987 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static void update_peer_seq(struct drbd_conf *mdev , unsigned int peer_seq ) 
> { 
>   unsigned int newest_peer_seq ;
>   bool tmp ;
> 
>   {
> #line 1991
>   tmp = need_peer_seq(mdev);
> #line 1991
>   if ((int )tmp) {
> #line 1992
>     spin_lock(& mdev->peer_seq_lock);
> #line 1993
>     newest_peer_seq = seq_max(mdev->peer_seq, peer_seq);
> #line 1994
>     mdev->peer_seq = newest_peer_seq;
> #line 1995
>     spin_unlock(& mdev->peer_seq_lock);
> #line 1997
>     if (peer_seq == newest_peer_seq) {
> #line 1998
>       __wake_up(& mdev->seq_wait, 3U, 1, 0);
>     } else {
> 
>     }
24664,24665c26159,26170
< #line 1665
<   return (ok);
---
> #line 2000
>   return;
> }
> }
> #line 2002 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> __inline static int overlaps(sector_t s1 , int l1 , sector_t s2 , int l2 ) 
> { 
> 
> 
>   {
> #line 2004
>   return ((sector_t )(l1 >> 9) + s1 > s2 && (sector_t )(l2 >> 9) + s2 > s1);
24668,24669c26173,26174
< #line 1668 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static bool overlapping_resync_write(struct drbd_conf *mdev , struct drbd_epoch_entry *data_e ) 
---
> #line 2008 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static bool overlapping_resync_write(struct drbd_conf *mdev , struct drbd_peer_request *peer_req ) 
24671c26176
<   struct drbd_epoch_entry *rs_e ;
---
>   struct drbd_peer_request *rs_req ;
24678c26183
< #line 1672
---
> #line 2011
24680,24682c26185,26187
< #line 1674
<   spin_lock_irq(& mdev->req_lock);
< #line 1675
---
> #line 2013
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 2014
24684,24691c26189,26196
< #line 1675
<   rs_e = (struct drbd_epoch_entry *)__mptr;
< #line 1675
<   goto ldv_52545;
<   ldv_52544: 
< #line 1676
<   tmp = overlaps(data_e->sector, (int )data_e->size, rs_e->sector, (int )rs_e->size);
< #line 1676
---
> #line 2014
>   rs_req = (struct drbd_peer_request *)__mptr;
> #line 2014
>   goto ldv_53331;
>   ldv_53330: 
> #line 2015
>   tmp = overlaps(peer_req->i.sector, (int )peer_req->i.size, rs_req->i.sector, (int )rs_req->i.size);
> #line 2015
24693c26198
< #line 1677
---
> #line 2017
24695,24696c26200,26201
< #line 1678
<     goto ldv_52543;
---
> #line 2018
>     goto ldv_53329;
24700,24708c26205,26213
< #line 1675
<   __mptr___0 = (struct list_head  const  *)rs_e->w.list.next;
< #line 1675
<   rs_e = (struct drbd_epoch_entry *)__mptr___0;
<   ldv_52545: ;
< #line 1675
<   if ((unsigned long )(& rs_e->w.list) != (unsigned long )(& mdev->sync_ee)) {
< #line 1676
<     goto ldv_52544;
---
> #line 2014
>   __mptr___0 = (struct list_head  const  *)rs_req->w.list.next;
> #line 2014
>   rs_req = (struct drbd_peer_request *)__mptr___0;
>   ldv_53331: ;
> #line 2014
>   if ((unsigned long )(& rs_req->w.list) != (unsigned long )(& mdev->sync_ee)) {
> #line 2015
>     goto ldv_53330;
24712,24715c26217,26220
<   ldv_52543: 
< #line 1681
<   spin_unlock_irq(& mdev->req_lock);
< #line 1683
---
>   ldv_53329: 
> #line 2021
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 2023
24719,24720c26224,26225
< #line 1707 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int drbd_wait_peer_seq(struct drbd_conf *mdev , u32 const   packet_seq ) 
---
> #line 2047 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int wait_for_and_update_peer_seq(struct drbd_conf *mdev , u32 const   peer_seq ) 
24724d26228
<   unsigned int p_seq ;
24727,24729c26231,26240
<   int tmp___0 ;
<   struct task_struct *tmp___1 ;
<   int tmp___2 ;
---
>   bool tmp___0 ;
>   int tmp___1 ;
>   bool tmp___2 ;
>   int tmp___3 ;
>   struct task_struct *tmp___4 ;
>   int tmp___5 ;
>   struct net_conf *_________p1 ;
>   bool __warned ;
>   int tmp___6 ;
>   int tmp___7 ;
24732c26243
< #line 1709
---
> #line 2049
24734c26245
< #line 1709
---
> #line 2049
24736c26247
< #line 1709
---
> #line 2049
24738c26249
< #line 1709
---
> #line 2049
24740c26251
< #line 1709
---
> #line 2049
24742c26253
< #line 1709
---
> #line 2049
24744,24746c26255,26272
< #line 1712
<   ret = 0;
< #line 1713
---
> #line 2053
>   tmp___0 = need_peer_seq(mdev);
> #line 2053
>   if (tmp___0) {
> #line 2053
>     tmp___1 = 0;
>   } else {
> #line 2053
>     tmp___1 = 1;
>   }
> #line 2053
>   if (tmp___1) {
> #line 2054
>     return (0);
>   } else {
> 
>   }
> #line 2056
24748,24756c26274,26292
<   ldv_52555: 
< #line 1715
<   prepare_to_wait(& mdev->seq_wait, & wait, 1);
< #line 1716
<   tmp___0 = seq_cmp(packet_seq, mdev->peer_seq + 1U);
< #line 1716
<   if (tmp___0 <= 0) {
< #line 1717
<     goto ldv_52554;
---
>   ldv_53343: 
> #line 2058
>   tmp___2 = seq_greater((unsigned int )peer_seq - 1U, mdev->peer_seq);
> #line 2058
>   if (tmp___2) {
> #line 2058
>     tmp___3 = 0;
>   } else {
> #line 2058
>     tmp___3 = 1;
>   }
> #line 2058
>   if (tmp___3) {
> #line 2059
>     mdev->peer_seq = seq_max(mdev->peer_seq, peer_seq);
> #line 2060
>     ret = 0;
> #line 2061
>     goto ldv_53339;
24760,24766c26296,26302
< #line 1718
<   tmp___1 = get_current();
< #line 1718
<   tmp___2 = signal_pending(tmp___1);
< #line 1718
<   if (tmp___2 != 0) {
< #line 1719
---
> #line 2063
>   tmp___4 = get_current();
> #line 2063
>   tmp___5 = signal_pending(tmp___4);
> #line 2063
>   if (tmp___5 != 0) {
> #line 2064
24768,24769c26304,26305
< #line 1720
<     goto ldv_52554;
---
> #line 2065
>     goto ldv_53339;
24773,24775c26309,26311
< #line 1722
<   p_seq = mdev->peer_seq;
< #line 1723
---
> #line 2067
>   prepare_to_wait(& mdev->seq_wait, & wait, 1);
> #line 2068
24777,24788c26313,26332
< #line 1724
<   timeout = schedule_timeout(7500L);
< #line 1725
<   spin_lock(& mdev->peer_seq_lock);
< #line 1726
<   if (timeout == 0L && mdev->peer_seq == p_seq) {
< #line 1727
<     ret = -110;
< #line 1728
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED waited 30 seconds for sequence update, forcing reconnect\n");
< #line 1729
<     goto ldv_52554;
---
> #line 2069
>   rcu_read_lock___2();
> #line 2070
>   _________p1 = *((struct net_conf * volatile  *)(& (mdev->tconn)->net_conf));
> #line 2070
>   tmp___6 = debug_lockdep_rcu_enabled();
> #line 2070
>   if (tmp___6 != 0 && ! __warned) {
> #line 2070
>     tmp___7 = rcu_read_lock_held();
> #line 2070
>     if (tmp___7 == 0 && 1) {
> #line 2070
>       __warned = 1;
> #line 2070
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>                              2070, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
24792,24800c26336,26351
< #line 1731
<   goto ldv_52555;
<   ldv_52554: 
< #line 1732
<   finish_wait(& mdev->seq_wait, & wait);
< #line 1733
<   if (mdev->peer_seq + 1U == (unsigned int )packet_seq) {
< #line 1734
<     mdev->peer_seq = mdev->peer_seq + 1U;
---
> #line 2070
>   timeout = (long )((_________p1->ping_timeo * 250U) / 10U);
> #line 2071
>   rcu_read_unlock___2();
> #line 2072
>   timeout = schedule_timeout(timeout);
> #line 2073
>   spin_lock(& mdev->peer_seq_lock);
> #line 2074
>   if (timeout == 0L) {
> #line 2075
>     ret = -110;
> #line 2076
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Timed out waiting for missing ack packets; disconnecting\n");
> #line 2077
>     goto ldv_53339;
24804c26355,26358
< #line 1735
---
> #line 2079
>   goto ldv_53343;
>   ldv_53339: 
> #line 2080
24806c26360,26362
< #line 1736
---
> #line 2081
>   finish_wait(& mdev->seq_wait, & wait);
> #line 2082
24810c26366
< #line 1742 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2088 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
24816c26372
< #line 1744
---
> #line 2090
24820,24821c26376,26377
< #line 1751 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int receive_Data(struct drbd_conf *mdev , enum drbd_packets cmd , unsigned int data_size ) 
---
> #line 2096 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static void fail_postponed_requests(struct drbd_conf *mdev , sector_t sector , unsigned int size ) 
24823,24862c26379,26382
<   sector_t sector ;
<   struct drbd_epoch_entry *e ;
<   struct p_data *p ;
<   int rw ;
<   u32 dp_flags ;
<   __u32 tmp ;
<   int tmp___0 ;
<   int tmp___1 ;
<   __u64 tmp___2 ;
<   __u32 tmp___3 ;
<   unsigned long tmp___4 ;
<   int size ;
<   int discard ;
<   int tmp___5 ;
<   wait_queue_t wait ;
<   struct task_struct *tmp___6 ;
<   struct drbd_request *i ;
<   struct hlist_node *n ;
<   struct hlist_head *slot ;
<   int first ;
<   long tmp___7 ;
<   long tmp___8 ;
<   __u32 tmp___9 ;
<   int tmp___10 ;
<   struct hlist_head *tmp___11 ;
<   int have_unacked ;
<   int have_conflict ;
<   struct task_struct *tmp___12 ;
<   struct task_struct *tmp___13 ;
<   int tmp___14 ;
<   struct hlist_node  const  *__mptr ;
<   struct task_struct *tmp___15 ;
<   int tmp___16 ;
<   bool tmp___17 ;
<   int tmp___18 ;
<   wait_queue_t __wait ;
<   struct task_struct *tmp___19 ;
<   bool tmp___20 ;
<   int tmp___21 ;
<   int tmp___22 ;
---
>   struct drbd_interval *i ;
>   struct drbd_request *req ;
>   struct bio_and_error m ;
>   struct drbd_interval  const  *__mptr ;
24865,24893c26385,26394
< #line 1755
<   p = & mdev->data.rbuf.data;
< #line 1756
<   rw = 1;
< #line 1759
<   tmp___1 = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 1759
<   if (tmp___1 == 0) {
< #line 1760
<     spin_lock(& mdev->peer_seq_lock);
< #line 1761
<     tmp = __fswab32(p->seq_num);
< #line 1761
<     if (mdev->peer_seq + 1U == tmp) {
< #line 1762
<       mdev->peer_seq = mdev->peer_seq + 1U;
<     } else {
< 
<     }
< #line 1763
<     spin_unlock(& mdev->peer_seq_lock);
< #line 1765
<     drbd_send_ack_dp(mdev, P_NEG_ACK, p, (int )data_size);
< #line 1766
<     atomic_inc(& (mdev->current_epoch)->epoch_size);
< #line 1767
<     tmp___0 = drbd_drain_block(mdev, (int )data_size);
< #line 1767
<     return (tmp___0);
---
>   repeat: 
> #line 2102
>   i = drbd_find_overlap(& mdev->write_requests, sector, size);
> #line 2102
>   goto ldv_53361;
>   ldv_53360: ;
> #line 2106
>   if ((unsigned int )*((unsigned char *)i + 48UL) == 0U) {
> #line 2107
>     goto ldv_53357;
24897,24908c26398,26405
< #line 1775
<   tmp___2 = __fswab64(p->sector);
< #line 1775
<   sector = (sector_t )tmp___2;
< #line 1776
<   e = read_in_block(mdev, p->block_id, sector, (int )data_size);
< #line 1777
<   if ((unsigned long )e == (unsigned long )((struct drbd_epoch_entry *)0)) {
< #line 1778
<     put_ldev(mdev);
< #line 1779
<     return (0);
---
> #line 2108
>   __mptr = (struct drbd_interval  const  *)i;
> #line 2108
>   req = (struct drbd_request *)__mptr + 0xffffffffffffffd8UL;
> #line 2109
>   if (((unsigned long )req->rq_state & 8192UL) == 0UL) {
> #line 2110
>     goto ldv_53357;
24912,24941c26409,26418
< #line 1782
<   e->w.cb = & e_end_block;
< #line 1784
<   tmp___3 = __fswab32(p->dp_flags);
< #line 1784
<   dp_flags = tmp___3;
< #line 1785
<   tmp___4 = wire_flags_to_bio(mdev, dp_flags);
< #line 1785
<   rw = (int )((unsigned int )tmp___4 | (unsigned int )rw);
< #line 1786
<   if ((unsigned long )e->pages == (unsigned long )((struct page *)0)) {
< #line 1787
<     if (e->size != 0U) {
< #line 1787
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( e->size == 0 ) in %s:%d\n",
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<               1787);
<     } else {
< 
<     }
< #line 1788
<     if ((dp_flags & 32U) == 0U) {
< #line 1788
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( dp_flags & DP_FLUSH ) in %s:%d\n",
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<               1788);
<     } else {
< 
<     }
---
> #line 2111
>   req->rq_state = req->rq_state & 4294959103U;
> #line 2112
>   __req_mod(req, NEG_ACKED, & m);
> #line 2113
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 2114
>   if ((unsigned long )m.bio != (unsigned long )((struct bio *)0)) {
> #line 2115
>     complete_master_bio(mdev, & m);
24945,24948c26422,26433
< #line 1791
<   if ((dp_flags & 4U) != 0U) {
< #line 1792
<     e->flags = e->flags | 2UL;
---
> #line 2116
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 2117
>   goto repeat;
>   ldv_53357: 
> #line 2102
>   i = drbd_next_overlap(i, sector, size);
>   ldv_53361: ;
> #line 2102
>   if ((unsigned long )i != (unsigned long )((struct drbd_interval *)0)) {
> #line 2103
>     goto ldv_53360;
24952,24965c26437,26481
< #line 1794
<   spin_lock(& mdev->epoch_lock);
< #line 1795
<   e->epoch = mdev->current_epoch;
< #line 1796
<   atomic_inc(& (e->epoch)->epoch_size);
< #line 1797
<   atomic_inc(& (e->epoch)->active);
< #line 1798
<   spin_unlock(& mdev->epoch_lock);
< #line 1801
<   if ((unsigned int )*((unsigned char *)mdev->net_conf + 540UL) == 0U) {
< #line 1802
<     spin_lock_irq(& mdev->req_lock);
---
> 
> #line 2107
>   return;
> }
> }
> #line 2121 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int handle_write_conflicts(struct drbd_conf *mdev , struct drbd_peer_request *peer_req ) 
> { 
>   struct drbd_tconn *tconn ;
>   bool resolve_conflicts ;
>   int tmp ;
>   sector_t sector ;
>   unsigned int size ;
>   struct drbd_interval *i ;
>   bool equal ;
>   int err ;
>   bool superseded ;
>   struct drbd_request *req ;
>   struct drbd_interval  const  *__mptr ;
>   union drbd_state val ;
>   union drbd_state mask ;
> 
>   {
> #line 2124
>   tconn = mdev->tconn;
> #line 2125
>   tmp = constant_test_bit(1U, (unsigned long const volatile   *)(& tconn->flags));
> #line 2125
>   resolve_conflicts = tmp != 0;
> #line 2126
>   sector = peer_req->i.sector;
> #line 2127
>   size = peer_req->i.size;
> #line 2136
>   drbd_insert_interval(& mdev->write_requests, & peer_req->i);
>   repeat: 
> #line 2139
>   i = drbd_find_overlap(& mdev->write_requests, sector, size);
> #line 2139
>   goto ldv_53386;
>   ldv_53385: ;
> #line 2140
>   if ((unsigned long )(& peer_req->i) == (unsigned long )i) {
> #line 2141
>     goto ldv_53375;
24967,24991d26482
< #line 1806
<     size = (int const   )e->size;
< #line 1807
<     tmp___5 = drbd_test_flag(mdev, DISCARD_CONCURRENT);
< #line 1807
<     discard = tmp___5;
< #line 1808
<     tmp___6 = get_current();
< #line 1808
<     wait.flags = 0U;
< #line 1808
<     wait.private = (void *)tmp___6;
< #line 1808
<     wait.func = & autoremove_wake_function;
< #line 1808
<     wait.task_list.next = & wait.task_list;
< #line 1808
<     wait.task_list.prev = & wait.task_list;
< #line 1814
<     if ((mdev->net_conf)->wire_protocol != 3) {
< #line 1814
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mdev->net_conf->wire_protocol == DRBD_PROT_C ) in %s:%d\n",
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<               1814);
<     } else {
24993,25004c26484,26492
<     }
< #line 1815
<     tmp___7 = __builtin_expect((unsigned long )mdev->ee_hash == (unsigned long )((struct hlist_head *)0),
<                                0L);
< #line 1815
<     if (tmp___7 != 0L) {
< #line 1815
<       __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"),
<                            "i" (1815), "i" (12UL));
<       ldv_52577: ;
< #line 1815
<       goto ldv_52577;
---
>   }
> #line 2143
>   if ((unsigned int )*((unsigned char *)i + 48UL) == 0U) {
> #line 2149
>     err = drbd_wait_misc(mdev, i);
> #line 2150
>     if (err != 0) {
> #line 2151
>       goto out;
25008,25018c26496,26512
< #line 1816
<     tmp___8 = __builtin_expect((unsigned long )mdev->tl_hash == (unsigned long )((struct hlist_head *)0),
<                                0L);
< #line 1816
<     if (tmp___8 != 0L) {
< #line 1816
<       __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"),
<                            "i" (1816), "i" (12UL));
<       ldv_52578: ;
< #line 1816
<       goto ldv_52578;
---
> #line 2152
>     goto repeat;
>   } else {
> 
>   }
> #line 2155
>   equal = (bool )(i->sector == sector && i->size == size);
> #line 2156
>   if ((int )resolve_conflicts) {
> #line 2163
>     superseded = (bool )(i->sector <= sector && i->sector + (sector_t )(i->size >> 9) >= (sector_t )(size >> 9) + sector);
> #line 2166
>     if (! equal) {
> #line 2167
>       dev_alert((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Concurrent writes detected: local=%llus +%u, remote=%llus +%u, assuming %s came first\n",
>                 (unsigned long long )i->sector, i->size, (unsigned long long )sector,
>                 size, (int )superseded ? (char *)"local" : (char *)"remote");
25022,25029c26516,26538
< #line 1852
<     tmp___9 = __fswab32(p->seq_num);
< #line 1852
<     tmp___10 = drbd_wait_peer_seq(mdev, tmp___9);
< #line 1852
<     if (tmp___10 != 0) {
< #line 1853
<       goto out_interrupted;
---
> #line 2174
>     inc_unacked(mdev);
> #line 2175
>     peer_req->w.cb = (int )superseded ? & e_send_superseded : & e_send_retry_write;
> #line 2177
>     list_add_tail(& peer_req->w.list, & mdev->done_ee);
> #line 2178
>     wake_asender(mdev->tconn);
> #line 2180
>     err = -2;
> #line 2181
>     goto out;
>   } else {
> #line 2184
>     __mptr = (struct drbd_interval  const  *)i;
> #line 2184
>     req = (struct drbd_request *)__mptr + 0xffffffffffffffd8UL;
> #line 2186
>     if (! equal) {
> #line 2187
>       dev_alert((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Concurrent writes detected: local=%llus +%u, remote=%llus +%u\n",
>                 (unsigned long long )i->sector, i->size, (unsigned long long )sector,
>                 size);
25033,25068c26542,26561
< #line 1855
<     spin_lock_irq(& mdev->req_lock);
< #line 1857
<     tmp___11 = ee_hash_slot(mdev, sector);
< #line 1857
<     hlist_add_head(& e->collision, tmp___11);
< #line 1860
<     slot = tl_hash_slot(mdev, sector);
< #line 1861
<     first = 1;
<     ldv_52589: 
< #line 1863
<     have_unacked = 0;
< #line 1864
<     have_conflict = 0;
< #line 1865
<     prepare_to_wait(& mdev->misc_wait, & wait, 1);
< #line 1867
<     n = slot->first;
< #line 1867
<     goto ldv_52586;
<     ldv_52585: 
< #line 1868
<     tmp___14 = overlaps(i->sector, (int )i->size, sector, size);
< #line 1868
<     if (tmp___14 != 0) {
< #line 1871
<       if (first != 0) {
< #line 1872
<         tmp___12 = get_current();
< #line 1872
<         tmp___13 = get_current();
< #line 1872
<         dev_alert((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "%s[%u] Concurrent local write detected!\tnew: %llus +%u; pending: %llus +%u\n",
<                   (char *)(& tmp___13->comm), tmp___12->pid, (unsigned long long )sector,
<                   size, (unsigned long long )i->sector, i->size);
---
> #line 2192
>     if ((int )req->rq_state & 1 || ((unsigned long )req->rq_state & 8192UL) == 0UL) {
> #line 2205
>       err = drbd_wait_misc(mdev, & req->i);
> #line 2206
>       if (err != 0) {
> #line 2208
>         val.i = 0U;
> #line 2208
>         val.ldv_40024.conn = 3U;
> #line 2208
>         mask.i = 0U;
> #line 2208
>         mask.ldv_40024.conn = 31U;
> #line 2208
>         _conn_request_state(mdev->tconn, mask, val, CS_HARD);
> #line 2210
>         fail_postponed_requests(mdev, sector, size);
> #line 2211
>         goto out;
25072,25076c26565,26567
< #line 1877
<       if ((i->rq_state & 16UL) != 0UL) {
< #line 1878
<         have_unacked = have_unacked + 1;
<       } else {
---
> #line 2213
>       goto repeat;
>     } else {
25078,25080c26569,26664
<       }
< #line 1879
<       have_conflict = have_conflict + 1;
---
>     }
> #line 2219
>     peer_req->flags = peer_req->flags | 32UL;
>   }
>   ldv_53375: 
> #line 2139
>   i = drbd_next_overlap(i, sector, size);
>   ldv_53386: ;
> #line 2139
>   if ((unsigned long )i != (unsigned long )((struct drbd_interval *)0)) {
> #line 2140
>     goto ldv_53385;
>   } else {
> 
>   }
> #line 2222
>   err = 0;
>   out: ;
> #line 2225
>   if (err != 0) {
> #line 2226
>     drbd_remove_epoch_entry_interval(mdev, peer_req);
>   } else {
> 
>   }
> #line 2227
>   return (err);
> }
> }
> #line 2231 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int receive_Data(struct drbd_tconn *tconn , struct packet_info *pi ) 
> { 
>   struct drbd_conf *mdev ;
>   sector_t sector ;
>   struct drbd_peer_request *peer_req ;
>   struct p_data *p ;
>   u32 peer_seq ;
>   __u32 tmp ;
>   int rw ;
>   u32 dp_flags ;
>   int err ;
>   int tp ;
>   int err2 ;
>   int tmp___0 ;
>   __u64 tmp___1 ;
>   __u32 tmp___2 ;
>   unsigned long tmp___3 ;
>   struct net_conf *_________p1 ;
>   bool __warned ;
>   int tmp___4 ;
>   int tmp___5 ;
>   bool tmp___6 ;
>   int tmp___7 ;
>   wait_queue_t __wait ;
>   struct task_struct *tmp___8 ;
>   bool tmp___9 ;
>   int tmp___10 ;
>   struct net_conf *_________p1___0 ;
>   bool __warned___0 ;
>   int tmp___11 ;
>   int tmp___12 ;
> 
>   {
> #line 2236
>   p = (struct p_data *)pi->data;
> #line 2237
>   tmp = __fswab32(p->seq_num);
> #line 2237
>   peer_seq = tmp;
> #line 2238
>   rw = 1;
> #line 2242
>   mdev = vnr_to_mdev(tconn, (int )pi->vnr);
> #line 2243
>   if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
> #line 2244
>     return (-5);
>   } else {
> 
>   }
> #line 2246
>   tmp___0 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 2246
>   if (tmp___0 == 0) {
> #line 2249
>     err = wait_for_and_update_peer_seq(mdev, peer_seq);
> #line 2250
>     drbd_send_ack_dp(mdev, P_NEG_ACK, p, (int )pi->size);
> #line 2251
>     atomic_inc(& (tconn->current_epoch)->epoch_size);
> #line 2252
>     err2 = drbd_drain_block(mdev, (int )pi->size);
> #line 2253
>     if (err == 0) {
> #line 2254
>       err = err2;
25084,25100c26668,26705
< #line 1867
<     n = n->next;
<     ldv_52586: ;
< #line 1867
<     if ((unsigned long )n != (unsigned long )((struct hlist_node *)0)) {
< #line 1867
<       __mptr = (struct hlist_node  const  *)n;
< #line 1867
<       i = (struct drbd_request *)__mptr + 0xffffffffffffffd8UL;
< #line 1867
<       if (1 != 0) {
< #line 1868
<         goto ldv_52585;
<       } else {
< #line 1870
<         goto ldv_52587;
<       }
---
> #line 2255
>     return (err);
>   } else {
> 
>   }
> #line 2264
>   tmp___1 = __fswab64(p->sector);
> #line 2264
>   sector = (sector_t )tmp___1;
> #line 2265
>   peer_req = read_in_block(mdev, p->block_id, sector, (int )pi->size);
> #line 2266
>   if ((unsigned long )peer_req == (unsigned long )((struct drbd_peer_request *)0)) {
> #line 2267
>     put_ldev(mdev);
> #line 2268
>     return (-5);
>   } else {
> 
>   }
> #line 2271
>   peer_req->w.cb = & e_end_block;
> #line 2273
>   tmp___2 = __fswab32(p->dp_flags);
> #line 2273
>   dp_flags = tmp___2;
> #line 2274
>   tmp___3 = wire_flags_to_bio(mdev, dp_flags);
> #line 2274
>   rw = (int )((unsigned int )tmp___3 | (unsigned int )rw);
> #line 2275
>   if ((unsigned long )peer_req->pages == (unsigned long )((struct page *)0)) {
> #line 2276
>     if (peer_req->i.size != 0U) {
> #line 2276
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( peer_req->i.size == 0 ) in %s:%d\n",
>               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>               2276);
25104,25108c26709,26714
<     ldv_52587: ;
< #line 1883
<     if (have_conflict == 0) {
< #line 1884
<       goto ldv_52588;
---
> #line 2277
>     if ((dp_flags & 32U) == 0U) {
> #line 2277
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( dp_flags & DP_FLUSH ) in %s:%d\n",
>               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>               2277);
25112,25132c26718,26754
< #line 1887
<     if ((first != 0 && discard != 0) && have_unacked != 0) {
< #line 1888
<       dev_alert((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Concurrent write! [DISCARD BY FLAG] sec=%llus\n",
<                 (unsigned long long )sector);
< #line 1890
<       inc_unacked(mdev);
< #line 1891
<       e->w.cb = & e_send_discard_ack;
< #line 1892
<       list_add_tail(& e->w.list, & mdev->done_ee);
< #line 1894
<       spin_unlock_irq(& mdev->req_lock);
< #line 1899
<       put_ldev(mdev);
< #line 1900
<       wake_asender(mdev);
< #line 1901
<       finish_wait(& mdev->misc_wait, & wait);
< #line 1902
<       return (1);
---
>   } else {
> 
>   }
> #line 2280
>   if ((dp_flags & 4U) != 0U) {
> #line 2281
>     peer_req->flags = peer_req->flags | 2UL;
>   } else {
> 
>   }
> #line 2283
>   spin_lock(& tconn->epoch_lock);
> #line 2284
>   peer_req->epoch = tconn->current_epoch;
> #line 2285
>   atomic_inc(& (peer_req->epoch)->epoch_size);
> #line 2286
>   atomic_inc(& (peer_req->epoch)->active);
> #line 2287
>   spin_unlock(& tconn->epoch_lock);
> #line 2289
>   rcu_read_lock___2();
> #line 2290
>   _________p1 = *((struct net_conf * volatile  *)(& (mdev->tconn)->net_conf));
> #line 2290
>   tmp___4 = debug_lockdep_rcu_enabled();
> #line 2290
>   if (tmp___4 != 0 && ! __warned) {
> #line 2290
>     tmp___5 = rcu_read_lock_held();
> #line 2290
>     if (tmp___5 == 0 && 1) {
> #line 2290
>       __warned = 1;
> #line 2290
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>                              2290, "suspicious rcu_dereference_check() usage");
25136,25148c26758,26773
< #line 1905
<     tmp___15 = get_current();
< #line 1905
<     tmp___16 = signal_pending(tmp___15);
< #line 1905
<     if (tmp___16 != 0) {
< #line 1906
<       hlist_del_init(& e->collision);
< #line 1908
<       spin_unlock_irq(& mdev->req_lock);
< #line 1910
<       finish_wait(& mdev->misc_wait, & wait);
< #line 1911
---
>   } else {
> 
>   }
> #line 2290
>   tp = (int )_________p1->two_primaries;
> #line 2291
>   rcu_read_unlock___2();
> #line 2292
>   if (tp != 0) {
> #line 2293
>     peer_req->flags = peer_req->flags | 128UL;
> #line 2294
>     err = wait_for_and_update_peer_seq(mdev, peer_seq);
> #line 2295
>     if (err != 0) {
> #line 2296
25153,25170c26778,26791
< #line 1914
<     spin_unlock_irq(& mdev->req_lock);
< #line 1915
<     if (first != 0) {
< #line 1916
<       first = 0;
< #line 1917
<       dev_alert((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Concurrent write! [W AFTERWARDS] sec=%llus\n",
<                 (unsigned long long )sector);
<     } else
< #line 1919
<     if (discard != 0) {
< #line 1922
<       if (have_unacked != 0) {
< #line 1922
<         dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( have_unacked == 0 ) in %s:%d\n",
<                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<                 1922);
---
> #line 2297
>     spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 2298
>     err = handle_write_conflicts(mdev, peer_req);
> #line 2299
>     if (err != 0) {
> #line 2300
>       spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 2301
>       if (err == -2) {
> #line 2302
>         put_ldev(mdev);
> #line 2303
>         return (0);
25173a26795,26796
> #line 2305
>       goto out_interrupted;
25177,25185c26800,26802
< #line 1924
<     schedule();
< #line 1925
<     spin_lock_irq(& mdev->req_lock);
< #line 1926
<     goto ldv_52589;
<     ldv_52588: 
< #line 1927
<     finish_wait(& mdev->misc_wait, & wait);
---
>   } else {
> #line 2308
>     spin_lock_irq(& (mdev->tconn)->req_lock);
25187,25198c26804,26815
< #line 1930
<   list_add(& e->w.list, & mdev->active_ee);
< #line 1931
<   spin_unlock_irq(& mdev->req_lock);
< #line 1933
<   if ((unsigned int )*((unsigned short *)mdev + 1138UL) == 272U) {
< #line 1934
<     tmp___17 = overlapping_resync_write(mdev, e);
< #line 1934
<     if (tmp___17) {
< #line 1934
<       tmp___18 = 0;
---
> #line 2309
>   list_add(& peer_req->w.list, & mdev->active_ee);
> #line 2310
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 2312
>   if ((unsigned int )*((unsigned short *)mdev + 374UL) == 272U) {
> #line 2313
>     tmp___6 = overlapping_resync_write(mdev, peer_req);
> #line 2313
>     if (tmp___6) {
> #line 2313
>       tmp___7 = 0;
25200,25201c26817,26818
< #line 1934
<       tmp___18 = 1;
---
> #line 2313
>       tmp___7 = 1;
25203,25206c26820,26823
< #line 1934
<     if (tmp___18) {
< #line 1934
<       goto ldv_52590;
---
> #line 2313
>     if (tmp___7) {
> #line 2313
>       goto ldv_53406;
25210,25212c26827,26829
< #line 1934
<     tmp___19 = get_current();
< #line 1934
---
> #line 2313
>     tmp___8 = get_current();
> #line 2313
25214,25216c26831,26833
< #line 1934
<     __wait.private = (void *)tmp___19;
< #line 1934
---
> #line 2313
>     __wait.private = (void *)tmp___8;
> #line 2313
25218c26835
< #line 1934
---
> #line 2313
25220c26837
< #line 1934
---
> #line 2313
25222,25223c26839,26840
<     ldv_52593: 
< #line 1934
---
>     ldv_53409: 
> #line 2313
25225,25230c26842,26847
< #line 1934
<     tmp___20 = overlapping_resync_write(mdev, e);
< #line 1934
<     if (tmp___20) {
< #line 1934
<       tmp___21 = 0;
---
> #line 2313
>     tmp___9 = overlapping_resync_write(mdev, peer_req);
> #line 2313
>     if (tmp___9) {
> #line 2313
>       tmp___10 = 0;
25232,25233c26849,26850
< #line 1934
<       tmp___21 = 1;
---
> #line 2313
>       tmp___10 = 1;
25235,25238c26852,26855
< #line 1934
<     if (tmp___21) {
< #line 1934
<       goto ldv_52592;
---
> #line 2313
>     if (tmp___10) {
> #line 2313
>       goto ldv_53408;
25242c26859
< #line 1934
---
> #line 2313
25244,25247c26861,26864
< #line 1934
<     goto ldv_52593;
<     ldv_52592: 
< #line 1934
---
> #line 2313
>     goto ldv_53409;
>     ldv_53408: 
> #line 2313
25249c26866
<     ldv_52590: ;
---
>     ldv_53406: ;
25253,25267c26870,26912
< #line 1936
<   switch ((mdev->net_conf)->wire_protocol) {
<   case 3: 
< #line 1938
<   inc_unacked(mdev);
< #line 1941
<   goto ldv_52595;
<   case 2: 
< #line 1945
<   drbd_send_ack(mdev, P_RECV_ACK, e);
< #line 1946
<   goto ldv_52595;
<   case 1: ;
< #line 1949
<   goto ldv_52595;
---
> #line 2315
>   if ((mdev->tconn)->agreed_pro_version <= 99) {
> #line 2316
>     rcu_read_lock___2();
> #line 2317
>     _________p1___0 = *((struct net_conf * volatile  *)(& (mdev->tconn)->net_conf));
> #line 2317
>     tmp___11 = debug_lockdep_rcu_enabled();
> #line 2317
>     if (tmp___11 != 0 && ! __warned___0) {
> #line 2317
>       tmp___12 = rcu_read_lock_held();
> #line 2317
>       if (tmp___12 == 0 && 1) {
> #line 2317
>         __warned___0 = 1;
> #line 2317
>         lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>                                2317, "suspicious rcu_dereference_check() usage");
>       } else {
> 
>       }
>     } else {
> 
>     }
> #line 2317
>     switch (_________p1___0->wire_protocol) {
>     case (__u32 )3: 
> #line 2319
>     dp_flags = dp_flags | 256U;
> #line 2320
>     goto ldv_53414;
>     case (__u32 )2: 
> #line 2322
>     dp_flags = dp_flags | 128U;
> #line 2323
>     goto ldv_53414;
>     }
>     ldv_53414: 
> #line 2325
>     rcu_read_unlock___2();
>   } else {
> 
25269,25280c26914,26919
<   ldv_52595: ;
< #line 1952
<   if ((int )mdev->state.ldv_39979.pdsk <= 3) {
< #line 1954
<     __drbd_set_out_of_sync(mdev, e->sector, (int )e->size, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<                            1954U);
< #line 1955
<     e->flags = e->flags | 1UL;
< #line 1956
<     e->flags = e->flags & 0xfffffffffffffffdUL;
< #line 1957
<     drbd_al_begin_io(mdev, e->sector);
---
> #line 2328
>   if ((dp_flags & 256U) != 0U) {
> #line 2329
>     peer_req->flags = peer_req->flags | 64UL;
> #line 2330
>     inc_unacked(mdev);
25284,25289c26923,26926
< #line 1960
<   tmp___22 = drbd_submit_ee(mdev, e, (unsigned int const   )rw, 4);
< #line 1960
<   if (tmp___22 == 0) {
< #line 1961
<     return (1);
---
> #line 2335
>   if ((dp_flags & 128U) != 0U) {
> #line 2338
>     drbd_send_ack(mdev, P_RECV_ACK, peer_req);
25293c26930,26953
< #line 1964
---
> #line 2341
>   if ((int )mdev->state.ldv_49522.pdsk <= 3) {
> #line 2343
>     __drbd_set_out_of_sync(mdev, peer_req->i.sector, (int )peer_req->i.size, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>                            2343U);
> #line 2344
>     peer_req->flags = peer_req->flags | 1UL;
> #line 2345
>     peer_req->flags = peer_req->flags & 0xfffffffffffffffdUL;
> #line 2346
>     drbd_al_begin_io(mdev, & peer_req->i);
>   } else {
> 
>   }
> #line 2349
>   err = drbd_submit_peer_request(mdev, peer_req, (unsigned int const   )rw, 4);
> #line 2350
>   if (err == 0) {
> #line 2351
>     return (0);
>   } else {
> 
>   }
> #line 2354
25295,25306c26955,26966
< #line 1965
<   spin_lock_irq(& mdev->req_lock);
< #line 1966
<   list_del(& e->w.list);
< #line 1967
<   hlist_del_init(& e->collision);
< #line 1968
<   spin_unlock_irq(& mdev->req_lock);
< #line 1969
<   if ((int )e->flags & 1) {
< #line 1970
<     drbd_al_complete_io(mdev, e->sector);
---
> #line 2355
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 2356
>   list_del(& peer_req->w.list);
> #line 2357
>   drbd_remove_epoch_entry_interval(mdev, peer_req);
> #line 2358
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 2359
>   if ((int )peer_req->flags & 1) {
> #line 2360
>     drbd_al_complete_io(mdev, & peer_req->i);
25311,25313c26971,26973
< #line 1973
<   drbd_may_finish_epoch(mdev, e->epoch, EV_CLEANUP);
< #line 1974
---
> #line 2363
>   drbd_may_finish_epoch(tconn, peer_req->epoch, EV_CLEANUP);
> #line 2364
25315,25318c26975,26978
< #line 1975
<   drbd_free_some_ee(mdev, e, 0);
< #line 1976
<   return (0);
---
> #line 2365
>   __drbd_free_peer_req(mdev, peer_req, 0);
> #line 2366
>   return (err);
25321c26981
< #line 1990 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2380 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
25330a26991,26995
>   unsigned int c_min_rate ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp___0 ;
>   int tmp___1 ;
25333c26998
<   int tmp___0 ;
---
>   int tmp___2 ;
25342c27007
<   int tmp___1 ;
---
>   int tmp___3 ;
25345c27010
<   unsigned long tmp___2 ;
---
>   unsigned long tmp___4 ;
25348c27013
< #line 1992
---
> #line 2382
25350c27015
< #line 1996
---
> #line 2386
25352,25354c27017,27046
< #line 1999
<   if (mdev->sync_conf.c_min_rate == 0) {
< #line 2000
---
> #line 2389
>   rcu_read_lock___2();
> #line 2390
>   _________p1 = *((struct disk_conf * volatile  *)(& (mdev->ldev)->disk_conf));
> #line 2390
>   tmp___0 = debug_lockdep_rcu_enabled();
> #line 2390
>   if (tmp___0 != 0 && ! __warned) {
> #line 2390
>     tmp___1 = rcu_read_lock_held();
> #line 2390
>     if (tmp___1 == 0 && 1) {
> #line 2390
>       __warned = 1;
> #line 2390
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>                              2390, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 2390
>   c_min_rate = _________p1->c_min_rate;
> #line 2391
>   rcu_read_unlock___2();
> #line 2394
>   if (c_min_rate == 0U) {
> #line 2395
25359c27051
< #line 2002
---
> #line 2397
25361c27053
< #line 2003
---
> #line 2398
25363c27055
< #line 2004
---
> #line 2399
25365c27057
< #line 2005
---
> #line 2400
25367c27059
< #line 2005
---
> #line 2400
25369,25373c27061,27065
< #line 2006
<     tmp___0 = constant_test_bit(2U, (unsigned long const volatile   *)(& bm_ext->flags));
< #line 2006
<     if (tmp___0 != 0) {
< #line 2007
---
> #line 2401
>     tmp___2 = constant_test_bit(2U, (unsigned long const volatile   *)(& bm_ext->flags));
> #line 2401
>     if (tmp___2 != 0) {
> #line 2402
25375c27067
< #line 2008
---
> #line 2403
25383c27075
< #line 2012
---
> #line 2407
25385c27077
< #line 2014
---
> #line 2409
25387c27079
< #line 2014
---
> #line 2409
25389,25392c27081,27084
< #line 2014
<   goto ldv_52619;
<   ldv_52618: 
< #line 2014
---
> #line 2409
>   goto ldv_53441;
>   ldv_53440: 
> #line 2409
25394c27086
< #line 2014
---
> #line 2409
25396c27088
< #line 2014
---
> #line 2409
25398,25399c27090,27091
<   ldv_52619: 
< #line 2014
---
>   ldv_53441: 
> #line 2409
25401c27093
< #line 2014
---
> #line 2409
25403,25404c27095,27096
< #line 2015
<     goto ldv_52618;
---
> #line 2410
>     goto ldv_53440;
25408c27100
< #line 2015
---
> #line 2410
25410c27102
< #line 2015
---
> #line 2410
25412,25415c27104,27107
< #line 2015
<   goto ldv_52629;
<   ldv_52628: 
< #line 2015
---
> #line 2410
>   goto ldv_53451;
>   ldv_53450: 
> #line 2410
25417c27109
< #line 2015
---
> #line 2410
25419c27111
< #line 2015
---
> #line 2410
25421,25422c27113,27114
<   ldv_52629: 
< #line 2015
---
>   ldv_53451: 
> #line 2410
25424c27116
< #line 2015
---
> #line 2410
25426,25427c27118,27119
< #line 2016
<     goto ldv_52628;
---
> #line 2411
>     goto ldv_53450;
25431,25435c27123,27127
< #line 2015
<   tmp___1 = atomic_read((atomic_t const   *)(& mdev->rs_sect_ev));
< #line 2015
<   curr_events = ((int )res + (int )res___0) - tmp___1;
< #line 2018
---
> #line 2410
>   tmp___3 = atomic_read((atomic_t const   *)(& mdev->rs_sect_ev));
> #line 2410
>   curr_events = ((int )res + (int )res___0) - tmp___3;
> #line 2413
25437c27129
< #line 2022
---
> #line 2417
25439c27131
< #line 2026
---
> #line 2421
25441,25443c27133,27135
< #line 2028
<     if ((unsigned int )*((unsigned short *)mdev + 1138UL) == 288U || (unsigned int )*((unsigned short *)mdev + 1138UL) == 304U) {
< #line 2029
---
> #line 2423
>     if ((unsigned int )*((unsigned short *)mdev + 374UL) == 288U || (unsigned int )*((unsigned short *)mdev + 374UL) == 304U) {
> #line 2424
25446,25449c27138,27141
< #line 2031
<       tmp___2 = drbd_bm_total_weight(mdev);
< #line 2031
<       rs_left = tmp___2 - mdev->rs_failed;
---
> #line 2426
>       tmp___4 = drbd_bm_total_weight(mdev);
> #line 2426
>       rs_left = tmp___4 - mdev->rs_failed;
25451c27143
< #line 2033
---
> #line 2428
25453c27145
< #line 2034
---
> #line 2429
25455c27147
< #line 2035
---
> #line 2430
25460c27152
< #line 2036
---
> #line 2431
25462c27154
< #line 2037
---
> #line 2432
25464,25466c27156,27158
< #line 2039
<     if ((unsigned long )mdev->sync_conf.c_min_rate < dbdt) {
< #line 2040
---
> #line 2434
>     if ((unsigned long )c_min_rate < dbdt) {
> #line 2435
25474c27166
< #line 2042
---
> #line 2437
25478,25479c27170,27171
< #line 2046 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int receive_DataRequest(struct drbd_conf *mdev , enum drbd_packets cmd , unsigned int digest_size ) 
---
> #line 2441 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int receive_DataRequest(struct drbd_tconn *tconn , struct packet_info *pi ) 
25480a27173
>   struct drbd_conf *mdev ;
25483,25484c27176
<   sector_t tmp ;
<   struct drbd_epoch_entry *e ;
---
>   struct drbd_peer_request *peer_req ;
25490,25491c27182,27184
<   __u64 tmp___0 ;
<   __u32 tmp___1 ;
---
>   __u64 tmp ;
>   __u32 tmp___0 ;
>   int tmp___1 ;
25494c27187
<   char const   *tmp___4 ;
---
>   void *tmp___4 ;
25496,25501d27188
<   int tmp___6 ;
<   int tmp___7 ;
<   void *tmp___8 ;
<   int tmp___9 ;
<   int tmp___10 ;
<   int tmp___11 ;
25504,25508c27191,27194
<   unsigned long tmp___12 ;
<   char const   *tmp___13 ;
<   int tmp___14 ;
<   int tmp___15 ;
<   int tmp___16 ;
---
>   unsigned long tmp___6 ;
>   int tmp___7 ;
>   int tmp___8 ;
>   int tmp___9 ;
25511,25515c27197
< #line 2049
<   tmp = drbd_get_capacity(mdev->this_bdev);
< #line 2049
<   capacity = tmp;
< #line 2051
---
> #line 2447
25517,25529c27199,27222
< #line 2054
<   p = & mdev->data.rbuf.block_req;
< #line 2056
<   tmp___0 = __fswab64(p->sector);
< #line 2056
<   sector = (sector_t )tmp___0;
< #line 2057
<   tmp___1 = __fswab32(p->blksize);
< #line 2057
<   size = (int )tmp___1;
< #line 2059
<   if ((size <= 0 || (size & 511) != 0) || (unsigned int )size > 131072U) {
< #line 2060
---
> #line 2450
>   p = (struct p_block_req *)pi->data;
> #line 2452
>   mdev = vnr_to_mdev(tconn, (int )pi->vnr);
> #line 2453
>   if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
> #line 2454
>     return (-5);
>   } else {
> 
>   }
> #line 2455
>   capacity = drbd_get_capacity(mdev->this_bdev);
> #line 2457
>   tmp = __fswab64(p->sector);
> #line 2457
>   sector = (sector_t )tmp;
> #line 2458
>   tmp___0 = __fswab32(p->blksize);
> #line 2458
>   size = (int )tmp___0;
> #line 2460
>   if ((size <= 0 || (size & 511) != 0) || (unsigned int )size > 1048576U) {
> #line 2461
25531,25534c27224,27227
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             2060, (unsigned long long )sector, size);
< #line 2062
<     return (0);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>             2461, (unsigned long long )sector, size);
> #line 2463
>     return (-22);
25538c27231
< #line 2064
---
> #line 2465
25540c27233
< #line 2065
---
> #line 2466
25542,25545c27235,27238
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             2065, (unsigned long long )sector, size);
< #line 2067
<     return (0);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>             2466, (unsigned long long )sector, size);
> #line 2468
>     return (-22);
25549,25553c27242,27246
< #line 2070
<   tmp___7 = _get_ldev_if_state(mdev, D_UP_TO_DATE);
< #line 2070
<   if (tmp___7 == 0) {
< #line 2071
---
> #line 2471
>   tmp___3 = _get_ldev_if_state(mdev, D_UP_TO_DATE);
> #line 2471
>   if (tmp___3 == 0) {
> #line 2472
25555,25556c27248,27249
< #line 2072
<     switch ((unsigned int )cmd) {
---
> #line 2473
>     switch ((unsigned int )pi->cmd) {
25558c27251
< #line 2074
---
> #line 2475
25560,25561c27253,27254
< #line 2075
<     goto ldv_52648;
---
> #line 2476
>     goto ldv_53470;
25565c27258
< #line 2079
---
> #line 2480
25567,25568c27260,27261
< #line 2080
<     goto ldv_52648;
---
> #line 2481
>     goto ldv_53470;
25570c27263
< #line 2082
---
> #line 2483
25572,25586c27265,27267
< #line 2083
<     atomic_dec(& mdev->rs_pending_cnt);
< #line 2083
<     tmp___3 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
< #line 2083
<     if (tmp___3 < 0) {
< #line 2083
<       tmp___2 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
< #line 2083
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: rs_pending_cnt = %d < 0 !\n",
<               "receive_DataRequest", 2083, tmp___2);
<     } else {
< 
<     }
< #line 2084
---
> #line 2484
>     _dec_rs_pending(mdev, "receive_DataRequest", 2484);
> #line 2485
25588,25589c27269,27270
< #line 2085
<     goto ldv_52648;
---
> #line 2486
>     goto ldv_53470;
25591,25595c27272,27277
< #line 2087
<     tmp___4 = cmdname(cmd);
< #line 2087
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "unexpected command (%s) in receive_DataRequest\n",
<             tmp___4);
---
> #line 2488
>     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"),
>                          "i" (2488), "i" (12UL));
>     ldv_53477: ;
> #line 2488
>     goto ldv_53477;
25597,25598c27279,27280
<     ldv_52648: ;
< #line 2090
---
>     ldv_53470: ;
> #line 2490
25600,25604c27282,27286
< #line 2090
<       tmp___5 = ___ratelimit(& drbd_ratelimit_state, "receive_DataRequest");
< #line 2090
<       if (tmp___5 != 0) {
< #line 2091
---
> #line 2490
>       tmp___1 = ___ratelimit(& drbd_ratelimit_state, "receive_DataRequest");
> #line 2490
>       if (tmp___1 != 0) {
> #line 2491
25612,25615c27294,27297
< #line 2095
<     tmp___6 = drbd_drain_block(mdev, (int )digest_size);
< #line 2095
<     return (tmp___6);
---
> #line 2495
>     tmp___2 = drbd_drain_block(mdev, (int )pi->size);
> #line 2495
>     return (tmp___2);
25619,25623c27301,27305
< #line 2101
<   e = drbd_alloc_ee(mdev, p->block_id, sector, (unsigned int )size, 16U);
< #line 2102
<   if ((unsigned long )e == (unsigned long )((struct drbd_epoch_entry *)0)) {
< #line 2103
---
> #line 2501
>   peer_req = drbd_alloc_peer_req(mdev, p->block_id, sector, (unsigned int )size, 16U);
> #line 2502
>   if ((unsigned long )peer_req == (unsigned long )((struct drbd_peer_request *)0)) {
> #line 2503
25625,25626c27307,27308
< #line 2104
<     return (0);
---
> #line 2504
>     return (-12);
25630,25631c27312,27313
< #line 2107
<   switch ((unsigned int )cmd) {
---
> #line 2507
>   switch ((unsigned int )pi->cmd) {
25633,25635c27315,27317
< #line 2109
<   e->w.cb = & w_e_end_data_req;
< #line 2110
---
> #line 2509
>   peer_req->w.cb = & w_e_end_data_req;
> #line 2510
25637c27319
< #line 2112
---
> #line 2512
25640,25642c27322,27324
< #line 2115
<   e->w.cb = & w_e_end_rsdata_req;
< #line 2116
---
> #line 2515
>   peer_req->w.cb = & w_e_end_rsdata_req;
> #line 2516
25644c27326
< #line 2118
---
> #line 2518
25646,25647c27328,27329
< #line 2119
<   goto ldv_52661;
---
> #line 2519
>   goto ldv_53481;
25650c27332
< #line 2123
---
> #line 2523
25652,25656c27334,27338
< #line 2124
<   tmp___8 = kmalloc((unsigned long )digest_size + 16UL, 16U);
< #line 2124
<   di = (struct digest_info *)tmp___8;
< #line 2125
---
> #line 2524
>   tmp___4 = kmalloc((unsigned long )pi->size + 16UL, 16U);
> #line 2524
>   di = (struct digest_info *)tmp___4;
> #line 2525
25658c27340
< #line 2126
---
> #line 2526
25663,25665c27345,27347
< #line 2128
<   di->digest_size = (int )digest_size;
< #line 2129
---
> #line 2528
>   di->digest_size = (int )pi->size;
> #line 2529
25667,25675c27349,27357
< #line 2131
<   e->ldv_49189.digest = di;
< #line 2132
<   e->flags = e->flags | 16UL;
< #line 2134
<   tmp___9 = drbd_recv(mdev, di->digest, (size_t )digest_size);
< #line 2134
<   if ((unsigned int )tmp___9 != digest_size) {
< #line 2135
---
> #line 2531
>   peer_req->ldv_50726.digest = di;
> #line 2532
>   peer_req->flags = peer_req->flags | 16UL;
> #line 2534
>   tmp___5 = drbd_recv_all(mdev->tconn, di->digest, (size_t )pi->size);
> #line 2534
>   if (tmp___5 != 0) {
> #line 2535
25680,25687c27362,27369
< #line 2137
<   if ((unsigned int )cmd == 33U) {
< #line 2138
<     if (mdev->agreed_pro_version <= 88) {
< #line 2138
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mdev->agreed_pro_version >= 89 ) in %s:%d\n",
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<               2138);
---
> #line 2537
>   if ((unsigned int )pi->cmd == 33U) {
> #line 2538
>     if ((mdev->tconn)->agreed_pro_version <= 88) {
> #line 2538
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mdev->tconn->agreed_pro_version >= 89 ) in %s:%d\n",
>               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>               2538);
25691,25693c27373,27375
< #line 2139
<     e->w.cb = & w_e_end_csum_rs_req;
< #line 2141
---
> #line 2539
>     peer_req->w.cb = & w_e_end_csum_rs_req;
> #line 2541
25696,25698c27378,27380
< #line 2142
<   if ((unsigned int )cmd == 31U) {
< #line 2144
---
> #line 2542
>   if ((unsigned int )pi->cmd == 31U) {
> #line 2544
25700,25716c27382,27386
< #line 2145
<     e->w.cb = & w_e_end_ov_reply;
< #line 2146
<     atomic_dec(& mdev->rs_pending_cnt);
< #line 2146
<     tmp___11 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
< #line 2146
<     if (tmp___11 < 0) {
< #line 2146
<       tmp___10 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
< #line 2146
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: rs_pending_cnt = %d < 0 !\n",
<               "receive_DataRequest", 2146, tmp___10);
<     } else {
< 
<     }
< #line 2149
---
> #line 2545
>     peer_req->w.cb = & w_e_end_ov_reply;
> #line 2546
>     _dec_rs_pending(mdev, "receive_DataRequest", 2546);
> #line 2549
25721,25722c27391,27392
< #line 2151
<   goto ldv_52661;
---
> #line 2551
>   goto ldv_53481;
25724,25726c27394,27396
< #line 2154
<   if (mdev->ov_start_sector == 0xffffffffffffffffUL && mdev->agreed_pro_version > 89) {
< #line 2156
---
> #line 2554
>   if (mdev->ov_start_sector == 0xffffffffffffffffUL && (mdev->tconn)->agreed_pro_version > 89) {
> #line 2556
25728c27398
< #line 2158
---
> #line 2558
25730c27400
< #line 2159
---
> #line 2559
25732,25736c27402,27406
< #line 2160
<     tmp___12 = drbd_bm_bits(mdev);
< #line 2160
<     mdev->ov_left = tmp___12 - (sector >> 3);
< #line 2161
---
> #line 2560
>     tmp___6 = drbd_bm_bits(mdev);
> #line 2560
>     mdev->ov_left = tmp___6 - (sector >> 3);
> #line 2561
25738c27408
< #line 2162
---
> #line 2562
25740,25743c27410,27413
< #line 2162
<     goto ldv_52673;
<     ldv_52672: 
< #line 2163
---
> #line 2562
>     goto ldv_53490;
>     ldv_53489: 
> #line 2563
25745c27415
< #line 2164
---
> #line 2564
25747c27417
< #line 2162
---
> #line 2562
25749,25750c27419,27420
<     ldv_52673: ;
< #line 2162
---
>     ldv_53490: ;
> #line 2562
25752,25753c27422,27423
< #line 2163
<       goto ldv_52672;
---
> #line 2563
>       goto ldv_53489;
25757c27427
< #line 2166
---
> #line 2566
25763,25765c27433,27435
< #line 2169
<   e->w.cb = & w_e_end_ov_req;
< #line 2170
---
> #line 2569
>   peer_req->w.cb = & w_e_end_ov_req;
> #line 2570
25767,25768c27437,27438
< #line 2171
<   goto ldv_52661;
---
> #line 2571
>   goto ldv_53481;
25770,25778c27440,27445
< #line 2174
<   tmp___13 = cmdname(cmd);
< #line 2174
<   dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "unexpected command (%s) in receive_DataRequest\n",
<           tmp___13);
< #line 2176
<   fault_type = 10U;
< #line 2177
<   goto out_free_e;
---
> #line 2574
>   __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"),
>                        "i" (2574), "i" (12UL));
>   ldv_53493: ;
> #line 2574
>   goto ldv_53493;
25780,25787c27447,27454
<   ldv_52661: ;
< #line 2202
<   if ((unsigned int )*((unsigned char *)mdev + 2276UL) != 4U) {
< #line 2202
<     tmp___14 = drbd_rs_should_slow_down(mdev, sector);
< #line 2202
<     if (tmp___14 != 0) {
< #line 2203
---
>   ldv_53481: ;
> #line 2599
>   if ((unsigned int )*((unsigned char *)mdev + 748UL) != 4U) {
> #line 2599
>     tmp___7 = drbd_rs_should_slow_down(mdev, sector);
> #line 2599
>     if (tmp___7 != 0) {
> #line 2600
25795,25799c27462,27466
< #line 2204
<   tmp___15 = drbd_rs_begin_io(mdev, sector);
< #line 2204
<   if (tmp___15 != 0) {
< #line 2205
---
> #line 2601
>   tmp___8 = drbd_rs_begin_io(mdev, sector);
> #line 2601
>   if (tmp___8 != 0) {
> #line 2602
25805c27472
< #line 2208
---
> #line 2605
25808c27475
< #line 2211
---
> #line 2608
25810,25821c27477,27488
< #line 2212
<   spin_lock_irq(& mdev->req_lock);
< #line 2213
<   list_add_tail(& e->w.list, & mdev->read_ee);
< #line 2214
<   spin_unlock_irq(& mdev->req_lock);
< #line 2216
<   tmp___16 = drbd_submit_ee(mdev, e, 0U, (int const   )fault_type);
< #line 2216
<   if (tmp___16 == 0) {
< #line 2217
<     return (1);
---
> #line 2609
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 2610
>   list_add_tail(& peer_req->w.list, & mdev->read_ee);
> #line 2611
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 2613
>   tmp___9 = drbd_submit_peer_request(mdev, peer_req, 0U, (int const   )fault_type);
> #line 2613
>   if (tmp___9 == 0) {
> #line 2614
>     return (0);
25825c27492
< #line 2220
---
> #line 2617
25827,25832c27494,27499
< #line 2221
<   spin_lock_irq(& mdev->req_lock);
< #line 2222
<   list_del(& e->w.list);
< #line 2223
<   spin_unlock_irq(& mdev->req_lock);
---
> #line 2618
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 2619
>   list_del(& peer_req->w.list);
> #line 2620
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
25834c27501
< #line 2227
---
> #line 2624
25836,25839c27503,27506
< #line 2228
<   drbd_free_some_ee(mdev, e, 0);
< #line 2229
<   return (0);
---
> #line 2625
>   __drbd_free_peer_req(mdev, peer_req, 0);
> #line 2626
>   return (-5);
25842c27509
< #line 2232 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2629 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
25849a27517,27519
>   enum drbd_after_sb_p after_sb_0p ;
>   struct net_conf *_________p1 ;
>   bool __warned ;
25851a27522,27523
>   int tmp___1 ;
>   int tmp___2 ;
25854c27526
< #line 2234
---
> #line 2631
25856c27528
< #line 2237
---
> #line 2635
25858c27530
< #line 2238
---
> #line 2636
25860c27532
< #line 2240
---
> #line 2638
25862c27534
< #line 2241
---
> #line 2639
25864,25869c27536,27569
< #line 2243
<   switch ((mdev->net_conf)->after_sb_0p) {
<   case 7: ;
<   case 8: ;
<   case 9: 
< #line 2247
---
> #line 2641
>   rcu_read_lock___2();
> #line 2642
>   _________p1 = *((struct net_conf * volatile  *)(& (mdev->tconn)->net_conf));
> #line 2642
>   tmp = debug_lockdep_rcu_enabled();
> #line 2642
>   if (tmp != 0 && ! __warned) {
> #line 2642
>     tmp___0 = rcu_read_lock_held();
> #line 2642
>     if (tmp___0 == 0 && 1) {
> #line 2642
>       __warned = 1;
> #line 2642
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>                              2642, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 2642
>   after_sb_0p = (enum drbd_after_sb_p )_________p1->after_sb_0p;
> #line 2643
>   rcu_read_unlock___2();
> #line 2644
>   switch ((unsigned int )after_sb_0p) {
>   case 7U: ;
>   case 8U: ;
>   case 9U: ;
>   case 10U: 
> #line 2649
25871,25877c27571,27577
< #line 2248
<   goto ldv_52687;
<   case 0: ;
< #line 2250
<   goto ldv_52687;
<   case 1: ;
< #line 2252
---
> #line 2650
>   goto ldv_53510;
>   case 0U: ;
> #line 2652
>   goto ldv_53510;
>   case 1U: ;
> #line 2654
25879c27579
< #line 2253
---
> #line 2655
25881,25882c27581,27582
< #line 2254
<     goto ldv_52687;
---
> #line 2656
>     goto ldv_53510;
25886c27586
< #line 2256
---
> #line 2658
25888c27588
< #line 2257
---
> #line 2659
25890,25891c27590,27591
< #line 2258
<     goto ldv_52687;
---
> #line 2660
>     goto ldv_53510;
25895,25896c27595,27596
<   case 2: ;
< #line 2262
---
>   case 2U: ;
> #line 2664
25898c27598
< #line 2263
---
> #line 2665
25900,25901c27600,27601
< #line 2264
<     goto ldv_52687;
---
> #line 2666
>     goto ldv_53510;
25905c27605
< #line 2266
---
> #line 2668
25907c27607
< #line 2267
---
> #line 2669
25909,25910c27609,27610
< #line 2268
<     goto ldv_52687;
---
> #line 2670
>     goto ldv_53510;
25914c27614
< #line 2271
---
> #line 2673
25916,25917c27616,27617
<   case 3: ;
< #line 2274
---
>   case 3U: ;
> #line 2676
25919,25924c27619,27624
< #line 2275
<     tmp = drbd_test_flag(mdev, DISCARD_CONCURRENT);
< #line 2275
<     rv = tmp != 0 ? -1 : 1;
< #line 2277
<     goto ldv_52687;
---
> #line 2677
>     tmp___1 = constant_test_bit(1U, (unsigned long const volatile   *)(& (mdev->tconn)->flags));
> #line 2677
>     rv = tmp___1 != 0 ? -1 : 1;
> #line 2679
>     goto ldv_53510;
25926c27626
< #line 2279
---
> #line 2681
25928c27628
< #line 2279
---
> #line 2681
25930,25931c27630,27631
< #line 2279
<       goto ldv_52687;
---
> #line 2681
>       goto ldv_53510;
25935c27635
< #line 2280
---
> #line 2682
25937c27637
< #line 2280
---
> #line 2682
25939,25940c27639,27640
< #line 2280
<       goto ldv_52687;
---
> #line 2682
>       goto ldv_53510;
25945,25948c27645,27648
< #line 2282
<   if ((mdev->net_conf)->after_sb_0p == 3) {
< #line 2283
<     goto ldv_52687;
---
> #line 2684
>   if ((unsigned int )after_sb_0p == 3U) {
> #line 2685
>     goto ldv_53510;
25952,25953c27652,27653
<   case 4: ;
< #line 2285
---
>   case 4U: ;
> #line 2687
25955c27655
< #line 2286
---
> #line 2688
25958c27658
< #line 2287
---
> #line 2689
25960c27660
< #line 2288
---
> #line 2690
25963,25966c27663,27666
< #line 2291
<     tmp___0 = drbd_test_flag(mdev, DISCARD_CONCURRENT);
< #line 2291
<     rv = tmp___0 != 0 ? -1 : 1;
---
> #line 2693
>     tmp___2 = constant_test_bit(1U, (unsigned long const volatile   *)(& (mdev->tconn)->flags));
> #line 2693
>     rv = tmp___2 != 0 ? -1 : 1;
25968,25971c27668,27671
< #line 2293
<   goto ldv_52687;
<   case 5: 
< #line 2295
---
> #line 2695
>   goto ldv_53510;
>   case 5U: 
> #line 2697
25973,25976c27673,27676
< #line 2296
<   goto ldv_52687;
<   case 6: 
< #line 2298
---
> #line 2698
>   goto ldv_53510;
>   case 6U: 
> #line 2700
25979,25980c27679,27680
<   ldv_52687: ;
< #line 2301
---
>   ldv_53510: ;
> #line 2703
25984c27684
< #line 2304 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2706 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
25988a27689,27693
>   enum drbd_after_sb_p after_sb_1p ;
>   struct net_conf *_________p1 ;
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
25994c27699
< #line 2306
---
> #line 2708
25996,26003c27701,27736
< #line 2308
<   switch ((mdev->net_conf)->after_sb_1p) {
<   case 1: ;
<   case 2: ;
<   case 4: ;
<   case 5: ;
<   case 6: 
< #line 2314
---
> #line 2711
>   rcu_read_lock___2();
> #line 2712
>   _________p1 = *((struct net_conf * volatile  *)(& (mdev->tconn)->net_conf));
> #line 2712
>   tmp = debug_lockdep_rcu_enabled();
> #line 2712
>   if (tmp != 0 && ! __warned) {
> #line 2712
>     tmp___0 = rcu_read_lock_held();
> #line 2712
>     if (tmp___0 == 0 && 1) {
> #line 2712
>       __warned = 1;
> #line 2712
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>                              2712, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 2712
>   after_sb_1p = (enum drbd_after_sb_p )_________p1->after_sb_1p;
> #line 2713
>   rcu_read_unlock___2();
> #line 2714
>   switch ((unsigned int )after_sb_1p) {
>   case 1U: ;
>   case 2U: ;
>   case 4U: ;
>   case 5U: ;
>   case 6U: ;
>   case 3U: 
> #line 2721
26005,26011c27738,27744
< #line 2315
<   goto ldv_52705;
<   case 0: ;
< #line 2317
<   goto ldv_52705;
<   case 7: 
< #line 2319
---
> #line 2722
>   goto ldv_53533;
>   case 0U: ;
> #line 2724
>   goto ldv_53533;
>   case 7U: 
> #line 2726
26013,26015c27746,27748
< #line 2320
<   if (hg == -1 && (unsigned int )*((unsigned char *)mdev + 2276UL) == 2U) {
< #line 2321
---
> #line 2727
>   if (hg == -1 && (unsigned int )*((unsigned char *)mdev + 748UL) == 2U) {
> #line 2728
26020,26022c27753,27755
< #line 2322
<   if (hg == 1 && (unsigned int )*((unsigned char *)mdev + 2276UL) == 1U) {
< #line 2323
---
> #line 2729
>   if (hg == 1 && (unsigned int )*((unsigned char *)mdev + 748UL) == 1U) {
> #line 2730
26027,26030c27760,27763
< #line 2324
<   goto ldv_52705;
<   case 10: 
< #line 2326
---
> #line 2731
>   goto ldv_53533;
>   case 10U: 
> #line 2733
26032,26038c27765,27771
< #line 2327
<   goto ldv_52705;
<   case 8: ;
< #line 2329
<   return ((unsigned int )*((unsigned char *)mdev + 2276UL) == 1U ? 1 : -1);
<   case 9: 
< #line 2331
---
> #line 2734
>   goto ldv_53533;
>   case 8U: ;
> #line 2736
>   return ((unsigned int )*((unsigned char *)mdev + 748UL) == 1U ? 1 : -1);
>   case 9U: 
> #line 2738
26040,26042c27773,27775
< #line 2332
<   if (hg == -1 && (unsigned int )*((unsigned char *)mdev + 2276UL) == 1U) {
< #line 2335
---
> #line 2739
>   if (hg == -1 && (unsigned int )*((unsigned char *)mdev + 748UL) == 1U) {
> #line 2742
26044c27777
< #line 2339
---
> #line 2746
26046,26048c27779,27781
< #line 2339
<     val.ldv_39979.role = 2U;
< #line 2339
---
> #line 2746
>     val.ldv_40024.role = 2U;
> #line 2746
26050,26052c27783,27785
< #line 2339
<     mask.ldv_39979.role = 3U;
< #line 2339
---
> #line 2746
>     mask.ldv_40024.role = 3U;
> #line 2746
26054c27787
< #line 2340
---
> #line 2747
26056c27789
< #line 2341
---
> #line 2748
26059c27792
< #line 2343
---
> #line 2750
26061c27794
< #line 2344
---
> #line 2751
26065c27798
< #line 2347
---
> #line 2754
26069,26070c27802,27803
<   ldv_52705: ;
< #line 2350
---
>   ldv_53533: ;
> #line 2757
26074c27807
< #line 2353 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2760 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
26078a27812,27816
>   enum drbd_after_sb_p after_sb_2p ;
>   struct net_conf *_________p1 ;
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
26084c27822
< #line 2355
---
> #line 2762
26086,26095c27824,27861
< #line 2357
<   switch ((mdev->net_conf)->after_sb_2p) {
<   case 1: ;
<   case 2: ;
<   case 4: ;
<   case 5: ;
<   case 6: ;
<   case 7: ;
<   case 8: 
< #line 2365
---
> #line 2765
>   rcu_read_lock___2();
> #line 2766
>   _________p1 = *((struct net_conf * volatile  *)(& (mdev->tconn)->net_conf));
> #line 2766
>   tmp = debug_lockdep_rcu_enabled();
> #line 2766
>   if (tmp != 0 && ! __warned) {
> #line 2766
>     tmp___0 = rcu_read_lock_held();
> #line 2766
>     if (tmp___0 == 0 && 1) {
> #line 2766
>       __warned = 1;
> #line 2766
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>                              2766, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 2766
>   after_sb_2p = (enum drbd_after_sb_p )_________p1->after_sb_2p;
> #line 2767
>   rcu_read_unlock___2();
> #line 2768
>   switch ((unsigned int )after_sb_2p) {
>   case 1U: ;
>   case 2U: ;
>   case 4U: ;
>   case 5U: ;
>   case 6U: ;
>   case 7U: ;
>   case 8U: ;
>   case 3U: 
> #line 2777
26097,26100c27863,27866
< #line 2366
<   goto ldv_52728;
<   case 10: 
< #line 2368
---
> #line 2778
>   goto ldv_53561;
>   case 10U: 
> #line 2780
26102,26108c27868,27874
< #line 2369
<   goto ldv_52728;
<   case 0: ;
< #line 2371
<   goto ldv_52728;
<   case 9: 
< #line 2373
---
> #line 2781
>   goto ldv_53561;
>   case 0U: ;
> #line 2783
>   goto ldv_53561;
>   case 9U: 
> #line 2785
26110c27876
< #line 2374
---
> #line 2786
26112c27878
< #line 2380
---
> #line 2792
26114,26116c27880,27882
< #line 2380
<     val.ldv_39979.role = 2U;
< #line 2380
---
> #line 2792
>     val.ldv_40024.role = 2U;
> #line 2792
26118,26120c27884,27886
< #line 2380
<     mask.ldv_39979.role = 3U;
< #line 2380
---
> #line 2792
>     mask.ldv_40024.role = 3U;
> #line 2792
26122c27888
< #line 2381
---
> #line 2793
26124c27890
< #line 2382
---
> #line 2794
26127c27893
< #line 2384
---
> #line 2796
26129c27895
< #line 2385
---
> #line 2797
26133c27899
< #line 2388
---
> #line 2800
26137,26138c27903,27904
<   ldv_52728: ;
< #line 2391
---
>   ldv_53561: ;
> #line 2803
26142c27908
< #line 2394 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2806 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
26149c27915
< #line 2397
---
> #line 2809
26151c27917
< #line 2398
---
> #line 2810
26154c27920
< #line 2399
---
> #line 2811
26159c27925
< #line 2401
---
> #line 2813
26162c27928
< #line 2402
---
> #line 2814
26166c27932
< #line 2423 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2835 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
26182c27948
< #line 2428
---
> #line 2840
26184c27950
< #line 2429
---
> #line 2841
26186c27952
< #line 2431
---
> #line 2843
26188c27954
< #line 2432
---
> #line 2844
26190c27956
< #line 2433
---
> #line 2845
26195c27961
< #line 2435
---
> #line 2847
26197c27963
< #line 2436
---
> #line 2848
26199c27965
< #line 2438
---
> #line 2850
26204c27970
< #line 2440
---
> #line 2852
26206c27972
< #line 2441
---
> #line 2853
26208c27974
< #line 2443
---
> #line 2855
26213c27979
< #line 2445
---
> #line 2857
26215c27981
< #line 2448
---
> #line 2860
26217,26219c27983,27985
< #line 2450
<       if (mdev->agreed_pro_version <= 90) {
< #line 2451
---
> #line 2862
>       if ((mdev->tconn)->agreed_pro_version <= 90) {
> #line 2863
26224c27990
< #line 2453
---
> #line 2865
26226c27992
< #line 2455
---
> #line 2867
26228c27994
< #line 2456
---
> #line 2868
26230c27996
< #line 2457
---
> #line 2869
26232c27998
< #line 2458
---
> #line 2870
26234,26236c28000,28002
< #line 2460
<         if ((int )mdev->state.ldv_39979.disk > 2) {
< #line 2460
---
> #line 2872
>         if ((int )mdev->state.ldv_49522.disk > 2) {
> #line 2872
26238c28004
< #line 2460
---
> #line 2872
26241c28007
< #line 2460
---
> #line 2872
26244c28010
< #line 2460
---
> #line 2872
26247c28013
< #line 2462
---
> #line 2874
26250c28016
< #line 2464
---
> #line 2876
26252c28018
< #line 2465
---
> #line 2877
26255c28021
< #line 2468
---
> #line 2880
26260c28026
< #line 2471
---
> #line 2883
26262,26264c28028,28030
< #line 2473
<       if (mdev->agreed_pro_version <= 90) {
< #line 2474
---
> #line 2885
>       if ((mdev->tconn)->agreed_pro_version <= 90) {
> #line 2886
26269c28035
< #line 2476
---
> #line 2888
26271c28037
< #line 2478
---
> #line 2890
26273c28039
< #line 2480
---
> #line 2892
26275c28041
< #line 2481
---
> #line 2893
26277c28043
< #line 2482
---
> #line 2894
26279c28045
< #line 2484
---
> #line 2896
26282c28048
< #line 2485
---
> #line 2897
26285c28051
< #line 2487
---
> #line 2899
26287c28053
< #line 2488
---
> #line 2900
26290c28056
< #line 2491
---
> #line 2903
26295,26297c28061,28063
< #line 2495
<     tmp___1 = drbd_test_flag(mdev, CRASHED_PRIMARY);
< #line 2495
---
> #line 2907
>     tmp___1 = constant_test_bit(5U, (unsigned long const volatile   *)(& mdev->flags));
> #line 2907
26299c28065
< #line 2499
---
> #line 2911
26301c28067
< #line 2501
---
> #line 2913
26304c28070
< #line 2502
---
> #line 2914
26307c28073
< #line 2503
---
> #line 2915
26310c28076
< #line 2504
---
> #line 2916
26313,26315c28079,28081
< #line 2506
<     dc = drbd_test_flag(mdev, DISCARD_CONCURRENT);
< #line 2507
---
> #line 2918
>     dc = constant_test_bit(1U, (unsigned long const volatile   *)(& (mdev->tconn)->flags));
> #line 2919
26321c28087
< #line 2511
---
> #line 2923
26323c28089
< #line 2512
---
> #line 2924
26325c28091
< #line 2513
---
> #line 2925
26327c28093
< #line 2514
---
> #line 2926
26332c28098
< #line 2516
---
> #line 2928
26334c28100
< #line 2517
---
> #line 2929
26336c28102
< #line 2518
---
> #line 2930
26338,26342c28104,28108
< #line 2519
<     if (mdev->agreed_pro_version <= 95 ? (((mdev->ldev)->md.uuid[2] ^ *(mdev->p_uuid + 3UL)) & 0xfffffffffffffffeULL) == 0ULL : peer + 281474976710656ULL == (*(mdev->p_uuid + 1UL) & 0xfffffffffffffffeULL)) {
< #line 2526
<       if (mdev->agreed_pro_version <= 90) {
< #line 2527
---
> #line 2931
>     if ((mdev->tconn)->agreed_pro_version <= 95 ? (((mdev->ldev)->md.uuid[2] ^ *(mdev->p_uuid + 3UL)) & 0xfffffffffffffffeULL) == 0ULL : peer + 281474976710656ULL == (*(mdev->p_uuid + 1UL) & 0xfffffffffffffffeULL)) {
> #line 2938
>       if ((mdev->tconn)->agreed_pro_version <= 90) {
> #line 2939
26347c28113
< #line 2529
---
> #line 2941
26349c28115
< #line 2530
---
> #line 2942
26351c28117
< #line 2532
---
> #line 2944
26353c28119
< #line 2533
---
> #line 2945
26355c28121
< #line 2535
---
> #line 2947
26363c28129
< #line 2539
---
> #line 2951
26365c28131
< #line 2540
---
> #line 2952
26367c28133
< #line 2541
---
> #line 2953
26369,26372c28135,28138
< #line 2541
<   goto ldv_52759;
<   ldv_52758: 
< #line 2542
---
> #line 2953
>   goto ldv_53592;
>   ldv_53591: 
> #line 2954
26374c28140
< #line 2543
---
> #line 2955
26376c28142
< #line 2544
---
> #line 2956
26381c28147
< #line 2541
---
> #line 2953
26383,26384c28149,28150
<   ldv_52759: ;
< #line 2541
---
>   ldv_53592: ;
> #line 2953
26386,26387c28152,28153
< #line 2542
<     goto ldv_52758;
---
> #line 2954
>     goto ldv_53591;
26391c28157
< #line 2547
---
> #line 2959
26393c28159
< #line 2548
---
> #line 2960
26395c28161
< #line 2549
---
> #line 2961
26397c28163
< #line 2550
---
> #line 2962
26399c28165
< #line 2551
---
> #line 2963
26404c28170
< #line 2553
---
> #line 2965
26406c28172
< #line 2554
---
> #line 2966
26408c28174
< #line 2555
---
> #line 2967
26410,26414c28176,28180
< #line 2556
<     if (mdev->agreed_pro_version <= 95 ? (((mdev->ldev)->md.uuid[3] ^ *(mdev->p_uuid + 2UL)) & 0xfffffffffffffffeULL) == 0ULL : self + 281474976710656ULL == ((mdev->ldev)->md.uuid[1] & 0xfffffffffffffffeULL)) {
< #line 2563
<       if (mdev->agreed_pro_version <= 90) {
< #line 2564
---
> #line 2968
>     if ((mdev->tconn)->agreed_pro_version <= 95 ? (((mdev->ldev)->md.uuid[3] ^ *(mdev->p_uuid + 2UL)) & 0xfffffffffffffffeULL) == 0ULL : self + 281474976710656ULL == ((mdev->ldev)->md.uuid[1] & 0xfffffffffffffffeULL)) {
> #line 2975
>       if ((mdev->tconn)->agreed_pro_version <= 90) {
> #line 2976
26419c28185
< #line 2566
---
> #line 2978
26421c28187
< #line 2567
---
> #line 2979
26423c28189
< #line 2569
---
> #line 2981
26425,26427c28191,28193
< #line 2570
<       if ((int )mdev->state.ldv_39979.disk > 2) {
< #line 2570
---
> #line 2982
>       if ((int )mdev->state.ldv_49522.disk > 2) {
> #line 2982
26429c28195
< #line 2570
---
> #line 2982
26432c28198
< #line 2570
---
> #line 2982
26435c28201
< #line 2570
---
> #line 2982
26438c28204
< #line 2573
---
> #line 2985
26446c28212
< #line 2578
---
> #line 2990
26448c28214
< #line 2579
---
> #line 2991
26450c28216
< #line 2580
---
> #line 2992
26452,26455c28218,28221
< #line 2580
<   goto ldv_52762;
<   ldv_52761: 
< #line 2581
---
> #line 2992
>   goto ldv_53595;
>   ldv_53594: 
> #line 2993
26457c28223
< #line 2582
---
> #line 2994
26459c28225
< #line 2583
---
> #line 2995
26464c28230
< #line 2580
---
> #line 2992
26466,26467c28232,28233
<   ldv_52762: ;
< #line 2580
---
>   ldv_53595: ;
> #line 2992
26469,26470c28235,28236
< #line 2581
<     goto ldv_52761;
---
> #line 2993
>     goto ldv_53594;
26474c28240
< #line 2586
---
> #line 2998
26476c28242
< #line 2587
---
> #line 2999
26478c28244
< #line 2588
---
> #line 3000
26480c28246
< #line 2589
---
> #line 3001
26482c28248
< #line 2590
---
> #line 3002
26487c28253
< #line 2592
---
> #line 3004
26489c28255
< #line 2593
---
> #line 3005
26491,26494c28257,28260
< #line 2593
<   goto ldv_52768;
<   ldv_52767: 
< #line 2594
---
> #line 3005
>   goto ldv_53601;
>   ldv_53600: 
> #line 3006
26496c28262
< #line 2595
---
> #line 3007
26498,26501c28264,28267
< #line 2595
<   goto ldv_52765;
<   ldv_52764: 
< #line 2596
---
> #line 3007
>   goto ldv_53598;
>   ldv_53597: 
> #line 3008
26503c28269
< #line 2597
---
> #line 3009
26505c28271
< #line 2598
---
> #line 3010
26510c28276
< #line 2595
---
> #line 3007
26512,26513c28278,28279
<   ldv_52765: ;
< #line 2595
---
>   ldv_53598: ;
> #line 3007
26515,26516c28281,28282
< #line 2596
<     goto ldv_52764;
---
> #line 3008
>     goto ldv_53597;
26520c28286
< #line 2593
---
> #line 3005
26522,26523c28288,28289
<   ldv_52768: ;
< #line 2593
---
>   ldv_53601: ;
> #line 3005
26525,26526c28291,28292
< #line 2594
<     goto ldv_52767;
---
> #line 3006
>     goto ldv_53600;
26531c28297
< #line 2602
---
> #line 3014
26535c28301
< #line 2608 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3020 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
26539,26540d28304
<   int hg ;
<   int rule_nr ;
26542a28307,28311
>   struct net_conf *nc ;
>   int hg ;
>   int rule_nr ;
>   int rr_conflict ;
>   int tentative ;
26548a28318,28321
>   struct net_conf *_________p1 ;
>   bool __warned ;
>   int tmp___0 ;
>   int tmp___1 ;
26552a28326,28327
>   int tmp___2 ;
>   int tmp___3 ;
26557,26559c28332,28334
<   char const   *tmp___0 ;
<   int tmp___1 ;
<   int tmp___2 ;
---
>   char const   *tmp___4 ;
>   int tmp___5 ;
>   int tmp___6 ;
26562,26563c28337,28338
<   unsigned long tmp___3 ;
<   unsigned long tmp___4 ;
---
>   unsigned long tmp___7 ;
>   unsigned long tmp___8 ;
26566c28341
< #line 2612
---
> #line 3023
26568,26570c28343,28345
< #line 2615
<   mydisk = (enum drbd_disk_state )mdev->state.ldv_39979.disk;
< #line 2616
---
> #line 3028
>   mydisk = (enum drbd_disk_state )mdev->state.ldv_49522.disk;
> #line 3029
26572,26573c28347,28348
< #line 2617
<     mydisk = (enum drbd_disk_state )mdev->new_state_tmp.ldv_39979.disk;
---
> #line 3030
>     mydisk = (enum drbd_disk_state )mdev->new_state_tmp.ldv_40024.disk;
26577c28352
< #line 2619
---
> #line 3032
26579c28354
< #line 2621
---
> #line 3034
26581c28356
< #line 2622
---
> #line 3035
26584c28359
< #line 2623
---
> #line 3036
26586c28361
< #line 2626
---
> #line 3039
26588c28363
< #line 2627
---
> #line 3040
26590c28365
< #line 2629
---
> #line 3042
26593c28368
< #line 2631
---
> #line 3044
26595c28370
< #line 2632
---
> #line 3045
26597c28372
< #line 2633
---
> #line 3046
26602c28377
< #line 2635
---
> #line 3048
26604c28379
< #line 2636
---
> #line 3049
26607c28382
< #line 2637
---
> #line 3050
26612c28387
< #line 2640
---
> #line 3053
26614c28389
< #line 2642
---
> #line 3055
26616c28391
< #line 2642
---
> #line 3055
26619c28394
< #line 2642
---
> #line 3055
26621c28396
< #line 2642
---
> #line 3055
26623c28398
< #line 2642
---
> #line 3055
26625c28400
< #line 2642
---
> #line 3055
26628c28403
< #line 2642
---
> #line 3055
26632c28407
< #line 2642
---
> #line 3055
26634c28409
< #line 2643
---
> #line 3056
26636c28411
< #line 2644
---
> #line 3057
26638c28413
< #line 2645
---
> #line 3058
26643c28418
< #line 2646
---
> #line 3059
26649c28424
< #line 2650
---
> #line 3063
26651c28426
< #line 2650
---
> #line 3063
26653c28428
< #line 2650
---
> #line 3063
26655c28430
< #line 2651
---
> #line 3064
26660,26664c28435,28464
< #line 2653
<   if (hg == 100 || (hg == -100 && (unsigned int )*((unsigned char *)mdev->net_conf + 540UL) != 0U)) {
< #line 2654
<     pcount = ((unsigned int )*((unsigned char *)mdev + 2276UL) == 1U) + ((unsigned int )peer_role == 1U);
< #line 2656
---
> #line 3066
>   rcu_read_lock___2();
> #line 3067
>   _________p1 = *((struct net_conf * volatile  *)(& (mdev->tconn)->net_conf));
> #line 3067
>   tmp___0 = debug_lockdep_rcu_enabled();
> #line 3067
>   if (tmp___0 != 0 && ! __warned) {
> #line 3067
>     tmp___1 = rcu_read_lock_held();
> #line 3067
>     if (tmp___1 == 0 && 1) {
> #line 3067
>       __warned = 1;
> #line 3067
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>                              3067, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 3067
>   nc = _________p1;
> #line 3069
>   if (hg == 100 || (hg == -100 && (int )((signed char )nc->always_asbp) != 0)) {
> #line 3070
>     pcount = ((unsigned int )*((unsigned char *)mdev + 748UL) == 1U) + ((unsigned int )peer_role == 1U);
> #line 3072
26666c28466
< #line 2658
---
> #line 3074
26669c28469
< #line 2660
---
> #line 3076
26671,26672c28471,28472
< #line 2661
<     goto ldv_52791;
---
> #line 3077
>     goto ldv_53630;
26674c28474
< #line 2663
---
> #line 3079
26676,26677c28476,28477
< #line 2664
<     goto ldv_52791;
---
> #line 3080
>     goto ldv_53630;
26679c28479
< #line 2666
---
> #line 3082
26681,26682c28481,28482
< #line 2667
<     goto ldv_52791;
---
> #line 3083
>     goto ldv_53630;
26684,26685c28484,28485
<     ldv_52791: 
< #line 2669
---
>     ldv_53630: 
> #line 3085
26687c28487
< #line 2669
---
> #line 3085
26689c28489
< #line 2669
---
> #line 3085
26691c28491
< #line 2670
---
> #line 3086
26694c28494
< #line 2673
---
> #line 3089
26696c28496
< #line 2674
---
> #line 3090
26698c28498
< #line 2676
---
> #line 3092
26709c28509
< #line 2681
---
> #line 3097
26711,26713c28511,28515
< #line 2682
<     if ((unsigned int )*((unsigned char *)mdev->net_conf + 540UL) != 0U && (*(mdev->p_uuid + 5UL) & 1ULL) == 0ULL) {
< #line 2683
---
> #line 3098
>     tmp___2 = constant_test_bit(21U, (unsigned long const volatile   *)(& mdev->flags));
> #line 3098
>     if (tmp___2 != 0 && (*(mdev->p_uuid + 5UL) & 1ULL) == 0ULL) {
> #line 3099
26718,26720c28520,28524
< #line 2684
<     if ((unsigned int )*((unsigned char *)mdev->net_conf + 540UL) == 0U && (int )*(mdev->p_uuid + 5UL) & 1) {
< #line 2685
---
> #line 3100
>     tmp___3 = constant_test_bit(21U, (unsigned long const volatile   *)(& mdev->flags));
> #line 3100
>     if (tmp___3 == 0 && (int )*(mdev->p_uuid + 5UL) & 1) {
> #line 3101
26725c28529
< #line 2687
---
> #line 3103
26727c28531
< #line 2687
---
> #line 3103
26729c28533
< #line 2687
---
> #line 3103
26731c28535
< #line 2688
---
> #line 3104
26740c28544,28550
< #line 2693
---
> #line 3108
>   rr_conflict = (int )nc->rr_conflict;
> #line 3109
>   tentative = (int )nc->tentative;
> #line 3110
>   rcu_read_unlock___2();
> #line 3112
26742c28552
< #line 2698
---
> #line 3117
26744c28554
< #line 2699
---
> #line 3118
26746c28556
< #line 2700
---
> #line 3119
26751c28561
< #line 2703
---
> #line 3122
26753c28563
< #line 2704
---
> #line 3123
26755c28565
< #line 2705
---
> #line 3124
26760,26763c28570,28573
< #line 2708
<   if ((hg < 0 && (unsigned int )*((unsigned char *)mdev + 2276UL) == 1U) && (int )mdev->state.ldv_39979.disk > 6) {
< #line 2710
<     switch ((mdev->net_conf)->rr_conflict) {
---
> #line 3127
>   if ((hg < 0 && (unsigned int )*((unsigned char *)mdev + 748UL) == 1U) && (int )mdev->state.ldv_49522.disk > 6) {
> #line 3129
>     switch (rr_conflict) {
26765c28575
< #line 2712
---
> #line 3131
26768c28578
< #line 2715
---
> #line 3134
26770c28580
< #line 2716
---
> #line 3135
26773c28583
< #line 2718
---
> #line 3137
26779,26781c28589,28591
< #line 2723
<   if ((unsigned int )*((unsigned char *)mdev->net_conf + 540UL) != 0U) {
< #line 2723
---
> #line 3142
>   if (tentative != 0) {
> #line 3142
26784,26787c28594,28597
< #line 2723
<     tmp___1 = drbd_test_flag(mdev, CONN_DRY_RUN);
< #line 2723
<     if (tmp___1 != 0) {
---
> #line 3142
>     tmp___5 = constant_test_bit(8U, (unsigned long const volatile   *)(& (mdev->tconn)->flags));
> #line 3142
>     if (tmp___5 != 0) {
26789c28599
< #line 2724
---
> #line 3143
26791c28601
< #line 2725
---
> #line 3144
26794c28604
< #line 2727
---
> #line 3146
26796c28606
< #line 2727
---
> #line 3146
26798,26800c28608,28610
< #line 2727
<         tmp___0 = drbd_conn_str(hg > 0 ? C_SYNC_SOURCE : C_SYNC_TARGET);
< #line 2727
---
> #line 3146
>         tmp___4 = drbd_conn_str(hg > 0 ? C_SYNC_SOURCE : C_SYNC_TARGET);
> #line 3146
26802c28612
<                   tmp___0, ret___3 > 1L ? (char *)"full" : (char *)"bit-map based");
---
>                   tmp___4, ret___3 > 1L ? (char *)"full" : (char *)"bit-map based");
26804c28614
< #line 2730
---
> #line 3149
26810c28620
< #line 2733
---
> #line 3152
26812c28622
< #line 2733
---
> #line 3152
26814c28624
< #line 2733
---
> #line 3152
26816c28626
< #line 2734
---
> #line 3153
26818,26819c28628,28629
< #line 2735
<     tmp___2 = drbd_bitmap_io(mdev, & drbd_bmio_set_n_write, (char *)"set_n_write from sync_handshake",
---
> #line 3154
>     tmp___6 = drbd_bitmap_io(mdev, & drbd_bmio_set_n_write, (char *)"set_n_write from sync_handshake",
26821,26823c28631,28633
< #line 2735
<     if (tmp___2 != 0) {
< #line 2737
---
> #line 3154
>     if (tmp___6 != 0) {
> #line 3156
26831c28641
< #line 2740
---
> #line 3159
26833c28643
< #line 2741
---
> #line 3160
26836c28646
< #line 2742
---
> #line 3161
26838c28648
< #line 2743
---
> #line 3162
26841c28651
< #line 2745
---
> #line 3164
26843,26849c28653,28659
< #line 2746
<     tmp___4 = drbd_bm_total_weight(mdev);
< #line 2746
<     if (tmp___4 != 0UL) {
< #line 2747
<       tmp___3 = drbd_bm_total_weight(mdev);
< #line 2747
---
> #line 3165
>     tmp___8 = drbd_bm_total_weight(mdev);
> #line 3165
>     if (tmp___8 != 0UL) {
> #line 3166
>       tmp___7 = drbd_bm_total_weight(mdev);
> #line 3166
26851c28661
<                 tmp___3);
---
>                 tmp___7);
26856c28666
< #line 2752
---
> #line 3171
26860,26861c28670,28671
< #line 2756 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int cmp_after_sb(enum drbd_after_sb_p peer , enum drbd_after_sb_p self ) 
---
> #line 3174 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static enum drbd_after_sb_p convert_after_sb(enum drbd_after_sb_p peer ) 
26866,26876c28676,28679
< #line 2759
<   if (((unsigned int )peer == 6U && (unsigned int )self == 5U) || ((unsigned int )self == 6U && (unsigned int )peer == 5U)) {
< #line 2761
<     return (0);
<   } else {
< 
<   }
< #line 2764
<   if ((((unsigned int )peer == 6U || (unsigned int )peer == 5U) || (unsigned int )self == 6U) || (unsigned int )self == 5U) {
< #line 2766
<     return (1);
---
> #line 3177
>   if ((unsigned int )peer == 6U) {
> #line 3178
>     return (ASB_DISCARD_LOCAL);
26880,26883c28683,28686
< #line 2769
<   if ((unsigned int )peer == (unsigned int )self) {
< #line 2770
<     return (0);
---
> #line 3181
>   if ((unsigned int )peer == 5U) {
> #line 3182
>     return (ASB_DISCARD_REMOTE);
26887,26888c28690,28691
< #line 2773
<   return (1);
---
> #line 3185
>   return (peer);
26891,26892c28694,28695
< #line 2776 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int receive_protocol(struct drbd_conf *mdev , enum drbd_packets cmd , unsigned int data_size ) 
---
> #line 3188 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int receive_protocol(struct drbd_tconn *tconn , struct packet_info *pi ) 
26894a28698,28700
>   enum drbd_after_sb_p p_after_sb_0p ;
>   enum drbd_after_sb_p p_after_sb_1p ;
>   enum drbd_after_sb_p p_after_sb_2p ;
26896,26899c28702
<   int p_after_sb_0p ;
<   int p_after_sb_1p ;
<   int p_after_sb_2p ;
<   int p_want_lose ;
---
>   int p_discard_my_data ;
26902c28705,28708
<   char p_integrity_alg[64U] ;
---
>   struct net_conf *nc ;
>   struct net_conf *old_net_conf ;
>   struct net_conf *new_net_conf ;
>   char integrity_alg[64U] ;
26903a28710,28712
>   struct crypto_hash *peer_integrity_tfm ;
>   void *int_dig_in ;
>   void *int_dig_vv ;
26909a28719,28721
>   int err ;
>   struct net_conf *_________p1 ;
>   bool __warned ;
26912,26915c28724,28734
<   int tmp___8 ;
<   unsigned char *my_alg ;
<   int tmp___9 ;
<   int tmp___10 ;
---
>   enum drbd_after_sb_p tmp___8 ;
>   enum drbd_after_sb_p tmp___9 ;
>   enum drbd_after_sb_p tmp___10 ;
>   int tmp___11 ;
>   int hash_size ;
>   unsigned int tmp___12 ;
>   void *tmp___13 ;
>   enum drbd_after_sb_p tmp___14 ;
>   enum drbd_after_sb_p tmp___15 ;
>   enum drbd_after_sb_p tmp___16 ;
>   int tmp___17 ;
26920,26924c28739,28745
< #line 2778
<   p = & mdev->data.rbuf.protocol;
< #line 2781
<   p_integrity_alg[0] = '\000';
< #line 2781
---
> #line 3190
>   p = (struct p_protocol *)pi->data;
> #line 3193
>   new_net_conf = 0;
> #line 3194
>   integrity_alg[0] = '\000';
> #line 3194
26926c28747
< #line 2781
---
> #line 3194
26928c28749
< #line 2781
---
> #line 3194
26930c28751
< #line 2781
---
> #line 3194
26935,26937c28756,28758
< #line 2781
<     p_integrity_alg[tmp] = (char)0;
< #line 2781
---
> #line 3194
>     integrity_alg[tmp] = (char)0;
> #line 3194
26940c28761,28767
< #line 2783
---
> #line 3195
>   peer_integrity_tfm = 0;
> #line 3196
>   int_dig_in = 0;
> #line 3196
>   int_dig_vv = 0;
> #line 3198
26942c28769
< #line 2783
---
> #line 3198
26944c28771
< #line 2784
---
> #line 3199
26946,26948c28773,28775
< #line 2784
<   p_after_sb_0p = (int )tmp___1;
< #line 2785
---
> #line 3199
>   p_after_sb_0p = (enum drbd_after_sb_p )tmp___1;
> #line 3200
26950,26952c28777,28779
< #line 2785
<   p_after_sb_1p = (int )tmp___2;
< #line 2786
---
> #line 3200
>   p_after_sb_1p = (enum drbd_after_sb_p )tmp___2;
> #line 3201
26954,26956c28781,28783
< #line 2786
<   p_after_sb_2p = (int )tmp___3;
< #line 2787
---
> #line 3201
>   p_after_sb_2p = (enum drbd_after_sb_p )tmp___3;
> #line 3202
26958c28785
< #line 2787
---
> #line 3202
26960c28787
< #line 2788
---
> #line 3203
26962c28789
< #line 2788
---
> #line 3203
26964,26972c28791,28799
< #line 2789
<   p_want_lose = cf & 1;
< #line 2791
<   drbd_clear_flag(mdev, CONN_DRY_RUN);
< #line 2793
<   if ((cf & 2) != 0) {
< #line 2794
<     drbd_set_flag(mdev, CONN_DRY_RUN);
<   } else {
---
> #line 3204
>   p_discard_my_data = cf & 1;
> #line 3206
>   if (tconn->agreed_pro_version > 86) {
> #line 3209
>     if (pi->size > 64U) {
> #line 3210
>       return (-5);
>     } else {
26974,26981c28801,28808
<   }
< #line 2796
<   if ((mdev->net_conf)->wire_protocol != p_proto) {
< #line 2797
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "incompatible communication protocols\n");
< #line 2798
<     goto disconnect;
<   } else {
---
>     }
> #line 3211
>     err = drbd_recv_all(tconn, (void *)(& integrity_alg), (size_t )pi->size);
> #line 3212
>     if (err != 0) {
> #line 3213
>       return (err);
>     } else {
26983,26991c28810,28812
<   }
< #line 2801
<   tmp___6 = cmp_after_sb((enum drbd_after_sb_p )p_after_sb_0p, (enum drbd_after_sb_p )(mdev->net_conf)->after_sb_0p);
< #line 2801
<   if (tmp___6 != 0) {
< #line 2802
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "incompatible after-sb-0pri settings\n");
< #line 2803
<     goto disconnect;
---
>     }
> #line 3214
>     integrity_alg[63] = 0;
26995,27003c28816,28824
< #line 2806
<   tmp___7 = cmp_after_sb((enum drbd_after_sb_p )p_after_sb_1p, (enum drbd_after_sb_p )(mdev->net_conf)->after_sb_1p);
< #line 2806
<   if (tmp___7 != 0) {
< #line 2807
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "incompatible after-sb-1pri settings\n");
< #line 2808
<     goto disconnect;
<   } else {
---
> #line 3217
>   if ((unsigned int )pi->cmd != 45U) {
> #line 3218
>     clear_bit(8, (unsigned long volatile   *)(& tconn->flags));
> #line 3220
>     if ((cf & 2) != 0) {
> #line 3221
>       set_bit(8U, (unsigned long volatile   *)(& tconn->flags));
>     } else {
27005,27014c28826,28844
<   }
< #line 2811
<   tmp___8 = cmp_after_sb((enum drbd_after_sb_p )p_after_sb_2p, (enum drbd_after_sb_p )(mdev->net_conf)->after_sb_2p);
< #line 2811
<   if (tmp___8 != 0) {
< #line 2812
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "incompatible after-sb-2pri settings\n");
< #line 2813
<     goto disconnect;
<   } else {
---
>     }
> #line 3223
>     rcu_read_lock___2();
> #line 3224
>     _________p1 = *((struct net_conf * volatile  *)(& tconn->net_conf));
> #line 3224
>     tmp___6 = debug_lockdep_rcu_enabled();
> #line 3224
>     if (tmp___6 != 0 && ! __warned) {
> #line 3224
>       tmp___7 = rcu_read_lock_held();
> #line 3224
>       if (tmp___7 == 0 && 1) {
> #line 3224
>         __warned = 1;
> #line 3224
>         lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>                                3224, "suspicious rcu_dereference_check() usage");
>       } else {
27016,27023c28846,28847
<   }
< #line 2816
<   if (p_want_lose != 0 && (unsigned int )*((unsigned char *)mdev->net_conf + 540UL) != 0U) {
< #line 2817
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "both sides have the \'want_lose\' flag set\n");
< #line 2818
<     goto disconnect;
<   } else {
---
>       }
>     } else {
27025,27031c28849,28924
<   }
< #line 2821
<   if ((int )(mdev->net_conf)->two_primaries != p_two_primaries) {
< #line 2822
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "incompatible setting of the two-primaries options\n");
< #line 2823
<     goto disconnect;
---
>     }
> #line 3224
>     nc = _________p1;
> #line 3226
>     if ((__u32 )p_proto != nc->wire_protocol) {
> #line 3227
>       printk("\vd-con %s: incompatible %s settings\n", tconn->name, (char *)"protocol");
> #line 3228
>       goto disconnect_rcu_unlock;
>     } else {
> 
>     }
> #line 3231
>     tmp___8 = convert_after_sb(p_after_sb_0p);
> #line 3231
>     if ((unsigned int )tmp___8 != nc->after_sb_0p) {
> #line 3232
>       printk("\vd-con %s: incompatible %s settings\n", tconn->name, (char *)"after-sb-0pri");
> #line 3233
>       goto disconnect_rcu_unlock;
>     } else {
> 
>     }
> #line 3236
>     tmp___9 = convert_after_sb(p_after_sb_1p);
> #line 3236
>     if ((unsigned int )tmp___9 != nc->after_sb_1p) {
> #line 3237
>       printk("\vd-con %s: incompatible %s settings\n", tconn->name, (char *)"after-sb-1pri");
> #line 3238
>       goto disconnect_rcu_unlock;
>     } else {
> 
>     }
> #line 3241
>     tmp___10 = convert_after_sb(p_after_sb_2p);
> #line 3241
>     if ((unsigned int )tmp___10 != nc->after_sb_2p) {
> #line 3242
>       printk("\vd-con %s: incompatible %s settings\n", tconn->name, (char *)"after-sb-2pri");
> #line 3243
>       goto disconnect_rcu_unlock;
>     } else {
> 
>     }
> #line 3246
>     if (p_discard_my_data != 0 && (int )((signed char )nc->discard_my_data) != 0) {
> #line 3247
>       printk("\vd-con %s: incompatible %s settings\n", tconn->name, (char *)"discard-my-data");
> #line 3248
>       goto disconnect_rcu_unlock;
>     } else {
> 
>     }
> #line 3251
>     if ((int )nc->two_primaries != p_two_primaries) {
> #line 3252
>       printk("\vd-con %s: incompatible %s settings\n", tconn->name, (char *)"allow-two-primaries");
> #line 3253
>       goto disconnect_rcu_unlock;
>     } else {
> 
>     }
> #line 3256
>     tmp___11 = strcmp((char const   *)(& integrity_alg), (char const   *)(& nc->integrity_alg));
> #line 3256
>     if (tmp___11 != 0) {
> #line 3257
>       printk("\vd-con %s: incompatible %s settings\n", tconn->name, (char *)"data-integrity-alg");
> #line 3258
>       goto disconnect_rcu_unlock;
>     } else {
> 
>     }
> #line 3261
>     rcu_read_unlock___2();
27035,27044c28928,28939
< #line 2826
<   if (mdev->agreed_pro_version > 86) {
< #line 2827
<     my_alg = (unsigned char *)(& (mdev->net_conf)->integrity_alg);
< #line 2829
<     tmp___9 = drbd_recv(mdev, (void *)(& p_integrity_alg), (size_t )data_size);
< #line 2829
<     if ((unsigned int )tmp___9 != data_size) {
< #line 2830
<       return (0);
---
> #line 3264
>   if ((int )((signed char )integrity_alg[0]) != 0) {
> #line 3276
>     peer_integrity_tfm = crypto_alloc_hash((char const   *)(& integrity_alg), 0U,
>                                            128U);
> #line 3277
>     if ((unsigned long )peer_integrity_tfm == (unsigned long )((struct crypto_hash *)0)) {
> #line 3278
>       printk("\vd-con %s: peer data-integrity-alg %s not supported\n", tconn->name,
>              (char *)(& integrity_alg));
> #line 3280
>       goto disconnect;
27048,27056c28943,28956
< #line 2832
<     p_integrity_alg[63] = 0;
< #line 2833
<     tmp___10 = strcmp((char const   *)(& p_integrity_alg), (char const   *)my_alg);
< #line 2833
<     if (tmp___10 != 0) {
< #line 2834
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "incompatible setting of the data-integrity-alg\n");
< #line 2835
---
> #line 3283
>     tmp___12 = crypto_hash_digestsize(peer_integrity_tfm);
> #line 3283
>     hash_size = (int )tmp___12;
> #line 3284
>     int_dig_in = kmalloc((size_t )hash_size, 208U);
> #line 3285
>     int_dig_vv = kmalloc((size_t )hash_size, 208U);
> #line 3286
>     if ((unsigned long )int_dig_in == (unsigned long )((void *)0) || (unsigned long )int_dig_vv == (unsigned long )((void *)0)) {
> #line 3287
>       printk("\vd-con %s: Allocation of buffers for data integrity checking failed\n",
>              tconn->name);
> #line 3288
27061,27063d28960
< #line 2837
<     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "data-integrity-alg: %s\n",
<               (unsigned int )*my_alg != 0U ? my_alg : (unsigned char *)"<not-used>");
27067,27068c28964,29038
< #line 2841
<   return (1);
---
> #line 3292
>   tmp___13 = kmalloc(420UL, 208U);
> #line 3292
>   new_net_conf = (struct net_conf *)tmp___13;
> #line 3293
>   if ((unsigned long )new_net_conf == (unsigned long )((struct net_conf *)0)) {
> #line 3294
>     printk("\vd-con %s: Allocation of new net_conf failed\n", tconn->name);
> #line 3295
>     goto disconnect;
>   } else {
> 
>   }
> #line 3298
>   ldv_mutex_lock_106(& tconn->data.mutex);
> #line 3299
>   ldv_mutex_lock_107(& tconn->conf_update);
> #line 3300
>   old_net_conf = tconn->net_conf;
> #line 3301
>   *new_net_conf = *old_net_conf;
> #line 3303
>   new_net_conf->wire_protocol = (__u32 )p_proto;
> #line 3304
>   tmp___14 = convert_after_sb(p_after_sb_0p);
> #line 3304
>   new_net_conf->after_sb_0p = (__u32 )tmp___14;
> #line 3305
>   tmp___15 = convert_after_sb(p_after_sb_1p);
> #line 3305
>   new_net_conf->after_sb_1p = (__u32 )tmp___15;
> #line 3306
>   tmp___16 = convert_after_sb(p_after_sb_2p);
> #line 3306
>   new_net_conf->after_sb_2p = (__u32 )tmp___16;
> #line 3307
>   new_net_conf->two_primaries = (char )p_two_primaries;
> #line 3309
>   __asm__  volatile   ("": : : "memory");
> #line 3309
>   tconn->net_conf = new_net_conf;
> #line 3310
>   ldv_mutex_unlock_108(& tconn->conf_update);
> #line 3311
>   ldv_mutex_unlock_109(& tconn->data.mutex);
> #line 3313
>   crypto_free_hash(tconn->peer_integrity_tfm);
> #line 3314
>   kfree((void const   *)tconn->int_dig_in);
> #line 3315
>   kfree((void const   *)tconn->int_dig_vv);
> #line 3316
>   tconn->peer_integrity_tfm = peer_integrity_tfm;
> #line 3317
>   tconn->int_dig_in = int_dig_in;
> #line 3318
>   tconn->int_dig_vv = int_dig_vv;
> #line 3320
>   tmp___17 = strcmp((char const   *)(& old_net_conf->integrity_alg), (char const   *)(& integrity_alg));
> #line 3320
>   if (tmp___17 != 0) {
> #line 3321
>     printk("\016d-con %s: peer data-integrity-alg: %s\n", tconn->name, (int )((signed char )integrity_alg[0]) != 0 ? (char *)(& integrity_alg) : (char *)"(none)");
>   } else {
> 
>   }
> #line 3324
>   synchronize_rcu();
> #line 3325
>   kfree((void const   *)old_net_conf);
> #line 3326
>   return (0);
>   disconnect_rcu_unlock: 
> #line 3329
>   rcu_read_unlock___2();
27070c29040,29046
< #line 2844
---
> #line 3331
>   crypto_free_hash(peer_integrity_tfm);
> #line 3332
>   kfree((void const   *)int_dig_in);
> #line 3333
>   kfree((void const   *)int_dig_vv);
> #line 3334
27072,27074c29048,29050
< #line 2844
<   val.ldv_39979.conn = 1U;
< #line 2844
---
> #line 3334
>   val.ldv_40024.conn = 1U;
> #line 3334
27076,27081c29052,29057
< #line 2844
<   mask.ldv_39979.conn = 31U;
< #line 2844
<   drbd_force_state(mdev, mask, val);
< #line 2845
<   return (0);
---
> #line 3334
>   mask.ldv_40024.conn = 31U;
> #line 3334
>   conn_request_state(tconn, mask, val, CS_HARD);
> #line 3335
>   return (-5);
27084c29060
< #line 2853 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3343 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
27091,27093d29066
<   void *tmp___1 ;
<   struct crypto_tfm *tmp___2 ;
<   int tmp___3 ;
27096c29069
< #line 2858
---
> #line 3348
27098c29071
< #line 2859
---
> #line 3349
27103c29076
< #line 2861
---
> #line 3351
27105c29078
< #line 2862
---
> #line 3352
27107c29080
< #line 2862
---
> #line 3352
27109c29082
< #line 2863
---
> #line 3353
27111c29084
< #line 2863
---
> #line 3353
27114c29087
< #line 2865
---
> #line 3355
27119,27133c29092,29131
< #line 2867
<   tmp___2 = crypto_hash_tfm(tfm);
< #line 2867
<   tmp___3 = drbd_crypto_is_hash(tmp___2);
< #line 2867
<   if (tmp___3 == 0) {
< #line 2868
<     crypto_free_hash(tfm);
< #line 2869
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "\"%s\" is not a digest (%s)\n",
<             alg, name);
< #line 2870
<     tmp___1 = ERR_PTR(-22L);
< #line 2870
<     return ((struct crypto_hash *)tmp___1);
---
> #line 3357
>   return (tfm);
> }
> }
> #line 3360 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int ignore_remaining_packet(struct drbd_tconn *tconn , struct packet_info *pi ) 
> { 
>   void *buffer ;
>   int size ;
>   int s ;
>   int __min1 ;
>   int __min2 ;
> 
>   {
> #line 3362
>   buffer = tconn->data.rbuf;
> #line 3363
>   size = (int )pi->size;
> #line 3365
>   goto ldv_53703;
>   ldv_53702: 
> #line 3366
>   __min1 = size;
> #line 3366
>   __min2 = 4096;
> #line 3366
>   s = __min1 < __min2 ? __min1 : __min2;
> #line 3367
>   s = drbd_recv(tconn, buffer, (size_t )s);
> #line 3368
>   if (s <= 0) {
> #line 3369
>     if (s < 0) {
> #line 3370
>       return (s);
>     } else {
> 
>     }
> #line 3371
>     goto ldv_53701;
27137,27138c29135,29154
< #line 2872
<   return (tfm);
---
> #line 3373
>   size = size - s;
>   ldv_53703: ;
> #line 3365
>   if (size != 0) {
> #line 3366
>     goto ldv_53702;
>   } else {
> 
>   }
>   ldv_53701: ;
> #line 3375
>   if (size != 0) {
> #line 3376
>     return (-5);
>   } else {
> 
>   }
> #line 3377
>   return (0);
27141,27142c29157,29158
< #line 2875 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int receive_SyncParam(struct drbd_conf *mdev , enum drbd_packets cmd , unsigned int packet_size ) 
---
> #line 3391 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int config_unknown_volume(struct drbd_tconn *tconn , struct packet_info *pi ) 
27144c29160,29178
<   int ok ;
---
>   char const   *tmp ;
>   int tmp___0 ;
> 
>   {
> #line 3393
>   tmp = cmdname(pi->cmd);
> #line 3393
>   printk("\fd-con %s: %s packet received for volume %u, which is not configured locally\n",
>          tconn->name, tmp, pi->vnr);
> #line 3395
>   tmp___0 = ignore_remaining_packet(tconn, pi);
> #line 3395
>   return (tmp___0);
> }
> }
> #line 3398 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int receive_SyncParam(struct drbd_tconn *tconn , struct packet_info *pi ) 
> { 
>   struct drbd_conf *mdev ;
27150a29185,29188
>   struct net_conf *old_net_conf ;
>   struct net_conf *new_net_conf ;
>   struct disk_conf *old_disk_conf ;
>   struct disk_conf *new_disk_conf ;
27152c29190,29191
<   int *rs_plan_s ;
---
>   struct fifo_buffer *old_plan ;
>   struct fifo_buffer *new_plan ;
27153a29193
>   int err ;
27155,27161c29195,29201
<   __u32 tmp___0 ;
<   int tmp___1 ;
<   long tmp___2 ;
<   int tmp___3 ;
<   long tmp___4 ;
<   int tmp___5 ;
<   __u32 tmp___6 ;
---
>   void *tmp___0 ;
>   __u32 tmp___1 ;
>   int tmp___2 ;
>   long tmp___3 ;
>   int tmp___4 ;
>   long tmp___5 ;
>   int tmp___6 ;
27173,27177c29213
< #line 2877
<   ok = 1;
< #line 2878
<   p = & mdev->data.rbuf.rs_param_95;
< #line 2880
---
> #line 3403
27179c29215
< #line 2881
---
> #line 3404
27181,27185c29217,29229
< #line 2882
<   apv = mdev->agreed_pro_version;
< #line 2883
<   rs_plan_s = 0;
< #line 2884
---
> #line 3405
>   new_net_conf = 0;
> #line 3406
>   old_disk_conf = 0;
> #line 3406
>   new_disk_conf = 0;
> #line 3407
>   apv = tconn->agreed_pro_version;
> #line 3408
>   old_plan = 0;
> #line 3408
>   new_plan = 0;
> #line 3409
27187,27191c29231,29246
< #line 2886
<   exp_max_sz = apv > 87 ? (apv != 88 ? (apv <= 94 ? 140U : 156U) : 76U) : 12U;
< #line 2892
<   if (packet_size > exp_max_sz) {
< #line 2893
---
> #line 3412
>   mdev = vnr_to_mdev(tconn, (int )pi->vnr);
> #line 3413
>   if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
> #line 3414
>     tmp = config_unknown_volume(tconn, pi);
> #line 3414
>     return (tmp);
>   } else {
> 
>   }
> #line 3416
>   exp_max_sz = apv > 87 ? (apv != 88 ? (apv <= 94 ? 132U : 148U) : 68U) : 4U;
> #line 3422
>   if (pi->size > exp_max_sz) {
> #line 3423
27193,27195c29248,29250
<             packet_size, exp_max_sz);
< #line 2895
<     return (0);
---
>             pi->size, exp_max_sz);
> #line 3425
>     return (-5);
27199c29254
< #line 2898
---
> #line 3428
27201c29256
< #line 2899
---
> #line 3429
27203,27204c29258,29259
< #line 2900
<     data_size = packet_size - header_size;
---
> #line 3430
>     data_size = pi->size - header_size;
27206c29261
< #line 2901
---
> #line 3431
27208c29263
< #line 2902
---
> #line 3432
27210,27212c29265,29267
< #line 2903
<     data_size = packet_size - header_size;
< #line 2904
---
> #line 3433
>     data_size = pi->size - header_size;
> #line 3434
27214c29269
< #line 2904
---
> #line 3434
27216,27217c29271,29272
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<               2904);
---
>               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>               3434);
27222c29277
< #line 2906
---
> #line 3436
27224,27226c29279,29281
< #line 2907
<     data_size = packet_size - header_size;
< #line 2908
---
> #line 3437
>     data_size = pi->size - header_size;
> #line 3438
27228c29283
< #line 2908
---
> #line 3438
27230,27231c29285,29286
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<               2908);
---
>               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>               3438);
27236c29291,29293
< #line 2912
---
> #line 3442
>   p = (struct p_rs_param_95 *)pi->data;
> #line 3443
27238,27243c29295,29300
< #line 2914
<   tmp = drbd_recv(mdev, (void *)(& p->head.payload), (size_t )header_size);
< #line 2914
<   if ((unsigned int )tmp != header_size) {
< #line 2915
<     return (0);
---
> #line 3445
>   err = drbd_recv_all(mdev->tconn, (void *)p, (size_t )header_size);
> #line 3446
>   if (err != 0) {
> #line 3447
>     return (err);
27247,27251c29304,29340
< #line 2917
<   tmp___0 = __fswab32(p->rate);
< #line 2917
<   mdev->sync_conf.rate = (int )tmp___0;
< #line 2919
---
> #line 3449
>   ldv_mutex_lock_110(& (mdev->tconn)->conf_update);
> #line 3450
>   old_net_conf = (mdev->tconn)->net_conf;
> #line 3451
>   tmp___2 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 3451
>   if (tmp___2 != 0) {
> #line 3452
>     tmp___0 = kzalloc(344UL, 208U);
> #line 3452
>     new_disk_conf = (struct disk_conf *)tmp___0;
> #line 3453
>     if ((unsigned long )new_disk_conf == (unsigned long )((struct disk_conf *)0)) {
> #line 3454
>       put_ldev(mdev);
> #line 3455
>       ldv_mutex_unlock_111(& (mdev->tconn)->conf_update);
> #line 3456
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Allocation of new disk_conf failed\n");
> #line 3457
>       return (-12);
>     } else {
> 
>     }
> #line 3460
>     old_disk_conf = (mdev->ldev)->disk_conf;
> #line 3461
>     *new_disk_conf = *old_disk_conf;
> #line 3463
>     tmp___1 = __fswab32(p->resync_rate);
> #line 3463
>     new_disk_conf->resync_rate = tmp___1;
>   } else {
> 
>   }
> #line 3466
27253c29342
< #line 2920
---
> #line 3467
27255c29344
< #line 2921
---
> #line 3468
27257c29346
< #line 2922
---
> #line 3469
27260,27261c29349,29352
< #line 2925
<         return (0);
---
> #line 3472
>         err = -5;
> #line 3473
>         goto reconnect;
27265,27270c29356,29361
< #line 2928
<       tmp___1 = drbd_recv(mdev, (void *)(& p->verify_alg), (size_t )data_size);
< #line 2928
<       if ((unsigned int )tmp___1 != data_size) {
< #line 2929
<         return (0);
---
> #line 3476
>       err = drbd_recv_all(mdev->tconn, (void *)(& p->verify_alg), (size_t )data_size);
> #line 3477
>       if (err != 0) {
> #line 3478
>         goto reconnect;
27274c29365
< #line 2933
---
> #line 3481
27276c29367
< #line 2933
---
> #line 3481
27278,27279c29369,29370
<                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<                 2933);
---
>                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>                 3481);
27283c29374
< #line 2934
---
> #line 3482
27286c29377
< #line 2939
---
> #line 3487
27288c29379
< #line 2939
---
> #line 3487
27290,27291c29381,29382
<                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<                 2939);
---
>                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>                 3487);
27295c29386
< #line 2940
---
> #line 3488
27297c29388
< #line 2940
---
> #line 3488
27299,27300c29390,29391
<                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<                 2940);
---
>                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>                 3488);
27304c29395
< #line 2941
---
> #line 3489
27306c29397
< #line 2942
---
> #line 3490
27309,27315c29400,29406
< #line 2945
<     tmp___3 = strcmp((char const   *)(& mdev->sync_conf.verify_alg), (char const   *)(& p->verify_alg));
< #line 2945
<     if (tmp___3 != 0) {
< #line 2946
<       if ((unsigned int )*((unsigned short *)mdev + 1138UL) == 144U) {
< #line 2947
---
> #line 3493
>     tmp___4 = strcmp((char const   *)(& old_net_conf->verify_alg), (char const   *)(& p->verify_alg));
> #line 3493
>     if (tmp___4 != 0) {
> #line 3494
>       if ((unsigned int )*((unsigned short *)mdev + 374UL) == 144U) {
> #line 3495
27317,27318c29408,29409
<                 (unsigned char *)(& mdev->sync_conf.verify_alg), (char *)(& p->verify_alg));
< #line 2949
---
>                 (char *)(& old_net_conf->verify_alg), (char *)(& p->verify_alg));
> #line 3497
27323c29414
< #line 2951
---
> #line 3499
27327,27331c29418,29422
< #line 2953
<       tmp___2 = IS_ERR((void const   *)verify_tfm);
< #line 2953
<       if (tmp___2 != 0L) {
< #line 2954
---
> #line 3501
>       tmp___3 = IS_ERR((void const   *)verify_tfm);
> #line 3501
>       if (tmp___3 != 0L) {
> #line 3502
27333c29424
< #line 2955
---
> #line 3503
27341c29432
< #line 2959
---
> #line 3507
27343,27349c29434,29440
< #line 2959
<       tmp___5 = strcmp((char const   *)(& mdev->sync_conf.csums_alg), (char const   *)(& p->csums_alg));
< #line 2959
<       if (tmp___5 != 0) {
< #line 2960
<         if ((unsigned int )*((unsigned short *)mdev + 1138UL) == 144U) {
< #line 2961
---
> #line 3507
>       tmp___6 = strcmp((char const   *)(& old_net_conf->csums_alg), (char const   *)(& p->csums_alg));
> #line 3507
>       if (tmp___6 != 0) {
> #line 3508
>         if ((unsigned int )*((unsigned short *)mdev + 374UL) == 144U) {
> #line 3509
27351,27352c29442,29443
<                   (unsigned char *)(& mdev->sync_conf.csums_alg), (char *)(& p->csums_alg));
< #line 2963
---
>                   (char *)(& old_net_conf->csums_alg), (char *)(& p->csums_alg));
> #line 3511
27357c29448
< #line 2965
---
> #line 3513
27361,27365c29452,29456
< #line 2967
<         tmp___4 = IS_ERR((void const   *)csums_tfm);
< #line 2967
<         if (tmp___4 != 0L) {
< #line 2968
---
> #line 3515
>         tmp___5 = IS_ERR((void const   *)csums_tfm);
> #line 3515
>         if (tmp___5 != 0L) {
> #line 3516
27367c29458
< #line 2969
---
> #line 3517
27378,27384c29469,29471
< #line 2973
<     if (apv > 94) {
< #line 2974
<       tmp___6 = __fswab32(p->rate);
< #line 2974
<       mdev->sync_conf.rate = (int )tmp___6;
< #line 2975
---
> #line 3521
>     if (apv > 94 && (unsigned long )new_disk_conf != (unsigned long )((struct disk_conf *)0)) {
> #line 3522
27386,27388c29473,29475
< #line 2975
<       mdev->sync_conf.c_plan_ahead = (int )tmp___7;
< #line 2976
---
> #line 3522
>       new_disk_conf->c_plan_ahead = tmp___7;
> #line 3523
27390,27392c29477,29479
< #line 2976
<       mdev->sync_conf.c_delay_target = (int )tmp___8;
< #line 2977
---
> #line 3523
>       new_disk_conf->c_delay_target = tmp___8;
> #line 3524
27394,27396c29481,29483
< #line 2977
<       mdev->sync_conf.c_fill_target = (int )tmp___9;
< #line 2978
---
> #line 3524
>       new_disk_conf->c_fill_target = tmp___9;
> #line 3525
27398,27410c29485,29495
< #line 2978
<       mdev->sync_conf.c_max_rate = (int )tmp___10;
< #line 2980
<       fifo_size = (mdev->sync_conf.c_plan_ahead * 250) / 250;
< #line 2981
<       if ((unsigned int )fifo_size != mdev->rs_plan_s.size && fifo_size > 0) {
< #line 2982
<         tmp___11 = kzalloc((unsigned long )fifo_size * 4UL, 16U);
< #line 2982
<         rs_plan_s = (int *)tmp___11;
< #line 2983
<         if ((unsigned long )rs_plan_s == (unsigned long )((int *)0)) {
< #line 2984
---
> #line 3525
>       new_disk_conf->c_max_rate = tmp___10;
> #line 3527
>       fifo_size = (int )((new_disk_conf->c_plan_ahead * 250U) / 250U);
> #line 3528
>       if ((unsigned int )fifo_size != (mdev->rs_plan_s)->size) {
> #line 3529
>         new_plan = fifo_alloc(fifo_size);
> #line 3530
>         if ((unsigned long )new_plan == (unsigned long )((struct fifo_buffer *)0)) {
> #line 3531
27412c29497,29499
< #line 2985
---
> #line 3532
>           put_ldev(mdev);
> #line 3533
27423,27440c29510,29522
< #line 2990
<     spin_lock(& mdev->peer_seq_lock);
< #line 2992
<     if ((unsigned long )verify_tfm != (unsigned long )((struct crypto_hash *)0)) {
< #line 2993
<       strcpy((char *)(& mdev->sync_conf.verify_alg), (char const   *)(& p->verify_alg));
< #line 2994
<       tmp___12 = strlen((char const   *)(& p->verify_alg));
< #line 2994
<       mdev->sync_conf.verify_alg_len = (int )((unsigned int )tmp___12 + 1U);
< #line 2995
<       crypto_free_hash(mdev->verify_tfm);
< #line 2996
<       mdev->verify_tfm = verify_tfm;
< #line 2997
<       _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "using verify-alg: \"%s\"\n",
<                 (char *)(& p->verify_alg));
<     } else {
---
> #line 3538
>     if ((unsigned long )verify_tfm != (unsigned long )((struct crypto_hash *)0) || (unsigned long )csums_tfm != (unsigned long )((struct crypto_hash *)0)) {
> #line 3539
>       tmp___11 = kzalloc(420UL, 208U);
> #line 3539
>       new_net_conf = (struct net_conf *)tmp___11;
> #line 3540
>       if ((unsigned long )new_net_conf == (unsigned long )((struct net_conf *)0)) {
> #line 3541
>         dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Allocation of new net_conf failed\n");
> #line 3542
>         goto disconnect;
>       } else {
27442,27458c29524,29542
<     }
< #line 2999
<     if ((unsigned long )csums_tfm != (unsigned long )((struct crypto_hash *)0)) {
< #line 3000
<       strcpy((char *)(& mdev->sync_conf.csums_alg), (char const   *)(& p->csums_alg));
< #line 3001
<       tmp___13 = strlen((char const   *)(& p->csums_alg));
< #line 3001
<       mdev->sync_conf.csums_alg_len = (int )((unsigned int )tmp___13 + 1U);
< #line 3002
<       crypto_free_hash(mdev->csums_tfm);
< #line 3003
<       mdev->csums_tfm = csums_tfm;
< #line 3004
<       _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "using csums-alg: \"%s\"\n",
<                 (char *)(& p->csums_alg));
<     } else {
---
>       }
> #line 3545
>       *new_net_conf = *old_net_conf;
> #line 3547
>       if ((unsigned long )verify_tfm != (unsigned long )((struct crypto_hash *)0)) {
> #line 3548
>         strcpy((char *)(& new_net_conf->verify_alg), (char const   *)(& p->verify_alg));
> #line 3549
>         tmp___12 = strlen((char const   *)(& p->verify_alg));
> #line 3549
>         new_net_conf->verify_alg_len = (__u32 )tmp___12 + 1U;
> #line 3550
>         crypto_free_hash((mdev->tconn)->verify_tfm);
> #line 3551
>         (mdev->tconn)->verify_tfm = verify_tfm;
> #line 3552
>         _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "using verify-alg: \"%s\"\n",
>                   (char *)(& p->verify_alg));
>       } else {
27460,27470c29544,29566
<     }
< #line 3006
<     if ((unsigned int )fifo_size != mdev->rs_plan_s.size) {
< #line 3007
<       kfree((void const   *)mdev->rs_plan_s.values);
< #line 3008
<       mdev->rs_plan_s.values = rs_plan_s;
< #line 3009
<       mdev->rs_plan_s.size = (unsigned int )fifo_size;
< #line 3010
<       mdev->rs_planed = 0;
---
>       }
> #line 3554
>       if ((unsigned long )csums_tfm != (unsigned long )((struct crypto_hash *)0)) {
> #line 3555
>         strcpy((char *)(& new_net_conf->csums_alg), (char const   *)(& p->csums_alg));
> #line 3556
>         tmp___13 = strlen((char const   *)(& p->csums_alg));
> #line 3556
>         new_net_conf->csums_alg_len = (__u32 )tmp___13 + 1U;
> #line 3557
>         crypto_free_hash((mdev->tconn)->csums_tfm);
> #line 3558
>         (mdev->tconn)->csums_tfm = csums_tfm;
> #line 3559
>         _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "using csums-alg: \"%s\"\n",
>                   (char *)(& p->csums_alg));
>       } else {
> 
>       }
> #line 3561
>       __asm__  volatile   ("": : : "memory");
> #line 3561
>       tconn->net_conf = new_net_conf;
27474,27475d29569
< #line 3012
<     spin_unlock(& mdev->peer_seq_lock);
27479,27480c29573,29625
< #line 3015
<   return (ok);
---
> #line 3565
>   if ((unsigned long )new_disk_conf != (unsigned long )((struct disk_conf *)0)) {
> #line 3566
>     __asm__  volatile   ("": : : "memory");
> #line 3566
>     (mdev->ldev)->disk_conf = new_disk_conf;
> #line 3567
>     put_ldev(mdev);
>   } else {
> 
>   }
> #line 3570
>   if ((unsigned long )new_plan != (unsigned long )((struct fifo_buffer *)0)) {
> #line 3571
>     old_plan = mdev->rs_plan_s;
> #line 3572
>     __asm__  volatile   ("": : : "memory");
> #line 3572
>     mdev->rs_plan_s = new_plan;
>   } else {
> 
>   }
> #line 3575
>   ldv_mutex_unlock_112(& (mdev->tconn)->conf_update);
> #line 3576
>   synchronize_rcu();
> #line 3577
>   if ((unsigned long )new_net_conf != (unsigned long )((struct net_conf *)0)) {
> #line 3578
>     kfree((void const   *)old_net_conf);
>   } else {
> 
>   }
> #line 3579
>   kfree((void const   *)old_disk_conf);
> #line 3580
>   kfree((void const   *)old_plan);
> #line 3582
>   return (0);
>   reconnect: ;
> #line 3585
>   if ((unsigned long )new_disk_conf != (unsigned long )((struct disk_conf *)0)) {
> #line 3586
>     put_ldev(mdev);
> #line 3587
>     kfree((void const   *)new_disk_conf);
>   } else {
> 
>   }
> #line 3589
>   ldv_mutex_unlock_113(& (mdev->tconn)->conf_update);
> #line 3590
>   return (-5);
27482c29627,29640
< #line 3019
---
> #line 3593
>   kfree((void const   *)new_plan);
> #line 3594
>   if ((unsigned long )new_disk_conf != (unsigned long )((struct disk_conf *)0)) {
> #line 3595
>     put_ldev(mdev);
> #line 3596
>     kfree((void const   *)new_disk_conf);
>   } else {
> 
>   }
> #line 3598
>   ldv_mutex_unlock_114(& (mdev->tconn)->conf_update);
> #line 3601
27484c29642
< #line 3021
---
> #line 3603
27486c29644
< #line 3022
---
> #line 3604
27488,27490c29646,29648
< #line 3022
<   val.ldv_39979.conn = 1U;
< #line 3022
---
> #line 3604
>   val.ldv_40024.conn = 1U;
> #line 3604
27492,27497c29650,29655
< #line 3022
<   mask.ldv_39979.conn = 31U;
< #line 3022
<   drbd_force_state(mdev, mask, val);
< #line 3023
<   return (0);
---
> #line 3604
>   mask.ldv_40024.conn = 31U;
> #line 3604
>   conn_request_state(mdev->tconn, mask, val, CS_HARD);
> #line 3605
>   return (-5);
27500c29658
< #line 3027 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3609 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
27507c29665
< #line 3031
---
> #line 3613
27509c29667
< #line 3032
---
> #line 3614
27514c29672
< #line 3033
---
> #line 3615
27516c29674
< #line 3034
---
> #line 3616
27518c29676
< #line 3035
---
> #line 3617
27524c29682
< #line 3037
---
> #line 3619
27528,27529c29686,29687
< #line 3039 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int receive_sizes(struct drbd_conf *mdev , enum drbd_packets cmd , unsigned int data_size ) 
---
> #line 3621 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int receive_sizes(struct drbd_tconn *tconn , struct packet_info *pi ) 
27530a29689
>   struct drbd_conf *mdev ;
27538c29697
<   __u64 tmp ;
---
>   int tmp ;
27540,27543c29699,29705
<   union drbd_state val ;
<   union drbd_state mask ;
<   sector_t tmp___1 ;
<   unsigned long __x ;
---
>   __u64 tmp___1 ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp___2 ;
>   int tmp___3 ;
>   sector_t tmp___4 ;
>   sector_t __x ;
27545c29707
<   unsigned long _min1 ;
---
>   sector_t _min1 ;
27547,27551d29708
<   unsigned long tmp___2 ;
<   unsigned long tmp___3 ;
<   union drbd_state val___0 ;
<   union drbd_state mask___0 ;
<   sector_t tmp___4 ;
27553,27561c29710,29726
<   int tmp___6 ;
<   __u16 tmp___7 ;
<   int tmp___8 ;
<   __u32 tmp___9 ;
<   sector_t tmp___10 ;
<   int tmp___11 ;
<   __u64 tmp___12 ;
<   sector_t tmp___13 ;
<   int tmp___14 ;
---
>   sector_t tmp___6 ;
>   union drbd_state val ;
>   union drbd_state mask ;
>   sector_t tmp___7 ;
>   sector_t tmp___8 ;
>   struct disk_conf *old_disk_conf ;
>   struct disk_conf *new_disk_conf ;
>   void *tmp___9 ;
>   int tmp___10 ;
>   __u16 tmp___11 ;
>   int tmp___12 ;
>   __u32 tmp___13 ;
>   sector_t tmp___14 ;
>   int tmp___15 ;
>   __u64 tmp___16 ;
>   sector_t tmp___17 ;
>   int tmp___18 ;
27564,27566c29729,29731
< #line 3041
<   p = & mdev->data.rbuf.sizes;
< #line 3042
---
> #line 3624
>   p = (struct p_sizes *)pi->data;
> #line 3625
27568c29733
< #line 3044
---
> #line 3627
27570,27593c29735,29742
< #line 3047
<   tmp = __fswab64(p->d_size);
< #line 3047
<   p_size = (sector_t )tmp;
< #line 3048
<   tmp___0 = __fswab64(p->u_size);
< #line 3048
<   p_usize = (sector_t )tmp___0;
< #line 3050
<   if (p_size == 0UL && (unsigned int )*((unsigned char *)mdev + 2277UL) == 0U) {
< #line 3051
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "some backing storage is needed\n");
< #line 3052
<     val.i = 0U;
< #line 3052
<     val.ldv_39979.conn = 1U;
< #line 3052
<     mask.i = 0U;
< #line 3052
<     mask.ldv_39979.conn = 31U;
< #line 3052
<     drbd_force_state(mdev, mask, val);
< #line 3053
<     return (0);
---
> #line 3630
>   mdev = vnr_to_mdev(tconn, (int )pi->vnr);
> #line 3631
>   if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
> #line 3632
>     tmp = config_unknown_volume(tconn, pi);
> #line 3632
>     return (tmp);
27597c29746,29754
< #line 3058
---
> #line 3634
>   tmp___0 = __fswab64(p->d_size);
> #line 3634
>   p_size = (sector_t )tmp___0;
> #line 3635
>   tmp___1 = __fswab64(p->u_size);
> #line 3635
>   p_usize = (sector_t )tmp___1;
> #line 3639
27599,27613c29756,29797
< #line 3060
<   tmp___6 = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 3060
<   if (tmp___6 != 0) {
< #line 3061
<     tmp___1 = drbd_get_max_capacity(mdev->ldev);
< #line 3061
<     warn_if_differ_considerably(mdev, "lower level device sizes", p_size, tmp___1);
< #line 3063
<     warn_if_differ_considerably(mdev, "user requested size", p_usize, (sector_t )(mdev->ldev)->dc.disk_size);
< #line 3068
<     if ((unsigned int )*((unsigned short *)mdev + 1138UL) == 144U) {
< #line 3069
<       __x = (unsigned long )(mdev->ldev)->dc.disk_size;
< #line 3069
---
> #line 3641
>   tmp___10 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 3641
>   if (tmp___10 != 0) {
> #line 3642
>     rcu_read_lock___2();
> #line 3643
>     _________p1 = *((struct disk_conf * volatile  *)(& (mdev->ldev)->disk_conf));
> #line 3643
>     tmp___2 = debug_lockdep_rcu_enabled();
> #line 3643
>     if (tmp___2 != 0 && ! __warned) {
> #line 3643
>       tmp___3 = rcu_read_lock_held();
> #line 3643
>       if (tmp___3 == 0 && 1) {
> #line 3643
>         __warned = 1;
> #line 3643
>         lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>                                3643, "suspicious rcu_dereference_check() usage");
>       } else {
> 
>       }
>     } else {
> 
>     }
> #line 3643
>     my_usize = (sector_t )_________p1->disk_size;
> #line 3644
>     rcu_read_unlock___2();
> #line 3646
>     tmp___4 = drbd_get_max_capacity(mdev->ldev);
> #line 3646
>     warn_if_differ_considerably(mdev, "lower level device sizes", p_size, tmp___4);
> #line 3648
>     warn_if_differ_considerably(mdev, "user requested size", p_usize, my_usize);
> #line 3653
>     if ((unsigned int )*((unsigned short *)mdev + 374UL) == 144U) {
> #line 3654
>       __x = my_usize;
> #line 3654
27615c29799
< #line 3069
---
> #line 3654
27617c29801
< #line 3069
---
> #line 3654
27619c29803
< #line 3069
---
> #line 3654
27621c29805
< #line 3069
---
> #line 3654
27623,27624c29807,29808
< #line 3069
<           tmp___2 = _min1 < _min2 ? _min1 : _min2;
---
> #line 3654
>           tmp___5 = _min1 < _min2 ? _min1 : _min2;
27626,27627c29810,29811
< #line 3069
<           tmp___2 = __x;
---
> #line 3654
>           tmp___5 = __x;
27629,27630c29813,29814
< #line 3069
<         tmp___3 = tmp___2;
---
> #line 3654
>         tmp___6 = tmp___5;
27632,27633c29816,29817
< #line 3069
<         tmp___3 = __y;
---
> #line 3654
>         tmp___6 = __y;
27635,27636c29819,29820
< #line 3069
<       p_usize = tmp___3;
---
> #line 3654
>       p_usize = tmp___6;
27640,27648c29824,29845
< #line 3072
<     my_usize = (sector_t )(mdev->ldev)->dc.disk_size;
< #line 3074
<     if ((mdev->ldev)->dc.disk_size != (unsigned long long )p_usize) {
< #line 3075
<       (mdev->ldev)->dc.disk_size = (__u64 )p_usize;
< #line 3076
<       _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Peer sets u_size to %lu sectors\n",
<                 (unsigned long )(mdev->ldev)->dc.disk_size);
---
> #line 3658
>     tmp___7 = drbd_new_dev_size(mdev, mdev->ldev, p_usize, 0);
> #line 3658
>     tmp___8 = drbd_get_capacity(mdev->this_bdev);
> #line 3658
>     if ((tmp___7 < tmp___8 && (int )mdev->state.ldv_49522.disk > 4) && (int )mdev->state.ldv_49522.conn <= 9) {
> #line 3662
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "The peer\'s disk size is too small!\n");
> #line 3663
>       val.i = 0U;
> #line 3663
>       val.ldv_40024.conn = 1U;
> #line 3663
>       mask.i = 0U;
> #line 3663
>       mask.ldv_40024.conn = 31U;
> #line 3663
>       conn_request_state(mdev->tconn, mask, val, CS_HARD);
> #line 3664
>       put_ldev(mdev);
> #line 3665
>       return (-5);
27652,27675c29849,29888
< #line 3082
<     tmp___4 = drbd_new_dev_size(mdev, mdev->ldev, 0);
< #line 3082
<     tmp___5 = drbd_get_capacity(mdev->this_bdev);
< #line 3082
<     if ((tmp___4 < tmp___5 && (int )mdev->state.ldv_39979.disk > 4) && (int )mdev->state.ldv_39979.conn <= 9) {
< #line 3086
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "The peer\'s disk size is too small!\n");
< #line 3087
<       val___0.i = 0U;
< #line 3087
<       val___0.ldv_39979.conn = 1U;
< #line 3087
<       mask___0.i = 0U;
< #line 3087
<       mask___0.ldv_39979.conn = 31U;
< #line 3087
<       drbd_force_state(mdev, mask___0, val___0);
< #line 3088
<       (mdev->ldev)->dc.disk_size = (__u64 )my_usize;
< #line 3089
<       put_ldev(mdev);
< #line 3090
<       return (0);
---
> #line 3668
>     if (my_usize != p_usize) {
> #line 3669
>       new_disk_conf = 0;
> #line 3671
>       tmp___9 = kzalloc(344UL, 208U);
> #line 3671
>       new_disk_conf = (struct disk_conf *)tmp___9;
> #line 3672
>       if ((unsigned long )new_disk_conf == (unsigned long )((struct disk_conf *)0)) {
> #line 3673
>         dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Allocation of new disk_conf failed\n");
> #line 3674
>         put_ldev(mdev);
> #line 3675
>         return (-12);
>       } else {
> 
>       }
> #line 3678
>       ldv_mutex_lock_115(& (mdev->tconn)->conf_update);
> #line 3679
>       old_disk_conf = (mdev->ldev)->disk_conf;
> #line 3680
>       *new_disk_conf = *old_disk_conf;
> #line 3681
>       new_disk_conf->disk_size = (__u64 )p_usize;
> #line 3683
>       __asm__  volatile   ("": : : "memory");
> #line 3683
>       (mdev->ldev)->disk_conf = new_disk_conf;
> #line 3684
>       ldv_mutex_unlock_116(& (mdev->tconn)->conf_update);
> #line 3685
>       synchronize_rcu();
> #line 3686
>       kfree((void const   *)old_disk_conf);
> #line 3688
>       _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Peer sets u_size to %lu sectors\n",
>                 my_usize);
27679c29892
< #line 3092
---
> #line 3692
27684,27692c29897,29905
< #line 3095
<   tmp___7 = __fswab16((int )p->dds_flags);
< #line 3095
<   ddsf = (enum dds_flags )tmp___7;
< #line 3096
<   tmp___8 = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 3096
<   if (tmp___8 != 0) {
< #line 3097
---
> #line 3695
>   tmp___11 = __fswab16((int )p->dds_flags);
> #line 3695
>   ddsf = (enum dds_flags )tmp___11;
> #line 3696
>   tmp___12 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 3696
>   if (tmp___12 != 0) {
> #line 3697
27694c29907
< #line 3098
---
> #line 3698
27696c29909
< #line 3099
---
> #line 3699
27698,27699c29911,29912
< #line 3100
<       return (0);
---
> #line 3700
>       return (-5);
27703c29916
< #line 3101
---
> #line 3701
27706c29919
< #line 3104
---
> #line 3704
27709,27713c29922,29926
< #line 3107
<   tmp___9 = __fswab32(p->max_bio_size);
< #line 3107
<   mdev->peer_max_bio_size = tmp___9;
< #line 3108
---
> #line 3707
>   tmp___13 = __fswab32(p->max_bio_size);
> #line 3707
>   mdev->peer_max_bio_size = tmp___13;
> #line 3708
27715,27723c29928,29936
< #line 3110
<   tmp___11 = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 3110
<   if (tmp___11 != 0) {
< #line 3111
<     tmp___10 = drbd_get_capacity((mdev->ldev)->backing_bdev);
< #line 3111
<     if ((mdev->ldev)->known_size != tmp___10) {
< #line 3112
---
> #line 3710
>   tmp___15 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 3710
>   if (tmp___15 != 0) {
> #line 3711
>     tmp___14 = drbd_get_capacity((mdev->ldev)->backing_bdev);
> #line 3711
>     if ((mdev->ldev)->known_size != tmp___14) {
> #line 3712
27725c29938
< #line 3113
---
> #line 3713
27730c29943
< #line 3116
---
> #line 3716
27735,27743c29948,29956
< #line 3119
<   if ((int )mdev->state.ldv_39979.conn > 9) {
< #line 3120
<     tmp___12 = __fswab64(p->c_size);
< #line 3120
<     tmp___13 = drbd_get_capacity(mdev->this_bdev);
< #line 3120
<     if (tmp___12 != (unsigned long long )tmp___13 || ldsc != 0) {
< #line 3124
---
> #line 3719
>   if ((int )mdev->state.ldv_49522.conn > 9) {
> #line 3720
>     tmp___16 = __fswab64(p->c_size);
> #line 3720
>     tmp___17 = drbd_get_capacity(mdev->this_bdev);
> #line 3720
>     if (tmp___16 != (unsigned long long )tmp___17 || ldsc != 0) {
> #line 3724
27748,27754c29961,29967
< #line 3126
<     tmp___14 = drbd_test_and_clear_flag(mdev, RESIZE_PENDING);
< #line 3126
<     if (tmp___14 != 0 || ((int )dd == 2 && (unsigned int )*((unsigned short *)mdev + 1138UL) == 160U)) {
< #line 3128
<       if ((int )mdev->state.ldv_39979.pdsk > 3 && (int )mdev->state.ldv_39979.disk > 3) {
< #line 3130
---
> #line 3726
>     tmp___18 = test_and_clear_bit(16, (unsigned long volatile   *)(& mdev->flags));
> #line 3726
>     if (tmp___18 != 0 || ((int )dd == 2 && (unsigned int )*((unsigned short *)mdev + 374UL) == 160U)) {
> #line 3728
>       if ((int )mdev->state.ldv_49522.pdsk > 3 && (int )mdev->state.ldv_49522.disk > 3) {
> #line 3730
27756c29969
< #line 3131
---
> #line 3731
27759c29972
< #line 3133
---
> #line 3733
27763,27764c29976,29977
< #line 3135
<         drbd_set_flag(mdev, RESYNC_AFTER_NEG);
---
> #line 3735
>         set_bit(15U, (unsigned long volatile   *)(& mdev->flags));
27772,27773c29985,29986
< #line 3139
<   return (1);
---
> #line 3739
>   return (0);
27776,27777c29989,29990
< #line 3142 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int receive_uuids(struct drbd_conf *mdev , enum drbd_packets cmd , unsigned int data_size ) 
---
> #line 3742 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int receive_uuids(struct drbd_tconn *tconn , struct packet_info *pi ) 
27778a29992
>   struct drbd_conf *mdev ;
27783,27784c29997,29999
<   void *tmp ;
<   __u64 tmp___0 ;
---
>   int tmp ;
>   void *tmp___0 ;
>   __u64 tmp___1 ;
27789d30003
<   int tmp___1 ;
27791,27794c30005
<   wait_queue_t __wait ;
<   struct task_struct *tmp___3 ;
<   int tmp___4 ;
<   int tmp___5 ;
---
>   int tmp___3 ;
27797,27799c30008,30010
< #line 3144
<   p = & mdev->data.rbuf.uuids;
< #line 3146
---
> #line 3745
>   p = (struct p_uuids *)pi->data;
> #line 3747
27801,27805c30012,30027
< #line 3148
<   tmp = kmalloc(48UL, 16U);
< #line 3148
<   p_uuid = (u64 *)tmp;
< #line 3150
---
> #line 3749
>   mdev = vnr_to_mdev(tconn, (int )pi->vnr);
> #line 3750
>   if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
> #line 3751
>     tmp = config_unknown_volume(tconn, pi);
> #line 3751
>     return (tmp);
>   } else {
> 
>   }
> #line 3753
>   tmp___0 = kmalloc(48UL, 16U);
> #line 3753
>   p_uuid = (u64 *)tmp___0;
> #line 3755
27807,27814c30029,30036
< #line 3150
<   goto ldv_52906;
<   ldv_52905: 
< #line 3151
<   tmp___0 = __fswab64(p->uuid[i]);
< #line 3151
<   *(p_uuid + (unsigned long )i) = tmp___0;
< #line 3150
---
> #line 3755
>   goto ldv_53778;
>   ldv_53777: 
> #line 3756
>   tmp___1 = __fswab64(p->uuid[i]);
> #line 3756
>   *(p_uuid + (unsigned long )i) = tmp___1;
> #line 3755
27816,27817c30038,30039
<   ldv_52906: ;
< #line 3150
---
>   ldv_53778: ;
> #line 3755
27819,27820c30041,30042
< #line 3151
<     goto ldv_52905;
---
> #line 3756
>     goto ldv_53777;
27824c30046
< #line 3153
---
> #line 3758
27826c30048
< #line 3154
---
> #line 3759
27828,27830c30050,30052
< #line 3156
<   if ((((int )mdev->state.ldv_39979.conn <= 9 && (int )mdev->state.ldv_39979.disk <= 3) && (unsigned int )*((unsigned char *)mdev + 2276UL) == 1U) && ((mdev->ed_uuid ^ *p_uuid) & 0xfffffffffffffffeULL) != 0ULL) {
< #line 3160
---
> #line 3761
>   if ((((int )mdev->state.ldv_49522.conn <= 9 && (int )mdev->state.ldv_49522.disk <= 3) && (unsigned int )*((unsigned char *)mdev + 748UL) == 1U) && ((mdev->ed_uuid ^ *p_uuid) & 0xfffffffffffffffeULL) != 0ULL) {
> #line 3765
27833c30055
< #line 3162
---
> #line 3767
27835,27837c30057,30059
< #line 3162
<     val.ldv_39979.conn = 1U;
< #line 3162
---
> #line 3767
>     val.ldv_40024.conn = 1U;
> #line 3767
27839,27844c30061,30066
< #line 3162
<     mask.ldv_39979.conn = 31U;
< #line 3162
<     drbd_force_state(mdev, mask, val);
< #line 3163
<     return (0);
---
> #line 3767
>     mask.ldv_40024.conn = 31U;
> #line 3767
>     conn_request_state(mdev->tconn, mask, val, CS_HARD);
> #line 3768
>     return (-5);
27848,27854c30070,30076
< #line 3166
<   tmp___1 = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 3166
<   if (tmp___1 != 0) {
< #line 3167
<     skip_initial_sync = (((unsigned int )*((unsigned short *)mdev + 1138UL) == 160U && mdev->agreed_pro_version > 89) && (mdev->ldev)->md.uuid[0] == 4ULL) && (*(p_uuid + 5UL) & 8ULL) != 0ULL;
< #line 3172
---
> #line 3771
>   tmp___2 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 3771
>   if (tmp___2 != 0) {
> #line 3772
>     skip_initial_sync = (((unsigned int )*((unsigned short *)mdev + 374UL) == 160U && (mdev->tconn)->agreed_pro_version > 89) && (mdev->ldev)->md.uuid[0] == 4ULL) && (*(p_uuid + 5UL) & 8ULL) != 0ULL;
> #line 3777
27856c30078
< #line 3173
---
> #line 3778
27858c30080
< #line 3174
---
> #line 3779
27861c30083
< #line 3177
---
> #line 3782
27863c30085
< #line 3178
---
> #line 3783
27865,27871c30087,30093
< #line 3179
<       __ns.i = mdev->state.i;
< #line 3179
<       __ns.ldv_39979.disk = 8U;
< #line 3179
<       __ns.ldv_39979.pdsk = 8U;
< #line 3179
---
> #line 3784
>       __ns = drbd_read_state(mdev);
> #line 3784
>       __ns.ldv_40024.disk = 8U;
> #line 3784
>       __ns.ldv_40024.pdsk = 8U;
> #line 3784
27873c30095
< #line 3181
---
> #line 3786
27875c30097
< #line 3182
---
> #line 3787
27880c30102
< #line 3184
---
> #line 3789
27883,27885c30105,30107
< #line 3185
<   if ((int )mdev->state.ldv_39979.disk <= 3 && (unsigned int )*((unsigned char *)mdev + 2276UL) == 1U) {
< #line 3189
---
> #line 3790
>   if ((int )mdev->state.ldv_49522.disk <= 3 && (unsigned int )*((unsigned char *)mdev + 748UL) == 1U) {
> #line 3794
27890,27936c30112,30121
< #line 3196
<   tmp___2 = drbd_test_flag(mdev, CLUSTER_ST_CHANGE);
< #line 3196
<   if (tmp___2 == 0) {
< #line 3196
<     goto ldv_52915;
<   } else {
< 
<   }
< #line 3196
<   tmp___3 = get_current();
< #line 3196
<   __wait.flags = 0U;
< #line 3196
<   __wait.private = (void *)tmp___3;
< #line 3196
<   __wait.func = & autoremove_wake_function;
< #line 3196
<   __wait.task_list.next = & __wait.task_list;
< #line 3196
<   __wait.task_list.prev = & __wait.task_list;
<   ldv_52918: 
< #line 3196
<   prepare_to_wait(& mdev->misc_wait, & __wait, 2);
< #line 3196
<   tmp___4 = drbd_test_flag(mdev, CLUSTER_ST_CHANGE);
< #line 3196
<   if (tmp___4 == 0) {
< #line 3196
<     goto ldv_52917;
<   } else {
< 
<   }
< #line 3196
<   schedule();
< #line 3196
<   goto ldv_52918;
<   ldv_52917: 
< #line 3196
<   finish_wait(& mdev->misc_wait, & __wait);
<   ldv_52915: ;
< #line 3197
<   if ((int )mdev->state.ldv_39979.conn > 9 && (int )mdev->state.ldv_39979.disk <= 3) {
< #line 3198
<     tmp___5 = drbd_set_ed_uuid(mdev, *p_uuid);
< #line 3198
<     updated_uuids = tmp___5 | updated_uuids;
---
> #line 3801
>   ldv_mutex_lock_117(mdev->state_mutex);
> #line 3802
>   ldv_mutex_unlock_118(mdev->state_mutex);
> #line 3803
>   if ((int )mdev->state.ldv_49522.conn > 9 && (int )mdev->state.ldv_49522.disk <= 3) {
> #line 3804
>     tmp___3 = drbd_set_ed_uuid(mdev, *p_uuid);
> #line 3804
>     updated_uuids = tmp___3 | updated_uuids;
27940c30125
< #line 3200
---
> #line 3806
27942c30127
< #line 3201
---
> #line 3807
27947,27948c30132,30133
< #line 3203
<   return (1);
---
> #line 3809
>   return (0);
27951c30136
< #line 3210 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3816 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
27958c30143
< #line 3214
---
> #line 3820
27960c30145
< #line 3214
---
> #line 3820
27962c30147
< #line 3214
---
> #line 3820
27964c30149
< #line 3214
---
> #line 3820
27966c30151
< #line 3214
---
> #line 3820
27968c30153
< #line 3214
---
> #line 3820
27970c30155
< #line 3214
---
> #line 3820
27972c30157
< #line 3214
---
> #line 3820
27974c30159
< #line 3214
---
> #line 3820
27976,27978c30161,30163
< #line 3214
<   c_tab[9] = 0;
< #line 3214
---
> #line 3820
>   c_tab[9] = C_WF_REPORT_PARAMS;
> #line 3820
27980c30165
< #line 3214
---
> #line 3820
27982c30167
< #line 3214
---
> #line 3820
27984c30169
< #line 3214
---
> #line 3820
27986c30171
< #line 3214
---
> #line 3820
27988c30173
< #line 3214
---
> #line 3820
27990c30175
< #line 3214
---
> #line 3820
27992c30177
< #line 3214
---
> #line 3820
27994c30179
< #line 3214
---
> #line 3820
27996c30181
< #line 3214
---
> #line 3820
27998c30183
< #line 3214
---
> #line 3820
28000c30185
< #line 3214
---
> #line 3820
28002c30187
< #line 3214
---
> #line 3820
28004c30189
< #line 3214
---
> #line 3820
28006c30191
< #line 3214
---
> #line 3820
28008c30193
< #line 3214
---
> #line 3820
28010c30195
< #line 3214
---
> #line 3820
28012c30197
< #line 3214
---
> #line 3820
28014c30199
< #line 3214
---
> #line 3820
28016c30201
< #line 3214
---
> #line 3820
28018c30203
< #line 3214
---
> #line 3820
28020c30205
< #line 3214
---
> #line 3820
28022c30207
< #line 3224
---
> #line 3831
28024,28036c30209,30221
< #line 3226
<   ms.ldv_39979.conn = (unsigned char )c_tab[(int )ps.ldv_39979.conn];
< #line 3227
<   ms.ldv_39979.peer = ps.ldv_39979.role;
< #line 3228
<   ms.ldv_39979.role = ps.ldv_39979.peer;
< #line 3229
<   ms.ldv_39979.pdsk = ps.ldv_39979.disk;
< #line 3230
<   ms.ldv_39979.disk = ps.ldv_39979.pdsk;
< #line 3231
<   ms.ldv_39979.peer_isp = (unsigned char )((int )ps.ldv_39979.aftr_isp | (int )ps.ldv_39979.user_isp);
< #line 3233
---
> #line 3833
>   ms.ldv_40024.conn = (unsigned char )c_tab[(int )ps.ldv_40024.conn];
> #line 3834
>   ms.ldv_40024.peer = ps.ldv_40024.role;
> #line 3835
>   ms.ldv_40024.role = ps.ldv_40024.peer;
> #line 3836
>   ms.ldv_40024.pdsk = ps.ldv_40024.disk;
> #line 3837
>   ms.ldv_40024.disk = ps.ldv_40024.pdsk;
> #line 3838
>   ms.ldv_40024.peer_isp = (unsigned char )((int )ps.ldv_40024.aftr_isp | (int )ps.ldv_40024.user_isp);
> #line 3840
28040,28041c30225,30226
< #line 3236 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int receive_req_state(struct drbd_conf *mdev , enum drbd_packets cmd , unsigned int data_size ) 
---
> #line 3843 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int receive_req_state(struct drbd_tconn *tconn , struct packet_info *pi ) 
28042a30228
>   struct drbd_conf *mdev ;
28053,28055c30239,30250
< #line 3238
<   p = & mdev->data.rbuf.req_state;
< #line 3242
---
> #line 3846
>   p = (struct p_req_state *)pi->data;
> #line 3850
>   mdev = vnr_to_mdev(tconn, (int )pi->vnr);
> #line 3851
>   if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
> #line 3852
>     return (-5);
>   } else {
> 
>   }
> #line 3854
28057c30252
< #line 3242
---
> #line 3854
28059c30254
< #line 3243
---
> #line 3855
28061c30256
< #line 3243
---
> #line 3855
28063,28065c30258,30260
< #line 3245
<   tmp___1 = drbd_test_flag(mdev, DISCARD_CONCURRENT);
< #line 3245
---
> #line 3857
>   tmp___1 = constant_test_bit(1U, (unsigned long const volatile   *)(& (mdev->tconn)->flags));
> #line 3857
28067,28069c30262,30264
< #line 3245
<     tmp___2 = drbd_test_flag(mdev, CLUSTER_ST_CHANGE);
< #line 3245
---
> #line 3857
>     tmp___2 = ldv_mutex_is_locked_119(mdev->state_mutex);
> #line 3857
28071c30266
< #line 3247
---
> #line 3859
28073,28074c30268,30269
< #line 3248
<       return (1);
---
> #line 3860
>       return (0);
28081c30276
< #line 3251
---
> #line 3863
28083c30278
< #line 3252
---
> #line 3864
28085c30280
< #line 3254
---
> #line 3866
28087c30282
< #line 3256
---
> #line 3867
28089c30284
< #line 3257
---
> #line 3869
28091,28092c30286,30340
< #line 3259
<   return (1);
---
> #line 3871
>   return (0);
> }
> }
> #line 3874 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int receive_req_conn_state(struct drbd_tconn *tconn , struct packet_info *pi ) 
> { 
>   struct p_req_state *p ;
>   union drbd_state mask ;
>   union drbd_state val ;
>   enum drbd_state_rv rv ;
>   __u32 tmp ;
>   __u32 tmp___0 ;
>   int tmp___1 ;
>   int tmp___2 ;
> 
>   {
> #line 3876
>   p = (struct p_req_state *)pi->data;
> #line 3880
>   tmp = __fswab32(p->mask);
> #line 3880
>   mask.i = tmp;
> #line 3881
>   tmp___0 = __fswab32(p->val);
> #line 3881
>   val.i = tmp___0;
> #line 3883
>   tmp___1 = constant_test_bit(1U, (unsigned long const volatile   *)(& tconn->flags));
> #line 3883
>   if (tmp___1 != 0) {
> #line 3883
>     tmp___2 = ldv_mutex_is_locked_120(& tconn->cstate_mutex);
> #line 3883
>     if (tmp___2 != 0) {
> #line 3885
>       conn_send_sr_reply(tconn, SS_CONCURRENT_ST_CHG);
> #line 3886
>       return (0);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 3889
>   mask = convert_state(mask);
> #line 3890
>   val = convert_state(val);
> #line 3892
>   rv = conn_request_state(tconn, mask, val, 2066);
> #line 3893
>   conn_send_sr_reply(tconn, rv);
> #line 3895
>   return (0);
28095,28096c30343,30344
< #line 3262 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int receive_state(struct drbd_conf *mdev , enum drbd_packets cmd , unsigned int data_size ) 
---
> #line 3898 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int receive_state(struct drbd_tconn *tconn , struct packet_info *pi ) 
28097a30346
>   struct drbd_conf *mdev ;
28105,28107c30354,30357
<   __u32 tmp ;
<   char const   *tmp___0 ;
<   unsigned long tmp___1 ;
---
>   int tmp ;
>   __u32 tmp___0 ;
>   char const   *tmp___1 ;
>   unsigned long tmp___2 ;
28109,28110c30359,30360
<   int tmp___2 ;
<   enum drbd_conns tmp___3 ;
---
>   int tmp___3 ;
>   enum drbd_conns tmp___4 ;
28113c30363
<   int tmp___4 ;
---
>   int tmp___5 ;
28116c30366,30367
<   int tmp___5 ;
---
>   int tmp___6 ;
>   union drbd_state tmp___7 ;
28119,28121c30370,30372
<   int tmp___6 ;
<   int tmp___7 ;
<   enum drbd_state_rv tmp___8 ;
---
>   int tmp___8 ;
>   int tmp___9 ;
>   enum drbd_state_rv tmp___10 ;
28126,28134c30377,30396
< #line 3264
<   p = & mdev->data.rbuf.state;
< #line 3270
<   tmp = __fswab32(p->state);
< #line 3270
<   peer_state.i = tmp;
< #line 3272
<   real_peer_disk = (enum drbd_disk_state )peer_state.ldv_39979.disk;
< #line 3273
---
> #line 3901
>   p = (struct p_state *)pi->data;
> #line 3907
>   mdev = vnr_to_mdev(tconn, (int )pi->vnr);
> #line 3908
>   if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
> #line 3909
>     tmp = config_unknown_volume(tconn, pi);
> #line 3909
>     return (tmp);
>   } else {
> 
>   }
> #line 3911
>   tmp___0 = __fswab32(p->state);
> #line 3911
>   peer_state.i = tmp___0;
> #line 3913
>   real_peer_disk = (enum drbd_disk_state )peer_state.ldv_40024.disk;
> #line 3914
28136c30398
< #line 3274
---
> #line 3915
28138,28140c30400,30402
< #line 3275
<     tmp___0 = drbd_disk_str(real_peer_disk);
< #line 3275
---
> #line 3916
>     tmp___1 = drbd_disk_str(real_peer_disk);
> #line 3916
28142c30404
<               tmp___0);
---
>               tmp___1);
28146,28147c30408,30409
< #line 3278
<   spin_lock_irq(& mdev->req_lock);
---
> #line 3919
>   spin_lock_irq(& (mdev->tconn)->req_lock);
28149,28151c30411,30413
< #line 3280
<   ns = mdev->state;
< #line 3280
---
> #line 3921
>   ns = drbd_read_state(mdev);
> #line 3921
28153,28158c30415,30420
< #line 3281
<   spin_unlock_irq(& mdev->req_lock);
< #line 3286
<   if ((int )os.ldv_39979.conn <= 7) {
< #line 3287
<     return (0);
---
> #line 3922
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 3927
>   if ((int )os.ldv_40024.conn <= 7) {
> #line 3928
>     return (-104);
28162,28166c30424,30428
< #line 3295
<   if ((((*((unsigned int *)(& os) + 0UL) == 32768U || *((unsigned int *)(& os) + 0UL) == 57344U) && (unsigned int )real_peer_disk == 8U) && (int )os.ldv_39979.conn > 10) && (unsigned int )*((unsigned char *)(& os) + 1UL) == 16U) {
< #line 3304
<     if ((int )peer_state.ldv_39979.conn > 10 && (int )peer_state.ldv_39979.conn <= 15) {
< #line 3306
---
> #line 3936
>   if ((((*((unsigned int *)(& os) + 0UL) == 32768U || *((unsigned int *)(& os) + 0UL) == 57344U) && (unsigned int )real_peer_disk == 8U) && (int )os.ldv_40024.conn > 10) && (unsigned int )*((unsigned char *)(& os) + 1UL) == 16U) {
> #line 3945
>     if ((int )peer_state.ldv_40024.conn > 10 && (int )peer_state.ldv_40024.conn <= 15) {
> #line 3947
28169,28175c30431,30437
< #line 3311
<     if ((int )os.ldv_39979.conn > 15 && (unsigned int )*((unsigned short *)(& peer_state) + 0UL) == 160U) {
< #line 3313
<       tmp___1 = drbd_bm_total_weight(mdev);
< #line 3313
<       if (tmp___1 <= mdev->rs_failed) {
< #line 3314
---
> #line 3952
>     if ((int )os.ldv_40024.conn > 15 && (unsigned int )*((unsigned short *)(& peer_state) + 0UL) == 160U) {
> #line 3954
>       tmp___2 = drbd_bm_total_weight(mdev);
> #line 3954
>       if (tmp___2 <= mdev->rs_failed) {
> #line 3955
28180,28181c30442,30443
< #line 3315
<       return (1);
---
> #line 3956
>       return (0);
28188c30450
< #line 3320
---
> #line 3961
28190,28192c30452,30454
< #line 3322
<     ov_oos_print(mdev);
< #line 3323
---
> #line 3963
>     ov_out_of_sync_print(mdev);
> #line 3964
28194,28195c30456,30457
< #line 3324
<     return (1);
---
> #line 3965
>     return (0);
28199,28201c30461,30463
< #line 3332
<   if (((*((unsigned int *)(& os) + 0UL) == 65536U && (unsigned int )real_peer_disk == 4U) && (unsigned int )*((unsigned short *)(& os) + 0UL) == 160U) && (int )peer_state.ldv_39979.conn > 16) {
< #line 3334
---
> #line 3973
>   if (((*((unsigned int *)(& os) + 0UL) == 65536U && (unsigned int )real_peer_disk == 4U) && (unsigned int )*((unsigned short *)(& os) + 0UL) == 160U) && (int )peer_state.ldv_40024.conn > 16) {
> #line 3975
28206c30468
< #line 3336
---
> #line 3977
28208,28209c30470,30471
< #line 3337
<     ns.ldv_39979.conn = 10U;
---
> #line 3978
>     ns.ldv_40024.conn = 10U;
28213c30475
< #line 3339
---
> #line 3980
28215,28216c30477,30478
< #line 3340
<     ns.ldv_39979.conn = 23U;
---
> #line 3981
>     ns.ldv_40024.conn = 23U;
28220,28228c30482,30490
< #line 3342
<   if ((unsigned long )mdev->p_uuid != (unsigned long )((u64 *)0) && (int )peer_state.ldv_39979.disk > 2) {
< #line 3342
<     tmp___5 = _get_ldev_if_state(mdev, D_NEGOTIATING);
< #line 3342
<     if (tmp___5 != 0) {
< #line 3347
<       cr = (int )os.ldv_39979.conn <= 9;
< #line 3350
---
> #line 3983
>   if ((unsigned long )mdev->p_uuid != (unsigned long )((u64 *)0) && (int )peer_state.ldv_40024.disk > 2) {
> #line 3983
>     tmp___6 = _get_ldev_if_state(mdev, D_NEGOTIATING);
> #line 3983
>     if (tmp___6 != 0) {
> #line 3988
>       cr = (int )os.ldv_40024.conn <= 9;
> #line 3991
28230,28236c30492,30498
< #line 3355
<       tmp___2 = drbd_test_flag(mdev, CONSIDER_RESYNC);
< #line 3355
<       cr = tmp___2 | cr;
< #line 3358
<       cr = ((unsigned int )*((unsigned short *)(& os) + 0UL) == 160U && ((int )peer_state.ldv_39979.conn > 10 && (int )peer_state.ldv_39979.conn <= 14)) | cr;
< #line 3362
---
> #line 3996
>       tmp___3 = constant_test_bit(6U, (unsigned long const volatile   *)(& mdev->flags));
> #line 3996
>       cr = tmp___3 | cr;
> #line 3999
>       cr = ((unsigned int )*((unsigned short *)(& os) + 0UL) == 160U && ((int )peer_state.ldv_40024.conn > 10 && (int )peer_state.ldv_40024.conn <= 14)) | cr;
> #line 4003
28238,28239c30500,30501
< #line 3363
<         tmp___3 = drbd_sync_handshake(mdev, (enum drbd_role )peer_state.ldv_39979.role,
---
> #line 4004
>         tmp___4 = drbd_sync_handshake(mdev, (enum drbd_role )peer_state.ldv_40024.role,
28241,28242c30503,30504
< #line 3363
<         ns.ldv_39979.conn = (unsigned char )tmp___3;
---
> #line 4004
>         ns.ldv_40024.conn = (unsigned char )tmp___4;
28246c30508
< #line 3365
---
> #line 4006
28248c30510
< #line 3366
---
> #line 4007
28250,28254c30512,30516
< #line 3367
<         ns.ldv_39979.conn = 10U;
< #line 3368
<         if ((unsigned int )*((unsigned char *)mdev + 2277UL) == 6U) {
< #line 3369
---
> #line 4008
>         ns.ldv_40024.conn = 10U;
> #line 4009
>         if ((unsigned int )*((unsigned char *)mdev + 749UL) == 6U) {
> #line 4010
28256,28258c30518,30520
< #line 3369
<           val.ldv_39979.disk = 2U;
< #line 3369
---
> #line 4010
>           val.ldv_40024.disk = 2U;
> #line 4010
28260,28262c30522,30524
< #line 3369
<           mask.ldv_39979.disk = 15U;
< #line 3369
---
> #line 4010
>           mask.ldv_40024.disk = 15U;
> #line 4010
28265c30527
< #line 3370
---
> #line 4011
28267c30529
< #line 3371
---
> #line 4012
28269,28271c30531,30533
< #line 3372
<           peer_state.ldv_39979.disk = 0U;
< #line 3373
---
> #line 4013
>           peer_state.ldv_40024.disk = 0U;
> #line 4014
28274,28279c30536,30541
< #line 3375
<           tmp___4 = drbd_test_and_clear_flag(mdev, CONN_DRY_RUN);
< #line 3375
<           if (tmp___4 != 0) {
< #line 3376
<             return (0);
---
> #line 4016
>           tmp___5 = test_and_clear_bit(8, (unsigned long volatile   *)(& (mdev->tconn)->flags));
> #line 4016
>           if (tmp___5 != 0) {
> #line 4017
>             return (-5);
28283c30545
< #line 3377
---
> #line 4018
28285c30547
< #line 3377
---
> #line 4018
28287,28288c30549,30550
<                     (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<                     3377);
---
>                     (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>                     4018);
28292c30554
< #line 3378
---
> #line 4019
28294,28296c30556,30558
< #line 3378
<           val___0.ldv_39979.conn = 1U;
< #line 3378
---
> #line 4019
>           val___0.ldv_40024.conn = 1U;
> #line 4019
28298,28303c30560,30565
< #line 3378
<           mask___0.ldv_39979.conn = 31U;
< #line 3378
<           drbd_force_state(mdev, mask___0, val___0);
< #line 3379
<           return (0);
---
> #line 4019
>           mask___0.ldv_40024.conn = 31U;
> #line 4019
>           conn_request_state(mdev->tconn, mask___0, val___0, CS_HARD);
> #line 4020
>           return (-5);
28314,28318c30576,30582
< #line 3384
<   spin_lock_irq(& mdev->req_lock);
< #line 3385
<   if (mdev->state.i != os.i) {
< #line 3386
---
> #line 4025
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 4026
>   tmp___7 = drbd_read_state(mdev);
> #line 4026
>   if (os.i != tmp___7.i) {
> #line 4027
28323,28331c30587,30595
< #line 3387
<   drbd_clear_flag(mdev, CONSIDER_RESYNC);
< #line 3388
<   ns.ldv_39979.peer = peer_state.ldv_39979.role;
< #line 3389
<   ns.ldv_39979.pdsk = (unsigned char )real_peer_disk;
< #line 3390
<   ns.ldv_39979.peer_isp = (unsigned char )((int )peer_state.ldv_39979.aftr_isp | (int )peer_state.ldv_39979.user_isp);
< #line 3391
---
> #line 4028
>   clear_bit(6, (unsigned long volatile   *)(& mdev->flags));
> #line 4029
>   ns.ldv_40024.peer = peer_state.ldv_40024.role;
> #line 4030
>   ns.ldv_40024.pdsk = (unsigned char )real_peer_disk;
> #line 4031
>   ns.ldv_40024.peer_isp = (unsigned char )((int )peer_state.ldv_40024.aftr_isp | (int )peer_state.ldv_40024.user_isp);
> #line 4032
28333,28334c30597,30598
< #line 3392
<     ns.ldv_39979.disk = mdev->new_state_tmp.ldv_39979.disk;
---
> #line 4033
>     ns.ldv_40024.disk = mdev->new_state_tmp.ldv_40024.disk;
28338,28340c30602,30604
< #line 3393
<   cs_flags = (enum chg_state_flags )(((int )os.ldv_39979.conn > 9 || (int )ns.ldv_39979.conn <= 9) + 2);
< #line 3394
---
> #line 4034
>   cs_flags = (enum chg_state_flags )(((int )os.ldv_40024.conn > 9 || (int )ns.ldv_40024.conn <= 9) + 2);
> #line 4035
28342,28346c30606,30610
< #line 3394
<     tmp___6 = is_susp(ns);
< #line 3394
<     if (tmp___6 != 0) {
< #line 3394
---
> #line 4035
>     tmp___8 = drbd_suspended(mdev);
> #line 4035
>     if (tmp___8 != 0) {
> #line 4035
28348,28356c30612,30620
< #line 3394
<         if ((int )os.ldv_39979.conn <= 9) {
< #line 3394
<           tmp___7 = drbd_test_flag(mdev, NEW_CUR_UUID);
< #line 3394
<           if (tmp___7 != 0) {
< #line 3398
<             spin_unlock_irq(& mdev->req_lock);
< #line 3399
---
> #line 4035
>         if ((int )os.ldv_40024.conn <= 9) {
> #line 4035
>           tmp___9 = constant_test_bit(17U, (unsigned long const volatile   *)(& mdev->flags));
> #line 4035
>           if (tmp___9 != 0) {
> #line 4039
>             spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 4040
28358,28360c30622,30624
< #line 3400
<             tl_clear(mdev);
< #line 3401
---
> #line 4041
>             tl_clear(mdev->tconn);
> #line 4042
28362,28364c30626,30628
< #line 3402
<             drbd_clear_flag(mdev, NEW_CUR_UUID);
< #line 3403
---
> #line 4043
>             clear_bit(17, (unsigned long volatile   *)(& mdev->flags));
> #line 4044
28366,28370c30630,30634
< #line 3403
<             val___1.ldv_39979.conn = 6U;
< #line 3403
<             val___1.ldv_39979.susp = 0U;
< #line 3403
---
> #line 4044
>             val___1.ldv_40024.conn = 6U;
> #line 4044
>             val___1.ldv_40024.susp = 0U;
> #line 4044
28372,28379c30636,30643
< #line 3403
<             mask___1.ldv_39979.conn = 31U;
< #line 3403
<             mask___1.ldv_39979.susp = 1U;
< #line 3403
<             drbd_force_state(mdev, mask___1, val___1);
< #line 3404
<             return (0);
---
> #line 4044
>             mask___1.ldv_40024.conn = 31U;
> #line 4044
>             mask___1.ldv_40024.susp = 1U;
> #line 4044
>             conn_request_state(mdev->tconn, mask___1, val___1, CS_HARD);
> #line 4045
>             return (-5);
28395,28403c30659,30667
< #line 3406
<   tmp___8 = _drbd_set_state(mdev, ns, cs_flags, 0);
< #line 3406
<   rv = (int )tmp___8;
< #line 3407
<   ns = mdev->state;
< #line 3408
<   spin_unlock_irq(& mdev->req_lock);
< #line 3410
---
> #line 4047
>   tmp___10 = _drbd_set_state(mdev, ns, cs_flags, 0);
> #line 4047
>   rv = (int )tmp___10;
> #line 4048
>   ns = drbd_read_state(mdev);
> #line 4049
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 4051
28405c30669
< #line 3411
---
> #line 4052
28407,28409c30671,30673
< #line 3411
<     val___2.ldv_39979.conn = 1U;
< #line 3411
---
> #line 4052
>     val___2.ldv_40024.conn = 1U;
> #line 4052
28411,28416c30675,30680
< #line 3411
<     mask___2.ldv_39979.conn = 31U;
< #line 3411
<     drbd_force_state(mdev, mask___2, val___2);
< #line 3412
<     return (0);
---
> #line 4052
>     mask___2.ldv_40024.conn = 31U;
> #line 4052
>     conn_request_state(mdev->tconn, mask___2, val___2, CS_HARD);
> #line 4053
>     return (-5);
28420,28424c30684,30688
< #line 3415
<   if ((int )os.ldv_39979.conn > 9) {
< #line 3416
<     if (((int )ns.ldv_39979.conn > 10 && (int )peer_state.ldv_39979.conn <= 10) && (unsigned int )*((unsigned char *)(& peer_state) + 1UL) != 6U) {
< #line 3421
---
> #line 4056
>   if ((int )os.ldv_40024.conn > 9) {
> #line 4057
>     if (((int )ns.ldv_40024.conn > 10 && (int )peer_state.ldv_40024.conn <= 10) && (unsigned int )*((unsigned char *)(& peer_state) + 1UL) != 6U) {
> #line 4062
28426c30690
< #line 3422
---
> #line 4063
28434,28436c30698,30700
< #line 3426
<   (mdev->net_conf)->want_lose = 0U;
< #line 3428
---
> #line 4067
>   clear_bit(21, (unsigned long volatile   *)(& mdev->flags));
> #line 4069
28438,28439c30702,30703
< #line 3430
<   return (1);
---
> #line 4071
>   return (0);
28442,28443c30706,30707
< #line 3433 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int receive_sync_uuid(struct drbd_conf *mdev , enum drbd_packets cmd , unsigned int data_size ) 
---
> #line 4074 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int receive_sync_uuid(struct drbd_tconn *tconn , struct packet_info *pi ) 
28444a30709
>   struct drbd_conf *mdev ;
28452,28457c30717,30724
< #line 3435
<   p = & mdev->data.rbuf.rs_uuid;
< #line 3437
<   if ((((unsigned int )*((unsigned short *)mdev + 1138UL) == 240U || (unsigned int )*((unsigned short *)mdev + 1138UL) == 368U) || (int )mdev->state.ldv_39979.conn <= 9) || (int )mdev->state.ldv_39979.disk <= 2) {
< #line 3437
<     goto ldv_52969;
---
> #line 4077
>   p = (struct p_rs_uuid *)pi->data;
> #line 4079
>   mdev = vnr_to_mdev(tconn, (int )pi->vnr);
> #line 4080
>   if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
> #line 4081
>     return (-5);
28461c30728,30735
< #line 3437
---
> #line 4083
>   if ((((unsigned int )*((unsigned short *)mdev + 374UL) == 240U || (unsigned int )*((unsigned short *)mdev + 374UL) == 368U) || (int )mdev->state.ldv_49522.conn <= 9) || (int )mdev->state.ldv_49522.disk <= 2) {
> #line 4083
>     goto ldv_53845;
>   } else {
> 
>   }
> #line 4083
28463c30737
< #line 3437
---
> #line 4083
28465c30739
< #line 3437
---
> #line 4083
28467c30741
< #line 3437
---
> #line 4083
28469c30743
< #line 3437
---
> #line 4083
28471c30745
< #line 3437
---
> #line 4083
28473,28474c30747,30748
<   ldv_52972: 
< #line 3437
---
>   ldv_53848: 
> #line 4083
28476,28479c30750,30753
< #line 3437
<   if ((((unsigned int )*((unsigned short *)mdev + 1138UL) == 240U || (unsigned int )*((unsigned short *)mdev + 1138UL) == 368U) || (int )mdev->state.ldv_39979.conn <= 9) || (int )mdev->state.ldv_39979.disk <= 2) {
< #line 3437
<     goto ldv_52971;
---
> #line 4083
>   if ((((unsigned int )*((unsigned short *)mdev + 374UL) == 240U || (unsigned int )*((unsigned short *)mdev + 374UL) == 368U) || (int )mdev->state.ldv_49522.conn <= 9) || (int )mdev->state.ldv_49522.disk <= 2) {
> #line 4083
>     goto ldv_53847;
28483c30757
< #line 3437
---
> #line 4083
28485,28488c30759,30762
< #line 3437
<   goto ldv_52972;
<   ldv_52971: 
< #line 3437
---
> #line 4083
>   goto ldv_53848;
>   ldv_53847: 
> #line 4083
28490,28491c30764,30765
<   ldv_52969: 
< #line 3447
---
>   ldv_53845: 
> #line 4093
28493c30767
< #line 3447
---
> #line 4093
28495c30769
< #line 3448
---
> #line 4094
28497c30771
< #line 3448
---
> #line 4094
28499c30773
< #line 3449
---
> #line 4095
28501c30775
< #line 3451
---
> #line 4097
28503c30777
< #line 3452
---
> #line 4098
28505c30779
< #line 3454
---
> #line 4100
28508c30782
< #line 3456
---
> #line 4102
28511,28512c30785,30786
< #line 3458
<   return (1);
---
> #line 4104
>   return (0);
28515,28517c30789,30791
< #line 3468 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int receive_bitmap_plain(struct drbd_conf *mdev , unsigned int data_size ,
<                                 unsigned long *buffer , struct bm_xfer_ctx *c ) 
---
> #line 4114 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int receive_bitmap_plain(struct drbd_conf *mdev , unsigned int size , unsigned long *p ,
>                                 struct bm_xfer_ctx *c ) 
28518a30793,30794
>   unsigned int data_size ;
>   unsigned int tmp ;
28526,28528c30802,30808
< #line 3471
<   __min1 = 511UL;
< #line 3471
---
> #line 4117
>   tmp = drbd_header_size(mdev->tconn);
> #line 4117
>   data_size = 4096U - tmp;
> #line 4119
>   __min1 = (unsigned long )(data_size / 8U);
> #line 4119
28530c30810
< #line 3471
---
> #line 4119
28532c30812
< #line 3472
---
> #line 4121
28534,28539c30814,30819
< #line 3475
<   if (want != data_size) {
< #line 3476
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "%s:want (%u) != data_size (%u)\n",
<             "receive_bitmap_plain", want, data_size);
< #line 3477
---
> #line 4124
>   if (want != size) {
> #line 4125
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "%s:want (%u) != size (%u)\n",
>             "receive_bitmap_plain", want, size);
> #line 4126
28544c30824
< #line 3479
---
> #line 4128
28546c30826
< #line 3480
---
> #line 4129
28551,28562c30831,30835
< #line 3481
<   err = drbd_recv(mdev, (void *)buffer, (size_t )want);
< #line 3482
<   if ((unsigned int )err != want) {
< #line 3483
<     if (err >= 0) {
< #line 3484
<       err = -5;
<     } else {
< 
<     }
< #line 3485
---
> #line 4130
>   err = drbd_recv_all(mdev->tconn, (void *)p, (size_t )want);
> #line 4131
>   if (err != 0) {
> #line 4132
28567,28569c30840,30842
< #line 3488
<   drbd_bm_merge_lel(mdev, c->word_offset, (size_t )num_words, buffer);
< #line 3490
---
> #line 4134
>   drbd_bm_merge_lel(mdev, c->word_offset, (size_t )num_words, p);
> #line 4136
28571c30844
< #line 3491
---
> #line 4137
28573c30846
< #line 3492
---
> #line 4138
28575c30848
< #line 3493
---
> #line 4139
28580c30853
< #line 3495
---
> #line 4141
28584,28585c30857,30889
< #line 3505 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int recv_bm_rle_bits(struct drbd_conf *mdev , struct p_compressed_bm *p , struct bm_xfer_ctx *c ) 
---
> #line 4144 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static enum drbd_bitmap_code dcbp_get_code(struct p_compressed_bm *p ) 
> { 
> 
> 
>   {
> #line 4146
>   return ((enum drbd_bitmap_code )((int )p->encoding & 15));
> }
> }
> #line 4149 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int dcbp_get_start(struct p_compressed_bm *p ) 
> { 
> 
> 
>   {
> #line 4151
>   return ((int )((signed char )p->encoding) < 0);
> }
> }
> #line 4154 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int dcbp_get_pad_bits(struct p_compressed_bm *p ) 
> { 
> 
> 
>   {
> #line 4156
>   return (((int )p->encoding >> 4) & 7);
> }
> }
> #line 4166 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int recv_bm_rle_bits(struct drbd_conf *mdev , struct p_compressed_bm *p , struct bm_xfer_ctx *c ,
>                             unsigned int len ) 
28593,28594d30896
<   int len ;
<   __u16 tmp___0 ;
28596c30898
<   int tmp___1 ;
---
>   int tmp___0 ;
28599c30901
<   int tmp___2 ;
---
>   int tmp___1 ;
28602c30904
< #line 3513
---
> #line 4175
28604,28616c30906,30914
< #line 3515
<   tmp___0 = __fswab16((int )p->head.length);
< #line 3515
<   len = (int )((unsigned int )tmp___0 - 1U);
< #line 3516
<   tmp___1 = DCBP_get_start(p);
< #line 3516
<   toggle = tmp___1;
< #line 3520
<   tmp___2 = DCBP_get_pad_bits(p);
< #line 3520
<   bitstream_init(& bs, (void *)(& p->code), (size_t )len, (unsigned int )tmp___2);
< #line 3522
---
> #line 4177
>   tmp___0 = dcbp_get_start(p);
> #line 4177
>   toggle = tmp___0;
> #line 4181
>   tmp___1 = dcbp_get_pad_bits(p);
> #line 4181
>   bitstream_init(& bs, (void *)(& p->code), (size_t )len, (unsigned int )tmp___1);
> #line 4183
28618c30916
< #line 3523
---
> #line 4184
28620c30918
< #line 3524
---
> #line 4185
28625c30923
< #line 3526
---
> #line 4187
28627,28630c30925,30928
< #line 3526
<   goto ldv_53002;
<   ldv_53001: 
< #line 3527
---
> #line 4187
>   goto ldv_53888;
>   ldv_53887: 
> #line 4188
28632c30930
< #line 3528
---
> #line 4189
28634c30932
< #line 3529
---
> #line 4190
28639c30937
< #line 3531
---
> #line 4192
28641c30939
< #line 3532
---
> #line 4193
28643c30941
< #line 3533
---
> #line 4194
28645c30943
< #line 3534
---
> #line 4195
28648c30946
< #line 3535
---
> #line 4196
28653c30951
< #line 3537
---
> #line 4198
28658c30956
< #line 3540
---
> #line 4201
28660c30958
< #line 3541
---
> #line 4202
28664c30962
< #line 3545
---
> #line 4206
28669c30967
< #line 3547
---
> #line 4208
28671c30969
< #line 3548
---
> #line 4209
28673c30971
< #line 3550
---
> #line 4211
28675c30973
< #line 3551
---
> #line 4212
28677c30975
< #line 3552
---
> #line 4213
28682c30980
< #line 3553
---
> #line 4214
28684c30982
< #line 3554
---
> #line 4215
28686c30984
< #line 3526
---
> #line 4187
28688c30986
< #line 3526
---
> #line 4187
28690,28691c30988,30989
<   ldv_53002: ;
< #line 3526
---
>   ldv_53888: ;
> #line 4187
28693,28694c30991,30992
< #line 3527
<     goto ldv_53001;
---
> #line 4188
>     goto ldv_53887;
28698c30996
< #line 3557
---
> #line 4218
28700c30998
< #line 3558
---
> #line 4219
28702c31000
< #line 3560
---
> #line 4221
28706,28707c31004,31006
< #line 3570 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int decode_bitmap_c(struct drbd_conf *mdev , struct p_compressed_bm *p , struct bm_xfer_ctx *c ) 
---
> #line 4231 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int decode_bitmap_c(struct drbd_conf *mdev , struct p_compressed_bm *p , struct bm_xfer_ctx *c ,
>                            unsigned int len ) 
28715,28717c31014,31016
< #line 3574
<   tmp___0 = DCBP_get_code(p);
< #line 3574
---
> #line 4236
>   tmp___0 = dcbp_get_code(p);
> #line 4236
28719,28721c31018,31020
< #line 3575
<     tmp = recv_bm_rle_bits(mdev, p, c);
< #line 3575
---
> #line 4237
>     tmp = recv_bm_rle_bits(mdev, p, c, len - 1U);
> #line 4237
28726c31025
< #line 3581
---
> #line 4243
28729c31028
< #line 3582
---
> #line 4244
28731,28733c31030,31032
< #line 3582
<   val.ldv_39979.conn = 6U;
< #line 3582
---
> #line 4244
>   val.ldv_40024.conn = 6U;
> #line 4244
28735,28739c31034,31038
< #line 3582
<   mask.ldv_39979.conn = 31U;
< #line 3582
<   drbd_force_state(mdev, mask, val);
< #line 3583
---
> #line 4244
>   mask.ldv_40024.conn = 31U;
> #line 4244
>   conn_request_state(mdev->tconn, mask, val, CS_HARD);
> #line 4245
28743c31042
< #line 3586 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4248 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
28745a31045,31047
>   unsigned int header_size ;
>   unsigned int tmp ;
>   unsigned int data_size ;
28751,28753c31053,31061
< #line 3590
<   plain = (unsigned int )(((c->bm_words + 510UL) / 511UL + c->bm_words) + 1UL) * 8U;
< #line 3593
---
> #line 4252
>   tmp = drbd_header_size(mdev->tconn);
> #line 4252
>   header_size = tmp;
> #line 4253
>   data_size = 4096U - header_size;
> #line 4254
>   plain = (unsigned int )(((c->bm_words + (unsigned long )data_size) - 1UL) / (unsigned long )data_size + 1UL) * header_size + (unsigned int )c->bm_words * 8U;
> #line 4257
28755c31063
< #line 3597
---
> #line 4261
28757c31065
< #line 3598
---
> #line 4262
28762c31070
< #line 3601
---
> #line 4265
28764c31072
< #line 3602
---
> #line 4266
28769c31077
< #line 3605
---
> #line 4269
28771c31079
< #line 3608
---
> #line 4272
28773c31081
< #line 3609
---
> #line 4273
28778c31086
< #line 3611
---
> #line 4275
28780c31088
< #line 3612
---
> #line 4276
28784c31092
< #line 3613
---
> #line 4277
28788,28789c31096,31097
< #line 3628 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int receive_bitmap(struct drbd_conf *mdev , enum drbd_packets cmd , unsigned int data_size ) 
---
> #line 4292 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int receive_bitmap(struct drbd_tconn *tconn , struct packet_info *pi ) 
28790a31099
>   struct drbd_conf *mdev ;
28792d31100
<   void *buffer ;
28794,28796d31101
<   int ok ;
<   struct p_header80 *h ;
<   unsigned long tmp ;
28798,28799c31103,31104
<   unsigned long tmp___0 ;
<   size_t tmp___1 ;
---
>   unsigned long tmp ;
>   size_t tmp___0 ;
28801,28804c31106,31107
<   size_t __len ;
<   void *__ret ;
<   int tmp___2 ;
<   int tmp___3 ;
---
>   unsigned int tmp___1 ;
>   unsigned int tmp___2 ;
28806d31108
<   int tmp___4 ;
28809c31111
<   char const   *tmp___5 ;
---
>   char const   *tmp___3 ;
28812,28828c31114,31119
< #line 3633
<   ok = 0;
< #line 3634
<   h = & mdev->data.rbuf.header.h80;
< #line 3636
<   drbd_bm_lock(mdev, (char *)"receive bitmap", BM_LOCKED_SET_ALLOWED);
< #line 3642
<   tmp = __get_free_pages(16U, 0U);
< #line 3642
<   buffer = (void *)tmp;
< #line 3643
<   if ((unsigned long )buffer == (unsigned long )((void *)0)) {
< #line 3644
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "failed to allocate one page buffer in %s\n",
<             "receive_bitmap");
< #line 3645
<     goto out;
---
> #line 4298
>   mdev = vnr_to_mdev(tconn, (int )pi->vnr);
> #line 4299
>   if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
> #line 4300
>     return (-5);
28832,28840c31123,31133
< #line 3648
<   tmp___0 = drbd_bm_bits(mdev);
< #line 3648
<   tmp___1 = drbd_bm_words(mdev);
< #line 3648
<   __constr_expr_0.bm_bits = tmp___0;
< #line 3648
<   __constr_expr_0.bm_words = tmp___1;
< #line 3648
---
> #line 4302
>   drbd_bm_lock(mdev, (char *)"receive bitmap", BM_LOCKED_SET_ALLOWED);
> #line 4306
>   tmp = drbd_bm_bits(mdev);
> #line 4306
>   tmp___0 = drbd_bm_words(mdev);
> #line 4306
>   __constr_expr_0.bm_bits = tmp;
> #line 4306
>   __constr_expr_0.bm_words = tmp___0;
> #line 4306
28842c31135
< #line 3648
---
> #line 4306
28844c31137
< #line 3648
---
> #line 4306
28846c31139
< #line 3648
---
> #line 4306
28848c31141
< #line 3648
---
> #line 4306
28850c31143
< #line 3648
---
> #line 4306
28852c31145
< #line 3648
---
> #line 4306
28854,28858c31147,31151
<   ldv_53039: ;
< #line 3654
<   if ((unsigned int )cmd == 4U) {
< #line 3655
<     err = receive_bitmap_plain(mdev, data_size, (unsigned long *)buffer, & c);
---
>   ldv_53921: ;
> #line 4312
>   if ((unsigned int )pi->cmd == 4U) {
> #line 4313
>     err = receive_bitmap_plain(mdev, pi->size, (unsigned long *)pi->data, & c);
28860,28864c31153,31161
< #line 3656
<   if ((unsigned int )cmd == 36U) {
< #line 3661
<     if (data_size > 4088U) {
< #line 3662
---
> #line 4314
>   if ((unsigned int )pi->cmd == 36U) {
> #line 4317
>     p = (struct p_compressed_bm *)pi->data;
> #line 4319
>     tmp___1 = drbd_header_size(tconn);
> #line 4319
>     if (pi->size > 4096U - tmp___1) {
> #line 4320
28866c31163,31165
< #line 3663
---
> #line 4321
>       err = -5;
> #line 4322
28871,28887c31170,31177
< #line 3666
<     p = (struct p_compressed_bm *)buffer;
< #line 3667
<     __len = 8UL;
< #line 3667
<     if (__len > 63UL) {
< #line 3667
<       __ret = __memcpy((void *)p, (void const   *)h, __len);
<     } else {
< #line 3667
<       __ret = __builtin_memcpy((void *)p, (void const   *)h, __len);
<     }
< #line 3668
<     tmp___2 = drbd_recv(mdev, (void *)(& p->head.payload), (size_t )data_size);
< #line 3668
<     if ((unsigned int )tmp___2 != data_size) {
< #line 3669
---
> #line 4324
>     if (pi->size <= 1U) {
> #line 4325
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ReportCBitmap packet too small (l:%u)\n",
>               pi->size);
> #line 4326
>       err = -5;
> #line 4327
28892,28897c31182,31186
< #line 3670
<     if (data_size <= 1U) {
< #line 3671
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ReportCBitmap packet too small (l:%u)\n",
<               data_size);
< #line 3672
---
> #line 4329
>     err = drbd_recv_all(mdev->tconn, (void *)p, (size_t )pi->size);
> #line 4330
>     if (err != 0) {
> #line 4331
28902,28903c31191,31192
< #line 3674
<     err = decode_bitmap_c(mdev, p, & c);
---
> #line 4332
>     err = decode_bitmap_c(mdev, p, & c, pi->size);
28905c31194
< #line 3676
---
> #line 4334
28907,28908c31196,31199
<              (unsigned int )cmd);
< #line 3677
---
>              (unsigned int )pi->cmd);
> #line 4335
>     err = -5;
> #line 4336
28911,28915c31202,31208
< #line 3680
<   c.packets[(unsigned int )cmd == 4U] = c.packets[(unsigned int )cmd == 4U] + 1U;
< #line 3681
<   c.bytes[(unsigned int )cmd == 4U] = (c.bytes[(unsigned int )cmd == 4U] + data_size) + 8U;
< #line 3683
---
> #line 4339
>   c.packets[(unsigned int )pi->cmd == 4U] = c.packets[(unsigned int )pi->cmd == 4U] + 1U;
> #line 4340
>   tmp___2 = drbd_header_size(tconn);
> #line 4340
>   c.bytes[(unsigned int )pi->cmd == 4U] = c.bytes[(unsigned int )pi->cmd == 4U] + (tmp___2 + pi->size);
> #line 4342
28917c31210
< #line 3684
---
> #line 4343
28919c31212
< #line 3685
---
> #line 4344
28924,28925c31217,31218
< #line 3686
<     goto ldv_53038;
---
> #line 4345
>     goto ldv_53920;
28929,28933c31222,31226
< #line 3688
<   tmp___3 = drbd_recv_header(mdev, & cmd, & data_size);
< #line 3688
<   if (tmp___3 == 0) {
< #line 3689
---
> #line 4347
>   err = drbd_recv_header(mdev->tconn, pi);
> #line 4348
>   if (err != 0) {
> #line 4349
28938,28941c31231,31234
< #line 3690
<   goto ldv_53039;
<   ldv_53038: 
< #line 3692
---
> #line 4350
>   goto ldv_53921;
>   ldv_53920: 
> #line 4352
28943,28951c31236,31242
< #line 3694
<   if ((unsigned int )*((unsigned short *)mdev + 1138UL) == 224U) {
< #line 3697
<     tmp___4 = drbd_send_bitmap(mdev);
< #line 3697
<     ok = tmp___4 == 0;
< #line 3698
<     if (ok == 0) {
< #line 3699
---
> #line 4354
>   if ((unsigned int )*((unsigned short *)mdev + 374UL) == 224U) {
> #line 4357
>     err = drbd_send_bitmap(mdev);
> #line 4358
>     if (err != 0) {
> #line 4359
28956c31247
< #line 3701
---
> #line 4361
28958,28960c31249,31251
< #line 3701
<     val.ldv_39979.conn = 15U;
< #line 3701
---
> #line 4361
>     val.ldv_40024.conn = 15U;
> #line 4361
28962,28964c31253,31255
< #line 3701
<     mask.ldv_39979.conn = 31U;
< #line 3701
---
> #line 4361
>     mask.ldv_40024.conn = 31U;
> #line 4361
28966c31257
< #line 3702
---
> #line 4362
28968c31259
< #line 3702
---
> #line 4362
28970,28971c31261,31262
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<               3702);
---
>               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>               4362);
28976,28980c31267,31271
< #line 3703
<   if ((unsigned int )*((unsigned short *)mdev + 1138UL) != 208U) {
< #line 3706
<     tmp___5 = drbd_conn_str((enum drbd_conns )mdev->state.ldv_39979.conn);
< #line 3706
---
> #line 4363
>   if ((unsigned int )*((unsigned short *)mdev + 374UL) != 208U) {
> #line 4366
>     tmp___3 = drbd_conn_str((enum drbd_conns )mdev->state.ldv_49522.conn);
> #line 4366
28982c31273
<               tmp___5);
---
>               tmp___3);
28986,28987c31277,31278
< #line 3710
<   ok = 1;
---
> #line 4369
>   err = 0;
28989c31280
< #line 3712
---
> #line 4372
28991,28993c31282,31284
< #line 3713
<   if (ok != 0 && (unsigned int )*((unsigned short *)mdev + 1138UL) == 208U) {
< #line 3714
---
> #line 4373
>   if (err == 0 && (unsigned int )*((unsigned short *)mdev + 374UL) == 208U) {
> #line 4374
28998,29001c31289,31290
< #line 3715
<   free_pages((unsigned long )buffer, 0U);
< #line 3716
<   return (ok);
---
> #line 4375
>   return (err);
29004,29005c31293,31294
< #line 3719 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int receive_skip(struct drbd_conf *mdev , enum drbd_packets cmd , unsigned int data_size ) 
---
> #line 4378 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int receive_skip(struct drbd_tconn *tconn , struct packet_info *pi ) 
29007,29013c31296
<   char sink[128U] ;
<   int size ;
<   int want ;
<   int r ;
<   int __min1 ;
<   int __min2 ;
<   int _b ;
---
>   int tmp ;
29016,29062c31299,31305
< #line 3725
<   dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "skipping unknown optional packet type %d, l: %d!\n",
<            (unsigned int )cmd, data_size);
< #line 3728
<   size = (int )data_size;
< #line 3729
<   goto ldv_53062;
<   ldv_53061: 
< #line 3730
<   __min1 = size;
< #line 3730
<   __min2 = 128;
< #line 3730
<   want = __min1 < __min2 ? __min1 : __min2;
< #line 3731
<   r = drbd_recv(mdev, (void *)(& sink), (size_t )want);
< #line 3732
<   _b = r <= 0;
< #line 3732
<   if (_b != 0) {
< #line 3732
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "receive_skip", (char *)"r <= 0", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             3732);
<   } else {
< 
<   }
< #line 3732
<   if (_b != 0) {
< #line 3732
<     goto ldv_53060;
<   } else {
< 
<   }
< #line 3733
<   size = size - r;
<   ldv_53062: ;
< #line 3729
<   if (size > 0) {
< #line 3730
<     goto ldv_53061;
<   } else {
< 
<   }
<   ldv_53060: ;
< #line 3735
<   return (size == 0);
---
> #line 4380
>   printk("\fd-con %s: skipping unknown optional packet type %d, l: %d!\n", tconn->name,
>          (unsigned int )pi->cmd, pi->size);
> #line 4383
>   tmp = ignore_remaining_packet(tconn, pi);
> #line 4383
>   return (tmp);
29065,29066c31308,31309
< #line 3738 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int receive_UnplugRemote(struct drbd_conf *mdev , enum drbd_packets cmd , unsigned int data_size ) 
---
> #line 4386 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int receive_UnplugRemote(struct drbd_tconn *tconn , struct packet_info *pi ) 
29071,29074c31314,31317
< #line 3742
<   drbd_tcp_quickack(mdev->data.socket);
< #line 3744
<   return (1);
---
> #line 4390
>   drbd_tcp_quickack(tconn->data.socket);
> #line 4392
>   return (0);
29077,29078c31320,31321
< #line 3747 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int receive_out_of_sync(struct drbd_conf *mdev , enum drbd_packets cmd , unsigned int data_size ) 
---
> #line 4395 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int receive_out_of_sync(struct drbd_tconn *tconn , struct packet_info *pi ) 
29079a31323
>   struct drbd_conf *mdev ;
29086,29089c31330,31342
< #line 3749
<   p = & mdev->data.rbuf.block_desc;
< #line 3751
<   switch ((int )mdev->state.ldv_39979.conn) {
---
> #line 4398
>   p = (struct p_block_desc *)pi->data;
> #line 4400
>   mdev = vnr_to_mdev(tconn, (int )pi->vnr);
> #line 4401
>   if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
> #line 4402
>     return (-5);
>   } else {
> 
>   }
> #line 4404
>   switch ((int )mdev->state.ldv_49522.conn) {
29093,29094c31346,31347
< #line 3755
<   goto ldv_53077;
---
> #line 4408
>   goto ldv_53944;
29096,29098c31349,31351
< #line 3757
<   tmp = drbd_conn_str((enum drbd_conns )mdev->state.ldv_39979.conn);
< #line 3757
---
> #line 4410
>   tmp = drbd_conn_str((enum drbd_conns )mdev->state.ldv_49522.conn);
> #line 4410
29102,29103c31355,31356
<   ldv_53077: 
< #line 3761
---
>   ldv_53944: 
> #line 4414
29105c31358
< #line 3761
---
> #line 4414
29107,29111c31360,31364
< #line 3761
<   __drbd_set_out_of_sync(mdev, (sector_t )tmp___1, (int )tmp___0, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<                          3761U);
< #line 3763
<   return (1);
---
> #line 4414
>   __drbd_set_out_of_sync(mdev, (sector_t )tmp___1, (int )tmp___0, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>                          4414U);
> #line 4416
>   return (0);
29114,29121c31367,31374
< #line 3774 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static struct data_cmd drbd_cmd_handler[43U]  = 
< #line 3774
<   {      {1, 32UL, & receive_Data}, 
<         {1, 32UL, & receive_DataReply}, 
<         {1, 32UL, & receive_RSDataReply}, 
<         {0, 16UL, & receive_Barrier}, 
<         {1, 8UL, & receive_bitmap}, 
---
> #line 4425 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static struct data_cmd drbd_cmd_handler[46U]  = 
> #line 4425
>   {      {1, 24UL, & receive_Data}, 
>         {1, 24UL, & receive_DataReply}, 
>         {1, 24UL, & receive_RSDataReply}, 
>         {0, 8UL, & receive_Barrier}, 
>         {1, 0UL, & receive_bitmap}, 
29124,29132c31377,31385
<         {0, 8UL, & receive_UnplugRemote}, 
<         {0, 32UL, & receive_DataRequest}, 
<         {0, 32UL, & receive_DataRequest}, 
<         {1, 8UL, & receive_SyncParam}, 
<         {1, 32UL, & receive_protocol}, 
<         {0, 56UL, & receive_uuids}, 
<         {0, 40UL, & receive_sizes}, 
<         {0, 12UL, & receive_state}, 
<         {0, 16UL, & receive_sync_uuid}, 
---
>         {0, 0UL, & receive_UnplugRemote}, 
>         {0, 24UL, & receive_DataRequest}, 
>         {0, 24UL, & receive_DataRequest}, 
>         {1, 0UL, & receive_SyncParam}, 
>         {1, 24UL, & receive_protocol}, 
>         {0, 48UL, & receive_uuids}, 
>         {0, 32UL, & receive_sizes}, 
>         {0, 4UL, & receive_state}, 
>         {0, 8UL, & receive_sync_uuid}, 
29135c31388
<         {0, 16UL, & receive_req_state}, 
---
>         {0, 8UL, & receive_req_state}, 
29147,29148c31400,31401
<         {0, 32UL, & receive_DataRequest}, 
<         {1, 32UL, & receive_DataRequest}, 
---
>         {0, 24UL, & receive_DataRequest}, 
>         {1, 24UL, & receive_DataRequest}, 
29150c31403
<         {1, 32UL, & receive_DataRequest}, 
---
>         {1, 24UL, & receive_DataRequest}, 
29152,29153c31405,31406
<         {1, 8UL, & receive_SyncParam}, 
<         {1, 8UL, & receive_bitmap}, 
---
>         {1, 0UL, & receive_SyncParam}, 
>         {1, 0UL, & receive_bitmap}, 
29156,29157c31409,31410
<         {0, 16UL, & receive_skip}, 
<         {0, 24UL, & receive_out_of_sync}, 
---
>         {0, 8UL, & receive_skip}, 
>         {0, 16UL, & receive_out_of_sync}, 
29159,29165c31412,31419
<         {0, 0UL, 0}};
< #line 3809 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static void drbdd(struct drbd_conf *mdev ) 
< { 
<   union p_header *header ;
<   unsigned int packet_size ;
<   enum drbd_packets cmd ;
---
>         {0, 8UL, & receive_req_conn_state}, 
>         {0, 0UL, 0}, 
>         {0, 0UL, 0}, 
>         {1, 24UL, & receive_protocol}};
> #line 4452 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static void drbdd(struct drbd_tconn *tconn ) 
> { 
>   struct packet_info pi ;
29167c31421,31422
<   int rv ;
---
>   int err ;
>   struct data_cmd *cmd ;
29169c31424
<   long tmp___0 ;
---
>   char const   *tmp___0 ;
29171,29177c31426,31429
<   char const   *tmp___2 ;
<   struct task_struct *tmp___3 ;
<   int tmp___4 ;
<   long tmp___5 ;
<   char const   *tmp___6 ;
<   long tmp___7 ;
<   enum drbd_thread_state tmp___8 ;
---
>   long tmp___2 ;
>   char const   *tmp___3 ;
>   char const   *tmp___4 ;
>   enum drbd_thread_state tmp___5 ;
29182,29193c31434,31443
< #line 3811
<   header = & mdev->data.rbuf.header;
< #line 3817
<   goto ldv_53098;
<   ldv_53097: 
< #line 3818
<   drbd_thread_current_set_cpu(mdev);
< #line 3819
<   tmp = drbd_recv_header(mdev, & cmd, & packet_size);
< #line 3819
<   if (tmp == 0) {
< #line 3820
---
> #line 4458
>   goto ldv_53964;
>   ldv_53963: 
> #line 4461
>   drbd_thread_current_set_cpu(& tconn->receiver);
> #line 4462
>   tmp = drbd_recv_header(tconn, & pi);
> #line 4462
>   if (tmp != 0) {
> #line 4463
29198,29205c31448,31460
< #line 3822
<   tmp___0 = __builtin_expect((unsigned int )cmd > 41U, 0L);
< #line 3822
<   if (tmp___0 != 0L) {
< #line 3823
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "unknown packet type %d, l: %d!\n",
<             (unsigned int )cmd, packet_size);
< #line 3824
---
> #line 4465
>   cmd = (struct data_cmd *)(& drbd_cmd_handler) + (unsigned long )pi.cmd;
> #line 4466
>   tmp___1 = __builtin_expect((unsigned int )pi.cmd > (unsigned int )P_PROTOCOL_UPDATE,
>                              0L);
> #line 4466
>   if (tmp___1 != 0L) {
> #line 4467
>     tmp___0 = cmdname(pi.cmd);
> #line 4467
>     printk("\vd-con %s: Unexpected data packet %s (0x%04x)", tconn->name, tmp___0,
>            (unsigned int )pi.cmd);
> #line 4469
29208,29211c31463,31465
< #line 3822
<     tmp___1 = __builtin_expect((unsigned long )drbd_cmd_handler[(unsigned int )cmd].function == (unsigned long )((int (*)(struct drbd_conf * ,
<                                                                                                                           enum drbd_packets  ,
<                                                                                                                           unsigned int  ))0),
---
> #line 4466
>     tmp___2 = __builtin_expect((unsigned long )cmd->fn == (unsigned long )((int (*)(struct drbd_tconn * ,
>                                                                                     struct packet_info * ))0),
29213,29218c31467,31474
< #line 3822
<     if (tmp___1 != 0L) {
< #line 3823
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "unknown packet type %d, l: %d!\n",
<               (unsigned int )cmd, packet_size);
< #line 3824
---
> #line 4466
>     if (tmp___2 != 0L) {
> #line 4467
>       tmp___0 = cmdname(pi.cmd);
> #line 4467
>       printk("\vd-con %s: Unexpected data packet %s (0x%04x)", tconn->name, tmp___0,
>              (unsigned int )pi.cmd);
> #line 4469
29224,29233c31480,31488
< #line 3827
<   shs = drbd_cmd_handler[(unsigned int )cmd].pkt_size - 8UL;
< #line 3828
<   if ((size_t )packet_size != shs && drbd_cmd_handler[(unsigned int )cmd].expect_payload == 0) {
< #line 3829
<     tmp___2 = cmdname(cmd);
< #line 3829
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "No payload expected %s l:%d\n",
<             tmp___2, packet_size);
< #line 3830
---
> #line 4472
>   shs = cmd->pkt_size;
> #line 4473
>   if ((size_t )pi.size > shs && cmd->expect_payload == 0) {
> #line 4474
>     tmp___3 = cmdname(pi.cmd);
> #line 4474
>     printk("\vd-con %s: No payload expected %s l:%d\n", tconn->name, tmp___3, pi.size);
> #line 4476
29238c31493
< #line 3833
---
> #line 4479
29240,29258c31495,31499
< #line 3834
<     rv = drbd_recv(mdev, (void *)(& header->h80.payload), shs);
< #line 3835
<     tmp___5 = __builtin_expect((size_t )rv != shs, 0L);
< #line 3835
<     if (tmp___5 != 0L) {
< #line 3836
<       tmp___3 = get_current();
< #line 3836
<       tmp___4 = signal_pending(tmp___3);
< #line 3836
<       if (tmp___4 == 0) {
< #line 3837
<         dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "short read while reading sub header: rv=%d\n",
<                  rv);
<       } else {
< 
<       }
< #line 3838
---
> #line 4480
>     err = drbd_recv_all_warn(tconn, pi.data, shs);
> #line 4481
>     if (err != 0) {
> #line 4482
29262a31504,31505
> #line 4483
>     pi.size = pi.size - (unsigned int )shs;
29266,29277c31509,31518
< #line 3842
<   rv = (*(drbd_cmd_handler[(unsigned int )cmd].function))(mdev, cmd, packet_size - (unsigned int )shs);
< #line 3844
<   tmp___7 = __builtin_expect(rv == 0, 0L);
< #line 3844
<   if (tmp___7 != 0L) {
< #line 3845
<     tmp___6 = cmdname(cmd);
< #line 3845
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "error receiving %s, l: %d!\n",
<             tmp___6, packet_size);
< #line 3847
---
> #line 4486
>   err = (*(cmd->fn))(tconn, & pi);
> #line 4487
>   if (err != 0) {
> #line 4488
>     tmp___4 = cmdname(pi.cmd);
> #line 4488
>     printk("\vd-con %s: error receiving %s, e: %d l: %d!\n", tconn->name, tmp___4,
>            err, pi.size);
> #line 4490
29282,29288c31523,31529
<   ldv_53098: 
< #line 3817
<   tmp___8 = get_t_state(& mdev->receiver);
< #line 3817
<   if ((unsigned int )tmp___8 == 1U) {
< #line 3818
<     goto ldv_53097;
---
>   ldv_53964: 
> #line 4458
>   tmp___5 = get_t_state(& tconn->receiver);
> #line 4458
>   if ((unsigned int )tmp___5 == 1U) {
> #line 4459
>     goto ldv_53963;
29293,29311c31534,31547
< #line 3851
<   if (0) {
<     err_out: 
< #line 3853
<     val.i = 0U;
< #line 3853
<     val.ldv_39979.conn = 6U;
< #line 3853
<     mask.i = 0U;
< #line 3853
<     mask.ldv_39979.conn = 31U;
< #line 3853
<     drbd_force_state(mdev, mask, val);
<   } else {
< 
<   }
< #line 3857
<   drbd_md_sync(mdev);
< #line 3858
---
> #line 4493
>   return;
>   err_out: 
> #line 4496
>   val.i = 0U;
> #line 4496
>   val.ldv_40024.conn = 6U;
> #line 4496
>   mask.i = 0U;
> #line 4496
>   mask.ldv_40024.conn = 31U;
> #line 4496
>   conn_request_state(tconn, mask, val, CS_HARD);
> #line 4498
29315,29316c31551,31552
< #line 3860 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< void drbd_flush_workqueue(struct drbd_conf *mdev ) 
---
> #line 4499 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> void conn_flush_workqueue(struct drbd_tconn *tconn ) 
29321c31557
< #line 3864
---
> #line 4503
29323c31559,31561
< #line 3865
---
> #line 4504
>   barr.w.ldv_49807.tconn = tconn;
> #line 4505
29325,29327c31563,31565
< #line 3866
<   drbd_queue_work(& mdev->data.work, & barr.w);
< #line 3867
---
> #line 4506
>   drbd_queue_work(& tconn->sender_work, & barr.w);
> #line 4507
29329c31567
< #line 3868
---
> #line 4508
29333,29334c31571,31572
< #line 3870 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< void drbd_free_tl_hash(struct drbd_conf *mdev ) 
---
> #line 4510 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static void conn_disconnect(struct drbd_tconn *tconn ) 
29336,29340c31574,31587
<   struct hlist_head *h ;
<   struct drbd_request *req ;
<   struct hlist_node *pos ;
<   struct hlist_node *n ;
<   struct hlist_node  const  *__mptr ;
---
>   struct drbd_conf *mdev ;
>   enum drbd_conns oc ;
>   int vnr ;
>   union drbd_state val ;
>   union drbd_state mask ;
>   void *tmp ;
>   void *tmp___0 ;
>   int tmp___1 ;
>   enum drbd_role tmp___2 ;
>   enum drbd_disk_state tmp___3 ;
>   union drbd_state val___0 ;
>   union drbd_state mask___0 ;
>   union drbd_state val___1 ;
>   union drbd_state mask___1 ;
29343,29349c31590,31592
< #line 3874
<   spin_lock_irq(& mdev->req_lock);
< #line 3876
<   if ((unsigned long )mdev->tl_hash == (unsigned long )((struct hlist_head *)0) || (unsigned int )*((unsigned short *)mdev + 1138UL) != 0U) {
< #line 3877
<     spin_unlock_irq(& mdev->req_lock);
< #line 3878
---
> #line 4516
>   if ((unsigned int )tconn->cstate == 0U) {
> #line 4517
29354,29363c31597,31642
< #line 3881
<   h = mdev->ee_hash;
< #line 3881
<   goto ldv_53113;
<   ldv_53112: ;
< #line 3882
<   if ((unsigned long )h->first != (unsigned long )((struct hlist_node *)0)) {
< #line 3883
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED ee_hash[%u].first == %p, expected NULL\n",
<             (int )(((long )h - (long )mdev->ee_hash) / 8L), h->first);
---
> #line 4524
>   val.i = 0U;
> #line 4524
>   val.ldv_40024.conn = 5U;
> #line 4524
>   mask.i = 0U;
> #line 4524
>   mask.ldv_40024.conn = 31U;
> #line 4524
>   conn_request_state(tconn, mask, val, CS_HARD);
> #line 4527
>   drbd_thread_stop(& tconn->asender);
> #line 4528
>   drbd_free_sock(tconn);
> #line 4530
>   rcu_read_lock___2();
> #line 4531
>   vnr = 0;
> #line 4531
>   tmp = idr_get_next(& tconn->volumes, & vnr);
> #line 4531
>   mdev = (struct drbd_conf *)tmp;
> #line 4531
>   goto ldv_53985;
>   ldv_53984: 
> #line 4532
>   kref_get(& mdev->kref);
> #line 4533
>   rcu_read_unlock___2();
> #line 4534
>   drbd_disconnected(mdev);
> #line 4535
>   kref_put(& mdev->kref, & drbd_minor_destroy);
> #line 4536
>   rcu_read_lock___2();
> #line 4531
>   vnr = vnr + 1;
> #line 4531
>   tmp___0 = idr_get_next(& tconn->volumes, & vnr);
> #line 4531
>   mdev = (struct drbd_conf *)tmp___0;
>   ldv_53985: ;
> #line 4531
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 4532
>     goto ldv_53984;
29367,29373c31646,31654
< #line 3881
<   h = h + 1;
<   ldv_53113: ;
< #line 3881
<   if ((unsigned long )(mdev->ee_hash + (unsigned long )mdev->ee_hash_s) > (unsigned long )h) {
< #line 3882
<     goto ldv_53112;
---
> #line 4538
>   rcu_read_unlock___2();
> #line 4540
>   tmp___1 = list_empty((struct list_head  const  *)(& (tconn->current_epoch)->list));
> #line 4540
>   if (tmp___1 == 0) {
> #line 4541
>     printk("\vd-con %s: ASSERTION FAILED: tconn->current_epoch->list not empty\n",
>            tconn->name);
29377,29417c31658,31673
< #line 3885
<   kfree((void const   *)mdev->ee_hash);
< #line 3886
<   mdev->ee_hash = 0;
< #line 3887
<   mdev->ee_hash_s = 0U;
< #line 3892
<   h = mdev->tl_hash;
< #line 3892
<   goto ldv_53126;
<   ldv_53125: 
< #line 3895
<   pos = h->first;
< #line 3895
<   goto ldv_53123;
<   ldv_53122: 
< #line 3896
<   hlist_del_init(& req->collision);
< #line 3897
<   hlist_add_fake(& req->collision);
< #line 3895
<   pos = n;
<   ldv_53123: ;
< #line 3895
<   if ((unsigned long )pos != (unsigned long )((struct hlist_node *)0)) {
< #line 3895
<     n = pos->next;
< #line 3895
<     if (1 != 0) {
< #line 3895
<       __mptr = (struct hlist_node  const  *)pos;
< #line 3895
<       req = (struct drbd_request *)__mptr + 0xffffffffffffffd8UL;
< #line 3895
<       if (1 != 0) {
< #line 3896
<         goto ldv_53122;
<       } else {
< #line 3898
<         goto ldv_53124;
<       }
---
> #line 4543
>   atomic_set(& (tconn->current_epoch)->epoch_size, 0);
> #line 4544
>   tconn->send.seen_any_write_yet = 0;
> #line 4546
>   printk("\016d-con %s: Connection closed\n", tconn->name);
> #line 4548
>   tmp___2 = conn_highest_role(tconn);
> #line 4548
>   if ((unsigned int )tmp___2 == 1U) {
> #line 4548
>     tmp___3 = conn_highest_pdsk(tconn);
> #line 4548
>     if ((unsigned int )tmp___3 > 5U) {
> #line 4549
>       conn_try_outdate_peer_async(tconn);
29419,29420c31675
< #line 3898
<       goto ldv_53124;
---
> 
29425,29432c31680,31695
<   ldv_53124: 
< #line 3892
<   h = h + 1;
<   ldv_53126: ;
< #line 3892
<   if ((unsigned long )(mdev->tl_hash + (unsigned long )mdev->tl_hash_s) > (unsigned long )h) {
< #line 3893
<     goto ldv_53125;
---
> #line 4551
>   spin_lock_irq(& tconn->req_lock);
> #line 4552
>   oc = tconn->cstate;
> #line 4553
>   if ((unsigned int )oc > 1U) {
> #line 4554
>     val___0.i = 0U;
> #line 4554
>     val___0.ldv_40024.conn = 2U;
> #line 4554
>     mask___0.i = 0U;
> #line 4554
>     mask___0.ldv_40024.conn = 31U;
> #line 4554
>     _conn_request_state(tconn, mask___0, val___0, CS_VERBOSE);
29436,29444c31699,31716
< #line 3901
<   kfree((void const   *)mdev->tl_hash);
< #line 3902
<   mdev->tl_hash = 0;
< #line 3903
<   mdev->tl_hash_s = 0U;
< #line 3904
<   spin_unlock_irq(& mdev->req_lock);
< #line 3905
---
> #line 4556
>   spin_unlock_irq(& tconn->req_lock);
> #line 4558
>   if ((unsigned int )oc == 1U) {
> #line 4559
>     val___1.i = 0U;
> #line 4559
>     val___1.ldv_40024.conn = 0U;
> #line 4559
>     mask___1.i = 0U;
> #line 4559
>     mask___1.ldv_40024.conn = 31U;
> #line 4559
>     conn_request_state(tconn, mask___1, val___1, 3);
>   } else {
> 
>   }
> #line 4561
29448,29449c31720,31721
< #line 3907 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static void drbd_disconnect(struct drbd_conf *mdev ) 
---
> #line 4562 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int drbd_disconnected(struct drbd_conf *mdev ) 
29451,29454d31722
<   enum drbd_fencing_p fp ;
<   union drbd_state os ;
<   union drbd_state ns ;
<   int rv ;
29456,29457d31723
<   union drbd_state val ;
<   union drbd_state mask ;
29460,29461d31725
<   enum drbd_state_rv tmp___1 ;
<   int tmp___2 ;
29463c31727,31729
<   struct task_struct *tmp___3 ;
---
>   struct task_struct *tmp___1 ;
>   int tmp___2 ;
>   int tmp___3 ;
29465,29466d31730
<   union drbd_state val___0 ;
<   union drbd_state mask___0 ;
29468,29469c31732
<   wait_queue_t __wait___0 ;
<   struct task_struct *tmp___6 ;
---
>   int tmp___6 ;
29473,29478d31735
<   int tmp___10 ;
<   int tmp___11 ;
<   int tmp___12 ;
<   int tmp___13 ;
<   int tmp___14 ;
<   int tmp___15 ;
29481,29506c31738,31740
< #line 3911
<   rv = 0;
< #line 3914
<   if ((unsigned int )*((unsigned short *)mdev + 1138UL) == 0U) {
< #line 3915
<     return;
<   } else {
< 
<   }
< #line 3922
<   val.i = 0U;
< #line 3922
<   val.ldv_39979.conn = 5U;
< #line 3922
<   mask.i = 0U;
< #line 3922
<   mask.ldv_39979.conn = 31U;
< #line 3922
<   drbd_force_state(mdev, mask, val);
< #line 3925
<   drbd_thread_stop(& mdev->asender);
< #line 3926
<   drbd_free_sock(mdev);
< #line 3929
<   spin_lock_irq(& mdev->req_lock);
< #line 3930
---
> #line 4567
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 4568
29508c31742
< #line 3931
---
> #line 4569
29510c31744
< #line 3932
---
> #line 4570
29512,29514c31746,31748
< #line 3933
<   spin_unlock_irq(& mdev->req_lock);
< #line 3945
---
> #line 4571
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 4583
29516c31750
< #line 3946
---
> #line 4584
29518c31752
< #line 3947
---
> #line 4585
29520c31754
< #line 3948
---
> #line 4586
29522c31756
< #line 3949
---
> #line 4587
29524c31758
< #line 3952
---
> #line 4589
29526c31760
< #line 3953
---
> #line 4590
29528c31762
< #line 3958
---
> #line 4595
29530,29532c31764,31770
< #line 3962
<   drbd_process_done_ee(mdev);
< #line 3964
---
> #line 4597
>   drbd_finish_peer_reqs(mdev);
> #line 4602
>   drbd_flush_workqueue(mdev);
> #line 4606
>   drbd_rs_cancel_all(mdev);
> #line 4608
29534c31772
< #line 3965
---
> #line 4609
29536,29538c31774,31776
< #line 3967
<   tmp = is_susp(mdev->state);
< #line 3967
---
> #line 4611
>   tmp = drbd_suspended(mdev);
> #line 4611
29540,29541c31778,31779
< #line 3968
<     tl_clear(mdev);
---
> #line 4612
>     tl_clear(mdev->tconn);
29545,29547c31783
< #line 3970
<   _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Connection closed\n");
< #line 3972
---
> #line 4614
29549,29558c31785,31790
< #line 3974
<   fp = FP_DONT_CARE;
< #line 3975
<   tmp___0 = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 3975
<   if (tmp___0 != 0) {
< #line 3976
<     fp = (enum drbd_fencing_p )(mdev->ldev)->dc.fencing;
< #line 3977
<     put_ldev(mdev);
---
> #line 4618
>   tmp___0 = constant_test_bit(9U, (unsigned long const volatile   *)(& mdev->flags));
> #line 4618
>   if (tmp___0 == 0) {
> #line 4618
>     goto ldv_53999;
29562,29565c31794,31814
< #line 3980
<   if (((unsigned int )*((unsigned char *)mdev + 2276UL) == 1U && (unsigned int )fp != 0U) && (int )mdev->state.ldv_39979.pdsk > 5) {
< #line 3981
<     drbd_try_outdate_peer_async(mdev);
---
> #line 4618
>   tmp___1 = get_current();
> #line 4618
>   __wait.flags = 0U;
> #line 4618
>   __wait.private = (void *)tmp___1;
> #line 4618
>   __wait.func = & autoremove_wake_function;
> #line 4618
>   __wait.task_list.next = & __wait.task_list;
> #line 4618
>   __wait.task_list.prev = & __wait.task_list;
>   ldv_54002: 
> #line 4618
>   prepare_to_wait(& mdev->misc_wait, & __wait, 2);
> #line 4618
>   tmp___2 = constant_test_bit(9U, (unsigned long const volatile   *)(& mdev->flags));
> #line 4618
>   if (tmp___2 == 0) {
> #line 4618
>     goto ldv_54001;
29569,29582c31818,31834
< #line 3983
<   spin_lock_irq(& mdev->req_lock);
< #line 3984
<   os = mdev->state;
< #line 3985
<   if ((int )os.ldv_39979.conn > 1) {
< #line 3987
<     ns = os;
< #line 3988
<     ns.ldv_39979.conn = 2U;
< #line 3989
<     tmp___1 = _drbd_set_state(mdev, ns, CS_VERBOSE, 0);
< #line 3989
<     rv = (int )tmp___1;
---
> #line 4618
>   schedule();
> #line 4618
>   goto ldv_54002;
>   ldv_54001: 
> #line 4618
>   finish_wait(& mdev->misc_wait, & __wait);
>   ldv_53999: 
> #line 4627
>   tmp___3 = drbd_free_peer_reqs(mdev, & mdev->net_ee);
> #line 4627
>   i = (unsigned int )tmp___3;
> #line 4628
>   if (i != 0U) {
> #line 4629
>     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "net_ee not empty, killed %u entries\n",
>               i);
29586,29648c31838,31846
< #line 3991
<   spin_unlock_irq(& mdev->req_lock);
< #line 3993
<   if ((unsigned int )*((unsigned short *)(& os) + 0UL) == 16U) {
< #line 3994
<     tmp___2 = atomic_read((atomic_t const   *)(& mdev->net_cnt));
< #line 3994
<     if (tmp___2 == 0) {
< #line 3994
<       goto ldv_53140;
<     } else {
< 
<     }
< #line 3994
<     tmp___3 = get_current();
< #line 3994
<     __wait.flags = 0U;
< #line 3994
<     __wait.private = (void *)tmp___3;
< #line 3994
<     __wait.func = & autoremove_wake_function;
< #line 3994
<     __wait.task_list.next = & __wait.task_list;
< #line 3994
<     __wait.task_list.prev = & __wait.task_list;
<     ldv_53143: 
< #line 3994
<     prepare_to_wait(& mdev->net_cnt_wait, & __wait, 2);
< #line 3994
<     tmp___4 = atomic_read((atomic_t const   *)(& mdev->net_cnt));
< #line 3994
<     if (tmp___4 == 0) {
< #line 3994
<       goto ldv_53142;
<     } else {
< 
<     }
< #line 3994
<     schedule();
< #line 3994
<     goto ldv_53143;
<     ldv_53142: 
< #line 3994
<     finish_wait(& mdev->net_cnt_wait, & __wait);
<     ldv_53140: 
< #line 3996
<     crypto_free_hash(mdev->cram_hmac_tfm);
< #line 3997
<     mdev->cram_hmac_tfm = 0;
< #line 3999
<     kfree((void const   *)mdev->net_conf);
< #line 4000
<     mdev->net_conf = 0;
< #line 4001
<     val___0.i = 0U;
< #line 4001
<     val___0.ldv_39979.conn = 0U;
< #line 4001
<     mask___0.i = 0U;
< #line 4001
<     mask___0.ldv_39979.conn = 31U;
< #line 4001
<     drbd_request_state(mdev, mask___0, val___0);
---
> #line 4630
>   tmp___4 = atomic_read((atomic_t const   *)(& mdev->pp_in_use_by_net));
> #line 4630
>   i = (unsigned int )tmp___4;
> #line 4631
>   if (i != 0U) {
> #line 4632
>     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "pp_in_use_by_net = %d, expected 0\n",
>               i);
29652,29721c31850,31854
< #line 4006
<   tmp___5 = drbd_test_flag(mdev, BITMAP_IO);
< #line 4006
<   if (tmp___5 == 0) {
< #line 4006
<     goto ldv_53148;
<   } else {
< 
<   }
< #line 4006
<   tmp___6 = get_current();
< #line 4006
<   __wait___0.flags = 0U;
< #line 4006
<   __wait___0.private = (void *)tmp___6;
< #line 4006
<   __wait___0.func = & autoremove_wake_function;
< #line 4006
<   __wait___0.task_list.next = & __wait___0.task_list;
< #line 4006
<   __wait___0.task_list.prev = & __wait___0.task_list;
<   ldv_53151: 
< #line 4006
<   prepare_to_wait(& mdev->misc_wait, & __wait___0, 2);
< #line 4006
<   tmp___7 = drbd_test_flag(mdev, BITMAP_IO);
< #line 4006
<   if (tmp___7 == 0) {
< #line 4006
<     goto ldv_53150;
<   } else {
< 
<   }
< #line 4006
<   schedule();
< #line 4006
<   goto ldv_53151;
<   ldv_53150: 
< #line 4006
<   finish_wait(& mdev->misc_wait, & __wait___0);
<   ldv_53148: 
< #line 4015
<   tmp___8 = drbd_release_ee(mdev, & mdev->net_ee);
< #line 4015
<   i = (unsigned int )tmp___8;
< #line 4016
<   if (i != 0U) {
< #line 4017
<     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "net_ee not empty, killed %u entries\n",
<               i);
<   } else {
< 
<   }
< #line 4018
<   tmp___9 = atomic_read((atomic_t const   *)(& mdev->pp_in_use_by_net));
< #line 4018
<   i = (unsigned int )tmp___9;
< #line 4019
<   if (i != 0U) {
< #line 4020
<     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "pp_in_use_by_net = %d, expected 0\n",
<               i);
<   } else {
< 
<   }
< #line 4021
<   tmp___10 = atomic_read((atomic_t const   *)(& mdev->pp_in_use));
< #line 4021
<   i = (unsigned int )tmp___10;
< #line 4022
---
> #line 4633
>   tmp___5 = atomic_read((atomic_t const   *)(& mdev->pp_in_use));
> #line 4633
>   i = (unsigned int )tmp___5;
> #line 4634
29723c31856
< #line 4023
---
> #line 4635
29729,29733c31862,31866
< #line 4025
<   tmp___11 = list_empty((struct list_head  const  *)(& mdev->read_ee));
< #line 4025
<   if (tmp___11 == 0) {
< #line 4025
---
> #line 4637
>   tmp___6 = list_empty((struct list_head  const  *)(& mdev->read_ee));
> #line 4637
>   if (tmp___6 == 0) {
> #line 4637
29735,29736c31868,31869
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             4025);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>             4637);
29740,29744c31873,31877
< #line 4026
<   tmp___12 = list_empty((struct list_head  const  *)(& mdev->active_ee));
< #line 4026
<   if (tmp___12 == 0) {
< #line 4026
---
> #line 4638
>   tmp___7 = list_empty((struct list_head  const  *)(& mdev->active_ee));
> #line 4638
>   if (tmp___7 == 0) {
> #line 4638
29746,29747c31879,31880
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             4026);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>             4638);
29751,29755c31884,31888
< #line 4027
<   tmp___13 = list_empty((struct list_head  const  *)(& mdev->sync_ee));
< #line 4027
<   if (tmp___13 == 0) {
< #line 4027
---
> #line 4639
>   tmp___8 = list_empty((struct list_head  const  *)(& mdev->sync_ee));
> #line 4639
>   if (tmp___8 == 0) {
> #line 4639
29757,29758c31890,31891
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             4027);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>             4639);
29762,29766c31895,31899
< #line 4028
<   tmp___14 = list_empty((struct list_head  const  *)(& mdev->done_ee));
< #line 4028
<   if (tmp___14 == 0) {
< #line 4028
---
> #line 4640
>   tmp___9 = list_empty((struct list_head  const  *)(& mdev->done_ee));
> #line 4640
>   if (tmp___9 == 0) {
> #line 4640
29768,29782c31901,31902
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             4028);
<   } else {
< 
<   }
< #line 4031
<   atomic_set(& (mdev->current_epoch)->epoch_size, 0);
< #line 4032
<   tmp___15 = list_empty((struct list_head  const  *)(& (mdev->current_epoch)->list));
< #line 4032
<   if (tmp___15 == 0) {
< #line 4032
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( list_empty(&mdev->current_epoch->list) ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             4032);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>             4640);
29786,29787c31906,31907
< #line 4033
<   return;
---
> #line 4642
>   return (0);
29790,29791c31910,31911
< #line 4044 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int drbd_send_handshake(struct drbd_conf *mdev ) 
---
> #line 4654 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int drbd_send_features(struct drbd_tconn *tconn ) 
29793,29795c31913,31916
<   struct p_handshake *p ;
<   int ok ;
<   int tmp ;
---
>   struct drbd_socket *sock ;
>   struct p_connection_features *p ;
>   void *tmp ;
>   int tmp___0 ;
29798,29816c31919,31928
< #line 4047
<   p = & mdev->data.sbuf.handshake;
< #line 4050
<   tmp = ldv_mutex_lock_interruptible_117(& mdev->data.mutex);
< #line 4050
<   if (tmp != 0) {
< #line 4051
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "interrupted during initial handshake\n");
< #line 4052
<     return (0);
<   } else {
< 
<   }
< #line 4055
<   if ((unsigned long )mdev->data.socket == (unsigned long )((struct socket *)0)) {
< #line 4056
<     ldv_mutex_unlock_118(& mdev->data.mutex);
< #line 4057
<     return (0);
---
> #line 4659
>   sock = & tconn->data;
> #line 4660
>   tmp = conn_prepare_command(tconn, sock);
> #line 4660
>   p = (struct p_connection_features *)tmp;
> #line 4661
>   if ((unsigned long )p == (unsigned long )((struct p_connection_features *)0)) {
> #line 4662
>     return (-5);
29820,29822c31932,31934
< #line 4060
<   memset((void *)p, 0, 80UL);
< #line 4061
---
> #line 4663
>   memset((void *)p, 0, 72UL);
> #line 4664
29824,29832c31936,31941
< #line 4062
<   p->protocol_max = 1627389952U;
< #line 4063
<   ok = _drbd_send_cmd(mdev, mdev->data.socket, P_HAND_SHAKE, (struct p_header80 *)p,
<                       80UL, 0U);
< #line 4065
<   ldv_mutex_unlock_119(& mdev->data.mutex);
< #line 4066
<   return (ok);
---
> #line 4665
>   p->protocol_max = 1694498816U;
> #line 4666
>   tmp___0 = conn_send_command(tconn, sock, P_CONNECTION_FEATURES, 72U, 0, 0U);
> #line 4666
>   return (tmp___0);
29835,29836c31944,31945
< #line 4076 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int drbd_do_handshake(struct drbd_conf *mdev ) 
---
> #line 4676 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int drbd_do_features(struct drbd_tconn *tconn ) 
29838c31947
<   struct p_handshake *p ;
---
>   struct p_connection_features *p ;
29840,29842c31949,31950
<   unsigned int length ;
<   enum drbd_packets cmd ;
<   int rv ;
---
>   struct packet_info pi ;
>   int err ;
29844,29847c31952,31953
<   struct task_struct *tmp___0 ;
<   int tmp___1 ;
<   __u32 tmp___2 ;
<   __u32 tmp___3 ;
---
>   __u32 tmp___0 ;
>   __u32 tmp___1 ;
29852,29854c31958
< #line 4079
<   p = & mdev->data.rbuf.handshake;
< #line 4080
---
> #line 4680
29856,29860c31960,31964
< #line 4085
<   rv = drbd_send_handshake(mdev);
< #line 4086
<   if (rv == 0) {
< #line 4087
---
> #line 4684
>   err = drbd_send_features(tconn);
> #line 4685
>   if (err != 0) {
> #line 4686
29865,29869c31969,31973
< #line 4089
<   rv = drbd_recv_header(mdev, & cmd, & length);
< #line 4090
<   if (rv == 0) {
< #line 4091
---
> #line 4688
>   err = drbd_recv_header(tconn, & pi);
> #line 4689
>   if (err != 0) {
> #line 4690
29874,29881c31978,31985
< #line 4093
<   if ((unsigned int )cmd != 65534U) {
< #line 4094
<     tmp = cmdname(cmd);
< #line 4094
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "expected HandShake packet, received: %s (0x%04x)\n",
<             tmp, (unsigned int )cmd);
< #line 4096
---
> #line 4692
>   if ((unsigned int )pi.cmd != 65534U) {
> #line 4693
>     tmp = cmdname(pi.cmd);
> #line 4693
>     printk("\vd-con %s: expected ConnectionFeatures packet, received: %s (0x%04x)\n",
>            tconn->name, tmp, (unsigned int )pi.cmd);
> #line 4695
29886,29891c31990,31995
< #line 4099
<   if ((unsigned int )expect != length) {
< #line 4100
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "expected HandShake length: %u, received: %u\n",
<             expect, length);
< #line 4102
---
> #line 4698
>   if (pi.size != (unsigned int )expect) {
> #line 4699
>     printk("\vd-con %s: expected ConnectionFeatures length: %u, received: %u\n", tconn->name,
>            expect, pi.size);
> #line 4701
29896,29912c32000,32006
< #line 4105
<   rv = drbd_recv(mdev, (void *)(& p->head.payload), (size_t )expect);
< #line 4107
<   if (rv != expect) {
< #line 4108
<     tmp___0 = get_current();
< #line 4108
<     tmp___1 = signal_pending(tmp___0);
< #line 4108
<     if (tmp___1 == 0) {
< #line 4109
<       dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "short read receiving handshake packet: l=%u\n",
<                rv);
<     } else {
< 
<     }
< #line 4110
---
> #line 4704
>   p = (struct p_connection_features *)pi.data;
> #line 4705
>   err = drbd_recv_all_warn(tconn, (void *)p, (size_t )expect);
> #line 4706
>   if (err != 0) {
> #line 4707
29917,29925c32011,32019
< #line 4113
<   tmp___2 = __fswab32(p->protocol_min);
< #line 4113
<   p->protocol_min = tmp___2;
< #line 4114
<   tmp___3 = __fswab32(p->protocol_max);
< #line 4114
<   p->protocol_max = tmp___3;
< #line 4115
---
> #line 4709
>   tmp___0 = __fswab32(p->protocol_min);
> #line 4709
>   p->protocol_min = tmp___0;
> #line 4710
>   tmp___1 = __fswab32(p->protocol_max);
> #line 4710
>   p->protocol_max = tmp___1;
> #line 4711
29927c32021
< #line 4116
---
> #line 4712
29932,29934c32026,32028
< #line 4118
<   if (p->protocol_min > 97U || p->protocol_max <= 85U) {
< #line 4120
---
> #line 4714
>   if (p->protocol_min > 101U || p->protocol_max <= 85U) {
> #line 4716
29939,29941c32033,32035
< #line 4122
<   __min1 = 97;
< #line 4122
---
> #line 4718
>   __min1 = 101;
> #line 4718
29943,29948c32037,32042
< #line 4122
<   mdev->agreed_pro_version = __min1 < __min2 ? __min1 : __min2;
< #line 4124
<   _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Handshake successful: Agreed network protocol version %d\n",
<             mdev->agreed_pro_version);
< #line 4127
---
> #line 4718
>   tconn->agreed_pro_version = __min1 < __min2 ? __min1 : __min2;
> #line 4720
>   printk("\016d-con %s: Handshake successful: Agreed network protocol version %d\n",
>          tconn->name, tconn->agreed_pro_version);
> #line 4723
29951,29954c32045,32048
< #line 4130
<   dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "incompatible DRBD dialects: I support %d-%d, peer supports %d-%d\n",
<           86, 97, p->protocol_min, p->protocol_max);
< #line 4134
---
> #line 4726
>   printk("\vd-con %s: incompatible DRBD dialects: I support %d-%d, peer supports %d-%d\n",
>          tconn->name, 86, 101, p->protocol_min, p->protocol_max);
> #line 4730
29958,29959c32052,32053
< #line 4153 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int drbd_do_auth(struct drbd_conf *mdev ) 
---
> #line 4749 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int drbd_do_auth(struct drbd_tconn *tconn ) 
29960a32055
>   struct drbd_socket *sock ;
29967c32062
<   size_t tmp ;
---
>   char secret[64U] ;
29970,29971c32065,32067
<   enum drbd_packets cmd ;
<   unsigned int length ;
---
>   struct packet_info pi ;
>   struct net_conf *nc ;
>   int err ;
29973,29975c32069,32076
<   char const   *tmp___0 ;
<   void *tmp___1 ;
<   struct task_struct *tmp___2 ;
---
>   struct net_conf *_________p1 ;
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
>   size_t tmp___1 ;
>   size_t __len ;
>   void *__ret ;
>   void *tmp___2 ;
29977,29982c32078,32085
<   void *tmp___4 ;
<   char const   *tmp___5 ;
<   struct task_struct *tmp___6 ;
<   int tmp___7 ;
<   void *tmp___8 ;
<   int tmp___9 ;
---
>   char const   *tmp___4 ;
>   void *tmp___5 ;
>   void *tmp___6 ;
>   void *tmp___7 ;
>   int tmp___8 ;
>   char const   *tmp___9 ;
>   void *tmp___10 ;
>   int tmp___11 ;
29985c32088
< #line 4157
---
> #line 4754
29987c32090
< #line 4158
---
> #line 4755
29989c32092
< #line 4159
---
> #line 4756
29991,29997c32094,32132
< #line 4160
<   tmp = strlen((char const   *)(& (mdev->net_conf)->shared_secret));
< #line 4160
<   key_len = (unsigned int )tmp;
< #line 4167
<   desc.tfm = mdev->cram_hmac_tfm;
< #line 4168
---
> #line 4767
>   rcu_read_lock___2();
> #line 4768
>   _________p1 = *((struct net_conf * volatile  *)(& tconn->net_conf));
> #line 4768
>   tmp = debug_lockdep_rcu_enabled();
> #line 4768
>   if (tmp != 0 && ! __warned) {
> #line 4768
>     tmp___0 = rcu_read_lock_held();
> #line 4768
>     if (tmp___0 == 0 && 1) {
> #line 4768
>       __warned = 1;
> #line 4768
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>                              4768, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 4768
>   nc = _________p1;
> #line 4769
>   tmp___1 = strlen((char const   *)(& nc->shared_secret));
> #line 4769
>   key_len = (unsigned int )tmp___1;
> #line 4770
>   __len = (size_t )key_len;
> #line 4770
>   __ret = __builtin_memcpy((void *)(& secret), (void const   *)(& nc->shared_secret),
>                            __len);
> #line 4771
>   rcu_read_unlock___2();
> #line 4773
>   desc.tfm = tconn->cram_hmac_tfm;
> #line 4774
29999,30002c32134,32136
< #line 4170
<   rv = crypto_hash_setkey(mdev->cram_hmac_tfm, (u8 const   *)(& (mdev->net_conf)->shared_secret),
<                           key_len);
< #line 4172
---
> #line 4776
>   rv = crypto_hash_setkey(tconn->cram_hmac_tfm, (u8 const   *)(& secret), key_len);
> #line 4777
30004,30007c32138,32140
< #line 4173
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "crypto_hash_setkey() failed with %d\n",
<             rv);
< #line 4174
---
> #line 4778
>     printk("\vd-con %s: crypto_hash_setkey() failed with %d\n", tconn->name, rv);
> #line 4779
30009c32142
< #line 4175
---
> #line 4780
30014c32147
< #line 4178
---
> #line 4783
30016,30020c32149,32157
< #line 4180
<   rv = drbd_send_cmd2(mdev, P_AUTH_CHALLENGE, (char *)(& my_challenge), 64UL);
< #line 4181
<   if (rv == 0) {
< #line 4182
---
> #line 4785
>   sock = & tconn->data;
> #line 4786
>   tmp___2 = conn_prepare_command(tconn, sock);
> #line 4786
>   if ((unsigned long )tmp___2 == (unsigned long )((void *)0)) {
> #line 4787
>     rv = 0;
> #line 4788
30025,30027c32162,32167
< #line 4184
<   rv = drbd_recv_header(mdev, & cmd, & length);
< #line 4185
---
> #line 4790
>   tmp___3 = conn_send_command(tconn, sock, P_AUTH_CHALLENGE, 0U, (void *)(& my_challenge),
>                               64U);
> #line 4790
>   rv = tmp___3 == 0;
> #line 4792
30029c32169
< #line 4186
---
> #line 4793
30034,30041c32174,32178
< #line 4188
<   if ((unsigned int )cmd != 16U) {
< #line 4189
<     tmp___0 = cmdname(cmd);
< #line 4189
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "expected AuthChallenge packet, received: %s (0x%04x)\n",
<             tmp___0, (unsigned int )cmd);
< #line 4191
---
> #line 4795
>   err = drbd_recv_header(tconn, & pi);
> #line 4796
>   if (err != 0) {
> #line 4797
30043c32180
< #line 4192
---
> #line 4798
30048,30052c32185,32203
< #line 4195
<   if (length > 128U) {
< #line 4196
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "expected AuthChallenge payload too big.\n");
< #line 4197
---
> #line 4801
>   if ((unsigned int )pi.cmd != 16U) {
> #line 4802
>     tmp___4 = cmdname(pi.cmd);
> #line 4802
>     printk("\vd-con %s: expected AuthChallenge packet, received: %s (0x%04x)\n", tconn->name,
>            tmp___4, (unsigned int )pi.cmd);
> #line 4804
>     rv = 0;
> #line 4805
>     goto fail;
>   } else {
> 
>   }
> #line 4808
>   if (pi.size > 128U) {
> #line 4809
>     printk("\vd-con %s: expected AuthChallenge payload too big.\n", tconn->name);
> #line 4810
30054c32205
< #line 4198
---
> #line 4811
30059,30063c32210,32214
< #line 4201
<   tmp___1 = kmalloc((size_t )length, 16U);
< #line 4201
<   peers_ch = (char *)tmp___1;
< #line 4202
---
> #line 4814
>   tmp___5 = kmalloc((size_t )pi.size, 16U);
> #line 4814
>   peers_ch = (char *)tmp___5;
> #line 4815
30065,30067c32216,32218
< #line 4203
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "kmalloc of peers_ch failed\n");
< #line 4204
---
> #line 4816
>     printk("\vd-con %s: kmalloc of peers_ch failed\n", tconn->name);
> #line 4817
30069c32220
< #line 4205
---
> #line 4818
30074,30090c32225,32229
< #line 4208
<   rv = drbd_recv(mdev, (void *)peers_ch, (size_t )length);
< #line 4210
<   if ((unsigned int )rv != length) {
< #line 4211
<     tmp___2 = get_current();
< #line 4211
<     tmp___3 = signal_pending(tmp___2);
< #line 4211
<     if (tmp___3 == 0) {
< #line 4212
<       dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "short read AuthChallenge: l=%u\n",
<                rv);
<     } else {
< 
<     }
< #line 4213
---
> #line 4821
>   err = drbd_recv_all_warn(tconn, (void *)peers_ch, (size_t )pi.size);
> #line 4822
>   if (err != 0) {
> #line 4823
30092c32231
< #line 4214
---
> #line 4824
30097,30103c32236,32242
< #line 4217
<   resp_size = crypto_hash_digestsize(mdev->cram_hmac_tfm);
< #line 4218
<   tmp___4 = kmalloc((size_t )resp_size, 16U);
< #line 4218
<   response = (char *)tmp___4;
< #line 4219
---
> #line 4827
>   resp_size = crypto_hash_digestsize(tconn->cram_hmac_tfm);
> #line 4828
>   tmp___6 = kmalloc((size_t )resp_size, 16U);
> #line 4828
>   response = (char *)tmp___6;
> #line 4829
30105,30107c32244,32246
< #line 4220
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "kmalloc of response failed\n");
< #line 4221
---
> #line 4830
>     printk("\vd-con %s: kmalloc of response failed\n", tconn->name);
> #line 4831
30109c32248
< #line 4222
---
> #line 4832
30114c32253
< #line 4225
---
> #line 4835
30116,30118c32255,32257
< #line 4226
<   sg_set_buf(& sg, (void const   *)peers_ch, length);
< #line 4228
---
> #line 4836
>   sg_set_buf(& sg, (void const   *)peers_ch, pi.size);
> #line 4838
30120c32259
< #line 4229
---
> #line 4839
30122,30125c32261,32263
< #line 4230
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "crypto_hash_digest() failed with %d\n",
<             rv);
< #line 4231
---
> #line 4840
>     printk("\vd-con %s: crypto_hash_digest() failed with %d\n", tconn->name, rv);
> #line 4841
30127c32265
< #line 4232
---
> #line 4842
30132,30136c32270,32276
< #line 4235
<   rv = drbd_send_cmd2(mdev, P_AUTH_RESPONSE, response, (size_t )resp_size);
< #line 4236
<   if (rv == 0) {
< #line 4237
---
> #line 4845
>   tmp___7 = conn_prepare_command(tconn, sock);
> #line 4845
>   if ((unsigned long )tmp___7 == (unsigned long )((void *)0)) {
> #line 4846
>     rv = 0;
> #line 4847
30141,30143c32281,32286
< #line 4239
<   rv = drbd_recv_header(mdev, & cmd, & length);
< #line 4240
---
> #line 4849
>   tmp___8 = conn_send_command(tconn, sock, P_AUTH_RESPONSE, 0U, (void *)response,
>                               resp_size);
> #line 4849
>   rv = tmp___8 == 0;
> #line 4851
30145c32288
< #line 4241
---
> #line 4852
30150,30157c32293,32297
< #line 4243
<   if ((unsigned int )cmd != 17U) {
< #line 4244
<     tmp___5 = cmdname(cmd);
< #line 4244
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "expected AuthResponse packet, received: %s (0x%04x)\n",
<             tmp___5, (unsigned int )cmd);
< #line 4246
---
> #line 4854
>   err = drbd_recv_header(tconn, & pi);
> #line 4855
>   if (err != 0) {
> #line 4856
30159c32299
< #line 4247
---
> #line 4857
30164,30168c32304,32311
< #line 4250
<   if (length != resp_size) {
< #line 4251
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "expected AuthResponse payload of wrong size\n");
< #line 4252
---
> #line 4860
>   if ((unsigned int )pi.cmd != 17U) {
> #line 4861
>     tmp___9 = cmdname(pi.cmd);
> #line 4861
>     printk("\vd-con %s: expected AuthResponse packet, received: %s (0x%04x)\n", tconn->name,
>            tmp___9, (unsigned int )pi.cmd);
> #line 4863
30170c32313
< #line 4253
---
> #line 4864
30175,30188c32318,32326
< #line 4256
<   rv = drbd_recv(mdev, (void *)response, (size_t )resp_size);
< #line 4258
<   if ((unsigned int )rv != resp_size) {
< #line 4259
<     tmp___6 = get_current();
< #line 4259
<     tmp___7 = signal_pending(tmp___6);
< #line 4259
<     if (tmp___7 == 0) {
< #line 4260
<       dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "short read receiving AuthResponse: l=%u\n",
<                rv);
<     } else {
---
> #line 4867
>   if (pi.size != resp_size) {
> #line 4868
>     printk("\vd-con %s: expected AuthResponse payload of wrong size\n", tconn->name);
> #line 4869
>     rv = 0;
> #line 4870
>     goto fail;
>   } else {
30190,30191c32328,32333
<     }
< #line 4261
---
>   }
> #line 4873
>   err = drbd_recv_all_warn(tconn, (void *)response, (size_t )resp_size);
> #line 4874
>   if (err != 0) {
> #line 4875
30193c32335
< #line 4262
---
> #line 4876
30198,30202c32340,32344
< #line 4265
<   tmp___8 = kmalloc((size_t )resp_size, 16U);
< #line 4265
<   right_response = (char *)tmp___8;
< #line 4266
---
> #line 4879
>   tmp___10 = kmalloc((size_t )resp_size, 16U);
> #line 4879
>   right_response = (char *)tmp___10;
> #line 4880
30204,30206c32346,32348
< #line 4267
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "kmalloc of right_response failed\n");
< #line 4268
---
> #line 4881
>     printk("\vd-con %s: kmalloc of right_response failed\n", tconn->name);
> #line 4882
30208c32350
< #line 4269
---
> #line 4883
30213c32355
< #line 4272
---
> #line 4886
30215c32357
< #line 4274
---
> #line 4888
30217c32359
< #line 4275
---
> #line 4889
30219,30222c32361,32363
< #line 4276
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "crypto_hash_digest() failed with %d\n",
<             rv);
< #line 4277
---
> #line 4890
>     printk("\vd-con %s: crypto_hash_digest() failed with %d\n", tconn->name, rv);
> #line 4891
30224c32365
< #line 4278
---
> #line 4892
30229,30233c32370,32374
< #line 4281
<   tmp___9 = memcmp((void const   *)response, (void const   *)right_response, (size_t )resp_size);
< #line 4281
<   rv = tmp___9 == 0;
< #line 4283
---
> #line 4895
>   tmp___11 = memcmp((void const   *)response, (void const   *)right_response, (size_t )resp_size);
> #line 4895
>   rv = tmp___11 == 0;
> #line 4897
30235,30237c32376,32378
< #line 4284
<     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Peer authenticated using %d bytes of \'%s\' HMAC\n",
<               resp_size, (unsigned char *)(& (mdev->net_conf)->cram_hmac_alg));
---
> #line 4898
>     printk("\016d-con %s: Peer authenticated using %d bytes HMAC\n", tconn->name,
>            resp_size);
30239c32380
< #line 4287
---
> #line 4901
30243c32384
< #line 4290
---
> #line 4904
30245c32386
< #line 4291
---
> #line 4905
30247c32388
< #line 4292
---
> #line 4906
30249c32390
< #line 4294
---
> #line 4908
30253c32394
< #line 4298 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4912 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
30256,30258c32397
<   struct drbd_conf *mdev ;
<   unsigned int minor ;
<   unsigned int tmp ;
---
>   struct drbd_tconn *tconn ;
30260d32398
<   struct task_struct *tmp___0 ;
30263d32400
<   int tmp___1 ;
30266,30281c32403,32410
< #line 4300
<   mdev = thi->mdev;
< #line 4301
<   tmp = mdev_to_minor(mdev);
< #line 4301
<   minor = tmp;
< #line 4304
<   tmp___0 = get_current();
< #line 4304
<   sprintf((char *)(& tmp___0->comm), "drbd%d_receiver", minor);
< #line 4306
<   _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "receiver (re)started\n");
<   ldv_53194: 
< #line 4309
<   h = drbd_connect(mdev);
< #line 4310
---
> #line 4914
>   tconn = thi->tconn;
> #line 4917
>   printk("\016d-con %s: receiver (re)started\n", tconn->name);
>   ldv_54052: 
> #line 4920
>   h = conn_connect(tconn);
> #line 4921
30283,30285c32412,32414
< #line 4311
<     drbd_disconnect(mdev);
< #line 4312
---
> #line 4922
>     conn_disconnect(tconn);
> #line 4923
30290c32419
< #line 4314
---
> #line 4925
30292,30294c32421,32423
< #line 4315
<     dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Discarding network configuration.\n");
< #line 4316
---
> #line 4926
>     printk("\fd-con %s: Discarding network configuration.\n", tconn->name);
> #line 4927
30296,30298c32425,32427
< #line 4316
<     val.ldv_39979.conn = 1U;
< #line 4316
---
> #line 4927
>     val.ldv_40024.conn = 1U;
> #line 4927
30300,30303c32429,32432
< #line 4316
<     mask.ldv_39979.conn = 31U;
< #line 4316
<     drbd_force_state(mdev, mask, val);
---
> #line 4927
>     mask.ldv_40024.conn = 31U;
> #line 4927
>     conn_request_state(tconn, mask, val, CS_HARD);
30307c32436
< #line 4318
---
> #line 4929
30309,30310c32438,32439
< #line 4319
<     goto ldv_53194;
---
> #line 4930
>     goto ldv_54052;
30315c32444
< #line 4320
---
> #line 4931
30317,30327c32446,32447
< #line 4321
<     tmp___1 = get_net_conf(mdev);
< #line 4321
<     if (tmp___1 != 0) {
< #line 4322
<       drbdd(mdev);
< #line 4323
<       put_net_conf(mdev);
<     } else {
< 
<     }
---
> #line 4932
>     drbdd(tconn);
30331,30335c32451,32455
< #line 4327
<   drbd_disconnect(mdev);
< #line 4329
<   _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "receiver terminated\n");
< #line 4330
---
> #line 4934
>   conn_disconnect(tconn);
> #line 4936
>   printk("\016d-con %s: receiver terminated\n", tconn->name);
> #line 4937
30339,30340c32459,32460
< #line 4335 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int got_RqSReply(struct drbd_conf *mdev , struct p_header80 *h ) 
---
> #line 4942 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int got_conn_RqSReply(struct drbd_tconn *tconn , struct packet_info *pi ) 
30348,30350c32468,32470
< #line 4337
<   p = (struct p_req_state_reply *)h;
< #line 4339
---
> #line 4944
>   p = (struct p_req_state_reply *)pi->data;
> #line 4945
30352c32472
< #line 4339
---
> #line 4945
30354c32474
< #line 4341
---
> #line 4947
30356,30357c32476,32477
< #line 4342
<     drbd_set_flag(mdev, CL_ST_CHG_SUCCESS);
---
> #line 4948
>     set_bit(6U, (unsigned long volatile   *)(& tconn->flags));
30359,30361c32479,32481
< #line 4344
<     drbd_set_flag(mdev, CL_ST_CHG_FAIL);
< #line 4345
---
> #line 4950
>     set_bit(7U, (unsigned long volatile   *)(& tconn->flags));
> #line 4951
30363c32483,32549
< #line 4345
---
> #line 4951
>     printk("\vd-con %s: Requested state change failed by peer: %s (%d)\n", tconn->name,
>            tmp___0, retcode);
>   }
> #line 4954
>   __wake_up(& tconn->ping_wait, 3U, 1, 0);
> #line 4956
>   return (0);
> }
> }
> #line 4959 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int got_RqSReply(struct drbd_tconn *tconn , struct packet_info *pi ) 
> { 
>   struct drbd_conf *mdev ;
>   struct p_req_state_reply *p ;
>   int retcode ;
>   __u32 tmp ;
>   int tmp___0 ;
>   int tmp___1 ;
>   char const   *tmp___2 ;
> 
>   {
> #line 4962
>   p = (struct p_req_state_reply *)pi->data;
> #line 4963
>   tmp = __fswab32(p->retcode);
> #line 4963
>   retcode = (int )tmp;
> #line 4965
>   mdev = vnr_to_mdev(tconn, (int )pi->vnr);
> #line 4966
>   if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
> #line 4967
>     return (-5);
>   } else {
> 
>   }
> #line 4969
>   tmp___1 = constant_test_bit(5U, (unsigned long const volatile   *)(& tconn->flags));
> #line 4969
>   if (tmp___1 != 0) {
> #line 4970
>     if (tconn->agreed_pro_version > 99) {
> #line 4970
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( tconn->agreed_pro_version < 100 ) in %s:%d\n",
>               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>               4970);
>     } else {
> 
>     }
> #line 4971
>     tmp___0 = got_conn_RqSReply(tconn, pi);
> #line 4971
>     return (tmp___0);
>   } else {
> 
>   }
> #line 4974
>   if (retcode > 0) {
> #line 4975
>     set_bit(3U, (unsigned long volatile   *)(& mdev->flags));
>   } else {
> #line 4977
>     set_bit(4U, (unsigned long volatile   *)(& mdev->flags));
> #line 4978
>     tmp___2 = drbd_set_st_err_str((enum drbd_state_rv )retcode);
> #line 4978
30365c32551
<             tmp___0, retcode);
---
>             tmp___2, retcode);
30367c32553
< #line 4348
---
> #line 4981
30369,30370c32555,32556
< #line 4350
<   return (1);
---
> #line 4983
>   return (0);
30373,30374c32559,32560
< #line 4353 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int got_Ping(struct drbd_conf *mdev , struct p_header80 *h ) 
---
> #line 4986 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int got_Ping(struct drbd_tconn *tconn , struct packet_info *pi ) 
30379,30381c32565,32567
< #line 4355
<   tmp = drbd_send_ping_ack(mdev);
< #line 4355
---
> #line 4988
>   tmp = drbd_send_ping_ack(tconn);
> #line 4988
30385,30386c32571,32572
< #line 4359 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int got_PingAck(struct drbd_conf *mdev , struct p_header80 *h ) 
---
> #line 4992 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int got_PingAck(struct drbd_tconn *tconn , struct packet_info *pi ) 
30391,30395c32577,32581
< #line 4362
<   ((mdev->meta.socket)->sk)->sk_rcvtimeo = (long )((mdev->net_conf)->ping_int * 250);
< #line 4363
<   tmp = drbd_test_and_set_flag(mdev, GOT_PING_ACK);
< #line 4363
---
> #line 4995
>   ((tconn->meta.socket)->sk)->sk_rcvtimeo = (long )((tconn->net_conf)->ping_int * 250U);
> #line 4996
>   tmp = test_and_set_bit(4, (unsigned long volatile   *)(& tconn->flags));
> #line 4996
30397,30398c32583,32584
< #line 4364
<     __wake_up(& mdev->misc_wait, 3U, 1, 0);
---
> #line 4997
>     __wake_up(& tconn->ping_wait, 3U, 1, 0);
30402,30403c32588,32589
< #line 4366
<   return (1);
---
> #line 4999
>   return (0);
30406,30407c32592,32593
< #line 4369 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int got_IsInSync(struct drbd_conf *mdev , struct p_header80 *h ) 
---
> #line 5002 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int got_IsInSync(struct drbd_tconn *tconn , struct packet_info *pi ) 
30408a32595
>   struct drbd_conf *mdev ;
30416,30417d32602
<   int tmp___3 ;
<   int tmp___4 ;
30420,30422c32605,32607
< #line 4371
<   p = (struct p_block_ack *)h;
< #line 4372
---
> #line 5005
>   p = (struct p_block_ack *)pi->data;
> #line 5006
30424c32609
< #line 4372
---
> #line 5006
30426c32611
< #line 4373
---
> #line 5007
30428c32613
< #line 4373
---
> #line 5007
30430,30435c32615,32620
< #line 4375
<   if (mdev->agreed_pro_version <= 88) {
< #line 4375
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mdev->agreed_pro_version >= 89 ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             4375);
---
> #line 5009
>   mdev = vnr_to_mdev(tconn, (int )pi->vnr);
> #line 5010
>   if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
> #line 5011
>     return (-5);
30439c32624,32633
< #line 4377
---
> #line 5013
>   if ((mdev->tconn)->agreed_pro_version <= 88) {
> #line 5013
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mdev->tconn->agreed_pro_version >= 89 ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>             5013);
>   } else {
> 
>   }
> #line 5015
30441c32635
< #line 4377
---
> #line 5015
30443c32637
< #line 4379
---
> #line 5017
30445c32639
< #line 4379
---
> #line 5017
30447c32641
< #line 4380
---
> #line 5018
30449,30452c32643,32646
< #line 4381
<     __drbd_set_in_sync(mdev, sector, blksize, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<                        4381U);
< #line 4383
---
> #line 5019
>     __drbd_set_in_sync(mdev, sector, blksize, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>                        5019U);
> #line 5021
30454c32648
< #line 4384
---
> #line 5022
30459,30473c32653,32655
< #line 4386
<   atomic_dec(& mdev->rs_pending_cnt);
< #line 4386
<   tmp___4 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
< #line 4386
<   if (tmp___4 < 0) {
< #line 4386
<     tmp___3 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
< #line 4386
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: rs_pending_cnt = %d < 0 !\n",
<             "got_IsInSync", 4386, tmp___3);
<   } else {
< 
<   }
< #line 4387
---
> #line 5024
>   _dec_rs_pending(mdev, "got_IsInSync", 5024);
> #line 5025
30475,30536c32657
< #line 4389
<   return (1);
< }
< }
< #line 4394 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static struct drbd_request *_ack_id_to_req(struct drbd_conf *mdev , u64 id , sector_t sector ) 
< { 
<   struct hlist_head *slot ;
<   struct hlist_head *tmp ;
<   struct hlist_node *n ;
<   struct drbd_request *req ;
<   struct hlist_node  const  *__mptr ;
< 
<   {
< #line 4397
<   tmp = tl_hash_slot(mdev, sector);
< #line 4397
<   slot = tmp;
< #line 4401
<   n = slot->first;
< #line 4401
<   goto ldv_53234;
<   ldv_53233: ;
< #line 4402
<   if ((unsigned long )req == (unsigned long )id) {
< #line 4403
<     if (req->sector != sector) {
< #line 4404
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "_ack_id_to_req: found req %p but it has wrong sector (%llus versus %llus)\n",
<               req, (unsigned long long )req->sector, (unsigned long long )sector);
< #line 4408
<       goto ldv_53232;
<     } else {
< 
<     }
< #line 4410
<     return (req);
<   } else {
< 
<   }
< #line 4401
<   n = n->next;
<   ldv_53234: ;
< #line 4401
<   if ((unsigned long )n != (unsigned long )((struct hlist_node *)0)) {
< #line 4401
<     __mptr = (struct hlist_node  const  *)n;
< #line 4401
<     req = (struct drbd_request *)__mptr + 0xffffffffffffffd8UL;
< #line 4401
<     if (1 != 0) {
< #line 4402
<       goto ldv_53233;
<     } else {
< #line 4404
<       goto ldv_53232;
<     }
<   } else {
< 
<   }
<   ldv_53232: ;
< #line 4413
---
> #line 5027
30540c32661
< #line 4419 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 5031 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
30542,30543c32663,32664
<                                          req_validator_fn *validator , char const   *func ,
<                                          enum drbd_req_event what ) 
---
>                                          struct rb_root *root , char const   *func ,
>                                          enum drbd_req_event what , bool missing_ok ) 
30550,30554c32671,32675
< #line 4426
<   spin_lock_irq(& mdev->req_lock);
< #line 4427
<   req = (*validator)(mdev, id, sector);
< #line 4428
---
> #line 5038
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 5039
>   req = find_request(mdev, root, id, sector, (int )missing_ok, func);
> #line 5040
30557c32678
< #line 4428
---
> #line 5040
30559,30565c32680,32683
< #line 4429
<     spin_unlock_irq(& mdev->req_lock);
< #line 4431
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "%s: failed to find req %p, sector %llus\n",
<             func, (void *)id, (unsigned long long )sector);
< #line 4433
<     return (0);
---
> #line 5041
>     spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 5042
>     return (-5);
30569c32687
< #line 4435
---
> #line 5044
30571,30573c32689,32691
< #line 4436
<   spin_unlock_irq(& mdev->req_lock);
< #line 4438
---
> #line 5045
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 5047
30575c32693
< #line 4439
---
> #line 5048
30580,30581c32698,32699
< #line 4440
<   return (1);
---
> #line 5049
>   return (0);
30584,30585c32702,32703
< #line 4443 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int got_BlockAck(struct drbd_conf *mdev , struct p_header80 *h ) 
---
> #line 5052 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int got_BlockAck(struct drbd_tconn *tconn , struct packet_info *pi ) 
30586a32705
>   struct drbd_conf *mdev ;
30595,30597d32713
<   int tmp___3 ;
<   __u16 tmp___4 ;
<   int tmp___5 ;
30600,30602c32716,32718
< #line 4445
<   p = (struct p_block_ack *)h;
< #line 4446
---
> #line 5055
>   p = (struct p_block_ack *)pi->data;
> #line 5056
30604c32720
< #line 4446
---
> #line 5056
30606c32722
< #line 4447
---
> #line 5057
30608c32724
< #line 4447
---
> #line 5057
30610,30676c32726,32731
< #line 4450
<   tmp___1 = __fswab32(p->seq_num);
< #line 4450
<   update_peer_seq(mdev, tmp___1);
< #line 4452
<   if (p->block_id == 0xffffffffffffffffULL) {
< #line 4453
<     __drbd_set_in_sync(mdev, sector, blksize, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<                        4453U);
< #line 4454
<     atomic_dec(& mdev->rs_pending_cnt);
< #line 4454
<     tmp___3 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
< #line 4454
<     if (tmp___3 < 0) {
< #line 4454
<       tmp___2 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
< #line 4454
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: rs_pending_cnt = %d < 0 !\n",
<               "got_BlockAck", 4454, tmp___2);
<     } else {
< 
<     }
< #line 4455
<     return (1);
<   } else {
< 
<   }
< #line 4457
<   tmp___4 = __fswab16((int )h->command);
< #line 4457
<   switch ((int )tmp___4) {
<   case 23: ;
< #line 4459
<   if ((mdev->net_conf)->wire_protocol != 3) {
< #line 4459
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mdev->net_conf->wire_protocol == DRBD_PROT_C ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             4459);
<   } else {
< 
<   }
< #line 4460
<   what = write_acked_by_peer_and_sis;
< #line 4461
<   goto ldv_53262;
<   case 22: ;
< #line 4463
<   if ((mdev->net_conf)->wire_protocol != 3) {
< #line 4463
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mdev->net_conf->wire_protocol == DRBD_PROT_C ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             4463);
<   } else {
< 
<   }
< #line 4464
<   what = write_acked_by_peer;
< #line 4465
<   goto ldv_53262;
<   case 21: ;
< #line 4467
<   if ((mdev->net_conf)->wire_protocol != 2) {
< #line 4467
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mdev->net_conf->wire_protocol == DRBD_PROT_B ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             4467);
---
> #line 5060
>   mdev = vnr_to_mdev(tconn, (int )pi->vnr);
> #line 5061
>   if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
> #line 5062
>     return (-5);
30680,30690c32735,32747
< #line 4468
<   what = recv_acked_by_peer;
< #line 4469
<   goto ldv_53262;
<   case 24: ;
< #line 4471
<   if ((mdev->net_conf)->wire_protocol != 3) {
< #line 4471
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mdev->net_conf->wire_protocol == DRBD_PROT_C ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             4471);
---
> #line 5064
>   tmp___1 = __fswab32(p->seq_num);
> #line 5064
>   update_peer_seq(mdev, tmp___1);
> #line 5066
>   if (p->block_id == 0xffffffffffffffffULL) {
> #line 5067
>     __drbd_set_in_sync(mdev, sector, blksize, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>                        5067U);
> #line 5068
>     _dec_rs_pending(mdev, "got_BlockAck", 5068);
> #line 5069
>     return (0);
30694,30711c32751,32791
< #line 4472
<   what = conflict_discarded_by_peer;
< #line 4473
<   goto ldv_53262;
<   default: 
< #line 4475
<   dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( 0 ) in %s:%d\n",
<           (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<           4475);
< #line 4476
<   return (0);
<   }
<   ldv_53262: 
< #line 4479
<   tmp___5 = validate_req_change_req_state(mdev, p->block_id, sector, & _ack_id_to_req,
<                                           "got_BlockAck", what);
< #line 4479
<   return (tmp___5);
---
> #line 5071
>   switch ((unsigned int )pi->cmd) {
>   case 23U: 
> #line 5073
>   what = WRITE_ACKED_BY_PEER_AND_SIS;
> #line 5074
>   goto ldv_54106;
>   case 22U: 
> #line 5076
>   what = WRITE_ACKED_BY_PEER;
> #line 5077
>   goto ldv_54106;
>   case 21U: 
> #line 5079
>   what = RECV_ACKED_BY_PEER;
> #line 5080
>   goto ldv_54106;
>   case 24U: 
> #line 5082
>   what = CONFLICT_RESOLVED;
> #line 5083
>   goto ldv_54106;
>   case 44U: 
> #line 5085
>   what = POSTPONE_WRITE;
> #line 5086
>   goto ldv_54106;
>   default: 
> #line 5088
>   __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"),
>                        "i" (5088), "i" (12UL));
>   ldv_54112: ;
> #line 5088
>   goto ldv_54112;
>   }
>   ldv_54106: 
> #line 5091
>   tmp___2 = validate_req_change_req_state(mdev, p->block_id, sector, & mdev->write_requests,
>                                           "got_BlockAck", what, 0);
> #line 5091
>   return (tmp___2);
30714,30715c32794,32795
< #line 4483 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int got_NegAck(struct drbd_conf *mdev , struct p_header80 *h ) 
---
> #line 5096 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int got_NegAck(struct drbd_tconn *tconn , struct packet_info *pi ) 
30716a32797
>   struct drbd_conf *mdev ;
30722,30723c32803
<   struct drbd_request *req ;
<   struct bio_and_error m ;
---
>   int err ;
30725,30726d32804
<   int tmp___2 ;
<   int tmp___3 ;
30729,30731c32807,32809
< #line 4485
<   p = (struct p_block_ack *)h;
< #line 4486
---
> #line 5099
>   p = (struct p_block_ack *)pi->data;
> #line 5100
30733c32811
< #line 4486
---
> #line 5100
30735c32813
< #line 4487
---
> #line 5101
30737c32815
< #line 4487
---
> #line 5101
30739c32817,32826
< #line 4491
---
> #line 5104
>   mdev = vnr_to_mdev(tconn, (int )pi->vnr);
> #line 5105
>   if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
> #line 5106
>     return (-5);
>   } else {
> 
>   }
> #line 5108
30741c32828
< #line 4491
---
> #line 5108
30743c32830
< #line 4493
---
> #line 5110
30745,30759c32832,32834
< #line 4494
<     atomic_dec(& mdev->rs_pending_cnt);
< #line 4494
<     tmp___3 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
< #line 4494
<     if (tmp___3 < 0) {
< #line 4494
<       tmp___2 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
< #line 4494
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: rs_pending_cnt = %d < 0 !\n",
<               "got_NegAck", 4494, tmp___2);
<     } else {
< 
<     }
< #line 4495
---
> #line 5111
>     _dec_rs_pending(mdev, "got_NegAck", 5111);
> #line 5112
30761,30787c32836,32837
< #line 4496
<     return (1);
<   } else {
< 
<   }
< #line 4499
<   spin_lock_irq(& mdev->req_lock);
< #line 4500
<   req = _ack_id_to_req(mdev, p->block_id, sector);
< #line 4501
<   if ((unsigned long )req == (unsigned long )((struct drbd_request *)0)) {
< #line 4502
<     spin_unlock_irq(& mdev->req_lock);
< #line 4503
<     if ((mdev->net_conf)->wire_protocol == 1 || (mdev->net_conf)->wire_protocol == 2) {
< #line 4511
<       __drbd_set_out_of_sync(mdev, sector, size, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<                              4511U);
< #line 4512
<       return (1);
<     } else {
< #line 4514
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "%s: failed to find req %p, sector %llus\n",
<               "got_NegAck", (void *)p->block_id, (unsigned long long )sector);
< #line 4516
<       return (0);
<     }
---
> #line 5113
>     return (0);
30791,30798c32841,32848
< #line 4519
<   __req_mod(req, neg_acked, & m);
< #line 4520
<   spin_unlock_irq(& mdev->req_lock);
< #line 4522
<   if ((unsigned long )m.bio != (unsigned long )((struct bio *)0)) {
< #line 4523
<     complete_master_bio(mdev, & m);
---
> #line 5116
>   err = validate_req_change_req_state(mdev, p->block_id, sector, & mdev->write_requests,
>                                       "got_NegAck", NEG_ACKED, 1);
> #line 5119
>   if (err != 0) {
> #line 5125
>     __drbd_set_out_of_sync(mdev, sector, size, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>                            5125U);
30802,30803c32852,32853
< #line 4524
<   return (1);
---
> #line 5127
>   return (0);
30806,30807c32856,32857
< #line 4527 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int got_NegDReply(struct drbd_conf *mdev , struct p_header80 *h ) 
---
> #line 5130 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int got_NegDReply(struct drbd_tconn *tconn , struct packet_info *pi ) 
30808a32859
>   struct drbd_conf *mdev ;
30817,30819c32868,32870
< #line 4529
<   p = (struct p_block_ack *)h;
< #line 4530
---
> #line 5133
>   p = (struct p_block_ack *)pi->data;
> #line 5134
30821c32872
< #line 4530
---
> #line 5134
30823c32874,32883
< #line 4532
---
> #line 5136
>   mdev = vnr_to_mdev(tconn, (int )pi->vnr);
> #line 5137
>   if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
> #line 5138
>     return (-5);
>   } else {
> 
>   }
> #line 5140
30825c32885
< #line 4532
---
> #line 5140
30827c32887
< #line 4533
---
> #line 5142
30829,30830c32889,32890
< #line 4533
<   dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Got NegDReply; Sector %llus, len %u; Fail original request.\n",
---
> #line 5142
>   dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Got NegDReply; Sector %llus, len %u.\n",
30832,30835c32892,32895
< #line 4536
<   tmp___2 = validate_req_change_req_state(mdev, p->block_id, sector, & _ar_id_to_req,
<                                           "got_NegDReply", neg_acked);
< #line 4536
---
> #line 5145
>   tmp___2 = validate_req_change_req_state(mdev, p->block_id, sector, & mdev->read_requests,
>                                           "got_NegDReply", NEG_ACKED, 0);
> #line 5145
30839,30840c32899,32900
< #line 4540 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int got_NegRSDReply(struct drbd_conf *mdev , struct p_header80 *h ) 
---
> #line 5150 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int got_NegRSDReply(struct drbd_tconn *tconn , struct packet_info *pi ) 
30841a32902
>   struct drbd_conf *mdev ;
30849,30851d32909
<   int tmp___3 ;
<   __u16 tmp___4 ;
<   int tmp___5 ;
30854,30856c32912,32923
< #line 4544
<   p = (struct p_block_ack *)h;
< #line 4546
---
> #line 5155
>   p = (struct p_block_ack *)pi->data;
> #line 5157
>   mdev = vnr_to_mdev(tconn, (int )pi->vnr);
> #line 5158
>   if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
> #line 5159
>     return (-5);
>   } else {
> 
>   }
> #line 5161
30858c32925
< #line 4546
---
> #line 5161
30860c32927
< #line 4547
---
> #line 5162
30862c32929
< #line 4547
---
> #line 5162
30864c32931
< #line 4549
---
> #line 5164
30866c32933
< #line 4549
---
> #line 5164
30868,30886c32935,32941
< #line 4551
<   atomic_dec(& mdev->rs_pending_cnt);
< #line 4551
<   tmp___3 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
< #line 4551
<   if (tmp___3 < 0) {
< #line 4551
<     tmp___2 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
< #line 4551
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: rs_pending_cnt = %d < 0 !\n",
<             "got_NegRSDReply", 4551, tmp___2);
<   } else {
< 
<   }
< #line 4553
<   tmp___5 = _get_ldev_if_state(mdev, D_FAILED);
< #line 4553
<   if (tmp___5 != 0) {
< #line 4554
---
> #line 5166
>   _dec_rs_pending(mdev, "got_NegRSDReply", 5166);
> #line 5168
>   tmp___2 = _get_ldev_if_state(mdev, D_FAILED);
> #line 5168
>   if (tmp___2 != 0) {
> #line 5169
30888,30893c32943,32946
< #line 4555
<     tmp___4 = __fswab16((int )h->command);
< #line 4555
<     switch ((int )tmp___4) {
<     case 27: 
< #line 4557
---
> #line 5170
>     switch ((unsigned int )pi->cmd) {
>     case 27U: 
> #line 5172
30895,30897c32948,32950
<     case 41: ;
< #line 4559
<     goto ldv_53300;
---
>     case 41U: ;
> #line 5174
>     goto ldv_54142;
30899,30906c32952,32957
< #line 4561
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( 0 ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             4561);
< #line 4562
<     put_ldev(mdev);
< #line 4563
<     return (0);
---
> #line 5176
>     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"),
>                          "i" (5176), "i" (12UL));
>     ldv_54144: ;
> #line 5176
>     goto ldv_54144;
30908,30909c32959,32960
<     ldv_53300: 
< #line 4565
---
>     ldv_54142: 
> #line 5178
30914,30915c32965,32966
< #line 4568
<   return (1);
---
> #line 5181
>   return (0);
30918,30919c32969,32970
< #line 4571 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int got_BarrierAck(struct drbd_conf *mdev , struct p_header80 *h ) 
---
> #line 5184 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int got_BarrierAck(struct drbd_tconn *tconn , struct packet_info *pi ) 
30921a32973,32974
>   struct drbd_conf *mdev ;
>   int vnr ;
30923c32976
<   int tmp___0 ;
---
>   void *tmp___0 ;
30924a32978,32979
>   int tmp___2 ;
>   void *tmp___3 ;
30927,30929c32982,32984
< #line 4573
<   p = (struct p_barrier_ack *)h;
< #line 4575
---
> #line 5186
>   p = (struct p_barrier_ack *)pi->data;
> #line 5190
30931,30943c32986,33009
< #line 4575
<   tl_release(mdev, p->barrier, tmp);
< #line 4577
<   if ((unsigned int )*((unsigned short *)mdev + 1138UL) == 352U) {
< #line 4577
<     tmp___0 = atomic_read((atomic_t const   *)(& mdev->ap_in_flight));
< #line 4577
<     if (tmp___0 == 0) {
< #line 4577
<       tmp___1 = drbd_test_and_set_flag(mdev, AHEAD_TO_SYNC_SOURCE);
< #line 4577
<       if (tmp___1 == 0) {
< #line 4580
---
> #line 5190
>   tl_release(tconn, p->barrier, tmp);
> #line 5192
>   rcu_read_lock___2();
> #line 5193
>   vnr = 0;
> #line 5193
>   tmp___0 = idr_get_next(& tconn->volumes, & vnr);
> #line 5193
>   mdev = (struct drbd_conf *)tmp___0;
> #line 5193
>   goto ldv_54153;
>   ldv_54152: ;
> #line 5194
>   if ((unsigned int )*((unsigned short *)mdev + 374UL) == 352U) {
> #line 5194
>     tmp___1 = atomic_read((atomic_t const   *)(& mdev->ap_in_flight));
> #line 5194
>     if (tmp___1 == 0) {
> #line 5194
>       tmp___2 = test_and_set_bit(19, (unsigned long volatile   *)(& mdev->flags));
> #line 5194
>       if (tmp___2 == 0) {
> #line 5197
30945c33011
< #line 4581
---
> #line 5198
30956,30957c33022,33039
< #line 4584
<   return (1);
---
> #line 5193
>   vnr = vnr + 1;
> #line 5193
>   tmp___3 = idr_get_next(& tconn->volumes, & vnr);
> #line 5193
>   mdev = (struct drbd_conf *)tmp___3;
>   ldv_54153: ;
> #line 5193
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 5194
>     goto ldv_54152;
>   } else {
> 
>   }
> #line 5201
>   rcu_read_unlock___2();
> #line 5203
>   return (0);
30960,30961c33042,33043
< #line 4587 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int got_OVResult(struct drbd_conf *mdev , struct p_header80 *h ) 
---
> #line 5206 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int got_OVResult(struct drbd_tconn *tconn , struct packet_info *pi ) 
30962a33045
>   struct drbd_conf *mdev ;
30972,30974c33055
<   int tmp___4 ;
<   int tmp___5 ;
<   void *tmp___6 ;
---
>   void *tmp___4 ;
30977,30979c33058,33069
< #line 4589
<   p = (struct p_block_ack *)h;
< #line 4594
---
> #line 5209
>   p = (struct p_block_ack *)pi->data;
> #line 5214
>   mdev = vnr_to_mdev(tconn, (int )pi->vnr);
> #line 5215
>   if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
> #line 5216
>     return (-5);
>   } else {
> 
>   }
> #line 5218
30981c33071
< #line 4594
---
> #line 5218
30983c33073
< #line 4595
---
> #line 5219
30985c33075
< #line 4595
---
> #line 5219
30987c33077
< #line 4597
---
> #line 5221
30989c33079
< #line 4597
---
> #line 5221
30991c33081
< #line 4599
---
> #line 5223
30993c33083
< #line 4599
---
> #line 5223
30995,30996c33085,33086
< #line 4600
<     drbd_ov_oos_found(mdev, sector, size);
---
> #line 5224
>     drbd_ov_out_of_sync_found(mdev, sector, size);
30998,30999c33088,33089
< #line 4602
<     ov_oos_print(mdev);
---
> #line 5226
>     ov_out_of_sync_print(mdev);
31001c33091
< #line 4604
---
> #line 5228
31003c33093
< #line 4604
---
> #line 5228
31005,31006c33095,33096
< #line 4605
<     return (1);
---
> #line 5229
>     return (0);
31010c33100
< #line 4607
---
> #line 5231
31012,31026c33102,33104
< #line 4608
<   atomic_dec(& mdev->rs_pending_cnt);
< #line 4608
<   tmp___5 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
< #line 4608
<   if (tmp___5 < 0) {
< #line 4608
<     tmp___4 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
< #line 4608
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: rs_pending_cnt = %d < 0 !\n",
<             "got_OVResult", 4608, tmp___4);
<   } else {
< 
<   }
< #line 4610
---
> #line 5232
>   _dec_rs_pending(mdev, "got_OVResult", 5232);
> #line 5234
31028c33106
< #line 4613
---
> #line 5237
31030c33108
< #line 4614
---
> #line 5238
31035c33113
< #line 4616
---
> #line 5240
31037,31041c33115,33119
< #line 4617
<     tmp___6 = kmalloc(24UL, 16U);
< #line 4617
<     w = (struct drbd_work *)tmp___6;
< #line 4618
---
> #line 5241
>     tmp___4 = kmalloc(32UL, 16U);
> #line 5241
>     w = (struct drbd_work *)tmp___4;
> #line 5242
31043c33121
< #line 4619
---
> #line 5243
31045,31046c33123,33126
< #line 4620
<       drbd_queue_work_front(& mdev->data.work, w);
---
> #line 5244
>       w->ldv_49807.mdev = mdev;
> #line 5245
>       drbd_queue_work(& (mdev->tconn)->sender_work, w);
31048c33128
< #line 4622
---
> #line 5247
31050,31052c33130,33132
< #line 4623
<       ov_oos_print(mdev);
< #line 4624
---
> #line 5248
>       ov_out_of_sync_print(mdev);
> #line 5249
31058c33138
< #line 4627
---
> #line 5252
31060,31061c33140,33141
< #line 4628
<   return (1);
---
> #line 5253
>   return (0);
31064,31065c33144,33145
< #line 4631 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static int got_skip(struct drbd_conf *mdev , struct p_header80 *h ) 
---
> #line 5256 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int got_skip(struct drbd_tconn *tconn , struct packet_info *pi ) 
31070,31071c33150,33151
< #line 4633
<   return (1);
---
> #line 5258
>   return (0);
31074,31075c33154,33155
< #line 4641 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< static struct asender_cmd *get_asender_cmd(int cmd ) 
---
> #line 5261 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static int tconn_finish_peer_reqs(struct drbd_tconn *tconn ) 
31077c33157,33166
<   struct asender_cmd asender_tbl[43U] ;
---
>   struct drbd_conf *mdev ;
>   int vnr ;
>   int not_empty ;
>   struct task_struct *tmp ;
>   void *tmp___0 ;
>   int tmp___1 ;
>   void *tmp___2 ;
>   void *tmp___3 ;
>   int tmp___4 ;
>   void *tmp___5 ;
31080,31256c33169,33200
< #line 4643
<   asender_tbl[0].pkt_size = 0UL;
< #line 4643
<   asender_tbl[0].process = 0;
< #line 4643
<   asender_tbl[1].pkt_size = 0UL;
< #line 4643
<   asender_tbl[1].process = 0;
< #line 4643
<   asender_tbl[2].pkt_size = 0UL;
< #line 4643
<   asender_tbl[2].process = 0;
< #line 4643
<   asender_tbl[3].pkt_size = 0UL;
< #line 4643
<   asender_tbl[3].process = 0;
< #line 4643
<   asender_tbl[4].pkt_size = 0UL;
< #line 4643
<   asender_tbl[4].process = 0;
< #line 4643
<   asender_tbl[5].pkt_size = 0UL;
< #line 4643
<   asender_tbl[5].process = 0;
< #line 4643
<   asender_tbl[6].pkt_size = 0UL;
< #line 4643
<   asender_tbl[6].process = 0;
< #line 4643
<   asender_tbl[7].pkt_size = 0UL;
< #line 4643
<   asender_tbl[7].process = 0;
< #line 4643
<   asender_tbl[8].pkt_size = 0UL;
< #line 4643
<   asender_tbl[8].process = 0;
< #line 4643
<   asender_tbl[9].pkt_size = 0UL;
< #line 4643
<   asender_tbl[9].process = 0;
< #line 4643
<   asender_tbl[10].pkt_size = 0UL;
< #line 4643
<   asender_tbl[10].process = 0;
< #line 4643
<   asender_tbl[11].pkt_size = 0UL;
< #line 4643
<   asender_tbl[11].process = 0;
< #line 4643
<   asender_tbl[12].pkt_size = 0UL;
< #line 4643
<   asender_tbl[12].process = 0;
< #line 4643
<   asender_tbl[13].pkt_size = 0UL;
< #line 4643
<   asender_tbl[13].process = 0;
< #line 4643
<   asender_tbl[14].pkt_size = 0UL;
< #line 4643
<   asender_tbl[14].process = 0;
< #line 4643
<   asender_tbl[15].pkt_size = 0UL;
< #line 4643
<   asender_tbl[15].process = 0;
< #line 4643
<   asender_tbl[16].pkt_size = 0UL;
< #line 4643
<   asender_tbl[16].process = 0;
< #line 4643
<   asender_tbl[17].pkt_size = 0UL;
< #line 4643
<   asender_tbl[17].process = 0;
< #line 4643
<   asender_tbl[18].pkt_size = 0UL;
< #line 4643
<   asender_tbl[18].process = 0;
< #line 4643
<   asender_tbl[19].pkt_size = 8UL;
< #line 4643
<   asender_tbl[19].process = & got_Ping;
< #line 4643
<   asender_tbl[20].pkt_size = 8UL;
< #line 4643
<   asender_tbl[20].process = & got_PingAck;
< #line 4643
<   asender_tbl[21].pkt_size = 32UL;
< #line 4643
<   asender_tbl[21].process = & got_BlockAck;
< #line 4643
<   asender_tbl[22].pkt_size = 32UL;
< #line 4643
<   asender_tbl[22].process = & got_BlockAck;
< #line 4643
<   asender_tbl[23].pkt_size = 32UL;
< #line 4643
<   asender_tbl[23].process = & got_BlockAck;
< #line 4643
<   asender_tbl[24].pkt_size = 32UL;
< #line 4643
<   asender_tbl[24].process = & got_BlockAck;
< #line 4643
<   asender_tbl[25].pkt_size = 32UL;
< #line 4643
<   asender_tbl[25].process = & got_NegAck;
< #line 4643
<   asender_tbl[26].pkt_size = 32UL;
< #line 4643
<   asender_tbl[26].process = & got_NegDReply;
< #line 4643
<   asender_tbl[27].pkt_size = 32UL;
< #line 4643
<   asender_tbl[27].process = & got_NegRSDReply;
< #line 4643
<   asender_tbl[28].pkt_size = 16UL;
< #line 4643
<   asender_tbl[28].process = & got_BarrierAck;
< #line 4643
<   asender_tbl[29].pkt_size = 12UL;
< #line 4643
<   asender_tbl[29].process = & got_RqSReply;
< #line 4643
<   asender_tbl[30].pkt_size = 0UL;
< #line 4643
<   asender_tbl[30].process = 0;
< #line 4643
<   asender_tbl[31].pkt_size = 0UL;
< #line 4643
<   asender_tbl[31].process = 0;
< #line 4643
<   asender_tbl[32].pkt_size = 32UL;
< #line 4643
<   asender_tbl[32].process = & got_OVResult;
< #line 4643
<   asender_tbl[33].pkt_size = 0UL;
< #line 4643
<   asender_tbl[33].process = 0;
< #line 4643
<   asender_tbl[34].pkt_size = 32UL;
< #line 4643
<   asender_tbl[34].process = & got_IsInSync;
< #line 4643
<   asender_tbl[35].pkt_size = 0UL;
< #line 4643
<   asender_tbl[35].process = 0;
< #line 4643
<   asender_tbl[36].pkt_size = 0UL;
< #line 4643
<   asender_tbl[36].process = 0;
< #line 4643
<   asender_tbl[37].pkt_size = 0UL;
< #line 4643
<   asender_tbl[37].process = 0;
< #line 4643
<   asender_tbl[38].pkt_size = 0UL;
< #line 4643
<   asender_tbl[38].process = 0;
< #line 4643
<   asender_tbl[39].pkt_size = 16UL;
< #line 4643
<   asender_tbl[39].process = & got_skip;
< #line 4643
<   asender_tbl[40].pkt_size = 0UL;
< #line 4643
<   asender_tbl[40].process = 0;
< #line 4643
<   asender_tbl[41].pkt_size = 32UL;
< #line 4643
<   asender_tbl[41].process = & got_NegRSDReply;
< #line 4643
<   asender_tbl[42].pkt_size = 0UL;
< #line 4643
<   asender_tbl[42].process = 0;
< #line 4664
<   if (cmd > 42 || (unsigned long )asender_tbl[cmd].process == (unsigned long )((int (*)(struct drbd_conf * ,
<                                                                                         struct p_header80 * ))0)) {
< #line 4665
<     return (0);
---
> #line 5264
>   not_empty = 0;
>   ldv_54181: 
> #line 5267
>   clear_bit(3, (unsigned long volatile   *)(& tconn->flags));
> #line 5268
>   tmp = get_current();
> #line 5268
>   flush_signals(tmp);
> #line 5270
>   rcu_read_lock___2();
> #line 5271
>   vnr = 0;
> #line 5271
>   tmp___0 = idr_get_next(& tconn->volumes, & vnr);
> #line 5271
>   mdev = (struct drbd_conf *)tmp___0;
> #line 5271
>   goto ldv_54176;
>   ldv_54175: 
> #line 5272
>   kref_get(& mdev->kref);
> #line 5273
>   rcu_read_unlock___2();
> #line 5274
>   tmp___1 = drbd_finish_peer_reqs(mdev);
> #line 5274
>   if (tmp___1 != 0) {
> #line 5275
>     kref_put(& mdev->kref, & drbd_minor_destroy);
> #line 5276
>     return (1);
31260,31261c33204,33274
< #line 4666
<   return ((struct asender_cmd *)(& asender_tbl) + (unsigned long )cmd);
---
> #line 5278
>   kref_put(& mdev->kref, & drbd_minor_destroy);
> #line 5279
>   rcu_read_lock___2();
> #line 5271
>   vnr = vnr + 1;
> #line 5271
>   tmp___2 = idr_get_next(& tconn->volumes, & vnr);
> #line 5271
>   mdev = (struct drbd_conf *)tmp___2;
>   ldv_54176: ;
> #line 5271
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 5272
>     goto ldv_54175;
>   } else {
> 
>   }
> #line 5281
>   set_bit(3U, (unsigned long volatile   *)(& tconn->flags));
> #line 5283
>   spin_lock_irq(& tconn->req_lock);
> #line 5284
>   vnr = 0;
> #line 5284
>   tmp___3 = idr_get_next(& tconn->volumes, & vnr);
> #line 5284
>   mdev = (struct drbd_conf *)tmp___3;
> #line 5284
>   goto ldv_54180;
>   ldv_54179: 
> #line 5285
>   tmp___4 = list_empty((struct list_head  const  *)(& mdev->done_ee));
> #line 5285
>   not_empty = tmp___4 == 0;
> #line 5286
>   if (not_empty != 0) {
> #line 5287
>     goto ldv_54178;
>   } else {
> 
>   }
> #line 5284
>   vnr = vnr + 1;
> #line 5284
>   tmp___5 = idr_get_next(& tconn->volumes, & vnr);
> #line 5284
>   mdev = (struct drbd_conf *)tmp___5;
>   ldv_54180: ;
> #line 5284
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 5285
>     goto ldv_54179;
>   } else {
> 
>   }
>   ldv_54178: 
> #line 5289
>   spin_unlock_irq(& tconn->req_lock);
> #line 5290
>   rcu_read_unlock___2();
> #line 5291
>   if (not_empty != 0) {
> #line 5292
>     goto ldv_54181;
>   } else {
> 
>   }
> 
> #line 5293
>   return (0);
31264c33277,33325
< #line 4669 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 5301 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> static struct asender_cmd asender_tbl[45U]  = 
> #line 5301
>   {      {0UL, 0}, 
>         {0UL, 0}, 
>         {0UL, 0}, 
>         {0UL, 0}, 
>         {0UL, 0}, 
>         {0UL, 0}, 
>         {0UL, 0}, 
>         {0UL, 0}, 
>         {0UL, 0}, 
>         {0UL, 0}, 
>         {0UL, 0}, 
>         {0UL, 0}, 
>         {0UL, 0}, 
>         {0UL, 0}, 
>         {0UL, 0}, 
>         {0UL, 0}, 
>         {0UL, 0}, 
>         {0UL, 0}, 
>         {0UL, 0}, 
>         {0UL, & got_Ping}, 
>         {0UL, & got_PingAck}, 
>         {24UL, & got_BlockAck}, 
>         {24UL, & got_BlockAck}, 
>         {24UL, & got_BlockAck}, 
>         {24UL, & got_BlockAck}, 
>         {24UL, & got_NegAck}, 
>         {24UL, & got_NegDReply}, 
>         {24UL, & got_NegRSDReply}, 
>         {8UL, & got_BarrierAck}, 
>         {4UL, & got_RqSReply}, 
>         {0UL, 0}, 
>         {0UL, 0}, 
>         {24UL, & got_OVResult}, 
>         {0UL, 0}, 
>         {24UL, & got_IsInSync}, 
>         {0UL, 0}, 
>         {0UL, 0}, 
>         {0UL, 0}, 
>         {0UL, 0}, 
>         {8UL, & got_skip}, 
>         {0UL, 0}, 
>         {24UL, & got_NegRSDReply}, 
>         {0UL, 0}, 
>         {4UL, & got_conn_RqSReply}, 
>         {24UL, & got_BlockAck}};
> #line 5321 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
31267,31268c33328
<   struct drbd_conf *mdev ;
<   struct p_header80 *h ;
---
>   struct drbd_tconn *tconn ;
31269a33330
>   struct packet_info pi ;
31271d33331
<   int len ;
31274,31276c33334
<   int expect ;
<   int empty ;
<   int ping_timeout_active ;
---
>   unsigned int header_size ;
31277a33336,33341
>   int expect ;
>   bool ping_timeout_active ;
>   struct net_conf *nc ;
>   int ping_timeo ;
>   int tcp_cork ;
>   int ping_int ;
31280,31281c33344,33346
<   struct task_struct *tmp___2 ;
<   int _b ;
---
>   struct net_conf *_________p1 ;
>   bool __warned ;
>   int tmp___2 ;
31285,31289c33350,33353
<   struct task_struct *tmp___6 ;
<   int tmp___7 ;
<   struct task_struct *tmp___8 ;
<   int tmp___9 ;
<   struct task_struct *tmp___10 ;
---
>   int tmp___6 ;
>   struct task_struct *tmp___7 ;
>   int tmp___8 ;
>   struct task_struct *tmp___9 ;
31290a33355,33358
>   struct net_conf *_________p1___0 ;
>   bool __warned___0 ;
>   int tmp___10 ;
>   int tmp___11 ;
31293,31309c33361,33368
<   struct task_struct *tmp___11 ;
<   int tmp___12 ;
<   long tmp___13 ;
<   __u16 tmp___14 ;
<   __u16 tmp___15 ;
<   __u32 tmp___16 ;
<   long tmp___17 ;
<   __u16 tmp___18 ;
<   __u16 tmp___19 ;
<   __u16 tmp___20 ;
<   __u16 tmp___21 ;
<   __u32 tmp___22 ;
<   long tmp___23 ;
<   int _b___0 ;
<   int tmp___24 ;
<   struct asender_cmd *tmp___25 ;
<   enum drbd_thread_state tmp___26 ;
---
>   struct task_struct *tmp___12 ;
>   int tmp___13 ;
>   long tmp___14 ;
>   int tmp___15 ;
>   char const   *tmp___16 ;
>   bool err ;
>   int tmp___17 ;
>   enum drbd_thread_state tmp___18 ;
31316,31320c33375,33377
< #line 4671
<   mdev = thi->mdev;
< #line 4672
<   h = & mdev->meta.rbuf.header.h80;
< #line 4673
---
> #line 5323
>   tconn = thi->tconn;
> #line 5324
31322,31324c33379,33381
< #line 4676
<   buf = (void *)h;
< #line 4677
---
> #line 5327
>   buf = tconn->meta.rbuf;
> #line 5328
31326,31328c33383,33389
< #line 4678
<   expect = 8;
< #line 4680
---
> #line 5329
>   tmp = drbd_header_size(tconn);
> #line 5329
>   header_size = tmp;
> #line 5330
>   expect = (int )header_size;
> #line 5331
31330,31332c33391
< #line 4682
<   tmp = mdev_to_minor(mdev);
< #line 4682
---
> #line 5335
31334,31336c33393,33395
< #line 4682
<   sprintf((char *)(& tmp___0->comm), "drbd%d_asender", tmp);
< #line 4684
---
> #line 5335
>   tmp___0->policy = 2U;
> #line 5336
31338,31369c33397,33420
< #line 4684
<   tmp___1->policy = 2U;
< #line 4685
<   tmp___2 = get_current();
< #line 4685
<   tmp___2->rt_priority = 2U;
< #line 4687
<   goto ldv_53351;
<   ldv_53368: 
< #line 4688
<   drbd_thread_current_set_cpu(mdev);
< #line 4689
<   tmp___4 = drbd_test_and_clear_flag(mdev, SEND_PING);
< #line 4689
<   if (tmp___4 != 0) {
< #line 4690
<     tmp___3 = drbd_send_ping(mdev);
< #line 4690
<     _b = tmp___3 == 0;
< #line 4690
<     if (_b != 0) {
< #line 4690
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<               "drbd_asender", (char *)"!drbd_send_ping(mdev)", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<               4690);
<     } else {
< 
<     }
< #line 4690
<     if (_b != 0) {
< #line 4690
<       goto reconnect;
---
> #line 5336
>   tmp___1->rt_priority = 2U;
> #line 5338
>   goto ldv_54209;
>   ldv_54230: 
> #line 5339
>   drbd_thread_current_set_cpu(thi);
> #line 5341
>   rcu_read_lock___2();
> #line 5342
>   _________p1 = *((struct net_conf * volatile  *)(& tconn->net_conf));
> #line 5342
>   tmp___2 = debug_lockdep_rcu_enabled();
> #line 5342
>   if (tmp___2 != 0 && ! __warned) {
> #line 5342
>     tmp___3 = rcu_read_lock_held();
> #line 5342
>     if (tmp___3 == 0 && 1) {
> #line 5342
>       __warned = 1;
> #line 5342
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>                              5342, "suspicious rcu_dereference_check() usage");
31373,31376d33423
< #line 4691
<     ((mdev->meta.socket)->sk)->sk_rcvtimeo = (long )(((mdev->net_conf)->ping_timeo * 250) / 10);
< #line 4693
<     ping_timeout_active = 1;
31380,31387c33427,33448
< #line 4698
<   if ((unsigned int )*((unsigned char *)mdev->net_conf + 540UL) == 0U) {
< #line 4698
<     tmp___5 = atomic_read((atomic_t const   *)(& mdev->unacked_cnt));
< #line 4698
<     if (tmp___5 > 3) {
< #line 4700
<       drbd_tcp_cork(mdev->meta.socket);
---
> #line 5342
>   nc = _________p1;
> #line 5343
>   ping_timeo = (int )nc->ping_timeo;
> #line 5344
>   tcp_cork = (int )nc->tcp_cork;
> #line 5345
>   ping_int = (int )nc->ping_int;
> #line 5346
>   rcu_read_unlock___2();
> #line 5348
>   tmp___5 = test_and_clear_bit(2, (unsigned long volatile   *)(& tconn->flags));
> #line 5348
>   if (tmp___5 != 0) {
> #line 5349
>     tmp___4 = drbd_send_ping(tconn);
> #line 5349
>     if (tmp___4 != 0) {
> #line 5350
>       printk("\vd-con %s: drbd_send_ping has failed\n", tconn->name);
> #line 5351
>       goto reconnect;
31390a33452,33455
> #line 5353
>     ((tconn->meta.socket)->sk)->sk_rcvtimeo = (long )((ping_timeo * 250) / 10);
> #line 5354
>     ping_timeout_active = 1;
31394,31406c33459,33462
<   ldv_53350: 
< #line 4702
<   drbd_clear_flag(mdev, SIGNAL_ASENDER);
< #line 4703
<   tmp___6 = get_current();
< #line 4703
<   flush_signals(tmp___6);
< #line 4704
<   tmp___7 = drbd_process_done_ee(mdev);
< #line 4704
<   if (tmp___7 == 0) {
< #line 4705
<     goto reconnect;
---
> #line 5359
>   if (tcp_cork != 0) {
> #line 5360
>     drbd_tcp_cork___0(tconn->meta.socket);
31410,31421c33466,33473
< #line 4707
<   drbd_set_flag(mdev, SIGNAL_ASENDER);
< #line 4708
<   spin_lock_irq(& mdev->req_lock);
< #line 4709
<   empty = list_empty((struct list_head  const  *)(& mdev->done_ee));
< #line 4710
<   spin_unlock_irq(& mdev->req_lock);
< #line 4714
<   if (empty != 0) {
< #line 4715
<     goto ldv_53349;
---
> #line 5361
>   tmp___6 = tconn_finish_peer_reqs(tconn);
> #line 5361
>   if (tmp___6 != 0) {
> #line 5362
>     printk("\vd-con %s: tconn_finish_peer_reqs() failed\n", tconn->name);
> #line 5363
>     goto reconnect;
31425,31431c33477,33480
< #line 4716
<   goto ldv_53350;
<   ldv_53349: ;
< #line 4718
<   if ((unsigned int )*((unsigned char *)mdev->net_conf + 540UL) == 0U) {
< #line 4719
<     drbd_tcp_uncork(mdev->meta.socket);
---
> #line 5366
>   if (tcp_cork != 0) {
> #line 5367
>     drbd_tcp_uncork___0(tconn->meta.socket);
31435,31442c33484,33491
< #line 4722
<   tmp___8 = get_current();
< #line 4722
<   tmp___9 = signal_pending(tmp___8);
< #line 4722
<   if (tmp___9 != 0) {
< #line 4723
<     goto ldv_53351;
---
> #line 5370
>   tmp___7 = get_current();
> #line 5370
>   tmp___8 = signal_pending(tmp___7);
> #line 5370
>   if (tmp___8 != 0) {
> #line 5371
>     goto ldv_54209;
31446,31459c33495,33507
< #line 4725
<   rv = drbd_recv_short(mdev, mdev->meta.socket, buf, (size_t )(expect - received),
<                        0);
< #line 4727
<   drbd_clear_flag(mdev, SIGNAL_ASENDER);
< #line 4729
<   tmp___10 = get_current();
< #line 4729
<   flush_signals(tmp___10);
< #line 4741
<   tmp___13 = __builtin_expect(rv > 0, 1L);
< #line 4741
<   if (tmp___13 != 0L) {
< #line 4742
---
> #line 5373
>   rv = drbd_recv_short(tconn->meta.socket, buf, (size_t )(expect - received), 0);
> #line 5374
>   clear_bit(3, (unsigned long volatile   *)(& tconn->flags));
> #line 5376
>   tmp___9 = get_current();
> #line 5376
>   flush_signals(tmp___9);
> #line 5388
>   tmp___14 = __builtin_expect(rv > 0, 1L);
> #line 5388
>   if (tmp___14 != 0L) {
> #line 5389
31461c33509
< #line 4743
---
> #line 5390
31464c33512
< #line 4744
---
> #line 5391
31466,31476c33514,33551
< #line 4745
<     tmp___12 = drbd_test_flag(mdev, DISCONNECT_SENT);
< #line 4745
<     if (tmp___12 != 0) {
< #line 4747
<       __ret = (long )(((mdev->net_conf)->ping_timeo * 250) / 10);
< #line 4747
<       if ((int )mdev->state.ldv_39979.conn > 9) {
< #line 4747
<         tmp___11 = get_current();
< #line 4747
---
> #line 5392
>     tmp___13 = constant_test_bit(12U, (unsigned long const volatile   *)(& tconn->flags));
> #line 5392
>     if (tmp___13 != 0) {
> #line 5394
>       rcu_read_lock___2();
> #line 5395
>       _________p1___0 = *((struct net_conf * volatile  *)(& tconn->net_conf));
> #line 5395
>       tmp___10 = debug_lockdep_rcu_enabled();
> #line 5395
>       if (tmp___10 != 0 && ! __warned___0) {
> #line 5395
>         tmp___11 = rcu_read_lock_held();
> #line 5395
>         if (tmp___11 == 0 && 1) {
> #line 5395
>           __warned___0 = 1;
> #line 5395
>           lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
>                                  5395, "suspicious rcu_dereference_check() usage");
>         } else {
> 
>         }
>       } else {
> 
>       }
> #line 5395
>       t = (long )((_________p1___0->ping_timeo * 250U) / 10U);
> #line 5396
>       rcu_read_unlock___2();
> #line 5398
>       __ret = t;
> #line 5398
>       if ((unsigned int )tconn->cstate > 8U) {
> #line 5398
>         tmp___12 = get_current();
> #line 5398
31478,31480c33553,33555
< #line 4747
<         __wait.private = (void *)tmp___11;
< #line 4747
---
> #line 5398
>         __wait.private = (void *)tmp___12;
> #line 5398
31482c33557
< #line 4747
---
> #line 5398
31484c33559
< #line 4747
---
> #line 5398
31486,31492c33561,33567
<         ldv_53356: 
< #line 4747
<         prepare_to_wait(& mdev->state_wait, & __wait, 2);
< #line 4747
<         if ((int )mdev->state.ldv_39979.conn <= 9) {
< #line 4747
<           goto ldv_53355;
---
>         ldv_54217: 
> #line 5398
>         prepare_to_wait(& tconn->ping_wait, & __wait, 2);
> #line 5398
>         if ((unsigned int )tconn->cstate <= 8U) {
> #line 5398
>           goto ldv_54216;
31496c33571
< #line 4747
---
> #line 5398
31498c33573
< #line 4747
---
> #line 5398
31500,31501c33575,33576
< #line 4747
<           goto ldv_53355;
---
> #line 5398
>           goto ldv_54216;
31505,31509c33580,33584
< #line 4747
<         goto ldv_53356;
<         ldv_53355: 
< #line 4747
<         finish_wait(& mdev->state_wait, & __wait);
---
> #line 5398
>         goto ldv_54217;
>         ldv_54216: 
> #line 5398
>         finish_wait(& tconn->ping_wait, & __wait);
31513c33588
< #line 4747
---
> #line 5398
31515c33590
< #line 4749
---
> #line 5401
31517,31518c33592,33593
< #line 4750
<         goto ldv_53358;
---
> #line 5402
>         goto ldv_54219;
31525,31527c33600,33602
< #line 4752
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "meta connection shut down by peer.\n");
< #line 4753
---
> #line 5404
>     printk("\vd-con %s: meta connection shut down by peer.\n", tconn->name);
> #line 5405
31530c33605
< #line 4754
---
> #line 5406
31532,31535c33607,33610
< #line 4757
<     if ((1 != 0 && 1 != 0) && (long )((unsigned long )jiffies - (unsigned long )((mdev->meta.socket)->sk)->sk_rcvtimeo) - (long )mdev->last_received < 0L) {
< #line 4759
<       goto ldv_53351;
---
> #line 5409
>     if ((1 != 0 && 1 != 0) && (long )((unsigned long )jiffies - (unsigned long )((tconn->meta.socket)->sk)->sk_rcvtimeo) - (long )tconn->last_received < 0L) {
> #line 5411
>       goto ldv_54209;
31539,31543c33614,33618
< #line 4760
<     if (ping_timeout_active != 0) {
< #line 4761
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "PingAck did not arrive in time.\n");
< #line 4762
---
> #line 5412
>     if ((int )ping_timeout_active) {
> #line 5413
>       printk("\vd-con %s: PingAck did not arrive in time.\n", tconn->name);
> #line 5414
31548,31551c33623,33626
< #line 4764
<     drbd_set_flag(mdev, SEND_PING);
< #line 4765
<     goto ldv_53351;
---
> #line 5416
>     set_bit(2U, (unsigned long volatile   *)(& tconn->flags));
> #line 5417
>     goto ldv_54209;
31553c33628
< #line 4766
---
> #line 5418
31555,31556c33630,33631
< #line 4767
<     goto ldv_53351;
---
> #line 5419
>     goto ldv_54209;
31558,31561c33633,33635
< #line 4769
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "sock_recvmsg returned %d\n",
<             rv);
< #line 4770
---
> #line 5421
>     printk("\vd-con %s: sock_recvmsg returned %d\n", tconn->name, rv);
> #line 5422
31564c33638
< #line 4773
---
> #line 5425
31566,31579c33640,33644
< #line 4774
<     tmp___17 = __builtin_expect(h->magic != 1728214147U, 0L);
< #line 4774
<     if (tmp___17 != 0L) {
< #line 4775
<       tmp___14 = __fswab16((int )h->length);
< #line 4775
<       tmp___15 = __fswab16((int )h->command);
< #line 4775
<       tmp___16 = __fswab32(h->magic);
< #line 4775
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "magic?? on meta m: 0x%08x c: %d l: %d\n",
<               tmp___16, (int )tmp___15, (int )tmp___14);
< #line 4779
---
> #line 5426
>     tmp___15 = decode_header(tconn, tconn->meta.rbuf, & pi);
> #line 5426
>     if (tmp___15 != 0) {
> #line 5427
31584,31606c33649,33659
< #line 4781
<     tmp___18 = __fswab16((int )h->command);
< #line 4781
<     cmd = get_asender_cmd((int )tmp___18);
< #line 4782
<     tmp___19 = __fswab16((int )h->length);
< #line 4782
<     len = (int )tmp___19;
< #line 4783
<     tmp___23 = __builtin_expect((unsigned long )cmd == (unsigned long )((struct asender_cmd *)0),
<                                 0L);
< #line 4783
<     if (tmp___23 != 0L) {
< #line 4784
<       tmp___20 = __fswab16((int )h->length);
< #line 4784
<       tmp___21 = __fswab16((int )h->command);
< #line 4784
<       tmp___22 = __fswab32(h->magic);
< #line 4784
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "unknown command?? on meta m: 0x%08x c: %d l: %d\n",
<               tmp___22, (int )tmp___21, (int )tmp___20);
< #line 4788
---
> #line 5428
>     cmd = (struct asender_cmd *)(& asender_tbl) + (unsigned long )pi.cmd;
> #line 5429
>     if ((unsigned int )pi.cmd > (unsigned int )P_RETRY_WRITE || (unsigned long )cmd->fn == (unsigned long )((int (*)(struct drbd_tconn * ,
>                                                                                                                      struct packet_info * ))0)) {
> #line 5430
>       tmp___16 = cmdname(pi.cmd);
> #line 5430
>       printk("\vd-con %s: Unexpected meta packet %s (0x%04x)\n", tconn->name, tmp___16,
>              (unsigned int )pi.cmd);
> #line 5432
31611,31626c33664,33671
< #line 4790
<     expect = (int )cmd->pkt_size;
< #line 4791
<     _b___0 = (unsigned long )len != (unsigned long )expect - 8UL;
< #line 4791
<     if (_b___0 != 0) {
< #line 4791
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<               "drbd_asender", (char *)"len != expect-sizeof(struct p_header80)", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<               4791);
<     } else {
< 
<     }
< #line 4791
<     if (_b___0 != 0) {
< #line 4792
---
> #line 5434
>     expect = (int )((unsigned int )cmd->pkt_size + header_size);
> #line 5435
>     if (pi.size != (unsigned int )expect - header_size) {
> #line 5436
>       printk("\vd-con %s: Wrong packet size on meta (c: %d, l: %d)\n", tconn->name,
>              (unsigned int )pi.cmd, pi.size);
> #line 5438
31634c33679
< #line 4794
---
> #line 5441
31636,31651c33681,33689
< #line 4795
<     mdev->last_received = jiffies;
< #line 4796
<     if ((unsigned long )cmd == (unsigned long )((struct asender_cmd *)0)) {
< #line 4796
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( cmd != NULL ) in %s:%d\n",
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<               4796);
<     } else {
< 
<     }
< #line 4797
<     tmp___24 = (*(cmd->process))(mdev, h);
< #line 4797
<     if (tmp___24 == 0) {
< #line 4798
---
> #line 5444
>     tmp___17 = (*(cmd->fn))(tconn, & pi);
> #line 5444
>     err = tmp___17 != 0;
> #line 5445
>     if ((int )err) {
> #line 5446
>       printk("\vd-con %s: %pf failed\n", tconn->name, cmd->fn);
> #line 5447
31656,31660c33694,33700
< #line 4802
<     tmp___25 = get_asender_cmd(20);
< #line 4802
<     if ((unsigned long )tmp___25 == (unsigned long )cmd) {
< #line 4803
---
> #line 5450
>     tconn->last_received = jiffies;
> #line 5452
>     if ((unsigned long )cmd == (unsigned long )((struct asender_cmd *)(& asender_tbl) + 20UL)) {
> #line 5454
>       ((tconn->meta.socket)->sk)->sk_rcvtimeo = (long )(ping_int * 250);
> #line 5455
31665,31667c33705,33707
< #line 4805
<     buf = (void *)h;
< #line 4806
---
> #line 5458
>     buf = tconn->meta.rbuf;
> #line 5459
31669,31671c33709,33711
< #line 4807
<     expect = 8;
< #line 4808
---
> #line 5460
>     expect = (int )header_size;
> #line 5461
31676,31682c33716,33722
<   ldv_53351: 
< #line 4687
<   tmp___26 = get_t_state(thi);
< #line 4687
<   if ((unsigned int )tmp___26 == 1U) {
< #line 4688
<     goto ldv_53368;
---
>   ldv_54209: 
> #line 5338
>   tmp___18 = get_t_state(thi);
> #line 5338
>   if ((unsigned int )tmp___18 == 1U) {
> #line 5339
>     goto ldv_54230;
31686,31687c33726,33727
<   ldv_53358: ;
< #line 4812
---
>   ldv_54219: ;
> #line 5465
31690c33730
< #line 4814
---
> #line 5467
31692,31694c33732,33734
< #line 4814
<     val.ldv_39979.conn = 5U;
< #line 4814
---
> #line 5467
>     val.ldv_40024.conn = 5U;
> #line 5467
31696,31701c33736,33741
< #line 4814
<     mask.ldv_39979.conn = 31U;
< #line 4814
<     drbd_force_state(mdev, mask, val);
< #line 4815
<     drbd_md_sync(mdev);
---
> #line 5467
>     mask.ldv_40024.conn = 31U;
> #line 5467
>     conn_request_state(tconn, mask, val, CS_HARD);
> #line 5468
>     conn_md_sync(tconn);
31705c33745
< #line 4817
---
> #line 5470
31708c33748
< #line 4819
---
> #line 5472
31710,31712c33750,33752
< #line 4819
<     val___0.ldv_39979.conn = 1U;
< #line 4819
---
> #line 5472
>     val___0.ldv_40024.conn = 1U;
> #line 5472
31714,31730c33754,33757
< #line 4819
<     mask___0.ldv_39979.conn = 31U;
< #line 4819
<     drbd_force_state(mdev, mask___0, val___0);
< #line 4820
<     drbd_md_sync(mdev);
<   } else {
< 
<   }
< #line 4822
<   drbd_clear_flag(mdev, SIGNAL_ASENDER);
< #line 4824
<   if ((int )mdev->state.ldv_39979.conn > 9) {
< #line 4824
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mdev->state.conn < C_CONNECTED ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared",
<             4824);
---
> #line 5472
>     mask___0.ldv_40024.conn = 31U;
> #line 5472
>     conn_request_state(tconn, mask___0, val___0, CS_HARD);
31734,31736c33761,33765
< #line 4825
<   _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "asender terminated\n");
< #line 4827
---
> #line 5474
>   clear_bit(3, (unsigned long volatile   *)(& tconn->flags));
> #line 5476
>   printk("\016d-con %s: asender terminated\n", tconn->name);
> #line 5478
31740c33769
< #line 4867 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 5518 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
31747c33776
< #line 4879
---
> #line 5530
31749c33778
< #line 4888
---
> #line 5539
31751,31754c33780,33783
< #line 4890
<   goto ldv_53396;
<   ldv_53395: 
< #line 4893
---
> #line 5541
>   goto ldv_54258;
>   ldv_54257: 
> #line 5544
31756c33785
< #line 4893
---
> #line 5544
31759,31760c33788,33789
< #line 4895
<   goto ldv_53394;
---
> #line 5546
>   goto ldv_54256;
31762,31764c33791,33793
<   ldv_53394: ;
<   ldv_53396: 
< #line 4890
---
>   ldv_54256: ;
>   ldv_54258: 
> #line 5541
31766c33795
< #line 4890
---
> #line 5541
31768,31769c33797,33798
< #line 4891
<     goto ldv_53395;
---
> #line 5542
>     goto ldv_54257;
31775c33804
< #line 4904
---
> #line 5555
31777c33806
< #line 4907
---
> #line 5558
31781,31782c33810,33811
< #line 4911 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< void ldv_mutex_lock_103(struct mutex *ldv_func_arg1 ) 
---
> #line 5562 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> void ldv_mutex_lock_93(struct mutex *ldv_func_arg1 ) 
31787c33816
< #line 4916
---
> #line 5567
31789c33818
< #line 4918
---
> #line 5569
31791c33820
< #line 4919
---
> #line 5570
31795,31796c33824,33825
< #line 4921 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< void ldv_mutex_unlock_104(struct mutex *ldv_func_arg1 ) 
---
> #line 5572 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> void ldv_mutex_unlock_94(struct mutex *ldv_func_arg1 ) 
31801c33830
< #line 4926
---
> #line 5577
31803c33832
< #line 4928
---
> #line 5579
31805c33834
< #line 4929
---
> #line 5580
31809,31810c33838,33839
< #line 4931 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< void ldv_mutex_lock_105(struct mutex *ldv_func_arg1 ) 
---
> #line 5582 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> void ldv_mutex_lock_95(struct mutex *ldv_func_arg1 ) 
31815c33844
< #line 4936
---
> #line 5587
31817c33846
< #line 4938
---
> #line 5589
31819c33848
< #line 4939
---
> #line 5590
31823,31824c33852,33853
< #line 4941 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< int ldv_mutex_trylock_106(struct mutex *ldv_func_arg1 ) 
---
> #line 5592 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> int ldv_mutex_trylock_96(struct mutex *ldv_func_arg1 ) 
31831c33860
< #line 4946
---
> #line 5597
31833c33862
< #line 4946
---
> #line 5597
31835c33864
< #line 4948
---
> #line 5599
31837c33866
< #line 4948
---
> #line 5599
31839c33868
< #line 4950
---
> #line 5601
31843,31844c33872,33873
< #line 4953 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< void ldv_mutex_unlock_107(struct mutex *ldv_func_arg1 ) 
---
> #line 5604 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> void ldv_mutex_unlock_97(struct mutex *ldv_func_arg1 ) 
31849c33878
< #line 4958
---
> #line 5609
31851c33880
< #line 4960
---
> #line 5611
31853c33882
< #line 4961
---
> #line 5612
31857,31858c33886,33887
< #line 4963 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< void ldv_mutex_lock_108(struct mutex *ldv_func_arg1 ) 
---
> #line 5614 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> void ldv_mutex_lock_98(struct mutex *ldv_func_arg1 ) 
31863c33892
< #line 4968
---
> #line 5619
31865c33894
< #line 4970
---
> #line 5621
31867c33896
< #line 4971
---
> #line 5622
31871,31872c33900,33901
< #line 4973 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< void ldv_mutex_unlock_109(struct mutex *ldv_func_arg1 ) 
---
> #line 5624 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> void ldv_mutex_unlock_99(struct mutex *ldv_func_arg1 ) 
31877c33906
< #line 4978
---
> #line 5629
31879c33908
< #line 4980
---
> #line 5631
31881c33910
< #line 4981
---
> #line 5632
31885,31886c33914,33915
< #line 4983 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< void ldv_mutex_lock_110(struct mutex *ldv_func_arg1 ) 
---
> #line 5634 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> void ldv_mutex_lock_100(struct mutex *ldv_func_arg1 ) 
31891c33920
< #line 4988
---
> #line 5639
31893c33922
< #line 4990
---
> #line 5641
31895c33924
< #line 4991
---
> #line 5642
31899,31900c33928,33929
< #line 4993 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< void ldv_mutex_unlock_111(struct mutex *ldv_func_arg1 ) 
---
> #line 5644 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> void ldv_mutex_unlock_101(struct mutex *ldv_func_arg1 ) 
31905c33934
< #line 4998
---
> #line 5649
31907c33936
< #line 5000
---
> #line 5651
31909c33938
< #line 5001
---
> #line 5652
31913,31914c33942,33943
< #line 5003 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< void ldv_mutex_lock_112(struct mutex *ldv_func_arg1 ) 
---
> #line 5654 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> void ldv_mutex_lock_102(struct mutex *ldv_func_arg1 ) 
31919c33948
< #line 5008
---
> #line 5659
31921c33950
< #line 5010
---
> #line 5661
31923c33952
< #line 5011
---
> #line 5662
31927,31928c33956,33957
< #line 5013 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< void ldv_mutex_unlock_113(struct mutex *ldv_func_arg1 ) 
---
> #line 5664 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> void ldv_mutex_unlock_103(struct mutex *ldv_func_arg1 ) 
31933c33962
< #line 5018
---
> #line 5669
31935c33964
< #line 5020
---
> #line 5671
31937c33966
< #line 5021
---
> #line 5672
31941,31942c33970,33971
< #line 5023 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< void ldv_mutex_lock_114(struct mutex *ldv_func_arg1 ) 
---
> #line 5674 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> void ldv_mutex_lock_104(struct mutex *ldv_func_arg1 ) 
31947,31949c33976,33978
< #line 5028
<   ldv_mutex_lock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 5030
---
> #line 5679
>   ldv_mutex_lock_conf_update_of_drbd_tconn(ldv_func_arg1);
> #line 5681
31951c33980
< #line 5031
---
> #line 5682
31955,31956c33984,33985
< #line 5033 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< void ldv_mutex_unlock_115(struct mutex *ldv_func_arg1 ) 
---
> #line 5684 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> void ldv_mutex_unlock_105(struct mutex *ldv_func_arg1 ) 
31961,31963c33990,33992
< #line 5038
<   ldv_mutex_unlock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 5040
---
> #line 5689
>   ldv_mutex_unlock_conf_update_of_drbd_tconn(ldv_func_arg1);
> #line 5691
31965c33994
< #line 5041
---
> #line 5692
31969,31970c33998,33999
< #line 5043 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< void ldv_mutex_unlock_116(struct mutex *ldv_func_arg1 ) 
---
> #line 5694 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> void ldv_mutex_lock_106(struct mutex *ldv_func_arg1 ) 
31975,31979c34004,34008
< #line 5048
<   ldv_mutex_unlock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 5050
<   mutex_unlock(ldv_func_arg1);
< #line 5051
---
> #line 5699
>   ldv_mutex_lock_mutex_of_drbd_socket(ldv_func_arg1);
> #line 5701
>   mutex_lock(ldv_func_arg1);
> #line 5702
31983,31984c34012,34013
< #line 5053 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< int ldv_mutex_lock_interruptible_117(struct mutex *ldv_func_arg1 ) 
---
> #line 5704 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> void ldv_mutex_lock_107(struct mutex *ldv_func_arg1 ) 
31986,31988c34015
<   ldv_func_ret_type___13 ldv_func_res ;
<   int tmp ;
<   int tmp___0 ;
---
> 
31991,32000c34018,34023
< #line 5058
<   tmp = mutex_lock_interruptible(ldv_func_arg1);
< #line 5058
<   ldv_func_res = tmp;
< #line 5060
<   tmp___0 = ldv_mutex_lock_interruptible_mutex_of_drbd_socket(ldv_func_arg1);
< #line 5060
<   return (tmp___0);
< #line 5062
<   return (ldv_func_res);
---
> #line 5709
>   ldv_mutex_lock_conf_update_of_drbd_tconn(ldv_func_arg1);
> #line 5711
>   mutex_lock(ldv_func_arg1);
> #line 5712
>   return;
32003,32004c34026,34027
< #line 5065 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< void ldv_mutex_unlock_118(struct mutex *ldv_func_arg1 ) 
---
> #line 5714 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> void ldv_mutex_unlock_108(struct mutex *ldv_func_arg1 ) 
32009,32011c34032,34034
< #line 5070
<   ldv_mutex_unlock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 5072
---
> #line 5719
>   ldv_mutex_unlock_conf_update_of_drbd_tconn(ldv_func_arg1);
> #line 5721
32013c34036
< #line 5073
---
> #line 5722
32017,32018c34040,34041
< #line 5075 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
< void ldv_mutex_unlock_119(struct mutex *ldv_func_arg1 ) 
---
> #line 5724 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> void ldv_mutex_unlock_109(struct mutex *ldv_func_arg1 ) 
32023c34046
< #line 5080
---
> #line 5729
32025c34048
< #line 5082
---
> #line 5731
32027c34050
< #line 5083
---
> #line 5732
32031,32032c34054,34055
< #line 595 "include/linux/list.h"
< __inline static void hlist_del(struct hlist_node *n ) 
---
> #line 5734 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> void ldv_mutex_lock_110(struct mutex *ldv_func_arg1 ) 
32037,32043c34060,34064
< #line 597
<   __hlist_del(n);
< #line 598
<   n->next = 0xdead000000100100UL;
< #line 599
<   n->pprev = 0xdead000000200200UL;
< #line 600
---
> #line 5739
>   ldv_mutex_lock_conf_update_of_drbd_tconn(ldv_func_arg1);
> #line 5741
>   mutex_lock(ldv_func_arg1);
> #line 5742
32047,32083c34068,34069
< #line 333 "include/linux/lockdep.h"
< extern void lock_acquire(struct lockdep_map * , unsigned int  , int  , int  , int  ,
<                          struct lockdep_map * , unsigned long  ) ;
< #line 337
< extern void lock_release(struct lockdep_map * , int  , unsigned long  ) ;
< #line 573
< extern void lockdep_rcu_suspicious(char const   * , int const    , char const   * ) ;
< #line 171 "include/linux/mutex.h"
< int ldv_mutex_trylock_140(struct mutex *ldv_func_arg1 ) ;
< #line 176
< void ldv_mutex_unlock_138(struct mutex *ldv_func_arg1 ) ;
< #line 180
< void ldv_mutex_unlock_141(struct mutex *ldv_func_arg1 ) ;
< #line 184
< void ldv_mutex_unlock_143(struct mutex *ldv_func_arg1 ) ;
< #line 188
< void ldv_mutex_unlock_145(struct mutex *ldv_func_arg1 ) ;
< #line 192
< void ldv_mutex_unlock_147(struct mutex *ldv_func_arg1 ) ;
< #line 196
< void ldv_mutex_unlock_149(struct mutex *ldv_func_arg1 ) ;
< #line 200
< void ldv_mutex_unlock_150(struct mutex *ldv_func_arg1 ) ;
< #line 10 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
< void ldv_mutex_lock_137(struct mutex *ldv_func_arg1 ) ;
< #line 14
< void ldv_mutex_lock_139(struct mutex *ldv_func_arg1 ) ;
< #line 18
< void ldv_mutex_lock_142(struct mutex *ldv_func_arg1 ) ;
< #line 22
< void ldv_mutex_lock_144(struct mutex *ldv_func_arg1 ) ;
< #line 26
< void ldv_mutex_lock_146(struct mutex *ldv_func_arg1 ) ;
< #line 30
< void ldv_mutex_lock_148(struct mutex *ldv_func_arg1 ) ;
< #line 208 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/thread_info.h"
< __inline static struct thread_info *current_thread_info___1(void) 
---
> #line 5744 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> void ldv_mutex_unlock_111(struct mutex *ldv_func_arg1 ) 
32085,32086c34071
<   struct thread_info *ti ;
<   unsigned long pfo_ret__ ;
---
> 
32089,32119c34074,34079
< #line 211
<   switch (8UL) {
<   case 1UL: 
< #line 211
<   __asm__  ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
< #line 211
<   goto ldv_6294;
<   case 2UL: 
< #line 211
<   __asm__  ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
< #line 211
<   goto ldv_6294;
<   case 4UL: 
< #line 211
<   __asm__  ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
< #line 211
<   goto ldv_6294;
<   case 8UL: 
< #line 211
<   __asm__  ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
< #line 211
<   goto ldv_6294;
<   default: 
< #line 211
<   __bad_percpu_size();
<   }
<   ldv_6294: 
< #line 211
<   ti = (struct thread_info *)(pfo_ret__ - 8152UL);
< #line 213
<   return (ti);
---
> #line 5749
>   ldv_mutex_unlock_conf_update_of_drbd_tconn(ldv_func_arg1);
> #line 5751
>   mutex_unlock(ldv_func_arg1);
> #line 5752
>   return;
32122,32123c34082,34083
< #line 163 "include/linux/rcupdate.h"
< __inline static void __rcu_read_lock(void) 
---
> #line 5754 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> void ldv_mutex_unlock_112(struct mutex *ldv_func_arg1 ) 
32125c34085
<   struct thread_info *tmp ;
---
> 
32128,32134c34088,34092
< #line 165
<   tmp = current_thread_info___1();
< #line 165
<   tmp->preempt_count = tmp->preempt_count + 1;
< #line 165
<   __asm__  volatile   ("": : : "memory");
< #line 166
---
> #line 5759
>   ldv_mutex_unlock_conf_update_of_drbd_tconn(ldv_func_arg1);
> #line 5761
>   mutex_unlock(ldv_func_arg1);
> #line 5762
32138,32139c34096,34097
< #line 168 "include/linux/rcupdate.h"
< __inline static void __rcu_read_unlock(void) 
---
> #line 5764 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> void ldv_mutex_unlock_113(struct mutex *ldv_func_arg1 ) 
32141c34099
<   struct thread_info *tmp ;
---
> 
32144,32152c34102,34106
< #line 170
<   __asm__  volatile   ("": : : "memory");
< #line 170
<   tmp = current_thread_info___1();
< #line 170
<   tmp->preempt_count = tmp->preempt_count + -1;
< #line 170
<   __asm__  volatile   ("": : : "memory");
< #line 171
---
> #line 5769
>   ldv_mutex_unlock_conf_update_of_drbd_tconn(ldv_func_arg1);
> #line 5771
>   mutex_unlock(ldv_func_arg1);
> #line 5772
32156,32159c34110,34111
< #line 273
< extern int rcu_is_cpu_idle(void) ;
< #line 287 "include/linux/rcupdate.h"
< __inline static void rcu_lock_acquire(struct lockdep_map *map ) 
---
> #line 5774 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> void ldv_mutex_unlock_114(struct mutex *ldv_func_arg1 ) 
32164,32166c34116,34120
< #line 289
<   lock_acquire(map, 0U, 0, 2, 1, 0, (unsigned long )((void *)0));
< #line 291
---
> #line 5779
>   ldv_mutex_unlock_conf_update_of_drbd_tconn(ldv_func_arg1);
> #line 5781
>   mutex_unlock(ldv_func_arg1);
> #line 5782
32170,32171c34124,34125
< #line 292 "include/linux/rcupdate.h"
< __inline static void rcu_lock_release(struct lockdep_map *map ) 
---
> #line 5784 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> void ldv_mutex_lock_115(struct mutex *ldv_func_arg1 ) 
32176,32178c34130,34134
< #line 294
<   lock_release(map, 1, (unsigned long )((void *)0));
< #line 296
---
> #line 5789
>   ldv_mutex_lock_conf_update_of_drbd_tconn(ldv_func_arg1);
> #line 5791
>   mutex_lock(ldv_func_arg1);
> #line 5792
32182,32187c34138,34139
< #line 297
< extern struct lockdep_map rcu_lock_map ;
< #line 300
< extern int debug_lockdep_rcu_enabled(void) ;
< #line 732 "include/linux/rcupdate.h"
< __inline static void rcu_read_lock(void) 
---
> #line 5794 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> void ldv_mutex_unlock_116(struct mutex *ldv_func_arg1 ) 
32189,32191c34141
<   bool __warned ;
<   int tmp ;
<   int tmp___0 ;
---
> 
32194,32210c34144,34154
< #line 734
<   __rcu_read_lock();
< #line 736
<   rcu_lock_acquire(& rcu_lock_map);
< #line 737
<   tmp = debug_lockdep_rcu_enabled();
< #line 737
<   if (tmp != 0 && ! __warned) {
< #line 737
<     tmp___0 = rcu_is_cpu_idle();
< #line 737
<     if (tmp___0 != 0) {
< #line 737
<       __warned = 1;
< #line 737
<       lockdep_rcu_suspicious("include/linux/rcupdate.h", 738, "rcu_read_lock() used illegally while idle");
<     } else {
---
> #line 5799
>   ldv_mutex_unlock_conf_update_of_drbd_tconn(ldv_func_arg1);
> #line 5801
>   mutex_unlock(ldv_func_arg1);
> #line 5802
>   return;
> }
> }
> #line 5804 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> void ldv_mutex_lock_117(struct mutex *ldv_func_arg1 ) 
> { 
32212,32213d34155
<     }
<   } else {
32215,32216c34157,34162
<   }
< #line 740
---
>   {
> #line 5809
>   ldv_mutex_lock_state_mutex_of_drbd_conf(ldv_func_arg1);
> #line 5811
>   mutex_lock(ldv_func_arg1);
> #line 5812
32220,32221c34166,34167
< #line 756 "include/linux/rcupdate.h"
< __inline static void rcu_read_unlock(void) 
---
> #line 5814 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> void ldv_mutex_unlock_118(struct mutex *ldv_func_arg1 ) 
32223c34169,34183
<   bool __warned ;
---
> 
> 
>   {
> #line 5819
>   ldv_mutex_unlock_state_mutex_of_drbd_conf(ldv_func_arg1);
> #line 5821
>   mutex_unlock(ldv_func_arg1);
> #line 5822
>   return;
> }
> }
> #line 5824 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> __inline static int ldv_mutex_is_locked_119(struct mutex *lock ) 
> { 
>   ldv_func_ret_type___25 ldv_func_res ;
32228,32240c34188,34205
< #line 758
<   tmp = debug_lockdep_rcu_enabled();
< #line 758
<   if (tmp != 0 && ! __warned) {
< #line 758
<     tmp___0 = rcu_is_cpu_idle();
< #line 758
<     if (tmp___0 != 0) {
< #line 758
<       __warned = 1;
< #line 758
<       lockdep_rcu_suspicious("include/linux/rcupdate.h", 759, "rcu_read_unlock() used illegally while idle");
<     } else {
---
> #line 5829
>   tmp = mutex_is_locked(lock);
> #line 5829
>   ldv_func_res = tmp;
> #line 5831
>   tmp___0 = ldv_mutex_is_locked_state_mutex_of_drbd_conf(lock);
> #line 5831
>   return (tmp___0);
> #line 5833
>   return (ldv_func_res);
> }
> }
> #line 5836 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_receiver.c.prepared"
> __inline static int ldv_mutex_is_locked_120(struct mutex *lock ) 
> { 
>   ldv_func_ret_type___26 ldv_func_res ;
>   int tmp ;
>   int tmp___0 ;
32242,32243c34207,34223
<     }
<   } else {
---
>   {
> #line 5841
>   tmp = mutex_is_locked(lock);
> #line 5841
>   ldv_func_res = tmp;
> #line 5843
>   tmp___0 = ldv_mutex_is_locked_cstate_mutex_of_drbd_tconn(lock);
> #line 5843
>   return (tmp___0);
> #line 5845
>   return (ldv_func_res);
> }
> }
> #line 307 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/bitops.h"
> __inline static int test_and_change_bit(int nr , unsigned long volatile   *addr ) 
> { 
>   int oldbit ;
32245,32251c34225,34230
<   }
< #line 760
<   rcu_lock_release(& rcu_lock_map);
< #line 762
<   __rcu_read_unlock();
< #line 763
<   return;
---
>   {
> #line 311
>   __asm__  volatile   (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; btc %2,%1\n\tsbb %0,%0": "=r" (oldbit),
>                        "+m" (*((long volatile   *)addr)): "Ir" (nr): "memory");
> #line 315
>   return (oldbit);
32253a34233,34254
> #line 171 "include/linux/mutex.h"
> int ldv_mutex_trylock_152(struct mutex *ldv_func_arg1 ) ;
> #line 176
> void ldv_mutex_unlock_150(struct mutex *ldv_func_arg1 ) ;
> #line 180
> void ldv_mutex_unlock_153(struct mutex *ldv_func_arg1 ) ;
> #line 184
> void ldv_mutex_unlock_155(struct mutex *ldv_func_arg1 ) ;
> #line 188
> void ldv_mutex_unlock_157(struct mutex *ldv_func_arg1 ) ;
> #line 192
> void ldv_mutex_unlock_159(struct mutex *ldv_func_arg1 ) ;
> #line 10 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
> void ldv_mutex_lock_149(struct mutex *ldv_func_arg1 ) ;
> #line 14
> void ldv_mutex_lock_151(struct mutex *ldv_func_arg1 ) ;
> #line 18
> void ldv_mutex_lock_154(struct mutex *ldv_func_arg1 ) ;
> #line 22
> void ldv_mutex_lock_156(struct mutex *ldv_func_arg1 ) ;
> #line 26
> void ldv_mutex_lock_158(struct mutex *ldv_func_arg1 ) ;
32257a34259,34270
> #line 31 "include/linux/kref.h"
> __inline static void kref_init(struct kref *kref ) 
> { 
> 
> 
>   {
> #line 33
>   atomic_set(& kref->refcount, 1);
> #line 34
>   return;
> }
> }
32336,32344c34349,34361
< #line 209 "include/linux/bio.h"
< extern struct bio_pair *bio_split(struct bio * , int  ) ;
< #line 210
< extern void bio_pair_release(struct bio_pair * ) ;
< #line 63 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< bool allow_oos ;
< #line 1261
< void _tl_add_barrier(struct drbd_conf *mdev , struct drbd_tl_epoch *new ) ;
< #line 1535
---
> #line 282 "include/linux/backing-dev.h"
> __inline static int bdi_read_congested(struct backing_dev_info *bdi ) 
> { 
>   int tmp ;
> 
>   {
> #line 284
>   tmp = bdi_congested(bdi, 8);
> #line 284
>   return (tmp);
> }
> }
> #line 1369 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
32346c34363,34365
< #line 1578
---
> #line 1421
> void __drbd_make_request(struct drbd_conf *mdev , struct bio *bio , unsigned long start_time ) ;
> #line 1422
32348c34367
< #line 1580
---
> #line 1424
32350c34369
< #line 1890 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1675 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
32353a34373,34375
>   enum drbd_io_error_p ep ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
32354a34377,34378
>   int tmp___0 ;
>   int tmp___1 ;
32359,32362c34383,34413
< #line 1894
<   switch ((mdev->ldev)->dc.on_io_error) {
<   case 0: ;
< #line 1896
---
> #line 1681
>   rcu_read_lock___0();
> #line 1682
>   _________p1 = *((struct disk_conf * volatile  *)(& (mdev->ldev)->disk_conf));
> #line 1682
>   tmp = debug_lockdep_rcu_enabled();
> #line 1682
>   if (tmp != 0 && ! __warned) {
> #line 1682
>     tmp___0 = rcu_read_lock_held();
> #line 1682
>     if (tmp___0 == 0 && 1) {
> #line 1682
>       __warned = 1;
> #line 1682
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h",
>                              1682, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1682
>   ep = (enum drbd_io_error_p )_________p1->on_io_error;
> #line 1683
>   rcu_read_unlock___0();
> #line 1684
>   switch ((unsigned int )ep) {
>   case 0U: ;
> #line 1686
32364,32368c34415,34419
< #line 1897
<     tmp = ___ratelimit(& drbd_ratelimit_state, "__drbd_chk_io_error_");
< #line 1897
<     if (tmp != 0) {
< #line 1898
---
> #line 1687
>     tmp___1 = ___ratelimit(& drbd_ratelimit_state, "__drbd_chk_io_error_");
> #line 1687
>     if (tmp___1 != 0) {
> #line 1688
32374,32380c34425,34431
< #line 1899
<     if ((int )mdev->state.ldv_39979.disk > 4) {
< #line 1900
<       __ns.i = mdev->state.i;
< #line 1900
<       __ns.ldv_39979.disk = 4U;
< #line 1900
---
> #line 1689
>     if ((int )mdev->state.ldv_49522.disk > 4) {
> #line 1690
>       __ns = drbd_read_state(mdev);
> #line 1690
>       __ns.ldv_40024.disk = 4U;
> #line 1690
32385,32386c34436,34437
< #line 1901
<     goto ldv_51031;
---
> #line 1691
>     goto ldv_51571;
32390,32394c34441,34445
<   case 2: ;
<   case 1: 
< #line 1926
<   drbd_set_flag(mdev, WAS_IO_ERROR);
< #line 1927
---
>   case 2U: ;
>   case 1U: 
> #line 1716
>   set_bit(12U, (unsigned long volatile   *)(& mdev->flags));
> #line 1717
32396,32397c34447,34448
< #line 1928
<     drbd_set_flag(mdev, WAS_READ_ERROR);
---
> #line 1718
>     set_bit(13U, (unsigned long volatile   *)(& mdev->flags));
32401c34452
< #line 1929
---
> #line 1719
32403,32404c34454,34455
< #line 1930
<     drbd_set_flag(mdev, FORCE_DETACH);
---
> #line 1720
>     set_bit(14U, (unsigned long volatile   *)(& mdev->flags));
32408,32414c34459,34465
< #line 1931
<   if ((int )mdev->state.ldv_39979.disk > 2) {
< #line 1932
<     __ns___0.i = mdev->state.i;
< #line 1932
<     __ns___0.ldv_39979.disk = 2U;
< #line 1932
---
> #line 1721
>   if ((int )mdev->state.ldv_49522.disk > 2) {
> #line 1722
>     __ns___0 = drbd_read_state(mdev);
> #line 1722
>     __ns___0.ldv_40024.disk = 2U;
> #line 1722
32416c34467
< #line 1933
---
> #line 1723
32422,32423c34473,34474
< #line 1936
<   goto ldv_51031;
---
> #line 1726
>   goto ldv_51571;
32425,32426c34476,34477
<   ldv_51031: ;
< #line 1939
---
>   ldv_51571: ;
> #line 1729
32430c34481
< #line 2157 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1969 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
32436c34487
< #line 2159
---
> #line 1971
32438c34489,34523
< #line 2160
---
> #line 1972
>   return;
> }
> }
> #line 1981 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static void _dec_ap_pending(struct drbd_conf *mdev , char const   *func ,
>                                      int line ) 
> { 
>   int tmp ;
>   int tmp___0 ;
>   int tmp___1 ;
> 
>   {
> #line 1983
>   tmp = atomic_dec_and_test(& mdev->ap_pending_cnt);
> #line 1983
>   if (tmp != 0) {
> #line 1984
>     __wake_up(& mdev->misc_wait, 3U, 1, 0);
>   } else {
> 
>   }
> #line 1985
>   tmp___1 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
> #line 1985
>   if (tmp___1 < 0) {
> #line 1985
>     tmp___0 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
> #line 1985
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: ap_pending_cnt = %d < 0 !\n",
>             func, line, tmp___0);
>   } else {
> 
>   }
> #line 1986
32442c34527
< #line 2337 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 2133 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
32444a34530
>   struct net_conf *nc ;
32445a34532,34533
>   struct net_conf *_________p1 ;
>   bool __warned ;
32446a34535
>   int tmp___0 ;
32449,32458c34538,34557
< #line 2339
<   mxb = 1000000;
< #line 2340
<   tmp = get_net_conf(mdev);
< #line 2340
<   if (tmp != 0) {
< #line 2341
<     mxb = (mdev->net_conf)->max_buffers;
< #line 2342
<     put_net_conf(mdev);
---
> #line 2138
>   rcu_read_lock___0();
> #line 2139
>   _________p1 = *((struct net_conf * volatile  *)(& (mdev->tconn)->net_conf));
> #line 2139
>   tmp = debug_lockdep_rcu_enabled();
> #line 2139
>   if (tmp != 0 && ! __warned) {
> #line 2139
>     tmp___0 = rcu_read_lock_held();
> #line 2139
>     if (tmp___0 == 0 && 1) {
> #line 2139
>       __warned = 1;
> #line 2139
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h",
>                              2139, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
32462c34561,34567
< #line 2344
---
> #line 2139
>   nc = _________p1;
> #line 2140
>   mxb = (unsigned long )nc != (unsigned long )((struct net_conf *)0) ? (int )nc->max_buffers : 1000000;
> #line 2141
>   rcu_read_unlock___0();
> #line 2143
32466c34571
< #line 2347 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 2146 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
32469c34574
<   union drbd_state s ;
---
>   union drbd_dev_state s ;
32472c34577
< #line 2349
---
> #line 2148
32474,32475c34579,34580
< #line 2354
<   switch ((unsigned int )s.ldv_39979.conn) {
---
> #line 2153
>   switch ((unsigned int )s.ldv_49522.conn) {
32497,32498c34602,34603
< #line 2379
<   goto ldv_51203;
---
> #line 2178
>   goto ldv_51800;
32500,32502c34605,34607
< #line 2383
<   if (mdev->agreed_pro_version <= 95) {
< #line 2384
---
> #line 2182
>   if ((mdev->tconn)->agreed_pro_version <= 95) {
> #line 2183
32507,32508c34612,34613
< #line 2385
<   goto ldv_51203;
---
> #line 2184
>   goto ldv_51800;
32512c34617
< #line 2392
---
> #line 2191
32515,32517c34620,34622
<   ldv_51203: ;
< #line 2395
<   switch ((unsigned int )s.ldv_39979.disk) {
---
>   ldv_51800: ;
> #line 2194
>   switch ((unsigned int )s.ldv_49522.disk) {
32524,32525c34629,34630
< #line 2403
<   goto ldv_51214;
---
> #line 2202
>   goto ldv_51811;
32530c34635
< #line 2411
---
> #line 2210
32533,32534c34638,34639
<   ldv_51214: ;
< #line 2414
---
>   ldv_51811: ;
> #line 2213
32538c34643
< #line 2422 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 2223 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
32550c34655
< #line 2424
---
> #line 2225
32552c34657
< #line 2424
---
> #line 2225
32554,32556c34659,34661
< #line 2426
<   tmp___0 = is_susp(mdev->state);
< #line 2426
---
> #line 2227
>   tmp___0 = drbd_suspended(mdev);
> #line 2227
32558c34663
< #line 2427
---
> #line 2228
32563,32565c34668,34670
< #line 2428
<   tmp___1 = drbd_test_flag(mdev, SUSPEND_IO);
< #line 2428
---
> #line 2229
>   tmp___1 = constant_test_bit(8U, (unsigned long const volatile   *)(& mdev->flags));
> #line 2229
32567c34672
< #line 2429
---
> #line 2230
32572c34677
< #line 2436
---
> #line 2237
32574c34679
< #line 2436
---
> #line 2237
32576c34681
< #line 2437
---
> #line 2238
32581c34686
< #line 2441
---
> #line 2242
32583c34688
< #line 2441
---
> #line 2242
32585c34690
< #line 2442
---
> #line 2243
32590,32592c34695,34697
< #line 2443
<   tmp___4 = drbd_test_flag(mdev, BITMAP_IO);
< #line 2443
---
> #line 2244
>   tmp___4 = constant_test_bit(9U, (unsigned long const volatile   *)(& mdev->flags));
> #line 2244
32594c34699
< #line 2444
---
> #line 2245
32599c34704
< #line 2445
---
> #line 2246
32603,32604c34708,34709
< #line 2448 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static bool inc_ap_bio_cond(struct drbd_conf *mdev , int count ) 
---
> #line 2249 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static bool inc_ap_bio_cond(struct drbd_conf *mdev ) 
32609c34714
< #line 2450
---
> #line 2251
32611,32613c34716,34718
< #line 2452
<   spin_lock_irq(& mdev->req_lock);
< #line 2453
---
> #line 2253
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 2254
32615c34720
< #line 2454
---
> #line 2255
32617,32618c34722,34723
< #line 2455
<     atomic_add(count, & mdev->ap_bio_cnt);
---
> #line 2256
>     atomic_inc(& mdev->ap_bio_cnt);
32622,32624c34727,34729
< #line 2456
<   spin_unlock_irq(& mdev->req_lock);
< #line 2458
---
> #line 2257
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 2259
32628,32629c34733,34734
< #line 2461 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static void inc_ap_bio(struct drbd_conf *mdev , int count ) 
---
> #line 2262 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static void inc_ap_bio(struct drbd_conf *mdev ) 
32637,32639c34742,34744
< #line 2471
<   tmp = inc_ap_bio_cond(mdev, count);
< #line 2471
---
> #line 2272
>   tmp = inc_ap_bio_cond(mdev);
> #line 2272
32641,32642c34746,34747
< #line 2471
<     goto ldv_51235;
---
> #line 2272
>     goto ldv_51831;
32646c34751
< #line 2471
---
> #line 2272
32648c34753
< #line 2471
---
> #line 2272
32650c34755
< #line 2471
---
> #line 2272
32652c34757
< #line 2471
---
> #line 2272
32654c34759
< #line 2471
---
> #line 2272
32656c34761
< #line 2471
---
> #line 2272
32658,32659c34763,34764
<   ldv_51238: 
< #line 2471
---
>   ldv_51834: 
> #line 2272
32661,32663c34766,34768
< #line 2471
<   tmp___1 = inc_ap_bio_cond(mdev, count);
< #line 2471
---
> #line 2272
>   tmp___1 = inc_ap_bio_cond(mdev);
> #line 2272
32665,32666c34770,34771
< #line 2471
<     goto ldv_51237;
---
> #line 2272
>     goto ldv_51833;
32670c34775
< #line 2471
---
> #line 2272
32672,32675c34777,34780
< #line 2471
<   goto ldv_51238;
<   ldv_51237: 
< #line 2471
---
> #line 2272
>   goto ldv_51834;
>   ldv_51833: 
> #line 2272
32677,32678c34782,34783
<   ldv_51235: ;
< #line 2474
---
>   ldv_51831: ;
> #line 2275
32682c34787
< #line 2474 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 2275 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
32693c34798
< #line 2476
---
> #line 2277
32695c34800
< #line 2476
---
> #line 2277
32697c34802
< #line 2477
---
> #line 2278
32699c34804
< #line 2477
---
> #line 2278
32701c34806
< #line 2479
---
> #line 2280
32703c34808
< #line 2479
---
> #line 2280
32706c34811
<             2479);
---
>             2280);
32710c34815
< #line 2481
---
> #line 2282
32712,32714c34817,34819
< #line 2481
<     tmp___2 = drbd_test_flag(mdev, BITMAP_IO);
< #line 2481
---
> #line 2282
>     tmp___2 = constant_test_bit(9U, (unsigned long const volatile   *)(& mdev->flags));
> #line 2282
32716,32718c34821,34823
< #line 2482
<       tmp___1 = drbd_test_and_set_flag(mdev, BITMAP_IO_QUEUED);
< #line 2482
---
> #line 2283
>       tmp___1 = test_and_set_bit(10, (unsigned long volatile   *)(& mdev->flags));
> #line 2283
32720,32721c34825,34826
< #line 2483
<         drbd_queue_work(& mdev->data.work, & mdev->bm_io_work.w);
---
> #line 2284
>         drbd_queue_work(& (mdev->tconn)->sender_work, & mdev->bm_io_work.w);
32731c34836
< #line 2489
---
> #line 2290
32733c34838
< #line 2490
---
> #line 2291
32738c34843
< #line 2491
---
> #line 2292
32742,32799c34847,34854
< #line 232 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"
< __inline static struct hlist_head *ee_hash_slot___0(struct drbd_conf *mdev , sector_t sector ) 
< { 
<   long tmp ;
< 
<   {
< #line 234
<   tmp = __builtin_expect(mdev->ee_hash_s == 0U, 0L);
< #line 234
<   if (tmp != 0L) {
< #line 234
<     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"),
<                          "i" (234), "i" (12UL));
<     ldv_51348: ;
< #line 234
<     goto ldv_51348;
<   } else {
< 
<   }
< #line 235
<   return (mdev->ee_hash + (unsigned long )((unsigned int )(sector >> 8) % mdev->ee_hash_s));
< }
< }
< #line 241 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"
< __inline static struct hlist_head *tl_hash_slot___0(struct drbd_conf *mdev , sector_t sector ) 
< { 
<   long tmp ;
< 
<   {
< #line 243
<   tmp = __builtin_expect(mdev->tl_hash_s == 0U, 0L);
< #line 243
<   if (tmp != 0L) {
< #line 243
<     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"),
<                          "i" (243), "i" (12UL));
<     ldv_51353: ;
< #line 243
<     goto ldv_51353;
<   } else {
< 
<   }
< #line 244
<   return (mdev->tl_hash + (unsigned long )((unsigned int )(sector >> 8) % mdev->tl_hash_s));
< }
< }
< #line 249 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"
< static struct hlist_head *ar_hash_slot___0(struct drbd_conf *mdev , sector_t sector ) 
< { 
< 
< 
<   {
< #line 251
<   return (mdev->app_reads_hash + (unsigned long )((unsigned int )sector % 15U));
< }
< }
< #line 285 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"
< __inline static struct drbd_request *drbd_req_new(struct drbd_conf *mdev , struct bio *bio_src ) 
---
> #line 270 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"
> void drbd_req_destroy(struct kref *kref ) ;
> #line 277
> void request_timer_fn(unsigned long data ) ;
> #line 282
> void drbd_restart_request(struct drbd_request *req ) ;
> #line 286 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"
> __inline static int _req_mod(struct drbd_request *req , enum drbd_req_event what ) 
32801,32803c34856,34858
<   struct drbd_request *req ;
<   void *tmp ;
<   long tmp___0 ;
---
>   struct drbd_conf *mdev ;
>   struct bio_and_error m ;
>   int rv ;
32807,32816c34862
<   tmp = mempool_alloc(drbd_request_mempool, 16U);
< #line 288
<   req = (struct drbd_request *)tmp;
< #line 290
<   tmp___0 = __builtin_expect((unsigned long )req != (unsigned long )((struct drbd_request *)0),
<                              1L);
< #line 290
<   if (tmp___0 != 0L) {
< #line 291
<     drbd_req_make_private_bio(req, bio_src);
---
>   mdev = req->w.ldv_49807.mdev;
32818c34864
<     req->rq_state = (int )bio_src->bi_rw & 1 ? 2048UL : 0UL;
---
>   rv = __req_mod(req, what, & m);
32820c34866
<     req->mdev = mdev;
---
>   if ((unsigned long )m.bio != (unsigned long )((struct bio *)0)) {
32822,32834c34868
<     req->master_bio = bio_src;
< #line 296
<     req->epoch = 0U;
< #line 297
<     req->sector = bio_src->bi_sector;
< #line 298
<     req->size = bio_src->bi_size;
< #line 299
<     INIT_HLIST_NODE(& req->collision);
< #line 300
<     INIT_LIST_HEAD(& req->tl_requests);
< #line 301
<     INIT_LIST_HEAD(& req->w.list);
---
>     complete_master_bio(mdev, & m);
32838,32839c34872,34873
< #line 303
<   return (req);
---
> #line 297
>   return (rv);
32842,32843c34876,34877
< #line 306 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"
< __inline static void drbd_req_free(struct drbd_request *req ) 
---
> #line 322 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"
> __inline static bool drbd_should_do_remote(union drbd_dev_state s ) 
32848,32853d34881
< #line 308
<   mempool_free((void *)req, drbd_request_mempool);
< #line 309
<   return;
< }
< }
32855,32865c34883
< void _req_may_be_done(struct drbd_request *req , struct bio_and_error *m ) ;
< #line 330
< void request_timer_fn(unsigned long data ) ;
< #line 371 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"
< __inline static bool drbd_should_do_remote(union drbd_state s ) 
< { 
< 
< 
<   {
< #line 373
<   return ((bool )(*((unsigned int *)(& s) + 0UL) == 65536U || (((int )s.ldv_39979.pdsk > 3 && (int )s.ldv_39979.conn > 13) && (int )s.ldv_39979.conn <= 21)));
---
>   return ((bool )(*((unsigned int *)(& s) + 0UL) == 65536U || (((int )s.ldv_49522.pdsk > 3 && (int )s.ldv_49522.conn > 13) && (int )s.ldv_49522.conn <= 21)));
32868,32869c34886,34887
< #line 381 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"
< __inline static bool drbd_should_send_oos(union drbd_state s ) 
---
> #line 332 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"
> __inline static bool drbd_should_send_out_of_sync(union drbd_dev_state s ) 
32874c34892
< #line 383
---
> #line 334
32878c34896,34898
< #line 106 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
---
> #line 121 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
> static bool drbd_may_do_local_read(struct drbd_conf *mdev , sector_t sector , int size ) ;
> #line 124 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
32904c34924
< #line 108
---
> #line 126
32906,32910c34926,34930
< #line 110
<   rcu_read_lock();
< #line 110
<   tmp = current_thread_info___1();
< #line 110
---
> #line 128
>   rcu_read_lock___0();
> #line 128
>   tmp = current_thread_info___0();
> #line 128
32912c34932
< #line 110
---
> #line 128
32914c34934
< #line 110
---
> #line 128
32916c34936
< #line 110
---
> #line 128
32919c34939
< #line 110
---
> #line 128
32922c34942
< #line 110
---
> #line 128
32924,32925c34944,34945
< #line 110
<   goto ldv_51445;
---
> #line 128
>   goto ldv_52003;
32927c34947
< #line 110
---
> #line 128
32929,32930c34949,34950
< #line 110
<   goto ldv_51445;
---
> #line 128
>   goto ldv_52003;
32932c34952
< #line 110
---
> #line 128
32934,32935c34954,34955
< #line 110
<   goto ldv_51445;
---
> #line 128
>   goto ldv_52003;
32937c34957
< #line 110
---
> #line 128
32939,32940c34959,34960
< #line 110
<   goto ldv_51445;
---
> #line 128
>   goto ldv_52003;
32942c34962
< #line 110
---
> #line 128
32945,32946c34965,34966
<   ldv_51445: 
< #line 110
---
>   ldv_52003: 
> #line 128
32948,32949c34968,34969
< #line 110
<   goto ldv_51451;
---
> #line 128
>   goto ldv_52009;
32951c34971
< #line 110
---
> #line 128
32954c34974
< #line 110
---
> #line 128
32956,32957c34976,34977
< #line 110
<   goto ldv_51455;
---
> #line 128
>   goto ldv_52013;
32959c34979
< #line 110
---
> #line 128
32961,32962c34981,34982
< #line 110
<   goto ldv_51455;
---
> #line 128
>   goto ldv_52013;
32964c34984
< #line 110
---
> #line 128
32966,32967c34986,34987
< #line 110
<   goto ldv_51455;
---
> #line 128
>   goto ldv_52013;
32969c34989
< #line 110
---
> #line 128
32971,32972c34991,34992
< #line 110
<   goto ldv_51455;
---
> #line 128
>   goto ldv_52013;
32974c34994
< #line 110
---
> #line 128
32977,32978c34997,34998
<   ldv_51455: 
< #line 110
---
>   ldv_52013: 
> #line 128
32980,32981c35000,35001
< #line 110
<   goto ldv_51451;
---
> #line 128
>   goto ldv_52009;
32983c35003
< #line 110
---
> #line 128
32986c35006
< #line 110
---
> #line 128
32988,32989c35008,35009
< #line 110
<   goto ldv_51464;
---
> #line 128
>   goto ldv_52022;
32991c35011
< #line 110
---
> #line 128
32993,32994c35013,35014
< #line 110
<   goto ldv_51464;
---
> #line 128
>   goto ldv_52022;
32996c35016
< #line 110
---
> #line 128
32998,32999c35018,35019
< #line 110
<   goto ldv_51464;
---
> #line 128
>   goto ldv_52022;
33001c35021
< #line 110
---
> #line 128
33003,33004c35023,35024
< #line 110
<   goto ldv_51464;
---
> #line 128
>   goto ldv_52022;
33006c35026
< #line 110
---
> #line 128
33009,33010c35029,35030
<   ldv_51464: 
< #line 110
---
>   ldv_52022: 
> #line 128
33012,33013c35032,35033
< #line 110
<   goto ldv_51451;
---
> #line 128
>   goto ldv_52009;
33015c35035
< #line 110
---
> #line 128
33018c35038
< #line 110
---
> #line 128
33020,33021c35040,35041
< #line 110
<   goto ldv_51473;
---
> #line 128
>   goto ldv_52031;
33023c35043
< #line 110
---
> #line 128
33025,33026c35045,35046
< #line 110
<   goto ldv_51473;
---
> #line 128
>   goto ldv_52031;
33028c35048
< #line 110
---
> #line 128
33030,33031c35050,35051
< #line 110
<   goto ldv_51473;
---
> #line 128
>   goto ldv_52031;
33033c35053
< #line 110
---
> #line 128
33035,33036c35055,35056
< #line 110
<   goto ldv_51473;
---
> #line 128
>   goto ldv_52031;
33038c35058
< #line 110
---
> #line 128
33041,33042c35061,35062
<   ldv_51473: 
< #line 110
---
>   ldv_52031: 
> #line 128
33044,33045c35064,35065
< #line 110
<   goto ldv_51451;
---
> #line 128
>   goto ldv_52009;
33047c35067
< #line 110
---
> #line 128
33049,33050c35069,35070
< #line 110
<   goto ldv_51451;
---
> #line 128
>   goto ldv_52009;
33052,33053c35072,35073
<   ldv_51451: 
< #line 110
---
>   ldv_52009: 
> #line 128
33055c35075
< #line 111
---
> #line 129
33057c35077
< #line 112
---
> #line 130
33059c35079
< #line 112
---
> #line 130
33061c35081
< #line 112
---
> #line 130
33063c35083
< #line 112
---
> #line 130
33065c35085
< #line 112
---
> #line 130
33067c35087
< #line 112
---
> #line 130
33069c35089
< #line 112
---
> #line 130
33071c35091
< #line 112
---
> #line 130
33076c35096
< #line 113
---
> #line 131
33078c35098
< #line 113
---
> #line 131
33080c35100
< #line 113
---
> #line 131
33082c35102
< #line 113
---
> #line 131
33084c35104
< #line 113
---
> #line 131
33086c35106
< #line 113
---
> #line 131
33088c35108
< #line 113
---
> #line 131
33090c35110
< #line 113
---
> #line 131
33095c35115
< #line 114
---
> #line 134
33097c35117
< #line 115
---
> #line 135
33099,33101c35119,35121
< #line 115
<   tmp___2 = current_thread_info___1();
< #line 115
---
> #line 135
>   tmp___2 = current_thread_info___0();
> #line 135
33103c35123
< #line 115
---
> #line 135
33105,33107c35125,35127
< #line 115
<   rcu_read_unlock();
< #line 116
---
> #line 135
>   rcu_read_unlock___0();
> #line 136
33111c35131
< #line 119 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
---
> #line 139 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
33132c35152
< #line 121
---
> #line 141
33134c35154
< #line 122
---
> #line 142
33136,33140c35156,35160
< #line 124
<   rcu_read_lock();
< #line 124
<   tmp = current_thread_info___1();
< #line 124
---
> #line 144
>   rcu_read_lock___0();
> #line 144
>   tmp = current_thread_info___0();
> #line 144
33142c35162
< #line 124
---
> #line 144
33144c35164
< #line 124
---
> #line 144
33146c35166
< #line 124
---
> #line 144
33149c35169
< #line 124
---
> #line 144
33152c35172
< #line 124
---
> #line 144
33154,33155c35174,35175
< #line 124
<   goto ldv_51511;
---
> #line 144
>   goto ldv_52069;
33157c35177
< #line 124
---
> #line 144
33159,33160c35179,35180
< #line 124
<   goto ldv_51511;
---
> #line 144
>   goto ldv_52069;
33162c35182
< #line 124
---
> #line 144
33164,33165c35184,35185
< #line 124
<   goto ldv_51511;
---
> #line 144
>   goto ldv_52069;
33167c35187
< #line 124
---
> #line 144
33169,33170c35189,35190
< #line 124
<   goto ldv_51511;
---
> #line 144
>   goto ldv_52069;
33172c35192
< #line 124
---
> #line 144
33175,33176c35195,35196
<   ldv_51511: 
< #line 124
---
>   ldv_52069: 
> #line 144
33178,33179c35198,35199
< #line 124
<   goto ldv_51517;
---
> #line 144
>   goto ldv_52075;
33181c35201
< #line 124
---
> #line 144
33184c35204
< #line 124
---
> #line 144
33186,33187c35206,35207
< #line 124
<   goto ldv_51521;
---
> #line 144
>   goto ldv_52079;
33189c35209
< #line 124
---
> #line 144
33191,33192c35211,35212
< #line 124
<   goto ldv_51521;
---
> #line 144
>   goto ldv_52079;
33194c35214
< #line 124
---
> #line 144
33196,33197c35216,35217
< #line 124
<   goto ldv_51521;
---
> #line 144
>   goto ldv_52079;
33199c35219
< #line 124
---
> #line 144
33201,33202c35221,35222
< #line 124
<   goto ldv_51521;
---
> #line 144
>   goto ldv_52079;
33204c35224
< #line 124
---
> #line 144
33207,33208c35227,35228
<   ldv_51521: 
< #line 124
---
>   ldv_52079: 
> #line 144
33210,33211c35230,35231
< #line 124
<   goto ldv_51517;
---
> #line 144
>   goto ldv_52075;
33213c35233
< #line 124
---
> #line 144
33216c35236
< #line 124
---
> #line 144
33218,33219c35238,35239
< #line 124
<   goto ldv_51530;
---
> #line 144
>   goto ldv_52088;
33221c35241
< #line 124
---
> #line 144
33223,33224c35243,35244
< #line 124
<   goto ldv_51530;
---
> #line 144
>   goto ldv_52088;
33226c35246
< #line 124
---
> #line 144
33228,33229c35248,35249
< #line 124
<   goto ldv_51530;
---
> #line 144
>   goto ldv_52088;
33231c35251
< #line 124
---
> #line 144
33233,33234c35253,35254
< #line 124
<   goto ldv_51530;
---
> #line 144
>   goto ldv_52088;
33236c35256
< #line 124
---
> #line 144
33239,33240c35259,35260
<   ldv_51530: 
< #line 124
---
>   ldv_52088: 
> #line 144
33242,33243c35262,35263
< #line 124
<   goto ldv_51517;
---
> #line 144
>   goto ldv_52075;
33245c35265
< #line 124
---
> #line 144
33248c35268
< #line 124
---
> #line 144
33250,33251c35270,35271
< #line 124
<   goto ldv_51539;
---
> #line 144
>   goto ldv_52097;
33253c35273
< #line 124
---
> #line 144
33255,33256c35275,35276
< #line 124
<   goto ldv_51539;
---
> #line 144
>   goto ldv_52097;
33258c35278
< #line 124
---
> #line 144
33260,33261c35280,35281
< #line 124
<   goto ldv_51539;
---
> #line 144
>   goto ldv_52097;
33263c35283
< #line 124
---
> #line 144
33265,33266c35285,35286
< #line 124
<   goto ldv_51539;
---
> #line 144
>   goto ldv_52097;
33268c35288
< #line 124
---
> #line 144
33271,33272c35291,35292
<   ldv_51539: 
< #line 124
---
>   ldv_52097: 
> #line 144
33274,33275c35294,35295
< #line 124
<   goto ldv_51517;
---
> #line 144
>   goto ldv_52075;
33277c35297
< #line 124
---
> #line 144
33279,33280c35299,35300
< #line 124
<   goto ldv_51517;
---
> #line 144
>   goto ldv_52075;
33282,33283c35302,35303
<   ldv_51517: 
< #line 124
---
>   ldv_52075: 
> #line 144
33285c35305
< #line 125
---
> #line 145
33287c35307
< #line 125
---
> #line 145
33289c35309
< #line 125
---
> #line 145
33291c35311
< #line 125
---
> #line 145
33293c35313
< #line 125
---
> #line 145
33295c35315
< #line 125
---
> #line 145
33297c35317
< #line 125
---
> #line 145
33299c35319
< #line 125
---
> #line 145
33304c35324
< #line 126
---
> #line 146
33306c35326
< #line 127
---
> #line 147
33308c35328
< #line 128
---
> #line 148
33310,33312c35330,35332
< #line 128
<   tmp___1 = current_thread_info___1();
< #line 128
---
> #line 148
>   tmp___1 = current_thread_info___0();
> #line 148
33314c35334
< #line 128
---
> #line 148
33316,33318c35336,35338
< #line 128
<   rcu_read_unlock();
< #line 129
---
> #line 148
>   rcu_read_unlock___0();
> #line 149
33322,33323c35342,35343
< #line 131 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
< static void _req_is_done(struct drbd_conf *mdev , struct drbd_request *req , int const   rw ) 
---
> #line 151 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
> static struct drbd_request *drbd_req_new(struct drbd_conf *mdev , struct bio *bio_src ) 
33325,33327c35345,35346
<   unsigned long s ;
<   int tmp ;
<   int tmp___0 ;
---
>   struct drbd_request *req ;
>   void *tmp ;
33330,33349c35349,35357
< #line 133
<   s = req->rq_state;
< #line 141
<   list_del(& req->tl_requests);
< #line 146
<   if ((int )rw == 1) {
< #line 151
<     if ((s & 256UL) == 0UL || (s & 4UL) == 0UL) {
< #line 152
<       __drbd_set_out_of_sync(mdev, req->sector, (int )req->size, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
<                              152U);
<     } else {
< 
<     }
< #line 154
<     if (((s & 256UL) != 0UL && (s & 4UL) != 0UL) && (s & 512UL) != 0UL) {
< #line 155
<       __drbd_set_in_sync(mdev, req->sector, (int )req->size, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
<                          155U);
<     } else {
---
> #line 156
>   tmp = mempool_alloc(drbd_request_mempool, 16U);
> #line 156
>   req = (struct drbd_request *)tmp;
> #line 157
>   if ((unsigned long )req == (unsigned long )((struct drbd_request *)0)) {
> #line 158
>     return (0);
>   } else {
33351c35359,35371
<     }
---
>   }
> #line 160
>   drbd_req_make_private_bio(req, bio_src);
> #line 161
>   req->rq_state = (int )bio_src->bi_rw & 1 ? 2048U : 0U;
> #line 162
>   req->w.ldv_49807.mdev = mdev;
> #line 163
>   req->master_bio = bio_src;
> #line 164
>   req->epoch = 0U;
> #line 166
>   drbd_clear_interval(& req->i);
33353c35373
<     if ((s & 15UL) != 0UL) {
---
>   req->i.sector = bio_src->bi_sector;
33355,33357c35375
<       tmp___0 = _get_ldev_if_state(mdev, D_FAILED);
< #line 168
<       if (tmp___0 != 0) {
---
>   req->i.size = bio_src->bi_size;
33359c35377
<         if ((s & 4096UL) != 0UL) {
---
>   req->i.local = -1;
33361,33367c35379
<           drbd_al_complete_io(mdev, req->sector);
<         } else {
< 
<         }
< #line 171
<         put_ldev(mdev);
<       } else {
---
>   req->i.waiting = 0;
33369,33371c35381
<         tmp = ___ratelimit(& drbd_ratelimit_state, "_req_is_done");
< #line 172
<         if (tmp != 0) {
---
>   INIT_LIST_HEAD(& req->tl_requests);
33373,33388c35383,35389
<           dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Should have called drbd_al_complete_io(, %llu), but my Disk seems to have failed :(\n",
<                    (unsigned long long )req->sector);
<         } else {
< 
<         }
<       }
<     } else {
< 
<     }
<   } else {
< 
<   }
< #line 180
<   drbd_req_free(req);
< #line 181
<   return;
---
>   INIT_LIST_HEAD(& req->w.list);
> #line 176
>   atomic_set(& req->completion_ref, 1);
> #line 178
>   kref_init(& req->kref);
> #line 179
>   return (req);
33391,33392c35392,35393
< #line 183 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
< static void queue_barrier(struct drbd_conf *mdev ) 
---
> #line 182 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
> void drbd_req_destroy(struct kref *kref ) 
33394c35395,35398
<   struct drbd_tl_epoch *b ;
---
>   struct drbd_request *req ;
>   struct kref  const  *__mptr ;
>   struct drbd_conf *mdev ;
>   unsigned int s ;
33395a35400,35402
>   int tmp___0 ;
>   int tmp___1 ;
>   int tmp___2 ;
33397a35405,35414
> #line 184
>   __mptr = (struct kref  const  *)kref;
> #line 184
>   req = (struct drbd_request *)__mptr + 0xffffffffffffff74UL;
> #line 185
>   mdev = req->w.ldv_49807.mdev;
> #line 186
>   s = req->rq_state;
> #line 188
>   if ((unsigned long )req->master_bio != (unsigned long )((struct bio *)0) && ((unsigned long )s & 8192UL) == 0UL) {
33399c35416
<   tmp = drbd_test_flag(mdev, CREATE_BARRIER);
---
>     tmp = atomic_read((atomic_t const   *)(& req->completion_ref));
33401,33402c35418,35420
<   if (tmp != 0) {
< #line 193
---
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "drbd_req_destroy: Logic BUG rq_state = 0x%x, completion_ref = %d\n",
>             s, tmp);
> #line 194
33404a35423,35454
> #line 188
>     tmp___0 = atomic_read((atomic_t const   *)(& req->completion_ref));
> #line 188
>     if (tmp___0 != 0) {
> #line 192
>       tmp = atomic_read((atomic_t const   *)(& req->completion_ref));
> #line 192
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "drbd_req_destroy: Logic BUG rq_state = 0x%x, completion_ref = %d\n",
>               s, tmp);
> #line 194
>       return;
>     } else
> #line 188
>     if ((int )s & 1) {
> #line 192
>       tmp = atomic_read((atomic_t const   *)(& req->completion_ref));
> #line 192
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "drbd_req_destroy: Logic BUG rq_state = 0x%x, completion_ref = %d\n",
>               s, tmp);
> #line 194
>       return;
>     } else
> #line 188
>     if (((unsigned long )s & 1008UL) != 0UL && ((unsigned long )s & 128UL) == 0UL) {
> #line 192
>       tmp = atomic_read((atomic_t const   *)(& req->completion_ref));
> #line 192
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "drbd_req_destroy: Logic BUG rq_state = 0x%x, completion_ref = %d\n",
>               s, tmp);
> #line 194
>       return;
>     } else {
33405a35456
>     }
33407,33414d35457
< #line 195
<   b = mdev->newest_tle;
< #line 196
<   b->w.cb = & w_send_barrier;
< #line 201
<   inc_ap_pending(mdev);
< #line 202
<   drbd_queue_work(& mdev->data.work, & b->w);
33416,33438c35459,35463
<   drbd_set_flag(mdev, CREATE_BARRIER);
< #line 204
<   return;
< }
< }
< #line 206 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
< static void _about_to_complete_local_write(struct drbd_conf *mdev , struct drbd_request *req ) 
< { 
<   unsigned long s ;
<   struct drbd_request *i ;
<   struct drbd_epoch_entry *e ;
<   struct hlist_node *n ;
<   struct hlist_head *slot ;
<   sector_t sector ;
<   int size ;
<   int tmp ;
<   struct hlist_node  const  *__mptr ;
<   int tmp___0 ;
<   struct hlist_node  const  *__mptr___0 ;
< 
<   {
< #line 209
<   s = req->rq_state;
---
>   list_del_init(& req->tl_requests);
> #line 208
>   if (((unsigned long )s & 2048UL) != 0UL) {
> #line 220
>     if (((unsigned long )s & 9215UL) != 8192UL) {
33440c35465,35471
<   if (((int )mdev->state.ldv_39979.conn > 9 && (s & 64UL) != 0UL) && req->epoch == (mdev->newest_tle)->br_number) {
---
>       if (((unsigned long )s & 256UL) == 0UL || ((unsigned long )s & 4UL) == 0UL) {
> #line 222
>         __drbd_set_out_of_sync(mdev, req->i.sector, (int )req->i.size, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
>                                222U);
>       } else {
> 
>       }
33442,33443c35473,35477
<     queue_barrier(mdev);
<   } else {
---
>       if ((((unsigned long )s & 256UL) != 0UL && ((unsigned long )s & 4UL) != 0UL) && ((unsigned long )s & 512UL) != 0UL) {
> #line 225
>         __drbd_set_in_sync(mdev, req->i.sector, (int )req->i.size, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
>                            225U);
>       } else {
33445,33466c35479
<   }
< #line 229
<   if ((s & 128UL) != 0UL && (unsigned long )mdev->ee_hash != (unsigned long )((struct hlist_head *)0)) {
< #line 230
<     sector = req->sector;
< #line 231
<     size = (int const   )req->size;
< #line 237
<     slot = tl_hash_slot___0(mdev, sector);
< #line 238
<     n = slot->first;
< #line 238
<     goto ldv_51583;
<     ldv_51582: 
< #line 239
<     tmp = overlaps(sector, size, i->sector, (int )i->size);
< #line 239
<     if (tmp != 0) {
< #line 240
<       dev_alert((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "LOGIC BUG: completed: %p %llus +%u; other: %p %llus +%u\n",
<                 req, (unsigned long long )sector, size, i, (unsigned long long )i->sector,
<                 i->size);
---
>       }
33471,33480c35484
<     n = n->next;
<     ldv_51583: ;
< #line 238
<     if ((unsigned long )n != (unsigned long )((struct hlist_node *)0)) {
< #line 238
<       __mptr = (struct hlist_node  const  *)n;
< #line 238
<       i = (struct drbd_request *)__mptr + 0xffffffffffffffd8UL;
< #line 238
<       if (1 != 0) {
---
>     if (((unsigned long )s & 4096UL) != 0UL) {
33482,33483c35486,35490
<         goto ldv_51582;
<       } else {
---
>       tmp___2 = _get_ldev_if_state(mdev, D_FAILED);
> #line 239
>       if (tmp___2 != 0) {
> #line 240
>         drbd_al_complete_io(mdev, & req->i);
33485c35492,35503
<         goto ldv_51584;
---
>         put_ldev(mdev);
>       } else {
> #line 242
>         tmp___1 = ___ratelimit(& drbd_ratelimit_state, "drbd_req_destroy");
> #line 242
>         if (tmp___1 != 0) {
> #line 243
>           dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Should have called drbd_al_complete_io(, %llu, %u), but my Disk seems to have failed :(\n",
>                    (unsigned long long )req->i.sector, req->i.size);
>         } else {
> 
>         }
33490,33506c35508
<     ldv_51584: 
< #line 261
<     slot = ee_hash_slot___0(mdev, req->sector);
< #line 262
<     n = slot->first;
< #line 262
<     goto ldv_51590;
<     ldv_51589: 
< #line 263
<     tmp___0 = overlaps(sector, size, e->sector, (int )e->size);
< #line 263
<     if (tmp___0 != 0) {
< #line 264
<       __wake_up(& mdev->misc_wait, 3U, 1, 0);
< #line 265
<       goto ldv_51588;
<     } else {
---
>   } else {
33508,33526c35510,35519
<     }
< #line 262
<     n = n->next;
<     ldv_51590: ;
< #line 262
<     if ((unsigned long )n != (unsigned long )((struct hlist_node *)0)) {
< #line 262
<       __mptr___0 = (struct hlist_node  const  *)n;
< #line 262
<       e = (struct drbd_epoch_entry *)__mptr___0 + 0xffffffffffffffe8UL;
< #line 262
<       if (1 != 0) {
< #line 263
<         goto ldv_51589;
<       } else {
< #line 265
<         goto ldv_51588;
<       }
<     } else {
---
>   }
> #line 250
>   mempool_free((void *)req, drbd_request_mempool);
> #line 251
>   return;
> }
> }
> #line 253 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
> static void wake_all_senders(struct drbd_tconn *tconn ) 
> { 
33528,33529c35521,35538
<     }
<     ldv_51588: ;
---
> 
>   {
> #line 254
>   __wake_up(& tconn->sender_work.q_wait, 3U, 1, 0);
> #line 255
>   return;
> }
> }
> #line 258 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
> static void start_new_tl_epoch(struct drbd_tconn *tconn ) 
> { 
> 
> 
>   {
> #line 261
>   if (tconn->current_tle_writes == 0U) {
> #line 262
>     return;
33533c35542,35548
< #line 268
---
> #line 264
>   tconn->current_tle_writes = 0U;
> #line 265
>   atomic_inc(& tconn->current_tle_nr);
> #line 266
>   wake_all_senders(tconn);
> #line 267
33537c35552
< #line 272 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
---
> #line 269 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
33543c35558
< #line 275
---
> #line 272
33545c35560
< #line 276
---
> #line 273
33547c35562
< #line 277
---
> #line 274
33551,33552c35566,35567
< #line 285 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
< void _req_may_be_done(struct drbd_request *req , struct bio_and_error *m ) 
---
> #line 277 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
> static void drbd_remove_request_interval(struct rb_root *root , struct drbd_request *req ) 
33554c35569,35593
<   unsigned long s ;
---
>   struct drbd_conf *mdev ;
>   struct drbd_interval *i ;
> 
>   {
> #line 280
>   mdev = req->w.ldv_49807.mdev;
> #line 281
>   i = & req->i;
> #line 283
>   drbd_remove_interval(root, i);
> #line 286
>   if ((unsigned int )*((unsigned char *)i + 48UL) != 0U) {
> #line 287
>     __wake_up(& mdev->misc_wait, 3U, 1, 0);
>   } else {
> 
>   }
> #line 288
>   return;
> }
> }
> #line 297 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
> static void drbd_req_complete(struct drbd_request *req , struct bio_and_error *m ) 
> { 
>   unsigned int s ;
33557d35595
<   int ok ;
33558a35597
>   int ok ;
33560c35599,35603
<   int tmp___0 ;
---
>   struct rb_root *root ;
>   bool tmp___0 ;
>   int tmp___1 ;
>   int tmp___2 ;
>   int tmp___3 ;
33563c35606
< #line 287
---
> #line 299
33565,33568d35607
< #line 288
<   mdev = req->mdev;
< #line 289
<   rw = (req->rq_state & 2048UL) != 0UL;
33570,33571c35609,35615
<   if ((s & 32UL) != 0UL) {
< #line 301
---
>   mdev = req->w.ldv_49807.mdev;
> #line 313
>   if (((((int )s & 1 && ((unsigned long )s & 8UL) == 0UL) || ((unsigned long )s & 32UL) != 0UL) || ((unsigned long )s & 16UL) != 0UL) || ((unsigned long )s & 16384UL) != 0UL) {
> #line 316
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "drbd_req_complete: Logic BUG rq_state = 0x%x\n",
>             s);
> #line 317
33576,33578c35620,35624
< #line 302
<   if ((s & 16UL) != 0UL) {
< #line 303
---
> #line 320
>   if ((unsigned long )req->master_bio == (unsigned long )((struct bio *)0)) {
> #line 321
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "drbd_req_complete: Logic BUG, master_bio == NULL!\n");
> #line 322
33583,33586c35629,35642
< #line 304
<   if ((int )s & 1 && (s & 8UL) == 0UL) {
< #line 305
<     return;
---
> #line 325
>   rw = (int )(req->master_bio)->bi_rw & 8193;
> #line 340
>   ok = ((unsigned long )s & 4UL) != 0UL || ((unsigned long )s & 256UL) != 0UL;
> #line 341
>   tmp = PTR_ERR((void const   *)req->private_bio);
> #line 341
>   error = (int )tmp;
> #line 345
>   tmp___0 = drbd_interval_empty(& req->i);
> #line 345
>   if (tmp___0) {
> #line 345
>     tmp___1 = 0;
33588c35644,35645
< 
---
> #line 345
>     tmp___1 = 1;
33590,33607c35647,35664
< #line 307
<   if ((unsigned long )req->master_bio != (unsigned long )((struct bio *)0)) {
< #line 329
<     ok = (s & 4UL) != 0UL || (s & 256UL) != 0UL;
< #line 330
<     tmp = PTR_ERR((void const   *)req->private_bio);
< #line 330
<     error = (int )tmp;
< #line 334
<     tmp___0 = hlist_unhashed((struct hlist_node  const  *)(& req->collision));
< #line 334
<     if (tmp___0 == 0) {
< #line 335
<       hlist_del(& req->collision);
<     } else
< #line 337
<     if ((s & 880UL) != 0UL) {
< #line 337
---
> #line 345
>   if (tmp___1) {
> #line 348
>     if (rw == 1) {
> #line 349
>       root = & mdev->write_requests;
>     } else {
> #line 351
>       root = & mdev->read_requests;
>     }
> #line 352
>     drbd_remove_request_interval(root, req);
>   } else
> #line 353
>   if (((unsigned long )s & 8192UL) == 0UL) {
> #line 354
>     if (((unsigned long )s & 880UL) != 0UL) {
> #line 354
33609,33610c35666,35667
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
<               337);
---
>               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
>               354);
33614,33617c35671,35681
< #line 340
<     if (rw == 1) {
< #line 341
<       _about_to_complete_local_write(mdev, req);
---
>   } else {
> 
>   }
> #line 363
>   if (rw == 1) {
> #line 363
>     tmp___2 = atomic_read((atomic_t const   *)(& (mdev->tconn)->current_tle_nr));
> #line 363
>     if (req->epoch == (unsigned int )tmp___2) {
> #line 365
>       start_new_tl_epoch(mdev->tconn);
33621,33628d35684
< #line 344
<     _drbd_end_io_acct(mdev, req);
< #line 346
<     m->error = ok == 0 ? (error != 0 ? error : -5) : 0;
< #line 347
<     m->bio = req->master_bio;
< #line 348
<     req->master_bio = 0;
33632,33635c35688,35700
< #line 351
<   if ((int )s & 1) {
< #line 352
<     return;
---
> #line 368
>   _drbd_end_io_acct(mdev, req);
> #line 384
>   if (ok == 0 && rw == 0) {
> #line 384
>     tmp___3 = list_empty((struct list_head  const  *)(& req->tl_requests));
> #line 384
>     if (tmp___3 == 0) {
> #line 385
>       req->rq_state = req->rq_state | 8192U;
>     } else {
> 
>     }
33639,33642c35704,35711
< #line 354
<   if ((s & 1008UL) == 0UL || (s & 128UL) != 0UL) {
< #line 359
<     _req_is_done(mdev, req, rw);
---
> #line 387
>   if (((unsigned long )req->rq_state & 8192UL) == 0UL) {
> #line 388
>     m->error = ok == 0 ? (error != 0 ? error : -5) : 0;
> #line 389
>     m->bio = req->master_bio;
> #line 390
>     req->master_bio = 0;
33646c35715
< #line 360
---
> #line 392
33650,33651c35719,35721
< #line 365 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
< static void _req_may_be_done_not_susp(struct drbd_request *req , struct bio_and_error *m ) 
---
> #line 394 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
> static int drbd_req_put_completion_ref(struct drbd_request *req , struct bio_and_error *m ,
>                                        int put ) 
33657,33661c35727,35740
< #line 367
<   mdev = req->mdev;
< #line 369
<   tmp = is_susp(mdev->state);
< #line 369
---
> #line 396
>   mdev = req->w.ldv_49807.mdev;
> #line 397
>   if ((unsigned long )m == (unsigned long )((struct bio_and_error *)0) && ((unsigned long )req->rq_state & 8192UL) == 0UL) {
> #line 397
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( m || (req->rq_state & RQ_POSTPONED) ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
>             397);
>   } else {
> 
>   }
> #line 399
>   tmp = atomic_sub_and_test(put, & req->completion_ref);
> #line 399
33663,33664c35742,35743
< #line 370
<     _req_may_be_done(req, m);
---
> #line 400
>     return (0);
33668,33669c35747,35759
< #line 371
<   return;
---
> #line 402
>   drbd_req_complete(req, m);
> #line 404
>   if (((unsigned long )req->rq_state & 8192UL) != 0UL) {
> #line 407
>     drbd_restart_request(req);
> #line 408
>     return (0);
>   } else {
> 
>   }
> #line 411
>   return (1);
33672,33673c35762,35764
< #line 396 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
< static int _req_conflicts(struct drbd_request *req ) 
---
> #line 416 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
> static void mod_rq_state(struct drbd_request *req , struct bio_and_error *m , int clear ,
>                          int set ) 
33676,33681c35767,35769
<   sector_t sector ;
<   int size ;
<   struct drbd_request *i ;
<   struct drbd_epoch_entry *e ;
<   struct hlist_node *n ;
<   struct hlist_head *slot ;
---
>   unsigned int s ;
>   int c_put ;
>   int k_put ;
33682a35771,35772
>   int at_least ;
>   int refcount ;
33684,33694c35774
<   int _b ;
<   long tmp___1 ;
<   struct task_struct *tmp___2 ;
<   struct task_struct *tmp___3 ;
<   int tmp___4 ;
<   struct hlist_node  const  *__mptr ;
<   long tmp___5 ;
<   struct task_struct *tmp___6 ;
<   struct task_struct *tmp___7 ;
<   int tmp___8 ;
<   struct hlist_node  const  *__mptr___0 ;
---
>   int tmp___1 ;
33697,33710c35777,35790
< #line 398
<   mdev = req->mdev;
< #line 399
<   sector = req->sector;
< #line 400
<   size = (int const   )req->size;
< #line 406
<   tmp = hlist_unhashed((struct hlist_node  const  *)(& req->collision));
< #line 406
<   if (tmp == 0) {
< #line 406
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( hlist_unhashed(&req->collision) ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
<             406);
---
> #line 419
>   mdev = req->w.ldv_49807.mdev;
> #line 420
>   s = req->rq_state;
> #line 421
>   c_put = 0;
> #line 422
>   k_put = 0;
> #line 424
>   tmp = drbd_suspended(mdev);
> #line 424
>   if (tmp != 0 && ((unsigned long )(s | (unsigned int )clear) & 16384UL) == 0UL) {
> #line 425
>     set = set | 16384;
33714,33719c35794,35801
< #line 408
<   tmp___0 = get_net_conf(mdev);
< #line 408
<   if (tmp___0 == 0) {
< #line 409
<     return (0);
---
> #line 429
>   req->rq_state = req->rq_state & (unsigned int )(~ clear);
> #line 430
>   req->rq_state = req->rq_state | (unsigned int )set;
> #line 433
>   if (req->rq_state == s) {
> #line 434
>     return;
33723,33730c35805,35808
< #line 412
<   _b = mdev->tl_hash_s == 0U;
< #line 412
<   if (_b != 0) {
< #line 412
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "_req_conflicts", (char *)"mdev->tl_hash_s == 0", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
<             412);
---
> #line 438
>   if (((unsigned long )s & 1UL) == 0UL && set & 1) {
> #line 439
>     atomic_inc(& req->completion_ref);
33734,33737c35812,35817
< #line 412
<   if (_b != 0) {
< #line 413
<     goto out_no_conflict;
---
> #line 441
>   if (((unsigned long )s & 16UL) == 0UL && ((unsigned long )set & 16UL) != 0UL) {
> #line 442
>     inc_ap_pending(mdev);
> #line 443
>     atomic_inc(& req->completion_ref);
33741,33751c35821,35824
< #line 414
<   tmp___1 = __builtin_expect((unsigned long )mdev->tl_hash == (unsigned long )((struct hlist_head *)0),
<                              0L);
< #line 414
<   if (tmp___1 != 0L) {
< #line 414
<     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"),
<                          "i" (414), "i" (12UL));
<     ldv_51623: ;
< #line 414
<     goto ldv_51623;
---
> #line 446
>   if (((unsigned long )s & 32UL) == 0UL && ((unsigned long )set & 32UL) != 0UL) {
> #line 447
>     atomic_inc(& req->completion_ref);
33755,33775c35828,35831
< #line 417
<   slot = tl_hash_slot___0(mdev, sector);
< #line 418
<   n = slot->first;
< #line 418
<   goto ldv_51629;
<   ldv_51628: 
< #line 419
<   tmp___4 = overlaps(i->sector, (int )i->size, sector, size);
< #line 419
<   if (tmp___4 != 0) {
< #line 420
<     tmp___2 = get_current();
< #line 420
<     tmp___3 = get_current();
< #line 420
<     dev_alert((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "%s[%u] Concurrent local write detected! [DISCARD L] new: %llus +%u; pending: %llus +%u\n",
<               (char *)(& tmp___3->comm), tmp___2->pid, (unsigned long long )sector,
<               size, (unsigned long long )i->sector, i->size);
< #line 426
<     goto out_conflict;
---
> #line 449
>   if (((unsigned long )s & 131072UL) == 0UL && ((unsigned long )set & 131072UL) != 0UL) {
> #line 450
>     kref_get(& req->kref);
33779,33791c35835,35863
< #line 418
<   n = n->next;
<   ldv_51629: ;
< #line 418
<   if ((unsigned long )n != (unsigned long )((struct hlist_node *)0)) {
< #line 418
<     __mptr = (struct hlist_node  const  *)n;
< #line 418
<     i = (struct drbd_request *)__mptr + 0xffffffffffffffd8UL;
< #line 418
<     if (1 != 0) {
< #line 419
<       goto ldv_51628;
---
> #line 452
>   if (((unsigned long )s & 64UL) == 0UL && ((unsigned long )set & 64UL) != 0UL) {
> #line 453
>     atomic_add((int )(req->i.size >> 9), & mdev->ap_in_flight);
>   } else {
> 
>   }
> #line 455
>   if (((unsigned long )s & 16384UL) == 0UL && ((unsigned long )set & 16384UL) != 0UL) {
> #line 456
>     atomic_inc(& req->completion_ref);
>   } else {
> 
>   }
> #line 460
>   if (((unsigned long )s & 16384UL) != 0UL && ((unsigned long )clear & 16384UL) != 0UL) {
> #line 461
>     c_put = c_put + 1;
>   } else {
> 
>   }
> #line 463
>   if (((unsigned long )s & 8UL) == 0UL && ((unsigned long )set & 8UL) != 0UL) {
> #line 464
>     if (((unsigned long )req->rq_state & 1UL) == 0UL) {
> #line 464
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( req->rq_state & RQ_LOCAL_PENDING ) in %s:%d\n",
>               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
>               464);
33793,33794c35865
< #line 421
<       goto ldv_51630;
---
> 
33795a35867,35870
> #line 467
>     kref_get(& req->kref);
> #line 468
>     c_put = c_put + 1;
33799,33812c35874,35879
<   ldv_51630: ;
< #line 430
<   if (mdev->ee_hash_s != 0U) {
< #line 432
<     tmp___5 = __builtin_expect((unsigned long )mdev->ee_hash == (unsigned long )((struct hlist_head *)0),
<                                0L);
< #line 432
<     if (tmp___5 != 0L) {
< #line 432
<       __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"),
<                            "i" (432), "i" (12UL));
<       ldv_51631: ;
< #line 432
<       goto ldv_51631;
---
> #line 471
>   if ((int )s & 1 && clear & 1) {
> #line 472
>     if (((unsigned long )req->rq_state & 8UL) != 0UL) {
> #line 473
>       k_put = k_put + 1;
33814c35881,35882
< 
---
> #line 475
>       c_put = c_put + 1;
33816,33836c35884,35908
< #line 435
<     slot = ee_hash_slot___0(mdev, sector);
< #line 436
<     n = slot->first;
< #line 436
<     goto ldv_51636;
<     ldv_51635: 
< #line 437
<     tmp___8 = overlaps(e->sector, (int )e->size, sector, size);
< #line 437
<     if (tmp___8 != 0) {
< #line 438
<       tmp___6 = get_current();
< #line 438
<       tmp___7 = get_current();
< #line 438
<       dev_alert((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "%s[%u] Concurrent remote write detected! [DISCARD L] new: %llus +%u; pending: %llus +%u\n",
<                 (char *)(& tmp___7->comm), tmp___6->pid, (unsigned long long )sector,
<                 size, (unsigned long long )e->sector, e->size);
< #line 444
<       goto out_conflict;
---
>   } else {
> 
>   }
> #line 478
>   if (((unsigned long )s & 16UL) != 0UL && ((unsigned long )clear & 16UL) != 0UL) {
> #line 479
>     _dec_ap_pending(mdev, "mod_rq_state", 479);
> #line 480
>     c_put = c_put + 1;
>   } else {
> 
>   }
> #line 483
>   if (((unsigned long )s & 32UL) != 0UL && ((unsigned long )clear & 32UL) != 0UL) {
> #line 484
>     c_put = c_put + 1;
>   } else {
> 
>   }
> #line 486
>   if ((((unsigned long )s & 131072UL) != 0UL && ((unsigned long )s & 128UL) == 0UL) && ((unsigned long )set & 128UL) != 0UL) {
> #line 487
>     if (((unsigned long )req->rq_state & 64UL) != 0UL) {
> #line 488
>       atomic_sub((int )(req->i.size >> 9), & mdev->ap_in_flight);
33840,33856c35912,35929
< #line 436
<     n = n->next;
<     ldv_51636: ;
< #line 436
<     if ((unsigned long )n != (unsigned long )((struct hlist_node *)0)) {
< #line 436
<       __mptr___0 = (struct hlist_node  const  *)n;
< #line 436
<       e = (struct drbd_epoch_entry *)__mptr___0 + 0xffffffffffffffe8UL;
< #line 436
<       if (1 != 0) {
< #line 437
<         goto ldv_51635;
<       } else {
< #line 439
<         goto ldv_51637;
<       }
---
> #line 489
>     k_put = k_put + 1;
>   } else {
> 
>   }
> #line 494
>   if (k_put != 0 || c_put != 0) {
> #line 497
>     at_least = (c_put != 0) + k_put;
> #line 498
>     tmp___0 = atomic_read((atomic_t const   *)(& req->kref.refcount));
> #line 498
>     refcount = tmp___0;
> #line 499
>     if (refcount < at_least) {
> #line 500
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "mod_rq_state: Logic BUG: %x -> %x: refcount = %d, should be >= %d\n",
>               s, req->rq_state, refcount, at_least);
33860d35932
<     ldv_51637: ;
33864,33873c35936,35960
<   out_no_conflict: 
< #line 453
<   put_net_conf(mdev);
< #line 454
<   return (0);
<   out_conflict: 
< #line 457
<   put_net_conf(mdev);
< #line 458
<   return (1);
---
> #line 506
>   if ((unsigned int )*((unsigned char *)req + 88UL) != 0U) {
> #line 507
>     __wake_up(& mdev->misc_wait, 3U, 1, 0);
>   } else {
> 
>   }
> #line 509
>   if (c_put != 0) {
> #line 510
>     tmp___1 = drbd_req_put_completion_ref(req, m, c_put);
> #line 510
>     k_put = tmp___1 + k_put;
>   } else {
> 
>   }
> #line 511
>   if (k_put != 0) {
> #line 512
>     kref_sub(& req->kref, (unsigned int )k_put, & drbd_req_destroy);
>   } else {
> 
>   }
> #line 513
>   return;
33876c35963
< #line 461 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
---
> #line 515 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
33884c35971
< #line 465
---
> #line 519
33886,33888c35973,35975
< #line 465
<   if (tmp != 0) {
< #line 466
---
> #line 519
>   if (tmp == 0) {
> #line 520
33893c35980
< #line 468
---
> #line 522
33895c35982
< #line 468
---
> #line 522
33897,33899c35984,35986
<            (req->rq_state & 2048UL) != 0UL ? (char *)"WRITE" : (char *)"READ", (unsigned long long )req->sector,
<            req->size >> 9, tmp___0);
< #line 473
---
>            ((unsigned long )req->rq_state & 2048UL) != 0UL ? (char *)"WRITE" : (char *)"READ",
>            (unsigned long long )req->i.sector, req->i.size >> 9, tmp___0);
> #line 527
33903c35990
< #line 487 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
---
> #line 541 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
33906a35994,35995
>   struct net_conf *nc ;
>   int p ;
33908,33910c35997,36001
<   struct hlist_head *tmp ;
<   struct hlist_head *tmp___0 ;
<   int tmp___1 ;
---
>   struct net_conf *_________p1 ;
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
>   bool tmp___1 ;
33912c36003
<   int tmp___3 ;
---
>   bool tmp___3 ;
33913a36005,36006
>   struct net_conf *_________p1___0 ;
>   bool __warned___0 ;
33916,33925d36008
<   int tmp___7 ;
<   int tmp___8 ;
<   int tmp___9 ;
<   int tmp___10 ;
<   int tmp___11 ;
<   int tmp___12 ;
<   int tmp___13 ;
<   int tmp___14 ;
<   int tmp___15 ;
<   int tmp___16 ;
33928,33930c36011,36013
< #line 490
<   mdev = req->mdev;
< #line 491
---
> #line 544
>   mdev = req->w.ldv_49807.mdev;
> #line 546
33932,33934c36015,36022
< #line 492
<   m->bio = 0;
< #line 494
---
> #line 548
>   if ((unsigned long )m != (unsigned long )((struct bio_and_error *)0)) {
> #line 549
>     m->bio = 0;
>   } else {
> 
>   }
> #line 551
33937c36025
< #line 496
---
> #line 553
33939,33942c36027,36030
<           (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
<           496);
< #line 497
<   goto ldv_51652;
---
>           (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
>           553);
> #line 554
>   goto ldv_52190;
33944,33946c36032,36034
< #line 508
<   if ((req->rq_state & 1008UL) != 0UL) {
< #line 508
---
> #line 565
>   if (((unsigned long )req->rq_state & 1008UL) != 0UL) {
> #line 565
33948,33949c36036,36037
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
<             508);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
>             565);
33953,33958c36041,36075
< #line 509
<   req->rq_state = req->rq_state | 16UL;
< #line 510
<   inc_ap_pending(mdev);
< #line 511
<   goto ldv_51652;
---
> #line 566
>   rcu_read_lock___0();
> #line 567
>   _________p1 = *((struct net_conf * volatile  *)(& (mdev->tconn)->net_conf));
> #line 567
>   tmp = debug_lockdep_rcu_enabled();
> #line 567
>   if (tmp != 0 && ! __warned) {
> #line 567
>     tmp___0 = rcu_read_lock_held();
> #line 567
>     if (tmp___0 == 0 && 1) {
> #line 567
>       __warned = 1;
> #line 567
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
>                              567, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 567
>   nc = _________p1;
> #line 568
>   p = (int )nc->wire_protocol;
> #line 569
>   rcu_read_unlock___0();
> #line 570
>   req->rq_state = req->rq_state | (p != 3 ? (p == 2 ? 32768U : 0U) : 65536U);
> #line 573
>   mod_rq_state(req, m, 0, 16);
> #line 574
>   goto ldv_52190;
33960,33962c36077,36079
< #line 515
<   if ((req->rq_state & 15UL) != 0UL) {
< #line 515
---
> #line 578
>   if (((unsigned long )req->rq_state & 15UL) != 0UL) {
> #line 578
33964,33965c36081,36082
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
<             515);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
>             578);
33969,33977c36086,36094
< #line 516
<   req->rq_state = req->rq_state | 1UL;
< #line 517
<   goto ldv_51652;
<   case 23U: ;
< #line 520
<   if ((req->rq_state & 2048UL) != 0UL) {
< #line 521
<     mdev->writ_cnt = mdev->writ_cnt + (req->size >> 9);
---
> #line 579
>   mod_rq_state(req, m, 0, 1);
> #line 580
>   goto ldv_52190;
>   case 24U: ;
> #line 583
>   if (((unsigned long )req->rq_state & 2048UL) != 0UL) {
> #line 584
>     mdev->writ_cnt = mdev->writ_cnt + (req->i.size >> 9);
33979,33980c36096,36097
< #line 523
<     mdev->read_cnt = mdev->read_cnt + (req->size >> 9);
---
> #line 586
>     mdev->read_cnt = mdev->read_cnt + (req->i.size >> 9);
33982,33989c36099,36107
< #line 525
<   req->rq_state = req->rq_state | 6UL;
< #line 526
<   req->rq_state = req->rq_state & 0xfffffffffffffffeUL;
< #line 528
<   _req_may_be_done_not_susp(req, m);
< #line 529
<   goto ldv_51652;
---
> #line 588
>   mod_rq_state(req, m, 1, 6);
> #line 590
>   goto ldv_52190;
>   case 23U: 
> #line 593
>   mod_rq_state(req, m, 0, 8);
> #line 594
>   goto ldv_52190;
33991,34008c36109
< #line 532
<   req->rq_state = req->rq_state | 8UL;
< #line 533
<   if ((req->rq_state & 2048UL) != 0UL) {
< #line 534
<     _req_may_be_done_not_susp(req, m);
<   } else {
< #line 536
<     goto goto_queue_for_net_read;
<   }
< #line 537
<   goto ldv_51652;
<   case 21U: 
< #line 540
<   req->rq_state = req->rq_state | 2UL;
< #line 541
<   req->rq_state = req->rq_state & 0xfffffffffffffffeUL;
< #line 543
---
> #line 597
34010c36111
< #line 544
---
> #line 598
34012,34015c36113,36116
< #line 545
<   _req_may_be_done_not_susp(req, m);
< #line 546
<   goto ldv_51652;
---
> #line 599
>   mod_rq_state(req, m, 1, 2);
> #line 600
>   goto ldv_52190;
34017,34042c36118,36121
< #line 550
<   req->rq_state = req->rq_state | 2UL;
< #line 551
<   req->rq_state = req->rq_state & 0xfffffffffffffffeUL;
< #line 552
<   _req_may_be_done_not_susp(req, m);
< #line 553
<   goto ldv_51652;
<   case 19U: 
< #line 556
<   __drbd_set_out_of_sync(mdev, req->sector, (int )req->size, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
<                          556U);
< #line 558
<   req->rq_state = req->rq_state | 2UL;
< #line 559
<   req->rq_state = req->rq_state & 0xfffffffffffffffeUL;
< #line 561
<   if ((req->rq_state & 8UL) != 0UL) {
< #line 562
<     _req_may_be_done(req, m);
< #line 563
<     goto ldv_51652;
<   } else {
< 
<   }
< #line 566
---
> #line 603
>   __drbd_set_out_of_sync(mdev, req->i.sector, (int )req->i.size, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
>                          603U);
> #line 604
34044c36123
< #line 567
---
> #line 605
34046,34052c36125,36136
<   goto_queue_for_net_read: ;
< #line 571
<   if ((req->rq_state & 1008UL) != 0UL) {
< #line 571
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( !(req->rq_state & RQ_NET_MASK) ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
<             571);
---
>   case 21U: 
> #line 609
>   mod_rq_state(req, m, 1, 2);
> #line 610
>   goto ldv_52190;
>   case 4U: 
> #line 623
>   tmp___1 = drbd_interval_empty(& req->i);
> #line 623
>   if (tmp___1) {
> #line 623
>     tmp___2 = 0;
34054c36138,36139
< 
---
> #line 623
>     tmp___2 = 1;
34056,34061c36141,36146
< #line 575
<   if (*((unsigned int *)mdev + 569UL) != 65536U) {
< #line 576
<     _req_may_be_done_not_susp(req, m);
< #line 577
<     goto ldv_51652;
---
> #line 623
>   if (tmp___2) {
> #line 623
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( drbd_interval_empty(&req->i) ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
>             623);
34065,34078c36150,36156
< #line 581
<   req->rq_state = req->rq_state | 16UL;
< #line 582
<   inc_ap_pending(mdev);
<   case 4U: 
< #line 595
<   tmp = ar_hash_slot___0(mdev, req->sector);
< #line 595
<   hlist_add_head(& req->collision, tmp);
< #line 597
<   drbd_set_flag(mdev, UNPLUG_REMOTE);
< #line 599
<   if ((req->rq_state & 16UL) == 0UL) {
< #line 599
---
> #line 624
>   drbd_insert_interval(& mdev->read_requests, & req->i);
> #line 626
>   set_bit(0U, (unsigned long volatile   *)(& mdev->flags));
> #line 628
>   if (((unsigned long )req->rq_state & 16UL) == 0UL) {
> #line 628
34080,34081c36158,36159
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
<             599);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
>             628);
34085,34097c36163,36173
< #line 600
<   req->rq_state = req->rq_state | 32UL;
< #line 601
<   req->w.cb = (req->rq_state & 15UL) != 0UL ? & w_read_retry_remote : & w_send_read_req;
< #line 604
<   drbd_queue_work(& mdev->data.work, & req->w);
< #line 605
<   goto ldv_51652;
<   case 3U: 
< #line 611
<   tmp___0 = tl_hash_slot___0(mdev, req->sector);
< #line 611
<   hlist_add_head(& req->collision, tmp___0);
---
> #line 629
>   if (((unsigned long )req->rq_state & 15UL) != 0UL) {
> #line 629
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( (req->rq_state & RQ_LOCAL_MASK) == 0 ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
>             629);
>   } else {
> 
>   }
> #line 630
>   mod_rq_state(req, m, 0, 32);
34099,34107c36175,36196
<   drbd_set_flag(mdev, UNPLUG_REMOTE);
< #line 635
<   tmp___1 = drbd_test_flag(mdev, CREATE_BARRIER);
< #line 635
<   if (tmp___1 != 0) {
< #line 635
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( drbd_test_flag(mdev, CREATE_BARRIER) == 0 ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
<             635);
---
>   req->w.cb = & w_send_read_req;
> #line 632
>   drbd_queue_work(& (mdev->tconn)->sender_work, & req->w);
> #line 633
>   goto ldv_52190;
>   case 3U: 
> #line 641
>   tmp___3 = drbd_interval_empty(& req->i);
> #line 641
>   if (tmp___3) {
> #line 641
>     tmp___4 = 0;
>   } else {
> #line 641
>     tmp___4 = 1;
>   }
> #line 641
>   if (tmp___4) {
> #line 641
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( drbd_interval_empty(&req->i) ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
>             641);
34111,34117c36200,36206
< #line 637
<   req->epoch = (mdev->newest_tle)->br_number;
< #line 640
<   (mdev->newest_tle)->n_writes = (mdev->newest_tle)->n_writes + 1;
< #line 643
<   if ((req->rq_state & 16UL) == 0UL) {
< #line 643
---
> #line 642
>   drbd_insert_interval(& mdev->write_requests, & req->i);
> #line 661
>   set_bit(0U, (unsigned long volatile   *)(& mdev->flags));
> #line 664
>   if (((unsigned long )req->rq_state & 16UL) == 0UL) {
> #line 664
34119,34120c36208,36209
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
<             643);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
>             664);
34124,34126c36213,36215
< #line 644
<   req->rq_state = req->rq_state | 32UL;
< #line 645
---
> #line 665
>   mod_rq_state(req, m, 0, 131104);
> #line 666
34128,34133c36217,36238
< #line 646
<   drbd_queue_work(& mdev->data.work, & req->w);
< #line 649
<   if ((mdev->newest_tle)->n_writes >= (mdev->net_conf)->max_epoch_size) {
< #line 650
<     queue_barrier(mdev);
---
> #line 667
>   drbd_queue_work(& (mdev->tconn)->sender_work, & req->w);
> #line 670
>   rcu_read_lock___0();
> #line 671
>   _________p1___0 = *((struct net_conf * volatile  *)(& (mdev->tconn)->net_conf));
> #line 671
>   tmp___5 = debug_lockdep_rcu_enabled();
> #line 671
>   if (tmp___5 != 0 && ! __warned___0) {
> #line 671
>     tmp___6 = rcu_read_lock_held();
> #line 671
>     if (tmp___6 == 0 && 1) {
> #line 671
>       __warned___0 = 1;
> #line 671
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
>                              671, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
34137,34157c36242,36245
< #line 652
<   goto ldv_51652;
<   case 5U: 
< #line 655
<   req->rq_state = req->rq_state | 32UL;
< #line 656
<   req->w.cb = & w_send_oos;
< #line 657
<   drbd_queue_work(& mdev->data.work, & req->w);
< #line 658
<   goto ldv_51652;
<   case 11U: ;
<   case 6U: ;
<   case 7U: 
< #line 665
<   req->rq_state = req->rq_state & 0xffffffffffffffdfUL;
< #line 668
<   _req_may_be_done_not_susp(req, m);
< #line 669
<   goto ldv_51652;
<   case 8U: ;
---
> #line 671
>   nc = _________p1___0;
> #line 672
>   p = (int )nc->max_epoch_size;
34159c36247
<   if ((int )(req->master_bio)->bi_rw & 1) {
---
>   rcu_read_unlock___0();
34161c36249,36251
<     atomic_add((int )(req->size >> 9), & mdev->ap_in_flight);
---
>   if ((mdev->tconn)->current_tle_writes >= (unsigned int )p) {
> #line 675
>     start_new_tl_epoch(mdev->tconn);
34165,34166c36255,36257
< #line 676
<   if ((int )(req->master_bio)->bi_rw & 1 && (mdev->net_conf)->wire_protocol == 1) {
---
> #line 677
>   goto ldv_52190;
>   case 5U: 
34168,34181c36259
<     if ((req->rq_state & 16UL) != 0UL) {
< #line 681
<       tmp___2 = atomic_dec_and_test(& mdev->ap_pending_cnt);
< #line 681
<       if (tmp___2 != 0) {
< #line 681
<         __wake_up(& mdev->misc_wait, 3U, 1, 0);
<       } else {
< 
<       }
< #line 681
<       tmp___4 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
< #line 681
<       if (tmp___4 < 0) {
---
>   mod_rq_state(req, m, 0, 32);
34183,34189c36261
<         tmp___3 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
< #line 681
<         dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: ap_pending_cnt = %d < 0 !\n",
<                 "__req_mod", 681, tmp___3);
<       } else {
< 
<       }
---
>   req->w.cb = & w_send_out_of_sync;
34191c36263
<       req->rq_state = req->rq_state & 0xffffffffffffffefUL;
---
>   drbd_queue_work(& (mdev->tconn)->sender_work, & req->w);
34193,34201c36265,36268
<       req->rq_state = req->rq_state | 256UL;
<     } else {
< 
<     }
<   } else {
< 
<   }
< #line 689
<   req->rq_state = req->rq_state & 0xffffffffffffffdfUL;
---
>   goto ldv_52190;
>   case 11U: ;
>   case 6U: ;
>   case 7U: 
34203c36270
<   req->rq_state = req->rq_state | 64UL;
---
>   mod_rq_state(req, m, 32, 0);
34205,34212c36272,36275
<   _req_may_be_done_not_susp(req, m);
< #line 692
<   goto ldv_51652;
<   case 9U: 
< #line 697
<   req->rq_state = req->rq_state & 0xffffffffffffffdfUL;
< #line 698
<   req->rq_state = req->rq_state | 128UL;
---
>   goto ldv_52190;
>   case 8U: ;
> #line 695
>   if ((int )(req->master_bio)->bi_rw & 1 && ((unsigned long )req->rq_state & 98304UL) == 0UL) {
34214c36277
<   _req_may_be_done_not_susp(req, m);
---
>     if (((unsigned long )req->rq_state & 16UL) != 0UL) {
34216,34237c36279
<   goto ldv_51652;
<   case 10U: ;
< #line 705
<   if ((req->rq_state & 16UL) != 0UL) {
< #line 706
<     tmp___5 = atomic_dec_and_test(& mdev->ap_pending_cnt);
< #line 706
<     if (tmp___5 != 0) {
< #line 706
<       __wake_up(& mdev->misc_wait, 3U, 1, 0);
<     } else {
< 
<     }
< #line 706
<     tmp___7 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
< #line 706
<     if (tmp___7 < 0) {
< #line 706
<       tmp___6 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
< #line 706
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: ap_pending_cnt = %d < 0 !\n",
<               "__req_mod", 706, tmp___6);
---
>       mod_rq_state(req, m, 16, 256);
34243a36286,36287
> #line 706
>   mod_rq_state(req, m, 32, 64);
34245,34263c36289,36299
<   req->rq_state = req->rq_state & 0xfffffffffffffeefUL;
< #line 708
<   req->rq_state = req->rq_state | 128UL;
< #line 709
<   if ((req->rq_state & 64UL) != 0UL && (req->rq_state & 2048UL) != 0UL) {
< #line 710
<     atomic_sub((int )(req->size >> 9), & mdev->ap_in_flight);
<   } else {
< 
<   }
< #line 714
<   if ((req->rq_state & 32UL) == 0UL) {
< #line 715
<     _req_may_be_done(req, m);
<   } else {
< 
<   }
< #line 716
<   goto ldv_51652;
---
>   goto ldv_52190;
>   case 9U: 
> #line 712
>   mod_rq_state(req, m, 32, 128);
> #line 713
>   goto ldv_52190;
>   case 10U: 
> #line 717
>   mod_rq_state(req, m, 16656, 128);
> #line 720
>   goto ldv_52190;
34265,34269c36301,36306
< #line 722
<   if ((unsigned int )what == 15U) {
< #line 723
<     dev_alert((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Got DiscardAck packet %llus +%u! DRBD is not a random data generator!\n",
<               (unsigned long long )req->sector, req->size);
---
> #line 730
>   if (((unsigned long )req->rq_state & 16UL) == 0UL) {
> #line 730
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( req->rq_state & RQ_NET_PENDING ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
>             730);
34273,34278d36309
< #line 726
<   req->rq_state = req->rq_state | 128UL;
<   case 14U: ;
<   case 13U: ;
< #line 730
<   if ((unsigned int )what == 14U) {
34280c36311,36315
<     req->rq_state = req->rq_state | 512UL;
---
>   if (((unsigned long )req->rq_state & 65536UL) == 0UL) {
> #line 731
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( req->rq_state & RQ_EXP_WRITE_ACK ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
>             731);
34284,34292c36319,36332
<   case 12U: 
< #line 741
<   req->rq_state = req->rq_state | 256UL;
< #line 742
<   if ((req->rq_state & 16UL) == 0UL) {
< #line 742
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( req->rq_state & RQ_NET_PENDING ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
<             742);
---
> #line 732
>   mod_rq_state(req, m, 16, 384);
> #line 733
>   goto ldv_52190;
>   case 14U: 
> #line 736
>   req->rq_state = req->rq_state | 512U;
>   case 13U: ;
> #line 738
>   if (((unsigned long )req->rq_state & 65536UL) == 0UL) {
> #line 738
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( req->rq_state & RQ_EXP_WRITE_ACK ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
>             738);
34296,34301c36336,36344
< #line 743
<   tmp___8 = atomic_dec_and_test(& mdev->ap_pending_cnt);
< #line 743
<   if (tmp___8 != 0) {
< #line 743
<     __wake_up(& mdev->misc_wait, 3U, 1, 0);
---
> #line 744
>   goto ack_common;
>   case 12U: ;
> #line 746
>   if (((unsigned long )req->rq_state & 32768UL) == 0UL) {
> #line 746
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( req->rq_state & RQ_EXP_RECEIVE_ACK ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
>             746);
34305,34313c36348,36354
< #line 743
<   tmp___10 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
< #line 743
<   if (tmp___10 < 0) {
< #line 743
<     tmp___9 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
< #line 743
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: ap_pending_cnt = %d < 0 !\n",
<             "__req_mod", 743, tmp___9);
---
>   ack_common: ;
> #line 751
>   if (((unsigned long )req->rq_state & 16UL) == 0UL) {
> #line 751
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( req->rq_state & RQ_NET_PENDING ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
>             751);
34317,34336d36357
< #line 744
<   atomic_sub((int )(req->size >> 9), & mdev->ap_in_flight);
< #line 745
<   req->rq_state = req->rq_state & 0xffffffffffffffefUL;
< #line 746
<   _req_may_be_done_not_susp(req, m);
< #line 747
<   goto ldv_51652;
<   case 16U: ;
< #line 751
<   if ((req->rq_state & 16UL) != 0UL) {
< #line 752
<     tmp___11 = atomic_dec_and_test(& mdev->ap_pending_cnt);
< #line 752
<     if (tmp___11 != 0) {
< #line 752
<       __wake_up(& mdev->misc_wait, 3U, 1, 0);
<     } else {
< 
<     }
34338,34348c36359
<     tmp___13 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
< #line 752
<     if (tmp___13 < 0) {
< #line 752
<       tmp___12 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
< #line 752
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: ap_pending_cnt = %d < 0 !\n",
<               "__req_mod", 752, tmp___12);
<     } else {
< 
<     }
---
>   mod_rq_state(req, m, 16, 256);
34350c36361,36368
<     atomic_sub((int )(req->size >> 9), & mdev->ap_in_flight);
---
>   goto ldv_52190;
>   case 16U: ;
> #line 756
>   if (((unsigned long )req->rq_state & 65536UL) == 0UL) {
> #line 756
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( req->rq_state & RQ_EXP_WRITE_ACK ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
>             756);
34354,34366c36372,36377
< #line 755
<   req->rq_state = req->rq_state & 0xfffffffffffffeefUL;
< #line 757
<   req->rq_state = req->rq_state | 128UL;
< #line 758
<   _req_may_be_done_not_susp(req, m);
< #line 760
<   goto ldv_51652;
<   case 25U: ;
< #line 763
<   if ((req->rq_state & 2UL) == 0UL) {
< #line 764
<     goto ldv_51652;
---
> #line 761
>   if (((unsigned long )req->rq_state & 16UL) == 0UL) {
> #line 761
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( req->rq_state & RQ_NET_PENDING ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
>             761);
34370,34378c36381,36386
< #line 766
<   _req_may_be_done(req, m);
< #line 767
<   goto ldv_51652;
<   case 26U: ;
< #line 770
<   if ((req->rq_state & 2UL) == 0UL) {
< #line 771
<     goto ldv_51652;
---
> #line 762
>   req->rq_state = req->rq_state | 8192U;
> #line 763
>   if ((unsigned int )*((unsigned char *)req + 88UL) != 0U) {
> #line 764
>     __wake_up(& mdev->misc_wait, 3U, 1, 0);
34382,34383c36390,36397
< #line 773
<   req->rq_state = req->rq_state & 0xfffffffffffffffdUL;
---
> #line 768
>   goto ldv_52190;
>   case 17U: 
> #line 771
>   mod_rq_state(req, m, 272, 0);
> #line 772
>   goto ldv_52190;
>   case 26U: ;
34385c36399
<   rv = 2;
---
>   if (((unsigned long )req->rq_state & 2UL) == 0UL) {
34387,34389c36401
<   if ((int )(req->master_bio)->bi_rw & 1) {
< #line 777
<     rv = 1;
---
>     goto ldv_52190;
34393,34396c36405,36409
< #line 779
<   _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 780
<   req->w.cb = & w_restart_disk_io;
---
> #line 777
>   mod_rq_state(req, m, 16384, 0);
> #line 778
>   goto ldv_52190;
>   case 27U: ;
34398c36411
<   drbd_queue_work(& mdev->data.work, & req->w);
---
>   if (((unsigned long )req->rq_state & 2UL) == 0UL) {
34400,34409c36413
<   goto ldv_51652;
<   case 24U: ;
< #line 786
<   if ((req->rq_state & 2048UL) == 0UL && (unsigned long )req->w.cb == (unsigned long )((int (*)(struct drbd_conf * ,
<                                                                                                 struct drbd_work * ,
<                                                                                                 int  ))0)) {
< #line 787
<     _req_may_be_done(req, m);
< #line 788
<     goto ldv_51652;
---
>     goto ldv_52190;
34413,34427c36417,36424
< #line 795
<   if ((req->rq_state & 256UL) == 0UL) {
< #line 796
<     if ((unsigned long )req->w.cb != (unsigned long )((int (*)(struct drbd_conf * ,
<                                                                struct drbd_work * ,
<                                                                int  ))0)) {
< #line 797
<       drbd_queue_work(& mdev->data.work, & req->w);
< #line 798
<       rv = (req->rq_state & 2048UL) != 0UL ? 1 : 2;
<     } else {
< 
<     }
< #line 800
<     goto ldv_51652;
---
> #line 784
>   mod_rq_state(req, m, 16386, 1);
> #line 788
>   rv = 2;
> #line 789
>   if ((int )(req->master_bio)->bi_rw & 1) {
> #line 790
>     rv = 1;
34431,34435c36428,36443
<   case 17U: ;
< #line 805
<   if ((req->rq_state & 2048UL) == 0UL) {
< #line 806
<     goto ldv_51652;
---
> #line 792
>   _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 793
>   req->w.cb = & w_restart_disk_io;
> #line 794
>   drbd_queue_work(& (mdev->tconn)->sender_work, & req->w);
> #line 795
>   goto ldv_52190;
>   case 25U: ;
> #line 799
>   if (((unsigned long )req->rq_state & 2048UL) == 0UL && (unsigned long )req->w.cb == (unsigned long )((int (*)(struct drbd_work * ,
>                                                                                                                 int  ))0)) {
> #line 800
>     mod_rq_state(req, m, 16384, 0);
> #line 801
>     goto ldv_52190;
34439,34442c36447,36448
< #line 808
<   if ((req->rq_state & 16UL) != 0UL) {
< #line 812
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "FIXME (barrier_acked but pending)\n");
---
> #line 809
>   if (((unsigned long )req->rq_state & 256UL) == 0UL) {
34444,34447c36450,36453
<     list_move(& req->tl_requests, & mdev->out_of_sequence_requests);
<   } else {
< 
<   }
---
>     mod_rq_state(req, m, 16384, 48);
> #line 814
>     if ((unsigned long )req->w.cb != (unsigned long )((int (*)(struct drbd_work * ,
>                                                                int  ))0)) {
34449c36455
<   if ((req->rq_state & 1008UL) != 0UL) {
---
>       drbd_queue_work(& (mdev->tconn)->sender_work, & req->w);
34451,34455c36457
<     req->rq_state = req->rq_state | 128UL;
< #line 817
<     if ((mdev->net_conf)->wire_protocol == 1) {
< #line 818
<       atomic_sub((int )(req->size >> 9), & mdev->ap_in_flight);
---
>       rv = ((unsigned long )req->rq_state & 2048UL) != 0UL ? 1 : 2;
34458a36461,36462
> #line 818
>     goto ldv_52190;
34462,34465d36465
< #line 820
<   _req_may_be_done(req, m);
< #line 821
<   goto ldv_51652;
34468,34472c36468,36470
<   if ((req->rq_state & 16UL) == 0UL) {
< #line 824
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( req->rq_state & RQ_NET_PENDING ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
<             824);
---
>   if (((unsigned long )req->rq_state & 2048UL) == 0UL) {
> #line 825
>     goto ldv_52190;
34476,34481c36474,36477
< #line 825
<   tmp___14 = atomic_dec_and_test(& mdev->ap_pending_cnt);
< #line 825
<   if (tmp___14 != 0) {
< #line 825
<     __wake_up(& mdev->misc_wait, 3U, 1, 0);
---
> #line 827
>   if (((unsigned long )req->rq_state & 16UL) != 0UL) {
> #line 831
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "FIXME (BARRIER_ACKED but pending)\n");
34485,34493c36481,36491
< #line 825
<   tmp___16 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
< #line 825
<   if (tmp___16 < 0) {
< #line 825
<     tmp___15 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
< #line 825
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: ap_pending_cnt = %d < 0 !\n",
<             "__req_mod", 825, tmp___15);
---
> #line 837
>   mod_rq_state(req, m, 16384, ((unsigned long )req->rq_state & 1008UL) != 0UL ? 128 : 0);
> #line 839
>   goto ldv_52190;
>   case 19U: ;
> #line 842
>   if (((unsigned long )req->rq_state & 16UL) == 0UL) {
> #line 842
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( req->rq_state & RQ_NET_PENDING ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
>             842);
34497,34504c36495,36498
< #line 826
<   req->rq_state = req->rq_state & 0xffffffffffffffefUL;
< #line 827
<   req->rq_state = req->rq_state | 384UL;
< #line 828
<   _req_may_be_done_not_susp(req, m);
< #line 829
<   goto ldv_51652;
---
> #line 843
>   mod_rq_state(req, m, 16, 384);
> #line 844
>   goto ldv_52190;
34506,34507c36500,36501
<   ldv_51652: ;
< #line 832
---
>   ldv_52190: ;
> #line 847
34511,34512c36505,36506
< #line 842 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
< static int drbd_may_do_local_read(struct drbd_conf *mdev , sector_t sector , int size ) 
---
> #line 857 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
> static bool drbd_may_do_local_read(struct drbd_conf *mdev , sector_t sector , int size ) 
34521,34523c36515,36517
< #line 847
<   if ((unsigned int )*((unsigned char *)mdev + 2277UL) == 16U) {
< #line 848
---
> #line 862
>   if ((unsigned int )*((unsigned char *)mdev + 749UL) == 16U) {
> #line 863
34528,34537c36522,36524
< #line 849
<   if ((int )mdev->state.ldv_39979.disk > 4) {
< #line 850
<     return (0);
<   } else {
< 
<   }
< #line 851
<   if ((int )mdev->state.ldv_39979.disk <= 3) {
< #line 852
---
> #line 864
>   if ((unsigned int )*((unsigned char *)mdev + 749UL) != 8U) {
> #line 865
34542,34544c36529
< #line 854
<   nr_sectors = drbd_get_capacity(mdev->this_bdev);
< #line 855
---
> #line 866
34546c36531,36533
< #line 857
---
> #line 867
>   nr_sectors = drbd_get_capacity(mdev->this_bdev);
> #line 868
34548c36535
< #line 857
---
> #line 868
34550,34551c36537,36538
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
<             857);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
>             868);
34555c36542
< #line 858
---
> #line 869
34557c36544
< #line 858
---
> #line 869
34559,34560c36546,36547
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
<             858);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
>             869);
34564c36551
< #line 860
---
> #line 871
34566c36553
< #line 861
---
> #line 872
34568c36555
< #line 863
---
> #line 874
34570c36557
< #line 863
---
> #line 874
34574,34575c36561,36563
< #line 866 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
< static void maybe_pull_ahead(struct drbd_conf *mdev ) 
---
> #line 877 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
> static bool remote_due_to_read_balancing(struct drbd_conf *mdev , sector_t sector ,
>                                          enum drbd_read_balancing rbm ) 
34577c36565,36566
<   int congested ;
---
>   struct backing_dev_info *bdi ;
>   int stripe_shift ;
34580,34581c36569,36571
<   union drbd_state __ns ;
<   union drbd_state __ns___0 ;
---
>   int tmp___1 ;
>   int tmp___2 ;
>   int tmp___3 ;
34584,34612c36574,36576
< #line 868
<   congested = 0;
< #line 875
<   tmp = _get_ldev_if_state(mdev, D_UP_TO_DATE);
< #line 875
<   if (tmp == 0) {
< #line 876
<     return;
<   } else {
< 
<   }
< #line 878
<   if ((mdev->net_conf)->cong_fill != 0) {
< #line 878
<     tmp___0 = atomic_read((atomic_t const   *)(& mdev->ap_in_flight));
< #line 878
<     if (tmp___0 >= (mdev->net_conf)->cong_fill) {
< #line 880
<       _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Congestion-fill threshold reached\n");
< #line 881
<       congested = 1;
<     } else {
< 
<     }
<   } else {
< 
<   }
< #line 884
<   if ((mdev->act_log)->used >= (unsigned int )(mdev->net_conf)->cong_extents) {
---
> #line 883
>   switch ((unsigned int )rbm) {
>   case 4U: 
34614c36578
<     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Congestion-extents threshold reached\n");
---
>   bdi = & ((((mdev->ldev)->backing_bdev)->bd_disk)->queue)->backing_dev_info;
34616,34642c36580,36599
<     congested = 1;
<   } else {
< 
<   }
< #line 889
<   if (congested != 0) {
< #line 890
<     queue_barrier(mdev);
< #line 892
<     if ((mdev->net_conf)->on_congestion == 1) {
< #line 893
<       __ns.i = mdev->state.i;
< #line 893
<       __ns.ldv_39979.conn = 22U;
< #line 893
<       _drbd_set_state(mdev, __ns, 0, 0);
<     } else {
< #line 895
<       __ns___0.i = mdev->state.i;
< #line 895
<       __ns___0.ldv_39979.conn = 1U;
< #line 895
<       _drbd_set_state(mdev, __ns___0, 0, 0);
<     }
<   } else {
< 
<   }
---
>   tmp = bdi_read_congested(bdi);
> #line 886
>   return (tmp != 0);
>   case 3U: 
> #line 888
>   tmp___0 = atomic_read((atomic_t const   *)(& mdev->local_cnt));
> #line 888
>   tmp___1 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
> #line 888
>   tmp___2 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
> #line 888
>   return (tmp___0 > tmp___1 + tmp___2);
>   case 5U: ;
>   case 6U: ;
>   case 7U: ;
>   case 8U: ;
>   case 9U: ;
>   case 10U: 
> #line 896
>   stripe_shift = (int )((unsigned int )rbm + 10U);
34644,34646c36601,36614
<   put_ldev(mdev);
< #line 898
<   return;
---
>   return (((sector >> (stripe_shift + -9)) & 1UL) != 0UL);
>   case 2U: 
> #line 899
>   tmp___3 = test_and_change_bit(22, (unsigned long volatile   *)(& mdev->flags));
> #line 899
>   return (tmp___3 != 0);
>   case 1U: ;
> #line 901
>   return (1);
>   case 0U: ;
>   default: ;
> #line 904
>   return (0);
>   }
34649,34650c36617,36618
< #line 900 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
< static int drbd_make_request_common(struct drbd_conf *mdev , struct bio *bio , unsigned long start_time ) 
---
> #line 917 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
> static void complete_conflicting_writes(struct drbd_request *req ) 
34652,34653c36620,36623
<   int rw ;
<   int size ;
---
>   wait_queue_t wait ;
>   struct task_struct *tmp ;
>   struct drbd_conf *mdev ;
>   struct drbd_interval *i ;
34655,34690c36625
<   struct drbd_tl_epoch *b ;
<   struct drbd_request *req ;
<   int local ;
<   int remote ;
<   int send_oos ;
<   int err ;
<   int ret ;
<   union drbd_state s ;
<   long tmp ;
<   int tmp___0 ;
<   int tmp___1 ;
<   bool tmp___2 ;
<   int tmp___3 ;
<   bool tmp___4 ;
<   int tmp___5 ;
<   int tmp___6 ;
<   int tmp___7 ;
<   void *tmp___8 ;
<   int tmp___9 ;
<   int tmp___10 ;
<   bool tmp___11 ;
<   bool tmp___12 ;
<   int tmp___13 ;
<   int tmp___14 ;
<   int tmp___15 ;
<   int tmp___16 ;
<   int tmp___17 ;
<   long tmp___18 ;
<   int tmp___19 ;
<   long tmp___20 ;
<   bool tmp___21 ;
<   int tmp___22 ;
<   int tmp___23 ;
<   int tmp___24 ;
<   int tmp___25 ;
<   int tmp___26 ;
---
>   int size ;
34693,34714d36627
< #line 902
<   rw = (int const   )bio->bi_rw & (int const   )8193;
< #line 903
<   size = (int const   )bio->bi_size;
< #line 904
<   sector = bio->bi_sector;
< #line 905
<   b = 0;
< #line 907
<   send_oos = 0;
< #line 908
<   err = -5;
< #line 909
<   ret = 0;
< #line 913
<   req = drbd_req_new(mdev, bio);
< #line 914
<   if ((unsigned long )req == (unsigned long )((struct drbd_request *)0)) {
< #line 915
<     dec_ap_bio(mdev);
< #line 918
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "could not kmalloc() req\n");
34716c36629,36639
<     bio_endio(bio, -12);
---
>   tmp = get_current();
> #line 919
>   wait.flags = 0U;
> #line 919
>   wait.private = (void *)tmp;
> #line 919
>   wait.func = & autoremove_wake_function;
> #line 919
>   wait.task_list.next = & wait.task_list;
> #line 919
>   wait.task_list.prev = & wait.task_list;
34718,34721c36641
<     return (0);
<   } else {
< 
<   }
---
>   mdev = req->w.ldv_49807.mdev;
34723,34725c36643,36645
<   req->start_time = start_time;
< #line 924
<   local = _get_ldev_if_state(mdev, D_INCONSISTENT);
---
>   sector = req->i.sector;
> #line 923
>   size = (int )req->i.size;
34727c36647
<   if (local == 0) {
---
>   i = drbd_find_overlap(& mdev->write_requests, sector, (unsigned int )size);
34729c36649
<     bio_put(req->private_bio);
---
>   if ((unsigned long )i == (unsigned long )((struct drbd_interval *)0)) {
34731c36651
<     req->private_bio = 0;
---
>     return;
34735,34738c36655,36661
< #line 929
<   if (rw == 1) {
< #line 933
<     tmp = __builtin_expect(size == 0, 0L);
---
>   ldv_52263: 
> #line 930
>   prepare_to_wait(& mdev->misc_wait, & wait, 2);
> #line 931
>   i = drbd_find_overlap(& mdev->write_requests, sector, (unsigned int )size);
> #line 932
>   if ((unsigned long )i == (unsigned long )((struct drbd_interval *)0)) {
34740,34747c36663,36664
<     if (tmp != 0L) {
< #line 935
<       if ((bio->bi_rw & 4096UL) == 0UL) {
< #line 935
<         dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( bio->bi_rw & REQ_FLUSH ) in %s:%d\n",
<                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
<                 935);
<       } else {
---
>     goto ldv_52262;
>   } else {
34749c36666,36668
<       }
---
>   }
> #line 935
>   i->waiting = -1;
34751,34752c36670,36672
<       remote = 0;
<     } else {
---
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 937
>   schedule();
34754,34756c36674,36679
<       remote = 1;
<     }
<   } else {
---
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 939
>   goto ldv_52263;
>   ldv_52262: 
> #line 940
>   finish_wait(& mdev->misc_wait, & wait);
34758,34762c36681,36702
<     if (local != 0) {
< #line 942
<       tmp___0 = drbd_may_do_local_read(mdev, sector, size);
< #line 942
<       if (tmp___0 == 0) {
---
>   return;
> }
> }
> #line 944 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
> static void maybe_pull_ahead(struct drbd_conf *mdev ) 
> { 
>   struct drbd_tconn *tconn ;
>   struct net_conf *nc ;
>   bool congested ;
>   enum drbd_on_congestion on_congestion ;
>   struct net_conf *_________p1 ;
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
>   int tmp___1 ;
>   int tmp___2 ;
>   union drbd_state __ns ;
>   union drbd_state __ns___0 ;
> 
>   {
> #line 946
>   tconn = mdev->tconn;
34764,34768c36704
<         local = 0;
< #line 949
<         bio_put(req->private_bio);
< #line 950
<         req->private_bio = 0;
---
>   congested = 0;
34770,34773c36706,36719
<         put_ldev(mdev);
<       } else {
< 
<       }
---
>   _________p1 = *((struct net_conf * volatile  *)(& tconn->net_conf));
> #line 951
>   tmp = debug_lockdep_rcu_enabled();
> #line 951
>   if (tmp != 0 && ! __warned) {
> #line 951
>     tmp___0 = rcu_read_lock_held();
> #line 951
>     if (tmp___0 == 0 && 1) {
> #line 951
>       __warned = 1;
> #line 951
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
>                              951, "suspicious rcu_dereference_check() usage");
34777,34778c36723,36724
< #line 954
<     remote = local == 0 && (int )mdev->state.ldv_39979.pdsk > 7;
---
>   } else {
> 
34780,34781c36726,36751
< #line 965
<   if ((rw == 8192 && (int )mdev->state.ldv_39979.disk > 3) && local == 0) {
---
> #line 951
>   nc = _________p1;
> #line 952
>   on_congestion = (unsigned long )nc != (unsigned long )((struct net_conf *)0) ? (enum drbd_on_congestion )nc->on_congestion : OC_BLOCK;
> #line 953
>   if ((unsigned int )on_congestion == 0U || tconn->agreed_pro_version <= 95) {
> #line 955
>     return;
>   } else {
> 
>   }
> #line 961
>   tmp___1 = _get_ldev_if_state(mdev, D_UP_TO_DATE);
> #line 961
>   if (tmp___1 == 0) {
> #line 962
>     return;
>   } else {
> 
>   }
> #line 964
>   if (nc->cong_fill != 0U) {
> #line 964
>     tmp___2 = atomic_read((atomic_t const   *)(& mdev->ap_in_flight));
> #line 964
>     if ((__u32 )tmp___2 >= nc->cong_fill) {
34783c36753
<     err = -11;
---
>       _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Congestion-fill threshold reached\n");
34785c36755,36758
<     goto fail_and_free_req;
---
>       congested = 1;
>     } else {
> 
>     }
34788a36762,36772
> #line 970
>   if ((mdev->act_log)->used >= nc->cong_extents) {
> #line 971
>     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Congestion-extents threshold reached\n");
> #line 972
>     congested = 1;
>   } else {
> 
>   }
> #line 975
>   if ((int )congested) {
34790,34794c36774
<   if ((rw == 1 && local != 0) && size != 0) {
< #line 977
<     tmp___1 = drbd_test_flag(mdev, AL_SUSPENDED);
< #line 977
<     if (tmp___1 == 0) {
---
>     start_new_tl_epoch(mdev->tconn);
34796c36776,36778
<       req->rq_state = req->rq_state | 4096UL;
---
>     if ((unsigned int )on_congestion == 1U) {
> #line 980
>       __ns = drbd_read_state(mdev);
34798c36780,36782
<       drbd_al_begin_io(mdev, sector);
---
>       __ns.ldv_40024.conn = 22U;
> #line 980
>       _drbd_set_state(mdev, __ns, 0, 0);
34800c36784,36789
< 
---
> #line 982
>       __ns___0 = drbd_read_state(mdev);
> #line 982
>       __ns___0.ldv_40024.conn = 1U;
> #line 982
>       _drbd_set_state(mdev, __ns___0, 0, 0);
34805,34810d36793
< #line 983
<   s = mdev->state;
< #line 984
<   if (remote != 0) {
< #line 984
<     tmp___2 = drbd_should_do_remote(s);
34812,34814c36795,36823
<     if ((int )tmp___2) {
< #line 984
<       tmp___3 = 1;
---
>   put_ldev(mdev);
> #line 985
>   return;
> }
> }
> #line 996 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
> static bool do_remote_read(struct drbd_request *req ) 
> { 
>   struct drbd_conf *mdev ;
>   enum drbd_read_balancing rbm ;
>   bool tmp ;
>   int tmp___0 ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp___1 ;
>   int tmp___2 ;
>   bool tmp___3 ;
> 
>   {
> #line 998
>   mdev = req->w.ldv_49807.mdev;
> #line 1001
>   if ((unsigned long )req->private_bio != (unsigned long )((struct bio *)0)) {
> #line 1002
>     tmp = drbd_may_do_local_read(mdev, req->i.sector, (int )req->i.size);
> #line 1002
>     if (tmp) {
> #line 1002
>       tmp___0 = 0;
34816,34817c36825,36826
< #line 984
<       tmp___3 = 0;
---
> #line 1002
>       tmp___0 = 1;
34819,34832c36828,36835
<   } else {
< #line 984
<     tmp___3 = 0;
<   }
< #line 984
<   remote = tmp___3;
< #line 985
<   if (rw == 1) {
< #line 985
<     tmp___4 = drbd_should_send_oos(s);
< #line 985
<     if ((int )tmp___4) {
< #line 985
<       tmp___5 = 1;
---
> #line 1002
>     if (tmp___0) {
> #line 1004
>       bio_put(req->private_bio);
> #line 1005
>       req->private_bio = 0;
> #line 1006
>       put_ldev(mdev);
34834,34835c36837
< #line 985
<       tmp___5 = 0;
---
> 
34838,34839c36840
< #line 985
<     tmp___5 = 0;
---
> 
34841,34848c36842,36845
< #line 985
<   send_oos = tmp___5;
< #line 986
<   if (remote != 0 && send_oos != 0) {
< #line 986
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( !(remote && send_oos) ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
<             986);
---
> #line 1010
>   if (*((unsigned int *)mdev + 187UL) != 65536U) {
> #line 1011
>     return (0);
34852,34872c36849,36852
< #line 988
<   if (local == 0 && remote == 0) {
< #line 988
<     tmp___7 = is_susp(mdev->state);
< #line 988
<     if (tmp___7 == 0) {
< #line 989
<       tmp___6 = ___ratelimit(& drbd_ratelimit_state, "drbd_make_request_common");
< #line 989
<       if (tmp___6 != 0) {
< #line 990
<         dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "IO ERROR: neither local nor remote data, sector %llu+%u\n",
<                 (unsigned long long )req->sector, req->size >> 9);
<       } else {
< 
<       }
< #line 992
<       goto fail_free_complete;
<     } else {
< 
<     }
---
> #line 1013
>   if ((unsigned long )req->private_bio == (unsigned long )((struct bio *)0)) {
> #line 1014
>     return (1);
34876,34897c36856,36872
< #line 1001
<   if ((rw == 1 && (remote != 0 || send_oos != 0)) && (unsigned long )mdev->unused_spare_tle == (unsigned long )((struct drbd_tl_epoch *)0)) {
< #line 1001
<     tmp___9 = drbd_test_flag(mdev, CREATE_BARRIER);
< #line 1001
<     if (tmp___9 != 0) {
<       allocate_barrier: 
< #line 1005
<       tmp___8 = kmalloc(56UL, 16U);
< #line 1005
<       b = (struct drbd_tl_epoch *)tmp___8;
< #line 1006
<       if ((unsigned long )b == (unsigned long )((struct drbd_tl_epoch *)0)) {
< #line 1007
<         dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Failed to alloc barrier.\n");
< #line 1008
<         err = -12;
< #line 1009
<         goto fail_free_complete;
<       } else {
< 
<       }
---
> #line 1019
>   rcu_read_lock___0();
> #line 1020
>   _________p1 = *((struct disk_conf * volatile  *)(& (mdev->ldev)->disk_conf));
> #line 1020
>   tmp___1 = debug_lockdep_rcu_enabled();
> #line 1020
>   if (tmp___1 != 0 && ! __warned) {
> #line 1020
>     tmp___2 = rcu_read_lock_held();
> #line 1020
>     if (tmp___2 == 0 && 1) {
> #line 1020
>       __warned = 1;
> #line 1020
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
>                              1020, "suspicious rcu_dereference_check() usage");
34904,34909c36879,36880
< #line 1014
<   spin_lock_irq(& mdev->req_lock);
< #line 1016
<   tmp___10 = is_susp(mdev->state);
< #line 1016
<   if (tmp___10 != 0) {
---
> #line 1020
>   rbm = (enum drbd_read_balancing )_________p1->read_balancing;
34911,34913c36882
<     ret = 1;
< #line 1022
<     spin_unlock_irq(& mdev->req_lock);
---
>   rcu_read_unlock___0();
34915c36884,36886
<     goto fail_free_complete;
---
>   if ((unsigned int )rbm == 0U && (unsigned long )req->private_bio != (unsigned long )((struct bio *)0)) {
> #line 1024
>     return (0);
34920,34922c36891,36893
<   if (remote != 0 || send_oos != 0) {
< #line 1027
<     tmp___11 = drbd_should_do_remote(mdev->state);
---
>   tmp___3 = remote_due_to_read_balancing(mdev, req->i.sector, rbm);
> #line 1026
>   if ((int )tmp___3) {
34924,34926c36895
<     remote = (int )tmp___11;
< #line 1028
<     if (rw == 1) {
---
>     if ((unsigned long )req->private_bio != (unsigned long )((struct bio *)0)) {
34928,34944c36897
<       tmp___12 = drbd_should_send_oos(mdev->state);
< #line 1028
<       if ((int )tmp___12) {
< #line 1028
<         tmp___13 = 1;
<       } else {
< #line 1028
<         tmp___13 = 0;
<       }
<     } else {
< #line 1028
<       tmp___13 = 0;
<     }
< #line 1028
<     send_oos = tmp___13;
< #line 1029
<     if (remote != 0 && send_oos != 0) {
---
>       bio_put(req->private_bio);
34946,34948c36899,36901
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( !(remote && send_oos) ) in %s:%d\n",
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
<               1029);
---
>       req->private_bio = 0;
> #line 1030
>       put_ldev(mdev);
34952,34953d36904
< #line 1031
<     if (remote == 0 && send_oos == 0) {
34955,34969c36906
<       dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "lost connection while grabbing the req_lock!\n");
<     } else {
< 
<     }
< #line 1033
<     if (local == 0 && remote == 0) {
< #line 1034
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "IO ERROR: neither local nor remote disk\n");
< #line 1035
<       spin_unlock_irq(& mdev->req_lock);
< #line 1036
<       goto fail_free_complete;
<     } else {
< 
<     }
---
>     return (1);
34973,34979c36910,36924
< #line 1040
<   if ((unsigned long )b != (unsigned long )((struct drbd_tl_epoch *)0) && (unsigned long )mdev->unused_spare_tle == (unsigned long )((struct drbd_tl_epoch *)0)) {
< #line 1041
<     mdev->unused_spare_tle = b;
< #line 1042
<     b = 0;
<   } else {
---
> #line 1035
>   return (0);
> }
> }
> #line 1041 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
> static int drbd_process_write_request(struct drbd_request *req ) 
> { 
>   struct drbd_conf *mdev ;
>   int remote ;
>   int send_oos ;
>   bool tmp ;
>   bool tmp___0 ;
>   bool tmp___1 ;
>   long tmp___2 ;
>   int tmp___3 ;
34981,34987c36926,36936
<   }
< #line 1044
<   if ((rw == 1 && (remote != 0 || send_oos != 0)) && (unsigned long )mdev->unused_spare_tle == (unsigned long )((struct drbd_tl_epoch *)0)) {
< #line 1044
<     tmp___14 = drbd_test_flag(mdev, CREATE_BARRIER);
< #line 1044
<     if (tmp___14 != 0) {
---
>   {
> #line 1043
>   mdev = req->w.ldv_49807.mdev;
> #line 1046
>   rcu_read_lock___0();
> #line 1047
>   tmp = drbd_should_do_remote(mdev->state);
> #line 1047
>   remote = (int )tmp;
> #line 1048
>   if (remote != 0) {
34989c36938
<       spin_unlock_irq(& mdev->req_lock);
---
>     maybe_pull_ahead(mdev);
34991,34994c36940,36942
<       goto allocate_barrier;
<     } else {
< 
<     }
---
>     tmp___0 = drbd_should_do_remote(mdev->state);
> #line 1050
>     remote = (int )tmp___0;
34998,35009c36946,36961
< #line 1055
<   _drbd_start_io_acct(mdev, req, bio);
< #line 1067
<   if ((remote != 0 || send_oos != 0) && (unsigned long )mdev->unused_spare_tle != (unsigned long )((struct drbd_tl_epoch *)0)) {
< #line 1067
<     tmp___16 = drbd_test_and_clear_flag(mdev, CREATE_BARRIER);
< #line 1067
<     if (tmp___16 != 0) {
< #line 1069
<       _tl_add_barrier(mdev, mdev->unused_spare_tle);
< #line 1070
<       mdev->unused_spare_tle = 0;
---
> #line 1052
>   tmp___1 = drbd_should_send_out_of_sync(mdev->state);
> #line 1052
>   send_oos = (int )tmp___1;
> #line 1053
>   rcu_read_unlock___0();
> #line 1061
>   tmp___2 = __builtin_expect(req->i.size == 0U, 0L);
> #line 1061
>   if (tmp___2 != 0L) {
> #line 1063
>     if (((req->master_bio)->bi_rw & 4096UL) == 0UL) {
> #line 1063
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( req->master_bio->bi_rw & REQ_FLUSH ) in %s:%d\n",
>               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
>               1063);
35011,35012c36963
< #line 1067
<       goto _L;
---
> 
35014,35025c36965,36968
<   } else
<   _L: /* CIL Label */ 
< #line 1072
<   if (remote != 0 && rw == 1) {
< #line 1072
<     tmp___15 = drbd_test_flag(mdev, CREATE_BARRIER);
< #line 1072
<     if (tmp___15 != 0) {
< #line 1072
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( !(remote && rw == WRITE && drbd_test_flag(mdev, CREATE_BARRIER)) ) in %s:%d\n",
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
<               1073);
---
> #line 1064
>     if (remote != 0) {
> #line 1065
>       start_new_tl_epoch(mdev->tconn);
35028a36972,36973
> #line 1066
>     return (0);
35032,35035c36977,36980
< #line 1091
<   if (remote != 0) {
< #line 1092
<     _req_mod(req, to_be_send);
---
> #line 1069
>   if (remote == 0 && send_oos == 0) {
> #line 1070
>     return (0);
35039,35042c36984,36989
< #line 1093
<   if (local != 0) {
< #line 1094
<     _req_mod(req, to_be_submitted);
---
> #line 1072
>   if (remote != 0 && send_oos != 0) {
> #line 1072
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( !(remote && send_oos) ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
>             1072);
35046,35053c36993,37006
< #line 1099
<   if (rw == 1) {
< #line 1099
<     tmp___17 = _req_conflicts(req);
< #line 1099
<     if (tmp___17 != 0) {
< #line 1100
<       goto fail_conflicting;
---
> #line 1074
>   if (remote != 0) {
> #line 1075
>     _req_mod(req, TO_BE_SENT);
> #line 1076
>     _req_mod(req, QUEUE_FOR_NET_WRITE);
>   } else {
> #line 1077
>     tmp___3 = __drbd_set_out_of_sync(mdev, req->i.sector, (int )req->i.size, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
>                                      1077U);
> #line 1077
>     if (tmp___3 != 0) {
> #line 1078
>       _req_mod(req, QUEUE_FOR_SEND_OOS);
35057,35058d37009
<   } else {
< 
35059a37011,37043
> #line 1080
>   return (remote);
> }
> }
> #line 1084 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
> static void drbd_submit_req_private_bio(struct drbd_request *req ) 
> { 
>   struct drbd_conf *mdev ;
>   struct bio *bio ;
>   int rw ;
>   int tmp ;
>   int tmp___0 ;
> 
>   {
> #line 1086
>   mdev = req->w.ldv_49807.mdev;
> #line 1087
>   bio = req->private_bio;
> #line 1088
>   rw = (int const   )bio->bi_rw & (int const   )8193;
> #line 1090
>   bio->bi_bdev = (mdev->ldev)->backing_bdev;
> #line 1097
>   tmp___0 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 1097
>   if (tmp___0 != 0) {
> #line 1098
>     tmp = drbd_insert_fault(mdev, rw != 1 ? (rw == 0 ? 5U : 6U) : 4U);
> #line 1098
>     if (tmp != 0) {
> #line 1102
>       bio_endio(bio, -5);
>     } else {
35061,35063c37045,37046
<   tmp___18 = __builtin_expect(size != 0, 1L);
< #line 1104
<   if (tmp___18 != 0L) {
---
>       generic_make_request(bio);
>     }
35065c37048
<     list_add_tail(& req->tl_requests, & (mdev->newest_tle)->requests);
---
>     put_ldev(mdev);
35067c37050,37051
< 
---
> #line 1107
>     bio_endio(bio, -5);
35069,35073c37053,37073
< #line 1109
<   if (remote != 0) {
< #line 1114
<     _req_mod(req, rw == 1 ? queue_for_net_write : queue_for_net_read);
<   } else {
---
> #line 1108
>   return;
> }
> }
> #line 1110 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
> void __drbd_make_request(struct drbd_conf *mdev , struct bio *bio , unsigned long start_time ) 
> { 
>   int rw ;
>   struct bio_and_error m ;
>   struct drbd_request *req ;
>   bool no_remote ;
>   int tmp ;
>   int tmp___0 ;
>   int tmp___1 ;
>   bool tmp___2 ;
>   int tmp___3 ;
>   int tmp___4 ;
>   long tmp___5 ;
>   int tmp___6 ;
>   int tmp___7 ;
>   int tmp___8 ;
35075,35080c37075,37083
<   }
< #line 1118
<   if (send_oos != 0) {
< #line 1118
<     tmp___19 = __drbd_set_out_of_sync(mdev, sector, size, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
<                                       1118U);
---
>   {
> #line 1112
>   rw = (int const   )bio->bi_rw & (int const   )8193;
> #line 1113
>   m.bio = 0;
> #line 1113
>   m.error = 0;
> #line 1115
>   no_remote = 0;
35082c37085
<     if (tmp___19 != 0) {
---
>   req = drbd_req_new(mdev, bio);
35084,35087c37087,37095
<       _req_mod(req, queue_for_send_oos);
<     } else {
< 
<     }
---
>   if ((unsigned long )req == (unsigned long )((struct drbd_request *)0)) {
> #line 1120
>     dec_ap_bio(mdev);
> #line 1123
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "could not kmalloc() req\n");
> #line 1124
>     bio_endio(bio, -12);
> #line 1125
>     return;
35091,35094c37099,37108
< #line 1121
<   if ((remote != 0 && (mdev->net_conf)->on_congestion != 0) && mdev->agreed_pro_version > 95) {
< #line 1123
<     maybe_pull_ahead(mdev);
---
> #line 1127
>   req->start_time = start_time;
> #line 1129
>   tmp = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 1129
>   if (tmp == 0) {
> #line 1130
>     bio_put(req->private_bio);
> #line 1131
>     req->private_bio = 0;
35098,35107c37112,37121
< #line 1128
<   tmp___20 = __builtin_expect((bio->bi_rw & 4096UL) != 0UL, 0L);
< #line 1128
<   if (tmp___20 != 0L && (mdev->newest_tle)->n_writes != 0) {
< #line 1128
<     tmp___21 = drbd_should_do_remote(mdev->state);
< #line 1128
<     if ((int )tmp___21) {
< #line 1131
<       queue_barrier(mdev);
---
> #line 1141
>   if ((rw == 1 && (unsigned long )req->private_bio != (unsigned long )((struct bio *)0)) && req->i.size != 0U) {
> #line 1141
>     tmp___0 = constant_test_bit(18U, (unsigned long const volatile   *)(& mdev->flags));
> #line 1141
>     if (tmp___0 == 0) {
> #line 1143
>       req->rq_state = req->rq_state | 4096U;
> #line 1144
>       drbd_al_begin_io(mdev, & req->i);
35114,35129c37128,37129
< #line 1133
<   spin_unlock_irq(& mdev->req_lock);
< #line 1134
<   kfree((void const   *)b);
< #line 1136
<   if (local != 0) {
< #line 1137
<     (req->private_bio)->bi_bdev = (mdev->ldev)->backing_bdev;
< #line 1144
<     tmp___23 = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 1144
<     if (tmp___23 != 0) {
< #line 1145
<       tmp___22 = drbd_insert_fault(mdev, rw != 1 ? (rw == 0 ? 5U : 6U) : 4U);
< #line 1145
<       if (tmp___22 != 0) {
---
> #line 1147
>   spin_lock_irq(& (mdev->tconn)->req_lock);
35131,35141c37131,37133
<         bio_endio(req->private_bio, -5);
<       } else {
< #line 1150
<         generic_make_request(req->private_bio);
<       }
< #line 1151
<       put_ldev(mdev);
<     } else {
< #line 1153
<       bio_endio(req->private_bio, -5);
<     }
---
>   if (rw == 1) {
> #line 1152
>     complete_conflicting_writes(req);
35145,35171c37137,37150
< #line 1156
<   return (0);
<   fail_conflicting: 
< #line 1165
<   _drbd_end_io_acct(mdev, req);
< #line 1166
<   spin_unlock_irq(& mdev->req_lock);
< #line 1167
<   if (remote != 0) {
< #line 1168
<     tmp___24 = atomic_dec_and_test(& mdev->ap_pending_cnt);
< #line 1168
<     if (tmp___24 != 0) {
< #line 1168
<       __wake_up(& mdev->misc_wait, 3U, 1, 0);
<     } else {
< 
<     }
< #line 1168
<     tmp___26 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
< #line 1168
<     if (tmp___26 < 0) {
< #line 1168
<       tmp___25 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
< #line 1168
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: ap_pending_cnt = %d < 0 !\n",
<               "drbd_make_request_common", 1168, tmp___25);
---
> #line 1157
>   tmp___1 = drbd_suspended(mdev);
> #line 1157
>   if (tmp___1 != 0) {
> #line 1159
>     req->rq_state = req->rq_state | 8192U;
> #line 1160
>     if ((unsigned long )req->private_bio != (unsigned long )((struct bio *)0)) {
> #line 1161
>       bio_put(req->private_bio);
> #line 1162
>       req->private_bio = 0;
> #line 1163
>       put_ldev(mdev);
35174a37154,37155
> #line 1165
>     goto out;
35178,35180c37159,37160
< #line 1171
<   err = 0;
<   fail_free_complete: ;
---
> #line 1169
>   _drbd_start_io_acct(mdev, req, bio);
35182c37162,37172
<   if ((req->rq_state & 4096UL) != 0UL) {
---
>   if (rw != 1) {
> #line 1175
>     tmp___2 = do_remote_read(req);
> #line 1175
>     if (tmp___2) {
> #line 1175
>       tmp___3 = 0;
>     } else {
> #line 1175
>       tmp___3 = 1;
>     }
35184c37174,37179
<     drbd_al_complete_io(mdev, sector);
---
>     if (tmp___3 && (unsigned long )req->private_bio == (unsigned long )((struct bio *)0)) {
> #line 1176
>       goto nodata;
>     } else {
> 
>     }
35188,35194d37182
<   fail_and_free_req: ;
< #line 1177
<   if (local != 0) {
< #line 1178
<     bio_put(req->private_bio);
< #line 1179
<     req->private_bio = 0;
35196,35197c37184,37195
<     put_ldev(mdev);
<   } else {
---
>   tmp___4 = atomic_read((atomic_t const   *)(& (mdev->tconn)->current_tle_nr));
> #line 1180
>   req->epoch = (unsigned int )tmp___4;
> #line 1184
>   tmp___5 = __builtin_expect(req->i.size != 0U, 1L);
> #line 1184
>   if (tmp___5 != 0L) {
> #line 1185
>     if (rw == 1) {
> #line 1186
>       (mdev->tconn)->current_tle_writes = (mdev->tconn)->current_tle_writes + 1U;
>     } else {
35199,35203c37197,37199
<   }
< #line 1182
<   if (ret == 0) {
< #line 1183
<     bio_endio(bio, err);
---
>     }
> #line 1188
>     list_add_tail(& req->tl_requests, & (mdev->tconn)->transfer_log);
35207,35224c37203,37215
< #line 1185
<   drbd_req_free(req);
< #line 1186
<   dec_ap_bio(mdev);
< #line 1187
<   kfree((void const   *)b);
< #line 1189
<   return (ret);
< }
< }
< #line 1197 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
< static int drbd_fail_request_early(struct drbd_conf *mdev , int is_write ) 
< { 
<   struct task_struct *tmp ;
<   struct task_struct *tmp___0 ;
<   int tmp___1 ;
< 
<   {
---
> #line 1191
>   if (rw == 1) {
> #line 1192
>     tmp___6 = drbd_process_write_request(req);
> #line 1192
>     if (tmp___6 == 0) {
> #line 1193
>       no_remote = 1;
>     } else
> #line 1197
>     if ((unsigned long )req->private_bio == (unsigned long )((struct bio *)0)) {
> #line 1198
>       _req_mod(req, TO_BE_SENT);
35226,35237c37217
<   if ((unsigned int )*((unsigned char *)mdev + 2276UL) != 1U && (! allow_oos || is_write != 0)) {
< #line 1201
<     tmp___1 = ___ratelimit(& drbd_ratelimit_state, "drbd_fail_request_early");
< #line 1201
<     if (tmp___1 != 0) {
< #line 1202
<       tmp = get_current();
< #line 1202
<       tmp___0 = get_current();
< #line 1202
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Process %s[%u] tried to %s; since we are not in Primary state, we cannot allow this\n",
<               (char *)(& tmp___0->comm), tmp->pid, is_write != 0 ? (char *)"WRITE" : (char *)"READ");
---
>       _req_mod(req, QUEUE_FOR_NET_READ);
35239c37219,37220
< 
---
> #line 1201
>       no_remote = 1;
35241,35242d37221
< #line 1208
<     return (1);
35245a37225,37235
> #line 1204
>   if ((unsigned long )req->private_bio != (unsigned long )((struct bio *)0)) {
> #line 1206
>     _req_mod(req, TO_BE_SUBMITTED);
> #line 1208
>     spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 1209
>     drbd_submit_req_private_bio(req);
> #line 1210
>     spin_lock_irq(& (mdev->tconn)->req_lock);
>   } else
35247,35266c37237,37246
<   return (0);
< }
< }
< #line 1214 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
< void drbd_make_request(struct request_queue *q , struct bio *bio ) 
< { 
<   unsigned int s_enr ;
<   unsigned int e_enr ;
<   struct drbd_conf *mdev ;
<   unsigned long start_time ;
<   int tmp ;
<   int tmp___0 ;
<   long tmp___1 ;
<   struct bio_pair *bp ;
<   sector_t sect ;
<   int sps ;
<   int mask ;
<   sector_t first_sectors ;
<   int tmp___2 ;
<   int tmp___3 ;
---
>   if ((int )no_remote) {
>     nodata: 
> #line 1213
>     tmp___7 = ___ratelimit(& drbd_ratelimit_state, "__drbd_make_request");
> #line 1213
>     if (tmp___7 != 0) {
> #line 1214
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "IO ERROR: neither local nor remote data, sector %llu+%u\n",
>               (unsigned long long )req->i.sector, req->i.size >> 9);
>     } else {
35268,35274c37248,37252
<   {
< #line 1217
<   mdev = (struct drbd_conf *)q->queuedata;
< #line 1220
<   tmp = drbd_fail_request_early(mdev, (int )bio->bi_rw & 1);
< #line 1220
<   if (tmp != 0) {
---
>     }
>   } else {
> 
>   }
>   out: 
35276c37254,37256
<     bio_endio(bio, -1);
---
>   tmp___8 = drbd_req_put_completion_ref(req, & m, 1);
> #line 1221
>   if (tmp___8 != 0) {
35278c37258
<     return;
---
>     kref_put(& req->kref, & drbd_req_destroy);
35281a37262,37263
> #line 1223
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
35283,35289c37265,37267
<   start_time = jiffies;
< #line 1230
<   if ((bio->bi_size & 511U) != 0U) {
< #line 1230
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( (bio->bi_size & 0x1ff) == 0 ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
<             1230);
---
>   if ((unsigned long )m.bio != (unsigned long )((struct bio *)0)) {
> #line 1226
>     complete_master_bio(mdev, & m);
35293,35294c37271,37283
< #line 1234
<   s_enr = (unsigned int )(bio->bi_sector >> 8);
---
> #line 1227
>   return;
> }
> }
> #line 1230 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
> void drbd_make_request(struct request_queue *q , struct bio *bio ) 
> { 
>   struct drbd_conf *mdev ;
>   unsigned long start_time ;
> 
>   {
> #line 1232
>   mdev = (struct drbd_conf *)q->queuedata;
35296,35303c37285
<   e_enr = bio->bi_size != 0U ? (unsigned int )(((bio->bi_sector + (sector_t )(bio->bi_size >> 9)) - 1UL) >> 8) : s_enr;
< #line 1237
<   tmp___1 = __builtin_expect(s_enr == e_enr, 1L);
< #line 1237
<   if (tmp___1 != 0L) {
<     ldv_51750: 
< #line 1239
<     inc_ap_bio(mdev, 1);
---
>   start_time = jiffies;
35305c37287
<     tmp___0 = drbd_make_request_common(mdev, bio, start_time);
---
>   if ((bio->bi_size & 511U) != 0U) {
35307,35325c37289,37291
<     if (tmp___0 != 0) {
< #line 1241
<       goto ldv_51750;
<     } else {
< 
<     }
< 
< #line 1241
<     return;
<   } else {
< 
<   }
< #line 1246
<   if (((unsigned int )bio->bi_vcnt != 1U || (unsigned int )bio->bi_idx != 0U) || bio->bi_size > 131072U) {
< #line 1248
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "bio would need to, but cannot, be split: (vcnt=%u,idx=%u,size=%u,sector=%llu)\n",
<             (int )bio->bi_vcnt, (int )bio->bi_idx, bio->bi_size, (unsigned long long )bio->bi_sector);
< #line 1252
<     bio_endio(bio, -22);
---
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( IS_ALIGNED(bio->bi_size, 512) ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
>             1240);
35327,35376d37292
< #line 1264
<     sect = bio->bi_sector;
< #line 1265
<     sps = 256;
< #line 1266
<     mask = sps + -1;
< #line 1267
<     first_sectors = (unsigned long )sps - ((unsigned long )mask & sect);
< #line 1268
<     bp = bio_split(bio, (int )first_sectors);
< #line 1275
<     inc_ap_bio(mdev, 3);
< #line 1277
<     if (s_enr + 1U != e_enr) {
< #line 1277
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( e_enr == s_enr + 1 ) in %s:%d\n",
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
<               1277);
<     } else {
< 
<     }
< #line 1279
<     goto ldv_51758;
<     ldv_51757: 
< #line 1280
<     inc_ap_bio(mdev, 1);
<     ldv_51758: 
< #line 1279
<     tmp___2 = drbd_make_request_common(mdev, & bp->bio1, start_time);
< #line 1279
<     if (tmp___2 != 0) {
< #line 1280
<       goto ldv_51757;
<     } else {
< 
<     }
< 
< #line 1282
<     goto ldv_51761;
<     ldv_51760: 
< #line 1283
<     inc_ap_bio(mdev, 1);
<     ldv_51761: 
< #line 1282
<     tmp___3 = drbd_make_request_common(mdev, & bp->bio2, start_time);
< #line 1282
<     if (tmp___3 != 0) {
< #line 1283
<       goto ldv_51760;
<     } else {
35378,35382d37293
<     }
< #line 1285
<     dec_ap_bio(mdev);
< #line 1287
<     bio_pair_release(bp);
35384c37295,37299
< #line 1289
---
> #line 1242
>   inc_ap_bio(mdev);
> #line 1243
>   __drbd_make_request(mdev, bio, start_time);
> #line 1244
35388c37303
< #line 1304 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
---
> #line 1258 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
35392d37306
<   unsigned int bio_offset ;
35402c37316
< #line 1306
---
> #line 1260
35404,35406c37318
< #line 1307
<   bio_offset = (unsigned int )bvm->bi_sector << 9;
< #line 1309
---
> #line 1261
35408,35446c37320,37339
< #line 1312
<   limit = (int )(131072U - ((bio_offset & 131071U) + bio_size));
< #line 1314
<   if (limit < 0) {
< #line 1315
<     limit = 0;
<   } else {
< 
<   }
< #line 1316
<   if (bio_size == 0U) {
< #line 1317
<     if ((unsigned int )limit <= bvec->bv_len) {
< #line 1318
<       limit = (int )bvec->bv_len;
<     } else
< #line 1319
<     if (limit != 0) {
< #line 1319
<       tmp = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 1319
<       if (tmp != 0) {
< #line 1320
<         b = (((mdev->ldev)->backing_bdev)->bd_disk)->queue;
< #line 1322
<         if ((unsigned long )b->merge_bvec_fn != (unsigned long )((merge_bvec_fn *)0)) {
< #line 1323
<           backing_limit = (*(b->merge_bvec_fn))(b, bvm, bvec);
< #line 1324
<           _min1 = limit;
< #line 1324
<           _min2 = backing_limit;
< #line 1324
<           limit = _min1 < _min2 ? _min1 : _min2;
<         } else {
< 
<         }
< #line 1326
<         put_ldev(mdev);
---
> #line 1262
>   limit = 1048576;
> #line 1265
>   if (bio_size != 0U) {
> #line 1265
>     tmp = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 1265
>     if (tmp != 0) {
> #line 1266
>       b = (((mdev->ldev)->backing_bdev)->bd_disk)->queue;
> #line 1268
>       if ((unsigned long )b->merge_bvec_fn != (unsigned long )((merge_bvec_fn *)0)) {
> #line 1269
>         backing_limit = (*(b->merge_bvec_fn))(b, bvm, bvec);
> #line 1270
>         _min1 = limit;
> #line 1270
>         _min2 = backing_limit;
> #line 1270
>         limit = _min1 < _min2 ? _min1 : _min2;
35449a37343,37344
> #line 1272
>       put_ldev(mdev);
35456c37351
< #line 1328
---
> #line 1274
35460c37355,37397
< #line 1331 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
---
> #line 1277 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
> struct drbd_request *find_oldest_request(struct drbd_tconn *tconn ) 
> { 
>   struct drbd_request *r ;
>   struct list_head  const  *__mptr ;
>   int tmp ;
>   struct list_head  const  *__mptr___0 ;
> 
>   {
> #line 1282
>   __mptr = (struct list_head  const  *)tconn->transfer_log.next;
> #line 1282
>   r = (struct drbd_request *)__mptr + 0xffffffffffffff98UL;
> #line 1282
>   goto ldv_52338;
>   ldv_52337: 
> #line 1283
>   tmp = atomic_read((atomic_t const   *)(& r->completion_ref));
> #line 1283
>   if (tmp != 0) {
> #line 1284
>     return (r);
>   } else {
> 
>   }
> #line 1282
>   __mptr___0 = (struct list_head  const  *)r->tl_requests.next;
> #line 1282
>   r = (struct drbd_request *)__mptr___0 + 0xffffffffffffff98UL;
>   ldv_52338: ;
> #line 1282
>   if ((unsigned long )(& r->tl_requests) != (unsigned long )(& tconn->transfer_log)) {
> #line 1283
>     goto ldv_52337;
>   } else {
> 
>   }
> 
> #line 1286
>   return (0);
> }
> }
> #line 1289 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
35463a37401
>   struct drbd_tconn *tconn ;
35465c37403
<   struct list_head *le ;
---
>   struct net_conf *nc ;
35470a37409,37410
>   struct net_conf *_________p1 ;
>   bool __warned ;
35472a37413,37417
>   struct disk_conf *_________p1___0 ;
>   bool __warned___0 ;
>   int tmp___1 ;
>   int tmp___2 ;
>   int tmp___3 ;
35477,35480c37422,37423
<   unsigned long tmp___1 ;
<   unsigned long tmp___2 ;
<   int tmp___3 ;
<   struct list_head  const  *__mptr ;
---
>   unsigned long tmp___4 ;
>   unsigned long tmp___5 ;
35484c37427
< #line 1333
---
> #line 1291
35486c37429,37431
< #line 1336
---
> #line 1292
>   tconn = mdev->tconn;
> #line 1295
35488c37433
< #line 1336
---
> #line 1295
35490,35497c37435,37451
< #line 1339
<   tmp = get_net_conf(mdev);
< #line 1339
<   if (tmp != 0) {
< #line 1340
<     if ((int )mdev->state.ldv_39979.conn > 8) {
< #line 1341
<       ent = (unsigned long )((((mdev->net_conf)->timeout * 250) / 10) * (mdev->net_conf)->ko_count);
---
> #line 1298
>   rcu_read_lock___0();
> #line 1299
>   _________p1 = *((struct net_conf * volatile  *)(& tconn->net_conf));
> #line 1299
>   tmp = debug_lockdep_rcu_enabled();
> #line 1299
>   if (tmp != 0 && ! __warned) {
> #line 1299
>     tmp___0 = rcu_read_lock_held();
> #line 1299
>     if (tmp___0 == 0 && 1) {
> #line 1299
>       __warned = 1;
> #line 1299
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
>                              1299, "suspicious rcu_dereference_check() usage");
35501,35502d37454
< #line 1343
<     put_net_conf(mdev);
35506,35512c37458,37494
< #line 1345
<   tmp___0 = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 1345
<   if (tmp___0 != 0) {
< #line 1346
<     dt = (unsigned long )(((mdev->ldev)->dc.disk_timeout * 250) / 10);
< #line 1347
---
> #line 1299
>   nc = _________p1;
> #line 1300
>   if ((unsigned long )nc != (unsigned long )((struct net_conf *)0) && (int )mdev->state.ldv_49522.conn > 8) {
> #line 1301
>     ent = (unsigned long )(((nc->timeout * 250U) / 10U) * nc->ko_count);
>   } else {
> 
>   }
> #line 1303
>   tmp___3 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 1303
>   if (tmp___3 != 0) {
> #line 1304
>     _________p1___0 = *((struct disk_conf * volatile  *)(& (mdev->ldev)->disk_conf));
> #line 1304
>     tmp___1 = debug_lockdep_rcu_enabled();
> #line 1304
>     if (tmp___1 != 0 && ! __warned___0) {
> #line 1304
>       tmp___2 = rcu_read_lock_held();
> #line 1304
>       if (tmp___2 == 0 && 1) {
> #line 1304
>         __warned___0 = 1;
> #line 1304
>         lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared",
>                                1304, "suspicious rcu_dereference_check() usage");
>       } else {
> 
>       }
>     } else {
> 
>     }
> #line 1304
>     dt = (unsigned long )((_________p1___0->disk_timeout * 250U) / 10U);
> #line 1305
35517c37499,37501
< #line 1349
---
> #line 1307
>   rcu_read_unlock___0();
> #line 1309
35519c37503
< #line 1349
---
> #line 1309
35521c37505
< #line 1349
---
> #line 1309
35523c37507
< #line 1349
---
> #line 1309
35525c37509
< #line 1349
---
> #line 1309
35527c37511
< #line 1349
---
> #line 1309
35529,35530c37513,37514
< #line 1349
<       tmp___1 = _min1 < _min2 ? _min1 : _min2;
---
> #line 1309
>       tmp___4 = _min1 < _min2 ? _min1 : _min2;
35532,35533c37516,37517
< #line 1349
<       tmp___1 = __x;
---
> #line 1309
>       tmp___4 = __x;
35535,35536c37519,37520
< #line 1349
<     tmp___2 = tmp___1;
---
> #line 1309
>     tmp___5 = tmp___4;
35538,35539c37522,37523
< #line 1349
<     tmp___2 = __y;
---
> #line 1309
>     tmp___5 = __y;
35541,35543c37525,37527
< #line 1349
<   et = tmp___2;
< #line 1351
---
> #line 1309
>   et = tmp___5;
> #line 1311
35545c37529
< #line 1352
---
> #line 1312
35550c37534
< #line 1354
---
> #line 1314
35552,35562c37536,37544
< #line 1356
<   spin_lock_irq(& mdev->req_lock);
< #line 1357
<   le = & (mdev->oldest_tle)->requests;
< #line 1358
<   tmp___3 = list_empty((struct list_head  const  *)le);
< #line 1358
<   if (tmp___3 != 0) {
< #line 1359
<     spin_unlock_irq(& mdev->req_lock);
< #line 1360
---
> #line 1316
>   spin_lock_irq(& tconn->req_lock);
> #line 1317
>   req = find_oldest_request(tconn);
> #line 1318
>   if ((unsigned long )req == (unsigned long )((struct drbd_request *)0)) {
> #line 1319
>     spin_unlock_irq(& tconn->req_lock);
> #line 1320
35564c37546
< #line 1361
---
> #line 1321
35569,35577c37551,37553
< #line 1364
<   le = le->prev;
< #line 1365
<   __mptr = (struct list_head  const  *)le;
< #line 1365
<   req = (struct drbd_request *)__mptr + 0xffffffffffffffb8UL;
< #line 1385
<   if (((ent != 0UL && (req->rq_state & 16UL) != 0UL) && ((1 != 0 && 1 != 0) && (long )(req->start_time + ent) - (long )now < 0L)) && (((1 == 0 || 1 == 0) || (long )now - (long )mdev->last_reconnect_jif < 0L) || ((1 == 0 || 1 == 0) || (long )(mdev->last_reconnect_jif + ent) - (long )now < 0L))) {
< #line 1386
---
> #line 1342
>   if (((ent != 0UL && ((unsigned long )req->rq_state & 16UL) != 0UL) && ((1 != 0 && 1 != 0) && (long )(req->start_time + ent) - (long )now < 0L)) && (((1 == 0 || 1 == 0) || (long )now - (long )tconn->last_reconnect_jif < 0L) || ((1 == 0 || 1 == 0) || (long )(tconn->last_reconnect_jif + ent) - (long )now < 0L))) {
> #line 1343
35579,35583c37555,37559
< #line 1387
<     __ns.i = mdev->state.i;
< #line 1387
<     __ns.ldv_39979.conn = 3U;
< #line 1387
---
> #line 1344
>     __ns = drbd_read_state(mdev);
> #line 1344
>     __ns.ldv_40024.conn = 3U;
> #line 1344
35588,35590c37564,37566
< #line 1391
<   if (((dt != 0UL && (int )req->rq_state & 1) && ((1 != 0 && 1 != 0) && (long )(req->start_time + dt) - (long )now < 0L)) && (((1 == 0 || 1 == 0) || (long )now - (long )mdev->last_reattach_jif < 0L) || ((1 == 0 || 1 == 0) || (long )(mdev->last_reattach_jif + dt) - (long )now < 0L))) {
< #line 1392
---
> #line 1348
>   if ((((dt != 0UL && (int )req->rq_state & 1) && (unsigned long )req->w.ldv_49807.mdev == (unsigned long )mdev) && ((1 != 0 && 1 != 0) && (long )(req->start_time + dt) - (long )now < 0L)) && (((1 == 0 || 1 == 0) || (long )now - (long )mdev->last_reattach_jif < 0L) || ((1 == 0 || 1 == 0) || (long )(mdev->last_reattach_jif + dt) - (long )now < 0L))) {
> #line 1349
35592c37568
< #line 1393
---
> #line 1350
35597c37573
< #line 1395
---
> #line 1352
35599,35601c37575,37577
< #line 1396
<   spin_unlock_irq(& mdev->req_lock);
< #line 1397
---
> #line 1353
>   spin_unlock_irq(& tconn->req_lock);
> #line 1354
35603c37579
< #line 1398
---
> #line 1355
35607,35608c37583,37584
< #line 1400 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
< void ldv_mutex_lock_137(struct mutex *ldv_func_arg1 ) 
---
> #line 1357 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
> void ldv_mutex_lock_149(struct mutex *ldv_func_arg1 ) 
35613c37589
< #line 1405
---
> #line 1362
35615c37591
< #line 1407
---
> #line 1364
35617c37593
< #line 1408
---
> #line 1365
35621,35622c37597,37598
< #line 1410 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
< void ldv_mutex_unlock_138(struct mutex *ldv_func_arg1 ) 
---
> #line 1367 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
> void ldv_mutex_unlock_150(struct mutex *ldv_func_arg1 ) 
35627c37603
< #line 1415
---
> #line 1372
35629c37605
< #line 1417
---
> #line 1374
35631c37607
< #line 1418
---
> #line 1375
35635,35636c37611,37612
< #line 1420 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
< void ldv_mutex_lock_139(struct mutex *ldv_func_arg1 ) 
---
> #line 1377 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
> void ldv_mutex_lock_151(struct mutex *ldv_func_arg1 ) 
35641c37617
< #line 1425
---
> #line 1382
35643c37619
< #line 1427
---
> #line 1384
35645c37621
< #line 1428
---
> #line 1385
35649,35650c37625,37626
< #line 1430 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
< int ldv_mutex_trylock_140(struct mutex *ldv_func_arg1 ) 
---
> #line 1387 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
> int ldv_mutex_trylock_152(struct mutex *ldv_func_arg1 ) 
35657c37633
< #line 1435
---
> #line 1392
35659c37635
< #line 1435
---
> #line 1392
35661c37637
< #line 1437
---
> #line 1394
35663c37639
< #line 1437
---
> #line 1394
35665c37641
< #line 1439
---
> #line 1396
35669,35670c37645,37646
< #line 1442 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
< void ldv_mutex_unlock_141(struct mutex *ldv_func_arg1 ) 
---
> #line 1399 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
> void ldv_mutex_unlock_153(struct mutex *ldv_func_arg1 ) 
35675c37651
< #line 1447
---
> #line 1404
35677c37653
< #line 1449
---
> #line 1406
35679c37655
< #line 1450
---
> #line 1407
35683,35684c37659,37660
< #line 1452 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
< void ldv_mutex_lock_142(struct mutex *ldv_func_arg1 ) 
---
> #line 1409 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
> void ldv_mutex_lock_154(struct mutex *ldv_func_arg1 ) 
35689c37665
< #line 1457
---
> #line 1414
35691c37667
< #line 1459
---
> #line 1416
35693c37669
< #line 1460
---
> #line 1417
35697,35698c37673,37674
< #line 1462 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
< void ldv_mutex_unlock_143(struct mutex *ldv_func_arg1 ) 
---
> #line 1419 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
> void ldv_mutex_unlock_155(struct mutex *ldv_func_arg1 ) 
35703c37679
< #line 1467
---
> #line 1424
35705c37681
< #line 1469
---
> #line 1426
35707c37683
< #line 1470
---
> #line 1427
35711,35712c37687,37688
< #line 1472 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
< void ldv_mutex_lock_144(struct mutex *ldv_func_arg1 ) 
---
> #line 1429 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
> void ldv_mutex_lock_156(struct mutex *ldv_func_arg1 ) 
35717c37693
< #line 1477
---
> #line 1434
35719c37695
< #line 1479
---
> #line 1436
35721c37697
< #line 1480
---
> #line 1437
35725,35726c37701,37702
< #line 1482 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
< void ldv_mutex_unlock_145(struct mutex *ldv_func_arg1 ) 
---
> #line 1439 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
> void ldv_mutex_unlock_157(struct mutex *ldv_func_arg1 ) 
35731c37707
< #line 1487
---
> #line 1444
35733c37709
< #line 1489
---
> #line 1446
35735c37711
< #line 1490
---
> #line 1447
35739,35740c37715,37716
< #line 1492 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
< void ldv_mutex_lock_146(struct mutex *ldv_func_arg1 ) 
---
> #line 1449 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
> void ldv_mutex_lock_158(struct mutex *ldv_func_arg1 ) 
35745c37721
< #line 1497
---
> #line 1454
35747c37723
< #line 1499
---
> #line 1456
35749c37725
< #line 1500
---
> #line 1457
35753,35754c37729,37730
< #line 1502 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
< void ldv_mutex_unlock_147(struct mutex *ldv_func_arg1 ) 
---
> #line 1459 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
> void ldv_mutex_unlock_159(struct mutex *ldv_func_arg1 ) 
35759c37735
< #line 1507
---
> #line 1464
35761,35803c37737
< #line 1509
<   mutex_unlock(ldv_func_arg1);
< #line 1510
<   return;
< }
< }
< #line 1512 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
< void ldv_mutex_lock_148(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1517
<   ldv_mutex_lock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 1519
<   mutex_lock(ldv_func_arg1);
< #line 1520
<   return;
< }
< }
< #line 1522 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
< void ldv_mutex_unlock_149(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1527
<   ldv_mutex_unlock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 1529
<   mutex_unlock(ldv_func_arg1);
< #line 1530
<   return;
< }
< }
< #line 1532 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_req.c.prepared"
< void ldv_mutex_unlock_150(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1537
<   ldv_mutex_unlock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 1539
---
> #line 1466
35805c37739
< #line 1540
---
> #line 1467
35871c37805
< int ldv_mutex_trylock_168(struct mutex *ldv_func_arg1 ) ;
---
> int ldv_mutex_trylock_174(struct mutex *ldv_func_arg1 ) ;
35873c37807
< void ldv_mutex_unlock_166(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_unlock_172(struct mutex *ldv_func_arg1 ) ;
35875c37809
< void ldv_mutex_unlock_169(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_unlock_175(struct mutex *ldv_func_arg1 ) ;
35877c37811
< void ldv_mutex_unlock_171(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_unlock_177(struct mutex *ldv_func_arg1 ) ;
35879c37813
< void ldv_mutex_unlock_173(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_unlock_179(struct mutex *ldv_func_arg1 ) ;
35881,35887c37815,37817
< void ldv_mutex_unlock_175(struct mutex *ldv_func_arg1 ) ;
< #line 196
< void ldv_mutex_unlock_177(struct mutex *ldv_func_arg1 ) ;
< #line 200
< void ldv_mutex_unlock_178(struct mutex *ldv_func_arg1 ) ;
< #line 10 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
< void ldv_mutex_lock_165(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_unlock_181(struct mutex *ldv_func_arg1 ) ;
> #line 10 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
> void ldv_mutex_lock_171(struct mutex *ldv_func_arg1 ) ;
35889c37819
< void ldv_mutex_lock_167(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_lock_173(struct mutex *ldv_func_arg1 ) ;
35891c37821
< void ldv_mutex_lock_170(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_lock_176(struct mutex *ldv_func_arg1 ) ;
35893c37823
< void ldv_mutex_lock_172(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_lock_178(struct mutex *ldv_func_arg1 ) ;
35895,35928c37825,37827
< void ldv_mutex_lock_174(struct mutex *ldv_func_arg1 ) ;
< #line 30
< void ldv_mutex_lock_176(struct mutex *ldv_func_arg1 ) ;
< #line 787 "include/linux/blkdev.h"
< __inline static struct request_queue *bdev_get_queue(struct block_device *bdev ) 
< { 
< 
< 
<   {
< #line 789
<   return ((bdev->bd_disk)->queue);
< }
< }
< #line 1098 "include/linux/blkdev.h"
< __inline static unsigned short queue_logical_block_size(struct request_queue *q ) 
< { 
<   int retval ;
< 
<   {
< #line 1100
<   retval = 512;
< #line 1102
<   if ((unsigned long )q != (unsigned long )((struct request_queue *)0) && (unsigned int )q->limits.logical_block_size != 0U) {
< #line 1103
<     retval = (int )q->limits.logical_block_size;
<   } else {
< 
<   }
< #line 1105
<   return ((unsigned short )retval);
< }
< }
< #line 1108 "include/linux/blkdev.h"
< __inline static unsigned short bdev_logical_block_size(struct block_device *bdev ) 
---
> void ldv_mutex_lock_180(struct mutex *ldv_func_arg1 ) ;
> #line 208 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/thread_info.h"
> __inline static struct thread_info *current_thread_info___4(void) 
35930,35931c37829,37830
<   struct request_queue *tmp ;
<   unsigned short tmp___0 ;
---
>   struct thread_info *ti ;
>   unsigned long pfo_ret__ ;
35934,35939c37833,37965
< #line 1110
<   tmp = bdev_get_queue(bdev);
< #line 1110
<   tmp___0 = queue_logical_block_size(tmp);
< #line 1110
<   return (tmp___0);
---
> #line 211
>   switch (8UL) {
>   case 1UL: 
> #line 211
>   __asm__  ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
> #line 211
>   goto ldv_6287;
>   case 2UL: 
> #line 211
>   __asm__  ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
> #line 211
>   goto ldv_6287;
>   case 4UL: 
> #line 211
>   __asm__  ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
> #line 211
>   goto ldv_6287;
>   case 8UL: 
> #line 211
>   __asm__  ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
> #line 211
>   goto ldv_6287;
>   default: 
> #line 211
>   __bad_percpu_size();
>   }
>   ldv_6287: 
> #line 211
>   ti = (struct thread_info *)(pfo_ret__ - 8152UL);
> #line 213
>   return (ti);
> }
> }
> #line 163 "include/linux/rcupdate.h"
> __inline static void __rcu_read_lock___4(void) 
> { 
>   struct thread_info *tmp ;
> 
>   {
> #line 165
>   tmp = current_thread_info___4();
> #line 165
>   tmp->preempt_count = tmp->preempt_count + 1;
> #line 165
>   __asm__  volatile   ("": : : "memory");
> #line 166
>   return;
> }
> }
> #line 168 "include/linux/rcupdate.h"
> __inline static void __rcu_read_unlock___4(void) 
> { 
>   struct thread_info *tmp ;
> 
>   {
> #line 170
>   __asm__  volatile   ("": : : "memory");
> #line 170
>   tmp = current_thread_info___4();
> #line 170
>   tmp->preempt_count = tmp->preempt_count + -1;
> #line 170
>   __asm__  volatile   ("": : : "memory");
> #line 171
>   return;
> }
> }
> #line 732 "include/linux/rcupdate.h"
> __inline static void rcu_read_lock___4(void) 
> { 
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
> 
>   {
> #line 734
>   __rcu_read_lock___4();
> #line 736
>   rcu_lock_acquire(& rcu_lock_map);
> #line 737
>   tmp = debug_lockdep_rcu_enabled();
> #line 737
>   if (tmp != 0 && ! __warned) {
> #line 737
>     tmp___0 = rcu_is_cpu_idle();
> #line 737
>     if (tmp___0 != 0) {
> #line 737
>       __warned = 1;
> #line 737
>       lockdep_rcu_suspicious("include/linux/rcupdate.h", 738, "rcu_read_lock() used illegally while idle");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 740
>   return;
> }
> }
> #line 756 "include/linux/rcupdate.h"
> __inline static void rcu_read_unlock___4(void) 
> { 
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
> 
>   {
> #line 758
>   tmp = debug_lockdep_rcu_enabled();
> #line 758
>   if (tmp != 0 && ! __warned) {
> #line 758
>     tmp___0 = rcu_is_cpu_idle();
> #line 758
>     if (tmp___0 != 0) {
> #line 758
>       __warned = 1;
> #line 758
>       lockdep_rcu_suspicious("include/linux/rcupdate.h", 759, "rcu_read_unlock() used illegally while idle");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 760
>   rcu_lock_release(& rcu_lock_map);
> #line 762
>   __rcu_read_unlock___4();
> #line 763
>   return;
35942c37968,37970
< #line 243 "include/linux/lru_cache.h"
---
> #line 6 "include/linux/crc32c.h"
> extern u32 crc32c(u32  , void const   * , unsigned int  ) ;
> #line 254 "include/linux/lru_cache.h"
35944,35946c37972
< #line 245
< extern void lc_set(struct lru_cache * , unsigned int  , int  ) ;
< #line 246
---
> #line 257
35948c37974
< #line 248
---
> #line 259
35950c37976
< #line 250
---
> #line 261
35952c37978
< #line 251
---
> #line 262
35954,35957c37980,37983
< #line 252
< extern void lc_changed(struct lru_cache * , struct lc_element * ) ;
< #line 267 "include/linux/lru_cache.h"
< __inline static int lc_try_lock(struct lru_cache *lc ) 
---
> #line 263
> extern void lc_committed(struct lru_cache * ) ;
> #line 279 "include/linux/lru_cache.h"
> __inline static int lc_try_lock_for_transaction(struct lru_cache *lc ) 
35962,35964c37988,37990
< #line 269
<   tmp = test_and_set_bit(1, (unsigned long volatile   *)(& lc->flags));
< #line 269
---
> #line 281
>   tmp = test_and_set_bit(2, (unsigned long volatile   *)(& lc->flags));
> #line 281
35968c37994
< #line 276 "include/linux/lru_cache.h"
---
> #line 299 "include/linux/lru_cache.h"
35974c38000
< #line 278
---
> #line 301
35976,35978c38002,38004
< #line 279
<   __asm__  volatile   ("": : : "memory");
< #line 280
---
> #line 302
>   clear_bit_unlock(2U, (unsigned long volatile   *)(& lc->flags));
> #line 303
35982,35997c38008,38010
< #line 282 "include/linux/lru_cache.h"
< __inline static int lc_is_used(struct lru_cache *lc , unsigned int enr ) 
< { 
<   struct lc_element *e ;
<   struct lc_element *tmp ;
< 
<   {
< #line 284
<   tmp = lc_find(lc, enr);
< #line 284
<   e = tmp;
< #line 285
<   return ((unsigned long )e != (unsigned long )((struct lc_element *)0) && e->refcnt != 0U);
< }
< }
< #line 291
---
> #line 305
> extern bool lc_is_used(struct lru_cache * , unsigned int  ) ;
> #line 310
35999,36001c38012
< #line 292
< extern unsigned int lc_index_of(struct lru_cache * , struct lc_element * ) ;
< #line 1608 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1454 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
36003c38014
< #line 1610
---
> #line 1456
36006,36010c38017
< #line 1737
< int drbd_al_read_log(struct drbd_conf *mdev , struct drbd_backing_dev *bdev ) ;
< #line 1747
< void drbd_al_apply_to_bm(struct drbd_conf *mdev ) ;
< #line 1748
---
> #line 1597
36012,36014c38019,38021
< #line 1756
< void drbd_bcast_sync_progress(struct drbd_conf *mdev ) ;
< #line 1890 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1614
> void drbd_bcast_event(struct drbd_conf *mdev , struct sib_info  const  *sib ) ;
> #line 1675 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
36017a38025,38027
>   enum drbd_io_error_p ep ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
36018a38029,38030
>   int tmp___0 ;
>   int tmp___1 ;
36023,36026c38035,38065
< #line 1894
<   switch ((mdev->ldev)->dc.on_io_error) {
<   case 0: ;
< #line 1896
---
> #line 1681
>   rcu_read_lock___4();
> #line 1682
>   _________p1 = *((struct disk_conf * volatile  *)(& (mdev->ldev)->disk_conf));
> #line 1682
>   tmp = debug_lockdep_rcu_enabled();
> #line 1682
>   if (tmp != 0 && ! __warned) {
> #line 1682
>     tmp___0 = rcu_read_lock_held();
> #line 1682
>     if (tmp___0 == 0 && 1) {
> #line 1682
>       __warned = 1;
> #line 1682
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h",
>                              1682, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1682
>   ep = (enum drbd_io_error_p )_________p1->on_io_error;
> #line 1683
>   rcu_read_unlock___4();
> #line 1684
>   switch ((unsigned int )ep) {
>   case 0U: ;
> #line 1686
36028,36032c38067,38071
< #line 1897
<     tmp = ___ratelimit(& drbd_ratelimit_state, "__drbd_chk_io_error_");
< #line 1897
<     if (tmp != 0) {
< #line 1898
---
> #line 1687
>     tmp___1 = ___ratelimit(& drbd_ratelimit_state, "__drbd_chk_io_error_");
> #line 1687
>     if (tmp___1 != 0) {
> #line 1688
36038,36044c38077,38083
< #line 1899
<     if ((int )mdev->state.ldv_39979.disk > 4) {
< #line 1900
<       __ns.i = mdev->state.i;
< #line 1900
<       __ns.ldv_39979.disk = 4U;
< #line 1900
---
> #line 1689
>     if ((int )mdev->state.ldv_49522.disk > 4) {
> #line 1690
>       __ns = drbd_read_state(mdev);
> #line 1690
>       __ns.ldv_40024.disk = 4U;
> #line 1690
36049,36050c38088,38089
< #line 1901
<     goto ldv_50242;
---
> #line 1691
>     goto ldv_50786;
36054,36058c38093,38097
<   case 2: ;
<   case 1: 
< #line 1926
<   drbd_set_flag(mdev, WAS_IO_ERROR);
< #line 1927
---
>   case 2U: ;
>   case 1U: 
> #line 1716
>   set_bit(12U, (unsigned long volatile   *)(& mdev->flags));
> #line 1717
36060,36061c38099,38100
< #line 1928
<     drbd_set_flag(mdev, WAS_READ_ERROR);
---
> #line 1718
>     set_bit(13U, (unsigned long volatile   *)(& mdev->flags));
36065c38104
< #line 1929
---
> #line 1719
36067,36068c38106,38107
< #line 1930
<     drbd_set_flag(mdev, FORCE_DETACH);
---
> #line 1720
>     set_bit(14U, (unsigned long volatile   *)(& mdev->flags));
36072,36078c38111,38117
< #line 1931
<   if ((int )mdev->state.ldv_39979.disk > 2) {
< #line 1932
<     __ns___0.i = mdev->state.i;
< #line 1932
<     __ns___0.ldv_39979.disk = 2U;
< #line 1932
---
> #line 1721
>   if ((int )mdev->state.ldv_49522.disk > 2) {
> #line 1722
>     __ns___0 = drbd_read_state(mdev);
> #line 1722
>     __ns___0.ldv_40024.disk = 2U;
> #line 1722
36080c38119
< #line 1933
---
> #line 1723
36086,36087c38125,38126
< #line 1936
<   goto ldv_50242;
---
> #line 1726
>   goto ldv_50786;
36089,36090c38128,38129
<   ldv_50242: ;
< #line 1939
---
>   ldv_50786: ;
> #line 1729
36094c38133
< #line 1949 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1739 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
36102c38141
< #line 1952
---
> #line 1742
36104,36106c38143,38145
< #line 1954
<     tmp = spinlock_check(& mdev->req_lock);
< #line 1954
---
> #line 1744
>     tmp = spinlock_check(& (mdev->tconn)->req_lock);
> #line 1744
36108c38147
< #line 1955
---
> #line 1745
36110,36111c38149,38231
< #line 1956
<     spin_unlock_irqrestore(& mdev->req_lock, flags);
---
> #line 1746
>     spin_unlock_irqrestore(& (mdev->tconn)->req_lock, flags);
>   } else {
> 
>   }
> #line 1748
>   return;
> }
> }
> #line 1770 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static sector_t drbd_md_first_sector(struct drbd_backing_dev *bdev ) 
> { 
>   int meta_dev_idx ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
>   sector_t tmp___1 ;
> 
>   {
> #line 1774
>   rcu_read_lock___4();
> #line 1775
>   _________p1 = *((struct disk_conf * volatile  *)(& bdev->disk_conf));
> #line 1775
>   tmp = debug_lockdep_rcu_enabled();
> #line 1775
>   if (tmp != 0 && ! __warned) {
> #line 1775
>     tmp___0 = rcu_read_lock_held();
> #line 1775
>     if (tmp___0 == 0 && 1) {
> #line 1775
>       __warned = 1;
> #line 1775
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h",
>                              1775, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1775
>   meta_dev_idx = _________p1->meta_dev_idx;
> #line 1776
>   rcu_read_unlock___4();
> #line 1778
>   tmp___1 = _drbd_md_first_sector(meta_dev_idx, bdev);
> #line 1778
>   return (tmp___1);
> }
> }
> #line 1785 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static sector_t drbd_md_last_sector___0(struct drbd_backing_dev *bdev ) 
> { 
>   int meta_dev_idx ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
> 
>   {
> #line 1789
>   rcu_read_lock___4();
> #line 1790
>   _________p1 = *((struct disk_conf * volatile  *)(& bdev->disk_conf));
> #line 1790
>   tmp = debug_lockdep_rcu_enabled();
> #line 1790
>   if (tmp != 0 && ! __warned) {
> #line 1790
>     tmp___0 = rcu_read_lock_held();
> #line 1790
>     if (tmp___0 == 0 && 1) {
> #line 1790
>       __warned = 1;
> #line 1790
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h",
>                              1790, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
36115c38235,38269
< #line 1958
---
> #line 1790
>   meta_dev_idx = _________p1->meta_dev_idx;
> #line 1791
>   rcu_read_unlock___4();
> #line 1793
>   switch (meta_dev_idx) {
>   case -1: ;
>   case -3: ;
> #line 1796
>   return ((sector_t )(bdev->md.md_offset + 7ULL));
>   case -2: ;
>   default: ;
> #line 1799
>   return ((sector_t )(bdev->md.md_offset + (u64 )bdev->md.md_size_sect));
>   }
> }
> }
> #line 1887 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static void drbd_queue_work_front(struct drbd_work_queue *q , struct drbd_work *w ) 
> { 
>   unsigned long flags ;
>   raw_spinlock_t *tmp ;
> 
>   {
> #line 1890
>   tmp = spinlock_check(& q->q_lock);
> #line 1890
>   flags = _raw_spin_lock_irqsave(tmp);
> #line 1891
>   list_add(& w->list, & q->q);
> #line 1892
>   spin_unlock_irqrestore(& q->q_lock, flags);
> #line 1893
>   __wake_up(& q->q_wait, 3U, 1, 0);
> #line 1894
36119,36121c38273,38275
< #line 137 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
< int w_al_write_transaction(struct drbd_conf *mdev , struct drbd_work *w , int unused ) ;
< #line 139 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
---
> #line 195 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
> static int al_write_transaction(struct drbd_conf *mdev ) ;
> #line 197 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
36131c38285
< #line 143
---
> #line 201
36133,36136c38287,38290
< #line 143
<   if (r == 0 || (int )mdev->state.ldv_39979.disk <= 2) {
< #line 143
<     goto ldv_50542;
---
> #line 201
>   if (r == 0 || (int )mdev->state.ldv_49522.disk <= 2) {
> #line 201
>     goto ldv_51127;
36140c38294
< #line 143
---
> #line 201
36142c38296
< #line 143
---
> #line 201
36144c38298
< #line 143
---
> #line 201
36146c38300
< #line 143
---
> #line 201
36148c38302
< #line 143
---
> #line 201
36150c38304
< #line 143
---
> #line 201
36152,36153c38306,38307
<   ldv_50545: 
< #line 143
---
>   ldv_51130: 
> #line 201
36155c38309
< #line 143
---
> #line 201
36157,36160c38311,38314
< #line 143
<   if (r == 0 || (int )mdev->state.ldv_39979.disk <= 2) {
< #line 143
<     goto ldv_50544;
---
> #line 201
>   if (r == 0 || (int )mdev->state.ldv_49522.disk <= 2) {
> #line 201
>     goto ldv_51129;
36164c38318
< #line 143
---
> #line 201
36166,36169c38320,38323
< #line 143
<   goto ldv_50545;
<   ldv_50544: 
< #line 143
---
> #line 201
>   goto ldv_51130;
>   ldv_51129: 
> #line 201
36171,36172c38325,38326
<   ldv_50542: ;
< #line 147
---
>   ldv_51127: ;
> #line 205
36174c38328
< #line 147
---
> #line 205
36176c38330
< #line 147
---
> #line 205
36179c38333
< #line 147
---
> #line 205
36182c38336
< #line 147
---
> #line 205
36186c38340
< #line 150 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
---
> #line 208 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
36192c38346
< #line 152
---
> #line 210
36194c38348
< #line 152
---
> #line 210
36196c38350
< #line 153
---
> #line 211
36201c38355
< #line 154
---
> #line 212
36205c38359
< #line 156 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
---
> #line 214 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
36209a38364,38367
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
36212,36214c38370,38372
<   struct task_struct *tmp ;
<   int tmp___0 ;
<   int tmp___1 ;
---
>   struct task_struct *tmp___1 ;
>   int tmp___2 ;
>   int tmp___3 ;
36217,36219c38375,38404
< #line 159
<   dt = (long )((bdev->dc.disk_timeout * 250) / 10);
< #line 160
---
> #line 219
>   rcu_read_lock___4();
> #line 220
>   _________p1 = *((struct disk_conf * volatile  *)(& bdev->disk_conf));
> #line 220
>   tmp = debug_lockdep_rcu_enabled();
> #line 220
>   if (tmp != 0 && ! __warned) {
> #line 220
>     tmp___0 = rcu_read_lock_held();
> #line 220
>     if (tmp___0 == 0 && 1) {
> #line 220
>       __warned = 1;
> #line 220
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
>                              220, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 220
>   dt = (long )_________p1->disk_timeout;
> #line 221
>   rcu_read_unlock___4();
> #line 222
>   dt = (dt * 250L) / 10L;
> #line 223
36221c38406
< #line 161
---
> #line 224
36226c38411
< #line 163
---
> #line 226
36228c38413
< #line 163
---
> #line 226
36230,36236c38415,38421
< #line 163
<     tmp___1 = drbd_test_flag(mdev, FORCE_DETACH);
< #line 163
<     if (tmp___1 == 0) {
< #line 163
<       tmp = get_current();
< #line 163
---
> #line 226
>     tmp___3 = constant_test_bit(14U, (unsigned long const volatile   *)(& mdev->flags));
> #line 226
>     if (tmp___3 == 0) {
> #line 226
>       tmp___1 = get_current();
> #line 226
36238,36240c38423,38425
< #line 163
<       __wait.private = (void *)tmp;
< #line 163
---
> #line 226
>       __wait.private = (void *)tmp___1;
> #line 226
36242c38427
< #line 163
---
> #line 226
36244c38429
< #line 163
---
> #line 226
36246,36247c38431,38432
<       ldv_50558: 
< #line 163
---
>       ldv_51146: 
> #line 226
36249c38434
< #line 163
---
> #line 226
36251,36252c38436,38437
< #line 163
<         goto ldv_50557;
---
> #line 226
>         goto ldv_51145;
36254,36259c38439,38444
< #line 163
<         tmp___0 = drbd_test_flag(mdev, FORCE_DETACH);
< #line 163
<         if (tmp___0 != 0) {
< #line 163
<           goto ldv_50557;
---
> #line 226
>         tmp___2 = constant_test_bit(14U, (unsigned long const volatile   *)(& mdev->flags));
> #line 226
>         if (tmp___2 != 0) {
> #line 226
>           goto ldv_51145;
36264c38449
< #line 163
---
> #line 226
36266c38451
< #line 163
---
> #line 226
36268,36269c38453,38454
< #line 163
<         goto ldv_50557;
---
> #line 226
>         goto ldv_51145;
36273,36276c38458,38461
< #line 163
<       goto ldv_50558;
<       ldv_50557: 
< #line 163
---
> #line 226
>       goto ldv_51146;
>       ldv_51145: 
> #line 226
36284c38469
< #line 163
---
> #line 226
36286c38471
< #line 165
---
> #line 228
36288c38473
< #line 166
---
> #line 229
36290c38475
< #line 167
---
> #line 230
36295c38480
< #line 169
---
> #line 232
36299c38484
< #line 171 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
---
> #line 234 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
36304c38489
<   int ok ;
---
>   int err ;
36311c38496
< #line 179
---
> #line 242
36313c38498
< #line 180
---
> #line 243
36315c38500
< #line 182
---
> #line 245
36317,36319c38502,38504
< #line 182
<     tmp = drbd_test_flag(mdev, MD_NO_FUA);
< #line 182
---
> #line 245
>     tmp = constant_test_bit(7U, (unsigned long const volatile   *)(& mdev->flags));
> #line 245
36321c38506
< #line 183
---
> #line 246
36329c38514
< #line 184
---
> #line 247
36331c38516
< #line 186
---
> #line 249
36333c38518
< #line 187
---
> #line 250
36335c38520
< #line 188
---
> #line 251
36337c38522,38524
< #line 189
---
> #line 252
>   err = -5;
> #line 253
36339,36343c38526,38528
< #line 189
<   ok = tmp___0 == size;
< #line 190
<   if (ok == 0) {
< #line 191
---
> #line 253
>   if (tmp___0 != size) {
> #line 254
36348c38533
< #line 192
---
> #line 255
36350c38535
< #line 193
---
> #line 256
36352c38537
< #line 194
---
> #line 257
36354c38539
< #line 196
---
> #line 259
36356c38541
< #line 196
---
> #line 259
36358c38543
< #line 197
---
> #line 260
36360,36362c38545,38547
< #line 198
<     ok = 0;
< #line 199
---
> #line 261
>     err = -19;
> #line 262
36367c38552
< #line 202
---
> #line 265
36369c38554
< #line 203
---
> #line 266
36371c38556
< #line 204
---
> #line 267
36373c38558
< #line 204
---
> #line 267
36375c38560
< #line 205
---
> #line 268
36378c38563
< #line 207
---
> #line 270
36381c38566
< #line 208
---
> #line 271
36383,36384c38568,38574
< #line 209
<   ok = (int )bio->bi_flags & 1 && mdev->md_io.error == 0;
---
> #line 272
>   if ((int )bio->bi_flags & 1) {
> #line 273
>     err = mdev->md_io.error;
>   } else {
> 
>   }
36386c38576
< #line 212
---
> #line 276
36388,36389c38578,38579
< #line 213
<   return (ok);
---
> #line 277
>   return (err);
36392c38582
< #line 216 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
---
> #line 280 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
36396,36399c38586
<   int logical_block_size ;
<   int mask ;
<   int ok ;
<   int offset ;
---
>   int err ;
36403,36410c38590,38594
<   unsigned short tmp___1 ;
<   void *p ;
<   void *tmp___2 ;
<   void *hp ;
<   void *tmp___3 ;
<   long tmp___4 ;
<   size_t __len ;
<   void *__ret ;
---
>   struct _ddebug descriptor ;
>   struct task_struct *tmp___1 ;
>   struct task_struct *tmp___2 ;
>   long tmp___3 ;
>   struct task_struct *tmp___4 ;
36412c38596
<   struct task_struct *tmp___6 ;
---
>   sector_t tmp___6 ;
36414,36421d38597
<   sector_t tmp___8 ;
<   long tmp___9 ;
<   void *p___0 ;
<   void *tmp___10 ;
<   void *hp___0 ;
<   void *tmp___11 ;
<   size_t __len___0 ;
<   void *__ret___0 ;
36424,36426c38600
< #line 220
<   offset = 0;
< #line 221
---
> #line 284
36428c38602
< #line 223
---
> #line 286
36430c38604
< #line 223
---
> #line 286
36432c38606
< #line 223
---
> #line 286
36434,36435c38608,38609
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<             223);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
>             286);
36439c38613
< #line 225
---
> #line 288
36442c38616
< #line 225
---
> #line 288
36444,36460c38618,38623
< #line 225
<     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"),
<                          "i" (225), "i" (12UL));
<     ldv_50583: ;
< #line 225
<     goto ldv_50583;
<   } else {
< 
<   }
< #line 227
<   tmp___1 = bdev_logical_block_size(bdev->md_bdev);
< #line 227
<   logical_block_size = (int )tmp___1;
< #line 228
<   if (logical_block_size == 0) {
< #line 229
<     logical_block_size = 512;
---
> #line 288
>     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"),
>                          "i" (288), "i" (12UL));
>     ldv_51168: ;
> #line 288
>     goto ldv_51168;
36464,36529c38627,38651
< #line 232
<   if (logical_block_size != 512) {
< #line 233
<     mask = logical_block_size / 512 + -1;
< #line 234
<     if ((mask != 1 && mask != 3) && mask != 7) {
< #line 234
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mask == 1 || mask == 3 || mask == 7 ) in %s:%d\n",
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<               234);
<     } else {
< 
<     }
< #line 235
<     if ((mask + 1) * 512 != logical_block_size) {
< #line 235
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( logical_block_size == (mask+1) * MD_SECTOR_SIZE ) in %s:%d\n",
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<               235);
<     } else {
< 
<     }
< #line 236
<     offset = (int )((unsigned int )sector & (unsigned int )mask);
< #line 237
<     sector = (sector_t )(~ mask) & sector;
< #line 238
<     iop = mdev->md_io_tmpp;
< #line 240
<     if (rw & 1) {
< #line 243
<       tmp___2 = lowmem_page_address((struct page  const  *)mdev->md_io_page);
< #line 243
<       p = tmp___2;
< #line 244
<       tmp___3 = lowmem_page_address((struct page  const  *)mdev->md_io_tmpp);
< #line 244
<       hp = tmp___3;
< #line 246
<       ok = _drbd_md_sync_page_io(mdev, bdev, iop, sector, 0, logical_block_size);
< #line 249
<       tmp___4 = __builtin_expect(ok == 0, 0L);
< #line 249
<       if (tmp___4 != 0L) {
< #line 250
<         dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "drbd_md_sync_page_io(,%llus,READ [logical_block_size!=512]) failed!\n",
<                 (unsigned long long )sector);
< #line 253
<         return (0);
<       } else {
< 
<       }
< #line 256
<       __len = 512UL;
< #line 256
<       if (__len > 63UL) {
< #line 256
<         __ret = __memcpy(hp + (unsigned long )(offset * 512), (void const   *)p, __len);
<       } else {
< #line 256
<         __ret = __builtin_memcpy(hp + (unsigned long )(offset * 512), (void const   *)p,
<                                  __len);
<       }
<     } else {
< 
<     }
---
> #line 290
>   descriptor.modname = "drbd";
> #line 290
>   descriptor.function = "drbd_md_sync_page_io";
> #line 290
>   descriptor.filename = "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared";
> #line 290
>   descriptor.format = "meta_data io: %s [%d]:%s(,%llus,%s)\n";
> #line 290
>   descriptor.lineno = 292U;
> #line 290
>   descriptor.flags = 0U;
> #line 290
>   tmp___3 = __builtin_expect((long )descriptor.flags & 1L, 0L);
> #line 290
>   if (tmp___3 != 0L) {
> #line 290
>     tmp___1 = get_current();
> #line 290
>     tmp___2 = get_current();
> #line 290
>     __dynamic_dev_dbg(& descriptor, (struct device  const  *)(& (mdev->vdisk)->part0.__dev),
>                       "meta_data io: %s [%d]:%s(,%llus,%s)\n", (char *)(& tmp___2->comm),
>                       tmp___1->pid, "drbd_md_sync_page_io", (unsigned long long )sector,
>                       rw & 1 ? (char *)"WRITE" : (char *)"READ");
36533,36537c38655,38661
< #line 260
<   tmp___7 = drbd_md_first_sector(bdev);
< #line 260
<   if (tmp___7 > sector) {
< #line 262
---
> #line 294
>   tmp___6 = drbd_md_first_sector(bdev);
> #line 294
>   if (tmp___6 > sector) {
> #line 296
>     tmp___4 = get_current();
> #line 296
36539,36541c38663
< #line 262
<     tmp___6 = get_current();
< #line 262
---
> #line 296
36543c38665
<               (char *)(& tmp___6->comm), tmp___5->pid, "drbd_md_sync_page_io", (unsigned long long )sector,
---
>               (char *)(& tmp___5->comm), tmp___4->pid, "drbd_md_sync_page_io", (unsigned long long )sector,
36546,36550c38668,38674
< #line 260
<     tmp___8 = drbd_md_last_sector(bdev);
< #line 260
<     if (tmp___8 < sector) {
< #line 262
---
> #line 294
>     tmp___7 = drbd_md_last_sector___0(bdev);
> #line 294
>     if (sector + 7UL > tmp___7) {
> #line 296
>       tmp___4 = get_current();
> #line 296
36552,36554c38676
< #line 262
<       tmp___6 = get_current();
< #line 262
---
> #line 296
36556c38678
<                 (char *)(& tmp___6->comm), tmp___5->pid, "drbd_md_sync_page_io", (unsigned long long )sector,
---
>                 (char *)(& tmp___5->comm), tmp___4->pid, "drbd_md_sync_page_io", (unsigned long long )sector,
36562,36597c38684,38691
< #line 266
<   ok = _drbd_md_sync_page_io(mdev, bdev, iop, sector, rw, logical_block_size);
< #line 267
<   tmp___9 = __builtin_expect(ok == 0, 0L);
< #line 267
<   if (tmp___9 != 0L) {
< #line 268
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "drbd_md_sync_page_io(,%llus,%s) failed!\n",
<             (unsigned long long )sector, rw & 1 ? (char *)"WRITE" : (char *)"READ");
< #line 270
<     return (0);
<   } else {
< 
<   }
< #line 273
<   if (logical_block_size != 512 && (rw & 1) == 0) {
< #line 274
<     tmp___10 = lowmem_page_address((struct page  const  *)mdev->md_io_page);
< #line 274
<     p___0 = tmp___10;
< #line 275
<     tmp___11 = lowmem_page_address((struct page  const  *)mdev->md_io_tmpp);
< #line 275
<     hp___0 = tmp___11;
< #line 277
<     __len___0 = 512UL;
< #line 277
<     if (__len___0 > 63UL) {
< #line 277
<       __ret___0 = __memcpy(p___0, (void const   *)hp___0 + (unsigned long )(offset * 512),
<                            __len___0);
<     } else {
< #line 277
<       __ret___0 = __builtin_memcpy(p___0, (void const   *)hp___0 + (unsigned long )(offset * 512),
<                                    __len___0);
<     }
---
> #line 300
>   err = _drbd_md_sync_page_io(mdev, bdev, iop, sector, rw, 4096);
> #line 301
>   if (err != 0) {
> #line 302
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "drbd_md_sync_page_io(,%llus,%s) failed with error %d\n",
>             (unsigned long long )sector, rw & 1 ? (char *)"WRITE" : (char *)"READ",
>             err);
36601,36602c38695,38696
< #line 280
<   return (ok);
---
> #line 305
>   return (err);
36605c38699
< #line 283 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
---
> #line 308 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
36610d38703
<   unsigned long al_flags ;
36619,36621c38712
< #line 287
<   al_flags = 0UL;
< #line 290
---
> #line 314
36623c38714
< #line 291
---
> #line 315
36625c38716
< #line 292
---
> #line 316
36628c38719
< #line 292
---
> #line 316
36630c38721
< #line 293
---
> #line 317
36632c38723
< #line 293
---
> #line 317
36634c38725
< #line 294
---
> #line 318
36636c38727
< #line 294
---
> #line 318
36638c38729
< #line 295
---
> #line 319
36640c38731
< #line 295
---
> #line 319
36642c38733
< #line 296
---
> #line 320
36644c38735
< #line 297
---
> #line 321
36646c38737
< #line 298
---
> #line 322
36651c38742
< #line 299
---
> #line 323
36659c38750
< #line 302
---
> #line 326
36661,36663c38752
< #line 303
<   al_flags = (mdev->act_log)->flags;
< #line 304
---
> #line 327
36665c38754
< #line 315
---
> #line 328
36669,36670c38758,38759
< #line 318 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
< void drbd_al_begin_io(struct drbd_conf *mdev , sector_t sector ) 
---
> #line 331 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
> void drbd_al_begin_io(struct drbd_conf *mdev , struct drbd_interval *i ) 
36671a38761,38762
>   unsigned int first ;
>   unsigned int last ;
36673,36674c38764
<   struct lc_element *al_ext ;
<   struct update_al_work al_work ;
---
>   bool locked ;
36675a38766
>   struct lc_element *tmp___0 ;
36677c38768,38778
<   struct task_struct *tmp___0 ;
---
>   struct task_struct *tmp___1 ;
>   struct lc_element *tmp___2 ;
>   int tmp___3 ;
>   wait_queue_t __wait___0 ;
>   struct task_struct *tmp___4 ;
>   int tmp___5 ;
>   bool write_al_updates ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp___6 ;
>   int tmp___7 ;
36680,36682c38781,38796
< #line 320
<   enr = (unsigned int )(sector >> 13);
< #line 324
---
> #line 335
>   first = (unsigned int )(i->sector >> 13);
> #line 336
>   last = i->size != 0U ? (unsigned int )(((i->sector + (sector_t )(i->size >> 9)) - 1UL) >> 13) : first;
> #line 338
>   locked = 0;
> #line 341
>   if (first > last) {
> #line 341
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( first <= last ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
>             341);
>   } else {
> 
>   }
> #line 342
36684c38798
< #line 324
---
> #line 342
36686c38800
< #line 324
---
> #line 342
36688,36689c38802,38803
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<             324);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
>             342);
36693,36698c38807,38817
< #line 326
<   al_ext = _al_get(mdev, enr);
< #line 326
<   if ((unsigned long )al_ext != (unsigned long )((struct lc_element *)0)) {
< #line 326
<     goto ldv_50613;
---
> #line 344
>   enr = first;
> #line 344
>   goto ldv_51194;
>   ldv_51193: 
> #line 345
>   tmp___0 = _al_get(mdev, enr);
> #line 345
>   if ((unsigned long )tmp___0 != (unsigned long )((struct lc_element *)0)) {
> #line 345
>     goto ldv_51189;
36702,36704c38821,38823
< #line 326
<   tmp___0 = get_current();
< #line 326
---
> #line 345
>   tmp___1 = get_current();
> #line 345
36706,36708c38825,38827
< #line 326
<   __wait.private = (void *)tmp___0;
< #line 326
---
> #line 345
>   __wait.private = (void *)tmp___1;
> #line 345
36710c38829
< #line 326
---
> #line 345
36712c38831
< #line 326
---
> #line 345
36714,36715c38833,38834
<   ldv_50616: 
< #line 326
---
>   ldv_51192: 
> #line 345
36717,36722c38836,38841
< #line 326
<   al_ext = _al_get(mdev, enr);
< #line 326
<   if ((unsigned long )al_ext != (unsigned long )((struct lc_element *)0)) {
< #line 326
<     goto ldv_50615;
---
> #line 345
>   tmp___2 = _al_get(mdev, enr);
> #line 345
>   if ((unsigned long )tmp___2 != (unsigned long )((struct lc_element *)0)) {
> #line 345
>     goto ldv_51191;
36726c38845
< #line 326
---
> #line 345
36728,36731c38847,38850
< #line 326
<   goto ldv_50616;
<   ldv_50615: 
< #line 326
---
> #line 345
>   goto ldv_51192;
>   ldv_51191: 
> #line 345
36733,36751c38852,38857
<   ldv_50613: ;
< #line 328
<   if (al_ext->lc_number != enr) {
< #line 335
<     init_completion(& al_work.event);
< #line 336
<     al_work.al_ext = al_ext;
< #line 337
<     al_work.enr = enr;
< #line 338
<     al_work.old_enr = al_ext->lc_number;
< #line 339
<     al_work.w.cb = & w_al_write_transaction;
< #line 340
<     drbd_queue_work_front(& mdev->data.work, & al_work.w);
< #line 341
<     wait_for_completion(& al_work.event);
< #line 343
<     mdev->al_writ_cnt = mdev->al_writ_cnt + 1U;
---
>   ldv_51189: 
> #line 344
>   enr = enr + 1U;
>   ldv_51194: ;
> #line 344
>   if (enr <= last) {
36753,36759c38859,38899
<     spin_lock_irq(& mdev->al_lock);
< #line 346
<     lc_changed(mdev->act_log, al_ext);
< #line 347
<     spin_unlock_irq(& mdev->al_lock);
< #line 348
<     __wake_up(& mdev->al_wait, 3U, 1, 0);
---
>     goto ldv_51193;
>   } else {
> 
>   }
> 
> #line 350
>   if ((mdev->act_log)->pending_changes == 0U) {
> #line 350
>     goto ldv_51196;
>   } else {
> #line 350
>     tmp___3 = lc_try_lock_for_transaction(mdev->act_log);
> #line 350
>     locked = tmp___3 != 0;
> #line 350
>     if ((int )locked) {
> #line 350
>       goto ldv_51196;
>     } else {
> 
>     }
>   }
> #line 350
>   tmp___4 = get_current();
> #line 350
>   __wait___0.flags = 0U;
> #line 350
>   __wait___0.private = (void *)tmp___4;
> #line 350
>   __wait___0.func = & autoremove_wake_function;
> #line 350
>   __wait___0.task_list.next = & __wait___0.task_list;
> #line 350
>   __wait___0.task_list.prev = & __wait___0.task_list;
>   ldv_51199: 
> #line 350
>   prepare_to_wait(& mdev->al_wait, & __wait___0, 2);
> #line 350
>   if ((mdev->act_log)->pending_changes == 0U) {
> #line 350
>     goto ldv_51198;
36760a38901,38909
> #line 350
>     tmp___5 = lc_try_lock_for_transaction(mdev->act_log);
> #line 350
>     locked = tmp___5 != 0;
> #line 350
>     if ((int )locked) {
> #line 350
>       goto ldv_51198;
>     } else {
36761a38911
>     }
36763a38914,38977
>   schedule();
> #line 350
>   goto ldv_51199;
>   ldv_51198: 
> #line 350
>   finish_wait(& mdev->al_wait, & __wait___0);
>   ldv_51196: ;
> #line 354
>   if ((int )locked) {
> #line 364
>     if ((mdev->act_log)->pending_changes != 0U) {
> #line 367
>       rcu_read_lock___4();
> #line 368
>       _________p1 = *((struct disk_conf * volatile  *)(& (mdev->ldev)->disk_conf));
> #line 368
>       tmp___6 = debug_lockdep_rcu_enabled();
> #line 368
>       if (tmp___6 != 0 && ! __warned) {
> #line 368
>         tmp___7 = rcu_read_lock_held();
> #line 368
>         if (tmp___7 == 0 && 1) {
> #line 368
>           __warned = 1;
> #line 368
>           lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
>                                  368, "suspicious rcu_dereference_check() usage");
>         } else {
> 
>         }
>       } else {
> 
>       }
> #line 368
>       write_al_updates = (int )((signed char )_________p1->al_updates) != 0;
> #line 369
>       rcu_read_unlock___4();
> #line 371
>       if ((int )write_al_updates) {
> #line 372
>         al_write_transaction(mdev);
> #line 373
>         mdev->al_writ_cnt = mdev->al_writ_cnt + 1U;
>       } else {
> 
>       }
> #line 376
>       spin_lock_irq(& mdev->al_lock);
> #line 381
>       lc_committed(mdev->act_log);
> #line 382
>       spin_unlock_irq(& mdev->al_lock);
>     } else {
> 
>     }
> #line 384
>     lc_unlock(mdev->act_log);
> #line 385
>     __wake_up(& mdev->al_wait, 3U, 1, 0);
>   } else {
> 
>   }
> #line 387
36767,36768c38981,38982
< #line 352 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
< void drbd_al_complete_io(struct drbd_conf *mdev , sector_t sector ) 
---
> #line 389 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
> void drbd_al_complete_io(struct drbd_conf *mdev , struct drbd_interval *i ) 
36769a38984,38985
>   unsigned int first ;
>   unsigned int last ;
36774d38989
<   unsigned int tmp___0 ;
36777,36779c38992,39005
< #line 354
<   enr = (unsigned int )(sector >> 13);
< #line 358
---
> #line 393
>   first = (unsigned int )(i->sector >> 13);
> #line 394
>   last = i->size != 0U ? (unsigned int )(((i->sector + (sector_t )(i->size >> 9)) - 1UL) >> 13) : first;
> #line 399
>   if (first > last) {
> #line 399
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( first <= last ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
>             399);
>   } else {
> 
>   }
> #line 400
36781c39007
< #line 358
---
> #line 400
36783c39009,39014
< #line 360
---
> #line 402
>   enr = first;
> #line 402
>   goto ldv_51218;
>   ldv_51217: 
> #line 403
36785c39016
< #line 362
---
> #line 404
36787,36789c39018
< #line 363
<     spin_unlock_irqrestore(& mdev->al_lock, flags);
< #line 364
---
> #line 405
36792,36793c39021,39022
< #line 365
<     return;
---
> #line 406
>     goto ldv_51216;
36797,36802c39026,39035
< #line 368
<   tmp___0 = lc_put(mdev->act_log, extent);
< #line 368
<   if (tmp___0 == 0U) {
< #line 369
<     __wake_up(& mdev->al_wait, 3U, 1, 0);
---
> #line 408
>   lc_put(mdev->act_log, extent);
>   ldv_51216: 
> #line 402
>   enr = enr + 1U;
>   ldv_51218: ;
> #line 402
>   if (enr <= last) {
> #line 403
>     goto ldv_51217;
36806c39039
< #line 371
---
> #line 410
36808c39041,39043
< #line 372
---
> #line 411
>   __wake_up(& mdev->al_wait, 3U, 1, 0);
> #line 412
36812c39047
< #line 383 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
---
> #line 423 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
36818c39053
< #line 385
---
> #line 425
36822c39057
< #line 392 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
---
> #line 432 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
36828c39063
< #line 394
---
> #line 434
36832,36833c39067,39068
< #line 402 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
< int w_al_write_transaction(struct drbd_conf *mdev , struct drbd_work *w , int unused ) 
---
> #line 442 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
> static int _al_write_transaction(struct drbd_conf *mdev ) 
36835,36840c39070,39071
<   struct update_al_work *aw ;
<   struct drbd_work  const  *__mptr ;
<   struct lc_element *updated ;
<   unsigned int new_enr ;
<   unsigned int evicted ;
<   struct al_transaction *buffer ;
---
>   struct al_transaction_on_disk *buffer ;
>   struct lc_element *e ;
36843d39073
<   int n ;
36846c39076,39077
<   u32 xor_sum ;
---
>   unsigned int crc ;
>   int err ;
36849,36855c39080,39091
<   unsigned int tmp___1 ;
<   char const   *tmp___2 ;
<   void *tmp___3 ;
<   __u32 tmp___4 ;
<   unsigned int tmp___5 ;
<   __u32 tmp___6 ;
<   __u32 tmp___7 ;
---
>   char const   *tmp___1 ;
>   void *tmp___2 ;
>   __u32 tmp___3 ;
>   struct list_head  const  *__mptr ;
>   __u16 tmp___4 ;
>   __u32 tmp___5 ;
>   unsigned int tmp___6 ;
>   struct list_head  const  *__mptr___0 ;
>   long tmp___7 ;
>   __u16 tmp___8 ;
>   __u16 tmp___9 ;
>   __u16 tmp___10 ;
36859,36863c39095,39099
<   struct lc_element *tmp___8 ;
<   __u32 tmp___9 ;
<   __u32 tmp___10 ;
<   __u32 tmp___11 ;
<   int tmp___12 ;
---
>   struct lc_element *tmp___11 ;
>   __u32 tmp___12 ;
>   __u32 tmp___13 ;
>   int tmp___14 ;
>   int tmp___15 ;
36866,36878c39102,39106
< #line 404
<   __mptr = (struct drbd_work  const  *)w;
< #line 404
<   aw = (struct update_al_work *)__mptr;
< #line 405
<   updated = aw->al_ext;
< #line 406
<   new_enr = aw->enr;
< #line 407
<   evicted = aw->old_enr;
< #line 412
<   xor_sum = 0U;
< #line 414
---
> #line 449
>   crc = 0U;
> #line 450
>   err = 0;
> #line 452
36880c39108
< #line 414
---
> #line 452
36882,36932c39110,39116
< #line 415
<     tmp = drbd_disk_str((enum drbd_disk_state )mdev->state.ldv_39979.disk);
< #line 415
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "disk is %s, cannot start al transaction (-%d +%d)\n",
<             tmp, evicted, new_enr);
< #line 418
<     complete(& ((struct update_al_work *)w)->event);
< #line 419
<     return (1);
<   } else {
< 
<   }
< #line 427
<   if ((int )mdev->state.ldv_39979.conn <= 9 && evicted != 4294967295U) {
< #line 428
<     tmp___1 = al_extent_to_bm_page(evicted);
< #line 428
<     drbd_bm_write_page(mdev, tmp___1);
<   } else {
< 
<   }
< #line 431
<   if ((int )mdev->state.ldv_39979.disk <= 3) {
< #line 432
<     tmp___2 = drbd_disk_str((enum drbd_disk_state )mdev->state.ldv_39979.disk);
< #line 432
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "disk is %s, cannot write al transaction (-%d +%d)\n",
<             tmp___2, evicted, new_enr);
< #line 435
<     complete(& ((struct update_al_work *)w)->event);
< #line 436
<     put_ldev(mdev);
< #line 437
<     return (1);
<   } else {
< 
<   }
< #line 440
<   tmp___3 = drbd_md_get_buffer(mdev);
< #line 440
<   buffer = (struct al_transaction *)tmp___3;
< #line 441
<   if ((unsigned long )buffer == (unsigned long )((struct al_transaction *)0)) {
< #line 442
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "disk failed while waiting for md_io buffer\n");
< #line 443
<     complete(& ((struct update_al_work *)w)->event);
< #line 444
<     put_ldev(mdev);
< #line 445
<     return (1);
---
> #line 453
>     tmp = drbd_disk_str((enum drbd_disk_state )mdev->state.ldv_49522.disk);
> #line 453
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "disk is %s, cannot start al transaction\n",
>             tmp);
> #line 455
>     return (-5);
36936,36961c39120,39121
< #line 448
<   buffer->magic = 1728214147U;
< #line 449
<   tmp___4 = __fswab32(mdev->al_tr_number);
< #line 449
<   buffer->tr_number = tmp___4;
< #line 451
<   tmp___5 = lc_index_of(mdev->act_log, updated);
< #line 451
<   n = (int )tmp___5;
< #line 453
<   tmp___6 = __fswab32((__u32 )n);
< #line 453
<   buffer->updates[0].pos = tmp___6;
< #line 454
<   tmp___7 = __fswab32(new_enr);
< #line 454
<   buffer->updates[0].extent = tmp___7;
< #line 456
<   xor_sum = xor_sum ^ new_enr;
< #line 458
<   __min1 = 61;
< #line 458
<   __min2 = (int )((mdev->act_log)->nr_elements - (unsigned int )mdev->al_tr_cycle);
< #line 458
<   mx = __min1 < __min2 ? __min1 : __min2;
---
> #line 459
>   if ((int )mdev->state.ldv_49522.disk <= 3) {
36963c39123
<   i = 0;
---
>     tmp___1 = drbd_disk_str((enum drbd_disk_state )mdev->state.ldv_49522.disk);
36965,36972c39125,39126
<   goto ldv_50656;
<   ldv_50655: 
< #line 461
<   idx = (unsigned int )(mdev->al_tr_cycle + i);
< #line 462
<   tmp___8 = lc_element_by_index(mdev->act_log, idx);
< #line 462
<   extent_nr = tmp___8->lc_number;
---
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "disk is %s, cannot write al transaction\n",
>             tmp___1);
36974,36978c39128
<   tmp___9 = __fswab32(idx);
< #line 463
<   buffer->updates[i + 1].pos = tmp___9;
< #line 464
<   tmp___10 = __fswab32(extent_nr);
---
>     put_ldev(mdev);
36980,36989c39130
<   buffer->updates[i + 1].extent = tmp___10;
< #line 465
<   xor_sum = xor_sum ^ extent_nr;
< #line 460
<   i = i + 1;
<   ldv_50656: ;
< #line 460
<   if (i < mx) {
< #line 461
<     goto ldv_50655;
---
>     return (-5);
36993d39133
< 
36995,36996c39135,39137
<   goto ldv_50659;
<   ldv_50658: 
---
>   tmp___2 = drbd_md_get_buffer(mdev);
> #line 467
>   buffer = (struct al_transaction_on_disk *)tmp___2;
36998c39139
<   buffer->updates[i + 1].pos = 4294967295U;
---
>   if ((unsigned long )buffer == (unsigned long )((struct al_transaction_on_disk *)0)) {
37000c39141
<   buffer->updates[i + 1].extent = 4294967295U;
---
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "disk failed while waiting for md_io buffer\n");
37002,37009c39143,39145
<   xor_sum = ~ xor_sum;
< #line 467
<   i = i + 1;
<   ldv_50659: ;
< #line 467
<   if (i <= 60) {
< #line 468
<     goto ldv_50658;
---
>     put_ldev(mdev);
> #line 471
>     return (-19);
37013,37016d39148
< #line 472
<   mdev->al_tr_cycle = mdev->al_tr_cycle + 61;
< #line 473
<   if ((unsigned int )mdev->al_tr_cycle >= (mdev->act_log)->nr_elements) {
37018,37021c39150,39152
<     mdev->al_tr_cycle = 0;
<   } else {
< 
<   }
---
>   memset((void *)buffer, 0, 4096UL);
> #line 475
>   buffer->magic = 2724580201U;
37023c39154
<   tmp___11 = __fswab32(xor_sum);
---
>   tmp___3 = __fswab32(mdev->al_tr_number);
37025c39156
<   buffer->xor_sum = tmp___11;
---
>   buffer->tr_number = tmp___3;
37027,37038c39158
<   sector = (sector_t )(((mdev->ldev)->md.md_offset + (u64 )(mdev->ldev)->md.al_offset) + (u64 )mdev->al_tr_pos);
< #line 481
<   tmp___12 = drbd_md_sync_page_io(mdev, mdev->ldev, sector, 1);
< #line 481
<   if (tmp___12 == 0) {
< #line 482
<     drbd_chk_io_error____0(mdev, 1, DRBD_META_IO_ERROR, "w_al_write_transaction");
<   } else {
< 
<   }
< #line 484
<   mdev->al_tr_pos = mdev->al_tr_pos + 1;
---
>   i = 0;
37040c39160,39167
<   if ((unsigned int )mdev->al_tr_pos > (mdev->act_log)->nr_elements / 61U + ((mdev->act_log)->nr_elements % 61U != 0U ? 1U : 0U)) {
---
>   spin_lock_irq(& mdev->al_lock);
> #line 485
>   __mptr = (struct list_head  const  *)(mdev->act_log)->to_be_changed.next;
> #line 485
>   e = (struct lc_element *)__mptr + 0xfffffffffffffff0UL;
> #line 485
>   goto ldv_51243;
>   ldv_51242: ;
37042,37047c39169,39171
<     mdev->al_tr_pos = 0;
<   } else {
< 
<   }
< #line 488
<   if (mdev->al_tr_pos > 63) {
---
>   if (i == 64) {
> #line 487
>     i = i + 1;
37049,37051c39173
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mdev->al_tr_pos < MD_AL_MAX_SIZE ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<             488);
---
>     goto ldv_51241;
37055,37056c39177,39180
< #line 489
<   mdev->al_tr_number = mdev->al_tr_number + 1U;
---
> #line 490
>   tmp___4 = __fswab16((int )((__u16 )e->lc_index));
> #line 490
>   buffer->update_slot_nr[i] = tmp___4;
37058c39182,39186
<   drbd_md_put_buffer(mdev);
---
>   tmp___5 = __fswab32(e->lc_new_number);
> #line 491
>   buffer->update_extent_nr[i] = tmp___5;
> #line 492
>   if (e->lc_number != 4294967295U) {
37060,37090c39188,39190
<   complete(& ((struct update_al_work *)w)->event);
< #line 494
<   put_ldev(mdev);
< #line 496
<   return (1);
< }
< }
< #line 508 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
< static int drbd_al_read_tr(struct drbd_conf *mdev , struct drbd_backing_dev *bdev ,
<                            struct al_transaction *b , int index ) 
< { 
<   sector_t sector ;
<   int rv ;
<   int i ;
<   u32 xor_sum ;
<   int tmp ;
<   __u32 tmp___0 ;
<   __u32 tmp___1 ;
<   __u32 tmp___2 ;
< 
<   {
< #line 515
<   xor_sum = 0U;
< #line 517
<   sector = (sector_t )((bdev->md.md_offset + (u64 )bdev->md.al_offset) + (u64 )index);
< #line 521
<   tmp = drbd_md_sync_page_io(mdev, bdev, sector, 0);
< #line 521
<   if (tmp == 0) {
< #line 522
<     return (-1);
---
>     tmp___6 = al_extent_to_bm_page(e->lc_number);
> #line 493
>     drbd_bm_mark_for_writeout(mdev, (int )tmp___6);
37094,37107c39194
< #line 524
<   tmp___0 = __fswab32(b->magic);
< #line 524
<   rv = tmp___0 == 2205418087U;
< #line 526
<   i = 0;
< #line 526
<   goto ldv_50673;
<   ldv_50672: 
< #line 527
<   tmp___1 = __fswab32(b->updates[i].extent);
< #line 527
<   xor_sum = tmp___1 ^ xor_sum;
< #line 526
---
> #line 495
37109,37237c39196,39204
<   ldv_50673: ;
< #line 526
<   if (i <= 61) {
< #line 527
<     goto ldv_50672;
<   } else {
< 
<   }
< #line 528
<   tmp___2 = __fswab32(b->xor_sum);
< #line 528
<   rv = (tmp___2 == xor_sum) & rv;
< #line 530
<   return (rv);
< }
< }
< #line 540 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
< int drbd_al_read_log(struct drbd_conf *mdev , struct drbd_backing_dev *bdev ) 
< { 
<   struct al_transaction *buffer ;
<   int i ;
<   int rv ;
<   int mx ;
<   int active_extents ;
<   int transactions ;
<   int found_valid ;
<   int from ;
<   int to ;
<   u32 from_tnr ;
<   u32 to_tnr ;
<   u32 cnr ;
<   void *tmp ;
<   __u32 tmp___0 ;
<   int j ;
<   int pos ;
<   unsigned int extent_nr ;
<   unsigned int trn ;
<   int _b ;
<   __u32 tmp___1 ;
<   __u32 tmp___2 ;
<   __u32 tmp___3 ;
< 
<   {
< #line 546
<   active_extents = 0;
< #line 547
<   transactions = 0;
< #line 548
<   found_valid = 0;
< #line 549
<   from = 0;
< #line 550
<   to = 0;
< #line 551
<   from_tnr = 0U;
< #line 552
<   to_tnr = 0U;
< #line 555
<   mx = (int )((mdev->act_log)->nr_elements / 61U + ((mdev->act_log)->nr_elements % 61U != 0U ? 1U : 0U));
< #line 560
<   tmp = drbd_md_get_buffer(mdev);
< #line 560
<   buffer = (struct al_transaction *)tmp;
< #line 561
<   if ((unsigned long )buffer == (unsigned long )((struct al_transaction *)0)) {
< #line 562
<     return (0);
<   } else {
< 
<   }
< #line 565
<   i = 0;
< #line 565
<   goto ldv_50693;
<   ldv_50692: 
< #line 566
<   rv = drbd_al_read_tr(mdev, bdev, buffer, i);
< #line 567
<   if (rv == 0) {
< #line 568
<     goto ldv_50691;
<   } else {
< 
<   }
< #line 569
<   if (rv == -1) {
< #line 570
<     drbd_md_put_buffer(mdev);
< #line 571
<     return (0);
<   } else {
< 
<   }
< #line 573
<   tmp___0 = __fswab32(buffer->tr_number);
< #line 573
<   cnr = tmp___0;
< #line 575
<   found_valid = found_valid + 1;
< #line 575
<   if (found_valid == 1) {
< #line 576
<     from = i;
< #line 577
<     to = i;
< #line 578
<     from_tnr = cnr;
< #line 579
<     to_tnr = cnr;
< #line 580
<     goto ldv_50691;
<   } else {
< 
<   }
< #line 582
<   if ((int )cnr - (int )from_tnr < 0) {
< #line 583
<     if (((from_tnr - cnr) + (u32 )i) - (u32 )from != (u32 )(mx + 1)) {
< #line 583
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( from_tnr - cnr + i - from == mx+1 ) in %s:%d\n",
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<               583);
<     } else {
< 
<     }
< #line 584
<     from = i;
< #line 585
<     from_tnr = cnr;
---
> #line 485
>   __mptr___0 = (struct list_head  const  *)e->list.next;
> #line 485
>   e = (struct lc_element *)__mptr___0 + 0xfffffffffffffff0UL;
>   ldv_51243: ;
> #line 485
>   if ((unsigned long )(& e->list) != (unsigned long )(& (mdev->act_log)->to_be_changed)) {
> #line 486
>     goto ldv_51242;
37241,37255c39208,39220
< #line 587
<   if ((int )cnr - (int )to_tnr > 0) {
< #line 588
<     if (cnr - to_tnr != (u32 )(i - to)) {
< #line 588
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( cnr - to_tnr == i - to ) in %s:%d\n",
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<               588);
<     } else {
< 
<     }
< #line 589
<     to = i;
< #line 590
<     to_tnr = cnr;
---
>   ldv_51241: 
> #line 497
>   spin_unlock_irq(& mdev->al_lock);
> #line 498
>   tmp___7 = __builtin_expect(i > 64, 0L);
> #line 498
>   if (tmp___7 != 0L) {
> #line 498
>     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"),
>                          "i" (498), "i" (12UL));
>     ldv_51244: ;
> #line 498
>     goto ldv_51244;
37259,37260c39224,39235
<   ldv_50691: 
< #line 565
---
> #line 500
>   tmp___8 = __fswab16((int )((__u16 )i));
> #line 500
>   buffer->n_updates = tmp___8;
> #line 501
>   goto ldv_51246;
>   ldv_51245: 
> #line 502
>   buffer->update_slot_nr[i] = 65535U;
> #line 503
>   buffer->update_extent_nr[i] = 4294967295U;
> #line 501
37262,37310c39237,39241
<   ldv_50693: ;
< #line 565
<   if (i <= mx) {
< #line 566
<     goto ldv_50692;
<   } else {
< 
<   }
< 
< #line 594
<   if (found_valid == 0) {
< #line 595
<     dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "No usable activity log found.\n");
< #line 596
<     drbd_md_put_buffer(mdev);
< #line 597
<     return (1);
<   } else {
< 
<   }
< #line 602
<   i = from;
<   ldv_50708: 
< #line 608
<   rv = drbd_al_read_tr(mdev, bdev, buffer, i);
< #line 609
<   _b = rv == 0;
< #line 609
<   if (_b != 0) {
< #line 609
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_al_read_log", (char *)"rv == 0", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<             609);
<   } else {
< 
<   }
< #line 609
<   if (_b != 0) {
< #line 609
<     goto cancel;
<   } else {
< 
<   }
< #line 610
<   if (rv == -1) {
< #line 611
<     drbd_md_put_buffer(mdev);
< #line 612
<     return (0);
---
>   ldv_51246: ;
> #line 501
>   if (i <= 63) {
> #line 502
>     goto ldv_51245;
37314,37336c39245,39280
< #line 615
<   tmp___1 = __fswab32(buffer->tr_number);
< #line 615
<   trn = tmp___1;
< #line 617
<   spin_lock_irq(& mdev->al_lock);
< #line 623
<   j = 61;
< #line 623
<   goto ldv_50705;
<   ldv_50704: 
< #line 624
<   tmp___2 = __fswab32(buffer->updates[j].pos);
< #line 624
<   pos = (int )tmp___2;
< #line 625
<   tmp___3 = __fswab32(buffer->updates[j].extent);
< #line 625
<   extent_nr = tmp___3;
< #line 627
<   if (extent_nr == 4294967295U) {
< #line 628
<     goto ldv_50703;
---
> #line 506
>   tmp___9 = __fswab16((int )((__u16 )(mdev->act_log)->nr_elements));
> #line 506
>   buffer->context_size = tmp___9;
> #line 507
>   tmp___10 = __fswab16((int )((__u16 )mdev->al_tr_cycle));
> #line 507
>   buffer->context_start_slot_nr = tmp___10;
> #line 509
>   __min1 = 919;
> #line 509
>   __min2 = (int )((mdev->act_log)->nr_elements - (unsigned int )mdev->al_tr_cycle);
> #line 509
>   mx = __min1 < __min2 ? __min1 : __min2;
> #line 511
>   i = 0;
> #line 511
>   goto ldv_51253;
>   ldv_51252: 
> #line 512
>   idx = (unsigned int )(mdev->al_tr_cycle + i);
> #line 513
>   tmp___11 = lc_element_by_index(mdev->act_log, idx);
> #line 513
>   extent_nr = tmp___11->lc_number;
> #line 514
>   tmp___12 = __fswab32(extent_nr);
> #line 514
>   buffer->context[i] = tmp___12;
> #line 511
>   i = i + 1;
>   ldv_51253: ;
> #line 511
>   if (i < mx) {
> #line 512
>     goto ldv_51252;
37340,37352d39283
< #line 630
<   lc_set(mdev->act_log, extent_nr, pos);
< #line 631
<   active_extents = active_extents + 1;
<   ldv_50703: 
< #line 623
<   j = j - 1;
<   ldv_50705: ;
< #line 623
<   if (j >= 0) {
< #line 624
<     goto ldv_50704;
<   } else {
37354,37363c39285,39296
<   }
< #line 633
<   spin_unlock_irq(& mdev->al_lock);
< #line 635
<   transactions = transactions + 1;
<   cancel: ;
< #line 638
<   if (i == to) {
< #line 639
<     goto ldv_50707;
---
> #line 516
>   goto ldv_51256;
>   ldv_51255: 
> #line 517
>   buffer->context[i] = 4294967295U;
> #line 516
>   i = i + 1;
>   ldv_51256: ;
> #line 516
>   if (i <= 918) {
> #line 517
>     goto ldv_51255;
37367,37372c39300,39305
< #line 640
<   i = i + 1;
< #line 641
<   if (i > mx) {
< #line 642
<     i = 0;
---
> #line 519
>   mdev->al_tr_cycle = mdev->al_tr_cycle + 919;
> #line 520
>   if ((unsigned int )mdev->al_tr_cycle >= (mdev->act_log)->nr_elements) {
> #line 521
>     mdev->al_tr_cycle = 0;
37376,37388c39309,39322
< #line 643
<   goto ldv_50708;
<   ldv_50707: 
< #line 645
<   mdev->al_tr_number = to_tnr + 1U;
< #line 646
<   mdev->al_tr_pos = to;
< #line 647
<   mdev->al_tr_pos = mdev->al_tr_pos + 1;
< #line 647
<   if ((unsigned int )mdev->al_tr_pos > (mdev->act_log)->nr_elements / 61U + ((mdev->act_log)->nr_elements % 61U != 0U ? 1U : 0U)) {
< #line 649
<     mdev->al_tr_pos = 0;
---
> #line 523
>   sector = (sector_t )(((mdev->ldev)->md.md_offset + (u64 )(mdev->ldev)->md.al_offset) + (u64 )(mdev->al_tr_pos * 8));
> #line 527
>   crc = crc32c(0U, (void const   *)buffer, 4096U);
> #line 528
>   tmp___13 = __fswab32(crc);
> #line 528
>   buffer->crc32c = tmp___13;
> #line 530
>   tmp___15 = drbd_bm_write_hinted(mdev);
> #line 530
>   if (tmp___15 != 0) {
> #line 531
>     err = -5;
37390c39324,39337
< 
---
> #line 533
>     tmp___14 = drbd_md_sync_page_io(mdev, mdev->ldev, sector, 1);
> #line 533
>     if (tmp___14 != 0) {
> #line 534
>       err = -5;
> #line 535
>       drbd_chk_io_error____0(mdev, 1, DRBD_META_IO_ERROR, "_al_write_transaction");
>     } else {
> #line 538
>       mdev->al_tr_pos = (mdev->al_tr_pos + 1) % 8;
> #line 539
>       mdev->al_tr_number = mdev->al_tr_number + 1U;
>     }
37392c39339
< #line 652
---
> #line 542
37394,37398c39341,39344
< #line 654
<   _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Found %d transactions (%d active extents) in activity log.\n",
<             transactions, active_extents);
< #line 657
<   return (1);
---
> #line 543
>   put_ldev(mdev);
> #line 545
>   return (err);
37401,37402c39347,39348
< #line 664 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
< void drbd_al_apply_to_bm(struct drbd_conf *mdev ) 
---
> #line 549 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
> static int w_al_write_transaction(struct drbd_work *w , int unused ) 
37404,37417c39350,39353
<   unsigned int enr ;
<   unsigned long add ;
<   char ppb[10U] ;
<   int i ;
<   int tmp ;
<   int tmp___0 ;
<   wait_queue_t __wait ;
<   struct task_struct *tmp___1 ;
<   int tmp___2 ;
<   struct lc_element *tmp___3 ;
<   unsigned long tmp___4 ;
<   struct _ddebug descriptor ;
<   long tmp___5 ;
<   char *tmp___6 ;
---
>   struct update_al_work *aw ;
>   struct drbd_work  const  *__mptr ;
>   struct drbd_conf *mdev ;
>   int err ;
37420,37502c39356,39377
< #line 667
<   add = 0UL;
< #line 671
<   tmp___0 = lc_try_lock(mdev->act_log);
< #line 671
<   if (tmp___0 != 0) {
< #line 671
<     goto ldv_50717;
<   } else {
< 
<   }
< #line 671
<   tmp___1 = get_current();
< #line 671
<   __wait.flags = 0U;
< #line 671
<   __wait.private = (void *)tmp___1;
< #line 671
<   __wait.func = & autoremove_wake_function;
< #line 671
<   __wait.task_list.next = & __wait.task_list;
< #line 671
<   __wait.task_list.prev = & __wait.task_list;
<   ldv_50720: 
< #line 671
<   prepare_to_wait(& mdev->al_wait, & __wait, 2);
< #line 671
<   tmp___2 = lc_try_lock(mdev->act_log);
< #line 671
<   if (tmp___2 != 0) {
< #line 671
<     goto ldv_50719;
<   } else {
< 
<   }
< #line 671
<   schedule();
< #line 671
<   goto ldv_50720;
<   ldv_50719: 
< #line 671
<   finish_wait(& mdev->al_wait, & __wait);
<   ldv_50717: 
< #line 673
<   i = 0;
< #line 673
<   goto ldv_50725;
<   ldv_50724: 
< #line 674
<   tmp___3 = lc_element_by_index(mdev->act_log, (unsigned int )i);
< #line 674
<   enr = tmp___3->lc_number;
< #line 675
<   if (enr == 4294967295U) {
< #line 676
<     goto ldv_50721;
<   } else {
< 
<   }
< #line 677
<   tmp___4 = drbd_bm_ALe_set_all(mdev, (unsigned long )enr);
< #line 677
<   tmp = (int )tmp___4;
< #line 678
<   descriptor.modname = "drbd";
< #line 678
<   descriptor.function = "drbd_al_apply_to_bm";
< #line 678
<   descriptor.filename = "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared";
< #line 678
<   descriptor.format = "AL: set %d bits in extent %u\n";
< #line 678
<   descriptor.lineno = 678U;
< #line 678
<   descriptor.flags = 0U;
< #line 678
<   tmp___5 = __builtin_expect((long )descriptor.flags & 1L, 0L);
< #line 678
<   if (tmp___5 != 0L) {
< #line 678
<     __dynamic_dev_dbg(& descriptor, (struct device  const  *)(& (mdev->vdisk)->part0.__dev),
<                       "AL: set %d bits in extent %u\n", tmp, enr);
<   } else {
---
> #line 551
>   __mptr = (struct drbd_work  const  *)w;
> #line 551
>   aw = (struct update_al_work *)__mptr;
> #line 552
>   mdev = w->ldv_49807.mdev;
> #line 555
>   err = _al_write_transaction(mdev);
> #line 556
>   aw->err = err;
> #line 557
>   complete(& aw->event);
> #line 559
>   return (err != -5 ? err : 0);
> }
> }
> #line 565 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
> static int al_write_transaction(struct drbd_conf *mdev ) 
> { 
>   struct update_al_work al_work ;
>   int tmp ;
>   struct task_struct *tmp___0 ;
37504,37514c39379,39387
<   }
< #line 679
<   add = (unsigned long )tmp + add;
<   ldv_50721: 
< #line 673
<   i = i + 1;
<   ldv_50725: ;
< #line 673
<   if ((unsigned int )i < (mdev->act_log)->nr_elements) {
< #line 674
<     goto ldv_50724;
---
>   {
> #line 569
>   tmp___0 = get_current();
> #line 569
>   if ((unsigned long )tmp___0 == (unsigned long )(mdev->tconn)->worker.task) {
> #line 570
>     tmp = _al_write_transaction(mdev);
> #line 570
>     return (tmp);
37518,37528c39391,39402
< #line 682
<   lc_unlock(mdev->act_log);
< #line 683
<   __wake_up(& mdev->al_wait, 3U, 1, 0);
< #line 685
<   tmp___6 = ppsize((char *)(& ppb), (unsigned long long )(add << 2));
< #line 685
<   _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Marked additional %s as out-of-sync based on AL.\n",
<             tmp___6);
< #line 686
<   return;
---
> #line 572
>   init_completion(& al_work.event);
> #line 573
>   al_work.w.cb = & w_al_write_transaction;
> #line 574
>   al_work.w.ldv_49807.mdev = mdev;
> #line 575
>   drbd_queue_work_front(& (mdev->tconn)->sender_work, & al_work.w);
> #line 576
>   wait_for_completion(& al_work.event);
> #line 578
>   return (al_work.err);
37531c39405
< #line 689 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
---
> #line 581 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
37538c39412
< #line 693
---
> #line 585
37540c39414
< #line 694
---
> #line 586
37542c39416
< #line 695
---
> #line 587
37544c39418
< #line 695
---
> #line 587
37546c39420
< #line 696
---
> #line 588
37551c39425
< #line 697
---
> #line 589
37553c39427
< #line 699
---
> #line 591
37557c39431
< #line 711 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
---
> #line 603 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
37569,37571c39443,39445
< #line 716
<   tmp = constant_test_bit(1U, (unsigned long const volatile   *)(& (mdev->act_log)->flags));
< #line 716
---
> #line 608
>   tmp = constant_test_bit(2U, (unsigned long const volatile   *)(& (mdev->act_log)->flags));
> #line 608
37573,37576c39447,39450
< #line 716
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( test_bit(__LC_DIRTY, &mdev->act_log->flags) ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<             716);
---
> #line 608
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( test_bit(__LC_LOCKED, &mdev->act_log->flags) ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
>             608);
37580c39454
< #line 718
---
> #line 610
37582,37585c39456,39459
< #line 718
<   goto ldv_50743;
<   ldv_50742: 
< #line 719
---
> #line 610
>   goto ldv_51288;
>   ldv_51287: 
> #line 611
37587c39461
< #line 720
---
> #line 612
37589,37590c39463,39464
< #line 721
<     goto ldv_50737;
---
> #line 613
>     goto ldv_51282;
37594c39468
< #line 722
---
> #line 614
37596c39470
< #line 722
---
> #line 614
37598,37599c39472,39473
< #line 722
<     goto ldv_50738;
---
> #line 614
>     goto ldv_51283;
37603c39477
< #line 722
---
> #line 614
37605c39479
< #line 722
---
> #line 614
37607c39481
< #line 722
---
> #line 614
37609c39483
< #line 722
---
> #line 614
37611c39485
< #line 722
---
> #line 614
37613c39487
< #line 722
---
> #line 614
37615,37616c39489,39490
<   ldv_50741: 
< #line 722
---
>   ldv_51286: 
> #line 614
37618c39492
< #line 722
---
> #line 614
37620c39494
< #line 722
---
> #line 614
37622,37623c39496,39497
< #line 722
<     goto ldv_50740;
---
> #line 614
>     goto ldv_51285;
37627c39501
< #line 722
---
> #line 614
37629,37632c39503,39506
< #line 722
<   goto ldv_50741;
<   ldv_50740: 
< #line 722
---
> #line 614
>   goto ldv_51286;
>   ldv_51285: 
> #line 614
37634,37636c39508,39510
<   ldv_50738: ;
<   ldv_50737: 
< #line 718
---
>   ldv_51283: ;
>   ldv_51282: 
> #line 610
37638,37639c39512,39513
<   ldv_50743: ;
< #line 718
---
>   ldv_51288: ;
> #line 610
37641,37642c39515,39516
< #line 719
<     goto ldv_50742;
---
> #line 611
>     goto ldv_51287;
37646c39520
< #line 725
---
> #line 617
37648c39522
< #line 726
---
> #line 618
37652,37653c39526,39527
< #line 728 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
< static int w_update_odbm(struct drbd_conf *mdev , struct drbd_work *w , int unused ) 
---
> #line 620 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
> static int w_update_odbm(struct drbd_work *w , int unused ) 
37656a39531,39532
>   struct drbd_conf *mdev ;
>   struct sib_info sib ;
37663c39539
< #line 730
---
> #line 622
37665c39541
< #line 730
---
> #line 622
37667c39543,39551
< #line 732
---
> #line 623
>   mdev = w->ldv_49807.mdev;
> #line 624
>   sib.sib_reason = SIB_SYNC_PROGRESS;
> #line 624
>   sib.ldv_50742.ldv_50737.helper_name = 0;
> #line 624
>   sib.ldv_50742.ldv_50737.helper_exit_code = 0U;
> #line 626
37669c39553
< #line 732
---
> #line 626
37671c39555
< #line 733
---
> #line 627
37673c39557
< #line 733
---
> #line 627
37675c39559
< #line 734
---
> #line 628
37680c39564
< #line 735
---
> #line 629
37682,37683c39566,39567
< #line 736
<     return (1);
---
> #line 630
>     return (0);
37687c39571
< #line 739
---
> #line 633
37689c39573
< #line 739
---
> #line 633
37691c39575
< #line 740
---
> #line 634
37693c39577
< #line 742
---
> #line 636
37695c39579
< #line 744
---
> #line 638
37697c39581
< #line 744
---
> #line 638
37699,37700c39583,39584
< #line 745
<     switch ((int )mdev->state.ldv_39979.conn) {
---
> #line 639
>     switch ((int )mdev->state.ldv_49522.conn) {
37705c39589
< #line 748
---
> #line 642
37708,37709c39592,39593
< #line 751
<     goto ldv_50759;
---
> #line 645
>     goto ldv_51305;
37711c39595
<     ldv_50759: ;
---
>     ldv_51305: ;
37715,37718c39599,39602
< #line 754
<   drbd_bcast_sync_progress(mdev);
< #line 756
<   return (1);
---
> #line 648
>   drbd_bcast_event(mdev, (struct sib_info  const  *)(& sib));
> #line 650
>   return (0);
37721c39605
< #line 766 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
---
> #line 660 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
37737c39621
< #line 774
---
> #line 668
37739c39623
< #line 774
---
> #line 668
37741c39625
< #line 774
---
> #line 668
37743,37744c39627,39628
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<             774);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
>             668);
37748c39632
< #line 778
---
> #line 672
37750c39634
< #line 780
---
> #line 674
37752c39636
< #line 781
---
> #line 675
37754c39638
< #line 782
---
> #line 676
37756c39640
< #line 782
---
> #line 676
37758c39642
< #line 783
---
> #line 677
37760c39644
< #line 784
---
> #line 678
37762c39646
< #line 785
---
> #line 679
37765c39649
< #line 787
---
> #line 681
37768c39652
< #line 788
---
> #line 682
37770,37772c39654,39656
< #line 789
<         tmp___0 = drbd_conn_str((enum drbd_conns )mdev->state.ldv_39979.conn);
< #line 789
---
> #line 683
>         tmp___0 = drbd_conn_str((enum drbd_conns )mdev->state.ldv_49522.conn);
> #line 683
37776c39660
< #line 802
---
> #line 696
37782c39666
< #line 811
---
> #line 705
37784c39668
< #line 811
---
> #line 705
37786c39670
< #line 812
---
> #line 706
37788c39672
< #line 813
---
> #line 707
37791c39675
< #line 817
---
> #line 711
37796c39680
< #line 819
---
> #line 713
37798c39682
< #line 820
---
> #line 714
37804c39688
< #line 824
---
> #line 718
37806c39690
< #line 825
---
> #line 719
37808,37809c39692,39693
< #line 826
<       lc_changed(mdev->resync, & ext->lce);
---
> #line 722
>       lc_committed(mdev->resync);
37811c39695
< #line 828
---
> #line 724
37813c39697
< #line 831
---
> #line 727
37815c39699
< #line 832
---
> #line 728
37817,37819c39701,39703
< #line 834
<       tmp___2 = kmalloc(32UL, 32U);
< #line 834
---
> #line 730
>       tmp___2 = kmalloc(40UL, 32U);
> #line 730
37821c39705
< #line 835
---
> #line 731
37823c39707
< #line 836
---
> #line 732
37825c39709
< #line 837
---
> #line 733
37827,37828c39711,39714
< #line 838
<         drbd_queue_work_front(& mdev->data.work, & udw->w);
---
> #line 734
>         udw->w.ldv_49807.mdev = mdev;
> #line 735
>         drbd_queue_work_front(& (mdev->tconn)->sender_work, & udw->w);
37830c39716
< #line 840
---
> #line 737
37837c39723
< #line 844
---
> #line 741
37841c39727
< #line 848
---
> #line 745
37845c39731
< #line 851 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
---
> #line 748 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
37853c39739
< #line 853
---
> #line 750
37855c39741
< #line 854
---
> #line 751
37857c39743
< #line 855
---
> #line 752
37859c39745
< #line 856
---
> #line 753
37861,37863c39747,39749
< #line 857
<     if ((mdev->rs_mark_left[mdev->rs_last_mark] != still_to_go && (unsigned int )*((unsigned short *)mdev + 1138UL) != 336U) && (unsigned int )*((unsigned short *)mdev + 1138UL) != 320U) {
< #line 860
---
> #line 754
>     if ((mdev->rs_mark_left[mdev->rs_last_mark] != still_to_go && (unsigned int )*((unsigned short *)mdev + 374UL) != 336U) && (unsigned int )*((unsigned short *)mdev + 374UL) != 320U) {
> #line 757
37865c39751
< #line 861
---
> #line 758
37867c39753
< #line 862
---
> #line 759
37875c39761
< #line 864
---
> #line 761
37879c39765
< #line 874 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
---
> #line 771 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
37891,37894c39777,39780
<   int _b ;
<   int _b___0 ;
<   long tmp ;
<   long tmp___0 ;
---
>   int tmp ;
>   bool _bool ;
>   int tmp___0 ;
>   bool _bool___0 ;
37896,37897c39782,39783
<   unsigned long tmp___2 ;
<   raw_spinlock_t *tmp___3 ;
---
>   long tmp___2 ;
>   long tmp___3 ;
37898a39785,39786
>   unsigned long tmp___5 ;
>   raw_spinlock_t *tmp___6 ;
37901c39789
< #line 879
---
> #line 776
37903c39791
< #line 881
---
> #line 778
37905,37907c39793,39795
< #line 884
<   if ((size <= 0 || (size & 511) != 0) || (unsigned int )size > 131072U) {
< #line 885
---
> #line 781
>   if ((size <= 0 || (size & 511) != 0) || (unsigned int )size > 1048576U) {
> #line 782
37910c39798
< #line 887
---
> #line 784
37915c39803,39812
< #line 889
---
> #line 787
>   tmp = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 787
>   if (tmp == 0) {
> #line 788
>     return;
>   } else {
> 
>   }
> #line 790
37917c39814
< #line 890
---
> #line 791
37919,37926c39816,39822
< #line 892
<   _b = sector >= nr_sectors;
< #line 892
<   if (_b != 0) {
< #line 892
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "__drbd_set_in_sync", (char *)"sector >= nr_sectors", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<             892);
---
> #line 793
>   _bool = sector < nr_sectors;
> #line 793
>   if (! _bool) {
> #line 793
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"sector < nr_sectors", "__drbd_set_in_sync");
37930,37933c39826,39837
< #line 892
<   if (_b != 0) {
< #line 892
<     return;
---
> #line 793
>   if (_bool) {
> #line 793
>     tmp___0 = 0;
>   } else {
> #line 793
>     tmp___0 = 1;
>   }
> #line 793
>   if (tmp___0) {
> #line 794
>     goto out;
37937,37944c39841,39847
< #line 893
<   _b___0 = esector >= nr_sectors;
< #line 893
<   if (_b___0 != 0) {
< #line 893
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "__drbd_set_in_sync", (char *)"esector >= nr_sectors", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<             893);
---
> #line 795
>   _bool___0 = esector < nr_sectors;
> #line 795
>   if (! _bool___0) {
> #line 795
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"esector < nr_sectors", "__drbd_set_in_sync");
37948,37950c39851,39861
< #line 893
<   if (_b___0 != 0) {
< #line 893
---
> #line 795
>   if (_bool___0) {
> #line 795
>     tmp___1 = 0;
>   } else {
> #line 795
>     tmp___1 = 1;
>   }
> #line 795
>   if (tmp___1) {
> #line 796
37955c39866
< #line 895
---
> #line 798
37957,37962c39868,39873
< #line 900
<   tmp = __builtin_expect(esector <= 6UL, 0L);
< #line 900
<   if (tmp != 0L) {
< #line 901
<     return;
---
> #line 803
>   tmp___2 = __builtin_expect(esector <= 6UL, 0L);
> #line 803
>   if (tmp___2 != 0L) {
> #line 804
>     goto out;
37966,37970c39877,39881
< #line 902
<   tmp___0 = __builtin_expect(nr_sectors - 1UL == esector, 0L);
< #line 902
<   if (tmp___0 != 0L) {
< #line 903
---
> #line 805
>   tmp___3 = __builtin_expect(nr_sectors - 1UL == esector, 0L);
> #line 805
>   if (tmp___3 != 0L) {
> #line 806
37973c39884
< #line 905
---
> #line 808
37976c39887
< #line 906
---
> #line 809
37978c39889
< #line 908
---
> #line 811
37980,37981c39891,39892
< #line 909
<     return;
---
> #line 812
>     goto out;
37985,37989c39896,39900
< #line 915
<   tmp___1 = drbd_bm_clear_bits(mdev, sbnr, ebnr);
< #line 915
<   count = (unsigned long )tmp___1;
< #line 916
---
> #line 818
>   tmp___4 = drbd_bm_clear_bits(mdev, sbnr, ebnr);
> #line 818
>   count = (unsigned long )tmp___4;
> #line 819
37991,38013c39902,39915
< #line 916
<     tmp___4 = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 916
<     if (tmp___4 != 0) {
< #line 917
<       tmp___2 = drbd_bm_total_weight(mdev);
< #line 917
<       drbd_advance_rs_marks(mdev, tmp___2);
< #line 918
<       tmp___3 = spinlock_check(& mdev->al_lock);
< #line 918
<       flags = _raw_spin_lock_irqsave(tmp___3);
< #line 919
<       drbd_try_clear_on_disk_bm(mdev, sector, (int )count, 1);
< #line 920
<       spin_unlock_irqrestore(& mdev->al_lock, flags);
< #line 924
<       wake_up = 1;
< #line 925
<       put_ldev(mdev);
<     } else {
< 
<     }
---
> #line 820
>     tmp___5 = drbd_bm_total_weight(mdev);
> #line 820
>     drbd_advance_rs_marks(mdev, tmp___5);
> #line 821
>     tmp___6 = spinlock_check(& mdev->al_lock);
> #line 821
>     flags = _raw_spin_lock_irqsave(tmp___6);
> #line 822
>     drbd_try_clear_on_disk_bm(mdev, sector, (int )count, 1);
> #line 823
>     spin_unlock_irqrestore(& mdev->al_lock, flags);
> #line 827
>     wake_up = 1;
38017c39919,39922
< #line 927
---
>   out: 
> #line 830
>   put_ldev(mdev);
> #line 831
38019c39924
< #line 928
---
> #line 832
38024c39929
< #line 929
---
> #line 833
38028c39933
< #line 939 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
---
> #line 843 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
38034d39938
<   unsigned long lbnr ;
38042,38044c39946,39948
<   int _b ;
<   int _b___0 ;
<   raw_spinlock_t *tmp___0 ;
---
>   bool _bool ;
>   int tmp___0 ;
>   bool _bool___0 ;
38045a39950,39951
>   raw_spinlock_t *tmp___2 ;
>   int tmp___3 ;
38050c39956
< #line 944
---
> #line 848
38052c39958
< #line 948
---
> #line 852
38054c39960
< #line 949
---
> #line 853
38059,38061c39965,39967
< #line 951
<   if ((size < 0 || (size & 511) != 0) || (unsigned int )size > 131072U) {
< #line 952
---
> #line 855
>   if ((size < 0 || (size & 511) != 0) || (unsigned int )size > 1048576U) {
> #line 856
38064c39970
< #line 954
---
> #line 858
38069c39975
< #line 957
---
> #line 861
38071c39977
< #line 957
---
> #line 861
38073c39979
< #line 958
---
> #line 862
38078c39984
< #line 960
---
> #line 864
38080c39986
< #line 961
---
> #line 865
38082,38089c39988,39994
< #line 963
<   _b = sector >= nr_sectors;
< #line 963
<   if (_b != 0) {
< #line 963
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "__drbd_set_out_of_sync", (char *)"sector >= nr_sectors", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<             963);
---
> #line 867
>   _bool = sector < nr_sectors;
> #line 867
>   if (! _bool) {
> #line 867
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"sector < nr_sectors", "__drbd_set_out_of_sync");
38093,38095c39998,40008
< #line 963
<   if (_b != 0) {
< #line 964
---
> #line 867
>   if (_bool) {
> #line 867
>     tmp___0 = 0;
>   } else {
> #line 867
>     tmp___0 = 1;
>   }
> #line 867
>   if (tmp___0) {
> #line 868
38100,38107c40013,40019
< #line 965
<   _b___0 = esector >= nr_sectors;
< #line 965
<   if (_b___0 != 0) {
< #line 965
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "__drbd_set_out_of_sync", (char *)"esector >= nr_sectors", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<             965);
---
> #line 869
>   _bool___0 = esector < nr_sectors;
> #line 869
>   if (! _bool___0) {
> #line 869
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"esector < nr_sectors", "__drbd_set_out_of_sync");
38111,38113c40023,40033
< #line 965
<   if (_b___0 != 0) {
< #line 966
---
> #line 869
>   if (_bool___0) {
> #line 869
>     tmp___1 = 0;
>   } else {
> #line 869
>     tmp___1 = 1;
>   }
> #line 869
>   if (tmp___1) {
> #line 870
38118,38120c40038
< #line 968
<   lbnr = (nr_sectors - 1UL) >> 3;
< #line 972
---
> #line 874
38122c40040
< #line 973
---
> #line 875
38124,38132c40042,40050
< #line 977
<   tmp___0 = spinlock_check(& mdev->al_lock);
< #line 977
<   flags = _raw_spin_lock_irqsave(tmp___0);
< #line 978
<   tmp___1 = drbd_bm_set_bits(mdev, sbnr, ebnr);
< #line 978
<   count = (unsigned int )tmp___1;
< #line 980
---
> #line 879
>   tmp___2 = spinlock_check(& mdev->al_lock);
> #line 879
>   flags = _raw_spin_lock_irqsave(tmp___2);
> #line 880
>   tmp___3 = drbd_bm_set_bits(mdev, sbnr, ebnr);
> #line 880
>   count = (unsigned int )tmp___3;
> #line 882
38134c40052
< #line 981
---
> #line 883
38136c40054
< #line 982
---
> #line 884
38138c40056
< #line 983
---
> #line 885
38140c40058
< #line 983
---
> #line 885
38142c40060
< #line 983
---
> #line 885
38147c40065
< #line 984
---
> #line 886
38150c40068
< #line 987
---
> #line 889
38152c40070
< #line 989
---
> #line 891
38156c40074
< #line 993 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
---
> #line 895 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
38167c40085
< #line 997
---
> #line 899
38169c40087
< #line 1000
---
> #line 902
38171c40089
< #line 1001
---
> #line 903
38173c40091
< #line 1002
---
> #line 904
38175c40093
< #line 1003
---
> #line 905
38180c40098
< #line 1005
---
> #line 907
38182c40100
< #line 1006
---
> #line 908
38184c40102
< #line 1006
---
> #line 908
38186c40104
< #line 1006
---
> #line 908
38189c40107
< #line 1006
---
> #line 908
38192c40110
< #line 1007
---
> #line 909
38194c40112
< #line 1008
---
> #line 910
38196c40114
< #line 1009
---
> #line 911
38198c40116
< #line 1010
---
> #line 912
38200,38202c40118,40120
< #line 1011
<       lc_changed(mdev->resync, & bm_ext->lce);
< #line 1012
---
> #line 913
>       lc_committed(mdev->resync);
> #line 914
38207c40125
< #line 1014
---
> #line 916
38209c40127
< #line 1015
---
> #line 917
38214c40132
< #line 1016
---
> #line 918
38219c40137
< #line 1018
---
> #line 920
38221c40139
< #line 1019
---
> #line 921
38223c40141
< #line 1020
---
> #line 922
38225c40143
< #line 1021
---
> #line 923
38230c40148
< #line 1023
---
> #line 925
38232,38234c40150,40152
< #line 1024
<     if ((rs_flags & 4UL) != 0UL) {
< #line 1025
---
> #line 926
>     if ((rs_flags & 8UL) != 0UL) {
> #line 927
38239,38241c40157,40159
< #line 1027
<     tmp = __builtin_expect((rs_flags & 2UL) != 0UL, 0L);
< #line 1027
---
> #line 929
>     tmp = __builtin_expect((rs_flags & 4UL) != 0UL, 0L);
> #line 929
38243,38248c40161,40166
< #line 1027
<       __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"),
<                            "i" (1027), "i" (12UL));
<       ldv_50846: ;
< #line 1027
<       goto ldv_50846;
---
> #line 929
>       __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"),
>                            "i" (929), "i" (12UL));
>       ldv_51392: ;
> #line 929
>       goto ldv_51392;
38255c40173
< #line 1030
---
> #line 932
38259c40177
< #line 1033 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
---
> #line 935 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
38262d40179
<   struct lc_element *al_ext ;
38264c40181
<   long tmp ;
---
>   bool tmp ;
38267,38269c40184
< #line 1036
<   rv = 0;
< #line 1038
---
> #line 939
38271,38293c40186,40190
< #line 1039
<   tmp = __builtin_expect((mdev->act_log)->new_number == enr, 0L);
< #line 1039
<   if (tmp != 0L) {
< #line 1040
<     rv = 1;
<   } else {
< #line 1042
<     al_ext = lc_find(mdev->act_log, enr);
< #line 1043
<     if ((unsigned long )al_ext != (unsigned long )((struct lc_element *)0)) {
< #line 1044
<       if (al_ext->refcnt != 0U) {
< #line 1045
<         rv = 1;
<       } else {
< 
<       }
<     } else {
< 
<     }
<   }
< #line 1048
---
> #line 940
>   tmp = lc_is_used(mdev->act_log, enr);
> #line 940
>   rv = (int )tmp;
> #line 941
38295c40192
< #line 1055
---
> #line 943
38299c40196
< #line 1065 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
---
> #line 953 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
38327c40224
< #line 1067
---
> #line 955
38329c40226
< #line 1070
---
> #line 958
38332c40229
< #line 1074
---
> #line 962
38334c40231
< #line 1074
---
> #line 962
38336c40233
< #line 1074
---
> #line 962
38338c40235
< #line 1074
---
> #line 962
38340c40237
< #line 1074
---
> #line 962
38342c40239
< #line 1074
---
> #line 962
38344c40241
< #line 1074
---
> #line 962
38346c40243
< #line 1074
---
> #line 962
38348c40245
< #line 1074
---
> #line 962
38350,38351c40247,40248
<     ldv_50867: 
< #line 1074
---
>     ldv_51412: 
> #line 962
38353c40250
< #line 1074
---
> #line 962
38355c40252
< #line 1074
---
> #line 962
38357,38358c40254,40255
< #line 1074
<       goto ldv_50865;
---
> #line 962
>       goto ldv_51410;
38362c40259
< #line 1074
---
> #line 962
38364c40261
< #line 1074
---
> #line 962
38366c40263
< #line 1074
---
> #line 962
38368c40265
< #line 1074
---
> #line 962
38370,38371c40267,40268
< #line 1074
<       goto ldv_50866;
---
> #line 962
>       goto ldv_51411;
38375c40272
< #line 1074
---
> #line 962
38377,38383c40274,40280
< #line 1074
<     goto ldv_50865;
<     ldv_50866: ;
< #line 1074
<     goto ldv_50867;
<     ldv_50865: 
< #line 1074
---
> #line 962
>     goto ldv_51410;
>     ldv_51411: ;
> #line 962
>     goto ldv_51412;
>     ldv_51410: 
> #line 962
38388c40285
< #line 1074
---
> #line 962
38390c40287
< #line 1076
---
> #line 964
38392c40289
< #line 1077
---
> #line 965
38397c40294
< #line 1079
---
> #line 967
38399c40296
< #line 1079
---
> #line 967
38401c40298
< #line 1080
---
> #line 968
38406c40303
< #line 1082
---
> #line 970
38408,38411c40305,40308
< #line 1082
<   goto ldv_50876;
<   ldv_50875: 
< #line 1083
---
> #line 970
>   goto ldv_51421;
>   ldv_51420: 
> #line 971
38413c40310
< #line 1083
---
> #line 971
38415c40312
< #line 1083
---
> #line 971
38417c40314
< #line 1083
---
> #line 971
38419c40316
< #line 1083
---
> #line 971
38421c40318
< #line 1083
---
> #line 971
38423c40320
< #line 1083
---
> #line 971
38425c40322
< #line 1083
---
> #line 971
38427c40324
< #line 1083
---
> #line 971
38429c40326
< #line 1083
---
> #line 971
38431c40328
< #line 1083
---
> #line 971
38433,38434c40330,40331
<       ldv_50873: 
< #line 1083
---
>       ldv_51418: 
> #line 971
38436c40333
< #line 1083
---
> #line 971
38438c40335
< #line 1083
---
> #line 971
38440,38441c40337,40338
< #line 1083
<         goto ldv_50871;
---
> #line 971
>         goto ldv_51416;
38443c40340
< #line 1083
---
> #line 971
38445c40342
< #line 1083
---
> #line 971
38447,38448c40344,40345
< #line 1083
<           goto ldv_50871;
---
> #line 971
>           goto ldv_51416;
38453c40350
< #line 1083
---
> #line 971
38455c40352
< #line 1083
---
> #line 971
38457c40354
< #line 1083
---
> #line 971
38459c40356
< #line 1083
---
> #line 971
38461,38462c40358,40359
< #line 1083
<         goto ldv_50872;
---
> #line 971
>         goto ldv_51417;
38466c40363
< #line 1083
---
> #line 971
38468,38474c40365,40371
< #line 1083
<       goto ldv_50871;
<       ldv_50872: ;
< #line 1083
<       goto ldv_50873;
<       ldv_50871: 
< #line 1083
---
> #line 971
>       goto ldv_51416;
>       ldv_51417: ;
> #line 971
>       goto ldv_51418;
>       ldv_51416: 
> #line 971
38482c40379
< #line 1083
---
> #line 971
38484c40381
< #line 1087
---
> #line 975
38486c40383
< #line 1087
---
> #line 975
38489c40386
< #line 1087
---
> #line 975
38491c40388
< #line 1087
---
> #line 975
38494c40391
< #line 1088
---
> #line 976
38496c40393
< #line 1089
---
> #line 977
38498c40395
< #line 1089
---
> #line 977
38500c40397
< #line 1090
---
> #line 978
38502c40399
< #line 1091
---
> #line 979
38504c40401
< #line 1092
---
> #line 980
38509c40406
< #line 1094
---
> #line 982
38511c40408
< #line 1095
---
> #line 983
38513c40410
< #line 1096
---
> #line 984
38518c40415
< #line 1097
---
> #line 985
38520c40417
< #line 1097
---
> #line 985
38522c40419
< #line 1098
---
> #line 986
38527c40424
< #line 1099
---
> #line 987
38529c40426
< #line 1099
---
> #line 987
38531c40428
< #line 1099
---
> #line 987
38533c40430
< #line 1100
---
> #line 988
38541c40438
< #line 1102
---
> #line 990
38547c40444
< #line 1082
---
> #line 970
38549,38550c40446,40447
<   ldv_50876: ;
< #line 1082
---
>   ldv_51421: ;
> #line 970
38552,38553c40449,40450
< #line 1083
<     goto ldv_50875;
---
> #line 971
>     goto ldv_51420;
38557c40454
< #line 1105
---
> #line 993
38559c40456
< #line 1106
---
> #line 994
38563c40460
< #line 1118 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
---
> #line 1006 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
38582,38583c40479
<   long tmp___6 ;
<   int tmp___7 ;
---
>   bool tmp___6 ;
38586c40482
< #line 1120
---
> #line 1008
38588c40484
< #line 1121
---
> #line 1009
38590c40486
< #line 1126
---
> #line 1014
38592c40488
< #line 1127
---
> #line 1015
38594c40490
< #line 1141
---
> #line 1029
38596c40492
< #line 1142
---
> #line 1030
38598c40494
< #line 1142
---
> #line 1030
38600c40496
< #line 1142
---
> #line 1030
38603c40499
< #line 1142
---
> #line 1030
38606c40502
< #line 1143
---
> #line 1031
38608c40504
< #line 1144
---
> #line 1032
38610c40506
< #line 1144
---
> #line 1032
38612c40508
< #line 1144
---
> #line 1032
38614,38615c40510,40511
<                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<                 1144);
---
>                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
>                 1032);
38619c40515
< #line 1145
---
> #line 1033
38621c40517
< #line 1145
---
> #line 1033
38623c40519
< #line 1145
---
> #line 1033
38625,38626c40521,40522
<                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<                 1145);
---
>                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
>                 1033);
38630c40526
< #line 1146
---
> #line 1034
38632c40528
< #line 1147
---
> #line 1035
38634c40530
< #line 1148
---
> #line 1036
38636c40532
< #line 1148
---
> #line 1036
38638c40534
< #line 1149
---
> #line 1037
38643c40539
< #line 1150
---
> #line 1038
38646c40542
< #line 1152
---
> #line 1040
38652c40548
< #line 1156
---
> #line 1044
38654c40550
< #line 1157
---
> #line 1045
38656c40552
< #line 1157
---
> #line 1045
38658c40554
< #line 1157
---
> #line 1045
38661c40557
< #line 1157
---
> #line 1045
38664c40560
< #line 1158
---
> #line 1046
38666c40562
< #line 1159
---
> #line 1047
38668c40564
< #line 1159
---
> #line 1047
38670c40566
< #line 1160
---
> #line 1048
38675c40571
< #line 1161
---
> #line 1049
38677c40573
< #line 1161
---
> #line 1049
38679c40575
< #line 1162
---
> #line 1050
38682c40578
< #line 1168
---
> #line 1056
38684c40580
< #line 1169
---
> #line 1057
38686c40582
< #line 1169
---
> #line 1057
38688,38689c40584,40585
<                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<                 1169);
---
>                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
>                 1057);
38694c40590
< #line 1171
---
> #line 1059
38697c40593
< #line 1174
---
> #line 1062
38699c40595
< #line 1175
---
> #line 1063
38704c40600
< #line 1177
---
> #line 1065
38706c40602
< #line 1178
---
> #line 1066
38708c40604
< #line 1178
---
> #line 1066
38710c40606
< #line 1178
---
> #line 1066
38713c40609
< #line 1178
---
> #line 1066
38716c40612
< #line 1179
---
> #line 1067
38718c40614
< #line 1180
---
> #line 1068
38720,38722c40616,40618
< #line 1181
<       if ((rs_flags & 4UL) != 0UL) {
< #line 1182
---
> #line 1069
>       if ((rs_flags & 8UL) != 0UL) {
> #line 1070
38727,38729c40623,40625
< #line 1184
<       tmp___4 = __builtin_expect((rs_flags & 2UL) != 0UL, 0L);
< #line 1184
---
> #line 1072
>       tmp___4 = __builtin_expect((rs_flags & 4UL) != 0UL, 0L);
> #line 1072
38731,38736c40627,40632
< #line 1184
<         __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"),
<                              "i" (1184), "i" (12UL));
<         ldv_50897: ;
< #line 1184
<         goto ldv_50897;
---
> #line 1072
>         __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"),
>                              "i" (1072), "i" (12UL));
>         ldv_51442: ;
> #line 1072
>         goto ldv_51442;
38740c40636
< #line 1185
---
> #line 1073
38745c40641
< #line 1187
---
> #line 1075
38747c40643
< #line 1188
---
> #line 1076
38749c40645
< #line 1189
---
> #line 1077
38751,38753c40647,40649
< #line 1190
<       lc_changed(mdev->resync, & bm_ext->lce);
< #line 1191
---
> #line 1078
>       lc_committed(mdev->resync);
> #line 1079
38755c40651
< #line 1192
---
> #line 1080
38757c40653
< #line 1192
---
> #line 1080
38759c40655
< #line 1192
---
> #line 1080
38761,38762c40657,40658
<                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<                 1192);
---
>                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
>                 1080);
38769c40665
< #line 1194
---
> #line 1082
38771c40667
< #line 1195
---
> #line 1083
38773c40669
< #line 1195
---
> #line 1083
38775,38776c40671,40672
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<               1195);
---
>               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
>               1083);
38780c40676
< #line 1196
---
> #line 1084
38782c40678
< #line 1197
---
> #line 1085
38786c40682
< #line 1200
---
> #line 1088
38788,38805c40684,40691
< #line 1200
<   goto ldv_50899;
<   ldv_50898: 
< #line 1201
<   tmp___6 = __builtin_expect(al_enr + (unsigned int )i == (mdev->act_log)->new_number,
<                              0L);
< #line 1201
<   if (tmp___6 != 0L) {
< #line 1202
<     goto try_again;
<   } else {
< 
<   }
< #line 1203
<   tmp___7 = lc_is_used(mdev->act_log, al_enr + (unsigned int )i);
< #line 1203
<   if (tmp___7 != 0) {
< #line 1204
---
> #line 1088
>   goto ldv_51444;
>   ldv_51443: 
> #line 1089
>   tmp___6 = lc_is_used(mdev->act_log, al_enr + (unsigned int )i);
> #line 1089
>   if ((int )tmp___6) {
> #line 1090
38810c40696
< #line 1200
---
> #line 1088
38812,38813c40698,40699
<   ldv_50899: ;
< #line 1200
---
>   ldv_51444: ;
> #line 1088
38815,38816c40701,40702
< #line 1201
<     goto ldv_50898;
---
> #line 1089
>     goto ldv_51443;
38820c40706
< #line 1206
---
> #line 1092
38823c40709
< #line 1208
---
> #line 1094
38825c40711
< #line 1209
---
> #line 1095
38827c40713
< #line 1210
---
> #line 1096
38830c40716
< #line 1213
---
> #line 1099
38832c40718
< #line 1214
---
> #line 1100
38837c40723
< #line 1215
---
> #line 1101
38839c40725
< #line 1216
---
> #line 1102
38843c40729
< #line 1219 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
---
> #line 1105 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
38856c40742
< #line 1221
---
> #line 1107
38858c40744
< #line 1226
---
> #line 1112
38860c40746
< #line 1226
---
> #line 1112
38862c40748
< #line 1227
---
> #line 1113
38864c40750
< #line 1228
---
> #line 1114
38866c40752
< #line 1228
---
> #line 1114
38868c40754
< #line 1228
---
> #line 1114
38871c40757
< #line 1228
---
> #line 1114
38874c40760
< #line 1229
---
> #line 1115
38876c40762
< #line 1230
---
> #line 1116
38878c40764
< #line 1231
---
> #line 1117
38880c40766
< #line 1231
---
> #line 1117
38882c40768
< #line 1232
---
> #line 1118
38887c40773
< #line 1233
---
> #line 1119
38892c40778
< #line 1236
---
> #line 1122
38894c40780
< #line 1237
---
> #line 1123
38896c40782
< #line 1238
---
> #line 1124
38899c40785
< #line 1241
---
> #line 1127
38904c40790
< #line 1244
---
> #line 1130
38906c40792
< #line 1244
---
> #line 1130
38908c40794
< #line 1245
---
> #line 1131
38910c40796
< #line 1246
---
> #line 1132
38912c40798
< #line 1247
---
> #line 1133
38917c40803
< #line 1250
---
> #line 1136
38919c40805
< #line 1251
---
> #line 1137
38923c40809
< #line 1257 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
---
> #line 1143 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
38929c40815
< #line 1259
---
> #line 1145
38931c40817
< #line 1261
---
> #line 1147
38933c40819
< #line 1261
---
> #line 1147
38935c40821
< #line 1262
---
> #line 1148
38937c40823
< #line 1263
---
> #line 1149
38942c40828
< #line 1265
---
> #line 1151
38944c40830
< #line 1266
---
> #line 1152
38946c40832
< #line 1267
---
> #line 1153
38948c40834
< #line 1268
---
> #line 1154
38950c40836
< #line 1269
---
> #line 1155
38954c40840
< #line 1278 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
---
> #line 1164 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
38968c40854
< #line 1284
---
> #line 1170
38970c40856
< #line 1286
---
> #line 1172
38972c40858
< #line 1286
---
> #line 1172
38974c40860
< #line 1288
---
> #line 1174
38976,38979c40862,40865
< #line 1288
<     goto ldv_50928;
<     ldv_50927: 
< #line 1289
---
> #line 1174
>     goto ldv_51473;
>     ldv_51472: 
> #line 1175
38981c40867
< #line 1290
---
> #line 1176
38983c40869
< #line 1290
---
> #line 1176
38985c40871
< #line 1291
---
> #line 1177
38987,38988c40873,40874
< #line 1292
<       goto ldv_50926;
---
> #line 1178
>       goto ldv_51471;
38992c40878
< #line 1293
---
> #line 1179
38994c40880
< #line 1294
---
> #line 1180
38997c40883
< #line 1297
---
> #line 1183
38999c40885
< #line 1297
---
> #line 1183
39001c40887
< #line 1297
---
> #line 1183
39003,39004c40889,40890
<                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<                 1297);
---
>                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
>                 1183);
39008c40894
< #line 1298
---
> #line 1184
39010c40896
< #line 1298
---
> #line 1184
39012c40898
< #line 1298
---
> #line 1184
39014,39015c40900,40901
<                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<                 1298);
---
>                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
>                 1184);
39019c40905
< #line 1299
---
> #line 1185
39021c40907
< #line 1300
---
> #line 1186
39023c40909
< #line 1301
---
> #line 1187
39028c40914
< #line 1303
---
> #line 1189
39030c40916
< #line 1304
---
> #line 1190
39033c40919
< #line 1306
---
> #line 1192
39035c40921
< #line 1307
---
> #line 1193
39037c40923
< #line 1308
---
> #line 1194
39042c40928
< #line 1310
---
> #line 1196
39044c40930
< #line 1310
---
> #line 1196
39046c40932
< #line 1310
---
> #line 1196
39048,39049c40934,40935
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<               1310);
---
>               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
>               1196);
39053c40939
< #line 1311
---
> #line 1197
39055c40941
< #line 1311
---
> #line 1197
39057c40943
< #line 1311
---
> #line 1197
39059,39060c40945,40946
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<               1311);
---
>               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
>               1197);
39064c40950
< #line 1312
---
> #line 1198
39066,39067c40952,40953
<     ldv_50926: 
< #line 1288
---
>     ldv_51471: 
> #line 1174
39069,39070c40955,40956
<     ldv_50928: ;
< #line 1288
---
>     ldv_51473: ;
> #line 1174
39072,39073c40958,40959
< #line 1289
<       goto ldv_50927;
---
> #line 1175
>       goto ldv_51472;
39078c40964
< #line 1314
---
> #line 1200
39080c40966
< #line 1314
---
> #line 1200
39082,39083c40968,40969
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<               1314);
---
>               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
>               1200);
39087c40973
< #line 1315
---
> #line 1201
39092c40978
< #line 1317
---
> #line 1203
39094c40980
< #line 1318
---
> #line 1204
39096c40982
< #line 1320
---
> #line 1206
39100c40986
< #line 1329 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
---
> #line 1215 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
39110,39115c40996,41003
<   int _b ;
<   int _b___0 ;
<   long tmp ;
<   long tmp___0 ;
<   int tmp___1 ;
<   int tmp___2 ;
---
>   bool _bool ;
>   int tmp ;
>   bool _bool___0 ;
>   int tmp___0 ;
>   long tmp___1 ;
>   long tmp___2 ;
>   int tmp___3 ;
>   int tmp___4 ;
39118c41006
< #line 1335
---
> #line 1221
39120,39122c41008,41010
< #line 1337
<   if ((size <= 0 || (size & 511) != 0) || (unsigned int )size > 131072U) {
< #line 1338
---
> #line 1223
>   if ((size <= 0 || (size & 511) != 0) || (unsigned int )size > 1048576U) {
> #line 1224
39125c41013
< #line 1340
---
> #line 1226
39130c41018
< #line 1342
---
> #line 1228
39132c41020
< #line 1343
---
> #line 1229
39134,39141c41022,41028
< #line 1345
<   _b = sector >= nr_sectors;
< #line 1345
<   if (_b != 0) {
< #line 1345
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_rs_failed_io", (char *)"sector >= nr_sectors", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<             1345);
---
> #line 1231
>   _bool = sector < nr_sectors;
> #line 1231
>   if (! _bool) {
> #line 1231
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"sector < nr_sectors", "drbd_rs_failed_io");
39145,39147c41032,41042
< #line 1345
<   if (_b != 0) {
< #line 1345
---
> #line 1231
>   if (_bool) {
> #line 1231
>     tmp = 0;
>   } else {
> #line 1231
>     tmp = 1;
>   }
> #line 1231
>   if (tmp) {
> #line 1232
39152,39159c41047,41053
< #line 1346
<   _b___0 = esector >= nr_sectors;
< #line 1346
<   if (_b___0 != 0) {
< #line 1346
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_rs_failed_io", (char *)"esector >= nr_sectors", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared",
<             1346);
---
> #line 1233
>   _bool___0 = esector < nr_sectors;
> #line 1233
>   if (! _bool___0) {
> #line 1233
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"esector < nr_sectors", "drbd_rs_failed_io");
39163,39165c41057,41067
< #line 1346
<   if (_b___0 != 0) {
< #line 1346
---
> #line 1233
>   if (_bool___0) {
> #line 1233
>     tmp___0 = 0;
>   } else {
> #line 1233
>     tmp___0 = 1;
>   }
> #line 1233
>   if (tmp___0) {
> #line 1234
39170c41072
< #line 1348
---
> #line 1236
39172,39176c41074,41078
< #line 1353
<   tmp = __builtin_expect(esector <= 6UL, 0L);
< #line 1353
<   if (tmp != 0L) {
< #line 1354
---
> #line 1241
>   tmp___1 = __builtin_expect(esector <= 6UL, 0L);
> #line 1241
>   if (tmp___1 != 0L) {
> #line 1242
39181,39185c41083,41087
< #line 1355
<   tmp___0 = __builtin_expect(nr_sectors - 1UL == esector, 0L);
< #line 1355
<   if (tmp___0 != 0L) {
< #line 1356
---
> #line 1243
>   tmp___2 = __builtin_expect(nr_sectors - 1UL == esector, 0L);
> #line 1243
>   if (tmp___2 != 0L) {
> #line 1244
39188c41090
< #line 1358
---
> #line 1246
39191c41093
< #line 1359
---
> #line 1247
39193c41095
< #line 1361
---
> #line 1249
39195c41097
< #line 1362
---
> #line 1250
39200c41102
< #line 1368
---
> #line 1256
39202,39206c41104,41108
< #line 1369
<   tmp___1 = drbd_bm_count_bits(mdev, sbnr, ebnr);
< #line 1369
<   count = (unsigned long )tmp___1;
< #line 1370
---
> #line 1257
>   tmp___3 = drbd_bm_count_bits(mdev, sbnr, ebnr);
> #line 1257
>   count = (unsigned long )tmp___3;
> #line 1258
39208c41110
< #line 1371
---
> #line 1259
39210,39214c41112,41116
< #line 1373
<     tmp___2 = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 1373
<     if (tmp___2 != 0) {
< #line 1374
---
> #line 1261
>     tmp___4 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 1261
>     if (tmp___4 != 0) {
> #line 1262
39216c41118
< #line 1375
---
> #line 1263
39221c41123
< #line 1380
---
> #line 1268
39226c41128
< #line 1382
---
> #line 1270
39228c41130
< #line 1383
---
> #line 1271
39230c41132
< #line 1384
---
> #line 1272
39235c41137,41178
< #line 1385
---
> #line 1273
>   return;
> }
> }
> #line 1312 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
> void ldv_main5_sequence_infinite_withcheck_stateful(void) 
> { 
>   int tmp ;
>   int tmp___0 ;
> 
>   {
> #line 1324
>   LDV_IN_INTERRUPT = 1;
> #line 1333
>   ldv_initialize();
> #line 1335
>   goto ldv_51511;
>   ldv_51510: 
> #line 1338
>   tmp = nondet_int();
> #line 1338
>   switch (tmp) {
>   default: ;
> #line 1340
>   goto ldv_51509;
>   }
>   ldv_51509: ;
>   ldv_51511: 
> #line 1335
>   tmp___0 = nondet_int();
> #line 1335
>   if (tmp___0 != 0) {
> #line 1336
>     goto ldv_51510;
>   } else {
> 
>   }
> 
> 
> #line 1349
>   ldv_check_final_state();
> #line 1352
39239,39240c41182,41183
< #line 1387 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
< void ldv_mutex_lock_165(struct mutex *ldv_func_arg1 ) 
---
> #line 1356 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
> void ldv_mutex_lock_171(struct mutex *ldv_func_arg1 ) 
39245c41188
< #line 1392
---
> #line 1361
39247c41190
< #line 1394
---
> #line 1363
39249c41192
< #line 1395
---
> #line 1364
39253,39254c41196,41197
< #line 1397 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
< void ldv_mutex_unlock_166(struct mutex *ldv_func_arg1 ) 
---
> #line 1366 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
> void ldv_mutex_unlock_172(struct mutex *ldv_func_arg1 ) 
39259c41202
< #line 1402
---
> #line 1371
39261c41204
< #line 1404
---
> #line 1373
39263c41206
< #line 1405
---
> #line 1374
39267,39268c41210,41211
< #line 1407 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
< void ldv_mutex_lock_167(struct mutex *ldv_func_arg1 ) 
---
> #line 1376 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
> void ldv_mutex_lock_173(struct mutex *ldv_func_arg1 ) 
39273c41216
< #line 1412
---
> #line 1381
39275c41218
< #line 1414
---
> #line 1383
39277c41220
< #line 1415
---
> #line 1384
39281,39282c41224,41225
< #line 1417 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
< int ldv_mutex_trylock_168(struct mutex *ldv_func_arg1 ) 
---
> #line 1386 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
> int ldv_mutex_trylock_174(struct mutex *ldv_func_arg1 ) 
39289c41232
< #line 1422
---
> #line 1391
39291c41234
< #line 1422
---
> #line 1391
39293c41236
< #line 1424
---
> #line 1393
39295c41238
< #line 1424
---
> #line 1393
39297c41240
< #line 1426
---
> #line 1395
39301,39302c41244,41245
< #line 1429 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
< void ldv_mutex_unlock_169(struct mutex *ldv_func_arg1 ) 
---
> #line 1398 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
> void ldv_mutex_unlock_175(struct mutex *ldv_func_arg1 ) 
39307c41250
< #line 1434
---
> #line 1403
39309c41252
< #line 1436
---
> #line 1405
39311c41254
< #line 1437
---
> #line 1406
39315,39316c41258,41259
< #line 1439 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
< void ldv_mutex_lock_170(struct mutex *ldv_func_arg1 ) 
---
> #line 1408 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
> void ldv_mutex_lock_176(struct mutex *ldv_func_arg1 ) 
39321c41264
< #line 1444
---
> #line 1413
39323c41266
< #line 1446
---
> #line 1415
39325c41268
< #line 1447
---
> #line 1416
39329,39330c41272,41273
< #line 1449 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
< void ldv_mutex_unlock_171(struct mutex *ldv_func_arg1 ) 
---
> #line 1418 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
> void ldv_mutex_unlock_177(struct mutex *ldv_func_arg1 ) 
39335c41278
< #line 1454
---
> #line 1423
39337c41280
< #line 1456
---
> #line 1425
39339c41282
< #line 1457
---
> #line 1426
39343,39344c41286,41287
< #line 1459 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
< void ldv_mutex_lock_172(struct mutex *ldv_func_arg1 ) 
---
> #line 1428 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
> void ldv_mutex_lock_178(struct mutex *ldv_func_arg1 ) 
39349c41292
< #line 1464
---
> #line 1433
39351c41294
< #line 1466
---
> #line 1435
39353c41296
< #line 1467
---
> #line 1436
39357,39358c41300,41301
< #line 1469 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
< void ldv_mutex_unlock_173(struct mutex *ldv_func_arg1 ) 
---
> #line 1438 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
> void ldv_mutex_unlock_179(struct mutex *ldv_func_arg1 ) 
39363c41306
< #line 1474
---
> #line 1443
39365c41308
< #line 1476
---
> #line 1445
39367c41310
< #line 1477
---
> #line 1446
39371,39372c41314,41315
< #line 1479 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
< void ldv_mutex_lock_174(struct mutex *ldv_func_arg1 ) 
---
> #line 1448 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
> void ldv_mutex_lock_180(struct mutex *ldv_func_arg1 ) 
39377c41320
< #line 1484
---
> #line 1453
39379c41322
< #line 1486
---
> #line 1455
39381c41324
< #line 1487
---
> #line 1456
39385,39386c41328,41329
< #line 1489 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
< void ldv_mutex_unlock_175(struct mutex *ldv_func_arg1 ) 
---
> #line 1458 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
> void ldv_mutex_unlock_181(struct mutex *ldv_func_arg1 ) 
39391c41334
< #line 1494
---
> #line 1463
39393,39435c41336
< #line 1496
<   mutex_unlock(ldv_func_arg1);
< #line 1497
<   return;
< }
< }
< #line 1499 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
< void ldv_mutex_lock_176(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1504
<   ldv_mutex_lock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 1506
<   mutex_lock(ldv_func_arg1);
< #line 1507
<   return;
< }
< }
< #line 1509 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
< void ldv_mutex_unlock_177(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1514
<   ldv_mutex_unlock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 1516
<   mutex_unlock(ldv_func_arg1);
< #line 1517
<   return;
< }
< }
< #line 1519 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_actlog.c.prepared"
< void ldv_mutex_unlock_178(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1524
<   ldv_mutex_unlock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 1526
---
> #line 1465
39437c41338
< #line 1527
---
> #line 1466
39451,39470c41352,41362
< #line 292 "include/linux/list.h"
< __inline static void list_splice(struct list_head  const  *list , struct list_head *head ) 
< { 
<   int tmp ;
< 
<   {
< #line 295
<   tmp = list_empty(list);
< #line 295
<   if (tmp == 0) {
< #line 296
<     __list_splice(list, head, head->next);
<   } else {
< 
<   }
< #line 297
<   return;
< }
< }
< #line 113 "include/linux/bitmap.h"
---
> #line 323 "include/linux/kernel.h"
> extern int sprintf(char * , char const   *  , ...) ;
> #line 326
> extern int snprintf(char * , size_t  , char const   *  , ...) ;
> #line 23 "include/linux/string.h"
> extern char *strncpy(char * , char const   * , __kernel_size_t  ) ;
> #line 115
> extern char *kstrdup(char const   * , gfp_t  ) ;
> #line 93 "include/linux/bitmap.h"
> extern int __bitmap_equal(unsigned long const   * , unsigned long const   * , int  ) ;
> #line 113
39471a41364,41366
> #line 125
> extern int __bitmap_parse(char const   * , unsigned int  , int  , unsigned long * ,
>                           int  ) ;
39490a41386,41417
> #line 179 "include/linux/bitmap.h"
> __inline static void bitmap_copy(unsigned long *dst , unsigned long const   *src ,
>                                  int nbits ) 
> { 
>   int len ;
>   size_t __len ;
>   void *__ret ;
> 
>   {
> #line 185
>   len = (int )((unsigned int )(((unsigned long )nbits + 63UL) / 64UL) * 8U);
> #line 186
>   __len = (size_t )len;
> #line 186
>   __ret = __builtin_memcpy((void *)dst, (void const   *)src, __len);
> #line 189
>   return;
> }
> }
> #line 233 "include/linux/bitmap.h"
> __inline static int bitmap_equal(unsigned long const   *src1 , unsigned long const   *src2 ,
>                                  int nbits ) 
> { 
>   int tmp ;
> 
>   {
> #line 239
>   tmp = __bitmap_equal(src1, src2, nbits);
> #line 239
>   return (tmp);
> }
> }
39502a41430,41442
> #line 301 "include/linux/bitmap.h"
> __inline static int bitmap_parse(char const   *buf , unsigned int buflen , unsigned long *maskp ,
>                                  int nmaskbits ) 
> { 
>   int tmp ;
> 
>   {
> #line 304
>   tmp = __bitmap_parse(buf, buflen, 0, maskp, nmaskbits);
> #line 304
>   return (tmp);
> }
> }
39530a41471,41483
> #line 404 "include/linux/cpumask.h"
> __inline static bool cpumask_equal(struct cpumask  const  *src1p , struct cpumask  const  *src2p ) 
> { 
>   int tmp ;
> 
>   {
> #line 407
>   tmp = bitmap_equal((unsigned long const   *)(& src1p->bits), (unsigned long const   *)(& src2p->bits),
>                      nr_cpu_ids);
> #line 407
>   return (tmp != 0);
> }
> }
39542a41496,41508
> #line 495 "include/linux/cpumask.h"
> __inline static void cpumask_copy(struct cpumask *dstp , struct cpumask  const  *srcp ) 
> { 
> 
> 
>   {
> #line 498
>   bitmap_copy((unsigned long *)(& dstp->bits), (unsigned long const   *)(& srcp->bits),
>               nr_cpu_ids);
> #line 499
>   return;
> }
> }
39546a41513,41515
> #line 279 "include/linux/lockdep.h"
> extern void lockdep_init_map(struct lockdep_map * , char const   * , struct lock_class_key * ,
>                              int  ) ;
39564c41533
< void ldv_mutex_unlock_208(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_unlock_207(struct mutex *ldv_func_arg1 ) ;
39566c41535
< void ldv_mutex_unlock_211(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_unlock_208(struct mutex *ldv_func_arg1 ) ;
39568c41537
< void ldv_mutex_unlock_212(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_unlock_210(struct mutex *ldv_func_arg1 ) ;
39570c41539
< void ldv_mutex_unlock_214(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_unlock_212(struct mutex *ldv_func_arg1 ) ;
39572c41541
< void ldv_mutex_unlock_216(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_unlock_213(struct mutex *ldv_func_arg1 ) ;
39574c41543
< void ldv_mutex_unlock_218(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_unlock_214(struct mutex *ldv_func_arg1 ) ;
39576c41545
< void ldv_mutex_unlock_220(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_unlock_216(struct mutex *ldv_func_arg1 ) ;
39578c41547
< void ldv_mutex_unlock_222(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_unlock_218(struct mutex *ldv_func_arg1 ) ;
39580c41549
< void ldv_mutex_unlock_224(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_unlock_220(struct mutex *ldv_func_arg1 ) ;
39582,39585c41551,41552
< void ldv_mutex_unlock_226(struct mutex *ldv_func_arg1 ) ;
< #line 244
< void ldv_mutex_unlock_228(struct mutex *ldv_func_arg1 ) ;
< #line 10 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> void ldv_mutex_unlock_222(struct mutex *ldv_func_arg1 ) ;
> #line 10 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
39598,39599d41564
< void ldv_mutex_lock_207(struct mutex *ldv_func_arg1 ) ;
< #line 38
39600a41566,41567
> #line 38
> void ldv_mutex_lock_211(struct mutex *ldv_func_arg1 ) ;
39602,39605d41568
< void ldv_mutex_lock_210(struct mutex *ldv_func_arg1 ) ;
< #line 46
< void ldv_mutex_lock_213(struct mutex *ldv_func_arg1 ) ;
< #line 50
39607c41570
< #line 54
---
> #line 46
39609c41572
< #line 58
---
> #line 50
39611c41574
< #line 62
---
> #line 54
39613,39619c41576
< #line 66
< void ldv_mutex_lock_223(struct mutex *ldv_func_arg1 ) ;
< #line 70
< void ldv_mutex_lock_225(struct mutex *ldv_func_arg1 ) ;
< #line 74
< void ldv_mutex_lock_227(struct mutex *ldv_func_arg1 ) ;
< #line 95
---
> #line 91
39621c41578
< #line 99
---
> #line 95
39623,39626d41579
< #line 135
< void ldv_mutex_lock_state_mutex_of_drbd_conf(struct mutex *lock ) ;
< #line 139
< void ldv_mutex_unlock_state_mutex_of_drbd_conf(struct mutex *lock ) ;
39628c41581
< __inline static struct thread_info *current_thread_info___2(void) 
---
> __inline static struct thread_info *current_thread_info___5(void) 
39640c41593
<   goto ldv_6382;
---
>   goto ldv_6394;
39645c41598
<   goto ldv_6382;
---
>   goto ldv_6394;
39650c41603
<   goto ldv_6382;
---
>   goto ldv_6394;
39655c41608
<   goto ldv_6382;
---
>   goto ldv_6394;
39660c41613
<   ldv_6382: 
---
>   ldv_6394: 
39668a41622,41725
> #line 92 "include/linux/completion.h"
> extern void complete_all(struct completion * ) ;
> #line 163 "include/linux/rcupdate.h"
> __inline static void __rcu_read_lock___5(void) 
> { 
>   struct thread_info *tmp ;
> 
>   {
> #line 165
>   tmp = current_thread_info___5();
> #line 165
>   tmp->preempt_count = tmp->preempt_count + 1;
> #line 165
>   __asm__  volatile   ("": : : "memory");
> #line 166
>   return;
> }
> }
> #line 168 "include/linux/rcupdate.h"
> __inline static void __rcu_read_unlock___5(void) 
> { 
>   struct thread_info *tmp ;
> 
>   {
> #line 170
>   __asm__  volatile   ("": : : "memory");
> #line 170
>   tmp = current_thread_info___5();
> #line 170
>   tmp->preempt_count = tmp->preempt_count + -1;
> #line 170
>   __asm__  volatile   ("": : : "memory");
> #line 171
>   return;
> }
> }
> #line 732 "include/linux/rcupdate.h"
> __inline static void rcu_read_lock___5(void) 
> { 
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
> 
>   {
> #line 734
>   __rcu_read_lock___5();
> #line 736
>   rcu_lock_acquire(& rcu_lock_map);
> #line 737
>   tmp = debug_lockdep_rcu_enabled();
> #line 737
>   if (tmp != 0 && ! __warned) {
> #line 737
>     tmp___0 = rcu_is_cpu_idle();
> #line 737
>     if (tmp___0 != 0) {
> #line 737
>       __warned = 1;
> #line 737
>       lockdep_rcu_suspicious("include/linux/rcupdate.h", 738, "rcu_read_lock() used illegally while idle");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 740
>   return;
> }
> }
> #line 756 "include/linux/rcupdate.h"
> __inline static void rcu_read_unlock___5(void) 
> { 
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
> 
>   {
> #line 758
>   tmp = debug_lockdep_rcu_enabled();
> #line 758
>   if (tmp != 0 && ! __warned) {
> #line 758
>     tmp___0 = rcu_is_cpu_idle();
> #line 758
>     if (tmp___0 != 0) {
> #line 758
>       __warned = 1;
> #line 758
>       lockdep_rcu_suspicious("include/linux/rcupdate.h", 759, "rcu_read_unlock() used illegally while idle");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 760
>   rcu_lock_release(& rcu_lock_map);
> #line 762
>   __rcu_read_unlock___5();
> #line 763
>   return;
> }
> }
39673a41731,41758
> #line 164 "include/linux/workqueue.h"
> extern void __init_work(struct work_struct * , int  ) ;
> #line 328
> extern struct workqueue_struct *__alloc_workqueue_key(char const   * , unsigned int  ,
>                                                       int  , struct lock_class_key * ,
>                                                       char const   *  , ...) ;
> #line 390
> extern void destroy_workqueue(struct workqueue_struct * ) ;
> #line 394
> extern bool queue_work(struct workqueue_struct * , struct work_struct * ) ;
> #line 345 "include/linux/gfp.h"
> extern unsigned long __get_free_pages(gfp_t  , unsigned int  ) ;
> #line 360
> extern void free_pages(unsigned long  , unsigned int  ) ;
> #line 43 "include/linux/rculist.h"
> extern void __list_add_rcu(struct list_head * , struct list_head * , struct list_head * ) ;
> #line 84 "include/linux/rculist.h"
> __inline static void list_add_tail_rcu(struct list_head *new , struct list_head *head ) 
> { 
> 
> 
>   {
> #line 87
>   __list_add_rcu(new, head->prev, head);
> #line 88
>   return;
> }
> }
39715a41801,41810
> #line 105 "include/linux/idr.h"
> extern int idr_pre_get(struct idr * , gfp_t  ) ;
> #line 107
> extern int idr_get_new_above(struct idr * , void * , int  , int * ) ;
> #line 112
> extern void idr_remove(struct idr * , int  ) ;
> #line 114
> extern void idr_destroy(struct idr * ) ;
> #line 115
> extern void idr_init(struct idr * ) ;
39723c41818,41820
< #line 410 "include/linux/genhd.h"
---
> #line 409 "include/linux/genhd.h"
> extern void add_disk(struct gendisk * ) ;
> #line 410
39755c41852,41854
< #line 213 "include/linux/bio.h"
---
> #line 212 "include/linux/bio.h"
> extern struct bio_set *bioset_create(unsigned int  , unsigned int  ) ;
> #line 213
39757c41856,41866
< #line 895 "include/linux/blkdev.h"
---
> #line 787 "include/linux/blkdev.h"
> __inline static struct request_queue *bdev_get_queue(struct block_device *bdev ) 
> { 
> 
> 
>   {
> #line 789
>   return ((bdev->bd_disk)->queue);
> }
> }
> #line 895
39771c41880
< #line 244 "include/linux/lru_cache.h"
---
> #line 255 "include/linux/lru_cache.h"
39773c41882,41888
< #line 62 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 22 "include/linux/genl_magic_struct.h"
> int drbd_genl_register(void) ;
> #line 23
> void drbd_genl_unregister(void) ;
> #line 134 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_state.h"
> void drbd_resume_al(struct drbd_conf *mdev ) ;
> #line 66 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
39775,39778d41889
< #line 63 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< bool allow_oos  ;
< #line 64
< unsigned int cn_idx ;
39779a41891,41892
> bool allow_oos  ;
> #line 70 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
39781c41894
< #line 68 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 71 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
39783c41896
< #line 69 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 72 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
39785c41898
< #line 72
---
> #line 75
39787,39887c41900,41904
< #line 157 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< struct drbd_conf **minor_table  ;
< #line 591 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static void DCBP_set_code(struct p_compressed_bm *p , enum drbd_bitmap_code code ) 
< { 
<   long tmp ;
< 
<   {
< #line 593
<   tmp = __builtin_expect(((unsigned int )code & 4294967280U) != 0U, 0L);
< #line 593
<   if (tmp != 0L) {
< #line 593
<     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"),
<                          "i" (593), "i" (12UL));
<     ldv_50147: ;
< #line 593
<     goto ldv_50147;
<   } else {
< 
<   }
< #line 594
<   p->encoding = ((unsigned int )p->encoding & 240U) | (unsigned int )((u8 )code);
< #line 595
<   return;
< }
< }
< #line 604 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static void DCBP_set_start(struct p_compressed_bm *p , int set ) 
< { 
< 
< 
<   {
< #line 606
<   p->encoding = (u8 )(((int )((signed char )p->encoding) & 127) | (set != 0 ? -128 : 0));
< #line 607
<   return;
< }
< }
< #line 616 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static void DCBP_set_pad_bits(struct p_compressed_bm *p , int n ) 
< { 
<   long tmp ;
< 
<   {
< #line 618
<   tmp = __builtin_expect((n & -8) != 0, 0L);
< #line 618
<   if (tmp != 0L) {
< #line 618
<     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"),
<                          "i" (618), "i" (12UL));
<     ldv_50162: ;
< #line 618
<     goto ldv_50162;
<   } else {
< 
<   }
< #line 619
<   p->encoding = (u8 )(((int )((signed char )p->encoding) & -128) | (int )((signed char )(n << 4)));
< #line 620
<   return;
< }
< }
< #line 1196 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static int drbd_get_data_sock___0(struct drbd_conf *mdev ) 
< { 
<   long tmp ;
< 
<   {
< #line 1198
<   ldv_mutex_lock_204(& mdev->data.mutex);
< #line 1201
<   tmp = __builtin_expect((unsigned long )mdev->data.socket == (unsigned long )((struct socket *)0),
<                          0L);
< #line 1201
<   if (tmp != 0L) {
< #line 1202
<     ldv_mutex_unlock_205(& mdev->data.mutex);
< #line 1203
<     return (0);
<   } else {
< 
<   }
< #line 1205
<   return (1);
< }
< }
< #line 1208 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static void drbd_put_data_sock___0(struct drbd_conf *mdev ) 
< { 
< 
< 
<   {
< #line 1210
<   ldv_mutex_unlock_206(& mdev->data.mutex);
< #line 1211
<   return;
< }
< }
< #line 1232
---
> #line 167 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct idr minors  ;
> #line 168 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> struct list_head drbd_tconns  ;
> #line 1063
39889,39897c41906,41909
< #line 1246
< void print_st_err(struct drbd_conf *mdev , union drbd_state os , union drbd_state ns ,
<                   enum drbd_state_rv err ) ;
< #line 1252
< void drbd_calc_cpu_mask(struct drbd_conf *mdev ) ;
< #line 1257
< void drbd_free_resources(struct drbd_conf *mdev ) ;
< #line 1263
< int drbd_send(struct drbd_conf *mdev , struct socket *sock , void *buf , size_t size ,
---
> #line 1069
> void drbd_calc_cpu_mask(struct drbd_tconn *tconn ) ;
> #line 1078
> int drbd_send(struct drbd_tconn *tconn , struct socket *sock , void *buf , size_t size ,
39899c41911,41916
< #line 1267
---
> #line 1080
> int drbd_send_all(struct drbd_tconn *tconn , struct socket *sock , void *buffer ,
>                   size_t size , unsigned int msg_flags ) ;
> #line 1083
> int __drbd_send_protocol(struct drbd_tconn *tconn , enum drbd_packet cmd ) ;
> #line 1086
39901c41918
< #line 1270
---
> #line 1089
39903,39905c41920
< #line 1306
< int _drbd_send_bitmap(struct drbd_conf *mdev ) ;
< #line 1308
---
> #line 1116
39907c41922
< #line 1313
---
> #line 1122
39909c41924
< #line 1320
---
> #line 1129
39911c41926
< #line 1321
---
> #line 1130
39913c41928
< #line 1322
---
> #line 1131
39915c41930
< #line 1324
---
> #line 1133
39917c41932
< #line 1330
---
> #line 1139
39920c41935,41938
< #line 1531 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1146
> int drbd_bitmap_io_from_worker(struct drbd_conf *mdev , int (*io_fn)(struct drbd_conf * ) ,
>                                char *why , enum bm_flag flags ) ;
> #line 1365 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
39922c41940
< #line 1532 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1366 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
39924c41942
< #line 1533 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1367 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
39926c41944
< #line 1534 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1368 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
39928c41946
< #line 1535 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1369 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
39930c41948
< #line 1536 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1370 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
39932c41950
< #line 1551 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1385 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
39934c41952
< #line 1552 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1386 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
39936c41954
< #line 1553 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1387 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
39938c41956
< #line 1554 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1388 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
39940c41958
< #line 1562 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1396 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
39942c41960
< #line 1566 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1400 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
39944,39948c41962,41980
< #line 1572
< struct drbd_conf *drbd_new_device(unsigned int minor ) ;
< #line 1573
< void drbd_free_mdev(struct drbd_conf *mdev ) ;
< #line 1575 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1406
> int conn_lowest_minor(struct drbd_tconn *tconn ) ;
> #line 1407
> enum drbd_ret_code conn_new_minor(struct drbd_tconn *tconn , unsigned int minor ,
>                                   int vnr ) ;
> #line 1410
> int set_resource_options(struct drbd_tconn *tconn , struct res_opts *res_opts ) ;
> #line 1411
> struct drbd_tconn *conn_create(char const   *name , struct res_opts *res_opts ) ;
> #line 1412
> void conn_destroy(struct kref *kref ) ;
> #line 1413
> struct drbd_tconn *conn_get_by_name(char const   *name ) ;
> #line 1414
> struct drbd_tconn *conn_get_by_addrs(void *my_addr , int my_addr_len , void *peer_addr ,
>                                      int peer_addr_len ) ;
> #line 1416
> void conn_free_crypto(struct drbd_tconn *tconn ) ;
> #line 1418 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
39950c41982,41984
< #line 1585
---
> #line 1429
> int drbd_msg_put_info(char const   *info ) ;
> #line 1430
39952c41986
< #line 1586
---
> #line 1431
39954,39961c41988,41990
< #line 1753
< void drbd_nl_cleanup(void) ;
< #line 1754
< int drbd_nl_init(void) ;
< #line 1755
< void drbd_bcast_state(struct drbd_conf *mdev , union drbd_state state ) ;
< #line 1840 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static void drbd_state_lock___0(struct drbd_conf *mdev ) 
---
> #line 1675 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static void __drbd_chk_io_error____3(struct drbd_conf *mdev , enum drbd_force_detach_flags df ,
>                                               char const   *where ) 
39962a41992,41994
>   enum drbd_io_error_p ep ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
39964,39965c41996
<   wait_queue_t __wait ;
<   struct task_struct *tmp___0 ;
---
>   int tmp___0 ;
39966a41998,41999
>   union drbd_state __ns ;
>   union drbd_state __ns___0 ;
39969,39975c42002,42019
< #line 1842
<   tmp = drbd_test_and_set_flag(mdev, CLUSTER_ST_CHANGE);
< #line 1842
<   if (tmp == 0) {
< #line 1842
<     goto ldv_51288;
<   } else {
---
> #line 1681
>   rcu_read_lock___5();
> #line 1682
>   _________p1 = *((struct disk_conf * volatile  *)(& (mdev->ldev)->disk_conf));
> #line 1682
>   tmp = debug_lockdep_rcu_enabled();
> #line 1682
>   if (tmp != 0 && ! __warned) {
> #line 1682
>     tmp___0 = rcu_read_lock_held();
> #line 1682
>     if (tmp___0 == 0 && 1) {
> #line 1682
>       __warned = 1;
> #line 1682
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h",
>                              1682, "suspicious rcu_dereference_check() usage");
>     } else {
39977,39998c42021
<   }
< #line 1842
<   tmp___0 = get_current();
< #line 1842
<   __wait.flags = 0U;
< #line 1842
<   __wait.private = (void *)tmp___0;
< #line 1842
<   __wait.func = & autoremove_wake_function;
< #line 1842
<   __wait.task_list.next = & __wait.task_list;
< #line 1842
<   __wait.task_list.prev = & __wait.task_list;
<   ldv_51291: 
< #line 1842
<   prepare_to_wait(& mdev->misc_wait, & __wait, 2);
< #line 1842
<   tmp___1 = drbd_test_and_set_flag(mdev, CLUSTER_ST_CHANGE);
< #line 1842
<   if (tmp___1 == 0) {
< #line 1842
<     goto ldv_51290;
---
>     }
40002,40026c42025,42032
< #line 1842
<   schedule();
< #line 1842
<   goto ldv_51291;
<   ldv_51290: 
< #line 1842
<   finish_wait(& mdev->misc_wait, & __wait);
<   ldv_51288: ;
< #line 1845
<   return;
< }
< }
< #line 1890 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static void __drbd_chk_io_error____3(struct drbd_conf *mdev , enum drbd_force_detach_flags df ,
<                                               char const   *where ) 
< { 
<   int tmp ;
<   union drbd_state __ns ;
<   union drbd_state __ns___0 ;
< 
<   {
< #line 1894
<   switch ((mdev->ldev)->dc.on_io_error) {
<   case 0: ;
< #line 1896
---
> #line 1682
>   ep = (enum drbd_io_error_p )_________p1->on_io_error;
> #line 1683
>   rcu_read_unlock___5();
> #line 1684
>   switch ((unsigned int )ep) {
>   case 0U: ;
> #line 1686
40028,40032c42034,42038
< #line 1897
<     tmp = ___ratelimit(& drbd_ratelimit_state, "__drbd_chk_io_error_");
< #line 1897
<     if (tmp != 0) {
< #line 1898
---
> #line 1687
>     tmp___1 = ___ratelimit(& drbd_ratelimit_state, "__drbd_chk_io_error_");
> #line 1687
>     if (tmp___1 != 0) {
> #line 1688
40038,40044c42044,42050
< #line 1899
<     if ((int )mdev->state.ldv_39979.disk > 4) {
< #line 1900
<       __ns.i = mdev->state.i;
< #line 1900
<       __ns.ldv_39979.disk = 4U;
< #line 1900
---
> #line 1689
>     if ((int )mdev->state.ldv_49522.disk > 4) {
> #line 1690
>       __ns = drbd_read_state(mdev);
> #line 1690
>       __ns.ldv_40024.disk = 4U;
> #line 1690
40049,40050c42055,42056
< #line 1901
<     goto ldv_51321;
---
> #line 1691
>     goto ldv_51849;
40054,40058c42060,42064
<   case 2: ;
<   case 1: 
< #line 1926
<   drbd_set_flag(mdev, WAS_IO_ERROR);
< #line 1927
---
>   case 2U: ;
>   case 1U: 
> #line 1716
>   set_bit(12U, (unsigned long volatile   *)(& mdev->flags));
> #line 1717
40060,40061c42066,42067
< #line 1928
<     drbd_set_flag(mdev, WAS_READ_ERROR);
---
> #line 1718
>     set_bit(13U, (unsigned long volatile   *)(& mdev->flags));
40065c42071
< #line 1929
---
> #line 1719
40067,40068c42073,42074
< #line 1930
<     drbd_set_flag(mdev, FORCE_DETACH);
---
> #line 1720
>     set_bit(14U, (unsigned long volatile   *)(& mdev->flags));
40072,40078c42078,42084
< #line 1931
<   if ((int )mdev->state.ldv_39979.disk > 2) {
< #line 1932
<     __ns___0.i = mdev->state.i;
< #line 1932
<     __ns___0.ldv_39979.disk = 2U;
< #line 1932
---
> #line 1721
>   if ((int )mdev->state.ldv_49522.disk > 2) {
> #line 1722
>     __ns___0 = drbd_read_state(mdev);
> #line 1722
>     __ns___0.ldv_40024.disk = 2U;
> #line 1722
40080c42086
< #line 1933
---
> #line 1723
40086,40087c42092,42093
< #line 1936
<   goto ldv_51321;
---
> #line 1726
>   goto ldv_51849;
40089,40090c42095,42096
<   ldv_51321: ;
< #line 1939
---
>   ldv_51849: ;
> #line 1729
40094c42100
< #line 1949 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1739 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
40102c42108
< #line 1952
---
> #line 1742
40104,40106c42110,42112
< #line 1954
<     tmp = spinlock_check(& mdev->req_lock);
< #line 1954
---
> #line 1744
>     tmp = spinlock_check(& (mdev->tconn)->req_lock);
> #line 1744
40108c42114
< #line 1955
---
> #line 1745
40110,40111c42116,42117
< #line 1956
<     spin_unlock_irqrestore(& mdev->req_lock, flags);
---
> #line 1746
>     spin_unlock_irqrestore(& (mdev->tconn)->req_lock, flags);
40115c42121
< #line 1958
---
> #line 1748
40119c42125
< #line 2011 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1818 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
40122a42129,42133
>   int meta_dev_idx ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
40125,40126c42136,42137
<   sector_t tmp___0 ;
<   sector_t tmp___1 ;
---
>   sector_t tmp___2 ;
>   sector_t tmp___3 ;
40129c42140
<   sector_t tmp___2 ;
---
>   sector_t tmp___4 ;
40134c42145
<   sector_t tmp___3 ;
---
>   sector_t tmp___5 ;
40137,40138c42148,42176
< #line 2014
<   switch (bdev->dc.meta_dev_idx) {
---
> #line 1823
>   rcu_read_lock___5();
> #line 1824
>   _________p1 = *((struct disk_conf * volatile  *)(& bdev->disk_conf));
> #line 1824
>   tmp = debug_lockdep_rcu_enabled();
> #line 1824
>   if (tmp != 0 && ! __warned) {
> #line 1824
>     tmp___0 = rcu_read_lock_held();
> #line 1824
>     if (tmp___0 == 0 && 1) {
> #line 1824
>       __warned = 1;
> #line 1824
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h",
>                              1824, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1824
>   meta_dev_idx = _________p1->meta_dev_idx;
> #line 1825
>   rcu_read_unlock___5();
> #line 1827
>   switch (meta_dev_idx) {
40141,40145c42179,42183
< #line 2018
<   tmp___1 = drbd_get_capacity(bdev->backing_bdev);
< #line 2018
<   if (tmp___1 != 0UL) {
< #line 2018
---
> #line 1831
>   tmp___3 = drbd_get_capacity(bdev->backing_bdev);
> #line 1831
>   if (tmp___3 != 0UL) {
> #line 1831
40147,40151c42185,42189
< #line 2018
<     tmp___0 = drbd_md_first_sector(bdev);
< #line 2018
<     __min2 = tmp___0;
< #line 2018
---
> #line 1831
>     tmp___2 = _drbd_md_first_sector(meta_dev_idx, bdev);
> #line 1831
>     __min2 = tmp___2;
> #line 1831
40154c42192
< #line 2018
---
> #line 1831
40157,40158c42195,42196
< #line 2021
<   goto ldv_51362;
---
> #line 1834
>   goto ldv_51906;
40160c42198
< #line 2023
---
> #line 1836
40162,40166c42200,42204
< #line 2023
<   tmp___2 = drbd_get_capacity(bdev->backing_bdev);
< #line 2023
<   __min2___0 = tmp___2;
< #line 2023
---
> #line 1836
>   tmp___4 = drbd_get_capacity(bdev->backing_bdev);
> #line 1836
>   __min2___0 = tmp___4;
> #line 1836
40168c42206
< #line 2026
---
> #line 1839
40170c42208
< #line 2026
---
> #line 1839
40172c42210
< #line 2026
---
> #line 1839
40174,40175c42212,42213
< #line 2029
<   goto ldv_51362;
---
> #line 1842
>   goto ldv_51906;
40177c42215
< #line 2031
---
> #line 1844
40179,40183c42217,42221
< #line 2031
<   tmp___3 = drbd_get_capacity(bdev->backing_bdev);
< #line 2031
<   __min2___2 = tmp___3;
< #line 2031
---
> #line 1844
>   tmp___5 = drbd_get_capacity(bdev->backing_bdev);
> #line 1844
>   __min2___2 = tmp___5;
> #line 1844
40186,40187c42224,42225
<   ldv_51362: ;
< #line 2034
---
>   ldv_51906: ;
> #line 1847
40191c42229
< #line 2042 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 1855 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
40193a42232,42234
>   int meta_dev_idx ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
40195c42236,42238
<   sector_t tmp___0 ;
---
>   int tmp___0 ;
>   int tmp___1 ;
>   sector_t tmp___2 ;
40198,40199c42241,42269
< #line 2045
<   switch (bdev->dc.meta_dev_idx) {
---
> #line 1860
>   rcu_read_lock___5();
> #line 1861
>   _________p1 = *((struct disk_conf * volatile  *)(& bdev->disk_conf));
> #line 1861
>   tmp = debug_lockdep_rcu_enabled();
> #line 1861
>   if (tmp != 0 && ! __warned) {
> #line 1861
>     tmp___0 = rcu_read_lock_held();
> #line 1861
>     if (tmp___0 == 0 && 1) {
> #line 1861
>       __warned = 1;
> #line 1861
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h",
>                              1861, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1861
>   meta_dev_idx = _________p1->meta_dev_idx;
> #line 1862
>   rcu_read_unlock___5();
> #line 1864
>   switch (meta_dev_idx) {
40201,40202c42271,42272
< #line 2047
<   return ((unsigned long )bdev->dc.meta_dev_idx * 262144UL);
---
> #line 1866
>   return ((unsigned long )meta_dev_idx * 262144UL);
40205c42275
< #line 2053
---
> #line 1872
40207,40211c42277,42281
< #line 2054
<     tmp = ___ratelimit(& drbd_ratelimit_state, "drbd_md_ss__");
< #line 2054
<     if (tmp != 0) {
< #line 2055
---
> #line 1873
>     tmp___1 = ___ratelimit(& drbd_ratelimit_state, "drbd_md_ss__");
> #line 1873
>     if (tmp___1 != 0) {
> #line 1874
40213c42283
< #line 2056
---
> #line 1875
40218c42288
< #line 2058
---
> #line 1877
40223,40226c42293,42296
< #line 2060
<   tmp___0 = drbd_get_capacity(bdev->backing_bdev);
< #line 2060
<   return ((sector_t )(((unsigned long long )tmp___0 & 0xfffffffffffffff8ULL) - 8ULL));
---
> #line 1879
>   tmp___2 = drbd_get_capacity(bdev->backing_bdev);
> #line 1879
>   return ((sector_t )(((unsigned long long )tmp___2 & 0xfffffffffffffff8ULL) - 8ULL));
40228c42298
< #line 2063
---
> #line 1882
40233,40234c42303,42308
< #line 2125 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static void drbd_thread_stop_nowait(struct drbd_thread *thi ) 
---
> #line 1929
> int drbd_send_state_req(struct drbd_conf *mdev , union drbd_state mask , union drbd_state val ) ;
> #line 1930
> int conn_send_state_req(struct drbd_tconn *tconn , union drbd_state mask , union drbd_state val ) ;
> #line 2133 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static int drbd_get_max_buffers___0(struct drbd_conf *mdev ) 
40236c42310,42315
< 
---
>   struct net_conf *nc ;
>   int mxb ;
>   struct net_conf *_________p1 ;
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
40239,40247c42318,42335
< #line 2127
<   _drbd_thread_stop(thi, 0, 0);
< #line 2128
<   return;
< }
< }
< #line 2130 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static void drbd_thread_restart_nowait(struct drbd_thread *thi ) 
< { 
---
> #line 2138
>   rcu_read_lock___5();
> #line 2139
>   _________p1 = *((struct net_conf * volatile  *)(& (mdev->tconn)->net_conf));
> #line 2139
>   tmp = debug_lockdep_rcu_enabled();
> #line 2139
>   if (tmp != 0 && ! __warned) {
> #line 2139
>     tmp___0 = rcu_read_lock_held();
> #line 2139
>     if (tmp___0 == 0 && 1) {
> #line 2139
>       __warned = 1;
> #line 2139
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h",
>                              2139, "suspicious rcu_dereference_check() usage");
>     } else {
40248a42337,42338
>     }
>   } else {
40250,40254c42340,42348
<   {
< #line 2132
<   _drbd_thread_stop(thi, 1, 0);
< #line 2133
<   return;
---
>   }
> #line 2139
>   nc = _________p1;
> #line 2140
>   mxb = (unsigned long )nc != (unsigned long )((struct net_conf *)0) ? (int )nc->max_buffers : 1000000;
> #line 2141
>   rcu_read_unlock___5();
> #line 2143
>   return (mxb);
40257c42351
< #line 2347 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 2146 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
40260c42354
<   union drbd_state s ;
---
>   union drbd_dev_state s ;
40263c42357
< #line 2349
---
> #line 2148
40265,40266c42359,42360
< #line 2354
<   switch ((unsigned int )s.ldv_39979.conn) {
---
> #line 2153
>   switch ((unsigned int )s.ldv_49522.conn) {
40288,40289c42382,42383
< #line 2379
<   goto ldv_51493;
---
> #line 2178
>   goto ldv_52078;
40291,40293c42385,42387
< #line 2383
<   if (mdev->agreed_pro_version <= 95) {
< #line 2384
---
> #line 2182
>   if ((mdev->tconn)->agreed_pro_version <= 95) {
> #line 2183
40298,40299c42392,42393
< #line 2385
<   goto ldv_51493;
---
> #line 2184
>   goto ldv_52078;
40303c42397
< #line 2392
---
> #line 2191
40306,40308c42400,42402
<   ldv_51493: ;
< #line 2395
<   switch ((unsigned int )s.ldv_39979.disk) {
---
>   ldv_52078: ;
> #line 2194
>   switch ((unsigned int )s.ldv_49522.disk) {
40315,40316c42409,42410
< #line 2403
<   goto ldv_51504;
---
> #line 2202
>   goto ldv_52089;
40321c42415
< #line 2411
---
> #line 2210
40324,40325c42418,42419
<   ldv_51504: ;
< #line 2414
---
>   ldv_52089: ;
> #line 2213
40329c42423
< #line 2422 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 2223 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
40341,40343c42435,42437
< #line 2424
<   tmp = drbd_get_max_buffers(mdev);
< #line 2424
---
> #line 2225
>   tmp = drbd_get_max_buffers___0(mdev);
> #line 2225
40345,40347c42439,42441
< #line 2426
<   tmp___0 = is_susp(mdev->state);
< #line 2426
---
> #line 2227
>   tmp___0 = drbd_suspended(mdev);
> #line 2227
40349c42443
< #line 2427
---
> #line 2228
40354,40356c42448,42450
< #line 2428
<   tmp___1 = drbd_test_flag(mdev, SUSPEND_IO);
< #line 2428
---
> #line 2229
>   tmp___1 = constant_test_bit(8U, (unsigned long const volatile   *)(& mdev->flags));
> #line 2229
40358c42452
< #line 2429
---
> #line 2230
40363c42457
< #line 2436
---
> #line 2237
40365c42459
< #line 2436
---
> #line 2237
40367c42461
< #line 2437
---
> #line 2238
40372c42466
< #line 2441
---
> #line 2242
40374c42468
< #line 2441
---
> #line 2242
40376c42470
< #line 2442
---
> #line 2243
40381,40383c42475,42477
< #line 2443
<   tmp___4 = drbd_test_flag(mdev, BITMAP_IO);
< #line 2443
---
> #line 2244
>   tmp___4 = constant_test_bit(9U, (unsigned long const volatile   *)(& mdev->flags));
> #line 2244
40385c42479
< #line 2444
---
> #line 2245
40390c42484
< #line 2445
---
> #line 2246
40394,40395c42488,42489
< #line 2527 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< __inline static void drbd_update_congested(struct drbd_conf *mdev ) 
---
> #line 2249 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static bool inc_ap_bio_cond___0(struct drbd_conf *mdev ) 
40397c42491
<   struct sock *sk ;
---
>   bool rv ;
40400,40405c42494,42503
< #line 2529
<   sk = (mdev->data.socket)->sk;
< #line 2530
<   if (sk->sk_wmem_queued > (sk->sk_sndbuf * 4) / 5) {
< #line 2531
<     drbd_set_flag(mdev, NET_CONGESTED);
---
> #line 2251
>   rv = 0;
> #line 2253
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 2254
>   rv = may_inc_ap_bio___0(mdev);
> #line 2255
>   if ((int )rv) {
> #line 2256
>     atomic_inc(& mdev->ap_bio_cnt);
40409c42507,42623
< #line 2532
---
> #line 2257
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 2259
>   return (rv);
> }
> }
> #line 2262 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static void inc_ap_bio___0(struct drbd_conf *mdev ) 
> { 
>   bool tmp ;
>   wait_queue_t __wait ;
>   struct task_struct *tmp___0 ;
>   bool tmp___1 ;
> 
>   {
> #line 2272
>   tmp = inc_ap_bio_cond___0(mdev);
> #line 2272
>   if ((int )tmp) {
> #line 2272
>     goto ldv_52109;
>   } else {
> 
>   }
> #line 2272
>   tmp___0 = get_current();
> #line 2272
>   __wait.flags = 0U;
> #line 2272
>   __wait.private = (void *)tmp___0;
> #line 2272
>   __wait.func = & autoremove_wake_function;
> #line 2272
>   __wait.task_list.next = & __wait.task_list;
> #line 2272
>   __wait.task_list.prev = & __wait.task_list;
>   ldv_52112: 
> #line 2272
>   prepare_to_wait(& mdev->misc_wait, & __wait, 2);
> #line 2272
>   tmp___1 = inc_ap_bio_cond___0(mdev);
> #line 2272
>   if ((int )tmp___1) {
> #line 2272
>     goto ldv_52111;
>   } else {
> 
>   }
> #line 2272
>   schedule();
> #line 2272
>   goto ldv_52112;
>   ldv_52111: 
> #line 2272
>   finish_wait(& mdev->misc_wait, & __wait);
>   ldv_52109: ;
> #line 2275
>   return;
> }
> }
> #line 2275 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static void dec_ap_bio___0(struct drbd_conf *mdev ) 
> { 
>   int mxb ;
>   int tmp ;
>   int ap_bio ;
>   int tmp___0 ;
>   int tmp___1 ;
>   int tmp___2 ;
> 
>   {
> #line 2277
>   tmp = drbd_get_max_buffers___0(mdev);
> #line 2277
>   mxb = tmp;
> #line 2278
>   tmp___0 = atomic_sub_return(1, & mdev->ap_bio_cnt);
> #line 2278
>   ap_bio = tmp___0;
> #line 2280
>   if (ap_bio < 0) {
> #line 2280
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( ap_bio >= 0 ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h",
>             2280);
>   } else {
> 
>   }
> #line 2282
>   if (ap_bio == 0) {
> #line 2282
>     tmp___2 = constant_test_bit(9U, (unsigned long const volatile   *)(& mdev->flags));
> #line 2282
>     if (tmp___2 != 0) {
> #line 2283
>       tmp___1 = test_and_set_bit(10, (unsigned long volatile   *)(& mdev->flags));
> #line 2283
>       if (tmp___1 == 0) {
> #line 2284
>         drbd_queue_work(& (mdev->tconn)->sender_work, & mdev->bm_io_work.w);
>       } else {
> 
>       }
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 2290
>   if (ap_bio < mxb) {
> #line 2291
>     __wake_up(& mdev->misc_wait, 3U, 1, 0);
>   } else {
> 
>   }
> #line 2292
40413c42627
< #line 2534 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
> #line 2307 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
40419c42633
< #line 2541
---
> #line 2314
40423,40424c42637,42640
< #line 331 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"
< void tl_restart(struct drbd_conf *mdev , enum drbd_req_event what ) ;
---
> #line 278 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_req.h"
> void tl_restart(struct drbd_tconn *tconn , enum drbd_req_event what ) ;
> #line 279
> void _tl_restart(struct drbd_tconn *tconn , enum drbd_req_event what ) ;
40668,40669c42884,42885
<   goto ldv_51758;
<   ldv_51757: 
---
>   goto ldv_52300;
>   ldv_52299: 
40678c42894
<   ldv_51758: ;
---
>   ldv_52300: ;
40682c42898
<     goto ldv_51757;
---
>     goto ldv_52299;
40720c42936
< #line 139 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 147 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
40725c42941
< #line 144
---
> #line 152
40727c42943
< #line 145
---
> #line 153
40729c42945
< #line 146
---
> #line 154
40731,40738c42947,42949
< #line 147
< static int w_after_state_ch(struct drbd_conf *mdev , struct drbd_work *w , int unused ) ;
< #line 148
< static void after_state_ch(struct drbd_conf *mdev , union drbd_state os , union drbd_state ns ,
<                            enum chg_state_flags flags ) ;
< #line 150
< static int w_md_sync(struct drbd_conf *mdev , struct drbd_work *w , int unused ) ;
< #line 151
---
> #line 155
> static int w_md_sync(struct drbd_work *w , int unused ) ;
> #line 156
40740,40746c42951,42955
< #line 152
< static int w_bitmap_io(struct drbd_conf *mdev , struct drbd_work *w , int unused ) ;
< #line 153
< static int w_go_diskless(struct drbd_conf *mdev , struct drbd_work *w , int unused ) ;
< #line 154
< static void _tl_clear(struct drbd_conf *mdev ) ;
< #line 179 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 157
> static int w_bitmap_io(struct drbd_work *w , int unused ) ;
> #line 158
> static int w_go_diskless(struct drbd_work *w , int unused ) ;
> #line 182 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
40748c42957
< #line 192 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 195 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
40750,40752c42959
< #line 195 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< unsigned int cn_idx  =    8U;
< #line 200 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 202 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
40754c42961
< #line 200
---
> #line 202
40759c42966
< #line 229 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 232 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
40763c42970
< #line 231 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 234 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
40765c42972
< #line 231
---
> #line 234
40767c42974
< #line 237 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 240 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
40769a42977
>   struct bio *bio ;
40771d42978
<   struct bio *tmp___0 ;
40774c42981
< #line 239
---
> #line 244
40776c42983
< #line 240
---
> #line 245
40778c42985
< #line 240
---
> #line 245
40783,40786c42990,43000
< #line 242
<   tmp___0 = bio_alloc_bioset(gfp_mask, 1, drbd_md_io_bio_set);
< #line 242
<   return (tmp___0);
---
> #line 247
>   bio = bio_alloc_bioset(gfp_mask, 1, drbd_md_io_bio_set);
> #line 248
>   if ((unsigned long )bio == (unsigned long )((struct bio *)0)) {
> #line 249
>     return (0);
>   } else {
> 
>   }
> #line 250
>   return (bio);
40789,40790c43003,43004
< #line 274 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static int tl_init(struct drbd_conf *mdev ) 
---
> #line 282 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> void tl_release(struct drbd_tconn *tconn , unsigned int barrier_nr , unsigned int set_size ) 
40792,40793c43006,43018
<   struct drbd_tl_epoch *b ;
<   void *tmp ;
---
>   struct drbd_request *r ;
>   struct drbd_request *req ;
>   int expect_epoch ;
>   int expect_size ;
>   struct list_head  const  *__mptr ;
>   unsigned int s ;
>   struct list_head  const  *__mptr___0 ;
>   struct list_head  const  *__mptr___1 ;
>   struct list_head  const  *__mptr___2 ;
>   struct list_head  const  *__mptr___3 ;
>   struct list_head  const  *__mptr___4 ;
>   union drbd_state val ;
>   union drbd_state mask ;
40796,40814d43020
< #line 279
<   tmp = kmalloc(56UL, 208U);
< #line 279
<   b = (struct drbd_tl_epoch *)tmp;
< #line 280
<   if ((unsigned long )b == (unsigned long )((struct drbd_tl_epoch *)0)) {
< #line 281
<     return (0);
<   } else {
< 
<   }
< #line 282
<   INIT_LIST_HEAD(& b->requests);
< #line 283
<   INIT_LIST_HEAD(& b->w.list);
< #line 284
<   b->next = 0;
< #line 285
<   b->br_number = 4711U;
40816c43022
<   b->n_writes = 0;
---
>   req = 0;
40818,40820c43024,43026
<   b->w.cb = 0;
< #line 289
<   mdev->oldest_tle = b;
---
>   expect_epoch = 0;
> #line 288
>   expect_size = 0;
40822,40826c43028,43030
<   mdev->newest_tle = b;
< #line 291
<   INIT_LIST_HEAD(& mdev->out_of_sequence_requests);
< #line 292
<   INIT_LIST_HEAD(& mdev->barrier_acked_requests);
---
>   spin_lock_irq(& tconn->req_lock);
> #line 294
>   __mptr = (struct list_head  const  *)tconn->transfer_log.next;
40828c43032,43035
<   mdev->tl_hash = 0;
---
>   r = (struct drbd_request *)__mptr + 0xffffffffffffff98UL;
> #line 294
>   goto ldv_52496;
>   ldv_52495: 
40830c43037,43039
<   mdev->tl_hash_s = 0U;
---
>   s = r->rq_state;
> #line 296
>   if ((unsigned long )req == (unsigned long )((struct drbd_request *)0)) {
40832,40838c43041,43044
<   return (1);
< }
< }
< #line 300 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static void tl_cleanup(struct drbd_conf *mdev ) 
< { 
<   int tmp ;
---
>     if (((unsigned long )s & 2048UL) == 0UL) {
> #line 298
>       goto ldv_52493;
>     } else {
40840,40842c43046,43055
<   {
< #line 302
<   if ((unsigned long )mdev->oldest_tle != (unsigned long )mdev->newest_tle) {
---
>     }
> #line 299
>     if (((unsigned long )s & 1008UL) == 0UL) {
> #line 300
>       goto ldv_52493;
>     } else {
> 
>     }
> #line 301
>     if (((unsigned long )s & 128UL) != 0UL) {
40844,40847c43057,43058
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mdev->oldest_tle == mdev->newest_tle ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             302);
<   } else {
---
>       goto ldv_52493;
>     } else {
40849,40853c43060
<   }
< #line 303
<   tmp = list_empty((struct list_head  const  *)(& mdev->out_of_sequence_requests));
< #line 303
<   if (tmp == 0) {
---
>     }
40855,40860c43062
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( list_empty(&mdev->out_of_sequence_requests) ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             303);
<   } else {
< 
<   }
---
>     req = r;
40862c43064
<   kfree((void const   *)mdev->oldest_tle);
---
>     expect_epoch = (int )req->epoch;
40864,40866c43066,43067
<   mdev->oldest_tle = 0;
< #line 306
<   kfree((void const   *)mdev->unused_spare_tle);
---
>     expect_size = expect_size + 1;
>   } else {
40868c43069
<   mdev->unused_spare_tle = 0;
---
>     if (r->epoch != (unsigned int )expect_epoch) {
40870c43071,43074
<   kfree((void const   *)mdev->tl_hash);
---
>       goto ldv_52494;
>     } else {
> 
>     }
40872c43076
<   mdev->tl_hash = 0;
---
>     if (((unsigned long )s & 2048UL) == 0UL) {
40874,40882c43078,43079
<   mdev->tl_hash_s = 0U;
< #line 311
<   return;
< }
< }
< #line 320 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void _tl_add_barrier(struct drbd_conf *mdev , struct drbd_tl_epoch *new ) 
< { 
<   struct drbd_tl_epoch *newest_before ;
---
>       goto ldv_52493;
>     } else {
40884,40904c43081,43094
<   {
< #line 324
<   INIT_LIST_HEAD(& new->requests);
< #line 325
<   INIT_LIST_HEAD(& new->w.list);
< #line 326
<   new->w.cb = 0;
< #line 327
<   new->next = 0;
< #line 328
<   new->n_writes = 0;
< #line 330
<   newest_before = mdev->newest_tle;
< #line 331
<   new->br_number = newest_before->br_number + 1U;
< #line 332
<   if ((unsigned long )mdev->newest_tle != (unsigned long )new) {
< #line 333
<     (mdev->newest_tle)->next = new;
< #line 334
<     mdev->newest_tle = new;
---
>     }
> #line 313
>     expect_size = expect_size + 1;
>   }
>   ldv_52493: 
> #line 294
>   __mptr___0 = (struct list_head  const  *)r->tl_requests.next;
> #line 294
>   r = (struct drbd_request *)__mptr___0 + 0xffffffffffffff98UL;
>   ldv_52496: ;
> #line 294
>   if ((unsigned long )(& r->tl_requests) != (unsigned long )(& tconn->transfer_log)) {
> #line 295
>     goto ldv_52495;
40908,40938c43098,43104
< #line 336
<   return;
< }
< }
< #line 348 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void tl_release(struct drbd_conf *mdev , unsigned int barrier_nr , unsigned int set_size ) 
< { 
<   struct drbd_tl_epoch *b ;
<   struct drbd_tl_epoch *nob ;
<   struct list_head *le ;
<   struct list_head *tle ;
<   struct drbd_request *r ;
<   struct list_head  const  *__mptr ;
<   int tmp ;
<   int tmp___0 ;
<   int tmp___1 ;
<   int tmp___2 ;
<   union drbd_state val ;
<   union drbd_state mask ;
< 
<   {
< #line 355
<   spin_lock_irq(& mdev->req_lock);
< #line 357
<   b = mdev->oldest_tle;
< #line 360
<   if ((unsigned long )b == (unsigned long )((struct drbd_tl_epoch *)0)) {
< #line 361
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "BAD! BarrierAck #%u received, but no epoch in tl!?\n",
<             barrier_nr);
< #line 363
---
>   ldv_52494: ;
> #line 318
>   if ((unsigned long )req == (unsigned long )((struct drbd_request *)0)) {
> #line 319
>     printk("\vd-con %s: BAD! BarrierAck #%u received, but no epoch in tl!?\n", tconn->name,
>            barrier_nr);
> #line 321
40943,40948c43109,43114
< #line 365
<   if (b->br_number != barrier_nr) {
< #line 366
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "BAD! BarrierAck #%u received, expected #%u!\n",
<             barrier_nr, b->br_number);
< #line 368
---
> #line 323
>   if ((unsigned int )expect_epoch != barrier_nr) {
> #line 324
>     printk("\vd-con %s: BAD! BarrierAck #%u received, expected #%u!\n", tconn->name,
>            barrier_nr, expect_epoch);
> #line 326
40953,40958c43119,43124
< #line 370
<   if ((unsigned int )b->n_writes != set_size) {
< #line 371
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "BAD! BarrierAck #%u received with n_writes=%u, expected n_writes=%u!\n",
<             barrier_nr, set_size, b->n_writes);
< #line 373
---
> #line 329
>   if ((unsigned int )expect_size != set_size) {
> #line 330
>     printk("\vd-con %s: BAD! BarrierAck #%u received with n_writes=%u, expected n_writes=%u!\n",
>            tconn->name, barrier_nr, set_size, expect_size);
> #line 332
40963,40984c43129,43139
< #line 377
<   le = b->requests.next;
< #line 377
<   tle = le->next;
< #line 377
<   goto ldv_51993;
<   ldv_51992: 
< #line 378
<   __mptr = (struct list_head  const  *)le;
< #line 378
<   r = (struct drbd_request *)__mptr + 0xffffffffffffffb8UL;
< #line 379
<   _req_mod(r, barrier_acked);
< #line 377
<   le = tle;
< #line 377
<   tle = le->next;
<   ldv_51993: ;
< #line 377
<   if ((unsigned long )(& b->requests) != (unsigned long )le) {
< #line 378
<     goto ldv_51992;
---
> #line 339
>   __mptr___1 = (struct list_head  const  *)tconn->transfer_log.next;
> #line 339
>   req = (struct drbd_request *)__mptr___1 + 0xffffffffffffff98UL;
> #line 339
>   goto ldv_52504;
>   ldv_52503: ;
> #line 340
>   if (req->epoch == (unsigned int )expect_epoch) {
> #line 341
>     goto ldv_52502;
40988,41004c43143,43151
< #line 394
<   list_splice_init(& b->requests, & mdev->barrier_acked_requests);
< #line 396
<   nob = b->next;
< #line 397
<   tmp = drbd_test_and_clear_flag(mdev, CREATE_BARRIER);
< #line 397
<   if (tmp != 0) {
< #line 398
<     _tl_add_barrier(mdev, b);
< #line 399
<     if ((unsigned long )nob != (unsigned long )((struct drbd_tl_epoch *)0)) {
< #line 400
<       mdev->oldest_tle = nob;
<     } else {
< 
<     }
---
> #line 339
>   __mptr___2 = (struct list_head  const  *)req->tl_requests.next;
> #line 339
>   req = (struct drbd_request *)__mptr___2 + 0xffffffffffffff98UL;
>   ldv_52504: ;
> #line 339
>   if ((unsigned long )(& req->tl_requests) != (unsigned long )(& tconn->transfer_log)) {
> #line 340
>     goto ldv_52503;
41006,41012d43152
< #line 404
<     if ((unsigned long )nob == (unsigned long )((struct drbd_tl_epoch *)0)) {
< #line 404
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( nob != NULL ) in %s:%d\n",
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<               404);
<     } else {
41014,41018d43153
<     }
< #line 405
<     mdev->oldest_tle = nob;
< #line 406
<     kfree((void const   *)b);
41020,41027c43155,43166
< #line 409
<   spin_unlock_irq(& mdev->req_lock);
< #line 410
<   tmp___0 = atomic_dec_and_test(& mdev->ap_pending_cnt);
< #line 410
<   if (tmp___0 != 0) {
< #line 410
<     __wake_up(& mdev->misc_wait, 3U, 1, 0);
---
>   ldv_52502: 
> #line 342
>   __mptr___3 = (struct list_head  const  *)req->tl_requests.next;
> #line 342
>   r = (struct drbd_request *)__mptr___3 + 0xffffffffffffff98UL;
> #line 342
>   goto ldv_52511;
>   ldv_52510: ;
> #line 343
>   if (req->epoch != (unsigned int )expect_epoch) {
> #line 344
>     goto ldv_52509;
41031,41039c43170,43182
< #line 410
<   tmp___2 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
< #line 410
<   if (tmp___2 < 0) {
< #line 410
<     tmp___1 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
< #line 410
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: ap_pending_cnt = %d < 0 !\n",
<             "tl_release", 410, tmp___1);
---
> #line 345
>   _req_mod(req, BARRIER_ACKED);
> #line 342
>   req = r;
> #line 342
>   __mptr___4 = (struct list_head  const  *)r->tl_requests.next;
> #line 342
>   r = (struct drbd_request *)__mptr___4 + 0xffffffffffffff98UL;
>   ldv_52511: ;
> #line 342
>   if ((unsigned long )(& req->tl_requests) != (unsigned long )(& tconn->transfer_log)) {
> #line 343
>     goto ldv_52510;
41043c43186,43189
< #line 412
---
>   ldv_52509: 
> #line 347
>   spin_unlock_irq(& tconn->req_lock);
> #line 349
41046,41048c43192,43194
< #line 415
<   spin_unlock_irq(& mdev->req_lock);
< #line 416
---
> #line 352
>   spin_unlock_irq(& tconn->req_lock);
> #line 353
41050,41052c43196,43198
< #line 416
<   val.ldv_39979.conn = 6U;
< #line 416
---
> #line 353
>   val.ldv_40024.conn = 6U;
> #line 353
41054,41058c43200,43204
< #line 416
<   mask.ldv_39979.conn = 31U;
< #line 416
<   drbd_force_state(mdev, mask, val);
< #line 418
---
> #line 353
>   mask.ldv_40024.conn = 31U;
> #line 353
>   conn_request_state(tconn, mask, val, CS_HARD);
> #line 355
41062,41063c43208,43209
< #line 428 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static void _tl_restart(struct drbd_conf *mdev , enum drbd_req_event what ) 
---
> #line 366 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> void _tl_restart(struct drbd_tconn *tconn , enum drbd_req_event what ) 
41065,41070d43210
<   struct drbd_tl_epoch *b ;
<   struct drbd_tl_epoch *tmp ;
<   struct drbd_tl_epoch **pn ;
<   struct list_head *le ;
<   struct list_head *tle ;
<   struct list_head carry_reads ;
41072,41074c43212
<   int rv ;
<   int n_writes ;
<   int n_reads ;
---
>   struct drbd_request *r ;
41076,41078d43213
<   int tmp___0 ;
<   int tmp___1 ;
<   int tmp___2 ;
41079a43215
>   struct list_head  const  *__mptr___1 ;
41082,41151c43218,43241
< #line 435
<   b = mdev->oldest_tle;
< #line 436
<   pn = & mdev->oldest_tle;
< #line 437
<   goto ldv_52028;
<   ldv_52027: 
< #line 438
<   n_writes = 0;
< #line 439
<   n_reads = 0;
< #line 440
<   INIT_LIST_HEAD(& carry_reads);
< #line 441
<   le = b->requests.next;
< #line 441
<   tle = le->next;
< #line 441
<   goto ldv_52020;
<   ldv_52019: 
< #line 442
<   __mptr = (struct list_head  const  *)le;
< #line 442
<   req = (struct drbd_request *)__mptr + 0xffffffffffffffb8UL;
< #line 443
<   rv = _req_mod(req, what);
< #line 445
<   n_writes = (rv & 1) + n_writes;
< #line 446
<   n_reads = ((rv & 2) >> 1) + n_reads;
< #line 441
<   le = tle;
< #line 441
<   tle = le->next;
<   ldv_52020: ;
< #line 441
<   if ((unsigned long )(& b->requests) != (unsigned long )le) {
< #line 442
<     goto ldv_52019;
<   } else {
< 
<   }
< #line 448
<   tmp = b->next;
< #line 450
<   if (n_writes != 0) {
< #line 451
<     if ((unsigned int )what == 24U) {
< #line 452
<       b->n_writes = n_writes;
< #line 453
<       if ((unsigned long )b->w.cb == (unsigned long )((int (*)(struct drbd_conf * ,
<                                                                struct drbd_work * ,
<                                                                int  ))0)) {
< #line 454
<         b->w.cb = & w_send_barrier;
< #line 455
<         inc_ap_pending(mdev);
< #line 456
<         drbd_set_flag(mdev, CREATE_BARRIER);
<       } else {
< 
<       }
< #line 459
<       drbd_queue_work(& mdev->data.work, & b->w);
<     } else {
< 
<     }
< #line 461
<     pn = & b->next;
---
> #line 370
>   __mptr = (struct list_head  const  *)tconn->transfer_log.next;
> #line 370
>   req = (struct drbd_request *)__mptr + 0xffffffffffffff98UL;
> #line 370
>   __mptr___0 = (struct list_head  const  *)req->tl_requests.next;
> #line 370
>   r = (struct drbd_request *)__mptr___0 + 0xffffffffffffff98UL;
> #line 370
>   goto ldv_52529;
>   ldv_52528: 
> #line 371
>   _req_mod(req, what);
> #line 370
>   req = r;
> #line 370
>   __mptr___1 = (struct list_head  const  *)r->tl_requests.next;
> #line 370
>   r = (struct drbd_request *)__mptr___1 + 0xffffffffffffff98UL;
>   ldv_52529: ;
> #line 370
>   if ((unsigned long )(& req->tl_requests) != (unsigned long )(& tconn->transfer_log)) {
> #line 371
>     goto ldv_52528;
41153,41217d43242
< #line 463
<     if (n_reads != 0) {
< #line 464
<       list_add(& carry_reads, & b->requests);
<     } else {
< 
<     }
< #line 467
<     list_del(& b->requests);
< #line 472
<     if ((unsigned long )b->w.cb != (unsigned long )((int (*)(struct drbd_conf * ,
<                                                              struct drbd_work * ,
<                                                              int  ))0)) {
< #line 473
<       tmp___0 = atomic_dec_and_test(& mdev->ap_pending_cnt);
< #line 473
<       if (tmp___0 != 0) {
< #line 473
<         __wake_up(& mdev->misc_wait, 3U, 1, 0);
<       } else {
< 
<       }
< #line 473
<       tmp___2 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
< #line 473
<       if (tmp___2 < 0) {
< #line 473
<         tmp___1 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
< #line 473
<         dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "in %s:%d: ap_pending_cnt = %d < 0 !\n",
<                 "_tl_restart", 473, tmp___1);
<       } else {
< 
<       }
<     } else {
< 
<     }
< #line 475
<     if ((unsigned long )mdev->newest_tle == (unsigned long )b) {
< #line 477
<       if ((unsigned long )tmp != (unsigned long )((struct drbd_tl_epoch *)0)) {
< #line 477
<         dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( tmp == NULL ) in %s:%d\n",
<                 (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<                 477);
<       } else {
< 
<       }
< #line 478
<       INIT_LIST_HEAD(& b->requests);
< #line 479
<       list_splice((struct list_head  const  *)(& carry_reads), & b->requests);
< #line 480
<       INIT_LIST_HEAD(& b->w.list);
< #line 481
<       b->w.cb = 0;
< #line 482
<       b->br_number = random32();
< #line 483
<       b->n_writes = 0;
< #line 485
<       *pn = b;
< #line 486
<       goto ldv_52026;
<     } else {
41219,41223d43243
<     }
< #line 488
<     *pn = tmp;
< #line 489
<     kfree((void const   *)b);
41225,41234d43244
< #line 491
<   b = tmp;
< #line 492
<   list_splice((struct list_head  const  *)(& carry_reads), & b->requests);
<   ldv_52028: ;
< #line 437
<   if ((unsigned long )b != (unsigned long )((struct drbd_tl_epoch *)0)) {
< #line 438
<     goto ldv_52027;
<   } else {
41236,41260c43246,43252
<   }
<   ldv_52026: 
< #line 498
<   le = mdev->barrier_acked_requests.next;
< #line 498
<   tle = le->next;
< #line 498
<   goto ldv_52032;
<   ldv_52031: 
< #line 499
<   __mptr___0 = (struct list_head  const  *)le;
< #line 499
<   req = (struct drbd_request *)__mptr___0 + 0xffffffffffffffb8UL;
< #line 500
<   _req_mod(req, what);
< #line 498
<   le = tle;
< #line 498
<   tle = le->next;
<   ldv_52032: ;
< #line 498
<   if ((unsigned long )(& mdev->barrier_acked_requests) != (unsigned long )le) {
< #line 499
<     goto ldv_52031;
<   } else {
---
> #line 375
>   return;
> }
> }
> #line 374 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> void tl_restart(struct drbd_tconn *tconn , enum drbd_req_event what ) 
> { 
41262d43253
<   }
41264c43255,43262
< #line 503
---
>   {
> #line 376
>   spin_lock_irq(& tconn->req_lock);
> #line 377
>   _tl_restart(tconn, what);
> #line 378
>   spin_unlock_irq(& tconn->req_lock);
> #line 379
41268,41269c43266,43267
< #line 513 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void tl_clear(struct drbd_conf *mdev ) 
---
> #line 389 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> void tl_clear(struct drbd_tconn *tconn ) 
41274,41280c43272,43274
< #line 515
<   spin_lock_irq(& mdev->req_lock);
< #line 516
<   _tl_clear(mdev);
< #line 517
<   spin_unlock_irq(& mdev->req_lock);
< #line 518
---
> #line 391
>   tl_restart(tconn, CONNECTION_LOST_WHILE_PENDING);
> #line 392
41284,41285c43278,43279
< #line 520 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static void _tl_clear(struct drbd_conf *mdev ) 
---
> #line 398 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> void tl_abort_disk_io(struct drbd_conf *mdev ) 
41287,41288c43281,43282
<   struct list_head *le ;
<   struct list_head *tle ;
---
>   struct drbd_tconn *tconn ;
>   struct drbd_request *req ;
41290d43283
<   int tmp ;
41291a43285,43286
>   struct list_head  const  *__mptr___0 ;
>   struct list_head  const  *__mptr___1 ;
41294,41303c43289,43307
< #line 525
<   _tl_restart(mdev, connection_lost_while_pending);
< #line 528
<   tmp = list_empty((struct list_head  const  *)(& mdev->out_of_sequence_requests));
< #line 528
<   if (tmp == 0) {
< #line 528
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( list_empty(&mdev->out_of_sequence_requests) ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             528);
---
> #line 400
>   tconn = mdev->tconn;
> #line 403
>   spin_lock_irq(& tconn->req_lock);
> #line 404
>   __mptr = (struct list_head  const  *)tconn->transfer_log.next;
> #line 404
>   req = (struct drbd_request *)__mptr + 0xffffffffffffff98UL;
> #line 404
>   __mptr___0 = (struct list_head  const  *)req->tl_requests.next;
> #line 404
>   r = (struct drbd_request *)__mptr___0 + 0xffffffffffffff98UL;
> #line 404
>   goto ldv_52552;
>   ldv_52551: ;
> #line 405
>   if (((unsigned long )req->rq_state & 1UL) == 0UL) {
> #line 406
>     goto ldv_52550;
41307,41328c43311,43314
< #line 531
<   le = mdev->out_of_sequence_requests.next;
< #line 531
<   tle = le->next;
< #line 531
<   goto ldv_52046;
<   ldv_52045: 
< #line 532
<   __mptr = (struct list_head  const  *)le;
< #line 532
<   r = (struct drbd_request *)__mptr + 0xffffffffffffffb8UL;
< #line 535
<   _req_mod(r, connection_lost_while_pending);
< #line 531
<   le = tle;
< #line 531
<   tle = le->next;
<   ldv_52046: ;
< #line 531
<   if ((unsigned long )(& mdev->out_of_sequence_requests) != (unsigned long )le) {
< #line 532
<     goto ldv_52045;
---
> #line 407
>   if ((unsigned long )req->w.ldv_49807.mdev != (unsigned long )mdev) {
> #line 408
>     goto ldv_52550;
41332,41336c43318,43337
< #line 539
<   drbd_clear_flag(mdev, CREATE_BARRIER);
< #line 541
<   memset((void *)mdev->app_reads_hash, 0, 120UL);
< #line 542
---
> #line 409
>   _req_mod(req, ABORT_DISK_IO);
>   ldv_52550: 
> #line 404
>   req = r;
> #line 404
>   __mptr___1 = (struct list_head  const  *)r->tl_requests.next;
> #line 404
>   r = (struct drbd_request *)__mptr___1 + 0xffffffffffffff98UL;
>   ldv_52552: ;
> #line 404
>   if ((unsigned long )(& req->tl_requests) != (unsigned long )(& tconn->transfer_log)) {
> #line 405
>     goto ldv_52551;
>   } else {
> 
>   }
> #line 411
>   spin_unlock_irq(& tconn->req_lock);
> #line 412
41340,41341c43341,43342
< #line 545 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void tl_restart(struct drbd_conf *mdev , enum drbd_req_event what ) 
---
> #line 414 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> static int drbd_thread_setup(void *arg ) 
41343c43344,43350
< 
---
>   struct drbd_thread *thi ;
>   struct drbd_tconn *tconn ;
>   unsigned long flags ;
>   int retval ;
>   struct task_struct *tmp ;
>   raw_spinlock_t *tmp___0 ;
>   struct task_struct *tmp___1 ;
41346,43708c43353
< #line 547
<   spin_lock_irq(& mdev->req_lock);
< #line 548
<   _tl_restart(mdev, what);
< #line 549
<   spin_unlock_irq(& mdev->req_lock);
< #line 550
<   return;
< }
< }
< #line 556 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void tl_abort_disk_io(struct drbd_conf *mdev ) 
< { 
<   struct drbd_tl_epoch *b ;
<   struct list_head *le ;
<   struct list_head *tle ;
<   struct drbd_request *req ;
<   struct list_head  const  *__mptr ;
<   struct list_head  const  *__mptr___0 ;
< 
<   {
< #line 562
<   spin_lock_irq(& mdev->req_lock);
< #line 563
<   b = mdev->oldest_tle;
< #line 564
<   goto ldv_52066;
<   ldv_52065: 
< #line 565
<   le = b->requests.next;
< #line 565
<   tle = le->next;
< #line 565
<   goto ldv_52063;
<   ldv_52062: 
< #line 566
<   __mptr = (struct list_head  const  *)le;
< #line 566
<   req = (struct drbd_request *)__mptr + 0xffffffffffffffb8UL;
< #line 567
<   if ((req->rq_state & 1UL) == 0UL) {
< #line 568
<     goto ldv_52061;
<   } else {
< 
<   }
< #line 569
<   _req_mod(req, abort_disk_io);
<   ldv_52061: 
< #line 565
<   le = tle;
< #line 565
<   tle = le->next;
<   ldv_52063: ;
< #line 565
<   if ((unsigned long )(& b->requests) != (unsigned long )le) {
< #line 566
<     goto ldv_52062;
<   } else {
< 
<   }
< #line 571
<   b = b->next;
<   ldv_52066: ;
< #line 564
<   if ((unsigned long )b != (unsigned long )((struct drbd_tl_epoch *)0)) {
< #line 565
<     goto ldv_52065;
<   } else {
< 
<   }
< #line 574
<   le = mdev->barrier_acked_requests.next;
< #line 574
<   tle = le->next;
< #line 574
<   goto ldv_52072;
<   ldv_52071: 
< #line 575
<   __mptr___0 = (struct list_head  const  *)le;
< #line 575
<   req = (struct drbd_request *)__mptr___0 + 0xffffffffffffffb8UL;
< #line 576
<   if ((req->rq_state & 1UL) == 0UL) {
< #line 577
<     goto ldv_52070;
<   } else {
< 
<   }
< #line 578
<   _req_mod(req, abort_disk_io);
<   ldv_52070: 
< #line 574
<   le = tle;
< #line 574
<   tle = le->next;
<   ldv_52072: ;
< #line 574
<   if ((unsigned long )(& mdev->barrier_acked_requests) != (unsigned long )le) {
< #line 575
<     goto ldv_52071;
<   } else {
< 
<   }
< #line 581
<   spin_unlock_irq(& mdev->req_lock);
< #line 582
<   return;
< }
< }
< #line 590 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static int cl_wide_st_chg(struct drbd_conf *mdev , union drbd_state os , union drbd_state ns ) 
< { 
< 
< 
<   {
< #line 593
<   return (((((int )os.ldv_39979.conn > 9 && (int )ns.ldv_39979.conn > 9) && (((((unsigned int )*((unsigned char *)(& os) + 0UL) != 1U && (unsigned int )*((unsigned char *)(& ns) + 0UL) == 1U) || ((unsigned int )*((unsigned short *)(& os) + 0UL) != 192U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 192U)) || ((unsigned int )*((unsigned short *)(& os) + 0UL) != 176U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 176U)) || ((unsigned int )*((unsigned char *)(& os) + 1UL) != 4U && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 4U))) || ((int )os.ldv_39979.conn > 9 && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 16U)) || ((unsigned int )*((unsigned short *)(& os) + 0UL) == 160U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 288U));
< }
< }
< #line 603 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< enum drbd_state_rv drbd_change_state(struct drbd_conf *mdev , enum chg_state_flags f ,
<                                      union drbd_state mask , union drbd_state val ) 
< { 
<   unsigned long flags ;
<   union drbd_state os ;
<   union drbd_state ns ;
<   enum drbd_state_rv rv ;
<   raw_spinlock_t *tmp ;
< 
<   {
< #line 610
<   tmp = spinlock_check(& mdev->req_lock);
< #line 610
<   flags = _raw_spin_lock_irqsave(tmp);
< #line 611
<   os = mdev->state;
< #line 612
<   ns.i = (os.i & ~ mask.i) | val.i;
< #line 613
<   rv = _drbd_set_state(mdev, ns, f, 0);
< #line 614
<   ns = mdev->state;
< #line 615
<   spin_unlock_irqrestore(& mdev->req_lock, flags);
< #line 617
<   return (rv);
< }
< }
< #line 626 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void drbd_force_state(struct drbd_conf *mdev , union drbd_state mask , union drbd_state val ) 
< { 
< 
< 
<   {
< #line 629
<   drbd_change_state(mdev, CS_HARD, mask, val);
< #line 630
<   return;
< }
< }
< #line 632
< static enum drbd_state_rv is_valid_state(struct drbd_conf *mdev , union drbd_state ns ) ;
< #line 633
< static enum drbd_state_rv is_valid_state_transition(struct drbd_conf *mdev , union drbd_state ns ,
<                                                     union drbd_state os ) ;
< #line 644
< static union drbd_state sanitize_state(struct drbd_conf *mdev , union drbd_state os ,
<                                        union drbd_state ns , enum sanitize_state_warnings *warn ) ;
< #line 646
< int drbd_send_state_req(struct drbd_conf *mdev , union drbd_state mask , union drbd_state val ) ;
< #line 650 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static enum drbd_state_rv _req_st_cond(struct drbd_conf *mdev , union drbd_state mask ,
<                                        union drbd_state val ) 
< { 
<   union drbd_state os ;
<   union drbd_state ns ;
<   unsigned long flags ;
<   enum drbd_state_rv rv ;
<   int tmp ;
<   int tmp___0 ;
<   raw_spinlock_t *tmp___1 ;
<   int tmp___2 ;
< 
<   {
< #line 657
<   tmp = drbd_test_and_clear_flag(mdev, CL_ST_CHG_SUCCESS);
< #line 657
<   if (tmp != 0) {
< #line 658
<     return (SS_CW_SUCCESS);
<   } else {
< 
<   }
< #line 660
<   tmp___0 = drbd_test_and_clear_flag(mdev, CL_ST_CHG_FAIL);
< #line 660
<   if (tmp___0 != 0) {
< #line 661
<     return (SS_CW_FAILED_BY_PEER);
<   } else {
< 
<   }
< #line 663
<   rv = SS_UNKNOWN_ERROR;
< #line 664
<   tmp___1 = spinlock_check(& mdev->req_lock);
< #line 664
<   flags = _raw_spin_lock_irqsave(tmp___1);
< #line 665
<   os = mdev->state;
< #line 666
<   ns.i = (os.i & ~ mask.i) | val.i;
< #line 667
<   ns = sanitize_state(mdev, os, ns, 0);
< #line 669
<   tmp___2 = cl_wide_st_chg(mdev, os, ns);
< #line 669
<   if (tmp___2 == 0) {
< #line 670
<     rv = SS_CW_NO_NEED;
<   } else {
< 
<   }
< #line 671
<   if ((int )rv == 0) {
< #line 672
<     rv = is_valid_state(mdev, ns);
< #line 673
<     if ((int )rv == 1) {
< #line 674
<       rv = is_valid_state_transition(mdev, ns, os);
< #line 675
<       if ((int )rv == 1) {
< #line 676
<         rv = SS_UNKNOWN_ERROR;
<       } else {
< 
<       }
<     } else {
< 
<     }
<   } else {
< 
<   }
< #line 679
<   spin_unlock_irqrestore(& mdev->req_lock, flags);
< #line 681
<   return (rv);
< }
< }
< #line 695 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static enum drbd_state_rv drbd_req_state(struct drbd_conf *mdev , union drbd_state mask ,
<                                          union drbd_state val , enum chg_state_flags f ) 
< { 
<   struct completion done ;
<   unsigned long flags ;
<   union drbd_state os ;
<   union drbd_state ns ;
<   enum drbd_state_rv rv ;
<   raw_spinlock_t *tmp ;
<   int tmp___0 ;
<   wait_queue_t __wait ;
<   struct task_struct *tmp___1 ;
<   raw_spinlock_t *tmp___2 ;
<   int tmp___3 ;
<   struct task_struct *tmp___4 ;
< 
<   {
< #line 703
<   init_completion(& done);
< #line 705
<   if (((unsigned int )f & 8U) != 0U) {
< #line 706
<     ldv_mutex_lock_207(& mdev->state_mutex);
<   } else {
< 
<   }
< #line 708
<   tmp = spinlock_check(& mdev->req_lock);
< #line 708
<   flags = _raw_spin_lock_irqsave(tmp);
< #line 709
<   os = mdev->state;
< #line 710
<   ns.i = (os.i & ~ mask.i) | val.i;
< #line 711
<   ns = sanitize_state(mdev, os, ns, 0);
< #line 713
<   tmp___3 = cl_wide_st_chg(mdev, os, ns);
< #line 713
<   if (tmp___3 != 0) {
< #line 714
<     rv = is_valid_state(mdev, ns);
< #line 715
<     if ((int )rv == 1) {
< #line 716
<       rv = is_valid_state_transition(mdev, ns, os);
<     } else {
< 
<     }
< #line 717
<     spin_unlock_irqrestore(& mdev->req_lock, flags);
< #line 719
<     if ((int )rv <= 0) {
< #line 720
<       if (((unsigned int )f & 2U) != 0U) {
< #line 721
<         print_st_err(mdev, os, ns, (int )rv);
<       } else {
< 
<       }
< #line 722
<       goto abort;
<     } else {
< 
<     }
< #line 725
<     drbd_state_lock___0(mdev);
< #line 726
<     tmp___0 = drbd_send_state_req(mdev, mask, val);
< #line 726
<     if (tmp___0 == 0) {
< #line 727
<       drbd_state_unlock(mdev);
< #line 728
<       rv = SS_CW_FAILED_BY_PEER;
< #line 729
<       if (((unsigned int )f & 2U) != 0U) {
< #line 730
<         print_st_err(mdev, os, ns, (int )rv);
<       } else {
< 
<       }
< #line 731
<       goto abort;
<     } else {
< 
<     }
< #line 734
<     if ((unsigned int )*((unsigned short *)(& mask) + 0UL) == 496U && (unsigned int )*((unsigned short *)(& val) + 0UL) == 16U) {
< #line 735
<       drbd_set_flag(mdev, DISCONNECT_SENT);
<     } else {
< 
<     }
< #line 737
<     rv = _req_st_cond(mdev, mask, val);
< #line 737
<     if ((int )rv != 0) {
< #line 737
<       goto ldv_52147;
<     } else {
< 
<     }
< #line 737
<     tmp___1 = get_current();
< #line 737
<     __wait.flags = 0U;
< #line 737
<     __wait.private = (void *)tmp___1;
< #line 737
<     __wait.func = & autoremove_wake_function;
< #line 737
<     __wait.task_list.next = & __wait.task_list;
< #line 737
<     __wait.task_list.prev = & __wait.task_list;
<     ldv_52150: 
< #line 737
<     prepare_to_wait(& mdev->state_wait, & __wait, 2);
< #line 737
<     rv = _req_st_cond(mdev, mask, val);
< #line 737
<     if ((int )rv != 0) {
< #line 737
<       goto ldv_52149;
<     } else {
< 
<     }
< #line 737
<     schedule();
< #line 737
<     goto ldv_52150;
<     ldv_52149: 
< #line 737
<     finish_wait(& mdev->state_wait, & __wait);
<     ldv_52147: ;
< #line 740
<     if ((int )rv <= 0) {
< #line 741
<       drbd_state_unlock(mdev);
< #line 742
<       if (((unsigned int )f & 2U) != 0U) {
< #line 743
<         print_st_err(mdev, os, ns, (int )rv);
<       } else {
< 
<       }
< #line 744
<       goto abort;
<     } else {
< 
<     }
< #line 746
<     tmp___2 = spinlock_check(& mdev->req_lock);
< #line 746
<     flags = _raw_spin_lock_irqsave(tmp___2);
< #line 747
<     os = mdev->state;
< #line 748
<     ns.i = (os.i & ~ mask.i) | val.i;
< #line 749
<     rv = _drbd_set_state(mdev, ns, f, & done);
< #line 750
<     drbd_state_unlock(mdev);
<   } else {
< #line 752
<     rv = _drbd_set_state(mdev, ns, f, & done);
<   }
< #line 755
<   spin_unlock_irqrestore(& mdev->req_lock, flags);
< #line 757
<   if (((unsigned int )f & 4U) != 0U && (int )rv == 1) {
< #line 758
<     tmp___4 = get_current();
< #line 758
<     if ((unsigned long )tmp___4 == (unsigned long )mdev->worker.task) {
< #line 758
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( current != mdev->worker.task ) in %s:%d\n",
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<               758);
<     } else {
< 
<     }
< #line 759
<     wait_for_completion(& done);
<   } else {
< 
<   }
<   abort: ;
< #line 763
<   if (((unsigned int )f & 8U) != 0U) {
< #line 764
<     ldv_mutex_unlock_208(& mdev->state_mutex);
<   } else {
< 
<   }
< #line 766
<   return (rv);
< }
< }
< #line 780 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< enum drbd_state_rv _drbd_request_state(struct drbd_conf *mdev , union drbd_state mask ,
<                                        union drbd_state val , enum chg_state_flags f ) 
< { 
<   enum drbd_state_rv rv ;
<   wait_queue_t __wait ;
<   struct task_struct *tmp ;
< 
<   {
< #line 785
<   rv = drbd_req_state(mdev, mask, val, f);
< #line 785
<   if ((int )rv != -18) {
< #line 785
<     goto ldv_52161;
<   } else {
< 
<   }
< #line 785
<   tmp = get_current();
< #line 785
<   __wait.flags = 0U;
< #line 785
<   __wait.private = (void *)tmp;
< #line 785
<   __wait.func = & autoremove_wake_function;
< #line 785
<   __wait.task_list.next = & __wait.task_list;
< #line 785
<   __wait.task_list.prev = & __wait.task_list;
<   ldv_52164: 
< #line 785
<   prepare_to_wait(& mdev->state_wait, & __wait, 2);
< #line 785
<   rv = drbd_req_state(mdev, mask, val, f);
< #line 785
<   if ((int )rv != -18) {
< #line 785
<     goto ldv_52163;
<   } else {
< 
<   }
< #line 785
<   schedule();
< #line 785
<   goto ldv_52164;
<   ldv_52163: 
< #line 785
<   finish_wait(& mdev->state_wait, & __wait);
<   ldv_52161: ;
< #line 788
<   return (rv);
< }
< }
< #line 791 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static void print_st(struct drbd_conf *mdev , char *name , union drbd_state ns ) 
< { 
<   int tmp ;
<   char const   *tmp___0 ;
<   char const   *tmp___1 ;
<   char const   *tmp___2 ;
<   char const   *tmp___3 ;
<   char const   *tmp___4 ;
< 
<   {
< #line 793
<   tmp = is_susp(ns);
< #line 793
<   tmp___0 = drbd_disk_str((enum drbd_disk_state )ns.ldv_39979.pdsk);
< #line 793
<   tmp___1 = drbd_disk_str((enum drbd_disk_state )ns.ldv_39979.disk);
< #line 793
<   tmp___2 = drbd_role_str((enum drbd_role )ns.ldv_39979.peer);
< #line 793
<   tmp___3 = drbd_role_str((enum drbd_role )ns.ldv_39979.role);
< #line 793
<   tmp___4 = drbd_conn_str((enum drbd_conns )ns.ldv_39979.conn);
< #line 793
<   dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), " %s = { cs:%s ro:%s/%s ds:%s/%s %c%c%c%c }\n",
<           name, tmp___4, tmp___3, tmp___2, tmp___1, tmp___0, tmp != 0 ? 115 : 114,
<           (unsigned int )*((unsigned char *)(& ns) + 2UL) != 0U ? 97 : 45, (unsigned int )*((unsigned char *)(& ns) + 2UL) != 0U ? 112 : 45,
<           (unsigned int )*((unsigned char *)(& ns) + 2UL) != 0U ? 117 : 45);
< #line 804
<   return;
< }
< }
< #line 807 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void print_st_err(struct drbd_conf *mdev , union drbd_state os , union drbd_state ns ,
<                   enum drbd_state_rv err ) 
< { 
<   char const   *tmp ;
< 
<   {
< #line 810
<   if ((int )err == -18) {
< #line 811
<     return;
<   } else {
< 
<   }
< #line 812
<   tmp = drbd_set_st_err_str(err);
< #line 812
<   dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "State change failed: %s\n",
<           tmp);
< #line 813
<   print_st(mdev, (char *)" state", os);
< #line 814
<   print_st(mdev, (char *)"wanted", ns);
< #line 815
<   return;
< }
< }
< #line 824 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static enum drbd_state_rv is_valid_state(struct drbd_conf *mdev , union drbd_state ns ) 
< { 
<   enum drbd_fencing_p fp ;
<   enum drbd_state_rv rv ;
<   int tmp ;
<   int tmp___0 ;
< 
<   {
< #line 829
<   rv = 1;
< #line 831
<   fp = FP_DONT_CARE;
< #line 832
<   tmp = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 832
<   if (tmp != 0) {
< #line 833
<     fp = (enum drbd_fencing_p )(mdev->ldev)->dc.fencing;
< #line 834
<     put_ldev(mdev);
<   } else {
< 
<   }
< #line 837
<   tmp___0 = get_net_conf(mdev);
< #line 837
<   if (tmp___0 != 0) {
< #line 838
<     if (((unsigned int )*((unsigned char *)mdev->net_conf + 540UL) == 0U && (unsigned int )*((unsigned char *)(& ns) + 0UL) == 1U) && (unsigned int )*((unsigned char *)(& ns) + 0UL) == 4U) {
< #line 840
<       rv = SS_TWO_PRIMARIES;
<     } else {
< 
<     }
< #line 841
<     put_net_conf(mdev);
<   } else {
< 
<   }
< #line 844
<   if ((int )rv <= 0) {
< 
<   } else
< #line 846
<   if ((unsigned int )*((unsigned char *)(& ns) + 0UL) == 2U && mdev->open_cnt != 0) {
< #line 847
<     rv = SS_DEVICE_IN_USE;
<   } else
< #line 849
<   if (((unsigned int )*((unsigned char *)(& ns) + 0UL) == 1U && (int )ns.ldv_39979.conn <= 9) && (int )ns.ldv_39979.disk <= 7) {
< #line 850
<     rv = SS_NO_UP_TO_DATE_DISK;
<   } else
< #line 852
<   if ((((unsigned int )fp != 0U && (unsigned int )*((unsigned char *)(& ns) + 0UL) == 1U) && (int )ns.ldv_39979.conn <= 9) && (int )ns.ldv_39979.pdsk > 5) {
< #line 854
<     rv = SS_PRIMARY_NOP;
<   } else
< #line 856
<   if (((unsigned int )*((unsigned char *)(& ns) + 0UL) == 1U && (int )ns.ldv_39979.disk <= 4) && (int )ns.ldv_39979.pdsk <= 4) {
< #line 857
<     rv = SS_NO_UP_TO_DATE_DISK;
<   } else
< #line 859
<   if ((int )ns.ldv_39979.conn > 10 && (int )ns.ldv_39979.disk <= 3) {
< #line 860
<     rv = SS_NO_LOCAL_DISK;
<   } else
< #line 862
<   if ((int )ns.ldv_39979.conn > 10 && (int )ns.ldv_39979.pdsk <= 3) {
< #line 863
<     rv = SS_NO_REMOTE_DISK;
<   } else
< #line 865
<   if (((int )ns.ldv_39979.conn > 10 && (int )ns.ldv_39979.disk <= 7) && (int )ns.ldv_39979.pdsk <= 7) {
< #line 866
<     rv = SS_NO_UP_TO_DATE_DISK;
<   } else
< #line 868
<   if (((((unsigned int )*((unsigned short *)(& ns) + 0UL) == 160U || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 208U) || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 256U) || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 320U) && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 10U) {
< #line 873
<     rv = SS_CONNECTED_OUTDATES;
<   } else
< #line 875
<   if (((unsigned int )*((unsigned short *)(& ns) + 0UL) == 288U || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 304U) && (unsigned int )mdev->sync_conf.verify_alg[0] == 0U) {
< #line 877
<     rv = SS_NO_VERIFY_ALG;
<   } else
< #line 879
<   if (((unsigned int )*((unsigned short *)(& ns) + 0UL) == 288U || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 304U) && mdev->agreed_pro_version <= 87) {
< #line 881
<     rv = SS_NOT_SUPPORTED;
<   } else
< #line 883
<   if ((int )ns.ldv_39979.conn > 9 && *((unsigned int *)(& ns) + 0UL) == 49152U) {
< #line 884
<     rv = SS_CONNECTED_OUTDATES;
<   } else {
< 
<   }
< #line 886
<   return (rv);
< }
< }
< #line 896 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static enum drbd_state_rv is_valid_state_transition(struct drbd_conf *mdev , union drbd_state ns ,
<                                                     union drbd_state os ) 
< { 
<   enum drbd_state_rv rv ;
<   int tmp ;
< 
<   {
< #line 899
<   rv = 1;
< #line 901
<   if (((unsigned int )*((unsigned short *)(& ns) + 0UL) == 192U || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 176U) && (int )os.ldv_39979.conn > 10) {
< #line 903
<     rv = SS_RESYNC_RUNNING;
<   } else {
< 
<   }
< #line 905
<   if ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 16U && (unsigned int )*((unsigned short *)(& os) + 0UL) == 0U) {
< #line 906
<     rv = SS_ALREADY_STANDALONE;
<   } else {
< 
<   }
< #line 908
<   if ((int )ns.ldv_39979.disk > 1 && (unsigned int )*((unsigned char *)(& os) + 1UL) == 0U) {
< #line 909
<     rv = SS_IS_DISKLESS;
<   } else {
< 
<   }
< #line 911
<   if ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 128U && (int )os.ldv_39979.conn <= 1) {
< #line 912
<     rv = SS_NO_NET_CONFIG;
<   } else {
< 
<   }
< #line 914
<   if (((unsigned int )*((unsigned char *)(& ns) + 1UL) == 10U && (int )os.ldv_39979.disk <= 4) && (unsigned int )*((unsigned char *)(& os) + 1UL) != 2U) {
< #line 915
<     rv = SS_LOWER_THAN_OUTDATED;
<   } else {
< 
<   }
< #line 917
<   if ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 16U && (unsigned int )*((unsigned short *)(& os) + 0UL) == 32U) {
< #line 918
<     rv = SS_IN_TRANSIENT_STATE;
<   } else {
< 
<   }
< #line 920
<   if ((int )ns.ldv_39979.conn == (int )os.ldv_39979.conn && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 144U) {
< #line 921
<     rv = SS_IN_TRANSIENT_STATE;
<   } else {
< 
<   }
< #line 925
<   tmp = drbd_test_flag(mdev, STATE_SENT);
< #line 925
<   if (tmp != 0 && ((unsigned int )*((unsigned short *)(& os) + 0UL) != 144U && ((unsigned int )*((unsigned short *)(& ns) + 0UL) != 144U || (unsigned int )*((unsigned short *)(& os) + 0UL) != 128U))) {
< #line 928
<     rv = SS_IN_TRANSIENT_STATE;
<   } else {
< 
<   }
< #line 930
<   if (((unsigned int )*((unsigned short *)(& ns) + 0UL) == 288U || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 304U) && (int )os.ldv_39979.conn <= 9) {
< #line 931
<     rv = SS_NEED_CONNECTION;
<   } else {
< 
<   }
< #line 933
<   if ((((unsigned int )*((unsigned short *)(& ns) + 0UL) == 288U || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 304U) && (int )ns.ldv_39979.conn != (int )os.ldv_39979.conn) && (int )os.ldv_39979.conn > 10) {
< #line 935
<     rv = SS_RESYNC_RUNNING;
<   } else {
< 
<   }
< #line 937
<   if (((unsigned int )*((unsigned short *)(& ns) + 0UL) == 176U || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 192U) && (int )os.ldv_39979.conn <= 9) {
< #line 939
<     rv = SS_NEED_CONNECTION;
<   } else {
< 
<   }
< #line 941
<   if (((unsigned int )*((unsigned short *)(& ns) + 0UL) == 272U || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 256U) && (int )os.ldv_39979.conn <= 8) {
< #line 943
<     rv = SS_NEED_CONNECTION;
<   } else {
< 
<   }
< #line 945
<   return (rv);
< }
< }
< #line 948 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static void print_sanitize_warnings(struct drbd_conf *mdev , enum sanitize_state_warnings warn ) 
< { 
<   char const   *msg_table[6U] ;
< 
<   {
< #line 950
<   msg_table[0] = "";
< #line 950
<   msg_table[1] = "Online-verify aborted.";
< #line 950
<   msg_table[2] = "Resync aborted.";
< #line 950
<   msg_table[3] = "Connection lost while negotiating, no data!";
< #line 950
<   msg_table[4] = "Implicitly upgraded disk";
< #line 950
<   msg_table[5] = "Implicitly upgraded pdsk";
< #line 959
<   if ((unsigned int )warn != 0U) {
< #line 960
<     dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "%s\n", msg_table[(unsigned int )warn]);
<   } else {
< 
<   }
< #line 961
<   return;
< }
< }
< #line 973 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static union drbd_state sanitize_state(struct drbd_conf *mdev , union drbd_state os ,
<                                        union drbd_state ns , enum sanitize_state_warnings *warn ) 
< { 
<   enum drbd_fencing_p fp ;
<   enum drbd_disk_state disk_min ;
<   enum drbd_disk_state disk_max ;
<   enum drbd_disk_state pdsk_min ;
<   enum drbd_disk_state pdsk_max ;
<   int tmp ;
<   int tmp___0 ;
< 
<   {
< #line 979
<   if ((unsigned long )warn != (unsigned long )((enum sanitize_state_warnings *)0)) {
< #line 980
<     *warn = NO_WARNING;
<   } else {
< 
<   }
< #line 982
<   fp = FP_DONT_CARE;
< #line 983
<   tmp = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 983
<   if (tmp != 0) {
< #line 984
<     fp = (enum drbd_fencing_p )(mdev->ldev)->dc.fencing;
< #line 985
<     put_ldev(mdev);
<   } else {
< 
<   }
< #line 989
<   if (((int )ns.ldv_39979.conn > 2 && (int )ns.ldv_39979.conn <= 7) && (int )os.ldv_39979.conn <= 1) {
< #line 991
<     ns.ldv_39979.conn = os.ldv_39979.conn;
<   } else {
< 
<   }
< #line 995
<   if (((((int )os.ldv_39979.conn > 2 && (int )os.ldv_39979.conn <= 7) && (unsigned int )*((unsigned short *)(& ns) + 0UL) != 32U) && (unsigned int )*((unsigned short *)(& ns) + 0UL) != 16U) && (int )ns.ldv_39979.conn <= 10) {
< #line 997
<     ns.ldv_39979.conn = os.ldv_39979.conn;
<   } else {
< 
<   }
< #line 1000
<   if ((unsigned int )*((unsigned char *)(& ns) + 1UL) == 4U && (unsigned int )*((unsigned char *)(& os) + 1UL) == 0U) {
< #line 1001
<     ns.ldv_39979.disk = 0U;
<   } else {
< 
<   }
< #line 1004
<   if ((unsigned int )*((unsigned short *)(& os) + 0UL) == 16U && (unsigned int )*((unsigned short *)(& ns) + 0UL) != 0U) {
< #line 1005
<     ns.ldv_39979.conn = os.ldv_39979.conn;
<   } else {
< 
<   }
< #line 1007
<   if ((int )ns.ldv_39979.conn <= 9) {
< #line 1008
<     ns.ldv_39979.peer_isp = 0U;
< #line 1009
<     ns.ldv_39979.peer = 0U;
< #line 1010
<     if ((int )ns.ldv_39979.pdsk > 6 || (int )ns.ldv_39979.pdsk <= 3) {
< #line 1011
<       ns.ldv_39979.pdsk = 6U;
<     } else {
< 
<     }
<   } else {
< 
<   }
< #line 1015
<   if (((unsigned int )*((unsigned short *)(& ns) + 0UL) == 0U && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 0U) && (unsigned int )*((unsigned char *)(& ns) + 0UL) == 2U) {
< #line 1016
<     ns.ldv_39979.aftr_isp = 0U;
<   } else {
< 
<   }
< #line 1019
<   if (((int )os.ldv_39979.conn > 10 && (int )ns.ldv_39979.conn > 10) && ((int )ns.ldv_39979.disk <= 2 || (int )ns.ldv_39979.pdsk <= 2)) {
< #line 1021
<     if ((unsigned long )warn != (unsigned long )((enum sanitize_state_warnings *)0)) {
< #line 1022
<       *warn = (unsigned int )*((unsigned short *)(& os) + 0UL) == 288U || (unsigned int )*((unsigned short *)(& os) + 0UL) == 304U ? ABORTED_ONLINE_VERIFY : ABORTED_RESYNC;
<     } else {
< 
<     }
< #line 1024
<     ns.ldv_39979.conn = 10U;
<   } else {
< 
<   }
< #line 1028
<   if ((int )ns.ldv_39979.conn <= 9 && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 6U) {
< #line 1028
<     tmp___0 = _get_ldev_if_state(mdev, D_NEGOTIATING);
< #line 1028
<     if (tmp___0 != 0) {
< #line 1030
<       if (mdev->ed_uuid == (mdev->ldev)->md.uuid[0]) {
< #line 1031
<         ns.ldv_39979.disk = mdev->new_state_tmp.ldv_39979.disk;
< #line 1032
<         ns.ldv_39979.pdsk = mdev->new_state_tmp.ldv_39979.pdsk;
<       } else {
< #line 1034
<         if ((unsigned long )warn != (unsigned long )((enum sanitize_state_warnings *)0)) {
< #line 1035
<           *warn = CONNECTION_LOST_NEGOTIATING;
<         } else {
< 
<         }
< #line 1036
<         ns.ldv_39979.disk = 0U;
< #line 1037
<         ns.ldv_39979.pdsk = 6U;
<       }
< #line 1039
<       put_ldev(mdev);
<     } else {
< 
<     }
<   } else {
< 
<   }
< #line 1043
<   if ((int )ns.ldv_39979.conn > 9 && (int )ns.ldv_39979.conn <= 21) {
< #line 1044
<     if ((unsigned int )*((unsigned char *)(& ns) + 1UL) == 14U || (unsigned int )*((unsigned char *)(& ns) + 1UL) == 10U) {
< #line 1045
<       ns.ldv_39979.disk = 8U;
<     } else {
< 
<     }
< #line 1046
<     if (*((unsigned int *)(& ns) + 0UL) == 57344U || *((unsigned int *)(& ns) + 0UL) == 40960U) {
< #line 1047
<       ns.ldv_39979.pdsk = 8U;
<     } else {
< 
<     }
<   } else {
< 
<   }
< #line 1051
<   disk_min = D_DISKLESS;
< #line 1052
<   disk_max = D_UP_TO_DATE;
< #line 1053
<   pdsk_min = D_INCONSISTENT;
< #line 1054
<   pdsk_max = D_UNKNOWN;
< #line 1055
<   switch ((unsigned int )ns.ldv_39979.conn) {
<   case 14U: ;
<   case 21U: ;
<   case 12U: ;
<   case 15U: ;
<   case 23U: 
< #line 1061
<   disk_min = D_INCONSISTENT;
< #line 1062
<   disk_max = D_OUTDATED;
< #line 1063
<   pdsk_min = D_UP_TO_DATE;
< #line 1064
<   pdsk_max = D_UP_TO_DATE;
< #line 1065
<   goto ldv_52209;
<   case 18U: ;
<   case 19U: 
< #line 1068
<   disk_min = D_UP_TO_DATE;
< #line 1069
<   disk_max = D_UP_TO_DATE;
< #line 1070
<   pdsk_min = D_UP_TO_DATE;
< #line 1071
<   pdsk_max = D_UP_TO_DATE;
< #line 1072
<   goto ldv_52209;
<   case 10U: 
< #line 1074
<   disk_min = D_DISKLESS;
< #line 1075
<   disk_max = D_UP_TO_DATE;
< #line 1076
<   pdsk_min = D_DISKLESS;
< #line 1077
<   pdsk_max = D_UP_TO_DATE;
< #line 1078
<   goto ldv_52209;
<   case 13U: ;
<   case 20U: ;
<   case 11U: ;
<   case 22U: 
< #line 1083
<   disk_min = D_UP_TO_DATE;
< #line 1084
<   disk_max = D_UP_TO_DATE;
< #line 1085
<   pdsk_min = D_INCONSISTENT;
< #line 1086
<   pdsk_max = D_CONSISTENT;
< #line 1087
<   goto ldv_52209;
<   case 17U: 
< #line 1089
<   disk_min = D_INCONSISTENT;
< #line 1090
<   disk_max = D_INCONSISTENT;
< #line 1091
<   pdsk_min = D_UP_TO_DATE;
< #line 1092
<   pdsk_max = D_UP_TO_DATE;
< #line 1093
<   goto ldv_52209;
<   case 16U: 
< #line 1095
<   disk_min = D_UP_TO_DATE;
< #line 1096
<   disk_max = D_UP_TO_DATE;
< #line 1097
<   pdsk_min = D_INCONSISTENT;
< #line 1098
<   pdsk_max = D_INCONSISTENT;
< #line 1099
<   goto ldv_52209;
<   case 0U: ;
<   case 1U: ;
<   case 2U: ;
<   case 3U: ;
<   case 4U: ;
<   case 5U: ;
<   case 6U: ;
<   case 7U: ;
<   case 8U: ;
<   case 9U: ;
<   case 31U: ;
< #line 1111
<   goto ldv_52209;
<   }
<   ldv_52209: ;
< #line 1113
<   if ((unsigned int )ns.ldv_39979.disk > (unsigned int )disk_max) {
< #line 1114
<     ns.ldv_39979.disk = (unsigned char )disk_max;
<   } else {
< 
<   }
< #line 1116
<   if ((unsigned int )ns.ldv_39979.disk < (unsigned int )disk_min) {
< #line 1117
<     if ((unsigned long )warn != (unsigned long )((enum sanitize_state_warnings *)0)) {
< #line 1118
<       *warn = IMPLICITLY_UPGRADED_DISK;
<     } else {
< 
<     }
< #line 1119
<     ns.ldv_39979.disk = (unsigned char )disk_min;
<   } else {
< 
<   }
< #line 1121
<   if ((unsigned int )ns.ldv_39979.pdsk > (unsigned int )pdsk_max) {
< #line 1122
<     ns.ldv_39979.pdsk = (unsigned char )pdsk_max;
<   } else {
< 
<   }
< #line 1124
<   if ((unsigned int )ns.ldv_39979.pdsk < (unsigned int )pdsk_min) {
< #line 1125
<     if ((unsigned long )warn != (unsigned long )((enum sanitize_state_warnings *)0)) {
< #line 1126
<       *warn = IMPLICITLY_UPGRADED_PDSK;
<     } else {
< 
<     }
< #line 1127
<     ns.ldv_39979.pdsk = (unsigned char )pdsk_min;
<   } else {
< 
<   }
< #line 1130
<   if (((unsigned int )fp == 2U && (((unsigned int )*((unsigned char *)(& ns) + 0UL) == 1U && (int )ns.ldv_39979.conn <= 9) && (int )ns.ldv_39979.pdsk > 5)) && (((unsigned int )*((unsigned char *)(& os) + 0UL) != 1U || (int )os.ldv_39979.conn > 9) || (int )os.ldv_39979.pdsk <= 5)) {
< #line 1133
<     ns.ldv_39979.susp_fen = 1U;
<   } else {
< 
<   }
< #line 1135
<   if ((mdev->sync_conf.on_no_data == 1 && (((unsigned int )*((unsigned char *)(& ns) + 0UL) == 1U && (int )ns.ldv_39979.disk <= 7) && (int )ns.ldv_39979.pdsk <= 7)) && (((unsigned int )*((unsigned char *)(& os) + 0UL) != 1U || (int )os.ldv_39979.disk > 7) || (int )os.ldv_39979.pdsk > 7)) {
< #line 1138
<     ns.ldv_39979.susp_nod = 1U;
<   } else {
< 
<   }
< #line 1140
<   if (((unsigned int )*((unsigned char *)(& ns) + 2UL) != 0U || (unsigned int )*((unsigned char *)(& ns) + 2UL) != 0U) || (unsigned int )*((unsigned char *)(& ns) + 2UL) != 0U) {
< #line 1141
<     if ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 256U) {
< #line 1142
<       ns.ldv_39979.conn = 20U;
<     } else {
< 
<     }
< #line 1143
<     if ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 272U) {
< #line 1144
<       ns.ldv_39979.conn = 21U;
<     } else {
< 
<     }
<   } else {
< #line 1146
<     if ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 320U) {
< #line 1147
<       ns.ldv_39979.conn = 16U;
<     } else {
< 
<     }
< #line 1148
<     if ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 336U) {
< #line 1149
<       ns.ldv_39979.conn = 17U;
<     } else {
< 
<     }
<   }
< #line 1152
<   return (ns);
< }
< }
< #line 1156 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static void set_ov_position(struct drbd_conf *mdev , enum drbd_conns cs ) 
< { 
<   unsigned long bit ;
< 
<   {
< #line 1158
<   if (mdev->agreed_pro_version <= 89) {
< #line 1159
<     mdev->ov_start_sector = 0UL;
<   } else {
< 
<   }
< #line 1160
<   mdev->rs_total = drbd_bm_bits(mdev);
< #line 1161
<   mdev->ov_position = 0UL;
< #line 1162
<   if ((unsigned int )cs == 19U) {
< #line 1168
<     mdev->ov_start_sector = 0xffffffffffffffffUL;
<   } else {
< #line 1170
<     bit = mdev->ov_start_sector >> 3;
< #line 1171
<     if (mdev->rs_total <= bit) {
< #line 1172
<       mdev->ov_start_sector = (mdev->rs_total - 1UL) << 3;
< #line 1174
<       mdev->rs_total = 1UL;
<     } else {
< #line 1176
<       mdev->rs_total = mdev->rs_total - bit;
<     }
< #line 1177
<     mdev->ov_position = mdev->ov_start_sector;
<   }
< #line 1179
<   mdev->ov_left = mdev->rs_total;
< #line 1180
<   return;
< }
< }
< #line 1182 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static void drbd_resume_al(struct drbd_conf *mdev ) 
< { 
<   int tmp ;
< 
<   {
< #line 1184
<   tmp = drbd_test_and_clear_flag(mdev, AL_SUSPENDED);
< #line 1184
<   if (tmp != 0) {
< #line 1185
<     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Resumed AL updates\n");
<   } else {
< 
<   }
< #line 1186
<   return;
< }
< }
< #line 1198 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< enum drbd_state_rv __drbd_set_state(struct drbd_conf *mdev , union drbd_state ns ,
<                                     enum chg_state_flags flags , struct completion *done ) 
< { 
<   union drbd_state os ;
<   enum drbd_state_rv rv ;
<   enum sanitize_state_warnings ssw ;
<   struct after_state_chg_work *ascw ;
<   enum drbd_state_rv tmp ;
<   char *pbp ;
<   char pb[300U] ;
<   char const   *tmp___0 ;
<   char const   *tmp___1 ;
<   int tmp___2 ;
<   char const   *tmp___3 ;
<   char const   *tmp___4 ;
<   int tmp___5 ;
<   char const   *tmp___6 ;
<   char const   *tmp___7 ;
<   int tmp___8 ;
<   char const   *tmp___9 ;
<   char const   *tmp___10 ;
<   int tmp___11 ;
<   char const   *tmp___12 ;
<   char const   *tmp___13 ;
<   int tmp___14 ;
<   int tmp___15 ;
<   int tmp___16 ;
<   int tmp___17 ;
<   int tmp___18 ;
<   int tmp___19 ;
<   int tmp___20 ;
<   int tmp___21 ;
<   int tmp___22 ;
<   int tmp___23 ;
<   unsigned long tmp___24 ;
<   unsigned long now ;
<   int i ;
<   u32 mdf ;
<   int tmp___25 ;
<   int tmp___26 ;
<   void *tmp___27 ;
< 
<   {
< #line 1202
<   rv = 1;
< #line 1206
<   os = mdev->state;
< #line 1208
<   ns = sanitize_state(mdev, os, ns, & ssw);
< #line 1210
<   if (ns.i == os.i) {
< #line 1211
<     return (SS_NOTHING_TO_DO);
<   } else {
< 
<   }
< #line 1213
<   if (((unsigned int )flags & 1U) == 0U) {
< #line 1217
<     rv = is_valid_state(mdev, ns);
< #line 1218
<     if ((int )rv <= 0) {
< #line 1222
<       tmp = is_valid_state(mdev, os);
< #line 1222
<       if ((int )tmp == (int )rv) {
< #line 1223
<         rv = is_valid_state_transition(mdev, ns, os);
<       } else {
< #line 1225
<         rv = is_valid_state_transition(mdev, ns, os);
<       }
<     } else {
< 
<     }
<   } else {
< 
<   }
< #line 1228
<   if ((int )rv <= 0) {
< #line 1229
<     if (((unsigned int )flags & 2U) != 0U) {
< #line 1230
<       print_st_err(mdev, os, ns, rv);
<     } else {
< 
<     }
< #line 1231
<     return (rv);
<   } else {
< 
<   }
< #line 1234
<   print_sanitize_warnings(mdev, ssw);
< #line 1238
<   pbp = (char *)(& pb);
< #line 1239
<   *pbp = 0;
< #line 1240
<   if ((int )ns.ldv_39979.role != (int )os.ldv_39979.role) {
< #line 1241
<     tmp___0 = drbd_role_str((enum drbd_role )ns.ldv_39979.role);
< #line 1241
<     tmp___1 = drbd_role_str((enum drbd_role )os.ldv_39979.role);
< #line 1241
<     tmp___2 = sprintf(pbp, "role( %s -> %s ) ", tmp___1, tmp___0);
< #line 1241
<     pbp = pbp + (unsigned long )tmp___2;
<   } else {
< 
<   }
< #line 1244
<   if ((int )ns.ldv_39979.peer != (int )os.ldv_39979.peer) {
< #line 1245
<     tmp___3 = drbd_role_str((enum drbd_role )ns.ldv_39979.peer);
< #line 1245
<     tmp___4 = drbd_role_str((enum drbd_role )os.ldv_39979.peer);
< #line 1245
<     tmp___5 = sprintf(pbp, "peer( %s -> %s ) ", tmp___4, tmp___3);
< #line 1245
<     pbp = pbp + (unsigned long )tmp___5;
<   } else {
< 
<   }
< #line 1248
<   if ((int )ns.ldv_39979.conn != (int )os.ldv_39979.conn) {
< #line 1249
<     tmp___6 = drbd_conn_str((enum drbd_conns )ns.ldv_39979.conn);
< #line 1249
<     tmp___7 = drbd_conn_str((enum drbd_conns )os.ldv_39979.conn);
< #line 1249
<     tmp___8 = sprintf(pbp, "conn( %s -> %s ) ", tmp___7, tmp___6);
< #line 1249
<     pbp = pbp + (unsigned long )tmp___8;
<   } else {
< 
<   }
< #line 1252
<   if ((int )ns.ldv_39979.disk != (int )os.ldv_39979.disk) {
< #line 1253
<     tmp___9 = drbd_disk_str((enum drbd_disk_state )ns.ldv_39979.disk);
< #line 1253
<     tmp___10 = drbd_disk_str((enum drbd_disk_state )os.ldv_39979.disk);
< #line 1253
<     tmp___11 = sprintf(pbp, "disk( %s -> %s ) ", tmp___10, tmp___9);
< #line 1253
<     pbp = pbp + (unsigned long )tmp___11;
<   } else {
< 
<   }
< #line 1256
<   if ((int )ns.ldv_39979.pdsk != (int )os.ldv_39979.pdsk) {
< #line 1257
<     tmp___12 = drbd_disk_str((enum drbd_disk_state )ns.ldv_39979.pdsk);
< #line 1257
<     tmp___13 = drbd_disk_str((enum drbd_disk_state )os.ldv_39979.pdsk);
< #line 1257
<     tmp___14 = sprintf(pbp, "pdsk( %s -> %s ) ", tmp___13, tmp___12);
< #line 1257
<     pbp = pbp + (unsigned long )tmp___14;
<   } else {
< 
<   }
< #line 1260
<   tmp___18 = is_susp(ns);
< #line 1260
<   tmp___19 = is_susp(os);
< #line 1260
<   if (tmp___18 != tmp___19) {
< #line 1261
<     tmp___15 = is_susp(ns);
< #line 1261
<     tmp___16 = is_susp(os);
< #line 1261
<     tmp___17 = sprintf(pbp, "susp( %d -> %d ) ", tmp___16, tmp___15);
< #line 1261
<     pbp = pbp + (unsigned long )tmp___17;
<   } else {
< 
<   }
< #line 1264
<   if ((int )ns.ldv_39979.aftr_isp != (int )os.ldv_39979.aftr_isp) {
< #line 1265
<     tmp___20 = sprintf(pbp, "aftr_isp( %d -> %d ) ", (int )os.ldv_39979.aftr_isp,
<                        (int )ns.ldv_39979.aftr_isp);
< #line 1265
<     pbp = pbp + (unsigned long )tmp___20;
<   } else {
< 
<   }
< #line 1268
<   if ((int )ns.ldv_39979.peer_isp != (int )os.ldv_39979.peer_isp) {
< #line 1269
<     tmp___21 = sprintf(pbp, "peer_isp( %d -> %d ) ", (int )os.ldv_39979.peer_isp,
<                        (int )ns.ldv_39979.peer_isp);
< #line 1269
<     pbp = pbp + (unsigned long )tmp___21;
<   } else {
< 
<   }
< #line 1272
<   if ((int )ns.ldv_39979.user_isp != (int )os.ldv_39979.user_isp) {
< #line 1273
<     tmp___22 = sprintf(pbp, "user_isp( %d -> %d ) ", (int )os.ldv_39979.user_isp,
<                        (int )ns.ldv_39979.user_isp);
< #line 1273
<     pbp = pbp + (unsigned long )tmp___22;
<   } else {
< 
<   }
< #line 1276
<   _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "%s\n", (char *)(& pb));
< #line 1287
<   if (((unsigned int )*((unsigned char *)(& ns) + 1UL) == 0U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 0U) && (unsigned int )*((unsigned char *)(& ns) + 0UL) == 2U) {
< #line 1287
<     tmp___23 = drbd_test_and_set_flag(mdev, CONFIG_PENDING);
< #line 1287
<     if (tmp___23 == 0) {
< #line 1291
<       drbd_set_flag(mdev, DEVICE_DYING);
<     } else {
< 
<     }
<   } else {
< 
<   }
< #line 1297
<   if (((unsigned int )*((unsigned char *)(& os) + 1UL) != 4U && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 4U) || ((unsigned int )*((unsigned char *)(& os) + 1UL) != 0U && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 0U)) {
< #line 1299
<     atomic_inc(& mdev->local_cnt);
<   } else {
< 
<   }
< #line 1301
<   mdev->state = ns;
< #line 1303
<   if ((unsigned int )*((unsigned char *)(& os) + 1UL) == 2U && (int )ns.ldv_39979.disk > 2) {
< #line 1304
<     drbd_print_uuids(mdev, "attached to UUIDs");
<   } else {
< 
<   }
< #line 1306
<   __wake_up(& mdev->misc_wait, 3U, 1, 0);
< #line 1307
<   __wake_up(& mdev->state_wait, 3U, 1, 0);
< #line 1311
<   if (((unsigned int )*((unsigned short *)(& os) + 0UL) == 288U || (unsigned int )*((unsigned short *)(& os) + 0UL) == 304U) && (int )ns.ldv_39979.conn <= 10) {
< #line 1313
<     tmp___24 = drbd_bm_bits(mdev);
< #line 1313
<     mdev->ov_start_sector = (tmp___24 - mdev->ov_left) << 3;
< #line 1315
<     if (mdev->ov_left != 0UL) {
< #line 1316
<       _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Online Verify reached sector %llu\n",
<                 (unsigned long long )mdev->ov_start_sector);
<     } else {
< 
<     }
<   } else {
< 
<   }
< #line 1320
<   if (((unsigned int )*((unsigned short *)(& os) + 0UL) == 336U || (unsigned int )*((unsigned short *)(& os) + 0UL) == 320U) && ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 272U || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 256U)) {
< #line 1322
<     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Syncer continues.\n");
< #line 1323
<     mdev->rs_paused = mdev->rs_paused + (unsigned long )((long )jiffies - (long )mdev->rs_mark_time[mdev->rs_last_mark]);
< #line 1325
<     if ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 272U) {
< #line 1326
<       mod_timer(& mdev->resync_timer, jiffies);
<     } else {
< 
<     }
<   } else {
< 
<   }
< #line 1329
<   if (((unsigned int )*((unsigned short *)(& os) + 0UL) == 272U || (unsigned int )*((unsigned short *)(& os) + 0UL) == 256U) && ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 336U || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 320U)) {
< #line 1331
<     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Resync suspended\n");
< #line 1332
<     mdev->rs_mark_time[mdev->rs_last_mark] = jiffies;
<   } else {
< 
<   }
< #line 1335
<   if ((unsigned int )*((unsigned short *)(& os) + 0UL) == 160U && ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 288U || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 304U)) {
< #line 1337
<     now = jiffies;
< #line 1340
<     set_ov_position(mdev, (enum drbd_conns )ns.ldv_39979.conn);
< #line 1341
<     mdev->rs_start = now;
< #line 1342
<     mdev->rs_last_events = 0;
< #line 1343
<     mdev->rs_last_sect_ev = 0;
< #line 1344
<     mdev->ov_last_oos_size = 0UL;
< #line 1345
<     mdev->ov_last_oos_start = 0UL;
< #line 1347
<     i = 0;
< #line 1347
<     goto ldv_52253;
<     ldv_52252: 
< #line 1348
<     mdev->rs_mark_left[i] = mdev->ov_left;
< #line 1349
<     mdev->rs_mark_time[i] = now;
< #line 1347
<     i = i + 1;
<     ldv_52253: ;
< #line 1347
<     if (i <= 7) {
< #line 1348
<       goto ldv_52252;
<     } else {
< 
<     }
< #line 1352
<     drbd_rs_controller_reset(mdev);
< #line 1354
<     if ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 288U) {
< #line 1355
<       _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Starting Online Verify from sector %llu\n",
<                 (unsigned long long )mdev->ov_position);
< #line 1357
<       mod_timer(& mdev->resync_timer, jiffies);
<     } else {
< 
<     }
<   } else {
< 
<   }
< #line 1361
<   tmp___26 = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 1361
<   if (tmp___26 != 0) {
< #line 1362
<     mdf = (mdev->ldev)->md.flags & 4294967176U;
< #line 1366
<     tmp___25 = drbd_test_flag(mdev, CRASHED_PRIMARY);
< #line 1366
<     if (tmp___25 != 0) {
< #line 1367
<       mdf = mdf | 64U;
<     } else {
< 
<     }
< #line 1368
<     if ((unsigned int )*((unsigned char *)mdev + 2276UL) == 1U || ((int )mdev->state.ldv_39979.pdsk <= 3 && (unsigned int )*((unsigned char *)mdev + 2276UL) == 4U)) {
< #line 1370
<       mdf = mdf | 2U;
<     } else {
< 
<     }
< #line 1371
<     if ((int )mdev->state.ldv_39979.conn > 9) {
< #line 1372
<       mdf = mdf | 4U;
<     } else {
< 
<     }
< #line 1373
<     if ((int )mdev->state.ldv_39979.disk > 4) {
< #line 1374
<       mdf = mdf | 1U;
<     } else {
< 
<     }
< #line 1375
<     if ((int )mdev->state.ldv_39979.disk > 5) {
< #line 1376
<       mdf = mdf | 16U;
<     } else {
< 
<     }
< #line 1377
<     if ((int )mdev->state.ldv_39979.pdsk <= 5 && (int )mdev->state.ldv_39979.pdsk > 3) {
< #line 1378
<       mdf = mdf | 32U;
<     } else {
< 
<     }
< #line 1379
<     if ((mdev->ldev)->md.flags != mdf) {
< #line 1380
<       (mdev->ldev)->md.flags = mdf;
< #line 1381
<       drbd_md_mark_dirty(mdev);
<     } else {
< 
<     }
< #line 1383
<     if ((int )os.ldv_39979.disk <= 6 && (int )ns.ldv_39979.disk > 6) {
< #line 1384
<       drbd_set_ed_uuid(mdev, (mdev->ldev)->md.uuid[0]);
<     } else {
< 
<     }
< #line 1385
<     put_ldev(mdev);
<   } else {
< 
<   }
< #line 1389
<   if ((((unsigned int )*((unsigned char *)(& os) + 1UL) == 8U && *((unsigned int *)(& os) + 0UL) == 32768U) && (unsigned int )*((unsigned char *)(& os) + 0UL) == 8U) && (unsigned int )*((unsigned char *)(& ns) + 0UL) == 4U) {
< #line 1391
<     drbd_set_flag(mdev, CONSIDER_RESYNC);
<   } else {
< 
<   }
< #line 1394
<   if ((unsigned int )*((unsigned short *)(& os) + 0UL) != 16U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 16U) {
< #line 1395
<     drbd_thread_stop_nowait(& mdev->receiver);
<   } else {
< 
<   }
< #line 1398
<   if ((unsigned int )*((unsigned short *)(& os) + 0UL) != 0U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 0U) {
< #line 1399
<     drbd_thread_stop_nowait(& mdev->receiver);
<   } else {
< 
<   }
< #line 1402
<   if (((int )os.ldv_39979.conn > 8 && (int )ns.ldv_39979.conn <= 7) && (int )ns.ldv_39979.conn > 2) {
< #line 1404
<     drbd_thread_restart_nowait(& mdev->receiver);
<   } else {
< 
<   }
< #line 1407
<   if ((int )os.ldv_39979.conn <= 9 && (int )ns.ldv_39979.conn > 9) {
< #line 1408
<     drbd_resume_al(mdev);
<   } else {
< 
<   }
< #line 1413
<   if ((unsigned int )*((unsigned short *)(& os) + 0UL) != 144U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 144U) {
< #line 1414
<     mdev->last_reconnect_jif = jiffies;
<   } else {
< 
<   }
< #line 1415
<   if (((unsigned int )*((unsigned char *)(& os) + 1UL) == 2U || (unsigned int )*((unsigned char *)(& os) + 1UL) == 6U) && (int )ns.ldv_39979.disk > 3) {
< #line 1417
<     mdev->last_reattach_jif = jiffies;
<   } else {
< 
<   }
< #line 1419
<   tmp___27 = kmalloc(48UL, 32U);
< #line 1419
<   ascw = (struct after_state_chg_work *)tmp___27;
< #line 1420
<   if ((unsigned long )ascw != (unsigned long )((struct after_state_chg_work *)0)) {
< #line 1421
<     ascw->os = os;
< #line 1422
<     ascw->ns = ns;
< #line 1423
<     ascw->flags = flags;
< #line 1424
<     ascw->w.cb = & w_after_state_ch;
< #line 1425
<     ascw->done = done;
< #line 1426
<     drbd_queue_work(& mdev->data.work, & ascw->w);
<   } else {
< #line 1428
<     dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Could not kmalloc an ascw\n");
<   }
< #line 1431
<   return (rv);
< }
< }
< #line 1434 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static int w_after_state_ch(struct drbd_conf *mdev , struct drbd_work *w , int unused ) 
< { 
<   struct after_state_chg_work *ascw ;
<   struct drbd_work  const  *__mptr ;
< 
<   {
< #line 1437
<   __mptr = (struct drbd_work  const  *)w;
< #line 1437
<   ascw = (struct after_state_chg_work *)__mptr;
< #line 1438
<   after_state_ch(mdev, ascw->os, ascw->ns, ascw->flags);
< #line 1439
<   if (((unsigned int )ascw->flags & 4U) != 0U) {
< #line 1440
<     if ((unsigned long )ascw->done == (unsigned long )((struct completion *)0)) {
< #line 1440
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( ascw->done != NULL ) in %s:%d\n",
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<               1440);
<     } else {
< 
<     }
< #line 1441
<     complete(ascw->done);
<   } else {
< 
<   }
< #line 1443
<   kfree((void const   *)ascw);
< #line 1445
<   return (1);
< }
< }
< #line 1448 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static void abw_start_sync(struct drbd_conf *mdev , int rv ) 
< { 
<   union drbd_state val ;
<   union drbd_state mask ;
<   union drbd_state val___0 ;
<   union drbd_state mask___0 ;
< 
<   {
< #line 1450
<   if (rv != 0) {
< #line 1451
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Writing the bitmap failed not starting resync.\n");
< #line 1452
<     val.i = 0U;
< #line 1452
<     val.ldv_39979.conn = 10U;
< #line 1452
<     mask.i = 0U;
< #line 1452
<     mask.ldv_39979.conn = 31U;
< #line 1452
<     _drbd_request_state(mdev, mask, val, CS_VERBOSE);
< #line 1453
<     return;
<   } else {
< 
<   }
< #line 1456
<   switch ((int )mdev->state.ldv_39979.conn) {
<   case 12: 
< #line 1458
<   val___0.i = 0U;
< #line 1458
<   val___0.ldv_39979.conn = 15U;
< #line 1458
<   mask___0.i = 0U;
< #line 1458
<   mask___0.ldv_39979.conn = 31U;
< #line 1458
<   _drbd_request_state(mdev, mask___0, val___0, CS_VERBOSE);
< #line 1459
<   goto ldv_52277;
<   case 11: 
< #line 1461
<   drbd_start_resync(mdev, C_SYNC_SOURCE);
< #line 1462
<   goto ldv_52277;
<   }
<   ldv_52277: ;
< #line 1465
<   return;
< }
< }
< #line 1466 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< int drbd_bitmap_io_from_worker(struct drbd_conf *mdev , int (*io_fn)(struct drbd_conf * ) ,
<                                char *why , enum bm_flag flags ) 
< { 
<   int rv ;
<   struct task_struct *tmp ;
< 
<   {
< #line 1472
<   tmp = get_current();
< #line 1472
<   if ((unsigned long )tmp != (unsigned long )mdev->worker.task) {
< #line 1472
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( current == mdev->worker.task ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             1472);
<   } else {
< 
<   }
< #line 1475
<   drbd_set_flag(mdev, SUSPEND_IO);
< #line 1477
<   drbd_bm_lock(mdev, why, flags);
< #line 1478
<   rv = (*io_fn)(mdev);
< #line 1479
<   drbd_bm_unlock(mdev);
< #line 1481
<   drbd_resume_io(mdev);
< #line 1483
<   return (rv);
< }
< }
< #line 1493 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static void after_state_ch(struct drbd_conf *mdev , union drbd_state os , union drbd_state ns ,
<                            enum chg_state_flags flags ) 
< { 
<   enum drbd_fencing_p fp ;
<   enum drbd_req_event what ;
<   union drbd_state nsm ;
<   int tmp ;
<   int tmp___0 ;
<   union drbd_state __ns ;
<   int tmp___1 ;
<   int tmp___2 ;
<   int tmp___3 ;
<   int tmp___4 ;
<   int tmp___5 ;
<   enum drbd_io_error_p eh ;
<   int tmp___6 ;
<   int tmp___7 ;
<   char const   *tmp___8 ;
<   char const   *tmp___9 ;
<   int tmp___10 ;
<   int tmp___11 ;
<   int tmp___12 ;
<   int tmp___13 ;
< 
<   {
< #line 1497
<   what = nothing;
< #line 1498
<   nsm.i = 4294967295U;
< #line 1500
<   if ((unsigned int )*((unsigned short *)(& os) + 0UL) != 160U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 160U) {
< #line 1501
<     drbd_clear_flag(mdev, CRASHED_PRIMARY);
< #line 1502
<     if ((unsigned long )mdev->p_uuid != (unsigned long )((u64 *)0)) {
< #line 1503
<       *(mdev->p_uuid + 5UL) = *(mdev->p_uuid + 5UL) & 0xfffffffffffffffdULL;
<     } else {
< 
<     }
<   } else {
< 
<   }
< #line 1506
<   fp = FP_DONT_CARE;
< #line 1507
<   tmp = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 1507
<   if (tmp != 0) {
< #line 1508
<     fp = (enum drbd_fencing_p )(mdev->ldev)->dc.fencing;
< #line 1509
<     put_ldev(mdev);
<   } else {
< 
<   }
< #line 1513
<   drbd_bcast_state(mdev, ns);
< #line 1515
<   if ((((unsigned int )*((unsigned char *)(& os) + 0UL) != 1U || (int )os.ldv_39979.disk > 7) || (int )os.ldv_39979.pdsk > 7) && (((unsigned int )*((unsigned char *)(& ns) + 0UL) == 1U && (int )ns.ldv_39979.disk <= 7) && (int )ns.ldv_39979.pdsk <= 7)) {
< #line 1517
<     drbd_khelper(mdev, (char *)"pri-on-incon-degr");
<   } else {
< 
<   }
< #line 1522
<   if ((int )os.ldv_39979.disk <= 3 && (int )ns.ldv_39979.disk > 3) {
< #line 1523
<     mod_timer(& mdev->request_timer, (unsigned long )jiffies + 250UL);
<   } else {
< 
<   }
< #line 1525
<   nsm.i = 4294967295U;
< #line 1526
<   if ((unsigned int )*((unsigned char *)(& ns) + 2UL) != 0U) {
< #line 1527
<     if ((int )os.ldv_39979.conn <= 9 && (int )ns.ldv_39979.conn > 9) {
< #line 1528
<       what = resend;
<     } else {
< 
<     }
< #line 1530
<     if (((unsigned int )*((unsigned char *)(& os) + 1UL) == 2U || (unsigned int )*((unsigned char *)(& os) + 1UL) == 6U) && (int )ns.ldv_39979.disk > 3) {
< #line 1532
<       what = restart_frozen_disk_io;
<     } else {
< 
<     }
< #line 1534
<     if ((unsigned int )what != 27U) {
< #line 1535
<       nsm.ldv_39979.susp_nod = 0U;
<     } else {
< 
<     }
<   } else {
< 
<   }
< #line 1538
<   if ((unsigned int )*((unsigned char *)(& ns) + 2UL) != 0U) {
< #line 1540
<     if ((int )os.ldv_39979.pdsk > 5 && (int )ns.ldv_39979.pdsk <= 5) {
< #line 1541
<       tmp___0 = drbd_test_flag(mdev, NEW_CUR_UUID);
< #line 1541
<       if (tmp___0 != 0) {
< #line 1542
<         drbd_uuid_new_current(mdev);
< #line 1543
<         drbd_clear_flag(mdev, NEW_CUR_UUID);
<       } else {
< 
<       }
< #line 1545
<       spin_lock_irq(& mdev->req_lock);
< #line 1546
<       _tl_clear(mdev);
< #line 1547
<       __ns.i = mdev->state.i;
< #line 1547
<       __ns.ldv_39979.susp_fen = 0U;
< #line 1547
<       _drbd_set_state(mdev, __ns, CS_VERBOSE, 0);
< #line 1548
<       spin_unlock_irq(& mdev->req_lock);
<     } else {
< 
<     }
< #line 1551
<     if ((int )os.ldv_39979.conn <= 9 && (int )ns.ldv_39979.conn > 9) {
< #line 1552
<       drbd_clear_flag(mdev, NEW_CUR_UUID);
< #line 1553
<       what = resend;
< #line 1554
<       nsm.ldv_39979.susp_fen = 0U;
<     } else {
< 
<     }
<   } else {
< 
<   }
< #line 1558
<   if ((unsigned int )what != 27U) {
< #line 1559
<     spin_lock_irq(& mdev->req_lock);
< #line 1560
<     _tl_restart(mdev, what);
< #line 1561
<     nsm.i = nsm.i & mdev->state.i;
< #line 1562
<     _drbd_set_state(mdev, nsm, CS_VERBOSE, 0);
< #line 1563
<     spin_unlock_irq(& mdev->req_lock);
<   } else {
< 
<   }
< #line 1570
<   if ((((unsigned int )*((unsigned short *)(& os) + 0UL) != 256U && (unsigned int )*((unsigned short *)(& os) + 0UL) != 320U) && ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 256U || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 320U)) && mdev->agreed_pro_version > 95) {
< #line 1570
<     tmp___1 = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 1570
<     if (tmp___1 != 0) {
< #line 1573
<       drbd_gen_and_send_sync_uuid(mdev);
< #line 1574
<       put_ldev(mdev);
<     } else {
< 
<     }
<   } else {
< 
<   }
< #line 1578
<   if (*((unsigned int *)(& os) + 0UL) == 0U && (int )ns.ldv_39979.pdsk > 0) {
< #line 1581
<     mdev->rs_total = 0UL;
< #line 1582
<     mdev->rs_failed = 0UL;
< #line 1583
<     atomic_set(& mdev->rs_pending_cnt, 0);
< #line 1584
<     drbd_rs_cancel_all(mdev);
< #line 1586
<     drbd_send_uuids(mdev);
< #line 1587
<     drbd_send_state(mdev, ns);
<   } else {
< 
<   }
< #line 1592
<   if (((unsigned int )*((unsigned short *)(& os) + 0UL) != 208U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 208U) && (unsigned int )*((unsigned short *)mdev + 1138UL) == 208U) {
< #line 1594
<     drbd_queue_bitmap_io(mdev, & drbd_send_bitmap, 0, (char *)"send_bitmap (WFBitMapS)",
<                          BM_LOCKED_TEST_ALLOWED);
<   } else {
< 
<   }
< #line 1599
<   if ((((int )os.ldv_39979.pdsk > 3 && *((unsigned int *)(& os) + 0UL) != 49152U) && *((unsigned int *)(& os) + 0UL) != 40960U) && (((int )ns.ldv_39979.pdsk <= 3 || *((unsigned int *)(& ns) + 0UL) == 49152U) || *((unsigned int *)(& ns) + 0UL) == 40960U)) {
< #line 1605
<     tmp___3 = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 1605
<     if (tmp___3 != 0) {
< #line 1606
<       if ((((unsigned int )*((unsigned char *)(& ns) + 0UL) == 1U || (unsigned int )*((unsigned char *)(& ns) + 0UL) == 4U) && (mdev->ldev)->md.uuid[1] == 0ULL) && (int )ns.ldv_39979.disk > 7) {
< #line 1608
<         tmp___2 = is_susp(mdev->state);
< #line 1608
<         if (tmp___2 != 0) {
< #line 1609
<           drbd_set_flag(mdev, NEW_CUR_UUID);
<         } else {
< #line 1611
<           drbd_uuid_new_current(mdev);
< #line 1612
<           drbd_send_uuids(mdev);
<         }
<       } else {
< 
<       }
< #line 1615
<       put_ldev(mdev);
<     } else {
< 
<     }
<   } else {
< 
<   }
< #line 1619
<   if ((int )ns.ldv_39979.pdsk <= 3) {
< #line 1619
<     tmp___4 = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 1619
<     if (tmp___4 != 0) {
< #line 1620
<       if ((((unsigned int )*((unsigned char *)(& os) + 0UL) == 8U && (unsigned int )*((unsigned char *)(& ns) + 0UL) == 4U) && (mdev->ldev)->md.uuid[1] == 0ULL) && (int )ns.ldv_39979.disk > 7) {
< #line 1622
<         drbd_uuid_new_current(mdev);
< #line 1623
<         drbd_send_uuids(mdev);
<       } else {
< 
<       }
< #line 1626
<       if ((unsigned int )*((unsigned char *)(& os) + 0UL) == 4U && (unsigned int )*((unsigned char *)(& ns) + 0UL) == 8U) {
< #line 1630
<         drbd_bitmap_io_from_worker(mdev, & drbd_bm_write, (char *)"demote diskless peer",
<                                    BM_LOCKED_SET_ALLOWED);
<       } else {
< 
<       }
< #line 1632
<       put_ldev(mdev);
<     } else {
< 
<     }
<   } else {
< 
<   }
< #line 1638
<   if (((unsigned int )*((unsigned char *)(& os) + 0UL) == 1U && (unsigned int )*((unsigned char *)(& ns) + 0UL) == 2U) && (int )mdev->state.ldv_39979.conn <= 10) {
< #line 1638
<     tmp___5 = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 1638
<     if (tmp___5 != 0) {
< #line 1642
<       drbd_bitmap_io_from_worker(mdev, & drbd_bm_write, (char *)"demote", BM_LOCKED_TEST_ALLOWED);
< #line 1644
<       put_ldev(mdev);
<     } else {
< 
<     }
<   } else {
< 
<   }
< #line 1648
<   if (((int )ns.ldv_39979.conn > 9 && (unsigned int )*((unsigned char *)(& os) + 1UL) == 2U) && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 6U) {
< #line 1650
<     drbd_send_sizes(mdev, 0, 0);
< #line 1651
<     drbd_send_uuids(mdev);
< #line 1652
<     drbd_send_state(mdev, ns);
<   } else {
< 
<   }
< #line 1656
<   if ((int )ns.ldv_39979.conn > 9 && ((int )os.ldv_39979.aftr_isp != (int )ns.ldv_39979.aftr_isp || (int )os.ldv_39979.user_isp != (int )ns.ldv_39979.user_isp)) {
< #line 1659
<     drbd_send_state(mdev, ns);
<   } else {
< 
<   }
< #line 1662
<   if ((((unsigned int )*((unsigned char *)(& os) + 2UL) == 0U && (unsigned int )*((unsigned char *)(& os) + 2UL) == 0U) && (unsigned int )*((unsigned char *)(& os) + 2UL) == 0U) && (((unsigned int )*((unsigned char *)(& ns) + 2UL) != 0U || (unsigned int )*((unsigned char *)(& ns) + 2UL) != 0U) || (unsigned int )*((unsigned char *)(& ns) + 2UL) != 0U)) {
< #line 1664
<     suspend_other_sg(mdev);
<   } else {
< 
<   }
< #line 1668
<   if ((unsigned int )*((unsigned short *)(& os) + 0UL) == 144U && (int )ns.ldv_39979.conn > 9) {
< #line 1669
<     drbd_send_state(mdev, ns);
<   } else {
< 
<   }
< #line 1671
<   if ((unsigned int )*((unsigned short *)(& os) + 0UL) != 352U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 352U) {
< #line 1672
<     drbd_send_state(mdev, ns);
<   } else {
< 
<   }
< #line 1675
<   if (((unsigned int )*((unsigned short *)(& os) + 0UL) != 192U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 192U) || ((unsigned int )*((unsigned short *)(& os) + 0UL) != 176U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 176U)) {
< #line 1678
<     drbd_queue_bitmap_io(mdev, & drbd_bmio_set_n_write, & abw_start_sync, (char *)"set_n_write from StartingSync",
<                          BM_LOCKED_TEST_ALLOWED);
<   } else {
< 
<   }
< #line 1683
<   if ((((int )os.ldv_39979.conn <= 9 && (int )ns.ldv_39979.conn <= 9) && (int )os.ldv_39979.disk > 4) && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 8U) {
< #line 1686
<     drbd_queue_bitmap_io(mdev, & drbd_bmio_set_n_write, 0, (char *)"set_n_write from invalidate",
<                          BM_LOCKED_MASK);
<   } else {
< 
<   }
< #line 1691
<   if ((unsigned int )*((unsigned char *)(& os) + 1UL) != 4U && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 4U) {
< #line 1696
<     if ((unsigned long )mdev->ldev != (unsigned long )((struct drbd_backing_dev *)0)) {
< #line 1697
<       eh = (enum drbd_io_error_p )(mdev->ldev)->dc.on_io_error;
< #line 1705
<       if ((unsigned int )eh == 1U) {
< #line 1705
<         tmp___6 = drbd_test_flag(mdev, WAS_IO_ERROR);
< #line 1705
<         if (tmp___6 != 0) {
< #line 1706
<           drbd_khelper(mdev, (char *)"local-io-error");
<         } else {
< 
<         }
<       } else {
< 
<       }
< #line 1721
<       tmp___7 = drbd_test_flag(mdev, FORCE_DETACH);
< #line 1721
<       if (tmp___7 != 0) {
< #line 1722
<         tl_abort_disk_io(mdev);
<       } else {
< 
<       }
< #line 1727
<       if ((unsigned int )*((unsigned char *)mdev + 2277UL) != 4U) {
< #line 1728
<         tmp___8 = drbd_disk_str((enum drbd_disk_state )mdev->state.ldv_39979.disk);
< #line 1728
<         dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: disk is %s during detach\n",
<                 tmp___8);
<       } else {
< 
<       }
< #line 1732
<       if ((int )ns.ldv_39979.conn > 9) {
< #line 1733
<         drbd_send_state(mdev, ns);
<       } else {
< 
<       }
< #line 1735
<       drbd_rs_cancel_all(mdev);
< #line 1740
<       drbd_md_sync(mdev);
<     } else {
< 
<     }
< #line 1742
<     put_ldev(mdev);
<   } else {
< 
<   }
< #line 1748
<   if ((unsigned int )*((unsigned char *)(& os) + 1UL) != 0U && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 0U) {
< #line 1751
<     if ((unsigned int )*((unsigned char *)mdev + 2277UL) != 0U) {
< #line 1752
<       tmp___9 = drbd_disk_str((enum drbd_disk_state )mdev->state.ldv_39979.disk);
< #line 1752
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: disk is %s while going diskless\n",
<               tmp___9);
<     } else {
< 
<     }
< #line 1756
<     if ((int )ns.ldv_39979.conn > 9) {
< #line 1757
<       drbd_send_state(mdev, ns);
<     } else {
< 
<     }
< #line 1761
<     put_ldev(mdev);
<   } else {
< 
<   }
< #line 1765
<   if (((unsigned int )*((unsigned char *)(& os) + 1UL) == 16U && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 8U) && (int )ns.ldv_39979.conn > 9) {
< #line 1766
<     drbd_send_state(mdev, ns);
<   } else {
< 
<   }
< #line 1769
<   if ((int )ns.ldv_39979.disk > 3 && (int )ns.ldv_39979.pdsk > 3) {
< #line 1769
<     tmp___10 = drbd_test_and_clear_flag(mdev, RESYNC_AFTER_NEG);
< #line 1769
<     if (tmp___10 != 0) {
< #line 1771
<       if ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 160U) {
< #line 1772
<         resync_after_online_grow(mdev);
<       } else {
< 
<       }
<     } else {
< 
<     }
<   } else {
< 
<   }
< #line 1776
<   if ((((int )os.ldv_39979.conn > 10 && (int )ns.ldv_39979.conn <= 10) || ((unsigned int )*((unsigned char *)(& os) + 2UL) != 0U && (unsigned int )*((unsigned char *)(& ns) + 2UL) == 0U)) || ((unsigned int )*((unsigned char *)(& os) + 2UL) != 0U && (unsigned int )*((unsigned char *)(& ns) + 2UL) == 0U)) {
< #line 1779
<     resume_next_sg(mdev);
<   } else {
< 
<   }
< #line 1783
<   if (((int )os.ldv_39979.disk <= 7 && (int )os.ldv_39979.conn > 15) && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 160U) {
< #line 1784
<     drbd_send_state(mdev, ns);
<   } else {
< 
<   }
< #line 1789
<   if (((unsigned int )*((unsigned short *)(& os) + 0UL) == 288U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 160U) && mdev->agreed_pro_version > 96) {
< #line 1791
<     drbd_send_state(mdev, ns);
<   } else {
< 
<   }
< #line 1794
<   if ((unsigned int )*((unsigned short *)(& os) + 0UL) == 144U && (unsigned int )*((unsigned short *)(& ns) + 0UL) != 144U) {
< #line 1795
<     drbd_clear_flag(mdev, STATE_SENT);
< #line 1796
<     __wake_up(& mdev->state_wait, 3U, 1, 0);
<   } else {
< 
<   }
< #line 1806
<   if ((int )os.ldv_39979.conn > 10 && (int )ns.ldv_39979.conn <= 10) {
< #line 1806
<     tmp___11 = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 1806
<     if (tmp___11 != 0) {
< #line 1807
<       drbd_queue_bitmap_io(mdev, & drbd_bm_write_copy_pages, 0, (char *)"write from resync_finished",
<                            BM_IS_LOCKED);
< #line 1809
<       put_ldev(mdev);
<     } else {
< 
<     }
<   } else {
< 
<   }
< #line 1813
<   if ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 0U) {
< #line 1813
<     tmp___12 = is_susp(ns);
< #line 1813
<     if (tmp___12 == 0) {
< #line 1813
<       if ((unsigned long )mdev->tl_hash != (unsigned long )((struct hlist_head *)0)) {
< #line 1814
<         drbd_free_tl_hash(mdev);
<       } else {
< 
<       }
<     } else {
< 
<     }
<   } else {
< 
<   }
< #line 1817
<   if ((unsigned int )*((unsigned short *)(& os) + 0UL) == 0U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 32U) {
< #line 1818
<     drbd_thread_start(& mdev->receiver);
<   } else {
< 
<   }
< #line 1822
<   if (((unsigned int )*((unsigned char *)(& ns) + 1UL) == 0U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 0U) && (unsigned int )*((unsigned char *)(& ns) + 0UL) == 2U) {
< #line 1825
<     if ((int )os.ldv_39979.aftr_isp != (int )ns.ldv_39979.aftr_isp) {
< #line 1826
<       resume_next_sg(mdev);
<     } else {
< 
<     }
< #line 1828
<     tmp___13 = drbd_test_flag(mdev, DEVICE_DYING);
< #line 1828
<     if (tmp___13 != 0) {
< #line 1829
<       drbd_thread_stop_nowait(& mdev->worker);
<     } else {
< 
<     }
<   } else {
< 
<   }
< #line 1832
<   drbd_md_sync(mdev);
< #line 1833
<   return;
< }
< }
< #line 1836 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static int drbd_thread_setup(void *arg ) 
< { 
<   struct drbd_thread *thi ;
<   struct drbd_conf *mdev ;
<   unsigned long flags ;
<   int retval ;
<   raw_spinlock_t *tmp ;
<   struct task_struct *tmp___0 ;
<   struct task_struct *tmp___1 ;
< 
<   {
< #line 1838
---
> #line 416
43710,43711c43355,43360
< #line 1839
<   mdev = thi->mdev;
---
> #line 417
>   tconn = thi->tconn;
> #line 421
>   tmp = get_current();
> #line 421
>   snprintf((char *)(& tmp->comm), 16UL, "drbd_%c_%s", (int )thi->name[0], (thi->tconn)->name);
43713c43362
< #line 1844
---
> #line 425
43715,43719c43364,43368
< #line 1846
<   tmp = spinlock_check(& thi->t_lock);
< #line 1846
<   flags = _raw_spin_lock_irqsave(tmp);
< #line 1858
---
> #line 427
>   tmp___0 = spinlock_check(& thi->t_lock);
> #line 427
>   flags = _raw_spin_lock_irqsave(tmp___0);
> #line 439
43721,43728c43370,43374
< #line 1859
<     tmp___0 = get_current();
< #line 1859
<     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Restarting %s\n",
<               (char *)(& tmp___0->comm));
< #line 1860
<     thi->t_state = Running;
< #line 1861
---
> #line 440
>     printk("\016d-con %s: Restarting %s thread\n", tconn->name, (char *)(& thi->name));
> #line 441
>     thi->t_state = RUNNING;
> #line 442
43730c43376
< #line 1862
---
> #line 443
43735c43381
< #line 1865
---
> #line 446
43737,43739c43383,43385
< #line 1866
<   thi->t_state = None;
< #line 1867
---
> #line 447
>   thi->t_state = NONE;
> #line 448
43741,43743c43387,43389
< #line 1868
<   complete(& thi->stop);
< #line 1869
---
> #line 449
>   complete_all(& thi->stop);
> #line 450
43745c43391
< #line 1871
---
> #line 452
43747,43750c43393,43397
< #line 1871
<   _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Terminating %s\n",
<             (char *)(& tmp___1->comm));
< #line 1874
---
> #line 452
>   printk("\016d-con %s: Terminating %s\n", tconn->name, (char *)(& tmp___1->comm));
> #line 456
>   kref_put(& tconn->kref, & conn_destroy);
> #line 457
43752c43399
< #line 1875
---
> #line 458
43756,43757c43403,43405
< #line 1878 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static void drbd_thread_init(struct drbd_conf *mdev , struct drbd_thread *thi , int (*func)(struct drbd_thread * ) ) 
---
> #line 461 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> static void drbd_thread_init(struct drbd_tconn *tconn , struct drbd_thread *thi ,
>                              int (*func)(struct drbd_thread * ) , char *name ) 
43762c43410
< #line 1881
---
> #line 464
43764c43412
< #line 1881
---
> #line 464
43766c43414
< #line 1882
---
> #line 465
43768,43770c43416,43418
< #line 1883
<   thi->t_state = None;
< #line 1884
---
> #line 466
>   thi->t_state = NONE;
> #line 467
43772,43774c43420,43424
< #line 1885
<   thi->mdev = mdev;
< #line 1886
---
> #line 468
>   thi->tconn = tconn;
> #line 469
>   strncpy((char *)(& thi->name), (char const   *)name, 9UL);
> #line 470
43778c43428
< #line 1888 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 472 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
43781c43431
<   struct drbd_conf *mdev ;
---
>   struct drbd_tconn *tconn ;
43784d43433
<   char const   *me ;
43791,43793c43440,43442
<   unsigned int tmp___5 ;
<   long tmp___6 ;
<   raw_spinlock_t *tmp___7 ;
---
>   long tmp___5 ;
>   raw_spinlock_t *tmp___6 ;
>   struct task_struct *tmp___7 ;
43795d43443
<   struct task_struct *tmp___9 ;
43798,43802c43446,43448
< #line 1890
<   mdev = thi->mdev;
< #line 1894
<   me = (unsigned long )(& mdev->receiver) != (unsigned long )thi ? ((unsigned long )(& mdev->asender) != (unsigned long )thi ? ((unsigned long )(& mdev->worker) == (unsigned long )thi ? "worker" : "NONSENSE") : "asender") : "receiver";
< #line 1901
---
> #line 474
>   tconn = thi->tconn;
> #line 480
43804c43450
< #line 1901
---
> #line 480
43806c43452
< #line 1903
---
> #line 482
43809c43455
< #line 1905
---
> #line 484
43811c43457
< #line 1905
---
> #line 484
43813,43816c43459,43462
< #line 1905
<   _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Starting %s thread (from %s [%d])\n",
<             me, (char *)(& tmp___1->comm), tmp___0->pid);
< #line 1909
---
> #line 484
>   printk("\016d-con %s: Starting %s thread (from %s [%d])\n", tconn->name, (char *)(& thi->name),
>          (char *)(& tmp___1->comm), tmp___0->pid);
> #line 488
43818c43464
< #line 1909
---
> #line 488
43820c43466
< #line 1909
---
> #line 488
43823c43469
< #line 1909
---
> #line 488
43826c43472
< #line 1909
---
> #line 488
43828,43830c43474,43476
< #line 1910
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Failed to get module reference in drbd_thread_start\n");
< #line 1911
---
> #line 489
>     printk("\vd-con %s: Failed to get module reference in drbd_thread_start\n", tconn->name);
> #line 490
43832c43478
< #line 1912
---
> #line 491
43837c43483,43485
< #line 1915
---
> #line 494
>   kref_get(& (thi->tconn)->kref);
> #line 496
43839,43848c43487
< #line 1916
<   if ((unsigned long )thi->task != (unsigned long )((struct task_struct *)0)) {
< #line 1916
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( thi->task == NULL ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             1916);
<   } else {
< 
<   }
< #line 1917
---
> #line 497
43850,43852c43489,43491
< #line 1918
<   thi->t_state = Running;
< #line 1919
---
> #line 498
>   thi->t_state = RUNNING;
> #line 499
43854c43493
< #line 1920
---
> #line 500
43856c43495
< #line 1920
---
> #line 500
43858,43869c43497,43508
< #line 1922
<   tmp___5 = mdev_to_minor(mdev);
< #line 1922
<   nt = kthread_create_on_node(& drbd_thread_setup, (void *)thi, -1, "drbd%d_%s", tmp___5,
<                               me);
< #line 1925
<   tmp___6 = IS_ERR((void const   *)nt);
< #line 1925
<   if (tmp___6 != 0L) {
< #line 1926
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Couldn\'t start thread\n");
< #line 1928
---
> #line 502
>   nt = kthread_create_on_node(& drbd_thread_setup, (void *)thi, -1, "drbd_%c_%s",
>                               (int )thi->name[0], (thi->tconn)->name);
> #line 505
>   tmp___5 = IS_ERR((void const   *)nt);
> #line 505
>   if (tmp___5 != 0L) {
> #line 506
>     printk("\vd-con %s: Couldn\'t start thread\n", tconn->name);
> #line 508
>     kref_put(& tconn->kref, & conn_destroy);
> #line 509
43871c43510
< #line 1929
---
> #line 510
43876,43880c43515,43519
< #line 1931
<   tmp___7 = spinlock_check(& thi->t_lock);
< #line 1931
<   flags = _raw_spin_lock_irqsave(tmp___7);
< #line 1932
---
> #line 512
>   tmp___6 = spinlock_check(& thi->t_lock);
> #line 512
>   flags = _raw_spin_lock_irqsave(tmp___6);
> #line 513
43882,43884c43521,43523
< #line 1933
<   thi->t_state = Running;
< #line 1934
---
> #line 514
>   thi->t_state = RUNNING;
> #line 515
43886c43525
< #line 1935
---
> #line 516
43888,43889c43527,43528
< #line 1936
<   goto ldv_52332;
---
> #line 517
>   goto ldv_52588;
43891,43893c43530,43534
< #line 1938
<   thi->t_state = Restarting;
< #line 1939
---
> #line 519
>   thi->t_state = RESTARTING;
> #line 520
>   tmp___7 = get_current();
> #line 520
43895,43899c43536,43538
< #line 1939
<   tmp___9 = get_current();
< #line 1939
<   _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Restarting %s thread (from %s [%d])\n",
<             me, (char *)(& tmp___9->comm), tmp___8->pid);
---
> #line 520
>   printk("\016d-con %s: Restarting %s thread (from %s [%d])\n", tconn->name, (char *)(& thi->name),
>          (char *)(& tmp___8->comm), tmp___7->pid);
43903c43542
< #line 1945
---
> #line 526
43905,43906c43544,43545
< #line 1946
<   goto ldv_52332;
---
> #line 527
>   goto ldv_52588;
43908,43909c43547,43548
<   ldv_52332: ;
< #line 1949
---
>   ldv_52588: ;
> #line 530
43913c43552
< #line 1953 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 534 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
43922,43924c43561,43563
< #line 1957
<   ns = restart != 0 ? Restarting : Exiting;
< #line 1960
---
> #line 538
>   ns = restart != 0 ? RESTARTING : EXITING;
> #line 541
43926c43565
< #line 1960
---
> #line 541
43928c43567
< #line 1962
---
> #line 543
43930c43569
< #line 1963
---
> #line 544
43932c43571
< #line 1964
---
> #line 545
43934c43573
< #line 1965
---
> #line 546
43939c43578
< #line 1966
---
> #line 547
43944c43583
< #line 1969
---
> #line 550
43946c43585
< #line 1970
---
> #line 551
43948c43587
< #line 1971
---
> #line 552
43950c43589
< #line 1972
---
> #line 553
43955c43594
< #line 1975
---
> #line 556
43957c43596
< #line 1976
---
> #line 557
43959c43598
< #line 1977
---
> #line 558
43961c43600
< #line 1978
---
> #line 559
43963c43602
< #line 1978
---
> #line 559
43965c43604
< #line 1979
---
> #line 560
43973c43612
< #line 1983
---
> #line 563
43975c43614
< #line 1985
---
> #line 565
43977c43616
< #line 1986
---
> #line 566
43982c43621
< #line 1987
---
> #line 567
43986,43987c43625,43687
< #line 1997 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void drbd_calc_cpu_mask(struct drbd_conf *mdev ) 
---
> #line 569 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> static struct drbd_thread *drbd_task_to_thread(struct drbd_tconn *tconn , struct task_struct *task ) 
> { 
>   struct drbd_thread *thi ;
> 
>   {
> #line 571
>   thi = (unsigned long )tconn->receiver.task == (unsigned long )task ? & tconn->receiver : ((unsigned long )tconn->asender.task == (unsigned long )task ? & tconn->asender : ((unsigned long )tconn->worker.task == (unsigned long )task ? & tconn->worker : 0));
> #line 576
>   return (thi);
> }
> }
> #line 579 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> char *drbd_task_to_thread_name(struct drbd_tconn *tconn , struct task_struct *task ) 
> { 
>   struct drbd_thread *thi ;
>   struct drbd_thread *tmp ;
> 
>   {
> #line 581
>   tmp = drbd_task_to_thread(tconn, task);
> #line 581
>   thi = tmp;
> #line 582
>   return ((unsigned long )thi != (unsigned long )((struct drbd_thread *)0) ? (char *)(& thi->name) : (char *)(& task->comm));
> }
> }
> #line 585 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> int conn_lowest_minor(struct drbd_tconn *tconn ) 
> { 
>   struct drbd_conf *mdev ;
>   int vnr ;
>   int m ;
>   void *tmp ;
>   unsigned int tmp___0 ;
> 
>   {
> #line 588
>   vnr = 0;
> #line 590
>   rcu_read_lock___5();
> #line 591
>   tmp = idr_get_next(& tconn->volumes, & vnr);
> #line 591
>   mdev = (struct drbd_conf *)tmp;
> #line 592
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 592
>     tmp___0 = mdev_to_minor(mdev);
> #line 592
>     m = (int )tmp___0;
>   } else {
> #line 592
>     m = -1;
>   }
> #line 593
>   rcu_read_unlock___5();
> #line 595
>   return (m);
> }
> }
> #line 606 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> void drbd_calc_cpu_mask(struct drbd_tconn *tconn ) 
43992c43692
<   unsigned int tmp___0 ;
---
>   int tmp___0 ;
43998,44000c43698,43700
< #line 2002
<   tmp = cpumask_weight((struct cpumask  const  *)mdev->cpu_mask);
< #line 2002
---
> #line 611
>   tmp = cpumask_weight((struct cpumask  const  *)tconn->cpu_mask);
> #line 611
44002c43702
< #line 2003
---
> #line 612
44007,44009c43707,43709
< #line 2005
<   tmp___0 = mdev_to_minor(mdev);
< #line 2005
---
> #line 614
>   tmp___0 = conn_lowest_minor(tconn);
> #line 614
44011,44013c43711,43713
< #line 2005
<   ord = (int )(tmp___0 % tmp___1);
< #line 2006
---
> #line 614
>   ord = (int )((unsigned int )tmp___0 % tmp___1);
> #line 615
44015,44018c43715,43718
< #line 2006
<   goto ldv_52353;
<   ldv_52352: 
< #line 2007
---
> #line 615
>   goto ldv_52625;
>   ldv_52624: 
> #line 616
44020c43720
< #line 2007
---
> #line 616
44022c43722
< #line 2007
---
> #line 616
44024,44026c43724,43726
< #line 2008
<     cpumask_set_cpu((unsigned int )cpu, mdev->cpu_mask);
< #line 2009
---
> #line 617
>     cpumask_set_cpu((unsigned int )cpu, tconn->cpu_mask);
> #line 618
44031,44032c43731,43732
<   ldv_52353: 
< #line 2006
---
>   ldv_52625: 
> #line 615
44034c43734
< #line 2006
---
> #line 615
44036c43736
< #line 2006
---
> #line 615
44038,44039c43738,43739
< #line 2007
<     goto ldv_52352;
---
> #line 616
>     goto ldv_52624;
44043,44045c43743,43745
< #line 2013
<   cpumask_setall(mdev->cpu_mask);
< #line 2014
---
> #line 622
>   cpumask_setall(tconn->cpu_mask);
> #line 623
44049,44050c43749,43750
< #line 2023 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void drbd_thread_current_set_cpu(struct drbd_conf *mdev ) 
---
> #line 633 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> void drbd_thread_current_set_cpu(struct drbd_thread *thi ) 
44054,44055d43753
<   struct drbd_thread *thi ;
<   int _b ;
44058c43756
< #line 2025
---
> #line 635
44060c43758
< #line 2025
---
> #line 635
44062,44082c43760
< #line 2026
<   thi = (unsigned long )mdev->asender.task == (unsigned long )p ? & mdev->asender : ((unsigned long )mdev->receiver.task == (unsigned long )p ? & mdev->receiver : ((unsigned long )mdev->worker.task == (unsigned long )p ? & mdev->worker : 0));
< #line 2031
<   _b = (unsigned long )thi == (unsigned long )((struct drbd_thread *)0);
< #line 2031
<   if (_b != 0) {
< #line 2031
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_thread_current_set_cpu", (char *)"thi == NULL", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             2031);
<   } else {
< 
<   }
< #line 2031
<   if (_b != 0) {
< #line 2032
<     return;
<   } else {
< 
<   }
< #line 2033
---
> #line 637
44084c43762
< #line 2034
---
> #line 638
44089c43767
< #line 2035
---
> #line 639
44091,44093c43769,43771
< #line 2036
<   set_cpus_allowed_ptr(p, (struct cpumask  const  *)mdev->cpu_mask);
< #line 2037
---
> #line 640
>   set_cpus_allowed_ptr(p, (struct cpumask  const  *)(thi->tconn)->cpu_mask);
> #line 641
44097,44099c43775,43776
< #line 2041 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< int _drbd_send_cmd(struct drbd_conf *mdev , struct socket *sock , enum drbd_packets cmd ,
<                    struct p_header80 *h , size_t size , unsigned int msg_flags ) 
---
> #line 651 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> unsigned int drbd_header_size(struct drbd_tconn *tconn ) 
44101,44120d43777
<   int sent ;
<   int ok ;
<   int _b ;
<   int _b___0 ;
<   __u16 tmp ;
<   __u16 tmp___0 ;
<   char const   *tmp___1 ;
<   struct task_struct *tmp___2 ;
<   int tmp___3 ;
< 
<   {
< #line 2047
<   _b = (unsigned long )h == (unsigned long )((struct p_header80 *)0);
< #line 2047
<   if (_b != 0) {
< #line 2047
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "_drbd_send_cmd", (char *)"!h", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             2047);
<   } else {
44122,44127d43778
<   }
< #line 2047
<   if (_b != 0) {
< #line 2047
<     return (0);
<   } else {
44129,44137c43780,43784
<   }
< #line 2048
<   _b___0 = size == 0UL;
< #line 2048
<   if (_b___0 != 0) {
< #line 2048
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "_drbd_send_cmd", (char *)"!size", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             2048);
---
>   {
> #line 653
>   if (tconn->agreed_pro_version > 99) {
> #line 655
>     return (16U);
44139c43786,43787
< 
---
> #line 660
>     return (8U);
44141,44145c43789,43796
< #line 2048
<   if (_b___0 != 0) {
< #line 2048
<     return (0);
<   } else {
---
> }
> }
> #line 664 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> static unsigned int prepare_header80(struct p_header80 *h , enum drbd_packet cmd ,
>                                      int size ) 
> { 
>   __u16 tmp ;
>   __u16 tmp___0 ;
44147,44148c43798,43799
<   }
< #line 2050
---
>   {
> #line 666
44150c43801
< #line 2051
---
> #line 667
44152c43803
< #line 2051
---
> #line 667
44154,44156c43805,43807
< #line 2052
<   tmp___0 = __fswab16((int )((unsigned int )((__u16 )size) - 8U));
< #line 2052
---
> #line 668
>   tmp___0 = __fswab16((int )((__u16 )size));
> #line 668
44158,44175c43809,43818
< #line 2054
<   sent = drbd_send(mdev, sock, (void *)h, size, msg_flags);
< #line 2056
<   ok = (size_t )sent == size;
< #line 2057
<   if (ok == 0) {
< #line 2057
<     tmp___2 = get_current();
< #line 2057
<     tmp___3 = signal_pending(tmp___2);
< #line 2057
<     if (tmp___3 == 0) {
< #line 2058
<       tmp___1 = cmdname(cmd);
< #line 2058
<       dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "short sent %s size=%d sent=%d\n",
<                tmp___1, (int )size, sent);
<     } else {
---
> #line 669
>   return (8U);
> }
> }
> #line 672 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> static unsigned int prepare_header95(struct p_header95 *h , enum drbd_packet cmd ,
>                                      int size ) 
> { 
>   __u16 tmp ;
>   __u32 tmp___0 ;
44177,44178c43820,43870
<     }
<   } else {
---
>   {
> #line 674
>   h->magic = 23171U;
> #line 675
>   tmp = __fswab16((int )((__u16 )cmd));
> #line 675
>   h->command = tmp;
> #line 676
>   tmp___0 = __fswab32((__u32 )size);
> #line 676
>   h->length = tmp___0;
> #line 677
>   return (8U);
> }
> }
> #line 680 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> static unsigned int prepare_header100(struct p_header100 *h , enum drbd_packet cmd ,
>                                       int size , int vnr ) 
> { 
>   __u16 tmp ;
>   __u16 tmp___0 ;
>   __u32 tmp___1 ;
> 
>   {
> #line 683
>   h->magic = 552345734U;
> #line 684
>   tmp = __fswab16((int )((__u16 )vnr));
> #line 684
>   h->volume = tmp;
> #line 685
>   tmp___0 = __fswab16((int )((__u16 )cmd));
> #line 685
>   h->command = tmp___0;
> #line 686
>   tmp___1 = __fswab32((__u32 )size);
> #line 686
>   h->length = tmp___1;
> #line 687
>   h->pad = 0U;
> #line 688
>   return (16U);
> }
> }
> #line 691 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> static unsigned int prepare_header(struct drbd_tconn *tconn , int vnr , void *buffer ,
>                                    enum drbd_packet cmd , int size ) 
> { 
>   unsigned int tmp ;
>   unsigned int tmp___0 ;
>   unsigned int tmp___1 ;
44179a43872,43890
>   {
> #line 694
>   if (tconn->agreed_pro_version > 99) {
> #line 695
>     tmp = prepare_header100((struct p_header100 *)buffer, cmd, size, vnr);
> #line 695
>     return (tmp);
>   } else
> #line 696
>   if (tconn->agreed_pro_version > 94 && (unsigned int )size > 32768U) {
> #line 698
>     tmp___0 = prepare_header95((struct p_header95 *)buffer, cmd, size);
> #line 698
>     return (tmp___0);
>   } else {
> #line 700
>     tmp___1 = prepare_header80((struct p_header80 *)buffer, cmd, size);
> #line 700
>     return (tmp___1);
44181,44182d43891
< #line 2060
<   return (ok);
44185,44187c43894,43895
< #line 2066 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< int drbd_send_cmd(struct drbd_conf *mdev , int use_data_socket , enum drbd_packets cmd ,
<                   struct p_header80 *h , size_t size ) 
---
> #line 703 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> static void *__conn_prepare_command(struct drbd_tconn *tconn , struct drbd_socket *sock ) 
44189,44191c43897
<   int ok ;
<   struct socket *sock ;
<   long tmp ;
---
>   unsigned int tmp ;
44194,44201c43900,43903
< #line 2069
<   ok = 0;
< #line 2072
<   if (use_data_socket != 0) {
< #line 2073
<     ldv_mutex_lock_209(& mdev->data.mutex);
< #line 2074
<     sock = mdev->data.socket;
---
> #line 706
>   if ((unsigned long )sock->socket == (unsigned long )((struct socket *)0)) {
> #line 707
>     return (0);
44203,44206c43905
< #line 2076
<     ldv_mutex_lock_210(& mdev->meta.mutex);
< #line 2077
<     sock = mdev->meta.socket;
---
> 
44208,44214c43907,43926
< #line 2082
<   tmp = __builtin_expect((unsigned long )sock != (unsigned long )((struct socket *)0),
<                          1L);
< #line 2082
<   if (tmp != 0L) {
< #line 2083
<     ok = _drbd_send_cmd(mdev, sock, cmd, h, size, 0U);
---
> #line 708
>   tmp = drbd_header_size(tconn);
> #line 708
>   return (sock->sbuf + (unsigned long )tmp);
> }
> }
> #line 711 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> void *conn_prepare_command(struct drbd_tconn *tconn , struct drbd_socket *sock ) 
> { 
>   void *p ;
> 
>   {
> #line 715
>   ldv_mutex_lock_204(& sock->mutex);
> #line 716
>   p = __conn_prepare_command(tconn, sock);
> #line 717
>   if ((unsigned long )p == (unsigned long )((void *)0)) {
> #line 718
>     ldv_mutex_unlock_205(& sock->mutex);
44218,44221c43930,43967
< #line 2085
<   if (use_data_socket != 0) {
< #line 2086
<     ldv_mutex_unlock_211(& mdev->data.mutex);
---
> #line 720
>   return (p);
> }
> }
> #line 723 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> void *drbd_prepare_command(struct drbd_conf *mdev , struct drbd_socket *sock ) 
> { 
>   void *tmp ;
> 
>   {
> #line 725
>   tmp = conn_prepare_command(mdev->tconn, sock);
> #line 725
>   return (tmp);
> }
> }
> #line 728 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> static int __send_command(struct drbd_tconn *tconn , int vnr , struct drbd_socket *sock ,
>                           enum drbd_packet cmd , unsigned int header_size , void *data ,
>                           unsigned int size ) 
> { 
>   int msg_flags ;
>   int err ;
>   unsigned int tmp ;
> 
>   {
> #line 743
>   msg_flags = (unsigned long )data != (unsigned long )((void *)0) ? 32768 : 0;
> #line 745
>   tmp = prepare_header(tconn, vnr, sock->sbuf, cmd, (int )(header_size + size));
> #line 745
>   header_size = tmp + header_size;
> #line 747
>   err = drbd_send_all(tconn, sock->socket, sock->sbuf, (size_t )header_size, (unsigned int )msg_flags);
> #line 749
>   if ((unsigned long )data != (unsigned long )((void *)0) && err == 0) {
> #line 750
>     err = drbd_send_all(tconn, sock->socket, data, (size_t )size, 0U);
44223,44224c43969
< #line 2088
<     ldv_mutex_unlock_212(& mdev->meta.mutex);
---
> 
44226,44227c43971,43972
< #line 2089
<   return (ok);
---
> #line 751
>   return (err);
44230,44231c43975,43978
< #line 2092 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< int drbd_send_cmd2(struct drbd_conf *mdev , enum drbd_packets cmd , char *data , size_t size ) 
---
> #line 754 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> static int __conn_send_command(struct drbd_tconn *tconn , struct drbd_socket *sock ,
>                                enum drbd_packet cmd , unsigned int header_size , void *data ,
>                                unsigned int size ) 
44233,44240c43980
<   struct p_header80 h ;
<   int ok ;
<   __u16 tmp ;
<   __u16 tmp___0 ;
<   int tmp___1 ;
<   int tmp___2 ;
<   int tmp___3 ;
<   int tmp___4 ;
---
>   int tmp ;
44243,44258c43983,44034
< #line 2098
<   h.magic = 1728214147U;
< #line 2099
<   tmp = __fswab16((int )((__u16 )cmd));
< #line 2099
<   h.command = tmp;
< #line 2100
<   tmp___0 = __fswab16((int )((__u16 )size));
< #line 2100
<   h.length = tmp___0;
< #line 2102
<   tmp___1 = drbd_get_data_sock___0(mdev);
< #line 2102
<   if (tmp___1 == 0) {
< #line 2103
<     return (0);
---
> #line 758
>   tmp = __send_command(tconn, 0, sock, cmd, header_size, data, size);
> #line 758
>   return (tmp);
> }
> }
> #line 761 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> int conn_send_command(struct drbd_tconn *tconn , struct drbd_socket *sock , enum drbd_packet cmd ,
>                       unsigned int header_size , void *data , unsigned int size ) 
> { 
>   int err ;
> 
>   {
> #line 767
>   err = __conn_send_command(tconn, sock, cmd, header_size, data, size);
> #line 768
>   ldv_mutex_unlock_206(& sock->mutex);
> #line 769
>   return (err);
> }
> }
> #line 772 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> int drbd_send_command(struct drbd_conf *mdev , struct drbd_socket *sock , enum drbd_packet cmd ,
>                       unsigned int header_size , void *data , unsigned int size ) 
> { 
>   int err ;
> 
>   {
> #line 778
>   err = __send_command(mdev->tconn, mdev->vnr, sock, cmd, header_size, data, size);
> #line 780
>   ldv_mutex_unlock_207(& sock->mutex);
> #line 781
>   return (err);
> }
> }
> #line 784 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> int drbd_send_ping(struct drbd_tconn *tconn ) 
> { 
>   struct drbd_socket *sock ;
>   void *tmp ;
>   int tmp___0 ;
> 
>   {
> #line 788
>   sock = & tconn->meta;
> #line 789
>   tmp = conn_prepare_command(tconn, sock);
> #line 789
>   if ((unsigned long )tmp == (unsigned long )((void *)0)) {
> #line 790
>     return (-5);
44262,44277c44038,44059
< #line 2105
<   tmp___2 = drbd_send(mdev, mdev->data.socket, (void *)(& h), 8UL, 0U);
< #line 2105
<   ok = tmp___2 == 8;
< #line 2107
<   if (ok != 0) {
< #line 2107
<     tmp___3 = drbd_send(mdev, mdev->data.socket, (void *)data, size, 0U);
< #line 2107
<     if ((size_t )tmp___3 == size) {
< #line 2107
<       tmp___4 = 1;
<     } else {
< #line 2107
<       tmp___4 = 0;
<     }
---
> #line 791
>   tmp___0 = conn_send_command(tconn, sock, P_PING, 0U, 0, 0U);
> #line 791
>   return (tmp___0);
> }
> }
> #line 794 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> int drbd_send_ping_ack(struct drbd_tconn *tconn ) 
> { 
>   struct drbd_socket *sock ;
>   void *tmp ;
>   int tmp___0 ;
> 
>   {
> #line 798
>   sock = & tconn->meta;
> #line 799
>   tmp = conn_prepare_command(tconn, sock);
> #line 799
>   if ((unsigned long )tmp == (unsigned long )((void *)0)) {
> #line 800
>     return (-5);
44279,44280c44061
< #line 2107
<     tmp___4 = 0;
---
> 
44282,44287c44063,44066
< #line 2107
<   ok = tmp___4;
< #line 2110
<   drbd_put_data_sock___0(mdev);
< #line 2112
<   return (ok);
---
> #line 801
>   tmp___0 = conn_send_command(tconn, sock, P_PING_ACK, 0U, 0, 0U);
> #line 801
>   return (tmp___0);
44290,44291c44069,44070
< #line 2115 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< int drbd_send_sync_param(struct drbd_conf *mdev , struct syncer_conf *sc ) 
---
> #line 804 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> int drbd_send_sync_param(struct drbd_conf *mdev ) 
44292a44072
>   struct drbd_socket *sock ;
44294d44073
<   struct socket *sock ;
44296d44074
<   int rv ;
44298c44076,44081
<   size_t tmp ;
---
>   enum drbd_packet cmd ;
>   struct net_conf *nc ;
>   struct disk_conf *dc ;
>   void *tmp ;
>   struct net_conf *_________p1 ;
>   bool __warned ;
44300,44306c44083,44091
<   enum drbd_packets cmd ;
<   __u32 tmp___1 ;
<   __u32 tmp___2 ;
<   __u32 tmp___3 ;
<   __u32 tmp___4 ;
<   __u32 tmp___5 ;
<   long tmp___6 ;
---
>   int tmp___1 ;
>   size_t tmp___2 ;
>   int tmp___3 ;
>   struct disk_conf *_________p1___0 ;
>   bool __warned___0 ;
>   int tmp___4 ;
>   int tmp___5 ;
>   int tmp___6 ;
>   int tmp___7 ;
44309,44311c44094,44134
< #line 2120
<   apv = mdev->agreed_pro_version;
< #line 2122
---
> #line 809
>   apv = (mdev->tconn)->agreed_pro_version;
> #line 814
>   sock = & (mdev->tconn)->data;
> #line 815
>   tmp = drbd_prepare_command(mdev, sock);
> #line 815
>   p = (struct p_rs_param_95 *)tmp;
> #line 816
>   if ((unsigned long )p == (unsigned long )((struct p_rs_param_95 *)0)) {
> #line 817
>     return (-5);
>   } else {
> 
>   }
> #line 819
>   rcu_read_lock___5();
> #line 820
>   _________p1 = *((struct net_conf * volatile  *)(& (mdev->tconn)->net_conf));
> #line 820
>   tmp___0 = debug_lockdep_rcu_enabled();
> #line 820
>   if (tmp___0 != 0 && ! __warned) {
> #line 820
>     tmp___1 = rcu_read_lock_held();
> #line 820
>     if (tmp___1 == 0 && 1) {
> #line 820
>       __warned = 1;
> #line 820
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
>                              820, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 820
>   nc = _________p1;
> #line 822
44313c44136
< #line 2122
---
> #line 822
44315,44318c44138,44141
< #line 2122
<       tmp = strlen((char const   *)(& mdev->sync_conf.verify_alg));
< #line 2122
<       tmp___0 = (int )((unsigned int )tmp + 13U);
---
> #line 822
>       tmp___2 = strlen((char const   *)(& nc->verify_alg));
> #line 822
>       tmp___3 = (int )((unsigned int )tmp___2 + 5U);
44320,44321c44143,44144
< #line 2122
<       tmp___0 = apv <= 94 ? 140 : 156;
---
> #line 822
>       tmp___3 = apv <= 94 ? 132 : 148;
44323,44324c44146,44147
< #line 2122
<     size = tmp___0;
---
> #line 822
>     size = tmp___3;
44326,44327c44149,44150
< #line 2122
<     size = 12;
---
> #line 822
>     size = 4;
44329,44368c44152,44175
< #line 2131
<   ldv_mutex_lock_213(& mdev->data.mutex);
< #line 2132
<   sock = mdev->data.socket;
< #line 2134
<   tmp___6 = __builtin_expect((unsigned long )sock != (unsigned long )((struct socket *)0),
<                              1L);
< #line 2134
<   if (tmp___6 != 0L) {
< #line 2135
<     cmd = apv > 88 ? P_SYNC_PARAM89 : P_SYNC_PARAM;
< #line 2137
<     p = & mdev->data.sbuf.rs_param_95;
< #line 2140
<     memset((void *)(& p->verify_alg), 0, 128UL);
< #line 2142
<     tmp___1 = __fswab32((__u32 )sc->rate);
< #line 2142
<     p->rate = tmp___1;
< #line 2143
<     tmp___2 = __fswab32((__u32 )sc->c_plan_ahead);
< #line 2143
<     p->c_plan_ahead = tmp___2;
< #line 2144
<     tmp___3 = __fswab32((__u32 )sc->c_delay_target);
< #line 2144
<     p->c_delay_target = tmp___3;
< #line 2145
<     tmp___4 = __fswab32((__u32 )sc->c_fill_target);
< #line 2145
<     p->c_fill_target = tmp___4;
< #line 2146
<     tmp___5 = __fswab32((__u32 )sc->c_max_rate);
< #line 2146
<     p->c_max_rate = tmp___5;
< #line 2148
<     if (apv > 87) {
< #line 2149
<       strcpy((char *)(& p->verify_alg), (char const   *)(& mdev->sync_conf.verify_alg));
<     } else {
---
> #line 828
>   cmd = apv > 88 ? P_SYNC_PARAM89 : P_SYNC_PARAM;
> #line 831
>   memset((void *)(& p->verify_alg), 0, 128UL);
> #line 833
>   tmp___6 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 833
>   if (tmp___6 != 0) {
> #line 834
>     _________p1___0 = *((struct disk_conf * volatile  *)(& (mdev->ldev)->disk_conf));
> #line 834
>     tmp___4 = debug_lockdep_rcu_enabled();
> #line 834
>     if (tmp___4 != 0 && ! __warned___0) {
> #line 834
>       tmp___5 = rcu_read_lock_held();
> #line 834
>       if (tmp___5 == 0 && 1) {
> #line 834
>         __warned___0 = 1;
> #line 834
>         lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
>                                834, "suspicious rcu_dereference_check() usage");
>       } else {
44370,44374c44177
<     }
< #line 2150
<     if (apv > 88) {
< #line 2151
<       strcpy((char *)(& p->csums_alg), (char const   *)(& mdev->sync_conf.csums_alg));
---
>       }
44378,44379c44181,44194
< #line 2153
<     rv = _drbd_send_cmd(mdev, sock, cmd, & p->head, (size_t )size, 0U);
---
> #line 834
>     dc = _________p1___0;
> #line 835
>     p->resync_rate = __fswab32(dc->resync_rate);
> #line 836
>     p->c_plan_ahead = __fswab32(dc->c_plan_ahead);
> #line 837
>     p->c_delay_target = __fswab32(dc->c_delay_target);
> #line 838
>     p->c_fill_target = __fswab32(dc->c_fill_target);
> #line 839
>     p->c_max_rate = __fswab32(dc->c_max_rate);
> #line 840
>     put_ldev(mdev);
44381,44382c44196,44205
< #line 2155
<     rv = 0;
---
> #line 842
>     p->resync_rate = 4194304000U;
> #line 843
>     p->c_plan_ahead = 335544320U;
> #line 844
>     p->c_delay_target = 167772160U;
> #line 845
>     p->c_fill_target = 1677721600U;
> #line 846
>     p->c_max_rate = 9437440U;
44384,44387c44207,44226
< #line 2157
<   ldv_mutex_unlock_214(& mdev->data.mutex);
< #line 2159
<   return (rv);
---
> #line 849
>   if (apv > 87) {
> #line 850
>     strcpy((char *)(& p->verify_alg), (char const   *)(& nc->verify_alg));
>   } else {
> 
>   }
> #line 851
>   if (apv > 88) {
> #line 852
>     strcpy((char *)(& p->csums_alg), (char const   *)(& nc->csums_alg));
>   } else {
> 
>   }
> #line 853
>   rcu_read_unlock___5();
> #line 855
>   tmp___7 = drbd_send_command(mdev, sock, cmd, (unsigned int )size, 0, 0U);
> #line 855
>   return (tmp___7);
44390,44391c44229,44230
< #line 2162 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< int drbd_send_protocol(struct drbd_conf *mdev ) 
---
> #line 858 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> int __drbd_send_protocol(struct drbd_tconn *tconn , enum drbd_packet cmd ) 
44392a44232
>   struct drbd_socket *sock ;
44393a44234
>   struct net_conf *nc ;
44396,44400c44237,44242
<   int rv ;
<   size_t tmp ;
<   void *tmp___0 ;
<   __u32 tmp___1 ;
<   __u32 tmp___2 ;
---
>   void *tmp ;
>   struct net_conf *_________p1 ;
>   bool __warned ;
>   int tmp___0 ;
>   int tmp___1 ;
>   size_t tmp___2 ;
44403,44404c44245
<   __u32 tmp___5 ;
<   __u32 tmp___6 ;
---
>   int tmp___5 ;
44407,44414c44248,44257
< #line 2167
<   size = 32;
< #line 2169
<   if (mdev->agreed_pro_version > 86) {
< #line 2170
<     tmp = strlen((char const   *)(& (mdev->net_conf)->integrity_alg));
< #line 2170
<     size = (int )(((unsigned int )tmp + (unsigned int )size) + 1U);
---
> #line 865
>   sock = & tconn->data;
> #line 866
>   tmp = __conn_prepare_command(tconn, sock);
> #line 866
>   p = (struct p_protocol *)tmp;
> #line 867
>   if ((unsigned long )p == (unsigned long )((struct p_protocol *)0)) {
> #line 868
>     return (-5);
44418,44425c44261,44280
< #line 2174
<   tmp___0 = kmalloc((size_t )size, 16U);
< #line 2174
<   p = (struct p_protocol *)tmp___0;
< #line 2175
<   if ((unsigned long )p == (unsigned long )((struct p_protocol *)0)) {
< #line 2176
<     return (0);
---
> #line 870
>   rcu_read_lock___5();
> #line 871
>   _________p1 = *((struct net_conf * volatile  *)(& tconn->net_conf));
> #line 871
>   tmp___0 = debug_lockdep_rcu_enabled();
> #line 871
>   if (tmp___0 != 0 && ! __warned) {
> #line 871
>     tmp___1 = rcu_read_lock_held();
> #line 871
>     if (tmp___1 == 0 && 1) {
> #line 871
>       __warned = 1;
> #line 871
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
>                              871, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
44429,44449c44284,44322
< #line 2178
<   tmp___1 = __fswab32((__u32 )(mdev->net_conf)->wire_protocol);
< #line 2178
<   p->protocol = tmp___1;
< #line 2179
<   tmp___2 = __fswab32((__u32 )(mdev->net_conf)->after_sb_0p);
< #line 2179
<   p->after_sb_0p = tmp___2;
< #line 2180
<   tmp___3 = __fswab32((__u32 )(mdev->net_conf)->after_sb_1p);
< #line 2180
<   p->after_sb_1p = tmp___3;
< #line 2181
<   tmp___4 = __fswab32((__u32 )(mdev->net_conf)->after_sb_2p);
< #line 2181
<   p->after_sb_2p = tmp___4;
< #line 2182
<   tmp___5 = __fswab32((__u32 )(mdev->net_conf)->two_primaries);
< #line 2182
<   p->two_primaries = tmp___5;
< #line 2184
---
> #line 871
>   nc = _________p1;
> #line 873
>   if ((int )((signed char )nc->tentative) != 0 && tconn->agreed_pro_version <= 91) {
> #line 874
>     rcu_read_unlock___5();
> #line 875
>     ldv_mutex_unlock_208(& sock->mutex);
> #line 876
>     printk("\vd-con %s: --dry-run is not supported by peer", tconn->name);
> #line 877
>     return (-95);
>   } else {
> 
>   }
> #line 880
>   size = 24;
> #line 881
>   if (tconn->agreed_pro_version > 86) {
> #line 882
>     tmp___2 = strlen((char const   *)(& nc->integrity_alg));
> #line 882
>     size = (int )(((unsigned int )tmp___2 + (unsigned int )size) + 1U);
>   } else {
> 
>   }
> #line 884
>   p->protocol = __fswab32(nc->wire_protocol);
> #line 885
>   p->after_sb_0p = __fswab32(nc->after_sb_0p);
> #line 886
>   p->after_sb_1p = __fswab32(nc->after_sb_1p);
> #line 887
>   p->after_sb_2p = __fswab32(nc->after_sb_2p);
> #line 888
>   tmp___3 = __fswab32((__u32 )nc->two_primaries);
> #line 888
>   p->two_primaries = tmp___3;
> #line 889
44451,44453c44324,44326
< #line 2185
<   if ((unsigned int )*((unsigned char *)mdev->net_conf + 540UL) != 0U) {
< #line 2186
---
> #line 890
>   if ((int )((signed char )nc->discard_my_data) != 0) {
> #line 891
44458,44471c44331,44334
< #line 2187
<   if ((unsigned int )*((unsigned char *)mdev->net_conf + 540UL) != 0U) {
< #line 2188
<     if (mdev->agreed_pro_version > 91) {
< #line 2189
<       cf = cf | 2;
<     } else {
< #line 2191
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "--dry-run is not supported by peer");
< #line 2192
<       kfree((void const   *)p);
< #line 2193
<       return (-1);
<     }
---
> #line 892
>   if ((int )((signed char )nc->tentative) != 0) {
> #line 893
>     cf = cf | 2;
44475,44482c44338,44345
< #line 2196
<   tmp___6 = __fswab32((__u32 )cf);
< #line 2196
<   p->conn_flags = tmp___6;
< #line 2198
<   if (mdev->agreed_pro_version > 86) {
< #line 2199
<     strcpy((char *)(& p->integrity_alg), (char const   *)(& (mdev->net_conf)->integrity_alg));
---
> #line 894
>   tmp___4 = __fswab32((__u32 )cf);
> #line 894
>   p->conn_flags = tmp___4;
> #line 896
>   if (tconn->agreed_pro_version > 86) {
> #line 897
>     strcpy((char *)(& p->integrity_alg), (char const   *)(& nc->integrity_alg));
44486,44491c44349,44370
< #line 2201
<   rv = drbd_send_cmd(mdev, 1, P_PROTOCOL, (struct p_header80 *)p, (size_t )size);
< #line 2203
<   kfree((void const   *)p);
< #line 2204
<   return (rv);
---
> #line 898
>   rcu_read_unlock___5();
> #line 900
>   tmp___5 = __conn_send_command(tconn, sock, cmd, (unsigned int )size, 0, 0U);
> #line 900
>   return (tmp___5);
> }
> }
> #line 903 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> int drbd_send_protocol(struct drbd_tconn *tconn ) 
> { 
>   int err ;
> 
>   {
> #line 907
>   ldv_mutex_lock_209(& tconn->data.mutex);
> #line 908
>   err = __drbd_send_protocol(tconn, P_PROTOCOL);
> #line 909
>   ldv_mutex_unlock_210(& tconn->data.mutex);
> #line 911
>   return (err);
44494c44373
< #line 2207 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 914 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
44497c44376,44377
<   struct p_uuids p ;
---
>   struct drbd_socket *sock ;
>   struct p_uuids *p ;
44500c44380
<   __u64 tmp___0 ;
---
>   void *tmp___0 ;
44502,44503c44382,44385
<   int tmp___2 ;
<   __u64 tmp___3 ;
---
>   __u64 tmp___2 ;
>   struct net_conf *_________p1 ;
>   bool __warned ;
>   int tmp___3 ;
44504a44387,44389
>   int tmp___5 ;
>   __u64 tmp___6 ;
>   int tmp___7 ;
44507c44392
< #line 2212
---
> #line 920
44509c44394
< #line 2212
---
> #line 920
44511,44512c44396,44397
< #line 2213
<     return (1);
---
> #line 921
>     return (0);
44516c44401,44416
< #line 2215
---
> #line 923
>   sock = & (mdev->tconn)->data;
> #line 924
>   tmp___0 = drbd_prepare_command(mdev, sock);
> #line 924
>   p = (struct p_uuids *)tmp___0;
> #line 925
>   if ((unsigned long )p == (unsigned long )((struct p_uuids *)0)) {
> #line 926
>     put_ldev(mdev);
> #line 927
>     return (-5);
>   } else {
> 
>   }
> #line 929
44518c44418
< #line 2216
---
> #line 930
44520,44523c44420,44423
< #line 2216
<   goto ldv_52419;
<   ldv_52418: ;
< #line 2217
---
> #line 930
>   goto ldv_52755;
>   ldv_52754: ;
> #line 931
44525,44528c44425,44428
< #line 2217
<     tmp___0 = __fswab64((mdev->ldev)->md.uuid[i]);
< #line 2217
<     p.uuid[i] = tmp___0;
---
> #line 931
>     tmp___1 = __fswab64((mdev->ldev)->md.uuid[i]);
> #line 931
>     p->uuid[i] = tmp___1;
44530,44531c44430,44431
< #line 2217
<     p.uuid[i] = 0ULL;
---
> #line 931
>     p->uuid[i] = 0ULL;
44533c44433
< #line 2216
---
> #line 930
44535,44536c44435,44436
<   ldv_52419: ;
< #line 2216
---
>   ldv_52755: ;
> #line 930
44538,44539c44438,44439
< #line 2217
<     goto ldv_52418;
---
> #line 931
>     goto ldv_52754;
44543c44443
< #line 2218
---
> #line 932
44545c44445
< #line 2220
---
> #line 934
44547,44563c44447,44488
< #line 2221
<   tmp___1 = __fswab64((__u64 )mdev->comm_bm_set);
< #line 2221
<   p.uuid[4] = tmp___1;
< #line 2222
<   uuid_flags = ((unsigned int )*((unsigned char *)mdev->net_conf + 540UL) != 0U ? 1ULL : 0ULL) | uuid_flags;
< #line 2223
<   tmp___2 = drbd_test_flag(mdev, CRASHED_PRIMARY);
< #line 2223
<   uuid_flags = (tmp___2 != 0 ? 2ULL : 0ULL) | uuid_flags;
< #line 2224
<   uuid_flags = ((unsigned int )*((unsigned char *)mdev + 2273UL) == 8U ? 4ULL : 0ULL) | uuid_flags;
< #line 2225
<   tmp___3 = __fswab64(uuid_flags);
< #line 2225
<   p.uuid[5] = tmp___3;
< #line 2227
---
> #line 935
>   tmp___2 = __fswab64((__u64 )mdev->comm_bm_set);
> #line 935
>   p->uuid[4] = tmp___2;
> #line 936
>   rcu_read_lock___5();
> #line 937
>   _________p1 = *((struct net_conf * volatile  *)(& (mdev->tconn)->net_conf));
> #line 937
>   tmp___3 = debug_lockdep_rcu_enabled();
> #line 937
>   if (tmp___3 != 0 && ! __warned) {
> #line 937
>     tmp___4 = rcu_read_lock_held();
> #line 937
>     if (tmp___4 == 0 && 1) {
> #line 937
>       __warned = 1;
> #line 937
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
>                              937, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 937
>   uuid_flags = ((int )((signed char )_________p1->discard_my_data) != 0 ? 1ULL : 0ULL) | uuid_flags;
> #line 938
>   rcu_read_unlock___5();
> #line 939
>   tmp___5 = constant_test_bit(5U, (unsigned long const volatile   *)(& mdev->flags));
> #line 939
>   uuid_flags = (tmp___5 != 0 ? 2ULL : 0ULL) | uuid_flags;
> #line 940
>   uuid_flags = ((unsigned int )*((unsigned char *)mdev + 745UL) == 8U ? 4ULL : 0ULL) | uuid_flags;
> #line 941
>   tmp___6 = __fswab64(uuid_flags);
> #line 941
>   p->uuid[5] = tmp___6;
> #line 943
44565,44568c44490,44493
< #line 2229
<   tmp___4 = drbd_send_cmd(mdev, 1, P_UUIDS, (struct p_header80 *)(& p), 56UL);
< #line 2229
<   return (tmp___4);
---
> #line 944
>   tmp___7 = drbd_send_command(mdev, sock, P_UUIDS, 48U, 0, 0U);
> #line 944
>   return (tmp___7);
44571c44496
< #line 2233 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 947 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
44577c44502
< #line 2235
---
> #line 949
44579c44504
< #line 2235
---
> #line 949
44583c44508
< #line 2238 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 952 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
44589c44514
< #line 2240
---
> #line 954
44591c44516
< #line 2240
---
> #line 954
44595c44520
< #line 2243 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 957 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
44602c44527
< #line 2245
---
> #line 959
44604c44529
< #line 2245
---
> #line 959
44606c44531
< #line 2246
---
> #line 960
44608c44533
< #line 2247
---
> #line 961
44611c44536
< #line 2253
---
> #line 967
44614c44539
< #line 2255
---
> #line 969
44618c44543
< #line 2256
---
> #line 970
44622,44623c44547,44548
< #line 2261 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< int drbd_gen_and_send_sync_uuid(struct drbd_conf *mdev ) 
---
> #line 975 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> void drbd_gen_and_send_sync_uuid(struct drbd_conf *mdev ) 
44625c44550,44551
<   struct p_rs_uuid p ;
---
>   struct drbd_socket *sock ;
>   struct p_rs_uuid *p ;
44627,44628c44553,44554
<   __u64 tmp ;
<   int tmp___0 ;
---
>   void *tmp ;
>   __u64 tmp___0 ;
44631,44633c44557,44559
< #line 2266
<   if ((unsigned int )*((unsigned char *)mdev + 2277UL) != 16U) {
< #line 2266
---
> #line 981
>   if ((unsigned int )*((unsigned char *)mdev + 749UL) != 16U) {
> #line 981
44635,44636c44561,44562
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             2266);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
>             981);
44640c44566
< #line 2268
---
> #line 983
44642c44568
< #line 2269
---
> #line 984
44644c44570
< #line 2270
---
> #line 985
44647c44573
< #line 2272
---
> #line 987
44650c44576
< #line 2273
---
> #line 988
44652c44578
< #line 2274
---
> #line 989
44654c44580
< #line 2275
---
> #line 990
44656,44663c44582,44600
< #line 2276
<   tmp = __fswab64(uuid);
< #line 2276
<   p.uuid = tmp;
< #line 2278
<   tmp___0 = drbd_send_cmd(mdev, 1, P_SYNC_UUID, (struct p_header80 *)(& p), 16UL);
< #line 2278
<   return (tmp___0);
---
> #line 992
>   sock = & (mdev->tconn)->data;
> #line 993
>   tmp = drbd_prepare_command(mdev, sock);
> #line 993
>   p = (struct p_rs_uuid *)tmp;
> #line 994
>   if ((unsigned long )p != (unsigned long )((struct p_rs_uuid *)0)) {
> #line 995
>     tmp___0 = __fswab64(uuid);
> #line 995
>     p->uuid = tmp___0;
> #line 996
>     drbd_send_command(mdev, sock, P_SYNC_UUID, 8U, 0, 0U);
>   } else {
> 
>   }
> #line 998
>   return;
44666c44603
< #line 2282 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 1000 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
44669c44606,44607
<   struct p_sizes p ;
---
>   struct drbd_socket *sock ;
>   struct p_sizes *p ;
44674,44675c44612,44616
<   int ok ;
<   unsigned int tmp ;
---
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
>   unsigned int tmp___1 ;
44678c44619,44620
<   int tmp___0 ;
---
>   int tmp___2 ;
>   void *tmp___3 ;
44681,44683c44623,44624
<   __u64 tmp___1 ;
<   __u64 tmp___2 ;
<   sector_t tmp___3 ;
---
>   unsigned int _min1___1 ;
>   unsigned int _min2___1 ;
44686,44688c44627,44633
<   __u32 tmp___6 ;
<   __u16 tmp___7 ;
<   __u16 tmp___8 ;
---
>   sector_t tmp___6 ;
>   __u64 tmp___7 ;
>   __u64 tmp___8 ;
>   __u32 tmp___9 ;
>   __u16 tmp___10 ;
>   __u16 tmp___11 ;
>   int tmp___12 ;
44691,44695c44636,44640
< #line 2290
<   tmp___0 = _get_ldev_if_state(mdev, D_NEGOTIATING);
< #line 2290
<   if (tmp___0 != 0) {
< #line 2291
---
> #line 1008
>   tmp___2 = _get_ldev_if_state(mdev, D_NEGOTIATING);
> #line 1008
>   if (tmp___2 != 0) {
> #line 1009
44697c44642
< #line 2291
---
> #line 1009
44699,44700c44644,44645
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<               2291);
---
>               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
>               1009);
44704c44649
< #line 2292
---
> #line 1010
44706,44708c44651,44678
< #line 2293
<     u_size = (sector_t )(mdev->ldev)->dc.disk_size;
< #line 2294
---
> #line 1011
>     rcu_read_lock___5();
> #line 1012
>     _________p1 = *((struct disk_conf * volatile  *)(& (mdev->ldev)->disk_conf));
> #line 1012
>     tmp = debug_lockdep_rcu_enabled();
> #line 1012
>     if (tmp != 0 && ! __warned) {
> #line 1012
>       tmp___0 = rcu_read_lock_held();
> #line 1012
>       if (tmp___0 == 0 && 1) {
> #line 1012
>         __warned = 1;
> #line 1012
>         lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
>                                1012, "suspicious rcu_dereference_check() usage");
>       } else {
> 
>       }
>     } else {
> 
>     }
> #line 1012
>     u_size = (sector_t )_________p1->disk_size;
> #line 1013
>     rcu_read_unlock___5();
> #line 1014
44710,44714c44680,44684
< #line 2295
<     tmp = queue_max_hw_sectors((((mdev->ldev)->backing_bdev)->bd_disk)->queue);
< #line 2295
<     max_bio_size = tmp << 9;
< #line 2296
---
> #line 1015
>     tmp___1 = queue_max_hw_sectors((((mdev->ldev)->backing_bdev)->bd_disk)->queue);
> #line 1015
>     max_bio_size = tmp___1 << 9;
> #line 1016
44716,44718c44686,44688
< #line 2296
<     _min2 = 131072U;
< #line 2296
---
> #line 1016
>     _min2 = 1048576U;
> #line 1016
44720c44690
< #line 2297
---
> #line 1017
44723c44693
< #line 2299
---
> #line 1019
44725c44695
< #line 2300
---
> #line 1020
44727c44697
< #line 2301
---
> #line 1021
44729,44730c44699,44700
< #line 2302
<     max_bio_size = 131072U;
---
> #line 1022
>     max_bio_size = 1048576U;
44732,44734c44702,44717
< #line 2306
<   if (mdev->agreed_pro_version <= 94) {
< #line 2307
---
> #line 1025
>   sock = & (mdev->tconn)->data;
> #line 1026
>   tmp___3 = drbd_prepare_command(mdev, sock);
> #line 1026
>   p = (struct p_sizes *)tmp___3;
> #line 1027
>   if ((unsigned long )p == (unsigned long )((struct p_sizes *)0)) {
> #line 1028
>     return (-5);
>   } else {
> 
>   }
> #line 1030
>   if ((mdev->tconn)->agreed_pro_version <= 94) {
> #line 1031
44736c44719
< #line 2307
---
> #line 1031
44738c44721
< #line 2307
---
> #line 1031
44739a44723,44731
>   } else
> #line 1032
>   if ((mdev->tconn)->agreed_pro_version <= 99) {
> #line 1033
>     _min1___1 = max_bio_size;
> #line 1033
>     _min2___1 = 131072U;
> #line 1033
>     max_bio_size = _min1___1 < _min2___1 ? _min1___1 : _min2___1;
44743,44751c44735,44743
< #line 2309
<   tmp___1 = __fswab64((__u64 )d_size);
< #line 2309
<   p.d_size = tmp___1;
< #line 2310
<   tmp___2 = __fswab64((__u64 )u_size);
< #line 2310
<   p.u_size = tmp___2;
< #line 2311
---
> #line 1035
>   tmp___4 = __fswab64((__u64 )d_size);
> #line 1035
>   p->d_size = tmp___4;
> #line 1036
>   tmp___5 = __fswab64((__u64 )u_size);
> #line 1036
>   p->u_size = tmp___5;
> #line 1037
44753,44756c44745,44748
< #line 2311
<     tmp___3 = drbd_get_capacity(mdev->this_bdev);
< #line 2311
<     tmp___4 = (__u64 )tmp___3;
---
> #line 1037
>     tmp___6 = drbd_get_capacity(mdev->this_bdev);
> #line 1037
>     tmp___7 = (__u64 )tmp___6;
44758,44759c44750,44751
< #line 2311
<     tmp___4 = 0ULL;
---
> #line 1037
>     tmp___7 = 0ULL;
44761,44780c44753,44772
< #line 2311
<   tmp___5 = __fswab64(tmp___4);
< #line 2311
<   p.c_size = tmp___5;
< #line 2312
<   tmp___6 = __fswab32(max_bio_size);
< #line 2312
<   p.max_bio_size = tmp___6;
< #line 2313
<   tmp___7 = __fswab16((int )((__u16 )q_order_type));
< #line 2313
<   p.queue_order_type = tmp___7;
< #line 2314
<   tmp___8 = __fswab16((int )((__u16 )flags));
< #line 2314
<   p.dds_flags = tmp___8;
< #line 2316
<   ok = drbd_send_cmd(mdev, 1, P_SIZES, (struct p_header80 *)(& p), 40UL);
< #line 2318
<   return (ok);
---
> #line 1037
>   tmp___8 = __fswab64(tmp___7);
> #line 1037
>   p->c_size = tmp___8;
> #line 1038
>   tmp___9 = __fswab32(max_bio_size);
> #line 1038
>   p->max_bio_size = tmp___9;
> #line 1039
>   tmp___10 = __fswab16((int )((__u16 )q_order_type));
> #line 1039
>   p->queue_order_type = tmp___10;
> #line 1040
>   tmp___11 = __fswab16((int )((__u16 )flags));
> #line 1040
>   p->dds_flags = tmp___11;
> #line 1041
>   tmp___12 = drbd_send_command(mdev, sock, P_SIZES, 32U, 0, 0U);
> #line 1041
>   return (tmp___12);
44783c44775
< #line 2325 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 1048 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
44786,44790c44778,44782
<   struct socket *sock ;
<   struct p_state p ;
<   int ok ;
<   __u32 tmp ;
<   long tmp___0 ;
---
>   struct drbd_socket *sock ;
>   struct p_state *p ;
>   void *tmp ;
>   __u32 tmp___0 ;
>   int tmp___1 ;
44793,44811c44785,44794
< #line 2329
<   ok = 0;
< #line 2333
<   drbd_state_lock___0(mdev);
< #line 2335
<   ldv_mutex_lock_215(& mdev->data.mutex);
< #line 2337
<   tmp = __fswab32(mdev->state.i);
< #line 2337
<   p.state = tmp;
< #line 2338
<   sock = mdev->data.socket;
< #line 2340
<   tmp___0 = __builtin_expect((unsigned long )sock != (unsigned long )((struct socket *)0),
<                              1L);
< #line 2340
<   if (tmp___0 != 0L) {
< #line 2341
<     ok = _drbd_send_cmd(mdev, sock, P_STATE, (struct p_header80 *)(& p), 12UL, 0U);
---
> #line 1053
>   sock = & (mdev->tconn)->data;
> #line 1054
>   tmp = drbd_prepare_command(mdev, sock);
> #line 1054
>   p = (struct p_state *)tmp;
> #line 1055
>   if ((unsigned long )p == (unsigned long )((struct p_state *)0)) {
> #line 1056
>     return (-5);
44815,44820c44798,44805
< #line 2345
<   ldv_mutex_unlock_216(& mdev->data.mutex);
< #line 2347
<   drbd_state_unlock(mdev);
< #line 2348
<   return (ok);
---
> #line 1057
>   tmp___0 = __fswab32(mdev->state.i);
> #line 1057
>   p->state = tmp___0;
> #line 1058
>   tmp___1 = drbd_send_command(mdev, sock, P_STATE, 4U, 0, 0U);
> #line 1058
>   return (tmp___1);
44823c44808
< #line 2361 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 1071 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
44826,44830c44811,44815
<   struct socket *sock ;
<   struct p_state p ;
<   int ok ;
<   __u32 tmp ;
<   long tmp___0 ;
---
>   struct drbd_socket *sock ;
>   struct p_state *p ;
>   void *tmp ;
>   __u32 tmp___0 ;
>   int tmp___1 ;
44833,44849c44818,44827
< #line 2365
<   ok = 0;
< #line 2367
<   ldv_mutex_lock_217(& mdev->data.mutex);
< #line 2369
<   tmp = __fswab32(state.i);
< #line 2369
<   p.state = tmp;
< #line 2370
<   sock = mdev->data.socket;
< #line 2372
<   tmp___0 = __builtin_expect((unsigned long )sock != (unsigned long )((struct socket *)0),
<                              1L);
< #line 2372
<   if (tmp___0 != 0L) {
< #line 2373
<     ok = _drbd_send_cmd(mdev, sock, P_STATE, (struct p_header80 *)(& p), 12UL, 0U);
---
> #line 1076
>   sock = & (mdev->tconn)->data;
> #line 1077
>   tmp = drbd_prepare_command(mdev, sock);
> #line 1077
>   p = (struct p_state *)tmp;
> #line 1078
>   if ((unsigned long )p == (unsigned long )((struct p_state *)0)) {
> #line 1079
>     return (-5);
44853,44856c44831,44838
< #line 2377
<   ldv_mutex_unlock_218(& mdev->data.mutex);
< #line 2379
<   return (ok);
---
> #line 1080
>   tmp___0 = __fswab32(state.i);
> #line 1080
>   p->state = tmp___0;
> #line 1081
>   tmp___1 = drbd_send_command(mdev, sock, P_STATE, 4U, 0, 0U);
> #line 1081
>   return (tmp___1);
44859c44841
< #line 2382 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 1084 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
44862,44863c44844,44846
<   struct p_req_state p ;
<   __u32 tmp ;
---
>   struct drbd_socket *sock ;
>   struct p_req_state *p ;
>   void *tmp ;
44865c44848,44849
<   int tmp___1 ;
---
>   __u32 tmp___1 ;
>   int tmp___2 ;
44868,44879c44852,44876
< #line 2387
<   tmp = __fswab32(mask.i);
< #line 2387
<   p.mask = tmp;
< #line 2388
<   tmp___0 = __fswab32(val.i);
< #line 2388
<   p.val = tmp___0;
< #line 2390
<   tmp___1 = drbd_send_cmd(mdev, 1, P_STATE_CHG_REQ, (struct p_header80 *)(& p), 16UL);
< #line 2390
<   return (tmp___1);
---
> #line 1089
>   sock = & (mdev->tconn)->data;
> #line 1090
>   tmp = drbd_prepare_command(mdev, sock);
> #line 1090
>   p = (struct p_req_state *)tmp;
> #line 1091
>   if ((unsigned long )p == (unsigned long )((struct p_req_state *)0)) {
> #line 1092
>     return (-5);
>   } else {
> 
>   }
> #line 1093
>   tmp___0 = __fswab32(mask.i);
> #line 1093
>   p->mask = tmp___0;
> #line 1094
>   tmp___1 = __fswab32(val.i);
> #line 1094
>   p->val = tmp___1;
> #line 1095
>   tmp___2 = drbd_send_command(mdev, sock, P_STATE_CHG_REQ, 8U, 0, 0U);
> #line 1095
>   return (tmp___2);
44882,44883c44879,44880
< #line 2394 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< int drbd_send_sr_reply(struct drbd_conf *mdev , enum drbd_state_rv retcode ) 
---
> #line 1098 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> int conn_send_state_req(struct drbd_tconn *tconn , union drbd_state mask , union drbd_state val ) 
44885,44887c44882,44888
<   struct p_req_state_reply p ;
<   __u32 tmp ;
<   int tmp___0 ;
---
>   enum drbd_packet cmd ;
>   struct drbd_socket *sock ;
>   struct p_req_state *p ;
>   void *tmp ;
>   __u32 tmp___0 ;
>   __u32 tmp___1 ;
>   int tmp___2 ;
44890,44898c44891,45042
< #line 2398
<   tmp = __fswab32((__u32 )retcode);
< #line 2398
<   p.retcode = tmp;
< #line 2400
<   tmp___0 = drbd_send_cmd(mdev, 0, P_STATE_CHG_REPLY, (struct p_header80 *)(& p),
<                           12UL);
< #line 2400
<   return (tmp___0);
---
> #line 1104
>   cmd = tconn->agreed_pro_version <= 99 ? P_STATE_CHG_REQ : P_CONN_ST_CHG_REQ;
> #line 1105
>   sock = & tconn->data;
> #line 1106
>   tmp = conn_prepare_command(tconn, sock);
> #line 1106
>   p = (struct p_req_state *)tmp;
> #line 1107
>   if ((unsigned long )p == (unsigned long )((struct p_req_state *)0)) {
> #line 1108
>     return (-5);
>   } else {
> 
>   }
> #line 1109
>   tmp___0 = __fswab32(mask.i);
> #line 1109
>   p->mask = tmp___0;
> #line 1110
>   tmp___1 = __fswab32(val.i);
> #line 1110
>   p->val = tmp___1;
> #line 1111
>   tmp___2 = conn_send_command(tconn, sock, cmd, 8U, 0, 0U);
> #line 1111
>   return (tmp___2);
> }
> }
> #line 1114 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> void drbd_send_sr_reply(struct drbd_conf *mdev , enum drbd_state_rv retcode ) 
> { 
>   struct drbd_socket *sock ;
>   struct p_req_state_reply *p ;
>   void *tmp ;
>   __u32 tmp___0 ;
> 
>   {
> #line 1119
>   sock = & (mdev->tconn)->meta;
> #line 1120
>   tmp = drbd_prepare_command(mdev, sock);
> #line 1120
>   p = (struct p_req_state_reply *)tmp;
> #line 1121
>   if ((unsigned long )p != (unsigned long )((struct p_req_state_reply *)0)) {
> #line 1122
>     tmp___0 = __fswab32((__u32 )retcode);
> #line 1122
>     p->retcode = tmp___0;
> #line 1123
>     drbd_send_command(mdev, sock, P_STATE_CHG_REPLY, 4U, 0, 0U);
>   } else {
> 
>   }
> #line 1125
>   return;
> }
> }
> #line 1127 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> void conn_send_sr_reply(struct drbd_tconn *tconn , enum drbd_state_rv retcode ) 
> { 
>   struct drbd_socket *sock ;
>   struct p_req_state_reply *p ;
>   enum drbd_packet cmd ;
>   void *tmp ;
>   __u32 tmp___0 ;
> 
>   {
> #line 1131
>   cmd = tconn->agreed_pro_version <= 99 ? P_STATE_CHG_REPLY : P_CONN_ST_CHG_REPLY;
> #line 1133
>   sock = & tconn->meta;
> #line 1134
>   tmp = conn_prepare_command(tconn, sock);
> #line 1134
>   p = (struct p_req_state_reply *)tmp;
> #line 1135
>   if ((unsigned long )p != (unsigned long )((struct p_req_state_reply *)0)) {
> #line 1136
>     tmp___0 = __fswab32((__u32 )retcode);
> #line 1136
>     p->retcode = tmp___0;
> #line 1137
>     conn_send_command(tconn, sock, cmd, 4U, 0, 0U);
>   } else {
> 
>   }
> #line 1139
>   return;
> }
> }
> #line 1141 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> static void dcbp_set_code(struct p_compressed_bm *p , enum drbd_bitmap_code code ) 
> { 
>   long tmp ;
> 
>   {
> #line 1143
>   tmp = __builtin_expect(((unsigned int )code & 4294967280U) != 0U, 0L);
> #line 1143
>   if (tmp != 0L) {
> #line 1143
>     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"),
>                          "i" (1143), "i" (12UL));
>     ldv_52843: ;
> #line 1143
>     goto ldv_52843;
>   } else {
> 
>   }
> #line 1144
>   p->encoding = ((unsigned int )p->encoding & 240U) | (unsigned int )((u8 )code);
> #line 1145
>   return;
> }
> }
> #line 1147 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> static void dcbp_set_start(struct p_compressed_bm *p , int set ) 
> { 
> 
> 
>   {
> #line 1149
>   p->encoding = (u8 )(((int )((signed char )p->encoding) & 127) | (set != 0 ? -128 : 0));
> #line 1150
>   return;
> }
> }
> #line 1152 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> static void dcbp_set_pad_bits(struct p_compressed_bm *p , int n ) 
> { 
>   long tmp ;
> 
>   {
> #line 1154
>   tmp = __builtin_expect((n & -8) != 0, 0L);
> #line 1154
>   if (tmp != 0L) {
> #line 1154
>     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"),
>                          "i" (1154), "i" (12UL));
>     ldv_52852: ;
> #line 1154
>     goto ldv_52852;
>   } else {
> 
>   }
> #line 1155
>   p->encoding = (u8 )(((int )((signed char )p->encoding) & -128) | (int )((signed char )(n << 4)));
> #line 1156
>   return;
44901,44902c45045,45047
< #line 2404 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< int fill_bitmap_rle_bits(struct drbd_conf *mdev , struct p_compressed_bm *p , struct bm_xfer_ctx *c ) 
---
> #line 1158 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> int fill_bitmap_rle_bits(struct drbd_conf *mdev , struct p_compressed_bm *p , unsigned int size ,
>                          struct bm_xfer_ctx *c ) 
44911,44912c45056,45062
<   unsigned long tmp___0 ;
<   unsigned long tmp___1 ;
---
>   int use_rle ;
>   struct net_conf *_________p1 ;
>   bool __warned ;
>   int tmp___0 ;
>   int tmp___1 ;
>   unsigned long tmp___2 ;
>   unsigned long tmp___3 ;
44915,44917c45065,45094
< #line 2417
<   if ((unsigned int )*((unsigned char *)mdev + 200UL) == 0U || mdev->agreed_pro_version <= 89) {
< #line 2419
---
> #line 1172
>   rcu_read_lock___5();
> #line 1173
>   _________p1 = *((struct net_conf * volatile  *)(& (mdev->tconn)->net_conf));
> #line 1173
>   tmp___0 = debug_lockdep_rcu_enabled();
> #line 1173
>   if (tmp___0 != 0 && ! __warned) {
> #line 1173
>     tmp___1 = rcu_read_lock_held();
> #line 1173
>     if (tmp___1 == 0 && 1) {
> #line 1173
>       __warned = 1;
> #line 1173
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
>                              1173, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1173
>   use_rle = (int )_________p1->use_rle;
> #line 1174
>   rcu_read_unlock___5();
> #line 1175
>   if (use_rle == 0 || (mdev->tconn)->agreed_pro_version <= 89) {
> #line 1176
44922c45099
< #line 2421
---
> #line 1178
44924c45101
< #line 2422
---
> #line 1179
44929,44933c45106,45110
< #line 2425
<   bitstream_init(& bs, (void *)(& p->code), 4087UL, 0U);
< #line 2426
<   memset((void *)(& p->code), 0, 4087UL);
< #line 2428
---
> #line 1182
>   bitstream_init(& bs, (void *)(& p->code), (size_t )size, 0U);
> #line 1183
>   memset((void *)(& p->code), 0, (size_t )size);
> #line 1185
44935c45112
< #line 2433
---
> #line 1190
44937,44938c45114,45115
<   ldv_52492: ;
< #line 2438
---
>   ldv_52872: ;
> #line 1195
44940,44948c45117,45125
< #line 2438
<     tmp___0 = _drbd_bm_find_next_zero(mdev, c->bit_offset);
< #line 2438
<     tmp = tmp___0;
<   } else {
< #line 2438
<     tmp___1 = _drbd_bm_find_next(mdev, c->bit_offset);
< #line 2438
<     tmp = tmp___1;
---
> #line 1195
>     tmp___2 = _drbd_bm_find_next_zero(mdev, c->bit_offset);
> #line 1195
>     tmp = tmp___2;
>   } else {
> #line 1195
>     tmp___3 = _drbd_bm_find_next(mdev, c->bit_offset);
> #line 1195
>     tmp = tmp___3;
44950c45127
< #line 2440
---
> #line 1197
44952c45129
< #line 2441
---
> #line 1198
44957c45134
< #line 2442
---
> #line 1199
44959c45136
< #line 2444
---
> #line 1201
44961c45138
< #line 2445
---
> #line 1202
44963,44965c45140,45142
< #line 2448
<       DCBP_set_start(p, 1);
< #line 2450
---
> #line 1205
>       dcbp_set_start(p, 1);
> #line 1207
44967,44968c45144,45145
< #line 2451
<       goto ldv_52490;
---
> #line 1208
>       goto ldv_52870;
44972,44973c45149,45150
< #line 2453
<     DCBP_set_start(p, 0);
---
> #line 1210
>     dcbp_set_start(p, 0);
44977c45154
< #line 2458
---
> #line 1215
44979c45156
< #line 2459
---
> #line 1216
44982c45159
< #line 2461
---
> #line 1218
44987c45164
< #line 2464
---
> #line 1221
44989c45166
< #line 2465
---
> #line 1222
44991,44992c45168,45169
< #line 2466
<     goto ldv_52491;
---
> #line 1223
>     goto ldv_52871;
44996c45173
< #line 2467
---
> #line 1224
44998c45175
< #line 2468
---
> #line 1225
45001c45178
< #line 2469
---
> #line 1226
45006c45183
< #line 2472
---
> #line 1229
45008c45185
< #line 2473
---
> #line 1230
45010c45187
< #line 2474
---
> #line 1231
45012,45013c45189,45190
<   ldv_52490: ;
< #line 2475
---
>   ldv_52870: ;
> #line 1232
45015,45016c45192,45193
< #line 2476
<     goto ldv_52492;
---
> #line 1233
>     goto ldv_52872;
45020,45021c45197,45198
<   ldv_52491: 
< #line 2477
---
>   ldv_52871: 
> #line 1234
45023c45200
< #line 2479
---
> #line 1236
45025c45202
< #line 2482
---
> #line 1239
45027c45204
< #line 2483
---
> #line 1240
45029c45206
< #line 2484
---
> #line 1241
45031c45208
< #line 2485
---
> #line 1242
45036c45213
< #line 2490
---
> #line 1247
45038,45040c45215,45217
< #line 2493
<   DCBP_set_pad_bits(p, (int )(- bs.cur.bit) & 7);
< #line 2495
---
> #line 1250
>   dcbp_set_pad_bits(p, (int )(- bs.cur.bit) & 7);
> #line 1252
45044,45046c45221,45222
< #line 2505 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static int send_bitmap_rle_or_plain(struct drbd_conf *mdev , struct p_header80 *h ,
<                                     struct bm_xfer_ctx *c ) 
---
> #line 1262 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> static int send_bitmap_rle_or_plain(struct drbd_conf *mdev , struct bm_xfer_ctx *c ) 
45047a45224,45226
>   struct drbd_socket *sock ;
>   unsigned int header_size ;
>   unsigned int tmp ;
45049d45227
<   unsigned long num_words ;
45051c45229,45232
<   int ok ;
---
>   int err ;
>   unsigned int data_size ;
>   unsigned long num_words ;
>   unsigned long *p___0 ;
45056,45060c45237,45247
< #line 2508
<   p = (struct p_compressed_bm *)h;
< #line 2513
<   len = fill_bitmap_rle_bits(mdev, p, c);
< #line 2515
---
> #line 1264
>   sock = & (mdev->tconn)->data;
> #line 1265
>   tmp = drbd_header_size(mdev->tconn);
> #line 1265
>   header_size = tmp;
> #line 1266
>   p = (struct p_compressed_bm *)sock->sbuf + (unsigned long )header_size;
> #line 1269
>   len = fill_bitmap_rle_bits(mdev, p, 4095U - header_size, c);
> #line 1271
45062c45249
< #line 2516
---
> #line 1272
45067c45254
< #line 2518
---
> #line 1274
45069,45074c45256,45261
< #line 2519
<     DCBP_set_code(p, RLE_VLI_Bits);
< #line 2520
<     ok = _drbd_send_cmd(mdev, mdev->data.socket, P_COMPRESSED_BITMAP, h, (unsigned long )len + 9UL,
<                         0U);
< #line 2523
---
> #line 1275
>     dcbp_set_code(p, RLE_VLI_Bits);
> #line 1276
>     err = __send_command(mdev->tconn, mdev->vnr, sock, P_COMPRESSED_BITMAP, (unsigned int )len + 1U,
>                          0, 0U);
> #line 1279
45076,45078c45263,45265
< #line 2524
<     c->bytes[0] = (c->bytes[0] + (unsigned int )len) + 9U;
< #line 2526
---
> #line 1280
>     c->bytes[0] = (c->bytes[0] + (header_size + (unsigned int )len)) + 1U;
> #line 1282
45080c45267
< #line 2527
---
> #line 1283
45086,45088c45273,45279
< #line 2531
<     __min1 = 511UL;
< #line 2531
---
> #line 1289
>     p___0 = (unsigned long *)sock->sbuf + (unsigned long )header_size;
> #line 1291
>     data_size = 4096U - header_size;
> #line 1292
>     __min1 = (unsigned long )(data_size / 8U);
> #line 1292
45090c45281
< #line 2531
---
> #line 1292
45092c45283
< #line 2532
---
> #line 1294
45094c45285
< #line 2533
---
> #line 1295
45096,45097c45287,45288
< #line 2534
<       drbd_bm_get_lel(mdev, c->word_offset, num_words, (unsigned long *)(& h->payload));
---
> #line 1296
>       drbd_bm_get_lel(mdev, c->word_offset, num_words, p___0);
45101,45104c45292,45295
< #line 2535
<     ok = _drbd_send_cmd(mdev, mdev->data.socket, P_BITMAP, h, (unsigned long )len + 8UL,
<                         0U);
< #line 2537
---
> #line 1297
>     err = __send_command(mdev->tconn, mdev->vnr, sock, P_BITMAP, (unsigned int )len,
>                          0, 0U);
> #line 1298
45106c45297
< #line 2538
---
> #line 1299
45108c45299
< #line 2540
---
> #line 1301
45110,45112c45301,45303
< #line 2541
<     c->bytes[1] = (c->bytes[1] + (unsigned int )len) + 8U;
< #line 2543
---
> #line 1302
>     c->bytes[1] = c->bytes[1] + (header_size + (unsigned int )len);
> #line 1304
45114c45305
< #line 2544
---
> #line 1305
45120,45122c45311,45313
< #line 2546
<   if (ok != 0) {
< #line 2547
---
> #line 1307
>   if (err == 0) {
> #line 1308
45124c45315
< #line 2548
---
> #line 1309
45126c45317
< #line 2549
---
> #line 1310
45129c45320
< #line 2551
---
> #line 1312
45135c45326
< #line 2553
---
> #line 1314
45139,45140c45330,45331
< #line 2557 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< int _drbd_send_bitmap(struct drbd_conf *mdev ) 
---
> #line 1318 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> static int _drbd_send_bitmap(struct drbd_conf *mdev ) 
45143d45333
<   struct p_header80 *p ;
45145,45146c45335,45336
<   int _b ;
<   unsigned long tmp ;
---
>   bool _bool ;
>   int tmp ;
45155,45162c45345,45351
< #line 2563
<   _b = (unsigned long )mdev->bitmap == (unsigned long )((struct drbd_bitmap *)0);
< #line 2563
<   if (_b != 0) {
< #line 2563
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "_drbd_send_bitmap", (char *)"!mdev->bitmap", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             2563);
---
> #line 1323
>   _bool = (unsigned long )mdev->bitmap != (unsigned long )((struct drbd_bitmap *)0);
> #line 1323
>   if (! _bool) {
> #line 1323
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"mdev->bitmap", "_drbd_send_bitmap");
45166,45169c45355,45358
< #line 2563
<   if (_b != 0) {
< #line 2563
<     return (0);
---
> #line 1323
>   if (_bool) {
> #line 1323
>     tmp = 0;
45171c45360,45361
< 
---
> #line 1323
>     tmp = 1;
45173,45182c45363,45365
< #line 2567
<   tmp = __get_free_pages(16U, 0U);
< #line 2567
<   p = (struct p_header80 *)tmp;
< #line 2568
<   if ((unsigned long )p == (unsigned long )((struct p_header80 *)0)) {
< #line 2569
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "failed to allocate one page buffer in %s\n",
<             "_drbd_send_bitmap");
< #line 2570
---
> #line 1323
>   if (tmp) {
> #line 1324
45187c45370
< #line 2573
---
> #line 1326
45189c45372
< #line 2573
---
> #line 1326
45191c45374
< #line 2574
---
> #line 1327
45193c45376
< #line 2574
---
> #line 1327
45195c45378
< #line 2575
---
> #line 1328
45197c45380
< #line 2576
---
> #line 1329
45199c45382
< #line 2577
---
> #line 1330
45201c45384
< #line 2577
---
> #line 1330
45203c45386
< #line 2581
---
> #line 1334
45206c45389
< #line 2583
---
> #line 1336
45208c45391
< #line 2584
---
> #line 1337
45214c45397
< #line 2587
---
> #line 1340
45219c45402
< #line 2590
---
> #line 1343
45221c45404
< #line 2590
---
> #line 1343
45223c45406
< #line 2590
---
> #line 1343
45225c45408
< #line 2590
---
> #line 1343
45227c45410
< #line 2590
---
> #line 1343
45229c45412
< #line 2590
---
> #line 1343
45231c45414
< #line 2590
---
> #line 1343
45233c45416
< #line 2590
---
> #line 1343
45235c45418
< #line 2590
---
> #line 1343
45237c45420
< #line 2590
---
> #line 1343
45239c45422
< #line 2590
---
> #line 1343
45241,45244c45424,45427
<   ldv_52515: 
< #line 2596
<   err = send_bitmap_rle_or_plain(mdev, p, & c);
< #line 2597
---
>   ldv_52897: 
> #line 1349
>   err = send_bitmap_rle_or_plain(mdev, & c);
> #line 1350
45246,45247c45429,45430
< #line 2598
<     goto ldv_52515;
---
> #line 1351
>     goto ldv_52897;
45251,45253c45434,45435
< #line 2599
<   free_pages((unsigned long )p, 0U);
< #line 2600
---
> 
> #line 1352
45257c45439
< #line 2603 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 1355 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
45259a45442
>   struct drbd_socket *sock ;
45262d45444
<   int tmp___0 ;
45265,45270c45447,45458
< #line 2607
<   tmp = drbd_get_data_sock___0(mdev);
< #line 2607
<   if (tmp == 0) {
< #line 2608
<     return (-1);
---
> #line 1357
>   sock = & (mdev->tconn)->data;
> #line 1358
>   err = -1;
> #line 1360
>   ldv_mutex_lock_211(& sock->mutex);
> #line 1361
>   if ((unsigned long )sock->socket != (unsigned long )((struct socket *)0)) {
> #line 1362
>     tmp = _drbd_send_bitmap(mdev);
> #line 1362
>     err = tmp == 0;
45274,45280c45462,45464
< #line 2609
<   tmp___0 = _drbd_send_bitmap(mdev);
< #line 2609
<   err = tmp___0 == 0;
< #line 2610
<   drbd_put_data_sock___0(mdev);
< #line 2611
---
> #line 1363
>   ldv_mutex_unlock_212(& sock->mutex);
> #line 1364
45284,45285c45468,45469
< #line 2614 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< int drbd_send_b_ack(struct drbd_conf *mdev , u32 barrier_nr , u32 set_size ) 
---
> #line 1367 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> void drbd_send_b_ack(struct drbd_tconn *tconn , u32 barrier_nr , u32 set_size ) 
45287,45289c45471,45474
<   int ok ;
<   struct p_barrier_ack p ;
<   __u32 tmp ;
---
>   struct drbd_socket *sock ;
>   struct p_barrier_ack *p ;
>   void *tmp ;
>   __u32 tmp___0 ;
45292,45301c45477,45480
< #line 2619
<   p.barrier = barrier_nr;
< #line 2620
<   tmp = __fswab32(set_size);
< #line 2620
<   p.set_size = tmp;
< #line 2622
<   if ((int )mdev->state.ldv_39979.conn <= 9) {
< #line 2623
<     return (0);
---
> #line 1372
>   if ((unsigned int )tconn->cstate <= 8U) {
> #line 1373
>     return;
45305,45308c45484,45506
< #line 2624
<   ok = drbd_send_cmd(mdev, 0, P_BARRIER_ACK, (struct p_header80 *)(& p), 16UL);
< #line 2626
<   return (ok);
---
> #line 1375
>   sock = & tconn->meta;
> #line 1376
>   tmp = conn_prepare_command(tconn, sock);
> #line 1376
>   p = (struct p_barrier_ack *)tmp;
> #line 1377
>   if ((unsigned long )p == (unsigned long )((struct p_barrier_ack *)0)) {
> #line 1378
>     return;
>   } else {
> 
>   }
> #line 1379
>   p->barrier = barrier_nr;
> #line 1380
>   tmp___0 = __fswab32(set_size);
> #line 1380
>   p->set_size = tmp___0;
> #line 1381
>   conn_send_command(tconn, sock, P_BARRIER_ACK, 8U, 0, 0U);
> #line 1382
>   return;
45311,45312c45509,45510
< #line 2637 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static int _drbd_send_ack(struct drbd_conf *mdev , enum drbd_packets cmd , u64 sector ,
---
> #line 1392 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> static int _drbd_send_ack(struct drbd_conf *mdev , enum drbd_packet cmd , u64 sector ,
45315,45318c45513,45518
<   int ok ;
<   struct p_block_ack p ;
<   int tmp ;
<   __u32 tmp___0 ;
---
>   struct drbd_socket *sock ;
>   struct p_block_ack *p ;
>   void *tmp ;
>   int tmp___0 ;
>   __u32 tmp___1 ;
>   int tmp___2 ;
45321,45336c45521,45524
< #line 2645
<   p.sector = sector;
< #line 2646
<   p.block_id = block_id;
< #line 2647
<   p.blksize = blksize;
< #line 2648
<   tmp = atomic_add_return(1, & mdev->packet_seq);
< #line 2648
<   tmp___0 = __fswab32((__u32 )tmp);
< #line 2648
<   p.seq_num = tmp___0;
< #line 2650
<   if ((unsigned long )mdev->meta.socket == (unsigned long )((struct socket *)0) || (int )mdev->state.ldv_39979.conn <= 9) {
< #line 2651
<     return (0);
---
> #line 1398
>   if ((int )mdev->state.ldv_49522.conn <= 9) {
> #line 1399
>     return (-5);
45340,45343c45528,45556
< #line 2652
<   ok = drbd_send_cmd(mdev, 0, cmd, (struct p_header80 *)(& p), 32UL);
< #line 2654
<   return (ok);
---
> #line 1401
>   sock = & (mdev->tconn)->meta;
> #line 1402
>   tmp = drbd_prepare_command(mdev, sock);
> #line 1402
>   p = (struct p_block_ack *)tmp;
> #line 1403
>   if ((unsigned long )p == (unsigned long )((struct p_block_ack *)0)) {
> #line 1404
>     return (-5);
>   } else {
> 
>   }
> #line 1405
>   p->sector = sector;
> #line 1406
>   p->block_id = block_id;
> #line 1407
>   p->blksize = blksize;
> #line 1408
>   tmp___0 = atomic_add_return(1, & mdev->packet_seq);
> #line 1408
>   tmp___1 = __fswab32((__u32 )tmp___0);
> #line 1408
>   p->seq_num = tmp___1;
> #line 1409
>   tmp___2 = drbd_send_command(mdev, sock, cmd, 24U, 0, 0U);
> #line 1409
>   return (tmp___2);
45346,45348c45559,45561
< #line 2660 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< int drbd_send_ack_dp(struct drbd_conf *mdev , enum drbd_packets cmd , struct p_data *dp ,
<                      int data_size ) 
---
> #line 1415 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> void drbd_send_ack_dp(struct drbd_conf *mdev , enum drbd_packet cmd , struct p_data *dp ,
>                       int data_size ) 
45351,45353c45564
<   unsigned int tmp___0 ;
<   __u32 tmp___1 ;
<   int tmp___2 ;
---
>   __u32 tmp___0 ;
45356,45361c45567,45572
< #line 2663
<   if (mdev->agreed_pro_version > 86 && (unsigned long )mdev->integrity_r_tfm != (unsigned long )((struct crypto_hash *)0)) {
< #line 2663
<     tmp = crypto_hash_digestsize(mdev->integrity_r_tfm);
< #line 2663
<     tmp___0 = tmp;
---
> #line 1418
>   if ((unsigned long )(mdev->tconn)->peer_integrity_tfm != (unsigned long )((struct crypto_hash *)0)) {
> #line 1419
>     tmp = crypto_hash_digestsize((mdev->tconn)->peer_integrity_tfm);
> #line 1419
>     data_size = (int )((unsigned int )data_size - tmp);
45363,45364c45574
< #line 2663
<     tmp___0 = 0U;
---
> 
45366,45373c45576,45581
< #line 2663
<   data_size = (int )((unsigned int )data_size - tmp___0);
< #line 2665
<   tmp___1 = __fswab32((__u32 )data_size);
< #line 2665
<   tmp___2 = _drbd_send_ack(mdev, cmd, dp->sector, tmp___1, dp->block_id);
< #line 2665
<   return (tmp___2);
---
> #line 1420
>   tmp___0 = __fswab32((__u32 )data_size);
> #line 1420
>   _drbd_send_ack(mdev, cmd, dp->sector, tmp___0, dp->block_id);
> #line 1422
>   return;
45376,45377c45584,45585
< #line 2669 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< int drbd_send_ack_rp(struct drbd_conf *mdev , enum drbd_packets cmd , struct p_block_req *rp ) 
---
> #line 1424 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> void drbd_send_ack_rp(struct drbd_conf *mdev , enum drbd_packet cmd , struct p_block_req *rp ) 
45379c45587
<   int tmp ;
---
> 
45382,45385c45590,45593
< #line 2672
<   tmp = _drbd_send_ack(mdev, cmd, rp->sector, rp->blksize, rp->block_id);
< #line 2672
<   return (tmp);
---
> #line 1427
>   _drbd_send_ack(mdev, cmd, rp->sector, rp->blksize, rp->block_id);
> #line 1428
>   return;
45388,45389c45596,45597
< #line 2681 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< int drbd_send_ack(struct drbd_conf *mdev , enum drbd_packets cmd , struct drbd_epoch_entry *e ) 
---
> #line 1436 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> int drbd_send_ack(struct drbd_conf *mdev , enum drbd_packet cmd , struct drbd_peer_request *peer_req ) 
45396,45402c45604,45610
< #line 2684
<   tmp = __fswab32(e->size);
< #line 2684
<   tmp___0 = __fswab64((__u64 )e->sector);
< #line 2684
<   tmp___1 = _drbd_send_ack(mdev, cmd, tmp___0, tmp, e->ldv_49189.block_id);
< #line 2684
---
> #line 1439
>   tmp = __fswab32(peer_req->i.size);
> #line 1439
>   tmp___0 = __fswab64((__u64 )peer_req->i.sector);
> #line 1439
>   tmp___1 = _drbd_send_ack(mdev, cmd, tmp___0, tmp, peer_req->ldv_50726.block_id);
> #line 1439
45406,45407c45614,45615
< #line 2692 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< int drbd_send_ack_ex(struct drbd_conf *mdev , enum drbd_packets cmd , sector_t sector ,
---
> #line 1447 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> int drbd_send_ack_ex(struct drbd_conf *mdev , enum drbd_packet cmd , sector_t sector ,
45416c45624
< #line 2695
---
> #line 1450
45418c45626
< #line 2695
---
> #line 1450
45420c45628
< #line 2695
---
> #line 1450
45422c45630
< #line 2695
---
> #line 1450
45424c45632
< #line 2695
---
> #line 1450
45428c45636
< #line 2701 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 1456 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
45432,45435c45640,45645
<   int ok ;
<   struct p_block_req p ;
<   __u64 tmp ;
<   __u32 tmp___0 ;
---
>   struct drbd_socket *sock ;
>   struct p_block_req *p ;
>   void *tmp ;
>   __u64 tmp___0 ;
>   __u32 tmp___1 ;
>   int tmp___2 ;
45438,45452c45648,45674
< #line 2707
<   tmp = __fswab64((__u64 )sector);
< #line 2707
<   p.sector = tmp;
< #line 2708
<   p.block_id = block_id;
< #line 2709
<   tmp___0 = __fswab32((__u32 )size);
< #line 2709
<   p.blksize = tmp___0;
< #line 2711
<   ok = drbd_send_cmd(mdev, 1, (enum drbd_packets )cmd, (struct p_header80 *)(& p),
<                      32UL);
< #line 2713
<   return (ok);
---
> #line 1462
>   sock = & (mdev->tconn)->data;
> #line 1463
>   tmp = drbd_prepare_command(mdev, sock);
> #line 1463
>   p = (struct p_block_req *)tmp;
> #line 1464
>   if ((unsigned long )p == (unsigned long )((struct p_block_req *)0)) {
> #line 1465
>     return (-5);
>   } else {
> 
>   }
> #line 1466
>   tmp___0 = __fswab64((__u64 )sector);
> #line 1466
>   p->sector = tmp___0;
> #line 1467
>   p->block_id = block_id;
> #line 1468
>   tmp___1 = __fswab32((__u32 )size);
> #line 1468
>   p->blksize = tmp___1;
> #line 1469
>   tmp___2 = drbd_send_command(mdev, sock, (enum drbd_packet )cmd, 24U, 0, 0U);
> #line 1469
>   return (tmp___2);
45455c45677
< #line 2716 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 1472 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
45457c45679
<                             void *digest , int digest_size , enum drbd_packets cmd ) 
---
>                             void *digest , int digest_size , enum drbd_packet cmd ) 
45459,45467c45681,45686
<   int ok ;
<   struct p_block_req p ;
<   __u64 tmp ;
<   __u32 tmp___0 ;
<   __u16 tmp___1 ;
<   __u16 tmp___2 ;
<   int tmp___3 ;
<   int tmp___4 ;
<   int tmp___5 ;
---
>   struct drbd_socket *sock ;
>   struct p_block_req *p ;
>   void *tmp ;
>   __u64 tmp___0 ;
>   __u32 tmp___1 ;
>   int tmp___2 ;
45470,45507c45689,45698
< #line 2724
<   tmp = __fswab64((__u64 )sector);
< #line 2724
<   p.sector = tmp;
< #line 2725
<   p.block_id = 1728263026ULL;
< #line 2726
<   tmp___0 = __fswab32((__u32 )size);
< #line 2726
<   p.blksize = tmp___0;
< #line 2728
<   p.head.magic = 1728214147U;
< #line 2729
<   tmp___1 = __fswab16((int )((__u16 )cmd));
< #line 2729
<   p.head.command = tmp___1;
< #line 2730
<   tmp___2 = __fswab16((int )((unsigned int )((__u16 )digest_size) + 24U));
< #line 2730
<   p.head.length = tmp___2;
< #line 2732
<   ldv_mutex_lock_219(& mdev->data.mutex);
< #line 2734
<   tmp___3 = drbd_send(mdev, mdev->data.socket, (void *)(& p), 32UL, 0U);
< #line 2734
<   ok = tmp___3 == 32;
< #line 2735
<   if (ok != 0) {
< #line 2735
<     tmp___4 = drbd_send(mdev, mdev->data.socket, digest, (size_t )digest_size, 0U);
< #line 2735
<     if (tmp___4 == digest_size) {
< #line 2735
<       tmp___5 = 1;
<     } else {
< #line 2735
<       tmp___5 = 0;
<     }
---
> #line 1480
>   sock = & (mdev->tconn)->data;
> #line 1481
>   tmp = drbd_prepare_command(mdev, sock);
> #line 1481
>   p = (struct p_block_req *)tmp;
> #line 1482
>   if ((unsigned long )p == (unsigned long )((struct p_block_req *)0)) {
> #line 1483
>     return (-5);
45509,45510c45700
< #line 2735
<     tmp___5 = 0;
---
> 
45512,45517c45702,45715
< #line 2735
<   ok = tmp___5;
< #line 2737
<   ldv_mutex_unlock_220(& mdev->data.mutex);
< #line 2739
<   return (ok);
---
> #line 1484
>   tmp___0 = __fswab64((__u64 )sector);
> #line 1484
>   p->sector = tmp___0;
> #line 1485
>   p->block_id = 0xffffffffffffffffULL;
> #line 1486
>   tmp___1 = __fswab32((__u32 )size);
> #line 1486
>   p->blksize = tmp___1;
> #line 1487
>   tmp___2 = drbd_send_command(mdev, sock, cmd, 24U, digest, (unsigned int )digest_size);
> #line 1487
>   return (tmp___2);
45520c45718
< #line 2742 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 1491 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
45523,45526c45721,45726
<   int ok ;
<   struct p_block_req p ;
<   __u64 tmp ;
<   __u32 tmp___0 ;
---
>   struct drbd_socket *sock ;
>   struct p_block_req *p ;
>   void *tmp ;
>   __u64 tmp___0 ;
>   __u32 tmp___1 ;
>   int tmp___2 ;
45529,45542c45729,45755
< #line 2747
<   tmp = __fswab64((__u64 )sector);
< #line 2747
<   p.sector = tmp;
< #line 2748
<   p.block_id = 1728261953ULL;
< #line 2749
<   tmp___0 = __fswab32((__u32 )size);
< #line 2749
<   p.blksize = tmp___0;
< #line 2751
<   ok = drbd_send_cmd(mdev, 1, P_OV_REQUEST, (struct p_header80 *)(& p), 32UL);
< #line 2753
<   return (ok);
---
> #line 1496
>   sock = & (mdev->tconn)->data;
> #line 1497
>   tmp = drbd_prepare_command(mdev, sock);
> #line 1497
>   p = (struct p_block_req *)tmp;
> #line 1498
>   if ((unsigned long )p == (unsigned long )((struct p_block_req *)0)) {
> #line 1499
>     return (-5);
>   } else {
> 
>   }
> #line 1500
>   tmp___0 = __fswab64((__u64 )sector);
> #line 1500
>   p->sector = tmp___0;
> #line 1501
>   p->block_id = 0xffffffffffffffffULL;
> #line 1502
>   tmp___1 = __fswab32((__u32 )size);
> #line 1502
>   p->blksize = tmp___1;
> #line 1503
>   tmp___2 = drbd_send_command(mdev, sock, P_OV_REQUEST, 24U, 0, 0U);
> #line 1503
>   return (tmp___2);
45545,45546c45758,45759
< #line 2760 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static int we_should_drop_the_connection(struct drbd_conf *mdev , struct socket *sock ) 
---
> #line 1510 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> static int we_should_drop_the_connection(struct drbd_tconn *tconn , struct socket *sock ) 
45555,45557c45768,45770
< #line 2765
<   if ((unsigned long )mdev->meta.socket == (unsigned long )sock || (unsigned long )mdev->asender.task == (unsigned long )((struct task_struct *)0)) {
< #line 2765
---
> #line 1515
>   if ((unsigned long )tconn->meta.socket == (unsigned long )sock || (unsigned long )tconn->asender.task == (unsigned long )((struct task_struct *)0)) {
> #line 1515
45560,45562c45773,45775
< #line 2765
<     tmp = get_t_state(& mdev->asender);
< #line 2765
---
> #line 1515
>     tmp = get_t_state(& tconn->asender);
> #line 1515
45564c45777
< #line 2765
---
> #line 1515
45567,45569c45780,45782
< #line 2765
<     if ((int )mdev->state.ldv_39979.conn <= 9) {
< #line 2765
---
> #line 1515
>     if ((unsigned int )tconn->cstate <= 8U) {
> #line 1515
45572c45785
< #line 2765
---
> #line 1515
45576c45789
< #line 2765
---
> #line 1515
45578c45791
< #line 2770
---
> #line 1520
45580c45793
< #line 2771
---
> #line 1521
45585,45589c45798,45802
< #line 2773
<   mdev->ko_count = mdev->ko_count - 1U;
< #line 2773
<   drop_it = mdev->ko_count == 0U;
< #line 2774
---
> #line 1523
>   tconn->ko_count = tconn->ko_count - 1U;
> #line 1523
>   drop_it = tconn->ko_count == 0U;
> #line 1524
45591c45804
< #line 2775
---
> #line 1525
45593c45806
< #line 2775
---
> #line 1525
45595,45599c45808,45812
< #line 2775
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "[%s/%d] sock_sendmsg time expired, ko = %u\n",
<             (char *)(& tmp___2->comm), tmp___1->pid, mdev->ko_count);
< #line 2777
<     request_ping(mdev);
---
> #line 1525
>     printk("\vd-con %s: [%s/%d] sock_sendmsg time expired, ko = %u\n", tconn->name,
>            (char *)(& tmp___2->comm), tmp___1->pid, tconn->ko_count);
> #line 1527
>     request_ping(tconn);
45603c45816
< #line 2780
---
> #line 1530
45607c45820,45839
< #line 2804 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 1533 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> static void drbd_update_congested(struct drbd_tconn *tconn ) 
> { 
>   struct sock *sk ;
> 
>   {
> #line 1535
>   sk = (tconn->data.socket)->sk;
> #line 1536
>   if (sk->sk_wmem_queued > (sk->sk_sndbuf * 4) / 5) {
> #line 1537
>     set_bit(0U, (unsigned long volatile   *)(& tconn->flags));
>   } else {
> 
>   }
> #line 1538
>   return;
> }
> }
> #line 1561 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
45611c45843,45845
<   int sent ;
---
>   struct socket *socket ;
>   void *addr ;
>   int err ;
45613d45846
<   int tmp___0 ;
45616c45849,45851
< #line 2807
---
> #line 1568
>   socket = (mdev->tconn)->data.socket;
> #line 1569
45618,45623c45853,45857
< #line 2807
<   tmp___0 = drbd_send(mdev, mdev->data.socket, tmp + (unsigned long )offset, size,
<                       msg_flags);
< #line 2807
<   sent = tmp___0;
< #line 2808
---
> #line 1569
>   addr = tmp + (unsigned long )offset;
> #line 1570
>   err = drbd_send_all(mdev->tconn, socket, addr, size, msg_flags);
> #line 1571
45625,45627c45859,45861
< #line 2809
<   if ((size_t )sent == size) {
< #line 2810
---
> #line 1572
>   if (err == 0) {
> #line 1573
45632,45633c45866,45867
< #line 2811
<   return ((size_t )sent == size);
---
> #line 1574
>   return (err);
45636c45870
< #line 2814 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 1577 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
45639a45874
>   struct socket *socket ;
45642,45643d45876
<   int sent ;
<   int ok ;
45644a45878
>   int err ;
45649a45884
>   int sent ;
45653d45887
<   long tmp___7 ;
45656,45658c45890,45894
< #line 2817
<   tmp = current_thread_info___2();
< #line 2817
---
> #line 1580
>   socket = (mdev->tconn)->data.socket;
> #line 1581
>   tmp = current_thread_info___5();
> #line 1581
45660c45896
< #line 2819
---
> #line 1582
45662c45898,45900
< #line 2827
---
> #line 1583
>   err = -5;
> #line 1591
45664c45902
< #line 2828
---
> #line 1592
45666c45904
< #line 2828
---
> #line 1592
45669c45907
< #line 2827
---
> #line 1591
45671c45909
< #line 2827
---
> #line 1591
45673c45911
< #line 2828
---
> #line 1592
45675c45913
< #line 2828
---
> #line 1592
45678c45916
< #line 2827
---
> #line 1591
45680c45918
< #line 2827
---
> #line 1591
45682c45920
< #line 2828
---
> #line 1592
45684c45922
< #line 2828
---
> #line 1592
45691c45929
< #line 2830
---
> #line 1594
45693,45697c45931,45935
< #line 2831
<   drbd_update_congested(mdev);
< #line 2832
<   tmp___3 = current_thread_info___2();
< #line 2832
---
> #line 1595
>   drbd_update_congested(mdev->tconn);
> #line 1596
>   tmp___3 = current_thread_info___5();
> #line 1596
45699c45937
< #line 2832
---
> #line 1596
45701,45705c45939,45942
<   ldv_52614: 
< #line 2834
<   tmp___4 = (*(((mdev->data.socket)->ops)->sendpage))(mdev->data.socket, page, offset,
<                                                       (size_t )len, (int )msg_flags);
< #line 2834
---
>   ldv_53004: 
> #line 1600
>   tmp___4 = (*((socket->ops)->sendpage))(socket, page, offset, (size_t )len, (int )msg_flags);
> #line 1600
45707,45714c45944,45958
< #line 2837
<   if (sent == -11) {
< #line 2838
<     tmp___5 = we_should_drop_the_connection(mdev, mdev->data.socket);
< #line 2838
<     if (tmp___5 != 0) {
< #line 2840
<       goto ldv_52611;
---
> #line 1601
>   if (sent <= 0) {
> #line 1602
>     if (sent == -11) {
> #line 1603
>       tmp___5 = we_should_drop_the_connection(mdev->tconn, socket);
> #line 1603
>       if (tmp___5 != 0) {
> #line 1604
>         goto ldv_53001;
>       } else {
> 
>       }
> #line 1605
>       goto ldv_53002;
45716,45719d45959
< #line 2842
<       goto ldv_52612;
<     }
<   } else {
45721,45724c45961,45962
<   }
< #line 2844
<   if (sent <= 0) {
< #line 2845
---
>     }
> #line 1607
45727,45728c45965,45973
< #line 2847
<     goto ldv_52611;
---
> #line 1609
>     if (sent < 0) {
> #line 1610
>       err = sent;
>     } else {
> 
>     }
> #line 1611
>     goto ldv_53001;
45732c45977
< #line 2849
---
> #line 1613
45734c45979
< #line 2850
---
> #line 1614
45736,45737c45981,45982
<   ldv_52612: ;
< #line 2851
---
>   ldv_53002: ;
> #line 1615
45739,45740c45984,45985
< #line 2852
<     goto ldv_52614;
---
> #line 1616
>     goto ldv_53004;
45744,45747c45989,45992
<   ldv_52611: 
< #line 2852
<   tmp___6 = current_thread_info___2();
< #line 2852
---
>   ldv_53001: 
> #line 1616
>   tmp___6 = current_thread_info___5();
> #line 1616
45749,45757c45994,46000
< #line 2853
<   drbd_clear_flag(mdev, NET_CONGESTED);
< #line 2855
<   ok = len == 0;
< #line 2856
<   tmp___7 = __builtin_expect(ok != 0, 1L);
< #line 2856
<   if (tmp___7 != 0L) {
< #line 2857
---
> #line 1617
>   clear_bit(0, (unsigned long volatile   *)(& (mdev->tconn)->flags));
> #line 1619
>   if (len == 0) {
> #line 1620
>     err = 0;
> #line 1621
45762,45763c46005,46006
< #line 2858
<   return (ok);
---
> #line 1623
>   return (err);
45766c46009
< #line 2861 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 1626 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
45771c46014
<   int tmp ;
---
>   int err ;
45774c46017
< #line 2866
---
> #line 1631
45776c46019
< #line 2866
---
> #line 1631
45778,45782c46021,46025
< #line 2866
<   goto ldv_52622;
<   ldv_52621: 
< #line 2867
<   tmp = _drbd_no_send_page(mdev, bvec->bv_page, (int )bvec->bv_offset, (size_t )bvec->bv_len,
---
> #line 1631
>   goto ldv_53013;
>   ldv_53012: 
> #line 1634
>   err = _drbd_no_send_page(mdev, bvec->bv_page, (int )bvec->bv_offset, (size_t )bvec->bv_len,
45784,45787c46027,46030
< #line 2867
<   if (tmp == 0) {
< #line 2870
<     return (0);
---
> #line 1637
>   if (err != 0) {
> #line 1638
>     return (err);
45791c46034
< #line 2866
---
> #line 1631
45793c46036
< #line 2866
---
> #line 1631
45795,45796c46038,46039
<   ldv_52622: ;
< #line 2866
---
>   ldv_53013: ;
> #line 1631
45798,45799c46041,46042
< #line 2867
<     goto ldv_52621;
---
> #line 1632
>     goto ldv_53012;
45804,45805c46047,46048
< #line 2872
<   return (1);
---
> #line 1640
>   return (0);
45808c46051
< #line 2875 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 1643 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
45813c46056
<   int tmp ;
---
>   int err ;
45816c46059
< #line 2880
---
> #line 1648
45818c46061
< #line 2880
---
> #line 1648
45820,45824c46063,46067
< #line 2880
<   goto ldv_52631;
<   ldv_52630: 
< #line 2881
<   tmp = _drbd_send_page(mdev, bvec->bv_page, (int )bvec->bv_offset, (size_t )bvec->bv_len,
---
> #line 1648
>   goto ldv_53023;
>   ldv_53022: 
> #line 1651
>   err = _drbd_send_page(mdev, bvec->bv_page, (int )bvec->bv_offset, (size_t )bvec->bv_len,
45826,45829c46069,46072
< #line 2881
<   if (tmp == 0) {
< #line 2884
<     return (0);
---
> #line 1654
>   if (err != 0) {
> #line 1655
>     return (err);
45833c46076
< #line 2880
---
> #line 1648
45835c46078
< #line 2880
---
> #line 1648
45837,45838c46080,46081
<   ldv_52631: ;
< #line 2880
---
>   ldv_53023: ;
> #line 1648
45840,45841c46083,46084
< #line 2881
<     goto ldv_52630;
---
> #line 1649
>     goto ldv_53022;
45846,45847c46089,46090
< #line 2886
<   return (1);
---
> #line 1657
>   return (0);
45850,45851c46093,46094
< #line 2889 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static int _drbd_send_zc_ee(struct drbd_conf *mdev , struct drbd_epoch_entry *e ) 
---
> #line 1660 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> static int _drbd_send_zc_ee(struct drbd_conf *mdev , struct drbd_peer_request *peer_req ) 
45854a46098
>   int err ;
45859,45860c46103
<   int tmp___0 ;
<   struct page *tmp___1 ;
---
>   struct page *tmp___0 ;
45863,45870c46106,46113
< #line 2891
<   page = e->pages;
< #line 2892
<   len = e->size;
< #line 2894
<   goto ldv_52645;
<   ldv_52644: 
< #line 2895
---
> #line 1663
>   page = peer_req->pages;
> #line 1664
>   len = peer_req->i.size;
> #line 1668
>   goto ldv_53038;
>   ldv_53037: 
> #line 1669
45872c46115
< #line 2895
---
> #line 1669
45874c46117
< #line 2895
---
> #line 1669
45876c46119
< #line 2896
---
> #line 1671
45878,45883c46121,46126
< #line 2896
<   tmp___0 = _drbd_send_page(mdev, page, 0, (size_t )l, (unsigned long )tmp != (unsigned long )((struct page *)0) ? 32768U : 0U);
< #line 2896
<   if (tmp___0 == 0) {
< #line 2898
<     return (0);
---
> #line 1671
>   err = _drbd_send_page(mdev, page, 0, (size_t )l, (unsigned long )tmp != (unsigned long )((struct page *)0) ? 32768U : 0U);
> #line 1673
>   if (err != 0) {
> #line 1674
>     return (err);
45887c46130
< #line 2899
---
> #line 1675
45889c46132
< #line 2894
---
> #line 1668
45891,45892c46134,46135
<   ldv_52645: ;
< #line 2894
---
>   ldv_53038: ;
> #line 1668
45894,45898c46137,46141
< #line 2894
<     tmp___1 = page_chain_next(page);
< #line 2894
<     __builtin_prefetch((void const   *)tmp___1);
< #line 2894
---
> #line 1668
>     tmp___0 = page_chain_next(page);
> #line 1668
>     __builtin_prefetch((void const   *)tmp___0);
> #line 1668
45900,45901c46143,46144
< #line 2895
<       goto ldv_52644;
---
> #line 1669
>       goto ldv_53037;
45903,45904c46146,46147
< #line 2897
<       goto ldv_52646;
---
> #line 1671
>       goto ldv_53039;
45909,45911c46152,46154
<   ldv_52646: ;
< #line 2901
<   return (1);
---
>   ldv_53039: ;
> #line 1677
>   return (0);
45914c46157
< #line 2904 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 1680 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
45920,45922c46163,46165
< #line 2906
<   if (mdev->agreed_pro_version > 94) {
< #line 2907
---
> #line 1682
>   if ((mdev->tconn)->agreed_pro_version > 94) {
> #line 1683
45925c46168
< #line 2912
---
> #line 1688
45930c46173
< #line 2918 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 1694 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
45933,45934c46176,46177
<   int ok ;
<   struct p_data p ;
---
>   struct drbd_socket *sock ;
>   struct p_data *p ;
45936d46178
<   void *dgb ;
45938c46180,46181
<   int tmp ;
---
>   int err ;
>   void *tmp ;
45940,45947c46183,46186
<   __u16 tmp___1 ;
<   __u32 tmp___2 ;
<   __u64 tmp___3 ;
<   int tmp___4 ;
<   __u32 tmp___5 ;
<   __u32 tmp___6 ;
<   int tmp___7 ;
<   int tmp___8 ;
---
>   __u64 tmp___1 ;
>   int tmp___2 ;
>   __u32 tmp___3 ;
>   __u32 tmp___4 ;
45949c46188
<   int tmp___9 ;
---
>   int tmp___5 ;
45952,45954c46191
< #line 2920
<   ok = 1;
< #line 2922
---
> #line 1698
45956,45969c46193,46203
< #line 2926
<   tmp = drbd_get_data_sock___0(mdev);
< #line 2926
<   if (tmp == 0) {
< #line 2927
<     return (0);
<   } else {
< 
<   }
< #line 2929
<   if (mdev->agreed_pro_version > 86 && (unsigned long )mdev->integrity_w_tfm != (unsigned long )((struct crypto_hash *)0)) {
< #line 2929
<     tmp___0 = crypto_hash_digestsize(mdev->integrity_w_tfm);
< #line 2929
---
> #line 1702
>   sock = & (mdev->tconn)->data;
> #line 1703
>   tmp = drbd_prepare_command(mdev, sock);
> #line 1703
>   p = (struct p_data *)tmp;
> #line 1704
>   if ((unsigned long )(mdev->tconn)->integrity_tfm != (unsigned long )((struct crypto_hash *)0)) {
> #line 1704
>     tmp___0 = crypto_hash_digestsize((mdev->tconn)->integrity_tfm);
> #line 1704
45972c46206
< #line 2929
---
> #line 1704
45975,45984c46209,46212
< #line 2932
<   if (req->size <= 32768U) {
< #line 2933
<     p.head.h80.magic = 1728214147U;
< #line 2934
<     p.head.h80.command = 0U;
< #line 2935
<     tmp___1 = __fswab16((int )((unsigned int )((int )((__u16 )dgs) + (int )((__u16 )req->size)) + 24U));
< #line 2935
<     p.head.h80.length = tmp___1;
---
> #line 1706
>   if ((unsigned long )p == (unsigned long )((struct p_data *)0)) {
> #line 1707
>     return (-5);
45986,45993c46214
< #line 2938
<     p.head.h95.magic = 23171U;
< #line 2939
<     p.head.h95.command = 0U;
< #line 2940
<     tmp___2 = __fswab32((req->size + (__u32 )dgs) + 24U);
< #line 2940
<     p.head.h95.length = tmp___2;
---
> 
45995,46007c46216,46228
< #line 2944
<   tmp___3 = __fswab64((__u64 )req->sector);
< #line 2944
<   p.sector = tmp___3;
< #line 2945
<   p.block_id = (u64 )req;
< #line 2946
<   tmp___4 = atomic_add_return(1, & mdev->packet_seq);
< #line 2946
<   tmp___5 = __fswab32((__u32 )tmp___4);
< #line 2946
<   p.seq_num = tmp___5;
< #line 2948
---
> #line 1708
>   tmp___1 = __fswab64((__u64 )req->i.sector);
> #line 1708
>   p->sector = tmp___1;
> #line 1709
>   p->block_id = (u64 )req;
> #line 1710
>   tmp___2 = atomic_add_return(1, & mdev->packet_seq);
> #line 1710
>   tmp___3 = __fswab32((__u32 )tmp___2);
> #line 1710
>   p->seq_num = tmp___3;
> #line 1711
46009,46011c46230,46232
< #line 2950
<   if ((int )mdev->state.ldv_39979.conn > 15 && (int )mdev->state.ldv_39979.conn <= 21) {
< #line 2952
---
> #line 1712
>   if ((int )mdev->state.ldv_49522.conn > 15 && (int )mdev->state.ldv_49522.conn <= 21) {
> #line 1714
46016,46035c46237,46252
< #line 2954
<   tmp___6 = __fswab32(dp_flags);
< #line 2954
<   p.dp_flags = tmp___6;
< #line 2955
<   drbd_set_flag(mdev, UNPLUG_REMOTE);
< #line 2956
<   tmp___7 = drbd_send(mdev, mdev->data.socket, (void *)(& p), 32UL, dgs != 0 ? 32768U : 0U);
< #line 2956
<   ok = tmp___7 == 32;
< #line 2958
<   if (ok != 0 && dgs != 0) {
< #line 2959
<     dgb = mdev->int_dig_out;
< #line 2960
<     drbd_csum_bio(mdev, mdev->integrity_w_tfm, req->master_bio, dgb);
< #line 2961
<     tmp___8 = drbd_send(mdev, mdev->data.socket, dgb, (size_t )dgs, 0U);
< #line 2961
<     ok = tmp___8 == dgs;
---
> #line 1715
>   if ((mdev->tconn)->agreed_pro_version > 99) {
> #line 1716
>     if (((unsigned long )req->rq_state & 32768UL) != 0UL) {
> #line 1717
>       dp_flags = dp_flags | 128U;
>     } else {
> 
>     }
> #line 1718
>     if (((unsigned long )req->rq_state & 65536UL) != 0UL) {
> #line 1719
>       dp_flags = dp_flags | 256U;
>     } else {
> 
>     }
46039,46044c46256,46275
< #line 2963
<   if (ok != 0) {
< #line 2975
<     if ((mdev->net_conf)->wire_protocol == 1 || dgs != 0) {
< #line 2976
<       ok = _drbd_send_bio(mdev, req->master_bio);
---
> #line 1721
>   tmp___4 = __fswab32(dp_flags);
> #line 1721
>   p->dp_flags = tmp___4;
> #line 1722
>   if (dgs != 0) {
> #line 1723
>     drbd_csum_bio(mdev, (mdev->tconn)->integrity_tfm, req->master_bio, (void *)p + 1U);
>   } else {
> 
>   }
> #line 1724
>   err = __send_command(mdev->tconn, mdev->vnr, sock, P_DATA, (unsigned int )dgs + 24U,
>                        0, req->i.size);
> #line 1725
>   if (err == 0) {
> #line 1737
>     if (((unsigned long )req->rq_state & 98304UL) == 0UL || dgs != 0) {
> #line 1738
>       err = _drbd_send_bio(mdev, req->master_bio);
46046,46047c46277,46278
< #line 2978
<       ok = _drbd_send_zc_bio(mdev, req->master_bio);
---
> #line 1740
>       err = _drbd_send_zc_bio(mdev, req->master_bio);
46049c46280
< #line 2981
---
> #line 1743
46051,46058c46282,46288
< #line 2985
<       drbd_csum_bio(mdev, mdev->integrity_w_tfm, req->master_bio, (void *)(& digest));
< #line 2986
<       tmp___9 = memcmp((void const   *)mdev->int_dig_out, (void const   *)(& digest),
<                        (size_t )dgs);
< #line 2986
<       if (tmp___9 != 0) {
< #line 2987
---
> #line 1747
>       drbd_csum_bio(mdev, (mdev->tconn)->integrity_tfm, req->master_bio, (void *)(& digest));
> #line 1748
>       tmp___5 = memcmp((void const   *)p + 1U, (void const   *)(& digest), (size_t )dgs);
> #line 1748
>       if (tmp___5 != 0) {
> #line 1749
46060c46290
<                  (unsigned long long )req->sector, req->size);
---
>                  (unsigned long long )req->i.sector, req->i.size);
46070,46073c46300,46303
< #line 2996
<   drbd_put_data_sock___0(mdev);
< #line 2998
<   return (ok);
---
> #line 1757
>   ldv_mutex_unlock_213(& sock->mutex);
> #line 1759
>   return (err);
46076,46077c46306,46307
< #line 3005 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< int drbd_send_block(struct drbd_conf *mdev , enum drbd_packets cmd , struct drbd_epoch_entry *e ) 
---
> #line 1766 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> int drbd_send_block(struct drbd_conf *mdev , enum drbd_packet cmd , struct drbd_peer_request *peer_req ) 
46079,46081c46309,46311
<   int ok ;
<   struct p_data p ;
<   void *dgb ;
---
>   struct drbd_socket *sock ;
>   struct p_data *p ;
>   int err ;
46083,46091c46313,46315
<   unsigned int tmp ;
<   __u16 tmp___0 ;
<   __u16 tmp___1 ;
<   __u16 tmp___2 ;
<   __u32 tmp___3 ;
<   __u64 tmp___4 ;
<   int tmp___5 ;
<   int tmp___6 ;
<   int tmp___7 ;
---
>   void *tmp ;
>   unsigned int tmp___0 ;
>   __u64 tmp___1 ;
46094,46099c46318,46329
< #line 3013
<   if (mdev->agreed_pro_version > 86 && (unsigned long )mdev->integrity_w_tfm != (unsigned long )((struct crypto_hash *)0)) {
< #line 3013
<     tmp = crypto_hash_digestsize(mdev->integrity_w_tfm);
< #line 3013
<     dgs = (int )tmp;
---
> #line 1774
>   sock = & (mdev->tconn)->data;
> #line 1775
>   tmp = drbd_prepare_command(mdev, sock);
> #line 1775
>   p = (struct p_data *)tmp;
> #line 1777
>   if ((unsigned long )(mdev->tconn)->integrity_tfm != (unsigned long )((struct crypto_hash *)0)) {
> #line 1777
>     tmp___0 = crypto_hash_digestsize((mdev->tconn)->integrity_tfm);
> #line 1777
>     dgs = (int )tmp___0;
46101c46331
< #line 3013
---
> #line 1777
46104,46139c46334,46337
< #line 3016
<   if (e->size <= 32768U) {
< #line 3017
<     p.head.h80.magic = 1728214147U;
< #line 3018
<     tmp___0 = __fswab16((int )((__u16 )cmd));
< #line 3018
<     p.head.h80.command = tmp___0;
< #line 3019
<     tmp___1 = __fswab16((int )((unsigned int )((int )((__u16 )dgs) + (int )((__u16 )e->size)) + 24U));
< #line 3019
<     p.head.h80.length = tmp___1;
<   } else {
< #line 3022
<     p.head.h95.magic = 23171U;
< #line 3023
<     tmp___2 = __fswab16((int )((__u16 )cmd));
< #line 3023
<     p.head.h95.command = tmp___2;
< #line 3024
<     tmp___3 = __fswab32((e->size + (__u32 )dgs) + 24U);
< #line 3024
<     p.head.h95.length = tmp___3;
<   }
< #line 3028
<   tmp___4 = __fswab64((__u64 )e->sector);
< #line 3028
<   p.sector = tmp___4;
< #line 3029
<   p.block_id = e->ldv_49189.block_id;
< #line 3036
<   tmp___5 = drbd_get_data_sock___0(mdev);
< #line 3036
<   if (tmp___5 == 0) {
< #line 3037
<     return (0);
---
> #line 1779
>   if ((unsigned long )p == (unsigned long )((struct p_data *)0)) {
> #line 1780
>     return (-5);
46143,46156c46341,46354
< #line 3039
<   tmp___6 = drbd_send(mdev, mdev->data.socket, (void *)(& p), 32UL, dgs != 0 ? 32768U : 0U);
< #line 3039
<   ok = tmp___6 == 32;
< #line 3040
<   if (ok != 0 && dgs != 0) {
< #line 3041
<     dgb = mdev->int_dig_out;
< #line 3042
<     drbd_csum_ee(mdev, mdev->integrity_w_tfm, e, dgb);
< #line 3043
<     tmp___7 = drbd_send(mdev, mdev->data.socket, dgb, (size_t )dgs, 0U);
< #line 3043
<     ok = tmp___7 == dgs;
---
> #line 1781
>   tmp___1 = __fswab64((__u64 )peer_req->i.sector);
> #line 1781
>   p->sector = tmp___1;
> #line 1782
>   p->block_id = peer_req->ldv_50726.block_id;
> #line 1783
>   p->seq_num = 0U;
> #line 1784
>   p->dp_flags = 0U;
> #line 1785
>   if (dgs != 0) {
> #line 1786
>     drbd_csum_ee(mdev, (mdev->tconn)->integrity_tfm, peer_req, (void *)p + 1U);
46160,46163c46358,46364
< #line 3045
<   if (ok != 0) {
< #line 3046
<     ok = _drbd_send_zc_ee(mdev, e);
---
> #line 1787
>   err = __send_command(mdev->tconn, mdev->vnr, sock, cmd, (unsigned int )dgs + 24U,
>                        0, peer_req->i.size);
> #line 1788
>   if (err == 0) {
> #line 1789
>     err = _drbd_send_zc_ee(mdev, peer_req);
46167,46170c46368,46371
< #line 3048
<   drbd_put_data_sock___0(mdev);
< #line 3050
<   return (ok);
---
> #line 1790
>   ldv_mutex_unlock_214(& sock->mutex);
> #line 1792
>   return (err);
46173,46174c46374,46375
< #line 3053 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< int drbd_send_oos(struct drbd_conf *mdev , struct drbd_request *req ) 
---
> #line 1795 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> int drbd_send_out_of_sync(struct drbd_conf *mdev , struct drbd_request *req ) 
46176,46179c46377,46382
<   struct p_block_desc p ;
<   __u64 tmp ;
<   __u32 tmp___0 ;
<   int tmp___1 ;
---
>   struct drbd_socket *sock ;
>   struct p_block_desc *p ;
>   void *tmp ;
>   __u64 tmp___0 ;
>   __u32 tmp___1 ;
>   int tmp___2 ;
46182,46193c46385,46409
< #line 3057
<   tmp = __fswab64((__u64 )req->sector);
< #line 3057
<   p.sector = tmp;
< #line 3058
<   tmp___0 = __fswab32(req->size);
< #line 3058
<   p.blksize = tmp___0;
< #line 3060
<   tmp___1 = drbd_send_cmd(mdev, 1, P_OUT_OF_SYNC, & p.head, 24UL);
< #line 3060
<   return (tmp___1);
---
> #line 1800
>   sock = & (mdev->tconn)->data;
> #line 1801
>   tmp = drbd_prepare_command(mdev, sock);
> #line 1801
>   p = (struct p_block_desc *)tmp;
> #line 1802
>   if ((unsigned long )p == (unsigned long )((struct p_block_desc *)0)) {
> #line 1803
>     return (-5);
>   } else {
> 
>   }
> #line 1804
>   tmp___0 = __fswab64((__u64 )req->i.sector);
> #line 1804
>   p->sector = tmp___0;
> #line 1805
>   tmp___1 = __fswab32(req->i.size);
> #line 1805
>   p->blksize = tmp___1;
> #line 1806
>   tmp___2 = drbd_send_command(mdev, sock, P_OUT_OF_SYNC, 16U, 0, 0U);
> #line 1806
>   return (tmp___2);
46196,46197c46412,46413
< #line 3079 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< int drbd_send(struct drbd_conf *mdev , struct socket *sock , void *buf , size_t size ,
---
> #line 1825 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> int drbd_send(struct drbd_tconn *tconn , struct socket *sock , void *buf , size_t size ,
46203a46420,46421
>   struct net_conf *_________p1 ;
>   bool __warned ;
46205c46423,46425
<   struct task_struct *tmp___0 ;
---
>   int tmp___0 ;
>   int tmp___1 ;
>   struct task_struct *tmp___2 ;
46212c46432
< #line 3084
---
> #line 1830
46214c46434
< #line 3086
---
> #line 1832
46216,46217c46436,46437
< #line 3087
<     return (-1000);
---
> #line 1833
>     return (-53);
46221c46441
< #line 3091
---
> #line 1837
46223c46443
< #line 3092
---
> #line 1838
46225c46445
< #line 3094
---
> #line 1840
46227c46447
< #line 3095
---
> #line 1841
46229c46449
< #line 3096
---
> #line 1842
46231c46451
< #line 3097
---
> #line 1843
46233c46453
< #line 3098
---
> #line 1844
46235,46240c46455,46485
< #line 3100
<   if ((unsigned long )mdev->data.socket == (unsigned long )sock) {
< #line 3101
<     mdev->ko_count = (unsigned int )(mdev->net_conf)->ko_count;
< #line 3102
<     drbd_update_congested(mdev);
---
> #line 1846
>   if ((unsigned long )tconn->data.socket == (unsigned long )sock) {
> #line 1847
>     rcu_read_lock___5();
> #line 1848
>     _________p1 = *((struct net_conf * volatile  *)(& tconn->net_conf));
> #line 1848
>     tmp = debug_lockdep_rcu_enabled();
> #line 1848
>     if (tmp != 0 && ! __warned) {
> #line 1848
>       tmp___0 = rcu_read_lock_held();
> #line 1848
>       if (tmp___0 == 0 && 1) {
> #line 1848
>         __warned = 1;
> #line 1848
>         lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
>                                1848, "suspicious rcu_dereference_check() usage");
>       } else {
> 
>       }
>     } else {
> 
>     }
> #line 1848
>     tconn->ko_count = _________p1->ko_count;
> #line 1849
>     rcu_read_unlock___5();
> #line 1850
>     drbd_update_congested(tconn);
46244,46245c46489,46490
<   ldv_52688: 
< #line 3114
---
>   ldv_53085: 
> #line 1862
46247c46492
< #line 3115
---
> #line 1863
46249,46254c46494,46499
< #line 3116
<     tmp = we_should_drop_the_connection(mdev, sock);
< #line 3116
<     if (tmp != 0) {
< #line 3117
<       goto ldv_52686;
---
> #line 1864
>     tmp___1 = we_should_drop_the_connection(tconn, sock);
> #line 1864
>     if (tmp___1 != 0) {
> #line 1865
>       goto ldv_53083;
46256,46257c46501,46502
< #line 3119
<       goto ldv_52687;
---
> #line 1867
>       goto ldv_53084;
46262,46271c46507
< #line 3121
<   if (rv == 0) {
< #line 3121
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( rv != 0 ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             3121);
<   } else {
< 
<   }
< #line 3122
---
> #line 1869
46273,46277c46509,46513
< #line 3123
<     tmp___0 = get_current();
< #line 3123
<     flush_signals(tmp___0);
< #line 3124
---
> #line 1870
>     tmp___2 = get_current();
> #line 1870
>     flush_signals(tmp___2);
> #line 1871
46282c46518
< #line 3126
---
> #line 1873
46284,46285c46520,46521
< #line 3127
<     goto ldv_52686;
---
> #line 1874
>     goto ldv_53083;
46289c46525
< #line 3128
---
> #line 1875
46291c46527
< #line 3129
---
> #line 1876
46293c46529
< #line 3130
---
> #line 1877
46295,46296c46531,46532
<   ldv_52687: ;
< #line 3131
---
>   ldv_53084: ;
> #line 1878
46298,46299c46534,46535
< #line 3132
<     goto ldv_52688;
---
> #line 1879
>     goto ldv_53085;
46303,46307c46539,46543
<   ldv_52686: ;
< #line 3133
<   if ((unsigned long )mdev->data.socket == (unsigned long )sock) {
< #line 3134
<     drbd_clear_flag(mdev, NET_CONGESTED);
---
>   ldv_53083: ;
> #line 1880
>   if ((unsigned long )tconn->data.socket == (unsigned long )sock) {
> #line 1881
>     clear_bit(0, (unsigned long volatile   *)(& tconn->flags));
46311c46547
< #line 3136
---
> #line 1883
46313c46549
< #line 3137
---
> #line 1884
46315,46319c46551,46554
< #line 3138
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "%s_sendmsg returned %d\n",
<               (unsigned long )mdev->meta.socket == (unsigned long )sock ? (char *)"msock" : (char *)"sock",
<               rv);
< #line 3141
---
> #line 1885
>       printk("\vd-con %s: %s_sendmsg returned %d\n", tconn->name, (unsigned long )tconn->meta.socket == (unsigned long )sock ? (char *)"msock" : (char *)"sock",
>              rv);
> #line 1888
46321,46323c46556,46558
< #line 3141
<       val.ldv_39979.conn = 4U;
< #line 3141
---
> #line 1888
>       val.ldv_40024.conn = 4U;
> #line 1888
46325,46328c46560,46563
< #line 3141
<       mask.ldv_39979.conn = 31U;
< #line 3141
<       drbd_force_state(mdev, mask, val);
---
> #line 1888
>       mask.ldv_40024.conn = 31U;
> #line 1888
>       conn_request_state(tconn, mask, val, CS_HARD);
46330c46565
< #line 3143
---
> #line 1890
46332,46334c46567,46569
< #line 3143
<       val___0.ldv_39979.conn = 3U;
< #line 3143
---
> #line 1890
>       val___0.ldv_40024.conn = 3U;
> #line 1890
46336,46339c46571,46574
< #line 3143
<       mask___0.ldv_39979.conn = 31U;
< #line 3143
<       drbd_force_state(mdev, mask___0, val___0);
---
> #line 1890
>       mask___0.ldv_40024.conn = 31U;
> #line 1890
>       conn_request_state(tconn, mask___0, val___0, CS_HARD);
46344c46579
< #line 3146
---
> #line 1893
46348c46583,46610
< #line 3149 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 1901 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> int drbd_send_all(struct drbd_tconn *tconn , struct socket *sock , void *buffer ,
>                   size_t size , unsigned int msg_flags ) 
> { 
>   int err ;
> 
>   {
> #line 1906
>   err = drbd_send(tconn, sock, buffer, size, msg_flags);
> #line 1907
>   if (err < 0) {
> #line 1908
>     return (err);
>   } else {
> 
>   }
> #line 1909
>   if ((size_t )err != size) {
> #line 1910
>     return (-5);
>   } else {
> 
>   }
> #line 1911
>   return (0);
> }
> }
> #line 1914 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
46357c46619
< #line 3151
---
> #line 1916
46359c46621
< #line 3153
---
> #line 1918
46361,46365c46623,46627
< #line 3155
<   ldv_mutex_lock_221(& drbd_main_mutex);
< #line 3156
<   tmp = spinlock_check(& mdev->req_lock);
< #line 3156
---
> #line 1920
>   ldv_mutex_lock_215(& drbd_main_mutex);
> #line 1921
>   tmp = spinlock_check(& (mdev->tconn)->req_lock);
> #line 1921
46367,46369c46629,46631
< #line 3160
<   if ((unsigned int )*((unsigned char *)mdev + 2276UL) != 1U) {
< #line 3161
---
> #line 1925
>   if ((unsigned int )*((unsigned char *)mdev + 748UL) != 1U) {
> #line 1926
46371c46633
< #line 3162
---
> #line 1927
46374c46636
< #line 3163
---
> #line 1928
46376c46638
< #line 3164
---
> #line 1929
46384c46646
< #line 3167
---
> #line 1932
46386c46648
< #line 3168
---
> #line 1933
46391,46395c46653,46657
< #line 3169
<   spin_unlock_irqrestore(& mdev->req_lock, flags);
< #line 3170
<   ldv_mutex_unlock_222(& drbd_main_mutex);
< #line 3172
---
> #line 1934
>   spin_unlock_irqrestore(& (mdev->tconn)->req_lock, flags);
> #line 1935
>   ldv_mutex_unlock_216(& drbd_main_mutex);
> #line 1937
46399c46661
< #line 3175 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 1940 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
46405c46667
< #line 3177
---
> #line 1942
46407,46409c46669,46671
< #line 3178
<   ldv_mutex_lock_223(& drbd_main_mutex);
< #line 3179
---
> #line 1943
>   ldv_mutex_lock_217(& drbd_main_mutex);
> #line 1944
46411,46413c46673,46675
< #line 3180
<   ldv_mutex_unlock_224(& drbd_main_mutex);
< #line 3181
---
> #line 1945
>   ldv_mutex_unlock_218(& drbd_main_mutex);
> #line 1946
46417c46679
< #line 3184 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 1949 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
46420,46421c46682
<   struct syncer_conf __constr_expr_0 ;
<   union drbd_state __constr_expr_1 ;
---
>   union drbd_dev_state __constr_expr_0 ;
46424,46798c46685,46707
< #line 3188
<   __constr_expr_0.rate = 250;
< #line 3188
<   __constr_expr_0.after = -1;
< #line 3188
<   __constr_expr_0.al_extents = 127;
< #line 3188
<   __constr_expr_0.verify_alg[0] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[1] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[2] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[3] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[4] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[5] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[6] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[7] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[8] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[9] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[10] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[11] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[12] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[13] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[14] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[15] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[16] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[17] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[18] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[19] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[20] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[21] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[22] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[23] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[24] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[25] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[26] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[27] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[28] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[29] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[30] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[31] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[32] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[33] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[34] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[35] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[36] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[37] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[38] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[39] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[40] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[41] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[42] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[43] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[44] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[45] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[46] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[47] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[48] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[49] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[50] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[51] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[52] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[53] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[54] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[55] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[56] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[57] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[58] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[59] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[60] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[61] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[62] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg[63] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.verify_alg_len = 0;
< #line 3188
<   __constr_expr_0.cpu_mask[0] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[1] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[2] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[3] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[4] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[5] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[6] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[7] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[8] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[9] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[10] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[11] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[12] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[13] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[14] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[15] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[16] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[17] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[18] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[19] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[20] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[21] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[22] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[23] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[24] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[25] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[26] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[27] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[28] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[29] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[30] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask[31] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.cpu_mask_len = 0;
< #line 3188
<   __constr_expr_0.csums_alg[0] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[1] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[2] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[3] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[4] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[5] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[6] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[7] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[8] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[9] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[10] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[11] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[12] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[13] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[14] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[15] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[16] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[17] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[18] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[19] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[20] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[21] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[22] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[23] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[24] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[25] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[26] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[27] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[28] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[29] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[30] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[31] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[32] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[33] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[34] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[35] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[36] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[37] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[38] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[39] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[40] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[41] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[42] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[43] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[44] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[45] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[46] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[47] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[48] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[49] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[50] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[51] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[52] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[53] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[54] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[55] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[56] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[57] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[58] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[59] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[60] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[61] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[62] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg[63] = (unsigned char)0;
< #line 3188
<   __constr_expr_0.csums_alg_len = 0;
< #line 3188
<   __constr_expr_0.use_rle = 0U;
< #line 3188
<   __constr_expr_0.on_no_data = 0;
< #line 3188
<   __constr_expr_0.c_plan_ahead = 0;
< #line 3188
<   __constr_expr_0.c_delay_target = 10;
< #line 3188
<   __constr_expr_0.c_fill_target = 0;
< #line 3188
<   __constr_expr_0.c_max_rate = 102400;
< #line 3188
<   __constr_expr_0.c_min_rate = 4096;
< #line 3188
<   mdev->sync_conf = __constr_expr_0;
< #line 3206
<   __constr_expr_1.ldv_39979.role = 2U;
< #line 3206
<   __constr_expr_1.ldv_39979.peer = 0U;
< #line 3206
<   __constr_expr_1.ldv_39979.conn = 0U;
< #line 3206
<   __constr_expr_1.ldv_39979.disk = 0U;
< #line 3206
<   __constr_expr_1.ldv_39979.pdsk = 6U;
< #line 3206
<   __constr_expr_1.ldv_39979.susp = 0U;
< #line 3206
<   __constr_expr_1.ldv_39979.aftr_isp = (unsigned char)0;
< #line 3206
<   __constr_expr_1.ldv_39979.peer_isp = (unsigned char)0;
< #line 3206
<   __constr_expr_1.ldv_39979.user_isp = (unsigned char)0;
< #line 3206
<   __constr_expr_1.ldv_39979.susp_nod = 0U;
< #line 3206
<   __constr_expr_1.ldv_39979.susp_fen = 0U;
< #line 3206
<   __constr_expr_1.ldv_39979._pad = (unsigned short)0;
< #line 3206
<   mdev->state = __constr_expr_1;
< #line 3207
---
> #line 1953
>   __constr_expr_0.ldv_49522.role = 2U;
> #line 1953
>   __constr_expr_0.ldv_49522.peer = 0U;
> #line 1953
>   __constr_expr_0.ldv_49522.conn = 0U;
> #line 1953
>   __constr_expr_0.ldv_49522.disk = 0U;
> #line 1953
>   __constr_expr_0.ldv_49522.pdsk = 6U;
> #line 1953
>   __constr_expr_0.ldv_49522._unused = (unsigned char)0;
> #line 1953
>   __constr_expr_0.ldv_49522.aftr_isp = (unsigned char)0;
> #line 1953
>   __constr_expr_0.ldv_49522.peer_isp = (unsigned char)0;
> #line 1953
>   __constr_expr_0.ldv_49522.user_isp = (unsigned char)0;
> #line 1953
>   __constr_expr_0.ldv_49522._pad = (unsigned short)0;
> #line 1953
>   mdev->state = __constr_expr_0;
> #line 1954
46802c46711
< #line 3218 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 1962 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
46817,46823d46725
<   struct lock_class_key __key___11 ;
<   struct lock_class_key __key___12 ;
<   struct lock_class_key __key___13 ;
<   struct lock_class_key __key___14 ;
<   struct lock_class_key __key___15 ;
<   struct lock_class_key __key___16 ;
<   struct lock_class_key __key___17 ;
46826c46728
< #line 3223
---
> #line 1967
46828c46730
< #line 3225
---
> #line 1969
46830c46732
< #line 3226
---
> #line 1970
46832c46734
< #line 3227
---
> #line 1971
46834c46736
< #line 3228
---
> #line 1972
46836c46738
< #line 3229
---
> #line 1973
46838,46844c46740
< #line 3230
<   atomic_set(& mdev->net_cnt, 0);
< #line 3231
<   atomic_set(& mdev->packet_seq, 0);
< #line 3232
<   atomic_set(& mdev->pp_in_use, 0);
< #line 3233
---
> #line 1974
46846c46742
< #line 3234
---
> #line 1975
46848c46744
< #line 3235
---
> #line 1976
46850c46746
< #line 3236
---
> #line 1977
46852c46748
< #line 3237
---
> #line 1978
46854,46874c46750,46754
< #line 3239
<   __mutex_init(& mdev->data.mutex, "&mdev->data.mutex", & __key);
< #line 3240
<   __mutex_init(& mdev->meta.mutex, "&mdev->meta.mutex", & __key___0);
< #line 3241
<   sema_init(& mdev->data.work.s, 0);
< #line 3242
<   sema_init(& mdev->meta.work.s, 0);
< #line 3243
<   __mutex_init(& mdev->state_mutex, "&mdev->state_mutex", & __key___1);
< #line 3245
<   spinlock_check(& mdev->data.work.q_lock);
< #line 3245
<   __raw_spin_lock_init(& mdev->data.work.q_lock.ldv_5957.rlock, "&(&mdev->data.work.q_lock)->rlock",
<                        & __key___2);
< #line 3246
<   spinlock_check(& mdev->meta.work.q_lock);
< #line 3246
<   __raw_spin_lock_init(& mdev->meta.work.q_lock.ldv_5957.rlock, "&(&mdev->meta.work.q_lock)->rlock",
<                        & __key___3);
< #line 3248
---
> #line 1980
>   __mutex_init(& mdev->own_state_mutex, "&mdev->own_state_mutex", & __key);
> #line 1981
>   mdev->state_mutex = & mdev->own_state_mutex;
> #line 1983
46876c46756
< #line 3248
---
> #line 1983
46878,46884c46758,46759
<                        & __key___4);
< #line 3249
<   spinlock_check(& mdev->req_lock);
< #line 3249
<   __raw_spin_lock_init(& mdev->req_lock.ldv_5957.rlock, "&(&mdev->req_lock)->rlock",
<                        & __key___5);
< #line 3250
---
>                        & __key___0);
> #line 1984
46886c46761
< #line 3250
---
> #line 1984
46888,46894c46763,46764
<                        & __key___6);
< #line 3251
<   spinlock_check(& mdev->epoch_lock);
< #line 3251
<   __raw_spin_lock_init(& mdev->epoch_lock.ldv_5957.rlock, "&(&mdev->epoch_lock)->rlock",
<                        & __key___7);
< #line 3253
---
>                        & __key___1);
> #line 1986
46896c46766
< #line 3254
---
> #line 1987
46898c46768
< #line 3255
---
> #line 1988
46900c46770
< #line 3256
---
> #line 1989
46902c46772
< #line 3257
---
> #line 1990
46904c46774
< #line 3258
---
> #line 1991
46906,46910c46776
< #line 3259
<   INIT_LIST_HEAD(& mdev->data.work.q);
< #line 3260
<   INIT_LIST_HEAD(& mdev->meta.work.q);
< #line 3261
---
> #line 1992
46912c46778
< #line 3262
---
> #line 1993
46914c46780
< #line 3263
---
> #line 1994
46916c46782
< #line 3264
---
> #line 1995
46918c46784
< #line 3265
---
> #line 1996
46920c46786
< #line 3266
---
> #line 1997
46922c46788
< #line 3268
---
> #line 1999
46924c46790
< #line 3269
---
> #line 2000
46926c46792
< #line 3270
---
> #line 2001
46928c46794
< #line 3271
---
> #line 2002
46930c46796
< #line 3272
---
> #line 2003
46932c46798
< #line 3273
---
> #line 2004
46934,46942c46800,46820
< #line 3274
<   init_timer_key(& mdev->resync_timer, 0U, "(&mdev->resync_timer)", & __key___8);
< #line 3275
<   init_timer_key(& mdev->md_sync_timer, 0U, "(&mdev->md_sync_timer)", & __key___9);
< #line 3276
<   init_timer_key(& mdev->start_resync_timer, 0U, "(&mdev->start_resync_timer)", & __key___10);
< #line 3277
<   init_timer_key(& mdev->request_timer, 0U, "(&mdev->request_timer)", & __key___11);
< #line 3278
---
> #line 2006
>   mdev->resync_work.ldv_49807.mdev = mdev;
> #line 2007
>   mdev->unplug_work.ldv_49807.mdev = mdev;
> #line 2008
>   mdev->go_diskless.ldv_49807.mdev = mdev;
> #line 2009
>   mdev->md_sync_work.ldv_49807.mdev = mdev;
> #line 2010
>   mdev->bm_io_work.w.ldv_49807.mdev = mdev;
> #line 2011
>   mdev->start_resync_work.ldv_49807.mdev = mdev;
> #line 2013
>   init_timer_key(& mdev->resync_timer, 0U, "(&mdev->resync_timer)", & __key___2);
> #line 2014
>   init_timer_key(& mdev->md_sync_timer, 0U, "(&mdev->md_sync_timer)", & __key___3);
> #line 2015
>   init_timer_key(& mdev->start_resync_timer, 0U, "(&mdev->start_resync_timer)", & __key___4);
> #line 2016
>   init_timer_key(& mdev->request_timer, 0U, "(&mdev->request_timer)", & __key___5);
> #line 2017
46944c46822
< #line 3279
---
> #line 2018
46946c46824
< #line 3280
---
> #line 2019
46948c46826
< #line 3281
---
> #line 2020
46950c46828
< #line 3282
---
> #line 2021
46952c46830
< #line 3283
---
> #line 2022
46954c46832
< #line 3284
---
> #line 2023
46956c46834
< #line 3285
---
> #line 2024
46958,46980c46836,46846
< #line 3287
<   __init_waitqueue_head(& mdev->misc_wait, "&mdev->misc_wait", & __key___12);
< #line 3288
<   __init_waitqueue_head(& mdev->state_wait, "&mdev->state_wait", & __key___13);
< #line 3289
<   __init_waitqueue_head(& mdev->net_cnt_wait, "&mdev->net_cnt_wait", & __key___14);
< #line 3290
<   __init_waitqueue_head(& mdev->ee_wait, "&mdev->ee_wait", & __key___15);
< #line 3291
<   __init_waitqueue_head(& mdev->al_wait, "&mdev->al_wait", & __key___16);
< #line 3292
<   __init_waitqueue_head(& mdev->seq_wait, "&mdev->seq_wait", & __key___17);
< #line 3294
<   drbd_thread_init(mdev, & mdev->receiver, & drbdd_init);
< #line 3295
<   drbd_thread_init(mdev, & mdev->worker, & drbd_worker);
< #line 3296
<   drbd_thread_init(mdev, & mdev->asender, & drbd_asender);
< #line 3298
<   mdev->agreed_pro_version = 97;
< #line 3299
<   mdev->write_ordering = WO_bdev_flush;
< #line 3300
---
> #line 2026
>   __init_waitqueue_head(& mdev->misc_wait, "&mdev->misc_wait", & __key___6);
> #line 2027
>   __init_waitqueue_head(& mdev->state_wait, "&mdev->state_wait", & __key___7);
> #line 2028
>   __init_waitqueue_head(& mdev->ee_wait, "&mdev->ee_wait", & __key___8);
> #line 2029
>   __init_waitqueue_head(& mdev->al_wait, "&mdev->al_wait", & __key___9);
> #line 2030
>   __init_waitqueue_head(& mdev->seq_wait, "&mdev->seq_wait", & __key___10);
> #line 2032
46982c46848
< #line 3301
---
> #line 2033
46984c46850
< #line 3302
---
> #line 2034
46986c46852
< #line 3303
---
> #line 2035
46990c46856
< #line 3305 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 2037 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
46994,46995c46860,46861
<   int tmp ;
<   int tmp___0 ;
---
>   unsigned int tmp ;
>   unsigned int tmp___0 ;
46999,47001c46865,46867
<   unsigned int tmp___4 ;
<   unsigned int tmp___5 ;
<   sector_t tmp___6 ;
---
>   sector_t tmp___4 ;
>   unsigned long tmp___5 ;
>   unsigned long tmp___6 ;
47003,47004c46869,46870
<   unsigned long tmp___8 ;
<   unsigned long tmp___9 ;
---
>   int tmp___8 ;
>   int tmp___9 ;
47013,47015d46878
<   int tmp___18 ;
<   int tmp___19 ;
<   int tmp___20 ;
47018,47020c46881,46883
< #line 3308
<   if ((unsigned int )mdev->receiver.t_state != 0U) {
< #line 3309
---
> #line 2040
>   if ((unsigned int )(mdev->tconn)->receiver.t_state != 0U) {
> #line 2041
47022,47034c46885
<             (unsigned int )mdev->receiver.t_state);
<   } else {
< 
<   }
< #line 3313
<   tmp___0 = atomic_read((atomic_t const   *)(& (mdev->current_epoch)->epoch_size));
< #line 3313
<   if (tmp___0 != 0) {
< #line 3314
<     tmp = atomic_read((atomic_t const   *)(& (mdev->current_epoch)->epoch_size));
< #line 3314
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "epoch_size:%d\n",
<             tmp);
---
>             (unsigned int )(mdev->tconn)->receiver.t_state);
47038,47050c46889,46893
< #line 3315
<   tmp___9 = 0UL;
< #line 3315
<   mdev->rs_failed = tmp___9;
< #line 3315
<   tmp___8 = tmp___9;
< #line 3315
<   mdev->rs_total = tmp___8;
< #line 3315
<   tmp___7 = tmp___8;
< #line 3315
<   mdev->rs_start = tmp___7;
< #line 3315
---
> #line 2044
>   tmp___7 = 0UL;
> #line 2044
>   mdev->rs_failed = tmp___7;
> #line 2044
47052,47058c46895,46901
< #line 3315
<   mdev->p_size = tmp___6;
< #line 3315
<   tmp___5 = (unsigned int )tmp___6;
< #line 3315
<   mdev->writ_cnt = tmp___5;
< #line 3315
---
> #line 2044
>   mdev->rs_total = tmp___6;
> #line 2044
>   tmp___5 = tmp___6;
> #line 2044
>   mdev->rs_start = tmp___5;
> #line 2044
47060,47066c46903,46909
< #line 3315
<   mdev->send_cnt = tmp___4;
< #line 3315
<   tmp___3 = tmp___4;
< #line 3315
<   mdev->recv_cnt = tmp___3;
< #line 3315
---
> #line 2044
>   mdev->p_size = tmp___4;
> #line 2044
>   tmp___3 = (unsigned int )tmp___4;
> #line 2044
>   mdev->writ_cnt = tmp___3;
> #line 2044
47068,47070c46911,46913
< #line 3315
<   mdev->read_cnt = tmp___2;
< #line 3315
---
> #line 2044
>   mdev->send_cnt = tmp___2;
> #line 2044
47072,47076c46915,46927
< #line 3315
<   mdev->bm_writ_cnt = tmp___1;
< #line 3315
<   mdev->al_writ_cnt = tmp___1;
< #line 3325
---
> #line 2044
>   mdev->recv_cnt = tmp___1;
> #line 2044
>   tmp___0 = tmp___1;
> #line 2044
>   mdev->read_cnt = tmp___0;
> #line 2044
>   tmp = tmp___0;
> #line 2044
>   mdev->bm_writ_cnt = tmp;
> #line 2044
>   mdev->al_writ_cnt = tmp;
> #line 2054
47078c46929
< #line 3326
---
> #line 2055
47080c46931
< #line 3327
---
> #line 2056
47082,47085c46933,46936
< #line 3327
<   goto ldv_52744;
<   ldv_52743: 
< #line 3328
---
> #line 2056
>   goto ldv_53141;
>   ldv_53140: 
> #line 2057
47087c46938
< #line 3329
---
> #line 2058
47089c46940
< #line 3327
---
> #line 2056
47091,47092c46942,46943
<   ldv_52744: ;
< #line 3327
---
>   ldv_53141: ;
> #line 2056
47094,47095c46945,46946
< #line 3328
<     goto ldv_52743;
---
> #line 2057
>     goto ldv_53140;
47100,47105c46951,46956
< #line 3331
<   if ((unsigned long )mdev->net_conf != (unsigned long )((struct net_conf *)0)) {
< #line 3331
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mdev->net_conf == NULL ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             3331);
---
> #line 2060
>   if ((unsigned long )(mdev->tconn)->net_conf != (unsigned long )((struct net_conf *)0)) {
> #line 2060
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mdev->tconn->net_conf == NULL ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
>             2060);
47109c46960
< #line 3333
---
> #line 2062
47111c46962
< #line 3334
---
> #line 2063
47113c46964
< #line 3336
---
> #line 2065
47115c46966
< #line 3337
---
> #line 2066
47120,47128c46971,46981
< #line 3340
<   drbd_free_resources(mdev);
< #line 3341
<   drbd_clear_flag(mdev, AL_SUSPENDED);
< #line 3347
<   tmp___10 = list_empty((struct list_head  const  *)(& mdev->active_ee));
< #line 3347
<   if (tmp___10 == 0) {
< #line 3347
---
> #line 2069
>   drbd_free_bc(mdev->ldev);
> #line 2070
>   mdev->ldev = 0;
> #line 2072
>   clear_bit(18, (unsigned long volatile   *)(& mdev->flags));
> #line 2074
>   tmp___8 = list_empty((struct list_head  const  *)(& mdev->active_ee));
> #line 2074
>   if (tmp___8 == 0) {
> #line 2074
47130,47131c46983,46984
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             3347);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
>             2074);
47135,47139c46988,46992
< #line 3348
<   tmp___11 = list_empty((struct list_head  const  *)(& mdev->sync_ee));
< #line 3348
<   if (tmp___11 == 0) {
< #line 3348
---
> #line 2075
>   tmp___9 = list_empty((struct list_head  const  *)(& mdev->sync_ee));
> #line 2075
>   if (tmp___9 == 0) {
> #line 2075
47141,47142c46994,46995
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             3348);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
>             2075);
47146,47150c46999,47003
< #line 3349
<   tmp___12 = list_empty((struct list_head  const  *)(& mdev->done_ee));
< #line 3349
<   if (tmp___12 == 0) {
< #line 3349
---
> #line 2076
>   tmp___10 = list_empty((struct list_head  const  *)(& mdev->done_ee));
> #line 2076
>   if (tmp___10 == 0) {
> #line 2076
47152,47153c47005,47006
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             3349);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
>             2076);
47157,47161c47010,47014
< #line 3350
<   tmp___13 = list_empty((struct list_head  const  *)(& mdev->read_ee));
< #line 3350
<   if (tmp___13 == 0) {
< #line 3350
---
> #line 2077
>   tmp___11 = list_empty((struct list_head  const  *)(& mdev->read_ee));
> #line 2077
>   if (tmp___11 == 0) {
> #line 2077
47163,47164c47016,47017
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             3350);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
>             2077);
47168,47172c47021,47025
< #line 3351
<   tmp___14 = list_empty((struct list_head  const  *)(& mdev->net_ee));
< #line 3351
<   if (tmp___14 == 0) {
< #line 3351
---
> #line 2078
>   tmp___12 = list_empty((struct list_head  const  *)(& mdev->net_ee));
> #line 2078
>   if (tmp___12 == 0) {
> #line 2078
47174,47175c47027,47028
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             3351);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
>             2078);
47179,47183c47032,47036
< #line 3352
<   tmp___15 = list_empty((struct list_head  const  *)(& mdev->resync_reads));
< #line 3352
<   if (tmp___15 == 0) {
< #line 3352
---
> #line 2079
>   tmp___13 = list_empty((struct list_head  const  *)(& mdev->resync_reads));
> #line 2079
>   if (tmp___13 == 0) {
> #line 2079
47185,47186c47038,47039
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             3352);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
>             2079);
47190,47208c47043,47050
< #line 3353
<   tmp___16 = list_empty((struct list_head  const  *)(& mdev->data.work.q));
< #line 3353
<   if (tmp___16 == 0) {
< #line 3353
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( list_empty(&mdev->data.work.q) ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             3353);
<   } else {
< 
<   }
< #line 3354
<   tmp___17 = list_empty((struct list_head  const  *)(& mdev->meta.work.q));
< #line 3354
<   if (tmp___17 == 0) {
< #line 3354
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( list_empty(&mdev->meta.work.q) ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             3354);
---
> #line 2080
>   tmp___14 = list_empty((struct list_head  const  *)(& (mdev->tconn)->sender_work.q));
> #line 2080
>   if (tmp___14 == 0) {
> #line 2080
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( list_empty(&mdev->tconn->sender_work.q) ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
>             2080);
47212,47216c47054,47058
< #line 3355
<   tmp___18 = list_empty((struct list_head  const  *)(& mdev->resync_work.list));
< #line 3355
<   if (tmp___18 == 0) {
< #line 3355
---
> #line 2081
>   tmp___15 = list_empty((struct list_head  const  *)(& mdev->resync_work.list));
> #line 2081
>   if (tmp___15 == 0) {
> #line 2081
47218,47219c47060,47061
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             3355);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
>             2081);
47223,47227c47065,47069
< #line 3356
<   tmp___19 = list_empty((struct list_head  const  *)(& mdev->unplug_work.list));
< #line 3356
<   if (tmp___19 == 0) {
< #line 3356
---
> #line 2082
>   tmp___16 = list_empty((struct list_head  const  *)(& mdev->unplug_work.list));
> #line 2082
>   if (tmp___16 == 0) {
> #line 2082
47229,47230c47071,47072
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             3356);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
>             2082);
47234,47238c47076,47080
< #line 3357
<   tmp___20 = list_empty((struct list_head  const  *)(& mdev->go_diskless.list));
< #line 3357
<   if (tmp___20 == 0) {
< #line 3357
---
> #line 2083
>   tmp___17 = list_empty((struct list_head  const  *)(& mdev->go_diskless.list));
> #line 2083
>   if (tmp___17 == 0) {
> #line 2083
47240,47241c47082,47083
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             3357);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
>             2083);
47245c47087
< #line 3359
---
> #line 2085
47247c47089
< #line 3360
---
> #line 2086
47251c47093
< #line 3363 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 2089 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
47257,47260c47099,47102
< #line 3367
<   goto ldv_52751;
<   ldv_52750: 
< #line 3368
---
> #line 2093
>   goto ldv_53148;
>   ldv_53147: 
> #line 2094
47262,47264c47104,47106
< #line 3369
<   drbd_pp_pool = (struct page *)page->ldv_14722.private;
< #line 3370
---
> #line 2095
>   drbd_pp_pool = (struct page *)page->ldv_14746.private;
> #line 2096
47266c47108
< #line 3371
---
> #line 2097
47268,47269c47110,47111
<   ldv_52751: ;
< #line 3367
---
>   ldv_53148: ;
> #line 2093
47271,47272c47113,47114
< #line 3368
<     goto ldv_52750;
---
> #line 2094
>     goto ldv_53147;
47277c47119
< #line 3376
---
> #line 2102
47279c47121
< #line 3377
---
> #line 2103
47284c47126
< #line 3378
---
> #line 2104
47286c47128
< #line 3379
---
> #line 2105
47291c47133
< #line 3380
---
> #line 2106
47293c47135
< #line 3381
---
> #line 2107
47298c47140
< #line 3382
---
> #line 2108
47300c47142
< #line 3383
---
> #line 2109
47305c47147
< #line 3384
---
> #line 2110
47307c47149
< #line 3385
---
> #line 2111
47312c47154
< #line 3386
---
> #line 2112
47314c47156
< #line 3387
---
> #line 2113
47319c47161
< #line 3388
---
> #line 2114
47321c47163
< #line 3389
---
> #line 2115
47326c47168
< #line 3390
---
> #line 2116
47328c47170
< #line 3391
---
> #line 2117
47333c47175
< #line 3393
---
> #line 2119
47335c47177
< #line 3394
---
> #line 2120
47337c47179
< #line 3395
---
> #line 2121
47339c47181
< #line 3396
---
> #line 2122
47341c47183
< #line 3397
---
> #line 2123
47343c47185
< #line 3398
---
> #line 2124
47345c47187
< #line 3399
---
> #line 2125
47347c47189
< #line 3400
---
> #line 2126
47349c47191
< #line 3402
---
> #line 2128
47353c47195
< #line 3405 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 2131 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
47362,47364c47204,47206
< #line 3408
<   number = (int const   )(minor_count * 32U);
< #line 3412
---
> #line 2134
>   number = (int const   )(minor_count * 256U);
> #line 2138
47366c47208
< #line 3413
---
> #line 2139
47368c47210
< #line 3414
---
> #line 2140
47370c47212
< #line 3415
---
> #line 2141
47372c47214
< #line 3416
---
> #line 2142
47374c47216
< #line 3417
---
> #line 2143
47376c47218
< #line 3418
---
> #line 2144
47378c47220
< #line 3419
---
> #line 2145
47380,47382c47222,47224
< #line 3422
<   drbd_request_cache = kmem_cache_create("drbd_req", 112UL, 0UL, 0UL, 0);
< #line 3424
---
> #line 2148
>   drbd_request_cache = kmem_cache_create("drbd_req", 152UL, 0UL, 0UL, 0);
> #line 2150
47384c47226
< #line 3425
---
> #line 2151
47389,47391c47231,47233
< #line 3427
<   drbd_ee_cache = kmem_cache_create("drbd_ee", 96UL, 0UL, 0UL, 0);
< #line 3429
---
> #line 2153
>   drbd_ee_cache = kmem_cache_create("drbd_ee", 128UL, 0UL, 0UL, 0);
> #line 2155
47393c47235
< #line 3430
---
> #line 2156
47398c47240
< #line 3432
---
> #line 2158
47400c47242
< #line 3434
---
> #line 2160
47402c47244
< #line 3435
---
> #line 2161
47407c47249
< #line 3437
---
> #line 2163
47409c47251
< #line 3439
---
> #line 2165
47411c47253
< #line 3440
---
> #line 2166
47416c47258,47267
< #line 3449
---
> #line 2169
>   drbd_md_io_bio_set = bioset_create(128U, 0U);
> #line 2170
>   if ((unsigned long )drbd_md_io_bio_set == (unsigned long )((struct bio_set *)0)) {
> #line 2171
>     goto Enomem;
>   } else {
> 
>   }
> #line 2173
47418c47269
< #line 3450
---
> #line 2174
47420c47271
< #line 3451
---
> #line 2175
47425c47276
< #line 3453
---
> #line 2177
47428c47279
< #line 3455
---
> #line 2179
47430c47281
< #line 3456
---
> #line 2180
47435c47286
< #line 3458
---
> #line 2182
47438c47289
< #line 3460
---
> #line 2184
47440c47291
< #line 3461
---
> #line 2185
47445c47296
< #line 3464
---
> #line 2188
47447c47298
< #line 3464
---
> #line 2188
47449c47300
< #line 3466
---
> #line 2190
47451,47454c47302,47305
< #line 3466
<   goto ldv_52762;
<   ldv_52761: 
< #line 3467
---
> #line 2190
>   goto ldv_53159;
>   ldv_53158: 
> #line 2191
47456c47307
< #line 3468
---
> #line 2192
47458c47309
< #line 3469
---
> #line 2193
47463,47465c47314,47316
< #line 3470
<   page->ldv_14722.private = (unsigned long )drbd_pp_pool;
< #line 3471
---
> #line 2194
>   page->ldv_14746.private = (unsigned long )drbd_pp_pool;
> #line 2195
47467c47318
< #line 3466
---
> #line 2190
47469,47470c47320,47321
<   ldv_52762: ;
< #line 3466
---
>   ldv_53159: ;
> #line 2190
47472,47473c47323,47324
< #line 3467
<     goto ldv_52761;
---
> #line 2191
>     goto ldv_53158;
47477c47328
< #line 3473
---
> #line 2197
47479c47330
< #line 3475
---
> #line 2199
47482c47333
< #line 3478
---
> #line 2202
47484c47335
< #line 3479
---
> #line 2203
47488c47339
< #line 3482 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 2206 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
47494c47345
< #line 3489
---
> #line 2213
47498c47349
< #line 3492 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 2216 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
47500,47501c47351,47352
< #line 3496 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static void drbd_release_ee_lists(struct drbd_conf *mdev ) 
---
> #line 2220 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> static void drbd_release_all_peer_reqs(struct drbd_conf *mdev ) 
47506,47508c47357,47359
< #line 3500
<   rr = drbd_release_ee(mdev, & mdev->active_ee);
< #line 3501
---
> #line 2224
>   rr = drbd_free_peer_reqs(mdev, & mdev->active_ee);
> #line 2225
47510c47361
< #line 3502
---
> #line 2226
47516,47518c47367,47369
< #line 3504
<   rr = drbd_release_ee(mdev, & mdev->sync_ee);
< #line 3505
---
> #line 2228
>   rr = drbd_free_peer_reqs(mdev, & mdev->sync_ee);
> #line 2229
47520c47371
< #line 3506
---
> #line 2230
47526,47528c47377,47379
< #line 3508
<   rr = drbd_release_ee(mdev, & mdev->read_ee);
< #line 3509
---
> #line 2232
>   rr = drbd_free_peer_reqs(mdev, & mdev->read_ee);
> #line 2233
47530c47381
< #line 3510
---
> #line 2234
47536,47538c47387,47389
< #line 3512
<   rr = drbd_release_ee(mdev, & mdev->done_ee);
< #line 3513
---
> #line 2236
>   rr = drbd_free_peer_reqs(mdev, & mdev->done_ee);
> #line 2237
47540c47391
< #line 3514
---
> #line 2238
47546,47548c47397,47399
< #line 3516
<   rr = drbd_release_ee(mdev, & mdev->net_ee);
< #line 3517
---
> #line 2240
>   rr = drbd_free_peer_reqs(mdev, & mdev->net_ee);
> #line 2241
47550c47401
< #line 3518
---
> #line 2242
47556c47407
< #line 3519
---
> #line 2243
47560,47561c47411,47412
< #line 3523 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static void drbd_delete_device(unsigned int minor ) 
---
> #line 2246 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> void drbd_minor_destroy(struct kref *kref ) 
47564,47567c47415,47416
<   struct drbd_conf *tmp ;
<   struct list_head *lp ;
<   int _b ;
<   int tmp___0 ;
---
>   struct kref  const  *__mptr ;
>   struct drbd_tconn *tconn ;
47570,47577c47419,47432
< #line 3525
<   tmp = minor_to_mdev(minor);
< #line 3525
<   mdev = tmp;
< #line 3527
<   if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
< #line 3528
<     return;
---
> #line 2248
>   __mptr = (struct kref  const  *)kref;
> #line 2248
>   mdev = (struct drbd_conf *)__mptr + 0xfffffffffffffff4UL;
> #line 2249
>   tconn = mdev->tconn;
> #line 2251
>   del_timer_sync(& mdev->request_timer);
> #line 2254
>   if (mdev->open_cnt != 0) {
> #line 2254
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mdev->open_cnt == 0 ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
>             2254);
47581,47588c47436,47439
< #line 3530
<   del_timer_sync(& mdev->request_timer);
< #line 3533
<   if (mdev->open_cnt != 0) {
< #line 3534
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "open_cnt = %d in %s:%u",
<             mdev->open_cnt, (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             3535);
---
> #line 2260
>   if ((unsigned long )mdev->this_bdev != (unsigned long )((struct block_device *)0)) {
> #line 2261
>     bdput(mdev->this_bdev);
47592,47601c47443,47458
< #line 3537
<   tmp___0 = list_empty((struct list_head  const  *)(& mdev->data.work.q));
< #line 3537
<   _b = tmp___0 == 0;
< #line 3537
<   if (_b != 0) {
< #line 3537
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_delete_device", (char *)"!list_empty(&mdev->data.work.q)", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             3537);
---
> #line 2263
>   drbd_free_bc(mdev->ldev);
> #line 2264
>   mdev->ldev = 0;
> #line 2266
>   drbd_release_all_peer_reqs(mdev);
> #line 2268
>   lc_destroy(mdev->act_log);
> #line 2269
>   lc_destroy(mdev->resync);
> #line 2271
>   kfree((void const   *)mdev->p_uuid);
> #line 2274
>   if ((unsigned long )mdev->bitmap != (unsigned long )((struct drbd_bitmap *)0)) {
> #line 2275
>     drbd_bm_cleanup(mdev);
47605,47621c47462,47554
< #line 3537
<   if (_b != 0) {
< #line 3539
<     lp = mdev->data.work.q.next;
< #line 3539
<     goto ldv_52783;
<     ldv_52782: 
< #line 3540
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "lp = %p\n",
<             lp);
< #line 3539
<     lp = lp->next;
<     ldv_52783: ;
< #line 3539
<     if ((unsigned long )(& mdev->data.work.q) != (unsigned long )lp) {
< #line 3540
<       goto ldv_52782;
---
> #line 2276
>   __free_pages(mdev->md_io_page, 0U);
> #line 2277
>   put_disk(mdev->vdisk);
> #line 2278
>   blk_cleanup_queue(mdev->rq_queue);
> #line 2279
>   kfree((void const   *)mdev->rs_plan_s);
> #line 2280
>   kfree((void const   *)mdev);
> #line 2282
>   kref_put(& tconn->kref, & conn_destroy);
> #line 2283
>   return;
> }
> }
> #line 2294 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> static struct retry_worker retry  ;
> #line 2296 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> static void do_retry(struct work_struct *ws ) 
> { 
>   struct retry_worker *retry___0 ;
>   struct work_struct  const  *__mptr ;
>   struct list_head writes ;
>   struct drbd_request *req ;
>   struct drbd_request *tmp ;
>   struct list_head  const  *__mptr___0 ;
>   struct list_head  const  *__mptr___1 ;
>   struct drbd_conf *mdev ;
>   struct bio *bio ;
>   unsigned long start_time ;
>   bool expected ;
>   bool _bool ;
>   int tmp___0 ;
>   bool _bool___0 ;
>   bool _bool___1 ;
>   int tmp___1 ;
>   int tmp___2 ;
>   struct list_head  const  *__mptr___2 ;
> 
>   {
> #line 2298
>   __mptr = (struct work_struct  const  *)ws;
> #line 2298
>   retry___0 = (struct retry_worker *)__mptr + 0xfffffffffffffff8UL;
> #line 2299
>   writes.next = & writes;
> #line 2299
>   writes.prev = & writes;
> #line 2302
>   spin_lock_irq(& retry___0->lock);
> #line 2303
>   list_splice_init(& retry___0->writes, & writes);
> #line 2304
>   spin_unlock_irq(& retry___0->lock);
> #line 2306
>   __mptr___0 = (struct list_head  const  *)writes.next;
> #line 2306
>   req = (struct drbd_request *)__mptr___0 + 0xffffffffffffff98UL;
> #line 2306
>   __mptr___1 = (struct list_head  const  *)req->tl_requests.next;
> #line 2306
>   tmp = (struct drbd_request *)__mptr___1 + 0xffffffffffffff98UL;
> #line 2306
>   goto ldv_53211;
>   ldv_53210: 
> #line 2307
>   mdev = req->w.ldv_49807.mdev;
> #line 2308
>   bio = req->master_bio;
> #line 2309
>   start_time = req->start_time;
> #line 2313
>   tmp___0 = atomic_read((atomic_t const   *)(& req->completion_ref));
> #line 2313
>   _bool = tmp___0 == 0;
> #line 2313
>   if (! _bool) {
> #line 2313
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"atomic_read(&req->completion_ref) == 0", "do_retry");
>   } else {
> 
>   }
> #line 2315
>   if ((int )_bool) {
> #line 2314
>     _bool___0 = ((unsigned long )req->rq_state & 8192UL) != 0UL;
> #line 2314
>     if (! _bool___0) {
> #line 2314
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>               (char *)"req->rq_state & RQ_POSTPONED", "do_retry");
47624a47558,47568
> #line 2315
>     if ((int )_bool___0) {
> #line 2315
>       _bool___1 = (bool )(((unsigned long )req->rq_state & 1UL) == 0UL || ((unsigned long )req->rq_state & 8UL) != 0UL);
> #line 2315
>       if (! _bool___1) {
> #line 2315
>         dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>                 (char *)"(req->rq_state & RQ_LOCAL_PENDING) == 0 || (req->rq_state & RQ_LOCAL_ABORTED) != 0",
>                 "do_retry");
>       } else {
47625a47570,47595
>       }
> #line 2315
>       if ((int )_bool___1) {
> #line 2315
>         tmp___1 = 1;
>       } else {
> #line 2315
>         tmp___1 = 0;
>       }
>     } else {
> #line 2315
>       tmp___1 = 0;
>     }
>   } else {
> #line 2315
>     tmp___1 = 0;
>   }
> #line 2315
>   expected = (bool )tmp___1;
> #line 2318
>   if (! expected) {
> #line 2319
>     tmp___2 = atomic_read((atomic_t const   *)(& req->completion_ref));
> #line 2319
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "req=%p completion_ref=%d rq_state=%x\n",
>             req, tmp___2, req->rq_state);
47629,47634c47599,47615
< #line 3545
<   del_gendisk(mdev->vdisk);
< #line 3550
<   if ((unsigned long )mdev->this_bdev != (unsigned long )((struct block_device *)0)) {
< #line 3551
<     bdput(mdev->this_bdev);
---
> #line 2328
>   kref_put(& req->kref, & drbd_req_destroy);
> #line 2343
>   inc_ap_bio___0(mdev);
> #line 2344
>   __drbd_make_request(mdev, bio, start_time);
> #line 2306
>   req = tmp;
> #line 2306
>   __mptr___2 = (struct list_head  const  *)tmp->tl_requests.next;
> #line 2306
>   tmp = (struct drbd_request *)__mptr___2 + 0xffffffffffffff98UL;
>   ldv_53211: ;
> #line 2306
>   if ((unsigned long )(& req->tl_requests) != (unsigned long )(& writes)) {
> #line 2307
>     goto ldv_53210;
47638,47658c47619,47643
< #line 3553
<   drbd_free_resources(mdev);
< #line 3555
<   drbd_release_ee_lists(mdev);
< #line 3558
<   kfree((void const   *)mdev->ee_hash);
< #line 3564
<   lc_destroy(mdev->act_log);
< #line 3565
<   lc_destroy(mdev->resync);
< #line 3567
<   kfree((void const   *)mdev->p_uuid);
< #line 3570
<   kfree((void const   *)mdev->int_dig_out);
< #line 3571
<   kfree((void const   *)mdev->int_dig_in);
< #line 3572
<   kfree((void const   *)mdev->int_dig_vv);
< #line 3577
<   drbd_free_mdev(mdev);
< #line 3578
---
> 
> #line 2311
>   return;
> }
> }
> #line 2348 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> void drbd_restart_request(struct drbd_request *req ) 
> { 
>   unsigned long flags ;
>   raw_spinlock_t *tmp ;
> 
>   {
> #line 2351
>   tmp = spinlock_check(& retry.lock);
> #line 2351
>   flags = _raw_spin_lock_irqsave(tmp);
> #line 2352
>   list_move_tail(& req->tl_requests, & retry.writes);
> #line 2353
>   spin_unlock_irqrestore(& retry.lock, flags);
> #line 2358
>   dec_ap_bio___0(req->w.ldv_49807.mdev);
> #line 2360
>   queue_work(retry.wq, & retry.worker);
> #line 2361
47662c47647
< #line 3580 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 2364 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
47666c47651,47659
<   unsigned int tmp ;
---
>   struct drbd_conf *mdev ;
>   struct drbd_tconn *tconn ;
>   struct drbd_tconn *tmp ;
>   void *tmp___0 ;
>   unsigned int tmp___1 ;
>   void *tmp___2 ;
>   struct list_head  const  *__mptr ;
>   struct list_head  const  *__mptr___0 ;
>   struct list_head  const  *__mptr___1 ;
47669c47662
< #line 3584
---
> #line 2370
47671c47664
< #line 3594
---
> #line 2380
47673c47666
< #line 3595
---
> #line 2381
47678,47698c47671,47675
< #line 3597
<   drbd_nl_cleanup();
< #line 3599
<   if ((unsigned long )minor_table != (unsigned long )((struct drbd_conf **)0)) {
< #line 3600
<     i = minor_count;
< #line 3601
<     goto ldv_52790;
<     ldv_52789: 
< #line 3602
<     drbd_delete_device(i);
<     ldv_52790: 
< #line 3601
<     tmp = i;
< #line 3601
<     i = i - 1U;
< #line 3601
<     if (tmp != 0U) {
< #line 3602
<       goto ldv_52789;
<     } else {
---
> #line 2383
>   if ((unsigned long )retry.wq != (unsigned long )((struct workqueue_struct *)0)) {
> #line 2384
>     destroy_workqueue(retry.wq);
>   } else {
47700,47702c47677,47709
<     }
< #line 3603
<     drbd_destroy_mempools();
---
>   }
> #line 2386
>   drbd_genl_unregister();
> #line 2388
>   i = 0U;
> #line 2388
>   tmp___0 = idr_get_next(& minors, (int *)(& i));
> #line 2388
>   mdev = (struct drbd_conf *)tmp___0;
> #line 2388
>   goto ldv_53228;
>   ldv_53227: 
> #line 2389
>   tmp___1 = mdev_to_minor(mdev);
> #line 2389
>   idr_remove(& minors, (int )tmp___1);
> #line 2390
>   idr_remove(& (mdev->tconn)->volumes, mdev->vnr);
> #line 2391
>   del_gendisk(mdev->vdisk);
> #line 2393
>   kref_put(& mdev->kref, & drbd_minor_destroy);
> #line 2388
>   i = i + 1U;
> #line 2388
>   tmp___2 = idr_get_next(& minors, (int *)(& i));
> #line 2388
>   mdev = (struct drbd_conf *)tmp___2;
>   ldv_53228: ;
> #line 2388
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 2389
>     goto ldv_53227;
47706,47708c47713,47744
< #line 3606
<   kfree((void const   *)minor_table);
< #line 3608
---
> #line 2397
>   __mptr = (struct list_head  const  *)drbd_tconns.next;
> #line 2397
>   tconn = (struct drbd_tconn *)__mptr + 0xfffffffffffffff8UL;
> #line 2397
>   __mptr___0 = (struct list_head  const  *)tconn->all_tconn.next;
> #line 2397
>   tmp = (struct drbd_tconn *)__mptr___0 + 0xfffffffffffffff8UL;
> #line 2397
>   goto ldv_53237;
>   ldv_53236: 
> #line 2398
>   list_del(& tconn->all_tconn);
> #line 2400
>   kref_put(& tconn->kref, & conn_destroy);
> #line 2397
>   tconn = tmp;
> #line 2397
>   __mptr___1 = (struct list_head  const  *)tmp->all_tconn.next;
> #line 2397
>   tmp = (struct drbd_tconn *)__mptr___1 + 0xfffffffffffffff8UL;
>   ldv_53237: ;
> #line 2397
>   if ((unsigned long )(& tconn->all_tconn) != (unsigned long )(& drbd_tconns)) {
> #line 2398
>     goto ldv_53236;
>   } else {
> 
>   }
> #line 2403
>   drbd_destroy_mempools();
> #line 2404
47710c47746,47748
< #line 3610
---
> #line 2406
>   idr_destroy(& minors);
> #line 2408
47712c47750
< #line 3611
---
> #line 2409
47716c47754
< #line 3620 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 2418 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
47731c47769
< #line 3622
---
> #line 2420
47733c47771
< #line 3624
---
> #line 2422
47735c47773
< #line 3625
---
> #line 2423
47737c47775
< #line 3627
---
> #line 2425
47739c47777
< #line 3627
---
> #line 2425
47741c47779
< #line 3627
---
> #line 2425
47744c47782
< #line 3627
---
> #line 2425
47747c47785
< #line 3627
---
> #line 2425
47749c47787
< #line 3629
---
> #line 2427
47751c47789
< #line 3630
---
> #line 2428
47753c47791
< #line 3631
---
> #line 2429
47758,47760c47796,47798
< #line 3634
<   tmp___2 = drbd_test_flag(mdev, CALLBACK_PENDING);
< #line 3634
---
> #line 2432
>   tmp___2 = constant_test_bit(11U, (unsigned long const volatile   *)(& (mdev->tconn)->flags));
> #line 2432
47762c47800
< #line 3635
---
> #line 2433
47764c47802
< #line 3641
---
> #line 2439
47766c47804
< #line 3641
---
> #line 2439
47768c47806
< #line 3642
---
> #line 2440
47771c47809
< #line 3644
---
> #line 2442
47774c47812
< #line 3645
---
> #line 2443
47776c47814
< #line 3646
---
> #line 2444
47778c47816
< #line 3647
---
> #line 2445
47783c47821
< #line 3650
---
> #line 2448
47785c47823
< #line 3650
---
> #line 2448
47787c47825
< #line 3651
---
> #line 2449
47789c47827
< #line 3652
---
> #line 2450
47791c47829
< #line 3653
---
> #line 2451
47793c47831
< #line 3654
---
> #line 2452
47795c47833
< #line 3655
---
> #line 2453
47803c47841
< #line 3658
---
> #line 2456
47805,47807c47843,47845
< #line 3658
<     tmp___4 = drbd_test_flag(mdev, NET_CONGESTED);
< #line 3658
---
> #line 2456
>     tmp___4 = constant_test_bit(0U, (unsigned long const volatile   *)(& (mdev->tconn)->flags));
> #line 2456
47809c47847
< #line 3659
---
> #line 2457
47811c47849
< #line 3660
---
> #line 2458
47820c47858
< #line 3664
---
> #line 2462
47822c47860
< #line 3665
---
> #line 2463
47826,47827c47864,47865
< #line 3668 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< struct drbd_conf *drbd_new_device(unsigned int minor ) 
---
> #line 2466 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> static void drbd_init_workqueue(struct drbd_work_queue *wq ) 
47829,47833c47867,47984
<   struct drbd_conf *mdev ;
<   struct gendisk *disk ;
<   struct request_queue *q ;
<   void *tmp ;
<   bool tmp___0 ;
---
>   struct lock_class_key __key ;
>   struct lock_class_key __key___0 ;
> 
>   {
> #line 2468
>   spinlock_check(& wq->q_lock);
> #line 2468
>   __raw_spin_lock_init(& wq->q_lock.ldv_5957.rlock, "&(&wq->q_lock)->rlock", & __key);
> #line 2469
>   INIT_LIST_HEAD(& wq->q);
> #line 2470
>   __init_waitqueue_head(& wq->q_wait, "&wq->q_wait", & __key___0);
> #line 2472
>   return;
> }
> }
> #line 2473 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> struct drbd_tconn *conn_get_by_name(char const   *name ) 
> { 
>   struct drbd_tconn *tconn ;
>   struct list_head *__ptr ;
>   struct list_head  const  *__mptr ;
>   struct list_head *_________p1 ;
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
>   struct list_head *__ptr___0 ;
>   struct list_head  const  *__mptr___0 ;
>   struct list_head *_________p1___0 ;
>   bool __warned___0 ;
>   int tmp___1 ;
> 
>   {
> #line 2477
>   if ((unsigned long )name == (unsigned long )((char const   *)0) || (int )((signed char )*name) == 0) {
> #line 2478
>     return (0);
>   } else {
> 
>   }
> #line 2480
>   rcu_read_lock___5();
> #line 2481
>   __ptr = drbd_tconns.next;
> #line 2481
>   _________p1 = *((struct list_head * volatile  *)(& __ptr));
> #line 2481
>   tmp = debug_lockdep_rcu_enabled();
> #line 2481
>   if (tmp != 0 && ! __warned) {
> #line 2481
>     rcu_read_lock_held();
>   } else {
> 
>   }
> #line 2481
>   __mptr = (struct list_head  const  *)_________p1;
> #line 2481
>   tconn = (struct drbd_tconn *)__mptr + 0xfffffffffffffff8UL;
> #line 2481
>   goto ldv_53273;
>   ldv_53272: 
> #line 2482
>   tmp___0 = strcmp((char const   *)tconn->name, name);
> #line 2482
>   if (tmp___0 == 0) {
> #line 2483
>     kref_get(& tconn->kref);
> #line 2484
>     goto found;
>   } else {
> 
>   }
> #line 2481
>   __ptr___0 = tconn->all_tconn.next;
> #line 2481
>   _________p1___0 = *((struct list_head * volatile  *)(& __ptr___0));
> #line 2481
>   tmp___1 = debug_lockdep_rcu_enabled();
> #line 2481
>   if (tmp___1 != 0 && ! __warned___0) {
> #line 2481
>     rcu_read_lock_held();
>   } else {
> 
>   }
> #line 2481
>   __mptr___0 = (struct list_head  const  *)_________p1___0;
> #line 2481
>   tconn = (struct drbd_tconn *)__mptr___0 + 0xfffffffffffffff8UL;
>   ldv_53273: ;
> #line 2481
>   if ((unsigned long )(& tconn->all_tconn) != (unsigned long )(& drbd_tconns)) {
> #line 2482
>     goto ldv_53272;
>   } else {
> 
>   }
> #line 2487
>   tconn = 0;
>   found: 
> #line 2489
>   rcu_read_unlock___5();
> #line 2490
>   return (tconn);
> }
> }
> #line 2493 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> struct drbd_tconn *conn_get_by_addrs(void *my_addr , int my_addr_len , void *peer_addr ,
>                                      int peer_addr_len ) 
> { 
>   struct drbd_tconn *tconn ;
>   struct list_head *__ptr ;
>   struct list_head  const  *__mptr ;
>   struct list_head *_________p1 ;
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
47834a47986,48168
>   struct list_head *__ptr___0 ;
>   struct list_head  const  *__mptr___0 ;
>   struct list_head *_________p1___0 ;
>   bool __warned___0 ;
>   int tmp___2 ;
> 
>   {
> #line 2498
>   rcu_read_lock___5();
> #line 2499
>   __ptr = drbd_tconns.next;
> #line 2499
>   _________p1 = *((struct list_head * volatile  *)(& __ptr));
> #line 2499
>   tmp = debug_lockdep_rcu_enabled();
> #line 2499
>   if (tmp != 0 && ! __warned) {
> #line 2499
>     rcu_read_lock_held();
>   } else {
> 
>   }
> #line 2499
>   __mptr = (struct list_head  const  *)_________p1;
> #line 2499
>   tconn = (struct drbd_tconn *)__mptr + 0xfffffffffffffff8UL;
> #line 2499
>   goto ldv_53298;
>   ldv_53297: ;
> #line 2500
>   if (tconn->my_addr_len == my_addr_len && tconn->peer_addr_len == peer_addr_len) {
> #line 2500
>     tmp___0 = memcmp((void const   *)(& tconn->my_addr), (void const   *)my_addr,
>                      (size_t )my_addr_len);
> #line 2500
>     if (tmp___0 == 0) {
> #line 2500
>       tmp___1 = memcmp((void const   *)(& tconn->peer_addr), (void const   *)peer_addr,
>                        (size_t )peer_addr_len);
> #line 2500
>       if (tmp___1 == 0) {
> #line 2504
>         kref_get(& tconn->kref);
> #line 2505
>         goto found;
>       } else {
> 
>       }
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 2499
>   __ptr___0 = tconn->all_tconn.next;
> #line 2499
>   _________p1___0 = *((struct list_head * volatile  *)(& __ptr___0));
> #line 2499
>   tmp___2 = debug_lockdep_rcu_enabled();
> #line 2499
>   if (tmp___2 != 0 && ! __warned___0) {
> #line 2499
>     rcu_read_lock_held();
>   } else {
> 
>   }
> #line 2499
>   __mptr___0 = (struct list_head  const  *)_________p1___0;
> #line 2499
>   tconn = (struct drbd_tconn *)__mptr___0 + 0xfffffffffffffff8UL;
>   ldv_53298: ;
> #line 2499
>   if ((unsigned long )(& tconn->all_tconn) != (unsigned long )(& drbd_tconns)) {
> #line 2500
>     goto ldv_53297;
>   } else {
> 
>   }
> #line 2508
>   tconn = 0;
>   found: 
> #line 2510
>   rcu_read_unlock___5();
> #line 2511
>   return (tconn);
> }
> }
> #line 2514 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> static int drbd_alloc_socket(struct drbd_socket *socket ) 
> { 
>   unsigned long tmp ;
>   unsigned long tmp___0 ;
> 
>   {
> #line 2516
>   tmp = __get_free_pages(208U, 0U);
> #line 2516
>   socket->rbuf = (void *)tmp;
> #line 2517
>   if ((unsigned long )socket->rbuf == (unsigned long )((void *)0)) {
> #line 2518
>     return (-12);
>   } else {
> 
>   }
> #line 2519
>   tmp___0 = __get_free_pages(208U, 0U);
> #line 2519
>   socket->sbuf = (void *)tmp___0;
> #line 2520
>   if ((unsigned long )socket->sbuf == (unsigned long )((void *)0)) {
> #line 2521
>     return (-12);
>   } else {
> 
>   }
> #line 2522
>   return (0);
> }
> }
> #line 2525 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> static void drbd_free_socket(struct drbd_socket *socket ) 
> { 
> 
> 
>   {
> #line 2527
>   free_pages((unsigned long )socket->sbuf, 0U);
> #line 2528
>   free_pages((unsigned long )socket->rbuf, 0U);
> #line 2529
>   return;
> }
> }
> #line 2531 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> void conn_free_crypto(struct drbd_tconn *tconn ) 
> { 
> 
> 
>   {
> #line 2533
>   drbd_free_sock(tconn);
> #line 2535
>   crypto_free_hash(tconn->csums_tfm);
> #line 2536
>   crypto_free_hash(tconn->verify_tfm);
> #line 2537
>   crypto_free_hash(tconn->cram_hmac_tfm);
> #line 2538
>   crypto_free_hash(tconn->integrity_tfm);
> #line 2539
>   crypto_free_hash(tconn->peer_integrity_tfm);
> #line 2540
>   kfree((void const   *)tconn->int_dig_in);
> #line 2541
>   kfree((void const   *)tconn->int_dig_vv);
> #line 2543
>   tconn->csums_tfm = 0;
> #line 2544
>   tconn->verify_tfm = 0;
> #line 2545
>   tconn->cram_hmac_tfm = 0;
> #line 2546
>   tconn->integrity_tfm = 0;
> #line 2547
>   tconn->peer_integrity_tfm = 0;
> #line 2548
>   tconn->int_dig_in = 0;
> #line 2549
>   tconn->int_dig_vv = 0;
> #line 2550
>   return;
> }
> }
> #line 2552 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> int set_resource_options(struct drbd_tconn *tconn , struct res_opts *res_opts ) 
> { 
>   cpumask_var_t new_cpu_mask ;
>   int err ;
>   bool tmp ;
>   int tmp___0 ;
>   bool tmp___1 ;
47835a48170,48249
> 
>   {
> #line 2557
>   tmp = zalloc_cpumask_var(& new_cpu_mask, 208U);
> #line 2557
>   if (tmp) {
> #line 2557
>     tmp___0 = 0;
>   } else {
> #line 2557
>     tmp___0 = 1;
>   }
> #line 2557
>   if (tmp___0) {
> #line 2558
>     return (-12);
>   } else {
> 
>   }
> #line 2565
>   if (nr_cpu_ids > 1 && (int )((signed char )res_opts->cpu_mask[0]) != 0) {
> #line 2567
>     err = bitmap_parse((char const   *)(& res_opts->cpu_mask), 32U, (unsigned long *)(& new_cpu_mask->bits),
>                        nr_cpu_ids);
> #line 2569
>     if (err != 0) {
> #line 2570
>       printk("\fd-con %s: bitmap_parse() failed with %d\n", tconn->name, err);
> #line 2572
>       goto fail;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 2575
>   tconn->res_opts = *res_opts;
> #line 2576
>   tmp___1 = cpumask_equal((struct cpumask  const  *)tconn->cpu_mask, (struct cpumask  const  *)new_cpu_mask);
> #line 2576
>   if (tmp___1) {
> #line 2576
>     tmp___2 = 0;
>   } else {
> #line 2576
>     tmp___2 = 1;
>   }
> #line 2576
>   if (tmp___2) {
> #line 2577
>     cpumask_copy(tconn->cpu_mask, (struct cpumask  const  *)new_cpu_mask);
> #line 2578
>     drbd_calc_cpu_mask(tconn);
> #line 2579
>     tconn->receiver.reset_cpu_mask = 1;
> #line 2580
>     tconn->asender.reset_cpu_mask = 1;
> #line 2581
>     tconn->worker.reset_cpu_mask = 1;
>   } else {
> 
>   }
> #line 2583
>   err = 0;
>   fail: 
> #line 2586
>   free_cpumask_var(new_cpu_mask);
> #line 2587
>   return (err);
> }
> }
> #line 2592 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> struct drbd_tconn *conn_create(char const   *name , struct res_opts *res_opts ) 
> { 
>   struct drbd_tconn *tconn ;
>   void *tmp ;
>   int tmp___0 ;
>   int tmp___1 ;
>   bool tmp___2 ;
47837c48251
<   void *tmp___4 ;
---
>   int tmp___4 ;
47838a48253,48259
>   struct lock_class_key __key ;
>   struct lock_class_key __key___0 ;
>   struct lock_class_key __key___1 ;
>   struct lock_class_key __key___2 ;
>   struct lock_class_key __key___3 ;
>   struct lock_class_key __key___4 ;
>   struct lock_class_key __key___5 ;
47841,47847c48262,48268
< #line 3675
<   tmp = kzalloc(4736UL, 208U);
< #line 3675
<   mdev = (struct drbd_conf *)tmp;
< #line 3676
<   if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
< #line 3677
---
> #line 2596
>   tmp = kzalloc(2392UL, 208U);
> #line 2596
>   tconn = (struct drbd_tconn *)tmp;
> #line 2597
>   if ((unsigned long )tconn == (unsigned long )((struct drbd_tconn *)0)) {
> #line 2598
47852,47857c48273,48278
< #line 3678
<   tmp___0 = zalloc_cpumask_var(& mdev->cpu_mask, 208U);
< #line 3678
<   if (tmp___0) {
< #line 3678
<     tmp___1 = 0;
---
> #line 2600
>   tconn->name = kstrdup(name, 208U);
> #line 2601
>   if ((unsigned long )tconn->name == (unsigned long )((char *)0)) {
> #line 2602
>     goto fail;
47859,47860c48280
< #line 3678
<     tmp___1 = 1;
---
> 
47862,47865c48282,48287
< #line 3678
<   if (tmp___1) {
< #line 3679
<     goto out_no_cpumask;
---
> #line 2604
>   tmp___0 = drbd_alloc_socket(& tconn->data);
> #line 2604
>   if (tmp___0 != 0) {
> #line 2605
>     goto fail;
47869c48291,48502
< #line 3681
---
> #line 2606
>   tmp___1 = drbd_alloc_socket(& tconn->meta);
> #line 2606
>   if (tmp___1 != 0) {
> #line 2607
>     goto fail;
>   } else {
> 
>   }
> #line 2609
>   tmp___2 = zalloc_cpumask_var(& tconn->cpu_mask, 208U);
> #line 2609
>   if (tmp___2) {
> #line 2609
>     tmp___3 = 0;
>   } else {
> #line 2609
>     tmp___3 = 1;
>   }
> #line 2609
>   if (tmp___3) {
> #line 2610
>     goto fail;
>   } else {
> 
>   }
> #line 2612
>   tmp___4 = set_resource_options(tconn, res_opts);
> #line 2612
>   if (tmp___4 != 0) {
> #line 2613
>     goto fail;
>   } else {
> 
>   }
> #line 2615
>   tmp___5 = kzalloc(48UL, 208U);
> #line 2615
>   tconn->current_epoch = (struct drbd_epoch *)tmp___5;
> #line 2616
>   if ((unsigned long )tconn->current_epoch == (unsigned long )((struct drbd_epoch *)0)) {
> #line 2617
>     goto fail;
>   } else {
> 
>   }
> #line 2619
>   INIT_LIST_HEAD(& tconn->transfer_log);
> #line 2621
>   INIT_LIST_HEAD(& (tconn->current_epoch)->list);
> #line 2622
>   tconn->epochs = 1U;
> #line 2623
>   spinlock_check(& tconn->epoch_lock);
> #line 2623
>   __raw_spin_lock_init(& tconn->epoch_lock.ldv_5957.rlock, "&(&tconn->epoch_lock)->rlock",
>                        & __key);
> #line 2624
>   tconn->write_ordering = WO_bdev_flush;
> #line 2626
>   tconn->send.seen_any_write_yet = 0;
> #line 2627
>   tconn->send.current_epoch_nr = 0;
> #line 2628
>   tconn->send.current_epoch_writes = 0U;
> #line 2630
>   tconn->cstate = C_STANDALONE;
> #line 2631
>   __mutex_init(& tconn->cstate_mutex, "&tconn->cstate_mutex", & __key___0);
> #line 2632
>   spinlock_check(& tconn->req_lock);
> #line 2632
>   __raw_spin_lock_init(& tconn->req_lock.ldv_5957.rlock, "&(&tconn->req_lock)->rlock",
>                        & __key___1);
> #line 2633
>   __mutex_init(& tconn->conf_update, "&tconn->conf_update", & __key___2);
> #line 2634
>   __init_waitqueue_head(& tconn->ping_wait, "&tconn->ping_wait", & __key___3);
> #line 2635
>   idr_init(& tconn->volumes);
> #line 2637
>   drbd_init_workqueue(& tconn->sender_work);
> #line 2638
>   __mutex_init(& tconn->data.mutex, "&tconn->data.mutex", & __key___4);
> #line 2639
>   __mutex_init(& tconn->meta.mutex, "&tconn->meta.mutex", & __key___5);
> #line 2641
>   drbd_thread_init(tconn, & tconn->receiver, & drbdd_init, (char *)"receiver");
> #line 2642
>   drbd_thread_init(tconn, & tconn->worker, & drbd_worker, (char *)"worker");
> #line 2643
>   drbd_thread_init(tconn, & tconn->asender, & drbd_asender, (char *)"asender");
> #line 2645
>   kref_init(& tconn->kref);
> #line 2646
>   list_add_tail_rcu(& tconn->all_tconn, & drbd_tconns);
> #line 2648
>   return (tconn);
>   fail: 
> #line 2651
>   kfree((void const   *)tconn->current_epoch);
> #line 2652
>   free_cpumask_var(tconn->cpu_mask);
> #line 2653
>   drbd_free_socket(& tconn->meta);
> #line 2654
>   drbd_free_socket(& tconn->data);
> #line 2655
>   kfree((void const   *)tconn->name);
> #line 2656
>   kfree((void const   *)tconn);
> #line 2658
>   return (0);
> }
> }
> #line 2661 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> void conn_destroy(struct kref *kref ) 
> { 
>   struct drbd_tconn *tconn ;
>   struct kref  const  *__mptr ;
>   int tmp ;
>   int tmp___0 ;
> 
>   {
> #line 2663
>   __mptr = (struct kref  const  *)kref;
> #line 2663
>   tconn = (struct drbd_tconn *)__mptr + 0xffffffffffffffe8UL;
> #line 2665
>   tmp___0 = atomic_read((atomic_t const   *)(& (tconn->current_epoch)->epoch_size));
> #line 2665
>   if (tmp___0 != 0) {
> #line 2666
>     tmp = atomic_read((atomic_t const   *)(& (tconn->current_epoch)->epoch_size));
> #line 2666
>     printk("\vd-con %s: epoch_size:%d\n", tconn->name, tmp);
>   } else {
> 
>   }
> #line 2667
>   kfree((void const   *)tconn->current_epoch);
> #line 2669
>   idr_destroy(& tconn->volumes);
> #line 2671
>   free_cpumask_var(tconn->cpu_mask);
> #line 2672
>   drbd_free_socket(& tconn->meta);
> #line 2673
>   drbd_free_socket(& tconn->data);
> #line 2674
>   kfree((void const   *)tconn->name);
> #line 2675
>   kfree((void const   *)tconn->int_dig_in);
> #line 2676
>   kfree((void const   *)tconn->int_dig_vv);
> #line 2677
>   kfree((void const   *)tconn);
> #line 2678
>   return;
> }
> }
> #line 2680 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> enum drbd_ret_code conn_new_minor(struct drbd_tconn *tconn , unsigned int minor ,
>                                   int vnr ) 
> { 
>   struct drbd_conf *mdev ;
>   struct gendisk *disk ;
>   struct request_queue *q ;
>   int vnr_got ;
>   int minor_got ;
>   enum drbd_ret_code err ;
>   void *tmp ;
>   int tmp___0 ;
>   struct rb_root __constr_expr_0 ;
>   struct rb_root __constr_expr_1 ;
>   int tmp___1 ;
>   int tmp___2 ;
>   int tmp___3 ;
>   int tmp___4 ;
> 
>   {
> #line 2685
>   vnr_got = vnr;
> #line 2686
>   minor_got = (int )minor;
> #line 2687
>   err = ERR_NOMEM;
> #line 2689
>   mdev = minor_to_mdev(minor);
> #line 2690
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 2691
>     return (ERR_MINOR_EXISTS);
>   } else {
> 
>   }
> #line 2694
>   tmp = kzalloc(2160UL, 208U);
> #line 2694
>   mdev = (struct drbd_conf *)tmp;
> #line 2695
>   if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
> #line 2696
>     return (ERR_NOMEM);
>   } else {
> 
>   }
> #line 2698
>   kref_get(& tconn->kref);
> #line 2699
>   mdev->tconn = tconn;
> #line 2701
47871c48504,48506
< #line 3683
---
> #line 2702
>   mdev->vnr = vnr;
> #line 2704
47873c48508
< #line 3685
---
> #line 2706
47875c48510
< #line 3686
---
> #line 2707
47877c48512
< #line 3687
---
> #line 2708
47882c48517
< #line 3688
---
> #line 2709
47884c48519
< #line 3689
---
> #line 2710
47886c48521
< #line 3691
---
> #line 2712
47888c48523
< #line 3692
---
> #line 2713
47890c48525
< #line 3693
---
> #line 2714
47895c48530
< #line 3694
---
> #line 2715
47897c48532
< #line 3696
---
> #line 2717
47899c48534
< #line 3698
---
> #line 2719
47901c48536
< #line 3699
---
> #line 2720
47903c48538
< #line 3700
---
> #line 2721
47905c48540
< #line 3701
---
> #line 2722
47907c48542
< #line 3702
---
> #line 2723
47909c48544
< #line 3703
---
> #line 2724
47911c48546
< #line 3705
---
> #line 2726
47913c48548
< #line 3707
---
> #line 2728
47915c48550
< #line 3709
---
> #line 2730
47917c48552
< #line 3710
---
> #line 2731
47919c48554
< #line 3712
---
> #line 2733
47921c48556
< #line 3713
---
> #line 2734
47923c48558
< #line 3716
---
> #line 2737
47925c48560
< #line 3717
---
> #line 2738
47927c48562
< #line 3718
---
> #line 2739
47929,47931c48564,48566
< #line 3719
<   q->queue_lock = & mdev->req_lock;
< #line 3721
---
> #line 2740
>   q->queue_lock = & (mdev->tconn)->req_lock;
> #line 2742
47933c48568
< #line 3722
---
> #line 2743
47935c48570
< #line 3723
---
> #line 2744
47940,47944c48575,48579
< #line 3725
<   tmp___2 = drbd_bm_init(mdev);
< #line 3725
<   if (tmp___2 != 0) {
< #line 3726
---
> #line 2746
>   tmp___0 = drbd_bm_init(mdev);
> #line 2746
>   if (tmp___0 != 0) {
> #line 2747
47949,47951c48584,48623
< #line 3728
<   tmp___3 = tl_init(mdev);
< #line 3728
---
> #line 2748
>   __constr_expr_0.rb_node = 0;
> #line 2748
>   mdev->read_requests = __constr_expr_0;
> #line 2749
>   __constr_expr_1.rb_node = 0;
> #line 2749
>   mdev->write_requests = __constr_expr_1;
> #line 2751
>   tmp___1 = idr_pre_get(& minors, 208U);
> #line 2751
>   if (tmp___1 == 0) {
> #line 2752
>     goto out_no_minor_idr;
>   } else {
> 
>   }
> #line 2753
>   tmp___2 = idr_get_new_above(& minors, (void *)mdev, (int )minor, & minor_got);
> #line 2753
>   if (tmp___2 != 0) {
> #line 2754
>     goto out_no_minor_idr;
>   } else {
> 
>   }
> #line 2755
>   if ((unsigned int )minor_got != minor) {
> #line 2756
>     err = ERR_MINOR_EXISTS;
> #line 2757
>     drbd_msg_put_info("requested minor exists already");
> #line 2758
>     goto out_idr_remove_minor;
>   } else {
> 
>   }
> #line 2761
>   tmp___3 = idr_pre_get(& tconn->volumes, 208U);
> #line 2761
47953,47954c48625,48626
< #line 3729
<     goto out_no_tl;
---
> #line 2762
>     goto out_idr_remove_minor;
47958,47965c48630,48635
< #line 3731
<   tmp___4 = kzalloc(120UL, 208U);
< #line 3731
<   mdev->app_reads_hash = (struct hlist_head *)tmp___4;
< #line 3732
<   if ((unsigned long )mdev->app_reads_hash == (unsigned long )((struct hlist_head *)0)) {
< #line 3733
<     goto out_no_app_reads;
---
> #line 2763
>   tmp___4 = idr_get_new_above(& tconn->volumes, (void *)mdev, vnr, & vnr_got);
> #line 2763
>   if (tmp___4 != 0) {
> #line 2764
>     goto out_idr_remove_minor;
47969,47976c48639,48646
< #line 3735
<   tmp___5 = kzalloc(40UL, 208U);
< #line 3735
<   mdev->current_epoch = (struct drbd_epoch *)tmp___5;
< #line 3736
<   if ((unsigned long )mdev->current_epoch == (unsigned long )((struct drbd_epoch *)0)) {
< #line 3737
<     goto out_no_epoch;
---
> #line 2765
>   if (vnr_got != vnr) {
> #line 2766
>     err = ERR_INVALID_REQUEST;
> #line 2767
>     drbd_msg_put_info("requested volume exists already");
> #line 2768
>     goto out_idr_remove_vol;
47980,47993c48650,48674
< #line 3739
<   INIT_LIST_HEAD(& (mdev->current_epoch)->list);
< #line 3740
<   mdev->epochs = 1U;
< #line 3742
<   return (mdev);
<   out_no_epoch: 
< #line 3747
<   kfree((void const   *)mdev->app_reads_hash);
<   out_no_app_reads: 
< #line 3749
<   tl_cleanup(mdev);
<   out_no_tl: 
< #line 3751
---
> #line 2770
>   add_disk(disk);
> #line 2771
>   kref_init(& mdev->kref);
> #line 2774
>   mdev->state.ldv_49522.conn = (unsigned char )tconn->cstate;
> #line 2775
>   if ((unsigned int )*((unsigned short *)mdev + 374UL) == 144U) {
> #line 2776
>     drbd_connected(mdev);
>   } else {
> 
>   }
> #line 2778
>   return (NO_ERROR);
>   out_idr_remove_vol: 
> #line 2781
>   idr_remove(& tconn->volumes, vnr_got);
>   out_idr_remove_minor: 
> #line 2783
>   idr_remove(& minors, minor_got);
> #line 2784
>   synchronize_rcu();
>   out_no_minor_idr: 
> #line 2786
47996c48677
< #line 3753
---
> #line 2788
47999c48680
< #line 3755
---
> #line 2790
48002c48683
< #line 3757
---
> #line 2792
48005,48043c48686
< #line 3759
<   free_cpumask_var(mdev->cpu_mask);
<   out_no_cpumask: 
< #line 3761
<   kfree((void const   *)mdev);
< #line 3762
<   return (0);
< }
< }
< #line 3767 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void drbd_free_mdev(struct drbd_conf *mdev ) 
< { 
< 
< 
<   {
< #line 3769
<   kfree((void const   *)mdev->current_epoch);
< #line 3770
<   kfree((void const   *)mdev->app_reads_hash);
< #line 3771
<   tl_cleanup(mdev);
< #line 3772
<   if ((unsigned long )mdev->bitmap != (unsigned long )((struct drbd_bitmap *)0)) {
< #line 3773
<     drbd_bm_cleanup(mdev);
<   } else {
< 
<   }
< #line 3774
<   __free_pages(mdev->md_io_page, 0U);
< #line 3775
<   put_disk(mdev->vdisk);
< #line 3776
<   blk_cleanup_queue(mdev->rq_queue);
< #line 3777
<   free_cpumask_var(mdev->cpu_mask);
< #line 3778
<   drbd_free_tl_hash(mdev);
< #line 3779
---
> #line 2794
48045,48046c48688,48691
< #line 3780
<   return;
---
> #line 2795
>   kref_put(& tconn->kref, & conn_destroy);
> #line 2796
>   return (err);
48049c48694
< #line 3783 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 2799 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
48054d48698
<   void *tmp ;
48055a48700,48705
>   struct lock_class_key __key___1 ;
>   char const   *__lock_name ;
>   struct workqueue_struct *tmp ;
>   struct lock_class_key __key___2 ;
>   atomic_long_t __constr_expr_0 ;
>   struct lock_class_key __key___3 ;
48059,48061c48709,48711
< #line 3794
<   if (minor_count == 0U || minor_count > 256U) {
< #line 3795
---
> #line 2803
>   if (minor_count == 0U || minor_count > 255U) {
> #line 2804
48063c48713
< #line 3798
---
> #line 2807
48068,48070c48718,48720
< #line 3804
<   err = drbd_nl_init();
< #line 3805
---
> #line 2813
>   err = register_blkdev(147U, "drbd");
> #line 2814
48072c48722,48724
< #line 3806
---
> #line 2815
>     printk("\vdrbd: unable to register block device major %d\n", 147);
> #line 2818
48077,48079c48729,48731
< #line 3808
<   err = register_blkdev(147U, "drbd");
< #line 3809
---
> #line 2821
>   err = drbd_genl_register();
> #line 2822
48081,48084c48733,48736
< #line 3810
<     printk("\vdrbd: unable to register block device major %d\n", 147);
< #line 3813
<     return (err);
---
> #line 2823
>     printk("\vdrbd: unable to register generic netlink family\n");
> #line 2824
>     goto fail;
48088c48740
< #line 3816
---
> #line 2828
48090c48742
< #line 3821
---
> #line 2833
48092c48744
< #line 3823
---
> #line 2835
48094c48746
< #line 3825
---
> #line 2837
48096,48107c48748,48750
< #line 3826
<   tmp = kzalloc((unsigned long )minor_count * 8UL, 208U);
< #line 3826
<   minor_table = (struct drbd_conf **)tmp;
< #line 3828
<   if ((unsigned long )minor_table == (unsigned long )((struct drbd_conf **)0)) {
< #line 3829
<     goto Enomem;
<   } else {
< 
<   }
< #line 3831
---
> #line 2838
>   idr_init(& minors);
> #line 2840
48109c48752
< #line 3832
---
> #line 2841
48111,48112c48754,48755
< #line 3833
<     goto Enomem;
---
> #line 2842
>     goto fail;
48116c48759
< #line 3835
---
> #line 2844
48118c48761
< #line 3836
---
> #line 2845
48120c48763
< #line 3837
---
> #line 2846
48122,48123c48765,48766
< #line 3838
<     goto Enomem;
---
> #line 2847
>     goto fail;
48127c48770
< #line 3841
---
> #line 2850
48129,48132c48772,48809
< #line 3843
<   printk("\016drbd: initialized. Version: 8.3.14 (api:%d/proto:%d-%d)\n", 88, 86,
<          97);
< #line 3846
---
> #line 2851
>   INIT_LIST_HEAD(& drbd_tconns);
> #line 2853
>   __lock_name = "drbd-reissue";
> #line 2853
>   tmp = __alloc_workqueue_key("drbd-reissue", 10U, 1, & __key___1, __lock_name);
> #line 2853
>   retry.wq = tmp;
> #line 2854
>   if ((unsigned long )retry.wq == (unsigned long )((struct workqueue_struct *)0)) {
> #line 2855
>     printk("\vdrbd: unable to create retry workqueue\n");
> #line 2856
>     goto fail;
>   } else {
> 
>   }
> #line 2858
>   __init_work(& retry.worker, 0);
> #line 2858
>   __constr_expr_0.counter = 4195328L;
> #line 2858
>   retry.worker.data = __constr_expr_0;
> #line 2858
>   lockdep_init_map(& retry.worker.lockdep_map, "(&retry.worker)", & __key___2, 0);
> #line 2858
>   INIT_LIST_HEAD(& retry.worker.entry);
> #line 2858
>   retry.worker.func = & do_retry;
> #line 2859
>   spinlock_check(& retry.lock);
> #line 2859
>   __raw_spin_lock_init(& retry.lock.ldv_5957.rlock, "&(&retry.lock)->rlock", & __key___3);
> #line 2860
>   INIT_LIST_HEAD(& retry.writes);
> #line 2862
>   printk("\016drbd: initialized. Version: 8.4.2 (api:%d/proto:%d-%d)\n", 1, 86, 101);
> #line 2865
48134c48811
< #line 3846
---
> #line 2865
48136c48813
< #line 3847
---
> #line 2866
48138,48140c48815
< #line 3849
<   printk("\016drbd: minor_table @ 0x%p\n", minor_table);
< #line 3851
---
> #line 2869
48142,48143c48817,48818
<   Enomem: 
< #line 3854
---
>   fail: 
> #line 2872
48145c48820
< #line 3855
---
> #line 2873
48147c48822
< #line 3857
---
> #line 2875
48150c48825
< #line 3859
---
> #line 2877
48153c48828
< #line 3860
---
> #line 2878
48157c48832
< #line 3863 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 2881 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
48163c48838
< #line 3865
---
> #line 2883
48165c48840
< #line 3866
---
> #line 2884
48170c48845
< #line 3868
---
> #line 2886
48172c48847
< #line 3869
---
> #line 2887
48174c48849
< #line 3871
---
> #line 2889
48176c48851
< #line 3872
---
> #line 2890
48180,48181c48855,48856
< #line 3874 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void drbd_free_sock(struct drbd_conf *mdev ) 
---
> #line 2892 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> void drbd_free_sock(struct drbd_tconn *tconn ) 
48186,48197c48861,48872
< #line 3876
<   if ((unsigned long )mdev->data.socket != (unsigned long )((struct socket *)0)) {
< #line 3877
<     ldv_mutex_lock_225(& mdev->data.mutex);
< #line 3878
<     kernel_sock_shutdown(mdev->data.socket, SHUT_RDWR);
< #line 3879
<     sock_release(mdev->data.socket);
< #line 3880
<     mdev->data.socket = 0;
< #line 3881
<     ldv_mutex_unlock_226(& mdev->data.mutex);
---
> #line 2894
>   if ((unsigned long )tconn->data.socket != (unsigned long )((struct socket *)0)) {
> #line 2895
>     ldv_mutex_lock_219(& tconn->data.mutex);
> #line 2896
>     kernel_sock_shutdown(tconn->data.socket, SHUT_RDWR);
> #line 2897
>     sock_release(tconn->data.socket);
> #line 2898
>     tconn->data.socket = 0;
> #line 2899
>     ldv_mutex_unlock_220(& tconn->data.mutex);
48201,48212c48876,48887
< #line 3883
<   if ((unsigned long )mdev->meta.socket != (unsigned long )((struct socket *)0)) {
< #line 3884
<     ldv_mutex_lock_227(& mdev->meta.mutex);
< #line 3885
<     kernel_sock_shutdown(mdev->meta.socket, SHUT_RDWR);
< #line 3886
<     sock_release(mdev->meta.socket);
< #line 3887
<     mdev->meta.socket = 0;
< #line 3888
<     ldv_mutex_unlock_228(& mdev->meta.mutex);
---
> #line 2901
>   if ((unsigned long )tconn->meta.socket != (unsigned long )((struct socket *)0)) {
> #line 2902
>     ldv_mutex_lock_221(& tconn->meta.mutex);
> #line 2903
>     kernel_sock_shutdown(tconn->meta.socket, SHUT_RDWR);
> #line 2904
>     sock_release(tconn->meta.socket);
> #line 2905
>     tconn->meta.socket = 0;
> #line 2906
>     ldv_mutex_unlock_222(& tconn->meta.mutex);
48216c48891
< #line 3890
---
> #line 2908
48220,48221c48895,48896
< #line 3893 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void drbd_free_resources(struct drbd_conf *mdev ) 
---
> #line 2912 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> void conn_md_sync(struct drbd_tconn *tconn ) 
48223c48898,48901
< 
---
>   struct drbd_conf *mdev ;
>   int vnr ;
>   void *tmp ;
>   void *tmp___0 ;
48226,48252c48904,48941
< #line 3895
<   crypto_free_hash(mdev->csums_tfm);
< #line 3896
<   mdev->csums_tfm = 0;
< #line 3897
<   crypto_free_hash(mdev->verify_tfm);
< #line 3898
<   mdev->verify_tfm = 0;
< #line 3899
<   crypto_free_hash(mdev->cram_hmac_tfm);
< #line 3900
<   mdev->cram_hmac_tfm = 0;
< #line 3901
<   crypto_free_hash(mdev->integrity_w_tfm);
< #line 3902
<   mdev->integrity_w_tfm = 0;
< #line 3903
<   crypto_free_hash(mdev->integrity_r_tfm);
< #line 3904
<   mdev->integrity_r_tfm = 0;
< #line 3906
<   drbd_free_sock(mdev);
< #line 3908
<   drbd_free_bc(mdev->ldev);
< #line 3908
<   mdev->ldev = 0;
< #line 3909
---
> #line 2917
>   rcu_read_lock___5();
> #line 2918
>   vnr = 0;
> #line 2918
>   tmp = idr_get_next(& tconn->volumes, & vnr);
> #line 2918
>   mdev = (struct drbd_conf *)tmp;
> #line 2918
>   goto ldv_53380;
>   ldv_53379: 
> #line 2919
>   kref_get(& mdev->kref);
> #line 2920
>   rcu_read_unlock___5();
> #line 2921
>   drbd_md_sync(mdev);
> #line 2922
>   kref_put(& mdev->kref, & drbd_minor_destroy);
> #line 2923
>   rcu_read_lock___5();
> #line 2918
>   vnr = vnr + 1;
> #line 2918
>   tmp___0 = idr_get_next(& tconn->volumes, & vnr);
> #line 2918
>   mdev = (struct drbd_conf *)tmp___0;
>   ldv_53380: ;
> #line 2918
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 2919
>     goto ldv_53379;
>   } else {
> 
>   }
> #line 2925
>   rcu_read_unlock___5();
> #line 2926
48256c48945
< #line 3937 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 2950 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
48280c48969
< #line 3943
---
> #line 2956
48282,48284c48971,48973
< #line 3945
<   tmp = drbd_test_and_clear_flag(mdev, MD_DIRTY);
< #line 3945
---
> #line 2958
>   tmp = test_and_clear_bit(1, (unsigned long volatile   *)(& mdev->flags));
> #line 2958
48286c48975
< #line 3946
---
> #line 2959
48291c48980
< #line 3950
---
> #line 2963
48293c48982
< #line 3950
---
> #line 2963
48295c48984
< #line 3951
---
> #line 2964
48300c48989
< #line 3953
---
> #line 2966
48302c48991
< #line 3953
---
> #line 2966
48304c48993
< #line 3954
---
> #line 2967
48306c48995
< #line 3955
---
> #line 2968
48311c49000
< #line 3957
---
> #line 2970
48313c49002
< #line 3959
---
> #line 2972
48315c49004
< #line 3959
---
> #line 2972
48317c49006
< #line 3959
---
> #line 2972
48319c49008
< #line 3960
---
> #line 2973
48321,48324c49010,49013
< #line 3960
<   goto ldv_52856;
<   ldv_52855: 
< #line 3961
---
> #line 2973
>   goto ldv_53404;
>   ldv_53403: 
> #line 2974
48326c49015
< #line 3961
---
> #line 2974
48328c49017
< #line 3960
---
> #line 2973
48330,48331c49019,49020
<   ldv_52856: ;
< #line 3960
---
>   ldv_53404: ;
> #line 2973
48333,48334c49022,49023
< #line 3961
<     goto ldv_52855;
---
> #line 2974
>     goto ldv_53403;
48338c49027
< #line 3962
---
> #line 2975
48340c49029
< #line 3962
---
> #line 2975
48342,48344c49031,49033
< #line 3963
<   buffer->magic = 1795323011U;
< #line 3965
---
> #line 2976
>   buffer->magic = 1812100227U;
> #line 2978
48346c49035
< #line 3965
---
> #line 2978
48348c49037
< #line 3966
---
> #line 2979
48350c49039
< #line 3966
---
> #line 2979
48352c49041
< #line 3967
---
> #line 2980
48354c49043
< #line 3967
---
> #line 2980
48356c49045
< #line 3968
---
> #line 2981
48358c49047
< #line 3969
---
> #line 2982
48360c49049
< #line 3969
---
> #line 2982
48362c49051
< #line 3971
---
> #line 2984
48364c49053
< #line 3971
---
> #line 2984
48366c49055
< #line 3972
---
> #line 2985
48368c49057
< #line 3972
---
> #line 2985
48370c49059
< #line 3974
---
> #line 2987
48372c49061
< #line 3974
---
> #line 2987
48374c49063
< #line 3974
---
> #line 2987
48376,48377c49065,49066
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             3974);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
>             2987);
48381c49070
< #line 3975
---
> #line 2988
48383c49072
< #line 3977
---
> #line 2990
48385,48387c49074,49076
< #line 3977
<   if (tmp___13 == 0) {
< #line 3979
---
> #line 2990
>   if (tmp___13 != 0) {
> #line 2992
48389c49078
< #line 3980
---
> #line 2993
48394c49083
< #line 3985
---
> #line 2998
48396c49085
< #line 3985
---
> #line 2998
48398c49087
< #line 3987
---
> #line 3000
48401c49090
< #line 3989
---
> #line 3002
48403c49092
< #line 3990
---
> #line 3003
48407c49096
< #line 4000 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 3013 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
48410a49100,49101
>   u32 magic ;
>   u32 flags ;
48425c49116
<   __u64 tmp___11 ;
---
>   __u32 tmp___11 ;
48427c49118
<   __u32 tmp___13 ;
---
>   __u64 tmp___13 ;
48436c49127
< #line 4003
---
> #line 3017
48438c49129
< #line 4005
---
> #line 3019
48440c49131
< #line 4005
---
> #line 3019
48442c49133
< #line 4006
---
> #line 3020
48447c49138
< #line 4008
---
> #line 3022
48449c49140
< #line 4008
---
> #line 3022
48451c49142
< #line 4009
---
> #line 3023
48453c49144
< #line 4010
---
> #line 3024
48458c49149
< #line 4012
---
> #line 3026
48460,48462c49151,49153
< #line 4012
<   if (tmp___1 == 0) {
< #line 4015
---
> #line 3026
>   if (tmp___1 != 0) {
> #line 3029
48464c49155
< #line 4016
---
> #line 3030
48466c49157
< #line 4017
---
> #line 3031
48471c49162
< #line 4020
---
> #line 3034
48473,48477c49164,49191
< #line 4020
<   if (tmp___2 != 2205418091U) {
< #line 4021
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Error while reading metadata, magic not found.\n");
< #line 4022
---
> #line 3034
>   magic = tmp___2;
> #line 3035
>   tmp___3 = __fswab32(buffer->flags);
> #line 3035
>   flags = tmp___3;
> #line 3036
>   if (magic == 2205418092U || (magic == 2205418091U && (flags & 128U) == 0U)) {
> #line 3039
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Found unclean meta data. Did you \"drbdadm apply-al\"?\n");
> #line 3040
>     rv = 165;
> #line 3041
>     goto err;
>   } else {
> 
>   }
> #line 3043
>   if (magic != 2205418091U) {
> #line 3044
>     if (magic == 2205418090U) {
> #line 3045
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Found old (0.7) meta data magic. Did you \"drbdadm create-md\"?\n");
>     } else {
> #line 3047
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Meta data magic not found. Did you \"drbdadm create-md\"?\n");
>     }
> #line 3048
48479c49193
< #line 4023
---
> #line 3049
48484,48490c49198,49204
< #line 4025
<   tmp___4 = __fswab32(buffer->al_offset);
< #line 4025
<   if (tmp___4 != (unsigned int )bdev->md.al_offset) {
< #line 4026
<     tmp___3 = __fswab32(buffer->al_offset);
< #line 4026
---
> #line 3051
>   tmp___5 = __fswab32(buffer->al_offset);
> #line 3051
>   if (tmp___5 != (unsigned int )bdev->md.al_offset) {
> #line 3052
>     tmp___4 = __fswab32(buffer->al_offset);
> #line 3052
48492,48493c49206,49207
<             tmp___3, bdev->md.al_offset);
< #line 4028
---
>             tmp___4, bdev->md.al_offset);
> #line 3054
48495c49209
< #line 4029
---
> #line 3055
48500,48506c49214,49220
< #line 4031
<   tmp___6 = __fswab32(buffer->bm_offset);
< #line 4031
<   if (tmp___6 != (unsigned int )bdev->md.bm_offset) {
< #line 4032
<     tmp___5 = __fswab32(buffer->bm_offset);
< #line 4032
---
> #line 3057
>   tmp___7 = __fswab32(buffer->bm_offset);
> #line 3057
>   if (tmp___7 != (unsigned int )bdev->md.bm_offset) {
> #line 3058
>     tmp___6 = __fswab32(buffer->bm_offset);
> #line 3058
48508,48509c49222,49223
<             tmp___5, bdev->md.bm_offset);
< #line 4034
---
>             tmp___6, bdev->md.bm_offset);
> #line 3060
48511c49225
< #line 4035
---
> #line 3061
48516,48522c49230,49236
< #line 4037
<   tmp___8 = __fswab32(buffer->md_size_sect);
< #line 4037
<   if (tmp___8 != bdev->md.md_size_sect) {
< #line 4038
<     tmp___7 = __fswab32(buffer->md_size_sect);
< #line 4038
---
> #line 3063
>   tmp___9 = __fswab32(buffer->md_size_sect);
> #line 3063
>   if (tmp___9 != bdev->md.md_size_sect) {
> #line 3064
>     tmp___8 = __fswab32(buffer->md_size_sect);
> #line 3064
48524,48525c49238,49239
<             tmp___7, bdev->md.md_size_sect);
< #line 4040
---
>             tmp___8, bdev->md.md_size_sect);
> #line 3066
48527c49241
< #line 4041
---
> #line 3067
48532,48538c49246,49252
< #line 4044
<   tmp___10 = __fswab32(buffer->bm_bytes_per_bit);
< #line 4044
<   if (tmp___10 != 4096U) {
< #line 4045
<     tmp___9 = __fswab32(buffer->bm_bytes_per_bit);
< #line 4045
---
> #line 3070
>   tmp___11 = __fswab32(buffer->bm_bytes_per_bit);
> #line 3070
>   if (tmp___11 != 4096U) {
> #line 3071
>     tmp___10 = __fswab32(buffer->bm_bytes_per_bit);
> #line 3071
48540,48541c49254,49255
<             tmp___9, 4096);
< #line 4047
---
>             tmp___10, 4096);
> #line 3073
48543c49257
< #line 4048
---
> #line 3074
48548,48552c49262,49266
< #line 4051
<   tmp___11 = __fswab64(buffer->la_size);
< #line 4051
<   bdev->md.la_size_sect = tmp___11;
< #line 4052
---
> #line 3077
>   tmp___12 = __fswab64(buffer->la_size);
> #line 3077
>   bdev->md.la_size_sect = tmp___12;
> #line 3078
48554,48561c49268,49275
< #line 4052
<   goto ldv_52869;
<   ldv_52868: 
< #line 4053
<   tmp___12 = __fswab64(buffer->uuid[i]);
< #line 4053
<   bdev->md.uuid[i] = tmp___12;
< #line 4052
---
> #line 3078
>   goto ldv_53419;
>   ldv_53418: 
> #line 3079
>   tmp___13 = __fswab64(buffer->uuid[i]);
> #line 3079
>   bdev->md.uuid[i] = tmp___13;
> #line 3078
48563,48564c49277,49278
<   ldv_52869: ;
< #line 4052
---
>   ldv_53419: ;
> #line 3078
48566,48567c49280,49281
< #line 4053
<     goto ldv_52868;
---
> #line 3079
>     goto ldv_53418;
48571,48579c49285,49289
< #line 4054
<   tmp___13 = __fswab32(buffer->flags);
< #line 4054
<   bdev->md.flags = tmp___13;
< #line 4055
<   tmp___14 = __fswab32(buffer->al_nr_extents);
< #line 4055
<   mdev->sync_conf.al_extents = (int )tmp___14;
< #line 4056
---
> #line 3080
>   tmp___14 = __fswab32(buffer->flags);
> #line 3080
>   bdev->md.flags = tmp___14;
> #line 3081
48581c49291
< #line 4056
---
> #line 3081
48583,48587c49293,49297
< #line 4058
<   spin_lock_irq(& mdev->req_lock);
< #line 4059
<   if ((int )mdev->state.ldv_39979.conn <= 9) {
< #line 4061
---
> #line 3083
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 3084
>   if ((int )mdev->state.ldv_49522.conn <= 9) {
> #line 3086
48589c49299
< #line 4061
---
> #line 3086
48591c49301
< #line 4062
---
> #line 3087
48593c49303
< #line 4062
---
> #line 3087
48595c49305
< #line 4062
---
> #line 3087
48597c49307
< #line 4063
---
> #line 3088
48602,48610c49312,49313
< #line 4065
<   spin_unlock_irq(& mdev->req_lock);
< #line 4067
<   if (mdev->sync_conf.al_extents <= 6) {
< #line 4068
<     mdev->sync_conf.al_extents = 127;
<   } else {
< 
<   }
---
> #line 3090
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
48612c49315
< #line 4071
---
> #line 3093
48615c49318
< #line 4073
---
> #line 3095
48617c49320
< #line 4075
---
> #line 3097
48621c49324
< #line 4096 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 3118 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
48627,48629c49330,49332
< #line 4098
<   tmp = drbd_test_and_set_flag(mdev, MD_DIRTY);
< #line 4098
---
> #line 3120
>   tmp = test_and_set_bit(1, (unsigned long volatile   *)(& mdev->flags));
> #line 3120
48631c49334
< #line 4099
---
> #line 3121
48636c49339
< #line 4100
---
> #line 3122
48640c49343
< #line 4103 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 3125 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
48646c49349
< #line 4107
---
> #line 3129
48648,48651c49351,49354
< #line 4107
<   goto ldv_52883;
<   ldv_52882: 
< #line 4108
---
> #line 3129
>   goto ldv_53433;
>   ldv_53432: 
> #line 3130
48653c49356
< #line 4107
---
> #line 3129
48655,48656c49358,49359
<   ldv_52883: ;
< #line 4107
---
>   ldv_53433: ;
> #line 3129
48658,48659c49361,49362
< #line 4108
<     goto ldv_52882;
---
> #line 3130
>     goto ldv_53432;
48664c49367
< #line 4112
---
> #line 3134
48668c49371
< #line 4111 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 3133 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
48674c49377
< #line 4113
---
> #line 3135
48676,48678c49379,49381
< #line 4114
<     if ((unsigned int )*((unsigned char *)mdev + 2276UL) == 1U) {
< #line 4115
---
> #line 3136
>     if ((unsigned int )*((unsigned char *)mdev + 748UL) == 1U) {
> #line 3137
48681c49384
< #line 4117
---
> #line 3139
48684c49387
< #line 4119
---
> #line 3141
48689c49392
< #line 4122
---
> #line 3144
48691c49394
< #line 4123
---
> #line 3145
48693c49396
< #line 4124
---
> #line 3146
48697c49400
< #line 4126 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 3148 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
48704c49407
< #line 4129
---
> #line 3151
48706c49409
< #line 4129
---
> #line 3151
48708c49411
< #line 4130
---
> #line 3152
48710c49413
< #line 4131
---
> #line 3153
48712c49415
< #line 4132
---
> #line 3154
48716c49419
< #line 4134 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 3156 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
48723c49426
< #line 4137
---
> #line 3159
48725c49428
< #line 4137
---
> #line 3159
48727c49430
< #line 4138
---
> #line 3160
48729c49432
< #line 4139
---
> #line 3161
48731c49434
< #line 4140
---
> #line 3162
48736c49439
< #line 4142
---
> #line 3164
48738c49441
< #line 4143
---
> #line 3165
48740c49443
< #line 4144
---
> #line 3166
48744c49447
< #line 4153 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 3175 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
48751c49454
< #line 4158
---
> #line 3180
48753c49456
< #line 4160
---
> #line 3182
48755c49458
< #line 4161
---
> #line 3183
48757c49460
< #line 4163
---
> #line 3185
48759c49462
< #line 4164
---
> #line 3186
48765c49468
< #line 4166
---
> #line 3188
48767c49470
< #line 4167
---
> #line 3189
48769c49472
< #line 4168
---
> #line 3190
48771c49474
< #line 4170
---
> #line 3192
48773c49476
< #line 4172
---
> #line 3194
48775c49478
< #line 4173
---
> #line 3195
48779c49482
< #line 4175 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 3197 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
48787c49490
< #line 4178
---
> #line 3200
48789c49492
< #line 4179
---
> #line 3201
48794c49497
< #line 4181
---
> #line 3203
48796c49499
< #line 4181
---
> #line 3203
48798c49501
< #line 4182
---
> #line 3204
48800c49503
< #line 4183
---
> #line 3205
48802c49505
< #line 4184
---
> #line 3206
48804c49507
< #line 4185
---
> #line 3207
48807c49510
< #line 4187
---
> #line 3209
48809c49512
< #line 4188
---
> #line 3210
48811c49514
< #line 4189
---
> #line 3211
48817c49520
< #line 4191
---
> #line 3213
48820c49523
< #line 4193
---
> #line 3215
48822c49525
< #line 4195
---
> #line 3217
48824c49527
< #line 4196
---
> #line 3218
48828c49531
< #line 4204 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 3226 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
48835c49538
< #line 4206
---
> #line 3228
48837c49540
< #line 4208
---
> #line 3230
48839c49542
< #line 4208
---
> #line 3230
48841c49544
< #line 4209
---
> #line 3231
48843c49546
< #line 4210
---
> #line 3232
48845c49548
< #line 4211
---
> #line 3233
48847c49550
< #line 4213
---
> #line 3235
48849c49552
< #line 4215
---
> #line 3237
48851c49554
< #line 4216
---
> #line 3238
48853c49556
< #line 4217
---
> #line 3239
48858c49561
< #line 4220
---
> #line 3242
48863c49566
< #line 4223
---
> #line 3245
48867c49570
< #line 4232 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 3254 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
48874c49577
< #line 4234
---
> #line 3256
48876c49579
< #line 4236
---
> #line 3258
48878c49581
< #line 4237
---
> #line 3259
48880c49583
< #line 4237
---
> #line 3259
48882c49585
< #line 4238
---
> #line 3260
48884c49587
< #line 4239
---
> #line 3261
48886c49589
< #line 4240
---
> #line 3262
48891c49594
< #line 4243
---
> #line 3265
48895,48896c49598,49599
< #line 4246 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static int w_bitmap_io(struct drbd_conf *mdev , struct drbd_work *w , int unused ) 
---
> #line 3268 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> static int w_bitmap_io(struct drbd_work *w , int unused ) 
48899a49603
>   struct drbd_conf *mdev ;
48905c49609
< #line 4248
---
> #line 3270
48907c49611
< #line 4248
---
> #line 3270
48909c49613,49615
< #line 4249
---
> #line 3271
>   mdev = w->ldv_49807.mdev;
> #line 3272
48911c49617
< #line 4251
---
> #line 3274
48913c49619
< #line 4251
---
> #line 3274
48915c49621
< #line 4251
---
> #line 3274
48917,48918c49623,49624
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             4251);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
>             3274);
48922c49628
< #line 4253
---
> #line 3276
48924c49630
< #line 4253
---
> #line 3276
48926c49632
< #line 4254
---
> #line 3277
48928c49634
< #line 4255
---
> #line 3278
48930c49636
< #line 4256
---
> #line 3279
48932c49638
< #line 4257
---
> #line 3280
48937,48941c49643,49645
< #line 4260
<   drbd_clear_flag(mdev, BITMAP_IO);
< #line 4261
<   __asm__  volatile   ("": : : "memory");
< #line 4262
---
> #line 3283
>   clear_bit_unlock(9U, (unsigned long volatile   *)(& mdev->flags));
> #line 3284
48943c49647
< #line 4264
---
> #line 3286
48946c49650
< #line 4265
---
> #line 3287
48951,48953c49655,49657
< #line 4267
<   drbd_clear_flag(mdev, BITMAP_IO_QUEUED);
< #line 4268
---
> #line 3289
>   clear_bit(10, (unsigned long volatile   *)(& mdev->flags));
> #line 3290
48955c49659
< #line 4269
---
> #line 3291
48957,48958c49661,49662
< #line 4271
<   return (1);
---
> #line 3293
>   return (0);
48961c49665
< #line 4274 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 3296 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
48967c49671
< #line 4276
---
> #line 3298
48969c49673
< #line 4277
---
> #line 3299
48971c49675
< #line 4278
---
> #line 3300
48973c49677
< #line 4279
---
> #line 3301
48975c49679
< #line 4280
---
> #line 3302
48977c49681
< #line 4280
---
> #line 3302
48979,48990c49683,49685
< #line 4284
<   if ((unsigned long )mdev->md_io_tmpp != (unsigned long )((struct page *)0)) {
< #line 4285
<     __free_pages(mdev->md_io_tmpp, 0U);
< #line 4286
<     mdev->md_io_tmpp = 0;
<   } else {
< 
<   }
< #line 4288
<   drbd_clear_flag(mdev, GO_DISKLESS);
< #line 4289
---
> #line 3306
>   clear_bit(11, (unsigned long volatile   *)(& mdev->flags));
> #line 3307
48994,48995c49689,49690
< #line 4291 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static int w_go_diskless(struct drbd_conf *mdev , struct drbd_work *w , int unused ) 
---
> #line 3309 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> static int w_go_diskless(struct drbd_work *w , int unused ) 
48996a49692
>   struct drbd_conf *mdev ;
49003,49005c49699,49703
< #line 4293
<   if ((unsigned int )*((unsigned char *)mdev + 2277UL) != 4U) {
< #line 4293
---
> #line 3311
>   mdev = w->ldv_49807.mdev;
> #line 3313
>   if ((unsigned int )*((unsigned char *)mdev + 749UL) != 4U) {
> #line 3313
49007,49008c49705,49706
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             4293);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
>             3313);
49012,49014c49710,49712
< #line 4308
<   if ((unsigned long )mdev->bitmap != (unsigned long )((struct drbd_bitmap *)0)) {
< #line 4309
---
> #line 3332
>   if ((unsigned long )mdev->bitmap != (unsigned long )((struct drbd_bitmap *)0) && (unsigned long )mdev->ldev != (unsigned long )((struct drbd_backing_dev *)0)) {
> #line 3333
49017c49715
< #line 4309
---
> #line 3333
49019,49021c49717,49719
< #line 4311
<       tmp = drbd_test_flag(mdev, WAS_READ_ERROR);
< #line 4311
---
> #line 3335
>       tmp = constant_test_bit(13U, (unsigned long const volatile   *)(& mdev->flags));
> #line 3335
49023c49721
< #line 4312
---
> #line 3336
49025c49723
< #line 4313
---
> #line 3337
49036c49734
< #line 4318
---
> #line 3342
49038,49040c49736,49738
< #line 4318
<   val.ldv_39979.disk = 0U;
< #line 4318
---
> #line 3342
>   val.ldv_40024.disk = 0U;
> #line 3342
49042,49044c49740,49742
< #line 4318
<   mask.ldv_39979.disk = 15U;
< #line 4318
---
> #line 3342
>   mask.ldv_40024.disk = 15U;
> #line 3342
49046,49047c49744,49745
< #line 4319
<   return (1);
---
> #line 3343
>   return (0);
49050c49748
< #line 4322 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 3346 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
49056,49058c49754,49756
< #line 4324
<   if ((unsigned int )*((unsigned char *)mdev + 2277UL) != 4U) {
< #line 4324
---
> #line 3348
>   if ((unsigned int )*((unsigned char *)mdev + 749UL) != 4U) {
> #line 3348
49060,49061c49758,49759
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             4324);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
>             3348);
49065,49067c49763,49765
< #line 4325
<   tmp = drbd_test_and_set_flag(mdev, GO_DISKLESS);
< #line 4325
---
> #line 3349
>   tmp = test_and_set_bit(11, (unsigned long volatile   *)(& mdev->flags));
> #line 3349
49069,49070c49767,49768
< #line 4326
<     drbd_queue_work(& mdev->data.work, & mdev->go_diskless);
---
> #line 3350
>     drbd_queue_work(& (mdev->tconn)->sender_work, & mdev->go_diskless);
49074c49772
< #line 4327
---
> #line 3351
49078c49776
< #line 4341 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 3365 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
49090c49788
< #line 4346
---
> #line 3370
49092,49097c49790,49795
< #line 4346
<   if ((unsigned long )tmp != (unsigned long )mdev->worker.task) {
< #line 4346
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( current == mdev->worker.task ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             4346);
---
> #line 3370
>   if ((unsigned long )tmp != (unsigned long )(mdev->tconn)->worker.task) {
> #line 3370
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( current == mdev->tconn->worker.task ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
>             3370);
49101,49103c49799,49801
< #line 4348
<   tmp___0 = drbd_test_flag(mdev, BITMAP_IO_QUEUED);
< #line 4348
---
> #line 3372
>   tmp___0 = constant_test_bit(10U, (unsigned long const volatile   *)(& mdev->flags));
> #line 3372
49105,49108c49803,49806
< #line 4348
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( !drbd_test_flag(mdev, BITMAP_IO_QUEUED) ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             4348);
---
> #line 3372
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( !test_bit(BITMAP_IO_QUEUED, &mdev->flags) ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
>             3372);
49112,49114c49810,49812
< #line 4349
<   tmp___1 = drbd_test_flag(mdev, BITMAP_IO);
< #line 4349
---
> #line 3373
>   tmp___1 = constant_test_bit(9U, (unsigned long const volatile   *)(& mdev->flags));
> #line 3373
49116,49119c49814,49817
< #line 4349
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( !drbd_test_flag(mdev, BITMAP_IO) ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             4349);
---
> #line 3373
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( !test_bit(BITMAP_IO, &mdev->flags) ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
>             3373);
49123c49821
< #line 4350
---
> #line 3374
49125c49823
< #line 4350
---
> #line 3374
49127c49825
< #line 4350
---
> #line 3374
49129,49130c49827,49828
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             4350);
---
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
>             3374);
49134c49832
< #line 4351
---
> #line 3375
49136c49834
< #line 4352
---
> #line 3376
49142c49840
< #line 4355
---
> #line 3379
49144c49842
< #line 4356
---
> #line 3380
49146c49844
< #line 4357
---
> #line 3381
49148c49846
< #line 4358
---
> #line 3382
49150,49154c49848,49852
< #line 4360
<   spin_lock_irq(& mdev->req_lock);
< #line 4361
<   drbd_set_flag(mdev, BITMAP_IO);
< #line 4362
---
> #line 3384
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 3385
>   set_bit(9U, (unsigned long volatile   *)(& mdev->flags));
> #line 3386
49156c49854
< #line 4362
---
> #line 3386
49158,49160c49856,49858
< #line 4363
<     tmp___3 = drbd_test_and_set_flag(mdev, BITMAP_IO_QUEUED);
< #line 4363
---
> #line 3387
>     tmp___3 = test_and_set_bit(10, (unsigned long volatile   *)(& mdev->flags));
> #line 3387
49162,49163c49860,49861
< #line 4364
<       drbd_queue_work(& mdev->data.work, & mdev->bm_io_work.w);
---
> #line 3388
>       drbd_queue_work(& (mdev->tconn)->sender_work, & mdev->bm_io_work.w);
49170,49172c49868,49870
< #line 4366
<   spin_unlock_irq(& mdev->req_lock);
< #line 4367
---
> #line 3390
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 3391
49176c49874
< #line 4378 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 3402 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
49184c49882
< #line 4383
---
> #line 3407
49186,49191c49884,49889
< #line 4383
<   if ((unsigned long )tmp == (unsigned long )mdev->worker.task) {
< #line 4383
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( current != mdev->worker.task ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
<             4383);
---
> #line 3407
>   if ((unsigned long )tmp == (unsigned long )(mdev->tconn)->worker.task) {
> #line 3407
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( current != mdev->tconn->worker.task ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
>             3407);
49195c49893
< #line 4385
---
> #line 3409
49197c49895
< #line 4386
---
> #line 3410
49202c49900
< #line 4388
---
> #line 3412
49204c49902
< #line 4389
---
> #line 3413
49206c49904
< #line 4390
---
> #line 3414
49208c49906
< #line 4392
---
> #line 3416
49210c49908
< #line 4393
---
> #line 3417
49215c49913
< #line 4395
---
> #line 3419
49219c49917
< #line 4398 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 3422 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
49225c49923
< #line 4400
---
> #line 3424
49227c49925
< #line 4401
---
> #line 3425
49229c49927
< #line 4402
---
> #line 3426
49234c49932
< #line 4404
---
> #line 3428
49238c49936
< #line 4406 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 3430 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
49244c49942
< #line 4408
---
> #line 3432
49246c49944
< #line 4409
---
> #line 3433
49248c49946
< #line 4410
---
> #line 3434
49253c49951
< #line 4412
---
> #line 3436
49257c49955
< #line 4413 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 3437 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
49263c49961
< #line 4415
---
> #line 3439
49267c49965
< #line 4418 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 3442 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
49270a49969
>   int tmp ;
49273c49972
< #line 4420
---
> #line 3444
49275,49277c49974,49983
< #line 4422
<   drbd_queue_work_front(& mdev->data.work, & mdev->md_sync_work);
< #line 4423
---
> #line 3447
>   tmp = list_empty((struct list_head  const  *)(& mdev->md_sync_work.list));
> #line 3447
>   if (tmp != 0) {
> #line 3448
>     drbd_queue_work_front(& (mdev->tconn)->sender_work, & mdev->md_sync_work);
>   } else {
> 
>   }
> #line 3449
49281,49282c49987,49988
< #line 4425 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< static int w_md_sync(struct drbd_conf *mdev , struct drbd_work *w , int unused ) 
---
> #line 3451 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> static int w_md_sync(struct drbd_work *w , int unused ) 
49284c49990
< 
---
>   struct drbd_conf *mdev ;
49287c49993,49995
< #line 4427
---
> #line 3453
>   mdev = w->ldv_49807.mdev;
> #line 3455
49289c49997
< #line 4432
---
> #line 3460
49291,49292c49999,50229
< #line 4433
<   return (1);
---
> #line 3461
>   return (0);
> }
> }
> #line 3464 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> char const   *cmdname(enum drbd_packet cmd ) 
> { 
>   char const   *cmdnames[46U] ;
> 
>   {
> #line 3469
>   cmdnames[0] = "Data";
> #line 3469
>   cmdnames[1] = "DataReply";
> #line 3469
>   cmdnames[2] = "RSDataReply";
> #line 3469
>   cmdnames[3] = "Barrier";
> #line 3469
>   cmdnames[4] = "ReportBitMap";
> #line 3469
>   cmdnames[5] = "BecomeSyncTarget";
> #line 3469
>   cmdnames[6] = "BecomeSyncSource";
> #line 3469
>   cmdnames[7] = "UnplugRemote";
> #line 3469
>   cmdnames[8] = "DataRequest";
> #line 3469
>   cmdnames[9] = "RSDataRequest";
> #line 3469
>   cmdnames[10] = "SyncParam";
> #line 3469
>   cmdnames[11] = "ReportProtocol";
> #line 3469
>   cmdnames[12] = "ReportUUIDs";
> #line 3469
>   cmdnames[13] = "ReportSizes";
> #line 3469
>   cmdnames[14] = "ReportState";
> #line 3469
>   cmdnames[15] = "ReportSyncUUID";
> #line 3469
>   cmdnames[16] = "AuthChallenge";
> #line 3469
>   cmdnames[17] = "AuthResponse";
> #line 3469
>   cmdnames[18] = "StateChgRequest";
> #line 3469
>   cmdnames[19] = "Ping";
> #line 3469
>   cmdnames[20] = "PingAck";
> #line 3469
>   cmdnames[21] = "RecvAck";
> #line 3469
>   cmdnames[22] = "WriteAck";
> #line 3469
>   cmdnames[23] = "RSWriteAck";
> #line 3469
>   cmdnames[24] = "Superseded";
> #line 3469
>   cmdnames[25] = "NegAck";
> #line 3469
>   cmdnames[26] = "NegDReply";
> #line 3469
>   cmdnames[27] = "NegRSDReply";
> #line 3469
>   cmdnames[28] = "BarrierAck";
> #line 3469
>   cmdnames[29] = "StateChgReply";
> #line 3469
>   cmdnames[30] = "OVRequest";
> #line 3469
>   cmdnames[31] = "OVReply";
> #line 3469
>   cmdnames[32] = "OVResult";
> #line 3469
>   cmdnames[33] = "CsumRSRequest";
> #line 3469
>   cmdnames[34] = "CsumRSIsInSync";
> #line 3469
>   cmdnames[35] = "SyncParam89";
> #line 3469
>   cmdnames[36] = "CBitmap";
> #line 3469
>   cmdnames[37] = 0;
> #line 3469
>   cmdnames[38] = 0;
> #line 3469
>   cmdnames[39] = "DelayProbe";
> #line 3469
>   cmdnames[40] = "OutOfSync";
> #line 3469
>   cmdnames[41] = "RSCancel";
> #line 3469
>   cmdnames[42] = "conn_st_chg_req";
> #line 3469
>   cmdnames[43] = "conn_st_chg_reply";
> #line 3469
>   cmdnames[44] = "retry_write";
> #line 3469
>   cmdnames[45] = "protocol_update";
> #line 3523
>   if ((unsigned int )cmd == 65521U) {
> #line 3524
>     return ("InitialMeta");
>   } else {
> 
>   }
> #line 3525
>   if ((unsigned int )cmd == 65522U) {
> #line 3526
>     return ("InitialData");
>   } else {
> 
>   }
> #line 3527
>   if ((unsigned int )cmd == 65534U) {
> #line 3528
>     return ("ConnectionFeatures");
>   } else {
> 
>   }
> #line 3529
>   if ((unsigned int )cmd > (unsigned int )P_PROTOCOL_UPDATE) {
> #line 3530
>     return ("Unknown");
>   } else {
> 
>   }
> #line 3531
>   return (cmdnames[(unsigned int )cmd]);
> }
> }
> #line 3540 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> int drbd_wait_misc(struct drbd_conf *mdev , struct drbd_interval *i ) 
> { 
>   struct net_conf *nc ;
>   wait_queue_t wait ;
>   struct task_struct *tmp ;
>   long timeout ;
>   struct net_conf *_________p1 ;
>   bool __warned ;
>   int tmp___0 ;
>   int tmp___1 ;
>   struct task_struct *tmp___2 ;
>   int tmp___3 ;
> 
>   {
> #line 3543
>   tmp = get_current();
> #line 3543
>   wait.flags = 0U;
> #line 3543
>   wait.private = (void *)tmp;
> #line 3543
>   wait.func = & autoremove_wake_function;
> #line 3543
>   wait.task_list.next = & wait.task_list;
> #line 3543
>   wait.task_list.prev = & wait.task_list;
> #line 3546
>   rcu_read_lock___5();
> #line 3547
>   _________p1 = *((struct net_conf * volatile  *)(& (mdev->tconn)->net_conf));
> #line 3547
>   tmp___0 = debug_lockdep_rcu_enabled();
> #line 3547
>   if (tmp___0 != 0 && ! __warned) {
> #line 3547
>     tmp___1 = rcu_read_lock_held();
> #line 3547
>     if (tmp___1 == 0 && 1) {
> #line 3547
>       __warned = 1;
> #line 3547
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared",
>                              3547, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 3547
>   nc = _________p1;
> #line 3548
>   if ((unsigned long )nc == (unsigned long )((struct net_conf *)0)) {
> #line 3549
>     rcu_read_unlock___5();
> #line 3550
>     return (-110);
>   } else {
> 
>   }
> #line 3552
>   timeout = nc->ko_count != 0U ? (long )(((nc->timeout * 250U) / 10U) * nc->ko_count) : 9223372036854775807L;
> #line 3553
>   rcu_read_unlock___5();
> #line 3556
>   i->waiting = -1;
> #line 3557
>   prepare_to_wait(& mdev->misc_wait, & wait, 1);
> #line 3558
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 3559
>   timeout = schedule_timeout(timeout);
> #line 3560
>   finish_wait(& mdev->misc_wait, & wait);
> #line 3561
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 3562
>   if (timeout == 0L || (int )mdev->state.ldv_49522.conn <= 9) {
> #line 3563
>     return (-110);
>   } else {
> 
>   }
> #line 3564
>   tmp___2 = get_current();
> #line 3564
>   tmp___3 = signal_pending(tmp___2);
> #line 3564
>   if (tmp___3 != 0) {
> #line 3565
>     return (-512);
>   } else {
> 
>   }
> #line 3566
>   return (0);
49295c50232
< #line 4453 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 3586 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
49303c50240
< #line 4457
---
> #line 3590
49305c50242
< #line 4457
---
> #line 3590
49307c50244
< #line 4457
---
> #line 3590
49309c50246
< #line 4458
---
> #line 3591
49311c50248
< #line 4459
---
> #line 3592
49313c50250
< #line 4460
---
> #line 3593
49318c50255
< #line 4462
---
> #line 3595
49320c50257
< #line 4463
---
> #line 3596
49322c50259
< #line 4463
---
> #line 3596
49326c50263
< #line 4467 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 3600 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
49332c50269
< #line 4468
---
> #line 3601
49334c50271
< #line 4468
---
> #line 3601
49336c50273
< #line 4468
---
> #line 3601
49338c50275
< #line 4468
---
> #line 3601
49340c50277
< #line 4468
---
> #line 3601
49342c50279
< #line 4468
---
> #line 3601
49344c50281
< #line 4468
---
> #line 3601
49346c50283
< #line 4468
---
> #line 3601
49348c50285
< #line 4468
---
> #line 3601
49350c50287
< #line 4468
---
> #line 3601
49352c50289
< #line 4481
---
> #line 3614
49356c50293
< #line 4485 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 3618 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
49368c50305
< #line 4487
---
> #line 3620
49370c50307
< #line 4487
---
> #line 3620
49372c50309
< #line 4489
---
> #line 3622
49374c50311
< #line 4489
---
> #line 3622
49377c50314
< #line 4489
---
> #line 3622
49379c50316
< #line 4489
---
> #line 3622
49382c50319
< #line 4489
---
> #line 3622
49384c50321
< #line 4489
---
> #line 3622
49386c50323
< #line 4489
---
> #line 3622
49389c50326
< #line 4489
---
> #line 3622
49393c50330
< #line 4489
---
> #line 3622
49397c50334
< #line 4489
---
> #line 3622
49399c50336
< #line 4494
---
> #line 3627
49401c50338
< #line 4495
---
> #line 3628
49403c50340
< #line 4497
---
> #line 3630
49405c50342
< #line 4497
---
> #line 3630
49407c50344
< #line 4498
---
> #line 3631
49409c50346
< #line 4498
---
> #line 3631
49418c50355
< #line 4502
---
> #line 3635
49422c50359
< #line 4506 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 3639 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
49429c50366
< #line 4511
---
> #line 3644
49431c50368
< #line 4511
---
> #line 3644
49433c50370
< #line 4511
---
> #line 3644
49435c50372
< #line 4511
---
> #line 3644
49437c50374
< #line 4511
---
> #line 3644
49442c50379
< #line 4511
---
> #line 3644
49444c50381
< #line 4511
---
> #line 3644
49447c50384
< #line 4513
---
> #line 3646
49449c50386
< #line 4515
---
> #line 3648
49454c50391
< #line 4521
---
> #line 3654
49458c50395
< #line 4569 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 3702 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
49469c50406
<   unsigned long var_md_sync_timer_fn_110_p0 ;
---
>   unsigned long var_md_sync_timer_fn_120_p0 ;
49476c50413
< #line 4768
---
> #line 3891
49478c50415
< #line 4725
---
> #line 3850
49480c50417
< #line 4734
---
> #line 3859
49482c50419
< #line 4750
---
> #line 3873
49484c50421
< #line 4751
---
> #line 3874
49486c50423
< #line 4751
---
> #line 3874
49488c50425
< #line 4752
---
> #line 3875
49493,49496c50430,50433
< #line 4775
<   goto ldv_53080;
<   ldv_53079: 
< #line 4779
---
> #line 3898
>   goto ldv_53646;
>   ldv_53645: 
> #line 3902
49498c50435
< #line 4779
---
> #line 3902
49501c50438
< #line 4784
---
> #line 3907
49503c50440
< #line 4797
---
> #line 3920
49505c50442
< #line 4798
---
> #line 3921
49507c50444
< #line 4799
---
> #line 3922
49509c50446
< #line 4800
---
> #line 3923
49511c50448
< #line 4801
---
> #line 3924
49516c50453
< #line 4822
---
> #line 3943
49521,49522c50458,50459
< #line 4828
<   goto ldv_53074;
---
> #line 3949
>   goto ldv_53640;
49524c50461
< #line 4832
---
> #line 3953
49526c50463
< #line 4845
---
> #line 3966
49528c50465
< #line 4846
---
> #line 3967
49530c50467
< #line 4867
---
> #line 3986
49535,49536c50472,50473
< #line 4873
<   goto ldv_53074;
---
> #line 3992
>   goto ldv_53640;
49538c50475
< #line 4892
---
> #line 4009
49540c50477
< #line 4893
---
> #line 4010
49542,49543c50479,50480
< #line 4918
<   goto ldv_53074;
---
> #line 4035
>   goto ldv_53640;
49545c50482
< #line 4943
---
> #line 4058
49547,49550c50484,50487
< #line 4944
<   md_sync_timer_fn(var_md_sync_timer_fn_110_p0);
< #line 4963
<   goto ldv_53074;
---
> #line 4059
>   md_sync_timer_fn(var_md_sync_timer_fn_120_p0);
> #line 4078
>   goto ldv_53640;
49552,49553c50489,50490
< #line 4964
<   goto ldv_53074;
---
> #line 4079
>   goto ldv_53640;
49555,49557c50492,50494
<   ldv_53074: ;
<   ldv_53080: 
< #line 4775
---
>   ldv_53640: ;
>   ldv_53646: 
> #line 3898
49559c50496
< #line 4775
---
> #line 3898
49561,49562c50498,50499
< #line 4777
<     goto ldv_53079;
---
> #line 3900
>     goto ldv_53645;
49568c50505
< #line 4986
---
> #line 4099
49570c50507
< #line 4987
---
> #line 4100
49573c50510
< #line 5008
---
> #line 4121
49575c50512
< #line 5011
---
> #line 4124
49579c50516
< #line 5015 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 4128 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
49585c50522
< #line 5020
---
> #line 4133
49587c50524
< #line 5022
---
> #line 4135
49589c50526
< #line 5023
---
> #line 4136
49593c50530
< #line 5025 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 4138 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
49599c50536
< #line 5030
---
> #line 4143
49601c50538
< #line 5032
---
> #line 4145
49603c50540
< #line 5033
---
> #line 4146
49607c50544
< #line 5035 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 4148 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
49613c50550
< #line 5040
---
> #line 4153
49615c50552
< #line 5042
---
> #line 4155
49617c50554
< #line 5043
---
> #line 4156
49621c50558
< #line 5045 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 4158 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
49629c50566
< #line 5050
---
> #line 4163
49631c50568
< #line 5050
---
> #line 4163
49633c50570
< #line 5052
---
> #line 4165
49635c50572
< #line 5052
---
> #line 4165
49637c50574
< #line 5054
---
> #line 4167
49641c50578
< #line 5057 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 4170 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
49647c50584
< #line 5062
---
> #line 4175
49649c50586
< #line 5064
---
> #line 4177
49651c50588
< #line 5065
---
> #line 4178
49655c50592
< #line 5067 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 4180 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
49661c50598
< #line 5072
---
> #line 4185
49663c50600
< #line 5074
---
> #line 4187
49665c50602
< #line 5075
---
> #line 4188
49669c50606
< #line 5077 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 4190 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
49675c50612
< #line 5082
---
> #line 4195
49677c50614
< #line 5084
---
> #line 4197
49679c50616
< #line 5085
---
> #line 4198
49683c50620
< #line 5087 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 4200 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
49689c50626
< #line 5092
---
> #line 4205
49691c50628
< #line 5094
---
> #line 4207
49693c50630
< #line 5095
---
> #line 4208
49697c50634
< #line 5097 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 4210 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
49703c50640
< #line 5102
---
> #line 4215
49705c50642
< #line 5104
---
> #line 4217
49707c50644
< #line 5105
---
> #line 4218
49711c50648
< #line 5107 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 4220 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
49717c50654
< #line 5112
---
> #line 4225
49719c50656
< #line 5114
---
> #line 4227
49721c50658
< #line 5115
---
> #line 4228
49725c50662
< #line 5117 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 4230 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
49731c50668
< #line 5122
---
> #line 4235
49733c50670
< #line 5124
---
> #line 4237
49735c50672
< #line 5125
---
> #line 4238
49739c50676
< #line 5127 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 4240 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
49745c50682
< #line 5132
---
> #line 4245
49747c50684
< #line 5134
---
> #line 4247
49749c50686
< #line 5135
---
> #line 4248
49753c50690
< #line 5137 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 4250 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
49759c50696
< #line 5142
---
> #line 4255
49761c50698
< #line 5144
---
> #line 4257
49763c50700
< #line 5145
---
> #line 4258
49767c50704
< #line 5147 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
---
> #line 4260 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
49773c50710
< #line 5152
---
> #line 4265
49775,49803c50712
< #line 5154
<   mutex_unlock(ldv_func_arg1);
< #line 5155
<   return;
< }
< }
< #line 5157 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_lock_207(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 5162
<   ldv_mutex_lock_state_mutex_of_drbd_conf(ldv_func_arg1);
< #line 5164
<   mutex_lock(ldv_func_arg1);
< #line 5165
<   return;
< }
< }
< #line 5167 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_unlock_208(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 5172
<   ldv_mutex_unlock_state_mutex_of_drbd_conf(ldv_func_arg1);
< #line 5174
---
> #line 4267
49805,49833c50714
< #line 5175
<   return;
< }
< }
< #line 5177 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_lock_209(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 5182
<   ldv_mutex_lock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 5184
<   mutex_lock(ldv_func_arg1);
< #line 5185
<   return;
< }
< }
< #line 5187 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_lock_210(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 5192
<   ldv_mutex_lock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 5194
<   mutex_lock(ldv_func_arg1);
< #line 5195
---
> #line 4268
49837,49838c50718,50719
< #line 5197 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_unlock_211(struct mutex *ldv_func_arg1 ) 
---
> #line 4270 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> void ldv_mutex_unlock_207(struct mutex *ldv_func_arg1 ) 
49843c50724
< #line 5202
---
> #line 4275
49845c50726
< #line 5204
---
> #line 4277
49847c50728
< #line 5205
---
> #line 4278
49851,49852c50732,50733
< #line 5207 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_unlock_212(struct mutex *ldv_func_arg1 ) 
---
> #line 4280 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> void ldv_mutex_unlock_208(struct mutex *ldv_func_arg1 ) 
49857c50738
< #line 5212
---
> #line 4285
49859c50740
< #line 5214
---
> #line 4287
49861c50742
< #line 5215
---
> #line 4288
49865,49866c50746,50747
< #line 5217 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_lock_213(struct mutex *ldv_func_arg1 ) 
---
> #line 4290 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> void ldv_mutex_lock_209(struct mutex *ldv_func_arg1 ) 
49871c50752
< #line 5222
---
> #line 4295
49873c50754
< #line 5224
---
> #line 4297
49875c50756
< #line 5225
---
> #line 4298
49879,49880c50760,50761
< #line 5227 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_unlock_214(struct mutex *ldv_func_arg1 ) 
---
> #line 4300 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> void ldv_mutex_unlock_210(struct mutex *ldv_func_arg1 ) 
49885c50766
< #line 5232
---
> #line 4305
49887c50768
< #line 5234
---
> #line 4307
49889c50770
< #line 5235
---
> #line 4308
49893,49894c50774,50775
< #line 5237 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_lock_215(struct mutex *ldv_func_arg1 ) 
---
> #line 4310 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> void ldv_mutex_lock_211(struct mutex *ldv_func_arg1 ) 
49899c50780
< #line 5242
---
> #line 4315
49901c50782
< #line 5244
---
> #line 4317
49903c50784
< #line 5245
---
> #line 4318
49907,49908c50788,50789
< #line 5247 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_unlock_216(struct mutex *ldv_func_arg1 ) 
---
> #line 4320 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> void ldv_mutex_unlock_212(struct mutex *ldv_func_arg1 ) 
49913c50794
< #line 5252
---
> #line 4325
49915c50796
< #line 5254
---
> #line 4327
49917,49931c50798
< #line 5255
<   return;
< }
< }
< #line 5257 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_lock_217(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 5262
<   ldv_mutex_lock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 5264
<   mutex_lock(ldv_func_arg1);
< #line 5265
---
> #line 4328
49935,49936c50802,50803
< #line 5267 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_unlock_218(struct mutex *ldv_func_arg1 ) 
---
> #line 4330 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> void ldv_mutex_unlock_213(struct mutex *ldv_func_arg1 ) 
49941c50808
< #line 5272
---
> #line 4335
49943c50810
< #line 5274
---
> #line 4337
49945,49959c50812
< #line 5275
<   return;
< }
< }
< #line 5277 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_lock_219(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 5282
<   ldv_mutex_lock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 5284
<   mutex_lock(ldv_func_arg1);
< #line 5285
---
> #line 4338
49963,49964c50816,50817
< #line 5287 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_unlock_220(struct mutex *ldv_func_arg1 ) 
---
> #line 4340 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> void ldv_mutex_unlock_214(struct mutex *ldv_func_arg1 ) 
49969c50822
< #line 5292
---
> #line 4345
49971c50824
< #line 5294
---
> #line 4347
49973c50826
< #line 5295
---
> #line 4348
49977,49978c50830,50831
< #line 5297 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_lock_221(struct mutex *ldv_func_arg1 ) 
---
> #line 4350 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> void ldv_mutex_lock_215(struct mutex *ldv_func_arg1 ) 
49983c50836
< #line 5302
---
> #line 4355
49985c50838
< #line 5304
---
> #line 4357
49987c50840
< #line 5305
---
> #line 4358
49991,49992c50844,50845
< #line 5307 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_unlock_222(struct mutex *ldv_func_arg1 ) 
---
> #line 4360 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> void ldv_mutex_unlock_216(struct mutex *ldv_func_arg1 ) 
49997c50850
< #line 5312
---
> #line 4365
49999c50852
< #line 5314
---
> #line 4367
50001c50854
< #line 5315
---
> #line 4368
50005,50006c50858,50859
< #line 5317 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_lock_223(struct mutex *ldv_func_arg1 ) 
---
> #line 4370 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> void ldv_mutex_lock_217(struct mutex *ldv_func_arg1 ) 
50011c50864
< #line 5322
---
> #line 4375
50013c50866
< #line 5324
---
> #line 4377
50015c50868
< #line 5325
---
> #line 4378
50019,50020c50872,50873
< #line 5327 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_unlock_224(struct mutex *ldv_func_arg1 ) 
---
> #line 4380 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> void ldv_mutex_unlock_218(struct mutex *ldv_func_arg1 ) 
50025c50878
< #line 5332
---
> #line 4385
50027c50880
< #line 5334
---
> #line 4387
50029c50882
< #line 5335
---
> #line 4388
50033,50034c50886,50887
< #line 5337 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_lock_225(struct mutex *ldv_func_arg1 ) 
---
> #line 4390 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> void ldv_mutex_lock_219(struct mutex *ldv_func_arg1 ) 
50039c50892
< #line 5342
---
> #line 4395
50041c50894
< #line 5344
---
> #line 4397
50043c50896
< #line 5345
---
> #line 4398
50047,50048c50900,50901
< #line 5347 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_unlock_226(struct mutex *ldv_func_arg1 ) 
---
> #line 4400 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> void ldv_mutex_unlock_220(struct mutex *ldv_func_arg1 ) 
50053c50906
< #line 5352
---
> #line 4405
50055c50908
< #line 5354
---
> #line 4407
50057c50910
< #line 5355
---
> #line 4408
50061,50062c50914,50915
< #line 5357 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_lock_227(struct mutex *ldv_func_arg1 ) 
---
> #line 4410 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> void ldv_mutex_lock_221(struct mutex *ldv_func_arg1 ) 
50067c50920
< #line 5362
---
> #line 4415
50069c50922
< #line 5364
---
> #line 4417
50071c50924
< #line 5365
---
> #line 4418
50075,50076c50928,50929
< #line 5367 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
< void ldv_mutex_unlock_228(struct mutex *ldv_func_arg1 ) 
---
> #line 4420 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_main.c.prepared"
> void ldv_mutex_unlock_222(struct mutex *ldv_func_arg1 ) 
50081c50934
< #line 5372
---
> #line 4425
50083c50936
< #line 5374
---
> #line 4427
50085c50938
< #line 5375
---
> #line 4428
50090c50943
< int ldv_mutex_trylock_268(struct mutex *ldv_func_arg1 ) ;
---
> int ldv_mutex_trylock_256(struct mutex *ldv_func_arg1 ) ;
50092c50945
< void ldv_mutex_unlock_266(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_unlock_254(struct mutex *ldv_func_arg1 ) ;
50094c50947
< void ldv_mutex_unlock_269(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_unlock_257(struct mutex *ldv_func_arg1 ) ;
50096c50949
< void ldv_mutex_unlock_271(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_unlock_259(struct mutex *ldv_func_arg1 ) ;
50098c50951
< void ldv_mutex_unlock_273(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_unlock_261(struct mutex *ldv_func_arg1 ) ;
50100,50102c50953,50955
< void ldv_mutex_unlock_275(struct mutex *ldv_func_arg1 ) ;
< #line 10 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
< void ldv_mutex_lock_265(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_unlock_263(struct mutex *ldv_func_arg1 ) ;
> #line 10 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
> void ldv_mutex_lock_253(struct mutex *ldv_func_arg1 ) ;
50104c50957
< void ldv_mutex_lock_267(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_lock_255(struct mutex *ldv_func_arg1 ) ;
50106c50959
< void ldv_mutex_lock_270(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_lock_258(struct mutex *ldv_func_arg1 ) ;
50108c50961
< void ldv_mutex_lock_272(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_lock_260(struct mutex *ldv_func_arg1 ) ;
50110,50111c50963,50964
< void ldv_mutex_lock_274(struct mutex *ldv_func_arg1 ) ;
< #line 99 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
---
> void ldv_mutex_lock_262(struct mutex *ldv_func_arg1 ) ;
> #line 115 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
50113c50966
< #line 99
---
> #line 115
50120c50973
< #line 126 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
---
> #line 142 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
50122c50975
< #line 132 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
---
> #line 148 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
50124c50977
< #line 132
---
> #line 148
50128,50130c50981,50983
< #line 144 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
< static char const   *drbd_state_sw_errors[20U]  = 
< #line 144
---
> #line 160 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
> static char const   *drbd_state_sw_errors[21U]  = 
> #line 160
50135,50136c50988,50990
<         "Disk state is lower than outdated",      "Peer does not support protocol",      "In transient state, retry after next state change",      "Concurrent state changes detected and aborted"};
< #line 165 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
---
>         "Disk state is lower than outdated",      "Peer does not support protocol",      "In transient state, retry after next state change",      "Concurrent state changes detected and aborted", 
>         "Other vol primary on peer not allowed by config"};
> #line 182 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
50142c50996
< #line 168
---
> #line 185
50146c51000
< #line 171 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
---
> #line 188 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
50152c51006
< #line 173
---
> #line 190
50156c51010
< #line 176 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
---
> #line 193 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
50162c51016
< #line 178
---
> #line 195
50166c51020
< #line 181 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
---
> #line 198 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
50172,50173c51026,51027
< #line 183
<   return ((int )err >= -19 ? ((int )err < 0 ? drbd_state_sw_errors[- ((int )err)] : "TOO_LARGE") : "TOO_SMALL");
---
> #line 200
>   return ((int )err >= -20 ? ((int )err < 0 ? drbd_state_sw_errors[- ((int )err)] : "TOO_LARGE") : "TOO_SMALL");
50176,50177c51030,51031
< #line 188 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
< void ldv_mutex_lock_265(struct mutex *ldv_func_arg1 ) 
---
> #line 205 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
> void ldv_mutex_lock_253(struct mutex *ldv_func_arg1 ) 
50182c51036
< #line 193
---
> #line 210
50184c51038
< #line 195
---
> #line 212
50186c51040
< #line 196
---
> #line 213
50190,50191c51044,51045
< #line 198 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
< void ldv_mutex_unlock_266(struct mutex *ldv_func_arg1 ) 
---
> #line 215 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
> void ldv_mutex_unlock_254(struct mutex *ldv_func_arg1 ) 
50196c51050
< #line 203
---
> #line 220
50198c51052
< #line 205
---
> #line 222
50200c51054
< #line 206
---
> #line 223
50204,50205c51058,51059
< #line 208 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
< void ldv_mutex_lock_267(struct mutex *ldv_func_arg1 ) 
---
> #line 225 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
> void ldv_mutex_lock_255(struct mutex *ldv_func_arg1 ) 
50210c51064
< #line 213
---
> #line 230
50212c51066
< #line 215
---
> #line 232
50214c51068
< #line 216
---
> #line 233
50218,50219c51072,51073
< #line 218 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
< int ldv_mutex_trylock_268(struct mutex *ldv_func_arg1 ) 
---
> #line 235 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
> int ldv_mutex_trylock_256(struct mutex *ldv_func_arg1 ) 
50226c51080
< #line 223
---
> #line 240
50228c51082
< #line 223
---
> #line 240
50230c51084
< #line 225
---
> #line 242
50232c51086
< #line 225
---
> #line 242
50234c51088
< #line 227
---
> #line 244
50238,50239c51092,51093
< #line 230 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
< void ldv_mutex_unlock_269(struct mutex *ldv_func_arg1 ) 
---
> #line 247 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
> void ldv_mutex_unlock_257(struct mutex *ldv_func_arg1 ) 
50244c51098
< #line 235
---
> #line 252
50246c51100
< #line 237
---
> #line 254
50248c51102
< #line 238
---
> #line 255
50252,50253c51106,51107
< #line 240 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
< void ldv_mutex_lock_270(struct mutex *ldv_func_arg1 ) 
---
> #line 257 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
> void ldv_mutex_lock_258(struct mutex *ldv_func_arg1 ) 
50258c51112
< #line 245
---
> #line 262
50260c51114
< #line 247
---
> #line 264
50262c51116
< #line 248
---
> #line 265
50266,50267c51120,51121
< #line 250 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
< void ldv_mutex_unlock_271(struct mutex *ldv_func_arg1 ) 
---
> #line 267 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
> void ldv_mutex_unlock_259(struct mutex *ldv_func_arg1 ) 
50272c51126
< #line 255
---
> #line 272
50274c51128
< #line 257
---
> #line 274
50276c51130
< #line 258
---
> #line 275
50280,50281c51134,51135
< #line 260 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
< void ldv_mutex_lock_272(struct mutex *ldv_func_arg1 ) 
---
> #line 277 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
> void ldv_mutex_lock_260(struct mutex *ldv_func_arg1 ) 
50286c51140
< #line 265
---
> #line 282
50288c51142
< #line 267
---
> #line 284
50290c51144
< #line 268
---
> #line 285
50294,50295c51148,51149
< #line 270 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
< void ldv_mutex_unlock_273(struct mutex *ldv_func_arg1 ) 
---
> #line 287 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
> void ldv_mutex_unlock_261(struct mutex *ldv_func_arg1 ) 
50300c51154
< #line 275
---
> #line 292
50302c51156
< #line 277
---
> #line 294
50304c51158
< #line 278
---
> #line 295
50308,50309c51162,51163
< #line 280 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
< void ldv_mutex_lock_274(struct mutex *ldv_func_arg1 ) 
---
> #line 297 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
> void ldv_mutex_lock_262(struct mutex *ldv_func_arg1 ) 
50314c51168
< #line 285
---
> #line 302
50316c51170
< #line 287
---
> #line 304
50318c51172
< #line 288
---
> #line 305
50322,50323c51176,51177
< #line 290 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
< void ldv_mutex_unlock_275(struct mutex *ldv_func_arg1 ) 
---
> #line 307 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_strings.c.prepared"
> void ldv_mutex_unlock_263(struct mutex *ldv_func_arg1 ) 
50328c51182
< #line 295
---
> #line 312
50330c51184
< #line 297
---
> #line 314
50332,50440c51186
< #line 298
<   return;
< }
< }
< #line 47 "include/uapi/linux/byteorder/little_endian.h"
< __inline static __u64 __le64_to_cpup(__le64 const   *p ) 
< { 
< 
< 
<   {
< #line 49
<   return ((__u64 )*p);
< }
< }
< #line 55 "include/uapi/linux/byteorder/little_endian.h"
< __inline static __u32 __le32_to_cpup(__le32 const   *p ) 
< { 
< 
< 
<   {
< #line 57
<   return ((__u32 )*p);
< }
< }
< #line 63 "include/uapi/linux/byteorder/little_endian.h"
< __inline static __u16 __le16_to_cpup(__le16 const   *p ) 
< { 
< 
< 
<   {
< #line 65
<   return ((__u16 )*p);
< }
< }
< #line 326 "include/linux/kernel.h"
< extern int snprintf(char * , size_t  , char const   *  , ...) ;
< #line 93 "include/linux/bitmap.h"
< extern int __bitmap_equal(unsigned long const   * , unsigned long const   * , int  ) ;
< #line 125
< extern int __bitmap_parse(char const   * , unsigned int  , int  , unsigned long * ,
<                           int  ) ;
< #line 179 "include/linux/bitmap.h"
< __inline static void bitmap_copy(unsigned long *dst , unsigned long const   *src ,
<                                  int nbits ) 
< { 
<   int len ;
<   size_t __len ;
<   void *__ret ;
< 
<   {
< #line 185
<   len = (int )((unsigned int )(((unsigned long )nbits + 63UL) / 64UL) * 8U);
< #line 186
<   __len = (size_t )len;
< #line 186
<   __ret = __builtin_memcpy((void *)dst, (void const   *)src, __len);
< #line 189
<   return;
< }
< }
< #line 233 "include/linux/bitmap.h"
< __inline static int bitmap_equal(unsigned long const   *src1 , unsigned long const   *src2 ,
<                                  int nbits ) 
< { 
<   int tmp ;
< 
<   {
< #line 239
<   tmp = __bitmap_equal(src1, src2, nbits);
< #line 239
<   return (tmp);
< }
< }
< #line 301 "include/linux/bitmap.h"
< __inline static int bitmap_parse(char const   *buf , unsigned int buflen , unsigned long *maskp ,
<                                  int nmaskbits ) 
< { 
<   int tmp ;
< 
<   {
< #line 304
<   tmp = __bitmap_parse(buf, buflen, 0, maskp, nmaskbits);
< #line 304
<   return (tmp);
< }
< }
< #line 404 "include/linux/cpumask.h"
< __inline static bool cpumask_equal(struct cpumask  const  *src1p , struct cpumask  const  *src2p ) 
< { 
<   int tmp ;
< 
<   {
< #line 407
<   tmp = bitmap_equal((unsigned long const   *)(& src1p->bits), (unsigned long const   *)(& src2p->bits),
<                      nr_cpu_ids);
< #line 407
<   return (tmp != 0);
< }
< }
< #line 495 "include/linux/cpumask.h"
< __inline static void cpumask_copy(struct cpumask *dstp , struct cpumask  const  *srcp ) 
< { 
< 
< 
<   {
< #line 498
<   bitmap_copy((unsigned long *)(& dstp->bits), (unsigned long const   *)(& srcp->bits),
<               nr_cpu_ids);
< #line 499
---
> #line 315
50443a51190,51191
> #line 53 "include/linux/string.h"
> extern char *strchr(char const   * , int  ) ;
50445c51193
< int ldv_mutex_trylock_290(struct mutex *ldv_func_arg1 ) ;
---
> int ldv_mutex_trylock_278(struct mutex *ldv_func_arg1 ) ;
50447c51195
< void ldv_mutex_unlock_288(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_unlock_276(struct mutex *ldv_func_arg1 ) ;
50449c51197
< void ldv_mutex_unlock_291(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_unlock_279(struct mutex *ldv_func_arg1 ) ;
50451c51199
< void ldv_mutex_unlock_293(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_unlock_281(struct mutex *ldv_func_arg1 ) ;
50453c51201
< void ldv_mutex_unlock_295(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_unlock_283(struct mutex *ldv_func_arg1 ) ;
50455c51203
< void ldv_mutex_unlock_297(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_unlock_285(struct mutex *ldv_func_arg1 ) ;
50457c51205
< void ldv_mutex_unlock_299(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_unlock_288(struct mutex *ldv_func_arg1 ) ;
50459c51207
< void ldv_mutex_unlock_300(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_unlock_289(struct mutex *ldv_func_arg1 ) ;
50461c51209
< void ldv_mutex_unlock_302(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_unlock_291(struct mutex *ldv_func_arg1 ) ;
50463,50465c51211,51229
< void ldv_mutex_unlock_304(struct mutex *ldv_func_arg1 ) ;
< #line 10 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void ldv_mutex_lock_287(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_unlock_292(struct mutex *ldv_func_arg1 ) ;
> #line 212
> void ldv_mutex_unlock_295(struct mutex *ldv_func_arg1 ) ;
> #line 216
> void ldv_mutex_unlock_296(struct mutex *ldv_func_arg1 ) ;
> #line 220
> void ldv_mutex_unlock_297(struct mutex *ldv_func_arg1 ) ;
> #line 224
> void ldv_mutex_unlock_298(struct mutex *ldv_func_arg1 ) ;
> #line 228
> void ldv_mutex_unlock_300(struct mutex *ldv_func_arg1 ) ;
> #line 232
> void ldv_mutex_unlock_301(struct mutex *ldv_func_arg1 ) ;
> #line 236
> void ldv_mutex_unlock_303(struct mutex *ldv_func_arg1 ) ;
> #line 240
> void ldv_mutex_unlock_305(struct mutex *ldv_func_arg1 ) ;
> #line 10 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> void ldv_mutex_lock_275(struct mutex *ldv_func_arg1 ) ;
50467c51231
< void ldv_mutex_lock_289(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_lock_277(struct mutex *ldv_func_arg1 ) ;
50469c51233
< void ldv_mutex_lock_292(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_lock_280(struct mutex *ldv_func_arg1 ) ;
50471c51235
< void ldv_mutex_lock_294(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_lock_282(struct mutex *ldv_func_arg1 ) ;
50473c51237
< void ldv_mutex_lock_296(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_lock_284(struct mutex *ldv_func_arg1 ) ;
50475c51239
< void ldv_mutex_lock_298(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_lock_286(struct mutex *ldv_func_arg1 ) ;
50477c51241
< void ldv_mutex_lock_301(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_lock_287(struct mutex *ldv_func_arg1 ) ;
50479c51243,51253
< void ldv_mutex_lock_303(struct mutex *ldv_func_arg1 ) ;
---
> void ldv_mutex_lock_290(struct mutex *ldv_func_arg1 ) ;
> #line 42
> void ldv_mutex_lock_293(struct mutex *ldv_func_arg1 ) ;
> #line 46
> void ldv_mutex_lock_294(struct mutex *ldv_func_arg1 ) ;
> #line 50
> void ldv_mutex_lock_299(struct mutex *ldv_func_arg1 ) ;
> #line 54
> void ldv_mutex_lock_302(struct mutex *ldv_func_arg1 ) ;
> #line 58
> void ldv_mutex_lock_304(struct mutex *ldv_func_arg1 ) ;
50481c51255
< __inline static struct thread_info *current_thread_info___3(void) 
---
> __inline static struct thread_info *current_thread_info___6(void) 
50493c51267
<   goto ldv_6310;
---
>   goto ldv_6398;
50498c51272
<   goto ldv_6310;
---
>   goto ldv_6398;
50503c51277
<   goto ldv_6310;
---
>   goto ldv_6398;
50508c51282
<   goto ldv_6310;
---
>   goto ldv_6398;
50513c51287
<   ldv_6310: 
---
>   ldv_6398: 
50519a51294,51395
> #line 163 "include/linux/rcupdate.h"
> __inline static void __rcu_read_lock___6(void) 
> { 
>   struct thread_info *tmp ;
> 
>   {
> #line 165
>   tmp = current_thread_info___6();
> #line 165
>   tmp->preempt_count = tmp->preempt_count + 1;
> #line 165
>   __asm__  volatile   ("": : : "memory");
> #line 166
>   return;
> }
> }
> #line 168 "include/linux/rcupdate.h"
> __inline static void __rcu_read_unlock___6(void) 
> { 
>   struct thread_info *tmp ;
> 
>   {
> #line 170
>   __asm__  volatile   ("": : : "memory");
> #line 170
>   tmp = current_thread_info___6();
> #line 170
>   tmp->preempt_count = tmp->preempt_count + -1;
> #line 170
>   __asm__  volatile   ("": : : "memory");
> #line 171
>   return;
> }
> }
> #line 732 "include/linux/rcupdate.h"
> __inline static void rcu_read_lock___6(void) 
> { 
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
> 
>   {
> #line 734
>   __rcu_read_lock___6();
> #line 736
>   rcu_lock_acquire(& rcu_lock_map);
> #line 737
>   tmp = debug_lockdep_rcu_enabled();
> #line 737
>   if (tmp != 0 && ! __warned) {
> #line 737
>     tmp___0 = rcu_is_cpu_idle();
> #line 737
>     if (tmp___0 != 0) {
> #line 737
>       __warned = 1;
> #line 737
>       lockdep_rcu_suspicious("include/linux/rcupdate.h", 738, "rcu_read_lock() used illegally while idle");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 740
>   return;
> }
> }
> #line 756 "include/linux/rcupdate.h"
> __inline static void rcu_read_unlock___6(void) 
> { 
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
> 
>   {
> #line 758
>   tmp = debug_lockdep_rcu_enabled();
> #line 758
>   if (tmp != 0 && ! __warned) {
> #line 758
>     tmp___0 = rcu_is_cpu_idle();
> #line 758
>     if (tmp___0 != 0) {
> #line 758
>       __warned = 1;
> #line 758
>       lockdep_rcu_suspicious("include/linux/rcupdate.h", 759, "rcu_read_unlock() used illegally while idle");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 760
>   rcu_lock_release(& rcu_lock_map);
> #line 762
>   __rcu_read_unlock___6();
> #line 763
>   return;
> }
> }
50537a51414,51427
> #line 114 "include/linux/rculist.h"
> __inline static void list_del_rcu(struct list_head *entry ) 
> { 
> 
> 
>   {
> #line 116
>   __list_del_entry(entry);
> #line 117
>   entry->prev = 0xdead000000200200UL;
> #line 118
>   return;
> }
> }
50542,50543c51432,51437
< #line 16 "include/linux/uaccess.h"
< __inline static void pagefault_disable___0(void) 
---
> #line 568 "include/linux/skbuff.h"
> extern void kfree_skb(struct sk_buff * ) ;
> #line 577
> extern struct sk_buff *__alloc_skb(unsigned int  , gfp_t  , int  , int  ) ;
> #line 580 "include/linux/skbuff.h"
> __inline static struct sk_buff *alloc_skb(unsigned int size , gfp_t priority ) 
50545c51439
<   struct thread_info *tmp ;
---
>   struct sk_buff *tmp ;
50548,50554c51442,51608
< #line 18
<   tmp = current_thread_info___3();
< #line 18
<   tmp->preempt_count = tmp->preempt_count + 1;
< #line 23
<   __asm__  volatile   ("": : : "memory");
< #line 24
---
> #line 583
>   tmp = __alloc_skb(size, priority, 0, -1);
> #line 583
>   return (tmp);
> }
> }
> #line 1295 "include/linux/skbuff.h"
> __inline static unsigned char *skb_tail_pointer(struct sk_buff  const  *skb ) 
> { 
> 
> 
>   {
> #line 1297
>   return ((unsigned char *)skb->head + (unsigned long )skb->tail);
> }
> }
> #line 1644
> extern void skb_trim(struct sk_buff * , unsigned int  ) ;
> #line 7 "include/linux/seq_file_net.h"
> extern struct net init_net ;
> #line 238 "include/net/net_namespace.h"
> __inline static struct net *read_pnet(struct net * const  *pnet ) 
> { 
> 
> 
>   {
> #line 240
>   return ((struct net *)*pnet);
> }
> }
> #line 13 "include/linux/netlink.h"
> __inline static struct nlmsghdr *nlmsg_hdr(struct sk_buff  const  *skb ) 
> { 
> 
> 
>   {
> #line 15
>   return ((struct nlmsghdr *)skb->data);
> }
> }
> #line 60
> extern int netlink_unicast(struct sock * , struct sk_buff * , __u32  , int  ) ;
> #line 61
> extern int netlink_broadcast(struct sock * , struct sk_buff * , __u32  , __u32  ,
>                              gfp_t  ) ;
> #line 242 "include/net/netlink.h"
> extern struct nlattr *nla_find(struct nlattr  const  * , int  , int  ) ;
> #line 244
> extern size_t nla_strlcpy(char * , struct nlattr  const  * , size_t  ) ;
> #line 246
> extern int nla_memcpy(void * , struct nlattr  const  * , int  ) ;
> #line 260
> extern int nla_put(struct sk_buff * , int  , int  , void const   * ) ;
> #line 262
> extern int nla_put_nohdr(struct sk_buff * , int  , void const   * ) ;
> #line 275 "include/net/netlink.h"
> __inline static int nlmsg_msg_size(int payload ) 
> { 
> 
> 
>   {
> #line 277
>   return (payload + 16);
> }
> }
> #line 284 "include/net/netlink.h"
> __inline static int nlmsg_total_size(int payload ) 
> { 
>   int tmp ;
> 
>   {
> #line 286
>   tmp = nlmsg_msg_size(payload);
> #line 286
>   return ((int )((unsigned int )tmp + 3U) & -4);
> }
> }
> #line 302 "include/net/netlink.h"
> __inline static void *nlmsg_data(struct nlmsghdr  const  *nlh ) 
> { 
> 
> 
>   {
> #line 304
>   return ((void *)nlh + 16U);
> }
> }
> #line 311 "include/net/netlink.h"
> __inline static int nlmsg_len(struct nlmsghdr  const  *nlh ) 
> { 
> 
> 
>   {
> #line 313
>   return ((int )((unsigned int )nlh->nlmsg_len - 16U));
> }
> }
> #line 321 "include/net/netlink.h"
> __inline static struct nlattr *nlmsg_attrdata(struct nlmsghdr  const  *nlh , int hdrlen ) 
> { 
>   unsigned char *data ;
>   void *tmp ;
> 
>   {
> #line 324
>   tmp = nlmsg_data(nlh);
> #line 324
>   data = (unsigned char *)tmp;
> #line 325
>   return ((struct nlattr *)(data + ((unsigned long )((unsigned int )hdrlen + 3U) & 4294967292UL)));
> }
> }
> #line 333 "include/net/netlink.h"
> __inline static int nlmsg_attrlen(struct nlmsghdr  const  *nlh , int hdrlen ) 
> { 
>   int tmp ;
> 
>   {
> #line 335
>   tmp = nlmsg_len(nlh);
> #line 335
>   return ((int )((unsigned int )tmp - (((unsigned int )hdrlen + 3U) & 4294967292U)));
> }
> }
> #line 493 "include/net/netlink.h"
> __inline static struct sk_buff *nlmsg_new(size_t payload , gfp_t flags ) 
> { 
>   int tmp ;
>   struct sk_buff *tmp___0 ;
> 
>   {
> #line 495
>   tmp = nlmsg_total_size((int )payload);
> #line 495
>   tmp___0 = alloc_skb((unsigned int )tmp, flags);
> #line 495
>   return (tmp___0);
> }
> }
> #line 509 "include/net/netlink.h"
> __inline static int nlmsg_end(struct sk_buff *skb , struct nlmsghdr *nlh ) 
> { 
>   unsigned char *tmp ;
> 
>   {
> #line 511
>   tmp = skb_tail_pointer((struct sk_buff  const  *)skb);
> #line 511
>   nlh->nlmsg_len = (__u32 )((long )tmp) - (__u32 )((long )nlh);
> #line 513
>   return ((int )skb->len);
> }
> }
> #line 534 "include/net/netlink.h"
> __inline static void nlmsg_trim(struct sk_buff *skb , void const   *mark ) 
> { 
> 
> 
>   {
> #line 536
>   if ((unsigned long )mark != (unsigned long )((void const   *)0)) {
> #line 537
>     skb_trim(skb, (unsigned int )((long )mark) - (unsigned int )((long )skb->data));
>   } else {
> 
>   }
> #line 538
50558,50559c51612,51613
< #line 26 "include/linux/uaccess.h"
< __inline static void pagefault_enable___0(void) 
---
> #line 548 "include/net/netlink.h"
> __inline static void nlmsg_cancel(struct sk_buff *skb , struct nlmsghdr *nlh ) 
50561c51615
<   struct thread_info *tmp ;
---
> 
50564,50572c51618,51620
< #line 32
<   __asm__  volatile   ("": : : "memory");
< #line 33
<   tmp = current_thread_info___3();
< #line 33
<   tmp->preempt_count = tmp->preempt_count + -1;
< #line 37
<   __asm__  volatile   ("": : : "memory");
< #line 38
---
> #line 550
>   nlmsg_trim(skb, (void const   *)nlh);
> #line 551
50576,50586c51624,51749
< #line 71 "include/linux/connector.h"
< extern int cn_add_callback(struct cb_id * , char const   * , void (*)(struct cn_msg * ,
<                                                                       struct netlink_skb_parms * ) ) ;
< #line 73
< extern void cn_del_callback(struct cb_id * ) ;
< #line 74
< extern int cn_netlink_send(struct cn_msg * , u32  , gfp_t  ) ;
< #line 409 "include/linux/genhd.h"
< extern void add_disk(struct gendisk * ) ;
< #line 66 "include/linux/highmem.h"
< __inline static void *kmap_atomic___0(struct page *page ) 
---
> #line 557 "include/net/netlink.h"
> __inline static void nlmsg_free(struct sk_buff *skb ) 
> { 
> 
> 
>   {
> #line 559
>   kfree_skb(skb);
> #line 560
>   return;
> }
> }
> #line 570 "include/net/netlink.h"
> __inline static int nlmsg_multicast(struct sock *sk , struct sk_buff *skb , u32 portid ,
>                                     unsigned int group , gfp_t flags ) 
> { 
>   int err ;
> 
>   {
> #line 575
>   ((struct netlink_skb_parms *)(& skb->cb))->dst_group = group;
> #line 577
>   err = netlink_broadcast(sk, skb, portid, group, flags);
> #line 578
>   if (err > 0) {
> #line 579
>     err = 0;
>   } else {
> 
>   }
> #line 581
>   return (err);
> }
> }
> #line 590 "include/net/netlink.h"
> __inline static int nlmsg_unicast(struct sock *sk , struct sk_buff *skb , u32 portid ) 
> { 
>   int err ;
> 
>   {
> #line 594
>   err = netlink_unicast(sk, skb, portid, 64);
> #line 595
>   if (err > 0) {
> #line 596
>     err = 0;
>   } else {
> 
>   }
> #line 598
>   return (err);
> }
> }
> #line 681 "include/net/netlink.h"
> __inline static void *nla_data(struct nlattr  const  *nla ) 
> { 
> 
> 
>   {
> #line 683
>   return ((void *)nla + 4U);
> }
> }
> #line 690 "include/net/netlink.h"
> __inline static int nla_len(struct nlattr  const  *nla ) 
> { 
> 
> 
>   {
> #line 692
>   return ((int )nla->nla_len + -4);
> }
> }
> #line 758 "include/net/netlink.h"
> __inline static int nla_put_u8(struct sk_buff *skb , int attrtype , u8 value ) 
> { 
>   int tmp ;
> 
>   {
> #line 760
>   tmp = nla_put(skb, attrtype, 1, (void const   *)(& value));
> #line 760
>   return (tmp);
> }
> }
> #line 813 "include/net/netlink.h"
> __inline static int nla_put_u32(struct sk_buff *skb , int attrtype , u32 value ) 
> { 
>   int tmp ;
> 
>   {
> #line 815
>   tmp = nla_put(skb, attrtype, 4, (void const   *)(& value));
> #line 815
>   return (tmp);
> }
> }
> #line 857 "include/net/netlink.h"
> __inline static int nla_put_u64(struct sk_buff *skb , int attrtype , u64 value ) 
> { 
>   int tmp ;
> 
>   {
> #line 859
>   tmp = nla_put(skb, attrtype, 8, (void const   *)(& value));
> #line 859
>   return (tmp);
> }
> }
> #line 945 "include/net/netlink.h"
> __inline static int nla_put_string(struct sk_buff *skb , int attrtype , char const   *str ) 
> { 
>   size_t tmp ;
>   int tmp___0 ;
> 
>   {
> #line 948
>   tmp = strlen(str);
> #line 948
>   tmp___0 = nla_put(skb, attrtype, (int )((unsigned int )tmp + 1U), (void const   *)str);
> #line 948
>   return (tmp___0);
> }
> }
> #line 978 "include/net/netlink.h"
> __inline static u32 nla_get_u32(struct nlattr  const  *nla ) 
50591,50595c51754,51780
< #line 68
<   pagefault_disable___0();
< #line 69
<   tmp = lowmem_page_address((struct page  const  *)page);
< #line 69
---
> #line 980
>   tmp = nla_data(nla);
> #line 980
>   return (*((u32 *)tmp));
> }
> }
> #line 1023 "include/net/netlink.h"
> __inline static u8 nla_get_u8(struct nlattr  const  *nla ) 
> { 
>   void *tmp ;
> 
>   {
> #line 1025
>   tmp = nla_data(nla);
> #line 1025
>   return (*((u8 *)tmp));
> }
> }
> #line 1032 "include/net/netlink.h"
> __inline static u64 nla_get_u64(struct nlattr  const  *nla ) 
> { 
>   u64 tmp ;
> 
>   {
> #line 1036
>   nla_memcpy((void *)(& tmp), nla, 8);
> #line 1038
50599,50600c51784,51785
< #line 73 "include/linux/highmem.h"
< __inline static void __kunmap_atomic___0(void *addr ) 
---
> #line 1123 "include/net/netlink.h"
> __inline static struct nlattr *nla_nest_start(struct sk_buff *skb , int attrtype ) 
50601a51787,51802
>   struct nlattr *start ;
>   unsigned char *tmp ;
>   int tmp___0 ;
> 
>   {
> #line 1125
>   tmp = skb_tail_pointer((struct sk_buff  const  *)skb);
> #line 1125
>   start = (struct nlattr *)tmp;
> #line 1127
>   tmp___0 = nla_put(skb, attrtype, 0, 0);
> #line 1127
>   if (tmp___0 < 0) {
> #line 1128
>     return (0);
>   } else {
50602a51804,51812
>   }
> #line 1130
>   return (start);
> }
> }
> #line 1143 "include/net/netlink.h"
> __inline static int nla_nest_end(struct sk_buff *skb , struct nlattr *start ) 
> { 
>   unsigned char *tmp ;
50605,50607c51815,51831
< #line 75
<   pagefault_enable___0();
< #line 76
---
> #line 1145
>   tmp = skb_tail_pointer((struct sk_buff  const  *)skb);
> #line 1145
>   start->nla_len = (int )((__u16 )((long )tmp)) - (int )((__u16 )((long )start));
> #line 1146
>   return ((int )skb->len);
> }
> }
> #line 1157 "include/net/netlink.h"
> __inline static void nla_nest_cancel(struct sk_buff *skb , struct nlattr *start ) 
> { 
> 
> 
>   {
> #line 1159
>   nlmsg_trim(skb, (void const   *)start);
> #line 1160
50619c51843
< #line 241 "include/linux/lru_cache.h"
---
> #line 251 "include/linux/lru_cache.h"
50621,50624c51845,51913
<                                    size_t  , size_t  ) ;
< #line 1596 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
< enum drbd_disk_state drbd_try_outdate_peer(struct drbd_conf *mdev ) ;
< #line 2011 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
---
>                                    unsigned int  , size_t  , size_t  ) ;
> #line 293
> extern int lc_try_lock(struct lru_cache * ) ;
> #line 135 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_state.h"
> bool conn_all_vols_unconf(struct drbd_tconn *tconn ) ;
> #line 147 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_state.h"
> __inline static int drbd_request_state(struct drbd_conf *mdev , union drbd_state mask ,
>                                        union drbd_state val ) 
> { 
>   enum drbd_state_rv tmp ;
> 
>   {
> #line 151
>   tmp = _drbd_request_state(mdev, mask, val, 14);
> #line 151
>   return ((int )tmp);
> }
> }
> #line 155
> enum drbd_role conn_highest_peer(struct drbd_tconn *tconn ) ;
> #line 156
> enum drbd_disk_state conn_highest_disk(struct drbd_tconn *tconn ) ;
> #line 1441 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> bool conn_try_outdate_peer(struct drbd_tconn *tconn ) ;
> #line 1770 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static sector_t drbd_md_first_sector___0(struct drbd_backing_dev *bdev ) 
> { 
>   int meta_dev_idx ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
>   sector_t tmp___1 ;
> 
>   {
> #line 1774
>   rcu_read_lock___6();
> #line 1775
>   _________p1 = *((struct disk_conf * volatile  *)(& bdev->disk_conf));
> #line 1775
>   tmp = debug_lockdep_rcu_enabled();
> #line 1775
>   if (tmp != 0 && ! __warned) {
> #line 1775
>     tmp___0 = rcu_read_lock_held();
> #line 1775
>     if (tmp___0 == 0 && 1) {
> #line 1775
>       __warned = 1;
> #line 1775
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h",
>                              1775, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1775
>   meta_dev_idx = _________p1->meta_dev_idx;
> #line 1776
>   rcu_read_unlock___6();
> #line 1778
>   tmp___1 = _drbd_md_first_sector(meta_dev_idx, bdev);
> #line 1778
>   return (tmp___1);
> }
> }
> #line 1818 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
50627a51917,51921
>   int meta_dev_idx ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
50630,50631c51924,51925
<   sector_t tmp___0 ;
<   sector_t tmp___1 ;
---
>   sector_t tmp___2 ;
>   sector_t tmp___3 ;
50634c51928
<   sector_t tmp___2 ;
---
>   sector_t tmp___4 ;
50639c51933
<   sector_t tmp___3 ;
---
>   sector_t tmp___5 ;
50642,50643c51936,51964
< #line 2014
<   switch (bdev->dc.meta_dev_idx) {
---
> #line 1823
>   rcu_read_lock___6();
> #line 1824
>   _________p1 = *((struct disk_conf * volatile  *)(& bdev->disk_conf));
> #line 1824
>   tmp = debug_lockdep_rcu_enabled();
> #line 1824
>   if (tmp != 0 && ! __warned) {
> #line 1824
>     tmp___0 = rcu_read_lock_held();
> #line 1824
>     if (tmp___0 == 0 && 1) {
> #line 1824
>       __warned = 1;
> #line 1824
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h",
>                              1824, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1824
>   meta_dev_idx = _________p1->meta_dev_idx;
> #line 1825
>   rcu_read_unlock___6();
> #line 1827
>   switch (meta_dev_idx) {
50646,50650c51967,51971
< #line 2018
<   tmp___1 = drbd_get_capacity(bdev->backing_bdev);
< #line 2018
<   if (tmp___1 != 0UL) {
< #line 2018
---
> #line 1831
>   tmp___3 = drbd_get_capacity(bdev->backing_bdev);
> #line 1831
>   if (tmp___3 != 0UL) {
> #line 1831
50652,50656c51973,51977
< #line 2018
<     tmp___0 = drbd_md_first_sector(bdev);
< #line 2018
<     __min2 = tmp___0;
< #line 2018
---
> #line 1831
>     tmp___2 = _drbd_md_first_sector(meta_dev_idx, bdev);
> #line 1831
>     __min2 = tmp___2;
> #line 1831
50659c51980
< #line 2018
---
> #line 1831
50662,50663c51983,51984
< #line 2021
<   goto ldv_51163;
---
> #line 1834
>   goto ldv_51783;
50665c51986
< #line 2023
---
> #line 1836
50667,50671c51988,51992
< #line 2023
<   tmp___2 = drbd_get_capacity(bdev->backing_bdev);
< #line 2023
<   __min2___0 = tmp___2;
< #line 2023
---
> #line 1836
>   tmp___4 = drbd_get_capacity(bdev->backing_bdev);
> #line 1836
>   __min2___0 = tmp___4;
> #line 1836
50673c51994
< #line 2026
---
> #line 1839
50675c51996
< #line 2026
---
> #line 1839
50677c51998
< #line 2026
---
> #line 1839
50679,50680c52000,52001
< #line 2029
<   goto ldv_51163;
---
> #line 1842
>   goto ldv_51783;
50682c52003
< #line 2031
---
> #line 1844
50684,50688c52005,52009
< #line 2031
<   tmp___3 = drbd_get_capacity(bdev->backing_bdev);
< #line 2031
<   __min2___2 = tmp___3;
< #line 2031
---
> #line 1844
>   tmp___5 = drbd_get_capacity(bdev->backing_bdev);
> #line 1844
>   __min2___2 = tmp___5;
> #line 1844
50691,50692c52012,52013
<   ldv_51163: ;
< #line 2034
---
>   ldv_51783: ;
> #line 1847
50696,50697c52017,52018
< #line 7 "include/linux/unaligned/access_ok.h"
< __inline static u16 get_unaligned_le16(void const   *p ) 
---
> #line 1855 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static sector_t drbd_md_ss_____0(struct drbd_conf *mdev , struct drbd_backing_dev *bdev ) 
50699c52020,52094
<   __u16 tmp ;
---
>   int meta_dev_idx ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
>   int tmp___1 ;
>   sector_t tmp___2 ;
> 
>   {
> #line 1860
>   rcu_read_lock___6();
> #line 1861
>   _________p1 = *((struct disk_conf * volatile  *)(& bdev->disk_conf));
> #line 1861
>   tmp = debug_lockdep_rcu_enabled();
> #line 1861
>   if (tmp != 0 && ! __warned) {
> #line 1861
>     tmp___0 = rcu_read_lock_held();
> #line 1861
>     if (tmp___0 == 0 && 1) {
> #line 1861
>       __warned = 1;
> #line 1861
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h",
>                              1861, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1861
>   meta_dev_idx = _________p1->meta_dev_idx;
> #line 1862
>   rcu_read_unlock___6();
> #line 1864
>   switch (meta_dev_idx) {
>   default: ;
> #line 1866
>   return ((unsigned long )meta_dev_idx * 262144UL);
>   case -1: ;
>   case -3: ;
> #line 1872
>   if ((unsigned long )bdev->backing_bdev == (unsigned long )((struct block_device *)0)) {
> #line 1873
>     tmp___1 = ___ratelimit(& drbd_ratelimit_state, "drbd_md_ss__");
> #line 1873
>     if (tmp___1 != 0) {
> #line 1874
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "bdev->backing_bdev==NULL\n");
> #line 1875
>       dump_stack();
>     } else {
> 
>     }
> #line 1877
>     return (0UL);
>   } else {
> 
>   }
> #line 1879
>   tmp___2 = drbd_get_capacity(bdev->backing_bdev);
> #line 1879
>   return ((sector_t )(((unsigned long long )tmp___2 & 0xfffffffffffffff8ULL) - 8ULL));
>   case -2: ;
> #line 1882
>   return (0UL);
>   }
> }
> }
> #line 89 "include/net/genetlink.h"
> __inline static struct net *genl_info_net(struct genl_info *info ) 
> { 
>   struct net *tmp ;
50702,50704c52097,52099
< #line 9
<   tmp = __le16_to_cpup((__le16 const   *)p);
< #line 9
---
> #line 91
>   tmp = read_pnet((struct net * const  *)(& info->_net));
> #line 91
50708,50709c52103,52115
< #line 12 "include/linux/unaligned/access_ok.h"
< __inline static u32 get_unaligned_le32(void const   *p ) 
---
> #line 124
> extern int genl_register_family_with_ops(struct genl_family * , struct genl_ops * ,
>                                          size_t  ) ;
> #line 126
> extern int genl_unregister_family(struct genl_family * ) ;
> #line 129
> extern int genl_register_mc_group(struct genl_family * , struct genl_multicast_group * ) ;
> #line 136
> extern void *genlmsg_put(struct sk_buff * , u32  , u32  , struct genl_family * , int  ,
>                          u8  ) ;
> #line 181 "include/net/genetlink.h"
> __inline static void *genlmsg_put_reply(struct sk_buff *skb , struct genl_info *info ,
>                                         struct genl_family *family , int flags , u8 cmd ) 
50711c52117
<   __u32 tmp ;
---
>   void *tmp ;
50714,50716c52120,52122
< #line 14
<   tmp = __le32_to_cpup((__le32 const   *)p);
< #line 14
---
> #line 186
>   tmp = genlmsg_put(skb, info->snd_portid, info->snd_seq, family, flags, (int )cmd);
> #line 186
50720,50721c52126,52127
< #line 17 "include/linux/unaligned/access_ok.h"
< __inline static u64 get_unaligned_le64(void const   *p ) 
---
> #line 195 "include/net/genetlink.h"
> __inline static int genlmsg_end(struct sk_buff *skb , void *hdr ) 
50723c52129
<   __u64 tmp ;
---
>   int tmp ;
50726,50728c52132,52134
< #line 19
<   tmp = __le64_to_cpup((__le64 const   *)p);
< #line 19
---
> #line 197
>   tmp = nlmsg_end(skb, (struct nlmsghdr *)hdr + 0xffffffffffffffecUL);
> #line 197
50732,50733c52138,52139
< #line 37 "include/linux/unaligned/access_ok.h"
< __inline static void put_unaligned_le16(u16 val , void *p ) 
---
> #line 205 "include/net/genetlink.h"
> __inline static void genlmsg_cancel(struct sk_buff *skb , void *hdr ) 
50738,50740c52144,52151
< #line 39
<   *((__le16 *)p) = val;
< #line 40
---
> #line 207
>   if ((unsigned long )hdr != (unsigned long )((void *)0)) {
> #line 208
>     nlmsg_cancel(skb, (struct nlmsghdr *)hdr + 0xffffffffffffffecUL);
>   } else {
> 
>   }
> #line 209
50744,50745c52155,52157
< #line 42 "include/linux/unaligned/access_ok.h"
< __inline static void put_unaligned_le32(u32 val , void *p ) 
---
> #line 219 "include/net/genetlink.h"
> __inline static int genlmsg_multicast_netns(struct net *net , struct sk_buff *skb ,
>                                             u32 portid , unsigned int group , gfp_t flags ) 
50746a52159
>   int tmp ;
50747a52161,52172
>   {
> #line 222
>   tmp = nlmsg_multicast(net->genl_sock, skb, portid, group, flags);
> #line 222
>   return (tmp);
> }
> }
> #line 232 "include/net/genetlink.h"
> __inline static int genlmsg_multicast(struct sk_buff *skb , u32 portid , unsigned int group ,
>                                       gfp_t flags ) 
> { 
>   int tmp ;
50750,50753c52175,52178
< #line 44
<   *((__le32 *)p) = val;
< #line 45
<   return;
---
> #line 235
>   tmp = genlmsg_multicast_netns(& init_net, skb, portid, group, flags);
> #line 235
>   return (tmp);
50756,50757c52181,52182
< #line 47 "include/linux/unaligned/access_ok.h"
< __inline static void put_unaligned_le64(u64 val , void *p ) 
---
> #line 255 "include/net/genetlink.h"
> __inline static int genlmsg_unicast(struct net *net , struct sk_buff *skb , u32 portid ) 
50758a52184
>   int tmp ;
50759a52186,52197
>   {
> #line 257
>   tmp = nlmsg_unicast(net->genl_sock, skb, portid);
> #line 257
>   return (tmp);
> }
> }
> #line 265 "include/net/genetlink.h"
> __inline static int genlmsg_reply(struct sk_buff *skb , struct genl_info *info ) 
> { 
>   struct net *tmp ;
>   int tmp___0 ;
50762,50765c52200,52205
< #line 49
<   *((__le64 *)p) = val;
< #line 50
<   return;
---
> #line 267
>   tmp = genl_info_net(info);
> #line 267
>   tmp___0 = genlmsg_unicast(tmp, skb, info->snd_portid);
> #line 267
>   return (tmp___0);
50768,50883c52208,52211
< #line 8 "include/linux/unaligned/generic.h"
< extern void __bad_unaligned_access_size(void) ;
< #line 76 "include/linux/drbd_tag_magic.h"
< static struct tag  const  tag_descriptions[91U]  = 
< #line 76 "include/linux/drbd_tag_magic.h"
<   {      {0, 0, 0}, 
<         {"primary_force", 32768, 4}, 
<         {"disk_size", 16384, 8}, 
<         {"backing_dev", 57344, 128}, 
<         {"meta_dev", 57344, 128}, 
<         {"meta_dev_idx", 8192, 4}, 
<         {"on_io_error", 0, 4}, 
<         {"fencing", 0, 4}, 
<         {"my_addr", 57344, 128}, 
<         {"peer_addr", 57344, 128}, 
<         {"shared_secret", 49152, 64}, 
<         {"cram_hmac_alg", 49152, 64}, 
<         {0, 0, 0}, 
<         {0, 0, 0}, 
<         {"timeout", 0, 4}, 
<         {"wire_protocol", 8192, 4}, 
<         {"try_connect_int", 0, 4}, 
<         {"ping_int", 0, 4}, 
<         {"max_epoch_size", 0, 4}, 
<         {"max_buffers", 0, 4}, 
<         {"unplug_watermark", 0, 4}, 
<         {"sndbuf_size", 0, 4}, 
<         {"ko_count", 0, 4}, 
<         {0, 0, 0}, 
<         {"after_sb_0p", 0, 4}, 
<         {"after_sb_1p", 0, 4}, 
<         {"after_sb_2p", 0, 4}, 
<         {"want_lose", 32768, 4}, 
<         {"two_primaries", 32768, 4}, 
<         {"resize_size", 16384, 8}, 
<         {"rate", 0, 4}, 
<         {"after", 0, 4}, 
<         {"al_extents", 0, 4}, 
<         {"state_i", 0, 4}, 
<         {"uuids", 49152, 32}, 
<         {"uuids_flags", 0, 4}, 
<         {"use_degraded", 32768, 4}, 
<         {"use_bmbv", 32768, 4}, 
<         {"helper", 49152, 32}, 
<         {"rr_conflict", 0, 4}, 
<         {"ping_timeo", 0, 4}, 
<         {"always_asbp", 32768, 4}, 
<         {0, 0, 0}, 
<         {"sync_progress", 0, 4}, 
<         {"integrity_alg", 49152, 64}, 
<         {"dump_ee_reason", 49152, 32}, 
<         {"seen_digest", 49152, 64}, 
<         {"calc_digest", 49152, 64}, 
<         {"ee_sector", 16384, 8}, 
<         {"ee_block_id", 16384, 8}, 
<         {"ee_data", 49152, 32768}, 
<         {"cpu_mask", 49152, 32}, 
<         {"verify_alg", 49152, 64}, 
<         {"no_disk_flush", 32768, 4}, 
<         {"no_md_flush", 32768, 4}, 
<         {0, 0, 0}, 
<         {"max_bio_bvecs", 0, 4}, 
<         {"no_disk_barrier", 32768, 4}, 
<         {"no_disk_drain", 32768, 4}, 
<         {0, 0, 0}, 
<         {"mind_af", 40960, 4}, 
<         {"no_cork", 32768, 4}, 
<         {"auto_sndbuf_size", 40960, 4}, 
<         {"clear_bm", 40960, 4}, 
<         {"csums_alg", 49152, 64}, 
<         {"use_rle", 32768, 4}, 
<         {"start_sector", 16384, 8}, 
<         {"rcvbuf_size", 0, 4}, 
<         {"resize_force", 32768, 4}, 
<         {"no_resync", 40960, 4}, 
<         {"dry_run", 40960, 4}, 
<         {0, 0, 0}, 
<         {0, 0, 0}, 
<         {0, 0, 0}, 
<         {0, 0, 0}, 
<         {"on_no_data", 0, 4}, 
<         {"c_plan_ahead", 0, 4}, 
<         {"c_delay_target", 0, 4}, 
<         {"c_fill_target", 0, 4}, 
<         {"c_max_rate", 0, 4}, 
<         {"c_min_rate", 0, 4}, 
<         {"on_congestion", 0, 4}, 
<         {"cong_fill", 0, 4}, 
<         {"cong_extents", 0, 4}, 
<         {"force", 32768, 4}, 
<         {0, 0, 0}, 
<         {0, 0, 0}, 
<         {0, 0, 0}, 
<         {"detach_force", 40960, 4}, 
<         {"disk_timeout", 0, 4}, 
<         {"stop_sector", 24576, 8}};
< #line 116 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static unsigned short *tl_add_blob(unsigned short *tl , enum drbd_tags tag , void const   *data ,
<                                    int len ) ;
< #line 117
< static unsigned short *tl_add_str(unsigned short *tl , enum drbd_tags tag , char const   *str ) ;
< #line 118
< static unsigned short *tl_add_int(unsigned short *tl , enum drbd_tags tag , void const   *val ) ;
< #line 121 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static char *drbd_m_holder  =    (char *)"Hands off! this is DRBD\'s meta data device.";
< #line 16 "include/linux/drbd_nl.h"
< static int primary_from_tags(struct drbd_conf *mdev , unsigned short *tags , struct primary *arg ) ;
< #line 16 "include/linux/drbd_nl.h"
< static int primary_from_tags(struct drbd_conf *mdev , unsigned short *tags , struct primary *arg ) 
< { 
<   int tag ;
<   int dlen ;
<   unsigned short *tmp ;
<   u16 tmp___0 ;
<   unsigned short *tmp___1 ;
<   u16 tmp___2 ;
---
> #line 274 "include/net/genetlink.h"
> __inline static void *genlmsg_data(struct genlmsghdr  const  *gnlh ) 
> { 
> 
50886,50912c52214,52220
< #line 14
<   goto ldv_51963;
<   ldv_51962: 
< #line 14
<   tmp = tags;
< #line 14
<   tags = tags + 1;
< #line 14
<   tmp___0 = get_unaligned_le16((void const   *)tmp);
< #line 14
<   dlen = (int )tmp___0;
< #line 14
<   switch (tag & 8191) {
<   case 1: 
< #line 14
<   arg->primary_force = (int )((signed char )*((char *)tags)) != 0;
< #line 14
<   goto ldv_51960;
<   default: ;
< #line 14
<   if ((tag & 8192) != 0) {
< #line 14
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Unknown tag: %d\n",
<             tag & 8191);
< #line 14
<     return (0);
<   } else {
---
> #line 276
>   return ((void *)gnlh + 4U);
> }
> }
> #line 294 "include/net/genetlink.h"
> __inline static int genlmsg_msg_size(int payload ) 
> { 
50914,50932d52221
<   }
<   }
<   ldv_51960: 
< #line 14
<   tags = tags + (unsigned long )dlen;
<   ldv_51963: 
< #line 14
<   tmp___1 = tags;
< #line 14
<   tags = tags + 1;
< #line 14
<   tmp___2 = get_unaligned_le16((void const   *)tmp___1);
< #line 14
<   tag = (int )tmp___2;
< #line 14
<   if (tag != 0) {
< #line 15
<     goto ldv_51962;
<   } else {
50934c52223,52231
<   }
---
>   {
> #line 296
>   return ((int )((unsigned int )payload + 4U));
> }
> }
> #line 303 "include/net/genetlink.h"
> __inline static int genlmsg_total_size(int payload ) 
> { 
>   int tmp ;
50936,50937c52233,52237
< #line 14
<   return (1);
---
>   {
> #line 305
>   tmp = genlmsg_msg_size(payload);
> #line 305
>   return ((int )((unsigned int )tmp + 3U) & -4);
50940,50963c52240,52244
< #line 35
< static int disk_conf_from_tags(struct drbd_conf *mdev , unsigned short *tags , struct disk_conf *arg ) ;
< #line 35 "include/linux/drbd_nl.h"
< static int disk_conf_from_tags(struct drbd_conf *mdev , unsigned short *tags , struct disk_conf *arg ) 
< { 
<   int tag ;
<   int dlen ;
<   unsigned short *tmp ;
<   u16 tmp___0 ;
<   size_t __len ;
<   size_t __min1 ;
<   size_t __min2 ;
<   void *__ret ;
<   size_t __len___0 ;
<   size_t __min1___0 ;
<   size_t __min2___0 ;
<   void *__ret___0 ;
<   u32 tmp___1 ;
<   u32 tmp___2 ;
<   u32 tmp___3 ;
<   u32 tmp___4 ;
<   u32 tmp___5 ;
<   unsigned short *tmp___6 ;
<   u16 tmp___7 ;
---
> #line 313 "include/net/genetlink.h"
> __inline static struct sk_buff *genlmsg_new(size_t payload , gfp_t flags ) 
> { 
>   int tmp ;
>   struct sk_buff *tmp___0 ;
50966,50991c52247,52445
< #line 20
<   goto ldv_52025;
<   ldv_52024: 
< #line 20
<   tmp = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   tmp___0 = get_unaligned_le16((void const   *)tmp);
< #line 20
<   dlen = (int )tmp___0;
< #line 20
<   switch (tag & 8191) {
<   case 2: 
< #line 20
<   arg->disk_size = get_unaligned_le64((void const   *)tags);
< #line 20
<   goto ldv_51992;
<   case 3: ;
< #line 20
<   if (dlen > 128) {
< #line 20
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "arg too long: %s (%u wanted, max len: %u bytes)\n",
<             (char *)"backing_dev", dlen, 128U);
< #line 20
<     return (0);
---
> #line 315
>   tmp = genlmsg_total_size((int )payload);
> #line 315
>   tmp___0 = nlmsg_new((size_t )tmp, flags);
> #line 315
>   return (tmp___0);
> }
> }
> #line 134 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_add_minor(struct sk_buff *skb , struct genl_info *info ) ;
> #line 135
> int drbd_adm_delete_minor(struct sk_buff *skb , struct genl_info *info ) ;
> #line 137
> int drbd_adm_new_resource(struct sk_buff *skb , struct genl_info *info ) ;
> #line 138
> int drbd_adm_del_resource(struct sk_buff *skb , struct genl_info *info ) ;
> #line 139
> int drbd_adm_down(struct sk_buff *skb , struct genl_info *info ) ;
> #line 141
> int drbd_adm_set_role(struct sk_buff *skb , struct genl_info *info ) ;
> #line 142
> int drbd_adm_attach(struct sk_buff *skb , struct genl_info *info ) ;
> #line 143
> int drbd_adm_disk_opts(struct sk_buff *skb , struct genl_info *info ) ;
> #line 144
> int drbd_adm_detach(struct sk_buff *skb , struct genl_info *info ) ;
> #line 145
> int drbd_adm_connect(struct sk_buff *skb , struct genl_info *info ) ;
> #line 146
> int drbd_adm_net_opts(struct sk_buff *skb , struct genl_info *info ) ;
> #line 147
> int drbd_adm_resize(struct sk_buff *skb , struct genl_info *info ) ;
> #line 148
> int drbd_adm_start_ov(struct sk_buff *skb , struct genl_info *info ) ;
> #line 149
> int drbd_adm_new_c_uuid(struct sk_buff *skb , struct genl_info *info ) ;
> #line 150
> int drbd_adm_disconnect(struct sk_buff *skb , struct genl_info *info ) ;
> #line 151
> int drbd_adm_invalidate(struct sk_buff *skb , struct genl_info *info ) ;
> #line 152
> int drbd_adm_invalidate_peer(struct sk_buff *skb , struct genl_info *info ) ;
> #line 153
> int drbd_adm_pause_sync(struct sk_buff *skb , struct genl_info *info ) ;
> #line 154
> int drbd_adm_resume_sync(struct sk_buff *skb , struct genl_info *info ) ;
> #line 155
> int drbd_adm_suspend_io(struct sk_buff *skb , struct genl_info *info ) ;
> #line 156
> int drbd_adm_resume_io(struct sk_buff *skb , struct genl_info *info ) ;
> #line 157
> int drbd_adm_outdate(struct sk_buff *skb , struct genl_info *info ) ;
> #line 158
> int drbd_adm_resource_opts(struct sk_buff *skb , struct genl_info *info ) ;
> #line 159
> int drbd_adm_get_status(struct sk_buff *skb , struct genl_info *info ) ;
> #line 160
> int drbd_adm_get_timeout_type(struct sk_buff *skb , struct genl_info *info ) ;
> #line 162
> int drbd_adm_get_status_all(struct sk_buff *skb , struct netlink_callback *cb ) ;
> #line 4 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_nla.h"
> int drbd_nla_parse_nested(struct nlattr **tb , int maxtype , struct nlattr *nla ,
>                           struct nla_policy  const  *policy ) ;
> #line 6
> struct nlattr *drbd_nla_find_nested(int maxtype , struct nlattr *nla , int attrtype ) ;
> #line 24 "include/linux/genl_magic_func.h"
> static struct nla_policy drbd_tla_nl_policy[14U]  = 
> #line 24 "include/linux/genl_magic_func.h"
>   {      {(unsigned short)0, (unsigned short)0}, 
>         {8U, (unsigned short)0}, 
>         {8U, (unsigned short)0}, 
>         {8U, (unsigned short)0}, 
>         {8U, (unsigned short)0}, 
>         {8U, (unsigned short)0}, 
>         {8U, (unsigned short)0}, 
>         {8U, (unsigned short)0}, 
>         {8U, (unsigned short)0}, 
>         {8U, (unsigned short)0}, 
>         {8U, (unsigned short)0}, 
>         {8U, (unsigned short)0}, 
>         {8U, (unsigned short)0}, 
>         {8U, (unsigned short)0}};
> #line 102 "include/linux/drbd_genl.h"
> static struct nla_policy drbd_cfg_context_nl_policy[5U]  = {      {(unsigned short)0, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {10U, 127U}, 
>         {11U, 128U}, 
>         {11U, 128U}};
> #line 135 "include/linux/drbd_genl.h"
> static struct nla_policy disk_conf_nl_policy[24U]  = 
> #line 135
>   {      {(unsigned short)0, (unsigned short)0}, 
>         {10U, 127U}, 
>         {10U, 127U}, 
>         {3U, (unsigned short)0}, 
>         {4U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {1U, (unsigned short)0}, 
>         {1U, (unsigned short)0}, 
>         {1U, (unsigned short)0}, 
>         {1U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {(unsigned short)0, (unsigned short)0}, 
>         {1U, (unsigned short)0}};
> #line 140 "include/linux/drbd_genl.h"
> static struct nla_policy res_opts_nl_policy[3U]  = {      {(unsigned short)0, (unsigned short)0}, 
>         {10U, 31U}, 
>         {3U, (unsigned short)0}};
> #line 174 "include/linux/drbd_genl.h"
> static struct nla_policy net_conf_nl_policy[30U]  = 
> #line 174
>   {      {(unsigned short)0, (unsigned short)0}, 
>         {10U, 63U}, 
>         {10U, 63U}, 
>         {10U, 63U}, 
>         {10U, 63U}, 
>         {10U, 63U}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {3U, (unsigned short)0}, 
>         {1U, (unsigned short)0}, 
>         {1U, (unsigned short)0}, 
>         {1U, (unsigned short)0}, 
>         {1U, (unsigned short)0}, 
>         {1U, (unsigned short)0}, 
>         {1U, (unsigned short)0}};
> #line 178 "include/linux/drbd_genl.h"
> static struct nla_policy set_role_parms_nl_policy[2U]  = {      {(unsigned short)0, (unsigned short)0}, 
>         {1U, (unsigned short)0}};
> #line 184 "include/linux/drbd_genl.h"
> static struct nla_policy resize_parms_nl_policy[4U]  = {      {(unsigned short)0, (unsigned short)0}, 
>         {4U, (unsigned short)0}, 
>         {1U, (unsigned short)0}, 
>         {1U, (unsigned short)0}};
> #line 229 "include/linux/drbd_genl.h"
> static struct nla_policy start_ov_parms_nl_policy[3U]  = {      {(unsigned short)0, (unsigned short)0}, 
>         {4U, (unsigned short)0}, 
>         {4U, (unsigned short)0}};
> #line 233 "include/linux/drbd_genl.h"
> static struct nla_policy new_c_uuid_parms_nl_policy[2U]  = {      {(unsigned short)0, (unsigned short)0}, 
>         {1U, (unsigned short)0}};
> #line 241 "include/linux/drbd_genl.h"
> static struct nla_policy disconnect_parms_nl_policy[2U]  = {      {(unsigned short)0, (unsigned short)0}, 
>         {1U, (unsigned short)0}};
> #line 245 "include/linux/drbd_genl.h"
> static struct nla_policy detach_parms_nl_policy[2U]  = {      {(unsigned short)0, (unsigned short)0}, 
>         {1U, (unsigned short)0}};
> #line 132 "include/linux/genl_magic_func.h"
> static struct nlattr *nested_attr_tb[128U]  ;
> #line 102 "include/linux/drbd_genl.h"
> static int __drbd_cfg_context_from_attrs(struct drbd_cfg_context *s , struct genl_info *info ,
>                                          bool exclude_invariants ) 
> { 
>   int maxtype ;
>   struct nlattr *tla ;
>   struct nlattr **ntb ;
>   struct nlattr *nla ;
>   int err ;
>   size_t tmp ;
>   int tmp___0 ;
>   int tmp___1 ;
> 
>   {
> #line 97
>   maxtype = 4;
> #line 97
>   tla = *(info->attrs + 2UL);
> #line 97
>   ntb = (struct nlattr **)(& nested_attr_tb);
> #line 97
>   if ((unsigned long )tla == (unsigned long )((struct nlattr *)0)) {
> #line 97
>     return (-42);
50995,51014c52449,52454
< #line 20
<   arg->backing_dev_len = dlen;
< #line 20
<   __min1 = (size_t )dlen;
< #line 20
<   __min2 = 128UL;
< #line 20
<   __len = __min1 < __min2 ? __min1 : __min2;
< #line 20
<   __ret = __builtin_memcpy((void *)(& arg->backing_dev), (void const   *)tags, __len);
< #line 20
<   goto ldv_51992;
<   case 4: ;
< #line 20
<   if (dlen > 128) {
< #line 20
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "arg too long: %s (%u wanted, max len: %u bytes)\n",
<             (char *)"meta_dev", dlen, 128U);
< #line 20
<     return (0);
---
> #line 97
>   err = drbd_nla_parse_nested(ntb, maxtype, tla, (struct nla_policy  const  *)(& drbd_cfg_context_nl_policy));
> #line 97
>   if (err != 0) {
> #line 97
>     return (err);
51018,51097c52458,52468
< #line 20
<   arg->meta_dev_len = dlen;
< #line 20
<   __min1___0 = (size_t )dlen;
< #line 20
<   __min2___0 = 128UL;
< #line 20
<   __len___0 = __min1___0 < __min2___0 ? __min1___0 : __min2___0;
< #line 20
<   __ret___0 = __builtin_memcpy((void *)(& arg->meta_dev), (void const   *)tags, __len___0);
< #line 20
<   goto ldv_51992;
<   case 5: 
< #line 20
<   tmp___1 = get_unaligned_le32((void const   *)tags);
< #line 20
<   arg->meta_dev_idx = (int )tmp___1;
< #line 20
<   goto ldv_51992;
<   case 6: 
< #line 20
<   tmp___2 = get_unaligned_le32((void const   *)tags);
< #line 20
<   arg->on_io_error = (int )tmp___2;
< #line 20
<   goto ldv_51992;
<   case 7: 
< #line 20
<   tmp___3 = get_unaligned_le32((void const   *)tags);
< #line 20
<   arg->fencing = (int )tmp___3;
< #line 20
<   goto ldv_51992;
<   case 37: 
< #line 20
<   arg->use_bmbv = (int )((signed char )*((char *)tags)) != 0;
< #line 20
<   goto ldv_51992;
<   case 53: 
< #line 20
<   arg->no_disk_flush = (int )((signed char )*((char *)tags)) != 0;
< #line 20
<   goto ldv_51992;
<   case 54: 
< #line 20
<   arg->no_md_flush = (int )((signed char )*((char *)tags)) != 0;
< #line 20
<   goto ldv_51992;
<   case 56: 
< #line 20
<   tmp___4 = get_unaligned_le32((void const   *)tags);
< #line 20
<   arg->max_bio_bvecs = (int )tmp___4;
< #line 20
<   goto ldv_51992;
<   case 57: 
< #line 20
<   arg->no_disk_barrier = (int )((signed char )*((char *)tags)) != 0;
< #line 20
<   goto ldv_51992;
<   case 58: 
< #line 20
<   arg->no_disk_drain = (int )((signed char )*((char *)tags)) != 0;
< #line 20
<   goto ldv_51992;
<   case 89: 
< #line 20
<   tmp___5 = get_unaligned_le32((void const   *)tags);
< #line 20
<   arg->disk_timeout = (int )tmp___5;
< #line 20
<   goto ldv_51992;
<   default: ;
< #line 20
<   if ((tag & 8192) != 0) {
< #line 20
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Unknown tag: %d\n",
<             tag & 8191);
< #line 20
<     return (0);
---
> #line 97
>   nla = *(ntb + 1UL);
> #line 97
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 97
>     if ((unsigned long )s != (unsigned long )((struct drbd_cfg_context *)0)) {
> #line 97
>       s->ctx_volume = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
51101,51117c52472,52485
<   }
<   ldv_51992: 
< #line 20
<   tags = tags + (unsigned long )dlen;
<   ldv_52025: 
< #line 20
<   tmp___6 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   tmp___7 = get_unaligned_le16((void const   *)tmp___6);
< #line 20
<   tag = (int )tmp___7;
< #line 20
<   if (tag != 0) {
< #line 21
<     goto ldv_52024;
---
> #line 97
>   nla = *(ntb + 2UL);
> #line 97
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 97
>     if ((unsigned long )s != (unsigned long )((struct drbd_cfg_context *)0)) {
> #line 97
>       tmp = nla_strlcpy((char *)(& s->ctx_resource_name), (struct nlattr  const  *)nla,
>                         128UL);
> #line 97
>       s->ctx_resource_name_len = (__u32 )tmp;
>     } else {
> 
>     }
51120a52489,52500
> #line 97
>   nla = *(ntb + 3UL);
> #line 97
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 97
>     if ((unsigned long )s != (unsigned long )((struct drbd_cfg_context *)0)) {
> #line 97
>       tmp___0 = nla_memcpy((void *)(& s->ctx_my_addr), (struct nlattr  const  *)nla,
>                            128);
> #line 97
>       s->ctx_my_addr_len = (__u32 )tmp___0;
>     } else {
51122,51164c52502
< #line 20
<   return (1);
< }
< }
< #line 39
< static int detach_from_tags(struct drbd_conf *mdev , unsigned short *tags , struct detach *arg ) ;
< #line 39 "include/linux/drbd_nl.h"
< static int detach_from_tags(struct drbd_conf *mdev , unsigned short *tags , struct detach *arg ) 
< { 
<   int tag ;
<   int dlen ;
<   unsigned short *tmp ;
<   u16 tmp___0 ;
<   unsigned short *tmp___1 ;
<   u16 tmp___2 ;
< 
<   {
< #line 37
<   goto ldv_52042;
<   ldv_52041: 
< #line 37
<   tmp = tags;
< #line 37
<   tags = tags + 1;
< #line 37
<   tmp___0 = get_unaligned_le16((void const   *)tmp);
< #line 37
<   dlen = (int )tmp___0;
< #line 37
<   switch (tag & 8191) {
<   case 88: 
< #line 37
<   arg->detach_force = (int )((signed char )*((char *)tags)) != 0;
< #line 37
<   goto ldv_52039;
<   default: ;
< #line 37
<   if ((tag & 8192) != 0) {
< #line 37
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Unknown tag: %d\n",
<             tag & 8191);
< #line 37
<     return (0);
---
>     }
51168,51184c52506,52519
<   }
<   ldv_52039: 
< #line 37
<   tags = tags + (unsigned long )dlen;
<   ldv_52042: 
< #line 37
<   tmp___1 = tags;
< #line 37
<   tags = tags + 1;
< #line 37
<   tmp___2 = get_unaligned_le16((void const   *)tmp___1);
< #line 37
<   tag = (int )tmp___2;
< #line 37
<   if (tag != 0) {
< #line 38
<     goto ldv_52041;
---
> #line 97
>   nla = *(ntb + 4UL);
> #line 97
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 97
>     if ((unsigned long )s != (unsigned long )((struct drbd_cfg_context *)0)) {
> #line 97
>       tmp___1 = nla_memcpy((void *)(& s->ctx_peer_addr), (struct nlattr  const  *)nla,
>                            128);
> #line 97
>       s->ctx_peer_addr_len = (__u32 )tmp___1;
>     } else {
> 
>     }
51187a52523,52530
> #line 97
>   return (0);
> }
> }
> #line 102 "include/linux/drbd_genl.h"
> static int drbd_cfg_context_from_attrs(struct drbd_cfg_context *s , struct genl_info *info ) 
> { 
>   int tmp ;
51189,51190c52532,52536
< #line 37
<   return (1);
---
>   {
> #line 97
>   tmp = __drbd_cfg_context_from_attrs(s, info, 0);
> #line 97
>   return (tmp);
51193,51221c52539,52548
< #line 73
< static int net_conf_from_tags(struct drbd_conf *mdev , unsigned short *tags , struct net_conf *arg ) ;
< #line 73 "include/linux/drbd_nl.h"
< static int net_conf_from_tags(struct drbd_conf *mdev , unsigned short *tags , struct net_conf *arg ) 
< { 
<   int tag ;
<   int dlen ;
<   unsigned short *tmp ;
<   u16 tmp___0 ;
<   size_t __len ;
<   size_t __min1 ;
<   size_t __min2 ;
<   void *__ret ;
<   size_t __len___0 ;
<   size_t __min1___0 ;
<   size_t __min2___0 ;
<   void *__ret___0 ;
<   size_t __len___1 ;
<   size_t __min1___1 ;
<   size_t __min2___1 ;
<   void *__ret___1 ;
<   size_t __len___2 ;
<   size_t __min1___2 ;
<   size_t __min2___2 ;
<   void *__ret___2 ;
<   size_t __len___3 ;
<   size_t __min1___3 ;
<   size_t __min2___3 ;
<   void *__ret___3 ;
---
> #line 135 "include/linux/drbd_genl.h"
> static int __disk_conf_from_attrs(struct disk_conf *s , struct genl_info *info , bool exclude_invariants ) 
> { 
>   int maxtype ;
>   struct nlattr *tla ;
>   struct nlattr **ntb ;
>   struct nlattr *nla ;
>   int err ;
>   size_t tmp ;
>   size_t tmp___0 ;
51224,51241c52551,52555
<   u32 tmp___3 ;
<   u32 tmp___4 ;
<   u32 tmp___5 ;
<   u32 tmp___6 ;
<   u32 tmp___7 ;
<   u32 tmp___8 ;
<   u32 tmp___9 ;
<   u32 tmp___10 ;
<   u32 tmp___11 ;
<   u32 tmp___12 ;
<   u32 tmp___13 ;
<   u32 tmp___14 ;
<   u32 tmp___15 ;
<   u32 tmp___16 ;
<   u32 tmp___17 ;
<   u32 tmp___18 ;
<   unsigned short *tmp___19 ;
<   u16 tmp___20 ;
---
>   u8 tmp___3 ;
>   u8 tmp___4 ;
>   u8 tmp___5 ;
>   u8 tmp___6 ;
>   u8 tmp___7 ;
51244,51264c52558,52567
< #line 41
<   goto ldv_52133;
<   ldv_52132: 
< #line 41
<   tmp = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   tmp___0 = get_unaligned_le16((void const   *)tmp);
< #line 41
<   dlen = (int )tmp___0;
< #line 41
<   switch (tag & 8191) {
<   case 8: ;
< #line 41
<   if (dlen > 128) {
< #line 41
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "arg too long: %s (%u wanted, max len: %u bytes)\n",
<             (char *)"my_addr", dlen, 128U);
< #line 41
<     return (0);
---
> #line 104
>   maxtype = 23;
> #line 104
>   tla = *(info->attrs + 3UL);
> #line 104
>   ntb = (struct nlattr **)(& nested_attr_tb);
> #line 104
>   if ((unsigned long )tla == (unsigned long )((struct nlattr *)0)) {
> #line 104
>     return (-42);
51268,51287c52571,52576
< #line 41
<   arg->my_addr_len = dlen;
< #line 41
<   __min1 = (size_t )dlen;
< #line 41
<   __min2 = 128UL;
< #line 41
<   __len = __min1 < __min2 ? __min1 : __min2;
< #line 41
<   __ret = __builtin_memcpy((void *)(& arg->my_addr), (void const   *)tags, __len);
< #line 41
<   goto ldv_52065;
<   case 9: ;
< #line 41
<   if (dlen > 128) {
< #line 41
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "arg too long: %s (%u wanted, max len: %u bytes)\n",
<             (char *)"peer_addr", dlen, 128U);
< #line 41
<     return (0);
---
> #line 104
>   err = drbd_nla_parse_nested(ntb, maxtype, tla, (struct nla_policy  const  *)(& disk_conf_nl_policy));
> #line 104
>   if (err != 0) {
> #line 104
>     return (err);
51291,51311c52580,52590
< #line 41
<   arg->peer_addr_len = dlen;
< #line 41
<   __min1___0 = (size_t )dlen;
< #line 41
<   __min2___0 = 128UL;
< #line 41
<   __len___0 = __min1___0 < __min2___0 ? __min1___0 : __min2___0;
< #line 41
<   __ret___0 = __builtin_memcpy((void *)(& arg->peer_addr), (void const   *)tags, __len___0);
< #line 41
<   goto ldv_52065;
<   case 10: ;
< #line 41
<   if (dlen > 64) {
< #line 41
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "arg too long: %s (%u wanted, max len: %u bytes)\n",
<             (char *)"shared_secret", dlen, 64U);
< #line 41
<     return (0);
<   } else {
---
> #line 104
>   nla = *(ntb + 1UL);
> #line 104
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 104
>     if ((int )exclude_invariants) {
> #line 104
>       printk("\016<< must not change invariant attr: %s\n", (char *)"backing_dev");
> #line 104
>       return (-17);
>     } else {
51313,51335c52592,52605
<   }
< #line 41
<   arg->shared_secret_len = dlen;
< #line 41
<   __min1___1 = (size_t )dlen;
< #line 41
<   __min2___1 = 64UL;
< #line 41
<   __len___1 = __min1___1 < __min2___1 ? __min1___1 : __min2___1;
< #line 41
<   __ret___1 = __builtin_memcpy((void *)(& arg->shared_secret), (void const   *)tags,
<                                __len___1);
< #line 41
<   goto ldv_52065;
<   case 11: ;
< #line 41
<   if (dlen > 64) {
< #line 41
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "arg too long: %s (%u wanted, max len: %u bytes)\n",
<             (char *)"cram_hmac_alg", dlen, 64U);
< #line 41
<     return (0);
<   } else {
---
>     }
> #line 104
>     if ((unsigned long )s != (unsigned long )((struct disk_conf *)0)) {
> #line 104
>       tmp = nla_strlcpy((char *)(& s->backing_dev), (struct nlattr  const  *)nla,
>                         128UL);
> #line 104
>       s->backing_dev_len = (__u32 )tmp;
>     } else {
> 
>     }
>   } else
> #line 104
>   if ((int )exclude_invariants) {
51337,51358d52606
<   }
< #line 41
<   arg->cram_hmac_alg_len = dlen;
< #line 41
<   __min1___2 = (size_t )dlen;
< #line 41
<   __min2___2 = 64UL;
< #line 41
<   __len___2 = __min1___2 < __min2___2 ? __min1___2 : __min2___2;
< #line 41
<   __ret___2 = __builtin_memcpy((void *)(& arg->cram_hmac_alg), (void const   *)tags,
<                                __len___2);
< #line 41
<   goto ldv_52065;
<   case 44: ;
< #line 41
<   if (dlen > 64) {
< #line 41
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "arg too long: %s (%u wanted, max len: %u bytes)\n",
<             (char *)"integrity_alg", dlen, 64U);
< #line 41
<     return (0);
51359a52608,52638
> #line 104
>     printk("\016<< missing attr: %s\n", (char *)"backing_dev");
> #line 104
>     return (-42);
>   }
> #line 104
>   nla = *(ntb + 2UL);
> #line 104
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 104
>     if ((int )exclude_invariants) {
> #line 104
>       printk("\016<< must not change invariant attr: %s\n", (char *)"meta_dev");
> #line 104
>       return (-17);
>     } else {
> 
>     }
> #line 104
>     if ((unsigned long )s != (unsigned long )((struct disk_conf *)0)) {
> #line 104
>       tmp___0 = nla_strlcpy((char *)(& s->meta_dev), (struct nlattr  const  *)nla,
>                             128UL);
> #line 104
>       s->meta_dev_len = (__u32 )tmp___0;
>     } else {
> 
>     }
>   } else
> #line 104
>   if ((int )exclude_invariants) {
51360a52640,52644
>   } else {
> #line 104
>     printk("\016<< missing attr: %s\n", (char *)"meta_dev");
> #line 104
>     return (-42);
51362,51543c52646,52697
< #line 41
<   arg->integrity_alg_len = dlen;
< #line 41
<   __min1___3 = (size_t )dlen;
< #line 41
<   __min2___3 = 64UL;
< #line 41
<   __len___3 = __min1___3 < __min2___3 ? __min1___3 : __min2___3;
< #line 41
<   __ret___3 = __builtin_memcpy((void *)(& arg->integrity_alg), (void const   *)tags,
<                                __len___3);
< #line 41
<   goto ldv_52065;
<   case 14: 
< #line 41
<   tmp___1 = get_unaligned_le32((void const   *)tags);
< #line 41
<   arg->timeout = (int )tmp___1;
< #line 41
<   goto ldv_52065;
<   case 15: 
< #line 41
<   tmp___2 = get_unaligned_le32((void const   *)tags);
< #line 41
<   arg->wire_protocol = (int )tmp___2;
< #line 41
<   goto ldv_52065;
<   case 16: 
< #line 41
<   tmp___3 = get_unaligned_le32((void const   *)tags);
< #line 41
<   arg->try_connect_int = (int )tmp___3;
< #line 41
<   goto ldv_52065;
<   case 17: 
< #line 41
<   tmp___4 = get_unaligned_le32((void const   *)tags);
< #line 41
<   arg->ping_int = (int )tmp___4;
< #line 41
<   goto ldv_52065;
<   case 18: 
< #line 41
<   tmp___5 = get_unaligned_le32((void const   *)tags);
< #line 41
<   arg->max_epoch_size = (int )tmp___5;
< #line 41
<   goto ldv_52065;
<   case 19: 
< #line 41
<   tmp___6 = get_unaligned_le32((void const   *)tags);
< #line 41
<   arg->max_buffers = (int )tmp___6;
< #line 41
<   goto ldv_52065;
<   case 20: 
< #line 41
<   tmp___7 = get_unaligned_le32((void const   *)tags);
< #line 41
<   arg->unplug_watermark = (int )tmp___7;
< #line 41
<   goto ldv_52065;
<   case 21: 
< #line 41
<   tmp___8 = get_unaligned_le32((void const   *)tags);
< #line 41
<   arg->sndbuf_size = (int )tmp___8;
< #line 41
<   goto ldv_52065;
<   case 22: 
< #line 41
<   tmp___9 = get_unaligned_le32((void const   *)tags);
< #line 41
<   arg->ko_count = (int )tmp___9;
< #line 41
<   goto ldv_52065;
<   case 24: 
< #line 41
<   tmp___10 = get_unaligned_le32((void const   *)tags);
< #line 41
<   arg->after_sb_0p = (int )tmp___10;
< #line 41
<   goto ldv_52065;
<   case 25: 
< #line 41
<   tmp___11 = get_unaligned_le32((void const   *)tags);
< #line 41
<   arg->after_sb_1p = (int )tmp___11;
< #line 41
<   goto ldv_52065;
<   case 26: 
< #line 41
<   tmp___12 = get_unaligned_le32((void const   *)tags);
< #line 41
<   arg->after_sb_2p = (int )tmp___12;
< #line 41
<   goto ldv_52065;
<   case 39: 
< #line 41
<   tmp___13 = get_unaligned_le32((void const   *)tags);
< #line 41
<   arg->rr_conflict = (int )tmp___13;
< #line 41
<   goto ldv_52065;
<   case 40: 
< #line 41
<   tmp___14 = get_unaligned_le32((void const   *)tags);
< #line 41
<   arg->ping_timeo = (int )tmp___14;
< #line 41
<   goto ldv_52065;
<   case 67: 
< #line 41
<   tmp___15 = get_unaligned_le32((void const   *)tags);
< #line 41
<   arg->rcvbuf_size = (int )tmp___15;
< #line 41
<   goto ldv_52065;
<   case 81: 
< #line 41
<   tmp___16 = get_unaligned_le32((void const   *)tags);
< #line 41
<   arg->on_congestion = (int )tmp___16;
< #line 41
<   goto ldv_52065;
<   case 82: 
< #line 41
<   tmp___17 = get_unaligned_le32((void const   *)tags);
< #line 41
<   arg->cong_fill = (int )tmp___17;
< #line 41
<   goto ldv_52065;
<   case 83: 
< #line 41
<   tmp___18 = get_unaligned_le32((void const   *)tags);
< #line 41
<   arg->cong_extents = (int )tmp___18;
< #line 41
<   goto ldv_52065;
<   case 60: 
< #line 41
<   arg->mind_af = (int )((signed char )*((char *)tags)) != 0;
< #line 41
<   goto ldv_52065;
<   case 27: 
< #line 41
<   arg->want_lose = (int )((signed char )*((char *)tags)) != 0;
< #line 41
<   goto ldv_52065;
<   case 28: 
< #line 41
<   arg->two_primaries = (int )((signed char )*((char *)tags)) != 0;
< #line 41
<   goto ldv_52065;
<   case 41: 
< #line 41
<   arg->always_asbp = (int )((signed char )*((char *)tags)) != 0;
< #line 41
<   goto ldv_52065;
<   case 61: 
< #line 41
<   arg->no_cork = (int )((signed char )*((char *)tags)) != 0;
< #line 41
<   goto ldv_52065;
<   case 62: 
< #line 41
<   arg->auto_sndbuf_size = (int )((signed char )*((char *)tags)) != 0;
< #line 41
<   goto ldv_52065;
<   case 70: 
< #line 41
<   arg->dry_run = (int )((signed char )*((char *)tags)) != 0;
< #line 41
<   goto ldv_52065;
<   default: ;
< #line 41
<   if ((tag & 8192) != 0) {
< #line 41
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Unknown tag: %d\n",
<             tag & 8191);
< #line 41
<     return (0);
---
> #line 104
>   nla = *(ntb + 3UL);
> #line 104
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 104
>     if ((int )exclude_invariants) {
> #line 104
>       printk("\016<< must not change invariant attr: %s\n", (char *)"meta_dev_idx");
> #line 104
>       return (-17);
>     } else {
> 
>     }
> #line 104
>     if ((unsigned long )s != (unsigned long )((struct disk_conf *)0)) {
> #line 104
>       tmp___1 = nla_get_u32((struct nlattr  const  *)nla);
> #line 104
>       s->meta_dev_idx = (__s32 )tmp___1;
>     } else {
> 
>     }
>   } else
> #line 104
>   if ((int )exclude_invariants) {
> 
>   } else {
> #line 104
>     printk("\016<< missing attr: %s\n", (char *)"meta_dev_idx");
> #line 104
>     return (-42);
>   }
> #line 104
>   nla = *(ntb + 4UL);
> #line 104
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 104
>     if ((int )exclude_invariants) {
> #line 104
>       printk("\016<< must not change invariant attr: %s\n", (char *)"disk_size");
> #line 104
>       return (-17);
>     } else {
> 
>     }
> #line 104
>     if ((unsigned long )s != (unsigned long )((struct disk_conf *)0)) {
> #line 104
>       s->disk_size = nla_get_u64((struct nlattr  const  *)nla);
>     } else {
> 
>     }
51546a52701,52722
> #line 104
>   nla = *(ntb + 5UL);
> #line 104
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 104
>     if ((int )exclude_invariants) {
> #line 104
>       printk("\016<< must not change invariant attr: %s\n", (char *)"max_bio_bvecs");
> #line 104
>       return (-17);
>     } else {
> 
>     }
> #line 104
>     if ((unsigned long )s != (unsigned long )((struct disk_conf *)0)) {
> #line 104
>       s->max_bio_bvecs = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
51548,51563c52724,52734
<   ldv_52065: 
< #line 41
<   tags = tags + (unsigned long )dlen;
<   ldv_52133: 
< #line 41
<   tmp___19 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   tmp___20 = get_unaligned_le16((void const   *)tmp___19);
< #line 41
<   tag = (int )tmp___20;
< #line 41
<   if (tag != 0) {
< #line 42
<     goto ldv_52132;
---
> #line 104
>   nla = *(ntb + 6UL);
> #line 104
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 104
>     if ((unsigned long )s != (unsigned long )((struct disk_conf *)0)) {
> #line 104
>       s->on_io_error = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
51566a52738,52746
> #line 104
>   nla = *(ntb + 7UL);
> #line 104
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 104
>     if ((unsigned long )s != (unsigned long )((struct disk_conf *)0)) {
> #line 104
>       s->fencing = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
51568,51582c52748,52749
< #line 41
<   return (1);
< }
< }
< #line 77
< static int disconnect_from_tags(struct drbd_conf *mdev , unsigned short *tags , struct disconnect *arg ) ;
< #line 77 "include/linux/drbd_nl.h"
< static int disconnect_from_tags(struct drbd_conf *mdev , unsigned short *tags , struct disconnect *arg ) 
< { 
<   int tag ;
<   int dlen ;
<   unsigned short *tmp ;
<   u16 tmp___0 ;
<   unsigned short *tmp___1 ;
<   u16 tmp___2 ;
---
>     }
>   } else {
51584,51610c52751,52762
<   {
< #line 75
<   goto ldv_52150;
<   ldv_52149: 
< #line 75
<   tmp = tags;
< #line 75
<   tags = tags + 1;
< #line 75
<   tmp___0 = get_unaligned_le16((void const   *)tmp);
< #line 75
<   dlen = (int )tmp___0;
< #line 75
<   switch (tag & 8191) {
<   case 84: 
< #line 75
<   arg->force = (int )((signed char )*((char *)tags)) != 0;
< #line 75
<   goto ldv_52147;
<   default: ;
< #line 75
<   if ((tag & 8192) != 0) {
< #line 75
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Unknown tag: %d\n",
<             tag & 8191);
< #line 75
<     return (0);
---
>   }
> #line 104
>   nla = *(ntb + 8UL);
> #line 104
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 104
>     if ((unsigned long )s != (unsigned long )((struct disk_conf *)0)) {
> #line 104
>       s->resync_rate = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
51613a52766,52780
> #line 104
>   nla = *(ntb + 9UL);
> #line 104
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 104
>     if ((unsigned long )s != (unsigned long )((struct disk_conf *)0)) {
> #line 104
>       tmp___2 = nla_get_u32((struct nlattr  const  *)nla);
> #line 104
>       s->resync_after = (__s32 )tmp___2;
>     } else {
> 
>     }
>   } else {
> 
51615,51630c52782,52792
<   ldv_52147: 
< #line 75
<   tags = tags + (unsigned long )dlen;
<   ldv_52150: 
< #line 75
<   tmp___1 = tags;
< #line 75
<   tags = tags + 1;
< #line 75
<   tmp___2 = get_unaligned_le16((void const   *)tmp___1);
< #line 75
<   tag = (int )tmp___2;
< #line 75
<   if (tag != 0) {
< #line 76
<     goto ldv_52149;
---
> #line 104
>   nla = *(ntb + 10UL);
> #line 104
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 104
>     if ((unsigned long )s != (unsigned long )((struct disk_conf *)0)) {
> #line 104
>       s->al_extents = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
51633a52796,52804
> #line 104
>   nla = *(ntb + 11UL);
> #line 104
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 104
>     if ((unsigned long )s != (unsigned long )((struct disk_conf *)0)) {
> #line 104
>       s->c_plan_ahead = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
51635,51649c52806,52807
< #line 75
<   return (1);
< }
< }
< #line 83
< static int resize_from_tags(struct drbd_conf *mdev , unsigned short *tags , struct resize *arg ) ;
< #line 83 "include/linux/drbd_nl.h"
< static int resize_from_tags(struct drbd_conf *mdev , unsigned short *tags , struct resize *arg ) 
< { 
<   int tag ;
<   int dlen ;
<   unsigned short *tmp ;
<   u16 tmp___0 ;
<   unsigned short *tmp___1 ;
<   u16 tmp___2 ;
---
>     }
>   } else {
51651,51687c52809,52820
<   {
< #line 79
<   goto ldv_52169;
<   ldv_52168: 
< #line 79
<   tmp = tags;
< #line 79
<   tags = tags + 1;
< #line 79
<   tmp___0 = get_unaligned_le16((void const   *)tmp);
< #line 79
<   dlen = (int )tmp___0;
< #line 79
<   switch (tag & 8191) {
<   case 29: 
< #line 79
<   arg->resize_size = get_unaligned_le64((void const   *)tags);
< #line 79
<   goto ldv_52164;
<   case 68: 
< #line 79
<   arg->resize_force = (int )((signed char )*((char *)tags)) != 0;
< #line 79
<   goto ldv_52164;
<   case 69: 
< #line 79
<   arg->no_resync = (int )((signed char )*((char *)tags)) != 0;
< #line 79
<   goto ldv_52164;
<   default: ;
< #line 79
<   if ((tag & 8192) != 0) {
< #line 79
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Unknown tag: %d\n",
<             tag & 8191);
< #line 79
<     return (0);
---
>   }
> #line 104
>   nla = *(ntb + 12UL);
> #line 104
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 104
>     if ((unsigned long )s != (unsigned long )((struct disk_conf *)0)) {
> #line 104
>       s->c_delay_target = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
51690a52824,52836
> #line 104
>   nla = *(ntb + 13UL);
> #line 104
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 104
>     if ((unsigned long )s != (unsigned long )((struct disk_conf *)0)) {
> #line 104
>       s->c_fill_target = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
51692,51707c52838,52848
<   ldv_52164: 
< #line 79
<   tags = tags + (unsigned long )dlen;
<   ldv_52169: 
< #line 79
<   tmp___1 = tags;
< #line 79
<   tags = tags + 1;
< #line 79
<   tmp___2 = get_unaligned_le16((void const   *)tmp___1);
< #line 79
<   tag = (int )tmp___2;
< #line 79
<   if (tag != 0) {
< #line 80
<     goto ldv_52168;
---
> #line 104
>   nla = *(ntb + 14UL);
> #line 104
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 104
>     if ((unsigned long )s != (unsigned long )((struct disk_conf *)0)) {
> #line 104
>       s->c_max_rate = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
51710a52852,52860
> #line 104
>   nla = *(ntb + 15UL);
> #line 104
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 104
>     if ((unsigned long )s != (unsigned long )((struct disk_conf *)0)) {
> #line 104
>       s->c_min_rate = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
51712,51715c52862,52865
< #line 79
<   return (1);
< }
< }
---
>     }
>   } else {
> 
>   }
51717,51747c52867,52876
< static int syncer_conf_from_tags(struct drbd_conf *mdev , unsigned short *tags , struct syncer_conf *arg ) ;
< #line 104 "include/linux/drbd_nl.h"
< static int syncer_conf_from_tags(struct drbd_conf *mdev , unsigned short *tags , struct syncer_conf *arg ) 
< { 
<   int tag ;
<   int dlen ;
<   unsigned short *tmp ;
<   u16 tmp___0 ;
<   u32 tmp___1 ;
<   u32 tmp___2 ;
<   u32 tmp___3 ;
<   size_t __len ;
<   size_t __min1 ;
<   size_t __min2 ;
<   void *__ret ;
<   size_t __len___0 ;
<   size_t __min1___0 ;
<   size_t __min2___0 ;
<   void *__ret___0 ;
<   size_t __len___1 ;
<   size_t __min1___1 ;
<   size_t __min2___1 ;
<   void *__ret___1 ;
<   u32 tmp___4 ;
<   u32 tmp___5 ;
<   u32 tmp___6 ;
<   u32 tmp___7 ;
<   u32 tmp___8 ;
<   u32 tmp___9 ;
<   unsigned short *tmp___10 ;
<   u16 tmp___11 ;
---
>   nla = *(ntb + 16UL);
> #line 104
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 104
>     if ((unsigned long )s != (unsigned long )((struct disk_conf *)0)) {
> #line 104
>       tmp___3 = nla_get_u8((struct nlattr  const  *)nla);
> #line 104
>       s->disk_barrier = (char )tmp___3;
>     } else {
51749,51791c52878
<   {
< #line 85
<   goto ldv_52225;
<   ldv_52224: 
< #line 85
<   tmp = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   tmp___0 = get_unaligned_le16((void const   *)tmp);
< #line 85
<   dlen = (int )tmp___0;
< #line 85
<   switch (tag & 8191) {
<   case 30: 
< #line 85
<   tmp___1 = get_unaligned_le32((void const   *)tags);
< #line 85
<   arg->rate = (int )tmp___1;
< #line 85
<   goto ldv_52183;
<   case 31: 
< #line 85
<   tmp___2 = get_unaligned_le32((void const   *)tags);
< #line 85
<   arg->after = (int )tmp___2;
< #line 85
<   goto ldv_52183;
<   case 32: 
< #line 85
<   tmp___3 = get_unaligned_le32((void const   *)tags);
< #line 85
<   arg->al_extents = (int )tmp___3;
< #line 85
<   goto ldv_52183;
<   case 52: ;
< #line 85
<   if (dlen > 64) {
< #line 85
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "arg too long: %s (%u wanted, max len: %u bytes)\n",
<             (char *)"verify_alg", dlen, 64U);
< #line 85
<     return (0);
---
>     }
51795,51814c52882,52894
< #line 85
<   arg->verify_alg_len = dlen;
< #line 85
<   __min1 = (size_t )dlen;
< #line 85
<   __min2 = 64UL;
< #line 85
<   __len = __min1 < __min2 ? __min1 : __min2;
< #line 85
<   __ret = __builtin_memcpy((void *)(& arg->verify_alg), (void const   *)tags, __len);
< #line 85
<   goto ldv_52183;
<   case 51: ;
< #line 85
<   if (dlen > 32) {
< #line 85
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "arg too long: %s (%u wanted, max len: %u bytes)\n",
<             (char *)"cpu_mask", dlen, 32U);
< #line 85
<     return (0);
---
> #line 104
>   nla = *(ntb + 17UL);
> #line 104
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 104
>     if ((unsigned long )s != (unsigned long )((struct disk_conf *)0)) {
> #line 104
>       tmp___4 = nla_get_u8((struct nlattr  const  *)nla);
> #line 104
>       s->disk_flushes = (char )tmp___4;
>     } else {
> 
>     }
51818,51837c52898,52910
< #line 85
<   arg->cpu_mask_len = dlen;
< #line 85
<   __min1___0 = (size_t )dlen;
< #line 85
<   __min2___0 = 32UL;
< #line 85
<   __len___0 = __min1___0 < __min2___0 ? __min1___0 : __min2___0;
< #line 85
<   __ret___0 = __builtin_memcpy((void *)(& arg->cpu_mask), (void const   *)tags, __len___0);
< #line 85
<   goto ldv_52183;
<   case 64: ;
< #line 85
<   if (dlen > 64) {
< #line 85
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "arg too long: %s (%u wanted, max len: %u bytes)\n",
<             (char *)"csums_alg", dlen, 64U);
< #line 85
<     return (0);
---
> #line 104
>   nla = *(ntb + 18UL);
> #line 104
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 104
>     if ((unsigned long )s != (unsigned long )((struct disk_conf *)0)) {
> #line 104
>       tmp___5 = nla_get_u8((struct nlattr  const  *)nla);
> #line 104
>       s->disk_drain = (char )tmp___5;
>     } else {
> 
>     }
51841,51907c52914,52940
< #line 85
<   arg->csums_alg_len = dlen;
< #line 85
<   __min1___1 = (size_t )dlen;
< #line 85
<   __min2___1 = 64UL;
< #line 85
<   __len___1 = __min1___1 < __min2___1 ? __min1___1 : __min2___1;
< #line 85
<   __ret___1 = __builtin_memcpy((void *)(& arg->csums_alg), (void const   *)tags, __len___1);
< #line 85
<   goto ldv_52183;
<   case 65: 
< #line 85
<   arg->use_rle = (int )((signed char )*((char *)tags)) != 0;
< #line 85
<   goto ldv_52183;
<   case 75: 
< #line 85
<   tmp___4 = get_unaligned_le32((void const   *)tags);
< #line 85
<   arg->on_no_data = (int )tmp___4;
< #line 85
<   goto ldv_52183;
<   case 76: 
< #line 85
<   tmp___5 = get_unaligned_le32((void const   *)tags);
< #line 85
<   arg->c_plan_ahead = (int )tmp___5;
< #line 85
<   goto ldv_52183;
<   case 77: 
< #line 85
<   tmp___6 = get_unaligned_le32((void const   *)tags);
< #line 85
<   arg->c_delay_target = (int )tmp___6;
< #line 85
<   goto ldv_52183;
<   case 78: 
< #line 85
<   tmp___7 = get_unaligned_le32((void const   *)tags);
< #line 85
<   arg->c_fill_target = (int )tmp___7;
< #line 85
<   goto ldv_52183;
<   case 79: 
< #line 85
<   tmp___8 = get_unaligned_le32((void const   *)tags);
< #line 85
<   arg->c_max_rate = (int )tmp___8;
< #line 85
<   goto ldv_52183;
<   case 80: 
< #line 85
<   tmp___9 = get_unaligned_le32((void const   *)tags);
< #line 85
<   arg->c_min_rate = (int )tmp___9;
< #line 85
<   goto ldv_52183;
<   default: ;
< #line 85
<   if ((tag & 8192) != 0) {
< #line 85
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Unknown tag: %d\n",
<             tag & 8191);
< #line 85
<     return (0);
---
> #line 104
>   nla = *(ntb + 19UL);
> #line 104
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 104
>     if ((unsigned long )s != (unsigned long )((struct disk_conf *)0)) {
> #line 104
>       tmp___6 = nla_get_u8((struct nlattr  const  *)nla);
> #line 104
>       s->md_flushes = (char )tmp___6;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 104
>   nla = *(ntb + 20UL);
> #line 104
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 104
>     if ((unsigned long )s != (unsigned long )((struct disk_conf *)0)) {
> #line 104
>       s->disk_timeout = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
51910a52944,52956
> #line 104
>   nla = *(ntb + 21UL);
> #line 104
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 104
>     if ((unsigned long )s != (unsigned long )((struct disk_conf *)0)) {
> #line 104
>       s->read_balancing = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
51912,51927c52958,52970
<   ldv_52183: 
< #line 85
<   tags = tags + (unsigned long )dlen;
<   ldv_52225: 
< #line 85
<   tmp___10 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   tmp___11 = get_unaligned_le16((void const   *)tmp___10);
< #line 85
<   tag = (int )tmp___11;
< #line 85
<   if (tag != 0) {
< #line 86
<     goto ldv_52224;
---
> #line 104
>   nla = *(ntb + 23UL);
> #line 104
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 104
>     if ((unsigned long )s != (unsigned long )((struct disk_conf *)0)) {
> #line 104
>       tmp___7 = nla_get_u8((struct nlattr  const  *)nla);
> #line 104
>       s->al_updates = (char )tmp___7;
>     } else {
> 
>     }
51930a52974,52981
> #line 104
>   return (0);
> }
> }
> #line 135 "include/linux/drbd_genl.h"
> static int disk_conf_from_attrs(struct disk_conf *s , struct genl_info *info ) 
> { 
>   int tmp ;
51932,51933c52983,52987
< #line 85
<   return (1);
---
>   {
> #line 104
>   tmp = __disk_conf_from_attrs(s, info, 0);
> #line 104
>   return (tmp);
51936,51946c52990,52993
< #line 149
< static int start_ov_from_tags(struct drbd_conf *mdev , unsigned short *tags , struct start_ov *arg ) ;
< #line 149 "include/linux/drbd_nl.h"
< static int start_ov_from_tags(struct drbd_conf *mdev , unsigned short *tags , struct start_ov *arg ) 
< { 
<   int tag ;
<   int dlen ;
<   unsigned short *tmp ;
<   u16 tmp___0 ;
<   unsigned short *tmp___1 ;
<   u16 tmp___2 ;
---
> #line 135 "include/linux/drbd_genl.h"
> static int disk_conf_from_attrs_for_change(struct disk_conf *s , struct genl_info *info ) 
> { 
>   int tmp ;
51949,51979c52996,53022
< #line 146
<   goto ldv_52525;
<   ldv_52524: 
< #line 146
<   tmp = tags;
< #line 146
<   tags = tags + 1;
< #line 146
<   tmp___0 = get_unaligned_le16((void const   *)tmp);
< #line 146
<   dlen = (int )tmp___0;
< #line 146
<   switch (tag & 8191) {
<   case 66: 
< #line 146
<   arg->start_sector = get_unaligned_le64((void const   *)tags);
< #line 146
<   goto ldv_52521;
<   case 90: 
< #line 146
<   arg->stop_sector = get_unaligned_le64((void const   *)tags);
< #line 146
<   goto ldv_52521;
<   default: ;
< #line 146
<   if ((tag & 8192) != 0) {
< #line 146
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Unknown tag: %d\n",
<             tag & 8191);
< #line 146
<     return (0);
---
> #line 104
>   tmp = __disk_conf_from_attrs(s, info, 1);
> #line 104
>   return (tmp);
> }
> }
> #line 140 "include/linux/drbd_genl.h"
> static int __res_opts_from_attrs(struct res_opts *s , struct genl_info *info , bool exclude_invariants ) 
> { 
>   int maxtype ;
>   struct nlattr *tla ;
>   struct nlattr **ntb ;
>   struct nlattr *nla ;
>   int err ;
>   size_t tmp ;
> 
>   {
> #line 137
>   maxtype = 2;
> #line 137
>   tla = *(info->attrs + 4UL);
> #line 137
>   ntb = (struct nlattr **)(& nested_attr_tb);
> #line 137
>   if ((unsigned long )tla == (unsigned long )((struct nlattr *)0)) {
> #line 137
>     return (-42);
51982a53026,53033
> #line 137
>   err = drbd_nla_parse_nested(ntb, maxtype, tla, (struct nla_policy  const  *)(& res_opts_nl_policy));
> #line 137
>   if (err != 0) {
> #line 137
>     return (err);
>   } else {
> 
51984,51999c53035,53047
<   ldv_52521: 
< #line 146
<   tags = tags + (unsigned long )dlen;
<   ldv_52525: 
< #line 146
<   tmp___1 = tags;
< #line 146
<   tags = tags + 1;
< #line 146
<   tmp___2 = get_unaligned_le16((void const   *)tmp___1);
< #line 146
<   tag = (int )tmp___2;
< #line 146
<   if (tag != 0) {
< #line 147
<     goto ldv_52524;
---
> #line 137
>   nla = *(ntb + 1UL);
> #line 137
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 137
>     if ((unsigned long )s != (unsigned long )((struct res_opts *)0)) {
> #line 137
>       tmp = nla_strlcpy((char *)(& s->cpu_mask), (struct nlattr  const  *)nla, 32UL);
> #line 137
>       s->cpu_mask_len = (__u32 )tmp;
>     } else {
> 
>     }
52002a53051,53059
> #line 137
>   nla = *(ntb + 2UL);
> #line 137
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 137
>     if ((unsigned long )s != (unsigned long )((struct res_opts *)0)) {
> #line 137
>       s->on_no_data = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
52004,52005c53061,53066
< #line 146
<   return (1);
---
>     }
>   } else {
> 
>   }
> #line 137
>   return (0);
52008,52018c53069,53072
< #line 153
< static int new_c_uuid_from_tags(struct drbd_conf *mdev , unsigned short *tags , struct new_c_uuid *arg ) ;
< #line 153 "include/linux/drbd_nl.h"
< static int new_c_uuid_from_tags(struct drbd_conf *mdev , unsigned short *tags , struct new_c_uuid *arg ) 
< { 
<   int tag ;
<   int dlen ;
<   unsigned short *tmp ;
<   u16 tmp___0 ;
<   unsigned short *tmp___1 ;
<   u16 tmp___2 ;
---
> #line 140 "include/linux/drbd_genl.h"
> static int res_opts_from_attrs(struct res_opts *s , struct genl_info *info ) 
> { 
>   int tmp ;
52021,52046c53075,53111
< #line 151
<   goto ldv_52542;
<   ldv_52541: 
< #line 151
<   tmp = tags;
< #line 151
<   tags = tags + 1;
< #line 151
<   tmp___0 = get_unaligned_le16((void const   *)tmp);
< #line 151
<   dlen = (int )tmp___0;
< #line 151
<   switch (tag & 8191) {
<   case 63: 
< #line 151
<   arg->clear_bm = (int )((signed char )*((char *)tags)) != 0;
< #line 151
<   goto ldv_52539;
<   default: ;
< #line 151
<   if ((tag & 8192) != 0) {
< #line 151
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Unknown tag: %d\n",
<             tag & 8191);
< #line 151
<     return (0);
---
> #line 137
>   tmp = __res_opts_from_attrs(s, info, 0);
> #line 137
>   return (tmp);
> }
> }
> #line 174 "include/linux/drbd_genl.h"
> static int __net_conf_from_attrs(struct net_conf *s , struct genl_info *info , bool exclude_invariants ) 
> { 
>   int maxtype ;
>   struct nlattr *tla ;
>   struct nlattr **ntb ;
>   struct nlattr *nla ;
>   int err ;
>   size_t tmp ;
>   size_t tmp___0 ;
>   size_t tmp___1 ;
>   size_t tmp___2 ;
>   size_t tmp___3 ;
>   u8 tmp___4 ;
>   u8 tmp___5 ;
>   u8 tmp___6 ;
>   u8 tmp___7 ;
>   u8 tmp___8 ;
>   u8 tmp___9 ;
> 
>   {
> #line 142
>   maxtype = 29;
> #line 142
>   tla = *(info->attrs + 5UL);
> #line 142
>   ntb = (struct nlattr **)(& nested_attr_tb);
> #line 142
>   if ((unsigned long )tla == (unsigned long )((struct nlattr *)0)) {
> #line 142
>     return (-42);
52049a53115,53122
> #line 142
>   err = drbd_nla_parse_nested(ntb, maxtype, tla, (struct nla_policy  const  *)(& net_conf_nl_policy));
> #line 142
>   if (err != 0) {
> #line 142
>     return (err);
>   } else {
> 
52051,52066c53124,53137
<   ldv_52539: 
< #line 151
<   tags = tags + (unsigned long )dlen;
<   ldv_52542: 
< #line 151
<   tmp___1 = tags;
< #line 151
<   tags = tags + 1;
< #line 151
<   tmp___2 = get_unaligned_le16((void const   *)tmp___1);
< #line 151
<   tag = (int )tmp___2;
< #line 151
<   if (tag != 0) {
< #line 152
<     goto ldv_52541;
---
> #line 142
>   nla = *(ntb + 1UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       tmp = nla_strlcpy((char *)(& s->shared_secret), (struct nlattr  const  *)nla,
>                         64UL);
> #line 142
>       s->shared_secret_len = (__u32 )tmp;
>     } else {
> 
>     }
52069a53141,53152
> #line 142
>   nla = *(ntb + 2UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       tmp___0 = nla_strlcpy((char *)(& s->cram_hmac_alg), (struct nlattr  const  *)nla,
>                             64UL);
> #line 142
>       s->cram_hmac_alg_len = (__u32 )tmp___0;
>     } else {
52071,52143c53154,53155
< #line 151
<   return (1);
< }
< }
< #line 35
< static unsigned short *disk_conf_to_tags(struct drbd_conf *mdev , struct disk_conf *arg ,
<                                          unsigned short *tags ) ;
< #line 35 "include/linux/drbd_nl.h"
< static unsigned short *disk_conf_to_tags(struct drbd_conf *mdev , struct disk_conf *arg ,
<                                          unsigned short *tags ) 
< { 
<   void *__gu_p ;
<   unsigned short *tmp ;
<   void *__gu_p___0 ;
<   unsigned short *tmp___0 ;
<   void *__gu_p___1 ;
<   void *__gu_p___2 ;
<   unsigned short *tmp___1 ;
<   void *__gu_p___3 ;
<   unsigned short *tmp___2 ;
<   size_t __len ;
<   void *__ret ;
<   void *__gu_p___4 ;
<   unsigned short *tmp___3 ;
<   void *__gu_p___5 ;
<   unsigned short *tmp___4 ;
<   size_t __len___0 ;
<   void *__ret___0 ;
<   void *__gu_p___6 ;
<   unsigned short *tmp___5 ;
<   void *__gu_p___7 ;
<   unsigned short *tmp___6 ;
<   void *__gu_p___8 ;
<   void *__gu_p___9 ;
<   unsigned short *tmp___7 ;
<   void *__gu_p___10 ;
<   unsigned short *tmp___8 ;
<   void *__gu_p___11 ;
<   void *__gu_p___12 ;
<   unsigned short *tmp___9 ;
<   void *__gu_p___13 ;
<   unsigned short *tmp___10 ;
<   void *__gu_p___14 ;
<   void *__gu_p___15 ;
<   unsigned short *tmp___11 ;
<   void *__gu_p___16 ;
<   unsigned short *tmp___12 ;
<   void *__gu_p___17 ;
<   unsigned short *tmp___13 ;
<   void *__gu_p___18 ;
<   unsigned short *tmp___14 ;
<   void *__gu_p___19 ;
<   unsigned short *tmp___15 ;
<   void *__gu_p___20 ;
<   unsigned short *tmp___16 ;
<   void *__gu_p___21 ;
<   unsigned short *tmp___17 ;
<   void *__gu_p___22 ;
<   unsigned short *tmp___18 ;
<   void *__gu_p___23 ;
<   void *__gu_p___24 ;
<   unsigned short *tmp___19 ;
<   void *__gu_p___25 ;
<   unsigned short *tmp___20 ;
<   void *__gu_p___26 ;
<   unsigned short *tmp___21 ;
<   void *__gu_p___27 ;
<   unsigned short *tmp___22 ;
<   void *__gu_p___28 ;
<   unsigned short *tmp___23 ;
<   void *__gu_p___29 ;
<   unsigned short *tmp___24 ;
<   void *__gu_p___30 ;
---
>     }
>   } else {
52145,52178d53156
<   {
< #line 20
<   tmp = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p = (void *)tmp;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p) = 2U;
< #line 20
<   goto ldv_52587;
<   case 2UL: 
< #line 20
<   put_unaligned_le16(16386, __gu_p);
< #line 20
<   goto ldv_52587;
<   case 4UL: 
< #line 20
<   put_unaligned_le32(16386U, __gu_p);
< #line 20
<   goto ldv_52587;
<   case 8UL: 
< #line 20
<   put_unaligned_le64(16386ULL, __gu_p);
< #line 20
<   goto ldv_52587;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52587;
52180,52213c53158,53173
<   ldv_52587: 
< #line 20
<   tmp___0 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p___0 = (void *)tmp___0;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___0) = 8U;
< #line 20
<   goto ldv_52594;
<   case 2UL: 
< #line 20
<   put_unaligned_le16(8, __gu_p___0);
< #line 20
<   goto ldv_52594;
<   case 4UL: 
< #line 20
<   put_unaligned_le32(8U, __gu_p___0);
< #line 20
<   goto ldv_52594;
<   case 8UL: 
< #line 20
<   put_unaligned_le64(8ULL, __gu_p___0);
< #line 20
<   goto ldv_52594;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52594;
---
> #line 142
>   nla = *(ntb + 3UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       tmp___1 = nla_strlcpy((char *)(& s->integrity_alg), (struct nlattr  const  *)nla,
>                             64UL);
> #line 142
>       s->integrity_alg_len = (__u32 )tmp___1;
>     } else {
> 
>     }
>   } else {
> 
52215,52244c53175,53190
<   ldv_52594: 
< #line 20
<   __gu_p___1 = (void *)tags;
< #line 20
<   switch (8UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___1) = (unsigned char )arg->disk_size;
< #line 20
<   goto ldv_52601;
<   case 2UL: 
< #line 20
<   put_unaligned_le16((int )((unsigned short )arg->disk_size), __gu_p___1);
< #line 20
<   goto ldv_52601;
<   case 4UL: 
< #line 20
<   put_unaligned_le32((unsigned int )arg->disk_size, __gu_p___1);
< #line 20
<   goto ldv_52601;
<   case 8UL: 
< #line 20
<   put_unaligned_le64(arg->disk_size, __gu_p___1);
< #line 20
<   goto ldv_52601;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52601;
---
> #line 142
>   nla = *(ntb + 4UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       tmp___2 = nla_strlcpy((char *)(& s->verify_alg), (struct nlattr  const  *)nla,
>                             64UL);
> #line 142
>       s->verify_alg_len = (__u32 )tmp___2;
>     } else {
> 
>     }
>   } else {
> 
52246,52281c53192,53207
<   ldv_52601: 
< #line 20
<   tags = tags + 8U;
< #line 20
<   tmp___1 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p___2 = (void *)tmp___1;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___2) = 3U;
< #line 20
<   goto ldv_52608;
<   case 2UL: 
< #line 20
<   put_unaligned_le16(57347, __gu_p___2);
< #line 20
<   goto ldv_52608;
<   case 4UL: 
< #line 20
<   put_unaligned_le32(57347U, __gu_p___2);
< #line 20
<   goto ldv_52608;
<   case 8UL: 
< #line 20
<   put_unaligned_le64(57347ULL, __gu_p___2);
< #line 20
<   goto ldv_52608;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52608;
---
> #line 142
>   nla = *(ntb + 5UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       tmp___3 = nla_strlcpy((char *)(& s->csums_alg), (struct nlattr  const  *)nla,
>                             64UL);
> #line 142
>       s->csums_alg_len = (__u32 )tmp___3;
>     } else {
> 
>     }
>   } else {
> 
52283,52316c53209,53221
<   ldv_52608: 
< #line 20
<   tmp___2 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p___3 = (void *)tmp___2;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___3) = (unsigned char )arg->backing_dev_len;
< #line 20
<   goto ldv_52615;
<   case 2UL: 
< #line 20
<   put_unaligned_le16((int )((unsigned short )arg->backing_dev_len), __gu_p___3);
< #line 20
<   goto ldv_52615;
<   case 4UL: 
< #line 20
<   put_unaligned_le32((unsigned int )arg->backing_dev_len, __gu_p___3);
< #line 20
<   goto ldv_52615;
<   case 8UL: 
< #line 20
<   put_unaligned_le64((unsigned long long )arg->backing_dev_len, __gu_p___3);
< #line 20
<   goto ldv_52615;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52615;
---
> #line 142
>   nla = *(ntb + 6UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       s->wire_protocol = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
52318,52357c53223,53235
<   ldv_52615: 
< #line 20
<   __len = (size_t )arg->backing_dev_len;
< #line 20
<   __ret = __builtin_memcpy((void *)tags, (void const   *)(& arg->backing_dev), __len);
< #line 20
<   tags = tags + (unsigned long )arg->backing_dev_len;
< #line 20
<   tmp___3 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p___4 = (void *)tmp___3;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___4) = 4U;
< #line 20
<   goto ldv_52625;
<   case 2UL: 
< #line 20
<   put_unaligned_le16(57348, __gu_p___4);
< #line 20
<   goto ldv_52625;
<   case 4UL: 
< #line 20
<   put_unaligned_le32(57348U, __gu_p___4);
< #line 20
<   goto ldv_52625;
<   case 8UL: 
< #line 20
<   put_unaligned_le64(57348ULL, __gu_p___4);
< #line 20
<   goto ldv_52625;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52625;
---
> #line 142
>   nla = *(ntb + 7UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       s->connect_int = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
52359,52392c53237,53249
<   ldv_52625: 
< #line 20
<   tmp___4 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p___5 = (void *)tmp___4;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___5) = (unsigned char )arg->meta_dev_len;
< #line 20
<   goto ldv_52632;
<   case 2UL: 
< #line 20
<   put_unaligned_le16((int )((unsigned short )arg->meta_dev_len), __gu_p___5);
< #line 20
<   goto ldv_52632;
<   case 4UL: 
< #line 20
<   put_unaligned_le32((unsigned int )arg->meta_dev_len, __gu_p___5);
< #line 20
<   goto ldv_52632;
<   case 8UL: 
< #line 20
<   put_unaligned_le64((unsigned long long )arg->meta_dev_len, __gu_p___5);
< #line 20
<   goto ldv_52632;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52632;
---
> #line 142
>   nla = *(ntb + 8UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       s->timeout = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
52394,52433c53251,53263
<   ldv_52632: 
< #line 20
<   __len___0 = (size_t )arg->meta_dev_len;
< #line 20
<   __ret___0 = __builtin_memcpy((void *)tags, (void const   *)(& arg->meta_dev), __len___0);
< #line 20
<   tags = tags + (unsigned long )arg->meta_dev_len;
< #line 20
<   tmp___5 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p___6 = (void *)tmp___5;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___6) = 5U;
< #line 20
<   goto ldv_52642;
<   case 2UL: 
< #line 20
<   put_unaligned_le16(8197, __gu_p___6);
< #line 20
<   goto ldv_52642;
<   case 4UL: 
< #line 20
<   put_unaligned_le32(8197U, __gu_p___6);
< #line 20
<   goto ldv_52642;
<   case 8UL: 
< #line 20
<   put_unaligned_le64(8197ULL, __gu_p___6);
< #line 20
<   goto ldv_52642;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52642;
---
> #line 142
>   nla = *(ntb + 9UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       s->ping_int = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
52435,52468c53265,53277
<   ldv_52642: 
< #line 20
<   tmp___6 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p___7 = (void *)tmp___6;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___7) = 4U;
< #line 20
<   goto ldv_52649;
<   case 2UL: 
< #line 20
<   put_unaligned_le16(4, __gu_p___7);
< #line 20
<   goto ldv_52649;
<   case 4UL: 
< #line 20
<   put_unaligned_le32(4U, __gu_p___7);
< #line 20
<   goto ldv_52649;
<   case 8UL: 
< #line 20
<   put_unaligned_le64(4ULL, __gu_p___7);
< #line 20
<   goto ldv_52649;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52649;
---
> #line 142
>   nla = *(ntb + 10UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       s->ping_timeo = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
52470,52499c53279,53291
<   ldv_52649: 
< #line 20
<   __gu_p___8 = (void *)tags;
< #line 20
<   switch (4UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___8) = (unsigned char )arg->meta_dev_idx;
< #line 20
<   goto ldv_52656;
<   case 2UL: 
< #line 20
<   put_unaligned_le16((int )((unsigned short )arg->meta_dev_idx), __gu_p___8);
< #line 20
<   goto ldv_52656;
<   case 4UL: 
< #line 20
<   put_unaligned_le32((unsigned int )arg->meta_dev_idx, __gu_p___8);
< #line 20
<   goto ldv_52656;
<   case 8UL: 
< #line 20
<   put_unaligned_le64((unsigned long long )arg->meta_dev_idx, __gu_p___8);
< #line 20
<   goto ldv_52656;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52656;
---
> #line 142
>   nla = *(ntb + 11UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       s->sndbuf_size = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
52501,52536c53293,53305
<   ldv_52656: 
< #line 20
<   tags = tags + 4U;
< #line 20
<   tmp___7 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p___9 = (void *)tmp___7;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___9) = 6U;
< #line 20
<   goto ldv_52663;
<   case 2UL: 
< #line 20
<   put_unaligned_le16(6, __gu_p___9);
< #line 20
<   goto ldv_52663;
<   case 4UL: 
< #line 20
<   put_unaligned_le32(6U, __gu_p___9);
< #line 20
<   goto ldv_52663;
<   case 8UL: 
< #line 20
<   put_unaligned_le64(6ULL, __gu_p___9);
< #line 20
<   goto ldv_52663;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52663;
---
> #line 142
>   nla = *(ntb + 12UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       s->rcvbuf_size = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
52538,52571c53307,53319
<   ldv_52663: 
< #line 20
<   tmp___8 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p___10 = (void *)tmp___8;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___10) = 4U;
< #line 20
<   goto ldv_52670;
<   case 2UL: 
< #line 20
<   put_unaligned_le16(4, __gu_p___10);
< #line 20
<   goto ldv_52670;
<   case 4UL: 
< #line 20
<   put_unaligned_le32(4U, __gu_p___10);
< #line 20
<   goto ldv_52670;
<   case 8UL: 
< #line 20
<   put_unaligned_le64(4ULL, __gu_p___10);
< #line 20
<   goto ldv_52670;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52670;
---
> #line 142
>   nla = *(ntb + 13UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       s->ko_count = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
52573,52602c53321,53333
<   ldv_52670: 
< #line 20
<   __gu_p___11 = (void *)tags;
< #line 20
<   switch (4UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___11) = (unsigned char )arg->on_io_error;
< #line 20
<   goto ldv_52677;
<   case 2UL: 
< #line 20
<   put_unaligned_le16((int )((unsigned short )arg->on_io_error), __gu_p___11);
< #line 20
<   goto ldv_52677;
<   case 4UL: 
< #line 20
<   put_unaligned_le32((unsigned int )arg->on_io_error, __gu_p___11);
< #line 20
<   goto ldv_52677;
<   case 8UL: 
< #line 20
<   put_unaligned_le64((unsigned long long )arg->on_io_error, __gu_p___11);
< #line 20
<   goto ldv_52677;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52677;
---
> #line 142
>   nla = *(ntb + 14UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       s->max_buffers = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
52604,52639c53335,53347
<   ldv_52677: 
< #line 20
<   tags = tags + 4U;
< #line 20
<   tmp___9 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p___12 = (void *)tmp___9;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___12) = 7U;
< #line 20
<   goto ldv_52684;
<   case 2UL: 
< #line 20
<   put_unaligned_le16(7, __gu_p___12);
< #line 20
<   goto ldv_52684;
<   case 4UL: 
< #line 20
<   put_unaligned_le32(7U, __gu_p___12);
< #line 20
<   goto ldv_52684;
<   case 8UL: 
< #line 20
<   put_unaligned_le64(7ULL, __gu_p___12);
< #line 20
<   goto ldv_52684;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52684;
---
> #line 142
>   nla = *(ntb + 15UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       s->max_epoch_size = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
52641,52674c53349,53361
<   ldv_52684: 
< #line 20
<   tmp___10 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p___13 = (void *)tmp___10;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___13) = 4U;
< #line 20
<   goto ldv_52691;
<   case 2UL: 
< #line 20
<   put_unaligned_le16(4, __gu_p___13);
< #line 20
<   goto ldv_52691;
<   case 4UL: 
< #line 20
<   put_unaligned_le32(4U, __gu_p___13);
< #line 20
<   goto ldv_52691;
<   case 8UL: 
< #line 20
<   put_unaligned_le64(4ULL, __gu_p___13);
< #line 20
<   goto ldv_52691;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52691;
---
> #line 142
>   nla = *(ntb + 16UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       s->unplug_watermark = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
52676,52705c53363,53375
<   ldv_52691: 
< #line 20
<   __gu_p___14 = (void *)tags;
< #line 20
<   switch (4UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___14) = (unsigned char )arg->fencing;
< #line 20
<   goto ldv_52698;
<   case 2UL: 
< #line 20
<   put_unaligned_le16((int )((unsigned short )arg->fencing), __gu_p___14);
< #line 20
<   goto ldv_52698;
<   case 4UL: 
< #line 20
<   put_unaligned_le32((unsigned int )arg->fencing, __gu_p___14);
< #line 20
<   goto ldv_52698;
<   case 8UL: 
< #line 20
<   put_unaligned_le64((unsigned long long )arg->fencing, __gu_p___14);
< #line 20
<   goto ldv_52698;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52698;
---
> #line 142
>   nla = *(ntb + 17UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       s->after_sb_0p = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
52707,52742c53377,53389
<   ldv_52698: 
< #line 20
<   tags = tags + 4U;
< #line 20
<   tmp___11 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p___15 = (void *)tmp___11;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___15) = 37U;
< #line 20
<   goto ldv_52705;
<   case 2UL: 
< #line 20
<   put_unaligned_le16(32805, __gu_p___15);
< #line 20
<   goto ldv_52705;
<   case 4UL: 
< #line 20
<   put_unaligned_le32(32805U, __gu_p___15);
< #line 20
<   goto ldv_52705;
<   case 8UL: 
< #line 20
<   put_unaligned_le64(32805ULL, __gu_p___15);
< #line 20
<   goto ldv_52705;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52705;
---
> #line 142
>   nla = *(ntb + 18UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       s->after_sb_1p = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
52744,52777c53391,53403
<   ldv_52705: 
< #line 20
<   tmp___12 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p___16 = (void *)tmp___12;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___16) = 1U;
< #line 20
<   goto ldv_52712;
<   case 2UL: 
< #line 20
<   put_unaligned_le16(1, __gu_p___16);
< #line 20
<   goto ldv_52712;
<   case 4UL: 
< #line 20
<   put_unaligned_le32(1U, __gu_p___16);
< #line 20
<   goto ldv_52712;
<   case 8UL: 
< #line 20
<   put_unaligned_le64(1ULL, __gu_p___16);
< #line 20
<   goto ldv_52712;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52712;
---
> #line 142
>   nla = *(ntb + 19UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       s->after_sb_2p = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
52779,52816c53405,53417
<   ldv_52712: 
< #line 20
<   *((char *)tags) = (char )arg->use_bmbv;
< #line 20
<   tags = tags + 1U;
< #line 20
<   tmp___13 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p___17 = (void *)tmp___13;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___17) = 53U;
< #line 20
<   goto ldv_52719;
<   case 2UL: 
< #line 20
<   put_unaligned_le16(32821, __gu_p___17);
< #line 20
<   goto ldv_52719;
<   case 4UL: 
< #line 20
<   put_unaligned_le32(32821U, __gu_p___17);
< #line 20
<   goto ldv_52719;
<   case 8UL: 
< #line 20
<   put_unaligned_le64(32821ULL, __gu_p___17);
< #line 20
<   goto ldv_52719;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52719;
---
> #line 142
>   nla = *(ntb + 20UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       s->rr_conflict = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
52818,52851c53419,53431
<   ldv_52719: 
< #line 20
<   tmp___14 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p___18 = (void *)tmp___14;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___18) = 1U;
< #line 20
<   goto ldv_52726;
<   case 2UL: 
< #line 20
<   put_unaligned_le16(1, __gu_p___18);
< #line 20
<   goto ldv_52726;
<   case 4UL: 
< #line 20
<   put_unaligned_le32(1U, __gu_p___18);
< #line 20
<   goto ldv_52726;
<   case 8UL: 
< #line 20
<   put_unaligned_le64(1ULL, __gu_p___18);
< #line 20
<   goto ldv_52726;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52726;
---
> #line 142
>   nla = *(ntb + 21UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       s->on_congestion = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
52853,52890c53433,53445
<   ldv_52726: 
< #line 20
<   *((char *)tags) = (char )arg->no_disk_flush;
< #line 20
<   tags = tags + 1U;
< #line 20
<   tmp___15 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p___19 = (void *)tmp___15;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___19) = 54U;
< #line 20
<   goto ldv_52733;
<   case 2UL: 
< #line 20
<   put_unaligned_le16(32822, __gu_p___19);
< #line 20
<   goto ldv_52733;
<   case 4UL: 
< #line 20
<   put_unaligned_le32(32822U, __gu_p___19);
< #line 20
<   goto ldv_52733;
<   case 8UL: 
< #line 20
<   put_unaligned_le64(32822ULL, __gu_p___19);
< #line 20
<   goto ldv_52733;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52733;
---
> #line 142
>   nla = *(ntb + 22UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       s->cong_fill = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
52892,52925c53447,53459
<   ldv_52733: 
< #line 20
<   tmp___16 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p___20 = (void *)tmp___16;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___20) = 1U;
< #line 20
<   goto ldv_52740;
<   case 2UL: 
< #line 20
<   put_unaligned_le16(1, __gu_p___20);
< #line 20
<   goto ldv_52740;
<   case 4UL: 
< #line 20
<   put_unaligned_le32(1U, __gu_p___20);
< #line 20
<   goto ldv_52740;
<   case 8UL: 
< #line 20
<   put_unaligned_le64(1ULL, __gu_p___20);
< #line 20
<   goto ldv_52740;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52740;
---
> #line 142
>   nla = *(ntb + 23UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       s->cong_extents = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
52927,52964c53461,53475
<   ldv_52740: 
< #line 20
<   *((char *)tags) = (char )arg->no_md_flush;
< #line 20
<   tags = tags + 1U;
< #line 20
<   tmp___17 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p___21 = (void *)tmp___17;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___21) = 56U;
< #line 20
<   goto ldv_52747;
<   case 2UL: 
< #line 20
<   put_unaligned_le16(56, __gu_p___21);
< #line 20
<   goto ldv_52747;
<   case 4UL: 
< #line 20
<   put_unaligned_le32(56U, __gu_p___21);
< #line 20
<   goto ldv_52747;
<   case 8UL: 
< #line 20
<   put_unaligned_le64(56ULL, __gu_p___21);
< #line 20
<   goto ldv_52747;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52747;
---
> #line 142
>   nla = *(ntb + 24UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       tmp___4 = nla_get_u8((struct nlattr  const  *)nla);
> #line 142
>       s->two_primaries = (char )tmp___4;
>     } else {
> 
>     }
>   } else {
> 
52966,52999c53477,53500
<   ldv_52747: 
< #line 20
<   tmp___18 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p___22 = (void *)tmp___18;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___22) = 4U;
< #line 20
<   goto ldv_52754;
<   case 2UL: 
< #line 20
<   put_unaligned_le16(4, __gu_p___22);
< #line 20
<   goto ldv_52754;
<   case 4UL: 
< #line 20
<   put_unaligned_le32(4U, __gu_p___22);
< #line 20
<   goto ldv_52754;
<   case 8UL: 
< #line 20
<   put_unaligned_le64(4ULL, __gu_p___22);
< #line 20
<   goto ldv_52754;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52754;
---
> #line 142
>   nla = *(ntb + 25UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((int )exclude_invariants) {
> #line 142
>       printk("\016<< must not change invariant attr: %s\n", (char *)"discard_my_data");
> #line 142
>       return (-17);
>     } else {
> 
>     }
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       tmp___5 = nla_get_u8((struct nlattr  const  *)nla);
> #line 142
>       s->discard_my_data = (char )tmp___5;
>     } else {
> 
>     }
>   } else {
> 
53001,53030c53502,53516
<   ldv_52754: 
< #line 20
<   __gu_p___23 = (void *)tags;
< #line 20
<   switch (4UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___23) = (unsigned char )arg->max_bio_bvecs;
< #line 20
<   goto ldv_52761;
<   case 2UL: 
< #line 20
<   put_unaligned_le16((int )((unsigned short )arg->max_bio_bvecs), __gu_p___23);
< #line 20
<   goto ldv_52761;
<   case 4UL: 
< #line 20
<   put_unaligned_le32((unsigned int )arg->max_bio_bvecs, __gu_p___23);
< #line 20
<   goto ldv_52761;
<   case 8UL: 
< #line 20
<   put_unaligned_le64((unsigned long long )arg->max_bio_bvecs, __gu_p___23);
< #line 20
<   goto ldv_52761;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52761;
---
> #line 142
>   nla = *(ntb + 26UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       tmp___6 = nla_get_u8((struct nlattr  const  *)nla);
> #line 142
>       s->tcp_cork = (char )tmp___6;
>     } else {
> 
>     }
>   } else {
> 
53032,53067c53518,53532
<   ldv_52761: 
< #line 20
<   tags = tags + 4U;
< #line 20
<   tmp___19 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p___24 = (void *)tmp___19;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___24) = 57U;
< #line 20
<   goto ldv_52768;
<   case 2UL: 
< #line 20
<   put_unaligned_le16(32825, __gu_p___24);
< #line 20
<   goto ldv_52768;
<   case 4UL: 
< #line 20
<   put_unaligned_le32(32825U, __gu_p___24);
< #line 20
<   goto ldv_52768;
<   case 8UL: 
< #line 20
<   put_unaligned_le64(32825ULL, __gu_p___24);
< #line 20
<   goto ldv_52768;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52768;
---
> #line 142
>   nla = *(ntb + 27UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       tmp___7 = nla_get_u8((struct nlattr  const  *)nla);
> #line 142
>       s->always_asbp = (char )tmp___7;
>     } else {
> 
>     }
>   } else {
> 
53069,53102c53534,53557
<   ldv_52768: 
< #line 20
<   tmp___20 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p___25 = (void *)tmp___20;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___25) = 1U;
< #line 20
<   goto ldv_52775;
<   case 2UL: 
< #line 20
<   put_unaligned_le16(1, __gu_p___25);
< #line 20
<   goto ldv_52775;
<   case 4UL: 
< #line 20
<   put_unaligned_le32(1U, __gu_p___25);
< #line 20
<   goto ldv_52775;
<   case 8UL: 
< #line 20
<   put_unaligned_le64(1ULL, __gu_p___25);
< #line 20
<   goto ldv_52775;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52775;
---
> #line 142
>   nla = *(ntb + 28UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((int )exclude_invariants) {
> #line 142
>       printk("\016<< must not change invariant attr: %s\n", (char *)"tentative");
> #line 142
>       return (-17);
>     } else {
> 
>     }
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       tmp___8 = nla_get_u8((struct nlattr  const  *)nla);
> #line 142
>       s->tentative = (char )tmp___8;
>     } else {
> 
>     }
>   } else {
> 
53104,53141c53559,53573
<   ldv_52775: 
< #line 20
<   *((char *)tags) = (char )arg->no_disk_barrier;
< #line 20
<   tags = tags + 1U;
< #line 20
<   tmp___21 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p___26 = (void *)tmp___21;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___26) = 58U;
< #line 20
<   goto ldv_52782;
<   case 2UL: 
< #line 20
<   put_unaligned_le16(32826, __gu_p___26);
< #line 20
<   goto ldv_52782;
<   case 4UL: 
< #line 20
<   put_unaligned_le32(32826U, __gu_p___26);
< #line 20
<   goto ldv_52782;
<   case 8UL: 
< #line 20
<   put_unaligned_le64(32826ULL, __gu_p___26);
< #line 20
<   goto ldv_52782;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52782;
---
> #line 142
>   nla = *(ntb + 29UL);
> #line 142
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     if ((unsigned long )s != (unsigned long )((struct net_conf *)0)) {
> #line 142
>       tmp___9 = nla_get_u8((struct nlattr  const  *)nla);
> #line 142
>       s->use_rle = (char )tmp___9;
>     } else {
> 
>     }
>   } else {
> 
53143,53176c53575,53626
<   ldv_52782: 
< #line 20
<   tmp___22 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p___27 = (void *)tmp___22;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___27) = 1U;
< #line 20
<   goto ldv_52789;
<   case 2UL: 
< #line 20
<   put_unaligned_le16(1, __gu_p___27);
< #line 20
<   goto ldv_52789;
<   case 4UL: 
< #line 20
<   put_unaligned_le32(1U, __gu_p___27);
< #line 20
<   goto ldv_52789;
<   case 8UL: 
< #line 20
<   put_unaligned_le64(1ULL, __gu_p___27);
< #line 20
<   goto ldv_52789;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52789;
---
> #line 142
>   return (0);
> }
> }
> #line 174 "include/linux/drbd_genl.h"
> static int net_conf_from_attrs(struct net_conf *s , struct genl_info *info ) 
> { 
>   int tmp ;
> 
>   {
> #line 142
>   tmp = __net_conf_from_attrs(s, info, 0);
> #line 142
>   return (tmp);
> }
> }
> #line 174 "include/linux/drbd_genl.h"
> static int net_conf_from_attrs_for_change(struct net_conf *s , struct genl_info *info ) 
> { 
>   int tmp ;
> 
>   {
> #line 142
>   tmp = __net_conf_from_attrs(s, info, 1);
> #line 142
>   return (tmp);
> }
> }
> #line 178 "include/linux/drbd_genl.h"
> static int __set_role_parms_from_attrs(struct set_role_parms *s , struct genl_info *info ,
>                                        bool exclude_invariants ) 
> { 
>   int maxtype ;
>   struct nlattr *tla ;
>   struct nlattr **ntb ;
>   struct nlattr *nla ;
>   int err ;
>   u8 tmp ;
> 
>   {
> #line 176
>   maxtype = 1;
> #line 176
>   tla = *(info->attrs + 6UL);
> #line 176
>   ntb = (struct nlattr **)(& nested_attr_tb);
> #line 176
>   if ((unsigned long )tla == (unsigned long )((struct nlattr *)0)) {
> #line 176
>     return (-42);
>   } else {
> 
53178,53215c53628,53635
<   ldv_52789: 
< #line 20
<   *((char *)tags) = (char )arg->no_disk_drain;
< #line 20
<   tags = tags + 1U;
< #line 20
<   tmp___23 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p___28 = (void *)tmp___23;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___28) = 89U;
< #line 20
<   goto ldv_52796;
<   case 2UL: 
< #line 20
<   put_unaligned_le16(89, __gu_p___28);
< #line 20
<   goto ldv_52796;
<   case 4UL: 
< #line 20
<   put_unaligned_le32(89U, __gu_p___28);
< #line 20
<   goto ldv_52796;
<   case 8UL: 
< #line 20
<   put_unaligned_le64(89ULL, __gu_p___28);
< #line 20
<   goto ldv_52796;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52796;
---
> #line 176
>   err = drbd_nla_parse_nested(ntb, maxtype, tla, (struct nla_policy  const  *)(& set_role_parms_nl_policy));
> #line 176
>   if (err != 0) {
> #line 176
>     return (err);
>   } else {
> 
53217,53250c53637,53651
<   ldv_52796: 
< #line 20
<   tmp___24 = tags;
< #line 20
<   tags = tags + 1;
< #line 20
<   __gu_p___29 = (void *)tmp___24;
< #line 20
<   switch (2UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___29) = 4U;
< #line 20
<   goto ldv_52803;
<   case 2UL: 
< #line 20
<   put_unaligned_le16(4, __gu_p___29);
< #line 20
<   goto ldv_52803;
<   case 4UL: 
< #line 20
<   put_unaligned_le32(4U, __gu_p___29);
< #line 20
<   goto ldv_52803;
<   case 8UL: 
< #line 20
<   put_unaligned_le64(4ULL, __gu_p___29);
< #line 20
<   goto ldv_52803;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52803;
---
> #line 176
>   nla = *(ntb + 1UL);
> #line 176
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 176
>     if ((unsigned long )s != (unsigned long )((struct set_role_parms *)0)) {
> #line 176
>       tmp = nla_get_u8((struct nlattr  const  *)nla);
> #line 176
>       s->assume_uptodate = (char )tmp;
>     } else {
> 
>     }
>   } else {
> 
53252,53281c53653,53693
<   ldv_52803: 
< #line 20
<   __gu_p___30 = (void *)tags;
< #line 20
<   switch (4UL) {
<   case 1UL: 
< #line 20
<   *((u8 *)__gu_p___30) = (unsigned char )arg->disk_timeout;
< #line 20
<   goto ldv_52810;
<   case 2UL: 
< #line 20
<   put_unaligned_le16((int )((unsigned short )arg->disk_timeout), __gu_p___30);
< #line 20
<   goto ldv_52810;
<   case 4UL: 
< #line 20
<   put_unaligned_le32((unsigned int )arg->disk_timeout, __gu_p___30);
< #line 20
<   goto ldv_52810;
<   case 8UL: 
< #line 20
<   put_unaligned_le64((unsigned long long )arg->disk_timeout, __gu_p___30);
< #line 20
<   goto ldv_52810;
<   default: 
< #line 20
<   __bad_unaligned_access_size();
< #line 20
<   goto ldv_52810;
---
> #line 176
>   return (0);
> }
> }
> #line 178 "include/linux/drbd_genl.h"
> static int set_role_parms_from_attrs(struct set_role_parms *s , struct genl_info *info ) 
> { 
>   int tmp ;
> 
>   {
> #line 176
>   tmp = __set_role_parms_from_attrs(s, info, 0);
> #line 176
>   return (tmp);
> }
> }
> #line 184 "include/linux/drbd_genl.h"
> static int __resize_parms_from_attrs(struct resize_parms *s , struct genl_info *info ,
>                                      bool exclude_invariants ) 
> { 
>   int maxtype ;
>   struct nlattr *tla ;
>   struct nlattr **ntb ;
>   struct nlattr *nla ;
>   int err ;
>   u8 tmp ;
>   u8 tmp___0 ;
> 
>   {
> #line 180
>   maxtype = 3;
> #line 180
>   tla = *(info->attrs + 7UL);
> #line 180
>   ntb = (struct nlattr **)(& nested_attr_tb);
> #line 180
>   if ((unsigned long )tla == (unsigned long )((struct nlattr *)0)) {
> #line 180
>     return (-42);
>   } else {
> 
53283,53287c53695,53751
<   ldv_52810: 
< #line 20
<   tags = tags + 4U;
< #line 20
<   return (tags);
---
> #line 180
>   err = drbd_nla_parse_nested(ntb, maxtype, tla, (struct nla_policy  const  *)(& resize_parms_nl_policy));
> #line 180
>   if (err != 0) {
> #line 180
>     return (err);
>   } else {
> 
>   }
> #line 180
>   nla = *(ntb + 1UL);
> #line 180
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 180
>     if ((unsigned long )s != (unsigned long )((struct resize_parms *)0)) {
> #line 180
>       s->resize_size = nla_get_u64((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 180
>   nla = *(ntb + 2UL);
> #line 180
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 180
>     if ((unsigned long )s != (unsigned long )((struct resize_parms *)0)) {
> #line 180
>       tmp = nla_get_u8((struct nlattr  const  *)nla);
> #line 180
>       s->resize_force = (char )tmp;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 180
>   nla = *(ntb + 3UL);
> #line 180
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 180
>     if ((unsigned long )s != (unsigned long )((struct resize_parms *)0)) {
> #line 180
>       tmp___0 = nla_get_u8((struct nlattr  const  *)nla);
> #line 180
>       s->no_resync = (char )tmp___0;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 180
>   return (0);
53290,53444c53754,53757
< #line 73
< static unsigned short *net_conf_to_tags(struct drbd_conf *mdev , struct net_conf *arg ,
<                                         unsigned short *tags ) ;
< #line 73 "include/linux/drbd_nl.h"
< static unsigned short *net_conf_to_tags(struct drbd_conf *mdev , struct net_conf *arg ,
<                                         unsigned short *tags ) 
< { 
<   void *__gu_p ;
<   unsigned short *tmp ;
<   void *__gu_p___0 ;
<   unsigned short *tmp___0 ;
<   size_t __len ;
<   void *__ret ;
<   void *__gu_p___1 ;
<   unsigned short *tmp___1 ;
<   void *__gu_p___2 ;
<   unsigned short *tmp___2 ;
<   size_t __len___0 ;
<   void *__ret___0 ;
<   void *__gu_p___3 ;
<   unsigned short *tmp___3 ;
<   void *__gu_p___4 ;
<   unsigned short *tmp___4 ;
<   size_t __len___1 ;
<   void *__ret___1 ;
<   void *__gu_p___5 ;
<   unsigned short *tmp___5 ;
<   void *__gu_p___6 ;
<   unsigned short *tmp___6 ;
<   size_t __len___2 ;
<   void *__ret___2 ;
<   void *__gu_p___7 ;
<   unsigned short *tmp___7 ;
<   void *__gu_p___8 ;
<   unsigned short *tmp___8 ;
<   size_t __len___3 ;
<   void *__ret___3 ;
<   void *__gu_p___9 ;
<   unsigned short *tmp___9 ;
<   void *__gu_p___10 ;
<   unsigned short *tmp___10 ;
<   void *__gu_p___11 ;
<   void *__gu_p___12 ;
<   unsigned short *tmp___11 ;
<   void *__gu_p___13 ;
<   unsigned short *tmp___12 ;
<   void *__gu_p___14 ;
<   void *__gu_p___15 ;
<   unsigned short *tmp___13 ;
<   void *__gu_p___16 ;
<   unsigned short *tmp___14 ;
<   void *__gu_p___17 ;
<   void *__gu_p___18 ;
<   unsigned short *tmp___15 ;
<   void *__gu_p___19 ;
<   unsigned short *tmp___16 ;
<   void *__gu_p___20 ;
<   void *__gu_p___21 ;
<   unsigned short *tmp___17 ;
<   void *__gu_p___22 ;
<   unsigned short *tmp___18 ;
<   void *__gu_p___23 ;
<   void *__gu_p___24 ;
<   unsigned short *tmp___19 ;
<   void *__gu_p___25 ;
<   unsigned short *tmp___20 ;
<   void *__gu_p___26 ;
<   void *__gu_p___27 ;
<   unsigned short *tmp___21 ;
<   void *__gu_p___28 ;
<   unsigned short *tmp___22 ;
<   void *__gu_p___29 ;
<   void *__gu_p___30 ;
<   unsigned short *tmp___23 ;
<   void *__gu_p___31 ;
<   unsigned short *tmp___24 ;
<   void *__gu_p___32 ;
<   void *__gu_p___33 ;
<   unsigned short *tmp___25 ;
<   void *__gu_p___34 ;
<   unsigned short *tmp___26 ;
<   void *__gu_p___35 ;
<   void *__gu_p___36 ;
<   unsigned short *tmp___27 ;
<   void *__gu_p___37 ;
<   unsigned short *tmp___28 ;
<   void *__gu_p___38 ;
<   void *__gu_p___39 ;
<   unsigned short *tmp___29 ;
<   void *__gu_p___40 ;
<   unsigned short *tmp___30 ;
<   void *__gu_p___41 ;
<   void *__gu_p___42 ;
<   unsigned short *tmp___31 ;
<   void *__gu_p___43 ;
<   unsigned short *tmp___32 ;
<   void *__gu_p___44 ;
<   void *__gu_p___45 ;
<   unsigned short *tmp___33 ;
<   void *__gu_p___46 ;
<   unsigned short *tmp___34 ;
<   void *__gu_p___47 ;
<   void *__gu_p___48 ;
<   unsigned short *tmp___35 ;
<   void *__gu_p___49 ;
<   unsigned short *tmp___36 ;
<   void *__gu_p___50 ;
<   void *__gu_p___51 ;
<   unsigned short *tmp___37 ;
<   void *__gu_p___52 ;
<   unsigned short *tmp___38 ;
<   void *__gu_p___53 ;
<   void *__gu_p___54 ;
<   unsigned short *tmp___39 ;
<   void *__gu_p___55 ;
<   unsigned short *tmp___40 ;
<   void *__gu_p___56 ;
<   void *__gu_p___57 ;
<   unsigned short *tmp___41 ;
<   void *__gu_p___58 ;
<   unsigned short *tmp___42 ;
<   void *__gu_p___59 ;
<   void *__gu_p___60 ;
<   unsigned short *tmp___43 ;
<   void *__gu_p___61 ;
<   unsigned short *tmp___44 ;
<   void *__gu_p___62 ;
<   void *__gu_p___63 ;
<   unsigned short *tmp___45 ;
<   void *__gu_p___64 ;
<   unsigned short *tmp___46 ;
<   void *__gu_p___65 ;
<   unsigned short *tmp___47 ;
<   void *__gu_p___66 ;
<   unsigned short *tmp___48 ;
<   void *__gu_p___67 ;
<   unsigned short *tmp___49 ;
<   void *__gu_p___68 ;
<   unsigned short *tmp___50 ;
<   void *__gu_p___69 ;
<   unsigned short *tmp___51 ;
<   void *__gu_p___70 ;
<   unsigned short *tmp___52 ;
<   void *__gu_p___71 ;
<   unsigned short *tmp___53 ;
<   void *__gu_p___72 ;
<   unsigned short *tmp___54 ;
<   void *__gu_p___73 ;
<   unsigned short *tmp___55 ;
<   void *__gu_p___74 ;
<   unsigned short *tmp___56 ;
<   void *__gu_p___75 ;
<   unsigned short *tmp___57 ;
<   void *__gu_p___76 ;
<   unsigned short *tmp___58 ;
---
> #line 184 "include/linux/drbd_genl.h"
> static int resize_parms_from_attrs(struct resize_parms *s , struct genl_info *info ) 
> { 
>   int tmp ;
53447,53479c53760,53788
< #line 41
<   tmp = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p = (void *)tmp;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p) = 8U;
< #line 41
<   goto ldv_52849;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(57352, __gu_p);
< #line 41
<   goto ldv_52849;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(57352U, __gu_p);
< #line 41
<   goto ldv_52849;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(57352ULL, __gu_p);
< #line 41
<   goto ldv_52849;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_52849;
---
> #line 180
>   tmp = __resize_parms_from_attrs(s, info, 0);
> #line 180
>   return (tmp);
> }
> }
> #line 229 "include/linux/drbd_genl.h"
> static int __start_ov_parms_from_attrs(struct start_ov_parms *s , struct genl_info *info ,
>                                        bool exclude_invariants ) 
> { 
>   int maxtype ;
>   struct nlattr *tla ;
>   struct nlattr **ntb ;
>   struct nlattr *nla ;
>   int err ;
> 
>   {
> #line 226
>   maxtype = 2;
> #line 226
>   tla = *(info->attrs + 9UL);
> #line 226
>   ntb = (struct nlattr **)(& nested_attr_tb);
> #line 226
>   if ((unsigned long )tla == (unsigned long )((struct nlattr *)0)) {
> #line 226
>     return (-42);
>   } else {
> 
53481,53514c53790,53797
<   ldv_52849: 
< #line 41
<   tmp___0 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___0 = (void *)tmp___0;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___0) = (unsigned char )arg->my_addr_len;
< #line 41
<   goto ldv_52856;
<   case 2UL: 
< #line 41
<   put_unaligned_le16((int )((unsigned short )arg->my_addr_len), __gu_p___0);
< #line 41
<   goto ldv_52856;
<   case 4UL: 
< #line 41
<   put_unaligned_le32((unsigned int )arg->my_addr_len, __gu_p___0);
< #line 41
<   goto ldv_52856;
<   case 8UL: 
< #line 41
<   put_unaligned_le64((unsigned long long )arg->my_addr_len, __gu_p___0);
< #line 41
<   goto ldv_52856;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_52856;
---
> #line 226
>   err = drbd_nla_parse_nested(ntb, maxtype, tla, (struct nla_policy  const  *)(& start_ov_parms_nl_policy));
> #line 226
>   if (err != 0) {
> #line 226
>     return (err);
>   } else {
> 
53516,53555c53799,53811
<   ldv_52856: 
< #line 41
<   __len = (size_t )arg->my_addr_len;
< #line 41
<   __ret = __builtin_memcpy((void *)tags, (void const   *)(& arg->my_addr), __len);
< #line 41
<   tags = tags + (unsigned long )arg->my_addr_len;
< #line 41
<   tmp___1 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___1 = (void *)tmp___1;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___1) = 9U;
< #line 41
<   goto ldv_52866;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(57353, __gu_p___1);
< #line 41
<   goto ldv_52866;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(57353U, __gu_p___1);
< #line 41
<   goto ldv_52866;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(57353ULL, __gu_p___1);
< #line 41
<   goto ldv_52866;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_52866;
---
> #line 226
>   nla = *(ntb + 1UL);
> #line 226
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 226
>     if ((unsigned long )s != (unsigned long )((struct start_ov_parms *)0)) {
> #line 226
>       s->ov_start_sector = nla_get_u64((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
53557,53590c53813,53825
<   ldv_52866: 
< #line 41
<   tmp___2 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___2 = (void *)tmp___2;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___2) = (unsigned char )arg->peer_addr_len;
< #line 41
<   goto ldv_52873;
<   case 2UL: 
< #line 41
<   put_unaligned_le16((int )((unsigned short )arg->peer_addr_len), __gu_p___2);
< #line 41
<   goto ldv_52873;
<   case 4UL: 
< #line 41
<   put_unaligned_le32((unsigned int )arg->peer_addr_len, __gu_p___2);
< #line 41
<   goto ldv_52873;
<   case 8UL: 
< #line 41
<   put_unaligned_le64((unsigned long long )arg->peer_addr_len, __gu_p___2);
< #line 41
<   goto ldv_52873;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_52873;
---
> #line 226
>   nla = *(ntb + 2UL);
> #line 226
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 226
>     if ((unsigned long )s != (unsigned long )((struct start_ov_parms *)0)) {
> #line 226
>       s->ov_stop_sector = nla_get_u64((struct nlattr  const  *)nla);
>     } else {
> 
>     }
>   } else {
> 
53592,53631c53827,53866
<   ldv_52873: 
< #line 41
<   __len___0 = (size_t )arg->peer_addr_len;
< #line 41
<   __ret___0 = __builtin_memcpy((void *)tags, (void const   *)(& arg->peer_addr), __len___0);
< #line 41
<   tags = tags + (unsigned long )arg->peer_addr_len;
< #line 41
<   tmp___3 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___3 = (void *)tmp___3;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___3) = 10U;
< #line 41
<   goto ldv_52883;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(49162, __gu_p___3);
< #line 41
<   goto ldv_52883;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(49162U, __gu_p___3);
< #line 41
<   goto ldv_52883;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(49162ULL, __gu_p___3);
< #line 41
<   goto ldv_52883;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_52883;
---
> #line 226
>   return (0);
> }
> }
> #line 229 "include/linux/drbd_genl.h"
> static int start_ov_parms_from_attrs(struct start_ov_parms *s , struct genl_info *info ) 
> { 
>   int tmp ;
> 
>   {
> #line 226
>   tmp = __start_ov_parms_from_attrs(s, info, 0);
> #line 226
>   return (tmp);
> }
> }
> #line 233 "include/linux/drbd_genl.h"
> static int __new_c_uuid_parms_from_attrs(struct new_c_uuid_parms *s , struct genl_info *info ,
>                                          bool exclude_invariants ) 
> { 
>   int maxtype ;
>   struct nlattr *tla ;
>   struct nlattr **ntb ;
>   struct nlattr *nla ;
>   int err ;
>   u8 tmp ;
> 
>   {
> #line 231
>   maxtype = 1;
> #line 231
>   tla = *(info->attrs + 10UL);
> #line 231
>   ntb = (struct nlattr **)(& nested_attr_tb);
> #line 231
>   if ((unsigned long )tla == (unsigned long )((struct nlattr *)0)) {
> #line 231
>     return (-42);
>   } else {
> 
53633,53666c53868,53875
<   ldv_52883: 
< #line 41
<   tmp___4 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___4 = (void *)tmp___4;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___4) = (unsigned char )arg->shared_secret_len;
< #line 41
<   goto ldv_52890;
<   case 2UL: 
< #line 41
<   put_unaligned_le16((int )((unsigned short )arg->shared_secret_len), __gu_p___4);
< #line 41
<   goto ldv_52890;
<   case 4UL: 
< #line 41
<   put_unaligned_le32((unsigned int )arg->shared_secret_len, __gu_p___4);
< #line 41
<   goto ldv_52890;
<   case 8UL: 
< #line 41
<   put_unaligned_le64((unsigned long long )arg->shared_secret_len, __gu_p___4);
< #line 41
<   goto ldv_52890;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_52890;
---
> #line 231
>   err = drbd_nla_parse_nested(ntb, maxtype, tla, (struct nla_policy  const  *)(& new_c_uuid_parms_nl_policy));
> #line 231
>   if (err != 0) {
> #line 231
>     return (err);
>   } else {
> 
53668,53708c53877,53891
<   ldv_52890: 
< #line 41
<   __len___1 = (size_t )arg->shared_secret_len;
< #line 41
<   __ret___1 = __builtin_memcpy((void *)tags, (void const   *)(& arg->shared_secret),
<                                __len___1);
< #line 41
<   tags = tags + (unsigned long )arg->shared_secret_len;
< #line 41
<   tmp___5 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___5 = (void *)tmp___5;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___5) = 11U;
< #line 41
<   goto ldv_52900;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(49163, __gu_p___5);
< #line 41
<   goto ldv_52900;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(49163U, __gu_p___5);
< #line 41
<   goto ldv_52900;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(49163ULL, __gu_p___5);
< #line 41
<   goto ldv_52900;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_52900;
---
> #line 231
>   nla = *(ntb + 1UL);
> #line 231
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 231
>     if ((unsigned long )s != (unsigned long )((struct new_c_uuid_parms *)0)) {
> #line 231
>       tmp = nla_get_u8((struct nlattr  const  *)nla);
> #line 231
>       s->clear_bm = (char )tmp;
>     } else {
> 
>     }
>   } else {
> 
53710,53743c53893,53932
<   ldv_52900: 
< #line 41
<   tmp___6 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___6 = (void *)tmp___6;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___6) = (unsigned char )arg->cram_hmac_alg_len;
< #line 41
<   goto ldv_52907;
<   case 2UL: 
< #line 41
<   put_unaligned_le16((int )((unsigned short )arg->cram_hmac_alg_len), __gu_p___6);
< #line 41
<   goto ldv_52907;
<   case 4UL: 
< #line 41
<   put_unaligned_le32((unsigned int )arg->cram_hmac_alg_len, __gu_p___6);
< #line 41
<   goto ldv_52907;
<   case 8UL: 
< #line 41
<   put_unaligned_le64((unsigned long long )arg->cram_hmac_alg_len, __gu_p___6);
< #line 41
<   goto ldv_52907;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_52907;
---
> #line 231
>   return (0);
> }
> }
> #line 233 "include/linux/drbd_genl.h"
> static int new_c_uuid_parms_from_attrs(struct new_c_uuid_parms *s , struct genl_info *info ) 
> { 
>   int tmp ;
> 
>   {
> #line 231
>   tmp = __new_c_uuid_parms_from_attrs(s, info, 0);
> #line 231
>   return (tmp);
> }
> }
> #line 241 "include/linux/drbd_genl.h"
> static int __disconnect_parms_from_attrs(struct disconnect_parms *s , struct genl_info *info ,
>                                          bool exclude_invariants ) 
> { 
>   int maxtype ;
>   struct nlattr *tla ;
>   struct nlattr **ntb ;
>   struct nlattr *nla ;
>   int err ;
>   u8 tmp ;
> 
>   {
> #line 239
>   maxtype = 1;
> #line 239
>   tla = *(info->attrs + 12UL);
> #line 239
>   ntb = (struct nlattr **)(& nested_attr_tb);
> #line 239
>   if ((unsigned long )tla == (unsigned long )((struct nlattr *)0)) {
> #line 239
>     return (-42);
>   } else {
> 
53745,53785c53934,53941
<   ldv_52907: 
< #line 41
<   __len___2 = (size_t )arg->cram_hmac_alg_len;
< #line 41
<   __ret___2 = __builtin_memcpy((void *)tags, (void const   *)(& arg->cram_hmac_alg),
<                                __len___2);
< #line 41
<   tags = tags + (unsigned long )arg->cram_hmac_alg_len;
< #line 41
<   tmp___7 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___7 = (void *)tmp___7;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___7) = 44U;
< #line 41
<   goto ldv_52917;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(49196, __gu_p___7);
< #line 41
<   goto ldv_52917;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(49196U, __gu_p___7);
< #line 41
<   goto ldv_52917;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(49196ULL, __gu_p___7);
< #line 41
<   goto ldv_52917;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_52917;
---
> #line 239
>   err = drbd_nla_parse_nested(ntb, maxtype, tla, (struct nla_policy  const  *)(& disconnect_parms_nl_policy));
> #line 239
>   if (err != 0) {
> #line 239
>     return (err);
>   } else {
> 
53787,53820c53943,53957
<   ldv_52917: 
< #line 41
<   tmp___8 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___8 = (void *)tmp___8;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___8) = (unsigned char )arg->integrity_alg_len;
< #line 41
<   goto ldv_52924;
<   case 2UL: 
< #line 41
<   put_unaligned_le16((int )((unsigned short )arg->integrity_alg_len), __gu_p___8);
< #line 41
<   goto ldv_52924;
<   case 4UL: 
< #line 41
<   put_unaligned_le32((unsigned int )arg->integrity_alg_len, __gu_p___8);
< #line 41
<   goto ldv_52924;
<   case 8UL: 
< #line 41
<   put_unaligned_le64((unsigned long long )arg->integrity_alg_len, __gu_p___8);
< #line 41
<   goto ldv_52924;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_52924;
---
> #line 239
>   nla = *(ntb + 1UL);
> #line 239
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 239
>     if ((unsigned long )s != (unsigned long )((struct disconnect_parms *)0)) {
> #line 239
>       tmp = nla_get_u8((struct nlattr  const  *)nla);
> #line 239
>       s->force_disconnect = (char )tmp;
>     } else {
> 
>     }
>   } else {
> 
53822,53862c53959,53998
<   ldv_52924: 
< #line 41
<   __len___3 = (size_t )arg->integrity_alg_len;
< #line 41
<   __ret___3 = __builtin_memcpy((void *)tags, (void const   *)(& arg->integrity_alg),
<                                __len___3);
< #line 41
<   tags = tags + (unsigned long )arg->integrity_alg_len;
< #line 41
<   tmp___9 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___9 = (void *)tmp___9;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___9) = 14U;
< #line 41
<   goto ldv_52934;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(14, __gu_p___9);
< #line 41
<   goto ldv_52934;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(14U, __gu_p___9);
< #line 41
<   goto ldv_52934;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(14ULL, __gu_p___9);
< #line 41
<   goto ldv_52934;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_52934;
---
> #line 239
>   return (0);
> }
> }
> #line 241 "include/linux/drbd_genl.h"
> static int disconnect_parms_from_attrs(struct disconnect_parms *s , struct genl_info *info ) 
> { 
>   int tmp ;
> 
>   {
> #line 239
>   tmp = __disconnect_parms_from_attrs(s, info, 0);
> #line 239
>   return (tmp);
> }
> }
> #line 245 "include/linux/drbd_genl.h"
> static int __detach_parms_from_attrs(struct detach_parms *s , struct genl_info *info ,
>                                      bool exclude_invariants ) 
> { 
>   int maxtype ;
>   struct nlattr *tla ;
>   struct nlattr **ntb ;
>   struct nlattr *nla ;
>   int err ;
>   u8 tmp ;
> 
>   {
> #line 243
>   maxtype = 1;
> #line 243
>   tla = *(info->attrs + 13UL);
> #line 243
>   ntb = (struct nlattr **)(& nested_attr_tb);
> #line 243
>   if ((unsigned long )tla == (unsigned long )((struct nlattr *)0)) {
> #line 243
>     return (-42);
>   } else {
> 
53864,53897c54000,54007
<   ldv_52934: 
< #line 41
<   tmp___10 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___10 = (void *)tmp___10;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___10) = 4U;
< #line 41
<   goto ldv_52941;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(4, __gu_p___10);
< #line 41
<   goto ldv_52941;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(4U, __gu_p___10);
< #line 41
<   goto ldv_52941;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(4ULL, __gu_p___10);
< #line 41
<   goto ldv_52941;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_52941;
---
> #line 243
>   err = drbd_nla_parse_nested(ntb, maxtype, tla, (struct nla_policy  const  *)(& detach_parms_nl_policy));
> #line 243
>   if (err != 0) {
> #line 243
>     return (err);
>   } else {
> 
53899,53928c54009,54023
<   ldv_52941: 
< #line 41
<   __gu_p___11 = (void *)tags;
< #line 41
<   switch (4UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___11) = (unsigned char )arg->timeout;
< #line 41
<   goto ldv_52948;
<   case 2UL: 
< #line 41
<   put_unaligned_le16((int )((unsigned short )arg->timeout), __gu_p___11);
< #line 41
<   goto ldv_52948;
<   case 4UL: 
< #line 41
<   put_unaligned_le32((unsigned int )arg->timeout, __gu_p___11);
< #line 41
<   goto ldv_52948;
<   case 8UL: 
< #line 41
<   put_unaligned_le64((unsigned long long )arg->timeout, __gu_p___11);
< #line 41
<   goto ldv_52948;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_52948;
---
> #line 243
>   nla = *(ntb + 1UL);
> #line 243
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 243
>     if ((unsigned long )s != (unsigned long )((struct detach_parms *)0)) {
> #line 243
>       tmp = nla_get_u8((struct nlattr  const  *)nla);
> #line 243
>       s->force_detach = (char )tmp;
>     } else {
> 
>     }
>   } else {
> 
53930,53965c54025,54129
<   ldv_52948: 
< #line 41
<   tags = tags + 4U;
< #line 41
<   tmp___11 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___12 = (void *)tmp___11;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___12) = 15U;
< #line 41
<   goto ldv_52955;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(8207, __gu_p___12);
< #line 41
<   goto ldv_52955;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(8207U, __gu_p___12);
< #line 41
<   goto ldv_52955;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(8207ULL, __gu_p___12);
< #line 41
<   goto ldv_52955;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_52955;
---
> #line 243
>   return (0);
> }
> }
> #line 245 "include/linux/drbd_genl.h"
> static int detach_parms_from_attrs(struct detach_parms *s , struct genl_info *info ) 
> { 
>   int tmp ;
> 
>   {
> #line 243
>   tmp = __detach_parms_from_attrs(s, info, 0);
> #line 243
>   return (tmp);
> }
> }
> #line 221 "include/linux/genl_magic_func.h"
> char const   *drbd_genl_cmd_to_str(__u8 cmd ) 
> { 
> 
> 
>   {
> #line 223
>   switch ((int )cmd) {
>   case 2: ;
> #line 263 "include/linux/drbd_genl.h"
>   return ("DRBD_ADM_GET_STATUS");
>   case 5: ;
> #line 277
>   return ("DRBD_ADM_NEW_MINOR");
>   case 6: ;
> #line 279
>   return ("DRBD_ADM_DEL_MINOR");
>   case 7: ;
> #line 283
>   return ("DRBD_ADM_NEW_RESOURCE");
>   case 8: ;
> #line 285
>   return ("DRBD_ADM_DEL_RESOURCE");
>   case 9: ;
> #line 288
>   return ("DRBD_ADM_RESOURCE_OPTS");
>   case 10: ;
> #line 294
>   return ("DRBD_ADM_CONNECT");
>   case 29: ;
> #line 301
>   return ("DRBD_ADM_CHG_NET_OPTS");
>   case 11: ;
> #line 308
>   return ("DRBD_ADM_DISCONNECT");
>   case 12: ;
> #line 311
>   return ("DRBD_ADM_ATTACH");
>   case 28: ;
> #line 317
>   return ("DRBD_ADM_CHG_DISK_OPTS");
>   case 13: ;
> #line 323
>   return ("DRBD_ADM_RESIZE");
>   case 14: ;
> #line 330
>   return ("DRBD_ADM_PRIMARY");
>   case 15: ;
> #line 337
>   return ("DRBD_ADM_SECONDARY");
>   case 16: ;
> #line 344
>   return ("DRBD_ADM_NEW_C_UUID");
>   case 17: ;
> #line 351
>   return ("DRBD_ADM_START_OV");
>   case 18: ;
> #line 357
>   return ("DRBD_ADM_DETACH");
>   case 19: ;
> #line 361
>   return ("DRBD_ADM_INVALIDATE");
>   case 20: ;
> #line 363
>   return ("DRBD_ADM_INVAL_PEER");
>   case 21: ;
> #line 365
>   return ("DRBD_ADM_PAUSE_SYNC");
>   case 22: ;
> #line 367
>   return ("DRBD_ADM_RESUME_SYNC");
>   case 23: ;
> #line 369
>   return ("DRBD_ADM_SUSPEND_IO");
>   case 24: ;
> #line 371
>   return ("DRBD_ADM_RESUME_IO");
>   case 25: ;
> #line 373
>   return ("DRBD_ADM_OUTDATE");
>   case 26: ;
> #line 375
>   return ("DRBD_ADM_GET_TIMEOUT_TYPE");
>   case 27: ;
> #line 377
>   return ("DRBD_ADM_DOWN");
>   default: ;
> #line 229 "include/linux/genl_magic_func.h"
>   return ("unknown");
53967,54000c54131,54210
<   ldv_52955: 
< #line 41
<   tmp___12 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___13 = (void *)tmp___12;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___13) = 4U;
< #line 41
<   goto ldv_52962;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(4, __gu_p___13);
< #line 41
<   goto ldv_52962;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(4U, __gu_p___13);
< #line 41
<   goto ldv_52962;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(4ULL, __gu_p___13);
< #line 41
<   goto ldv_52962;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_52962;
---
> }
> }
> #line 249 "include/linux/genl_magic_func.h"
> static struct genl_ops drbd_genl_ops[26U]  = 
> #line 249
>   {      {2U, (unsigned char)0, 0U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_get_status, & drbd_adm_get_status_all, 0, {0, 0}}, 
>         {5U, (unsigned char)0, 1U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_add_minor, 0, 0, {0, 0}}, 
>         {6U, (unsigned char)0, 1U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_delete_minor, 0, 0, {0, 0}}, 
>         {7U, (unsigned char)0, 1U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_new_resource, 0, 0, {0, 0}}, 
>         {8U, (unsigned char)0, 1U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_del_resource, 0, 0, {0, 0}}, 
>         {9U, (unsigned char)0, 1U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_resource_opts, 0, 0, {0, 0}}, 
>         {10U, (unsigned char)0, 1U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_connect, 0, 0, {0, 0}}, 
>         {29U, (unsigned char)0, 1U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_net_opts, 0, 0, {0, 0}}, 
>         {11U, (unsigned char)0, 1U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_disconnect, 0, 0, {0, 0}}, 
>         {12U, (unsigned char)0, 1U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_attach, 0, 0, {0, 0}}, 
>         {28U, (unsigned char)0, 1U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_disk_opts, 0, 0, {0, 0}}, 
>         {13U, (unsigned char)0, 1U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_resize, 0, 0, {0, 0}}, 
>         {14U, (unsigned char)0, 1U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_set_role, 0, 0, {0, 0}}, 
>         {15U, (unsigned char)0, 1U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_set_role, 0, 0, {0, 0}}, 
>         {16U, (unsigned char)0, 1U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_new_c_uuid, 0, 0, {0, 0}}, 
>         {17U, (unsigned char)0, 1U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_start_ov, 0, 0, {0, 0}}, 
>         {18U, (unsigned char)0, 1U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_detach, 0, 0, {0, 0}}, 
>         {19U, (unsigned char)0, 1U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_invalidate, 0, 0, {0, 0}}, 
>         {20U, (unsigned char)0, 1U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_invalidate_peer, 0, 0, {0, 0}}, 
>         {21U, (unsigned char)0, 1U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_pause_sync, 0, 0, {0, 0}}, 
>         {22U, (unsigned char)0, 1U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_resume_sync, 0, 0, {0, 0}}, 
>         {23U, (unsigned char)0, 1U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_suspend_io, 0, 0, {0, 0}}, 
>         {24U, (unsigned char)0, 1U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_resume_io, 0, 0, {0, 0}}, 
>         {25U, (unsigned char)0, 1U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_outdate, 0, 0, {0, 0}}, 
>         {26U, (unsigned char)0, 1U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_get_timeout_type, 0, 0, {0, 0}}, 
>         {27U, (unsigned char)0, 1U, (struct nla_policy  const  *)(& drbd_tla_nl_policy),
>       & drbd_adm_down, 0, 0, {0, 0}}};
> #line 262 "include/linux/genl_magic_func.h"
> static struct genl_family drbd_genl_family  = 
> #line 262
>      {0U, 8U, {'d', 'r', 'b', 'd', '\000'}, 1U, 13U, (_Bool)0, 0, 0, 0, {0, 0}, {0,
>                                                                                0},
>     {0, 0}};
> #line 250 "include/linux/drbd_genl.h"
> static struct genl_multicast_group drbd_mcg_events  =    {0, {0, 0}, {'e', 'v', 'e', 'n', 't', 's', '\000'}, 0U};
> #line 250 "include/linux/drbd_genl.h"
> static int drbd_genl_multicast_events(struct sk_buff *skb , gfp_t flags ) 
> { 
>   unsigned int group_id ;
>   int tmp ;
> 
>   {
> #line 250
>   group_id = drbd_mcg_events.id;
> #line 250
>   if (group_id == 0U) {
> #line 250
>     return (-22);
>   } else {
> 
54002,54031c54212,54235
<   ldv_52962: 
< #line 41
<   __gu_p___14 = (void *)tags;
< #line 41
<   switch (4UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___14) = (unsigned char )arg->wire_protocol;
< #line 41
<   goto ldv_52969;
<   case 2UL: 
< #line 41
<   put_unaligned_le16((int )((unsigned short )arg->wire_protocol), __gu_p___14);
< #line 41
<   goto ldv_52969;
<   case 4UL: 
< #line 41
<   put_unaligned_le32((unsigned int )arg->wire_protocol, __gu_p___14);
< #line 41
<   goto ldv_52969;
<   case 8UL: 
< #line 41
<   put_unaligned_le64((unsigned long long )arg->wire_protocol, __gu_p___14);
< #line 41
<   goto ldv_52969;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_52969;
---
> #line 250
>   tmp = genlmsg_multicast(skb, 0U, group_id, flags);
> #line 250
>   return (tmp);
> }
> }
> #line 294 "include/linux/genl_magic_func.h"
> int drbd_genl_register(void) 
> { 
>   int err ;
>   int tmp ;
> 
>   {
> #line 296
>   tmp = genl_register_family_with_ops(& drbd_genl_family, (struct genl_ops *)(& drbd_genl_ops),
>                                       26UL);
> #line 296
>   err = tmp;
> #line 298
>   if (err != 0) {
> #line 299
>     return (err);
>   } else {
> 
54033,54068c54237,54245
<   ldv_52969: 
< #line 41
<   tags = tags + 4U;
< #line 41
<   tmp___13 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___15 = (void *)tmp___13;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___15) = 16U;
< #line 41
<   goto ldv_52976;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(16, __gu_p___15);
< #line 41
<   goto ldv_52976;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(16U, __gu_p___15);
< #line 41
<   goto ldv_52976;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(16ULL, __gu_p___15);
< #line 41
<   goto ldv_52976;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_52976;
---
> #line 250 "include/linux/drbd_genl.h"
>   err = genl_register_mc_group(& drbd_genl_family, & drbd_mcg_events);
> #line 250
>   if (err != 0) {
> #line 250
>     goto fail;
>   } else {
> #line 250
>     printk("\016%s: mcg %s: %u\n", (char *)"events", (char *)"drbd", drbd_mcg_events.id);
54070,54103c54247,54310
<   ldv_52976: 
< #line 41
<   tmp___14 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___16 = (void *)tmp___14;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___16) = 4U;
< #line 41
<   goto ldv_52983;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(4, __gu_p___16);
< #line 41
<   goto ldv_52983;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(4U, __gu_p___16);
< #line 41
<   goto ldv_52983;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(4ULL, __gu_p___16);
< #line 41
<   goto ldv_52983;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_52983;
---
> #line 315 "include/linux/genl_magic_func.h"
>   return (0);
>   fail: 
> #line 317
>   genl_unregister_family(& drbd_genl_family);
> #line 318
>   return (err);
> }
> }
> #line 321 "include/linux/genl_magic_func.h"
> void drbd_genl_unregister(void) 
> { 
> 
> 
>   {
> #line 323
>   genl_unregister_family(& drbd_genl_family);
> #line 324
>   return;
> }
> }
> #line 135 "include/linux/drbd_genl.h"
> static int disk_conf_to_skb(struct sk_buff *skb , struct disk_conf *s , bool const   exclude_sensitive ) 
> { 
>   struct nlattr *tla ;
>   struct nlattr *tmp ;
>   int __min1 ;
>   int __min2 ;
>   int tmp___0 ;
>   int __min1___0 ;
>   int __min2___0 ;
>   int tmp___1 ;
>   int tmp___2 ;
>   int tmp___3 ;
>   int tmp___4 ;
>   int tmp___5 ;
>   int tmp___6 ;
>   int tmp___7 ;
>   int tmp___8 ;
>   int tmp___9 ;
>   int tmp___10 ;
>   int tmp___11 ;
>   int tmp___12 ;
>   int tmp___13 ;
>   int tmp___14 ;
>   int tmp___15 ;
>   int tmp___16 ;
>   int tmp___17 ;
>   int tmp___18 ;
>   int tmp___19 ;
>   int tmp___20 ;
>   int tmp___21 ;
> 
>   {
> #line 104
>   tmp = nla_nest_start(skb, 3);
> #line 104
>   tla = tmp;
> #line 104
>   if ((unsigned long )tla == (unsigned long )((struct nlattr *)0)) {
> #line 104
>     goto nla_put_failure;
>   } else {
> 
54105,54134c54312,54323
<   ldv_52983: 
< #line 41
<   __gu_p___17 = (void *)tags;
< #line 41
<   switch (4UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___17) = (unsigned char )arg->try_connect_int;
< #line 41
<   goto ldv_52990;
<   case 2UL: 
< #line 41
<   put_unaligned_le16((int )((unsigned short )arg->try_connect_int), __gu_p___17);
< #line 41
<   goto ldv_52990;
<   case 4UL: 
< #line 41
<   put_unaligned_le32((unsigned int )arg->try_connect_int, __gu_p___17);
< #line 41
<   goto ldv_52990;
<   case 8UL: 
< #line 41
<   put_unaligned_le64((unsigned long long )arg->try_connect_int, __gu_p___17);
< #line 41
<   goto ldv_52990;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_52990;
---
> #line 104
>   __min1 = 128;
> #line 104
>   __min2 = (int )(s->backing_dev_len + 1U);
> #line 104
>   tmp___0 = nla_put(skb, 1, __min1 < __min2 ? __min1 : __min2, (void const   *)(& s->backing_dev));
> #line 104
>   if (tmp___0 != 0) {
> #line 104
>     goto nla_put_failure;
>   } else {
> 
54136,54171c54325,54336
<   ldv_52990: 
< #line 41
<   tags = tags + 4U;
< #line 41
<   tmp___15 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___18 = (void *)tmp___15;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___18) = 17U;
< #line 41
<   goto ldv_52997;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(17, __gu_p___18);
< #line 41
<   goto ldv_52997;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(17U, __gu_p___18);
< #line 41
<   goto ldv_52997;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(17ULL, __gu_p___18);
< #line 41
<   goto ldv_52997;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_52997;
---
> #line 104
>   __min1___0 = 128;
> #line 104
>   __min2___0 = (int )(s->meta_dev_len + 1U);
> #line 104
>   tmp___1 = nla_put(skb, 2, __min1___0 < __min2___0 ? __min1___0 : __min2___0, (void const   *)(& s->meta_dev));
> #line 104
>   if (tmp___1 != 0) {
> #line 104
>     goto nla_put_failure;
>   } else {
> 
54173,54206c54338,54345
<   ldv_52997: 
< #line 41
<   tmp___16 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___19 = (void *)tmp___16;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___19) = 4U;
< #line 41
<   goto ldv_53004;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(4, __gu_p___19);
< #line 41
<   goto ldv_53004;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(4U, __gu_p___19);
< #line 41
<   goto ldv_53004;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(4ULL, __gu_p___19);
< #line 41
<   goto ldv_53004;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53004;
---
> #line 104
>   tmp___2 = nla_put_u32(skb, 3, (u32 )s->meta_dev_idx);
> #line 104
>   if (tmp___2 != 0) {
> #line 104
>     goto nla_put_failure;
>   } else {
> 
54208,54237c54347,54354
<   ldv_53004: 
< #line 41
<   __gu_p___20 = (void *)tags;
< #line 41
<   switch (4UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___20) = (unsigned char )arg->ping_int;
< #line 41
<   goto ldv_53011;
<   case 2UL: 
< #line 41
<   put_unaligned_le16((int )((unsigned short )arg->ping_int), __gu_p___20);
< #line 41
<   goto ldv_53011;
<   case 4UL: 
< #line 41
<   put_unaligned_le32((unsigned int )arg->ping_int, __gu_p___20);
< #line 41
<   goto ldv_53011;
<   case 8UL: 
< #line 41
<   put_unaligned_le64((unsigned long long )arg->ping_int, __gu_p___20);
< #line 41
<   goto ldv_53011;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53011;
---
> #line 104
>   tmp___3 = nla_put_u64(skb, 4, s->disk_size);
> #line 104
>   if (tmp___3 != 0) {
> #line 104
>     goto nla_put_failure;
>   } else {
> 
54239,54274c54356,54363
<   ldv_53011: 
< #line 41
<   tags = tags + 4U;
< #line 41
<   tmp___17 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___21 = (void *)tmp___17;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___21) = 18U;
< #line 41
<   goto ldv_53018;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(18, __gu_p___21);
< #line 41
<   goto ldv_53018;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(18U, __gu_p___21);
< #line 41
<   goto ldv_53018;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(18ULL, __gu_p___21);
< #line 41
<   goto ldv_53018;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53018;
---
> #line 104
>   tmp___4 = nla_put_u32(skb, 5, s->max_bio_bvecs);
> #line 104
>   if (tmp___4 != 0) {
> #line 104
>     goto nla_put_failure;
>   } else {
> 
54276,54309c54365,54372
<   ldv_53018: 
< #line 41
<   tmp___18 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___22 = (void *)tmp___18;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___22) = 4U;
< #line 41
<   goto ldv_53025;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(4, __gu_p___22);
< #line 41
<   goto ldv_53025;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(4U, __gu_p___22);
< #line 41
<   goto ldv_53025;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(4ULL, __gu_p___22);
< #line 41
<   goto ldv_53025;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53025;
---
> #line 104
>   tmp___5 = nla_put_u32(skb, 6, s->on_io_error);
> #line 104
>   if (tmp___5 != 0) {
> #line 104
>     goto nla_put_failure;
>   } else {
> 
54311,54340c54374,54381
<   ldv_53025: 
< #line 41
<   __gu_p___23 = (void *)tags;
< #line 41
<   switch (4UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___23) = (unsigned char )arg->max_epoch_size;
< #line 41
<   goto ldv_53032;
<   case 2UL: 
< #line 41
<   put_unaligned_le16((int )((unsigned short )arg->max_epoch_size), __gu_p___23);
< #line 41
<   goto ldv_53032;
<   case 4UL: 
< #line 41
<   put_unaligned_le32((unsigned int )arg->max_epoch_size, __gu_p___23);
< #line 41
<   goto ldv_53032;
<   case 8UL: 
< #line 41
<   put_unaligned_le64((unsigned long long )arg->max_epoch_size, __gu_p___23);
< #line 41
<   goto ldv_53032;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53032;
---
> #line 104
>   tmp___6 = nla_put_u32(skb, 7, s->fencing);
> #line 104
>   if (tmp___6 != 0) {
> #line 104
>     goto nla_put_failure;
>   } else {
> 
54342,54377c54383,54390
<   ldv_53032: 
< #line 41
<   tags = tags + 4U;
< #line 41
<   tmp___19 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___24 = (void *)tmp___19;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___24) = 19U;
< #line 41
<   goto ldv_53039;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(19, __gu_p___24);
< #line 41
<   goto ldv_53039;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(19U, __gu_p___24);
< #line 41
<   goto ldv_53039;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(19ULL, __gu_p___24);
< #line 41
<   goto ldv_53039;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53039;
---
> #line 104
>   tmp___7 = nla_put_u32(skb, 8, s->resync_rate);
> #line 104
>   if (tmp___7 != 0) {
> #line 104
>     goto nla_put_failure;
>   } else {
> 
54379,54412c54392,54399
<   ldv_53039: 
< #line 41
<   tmp___20 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___25 = (void *)tmp___20;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___25) = 4U;
< #line 41
<   goto ldv_53046;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(4, __gu_p___25);
< #line 41
<   goto ldv_53046;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(4U, __gu_p___25);
< #line 41
<   goto ldv_53046;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(4ULL, __gu_p___25);
< #line 41
<   goto ldv_53046;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53046;
---
> #line 104
>   tmp___8 = nla_put_u32(skb, 9, (u32 )s->resync_after);
> #line 104
>   if (tmp___8 != 0) {
> #line 104
>     goto nla_put_failure;
>   } else {
> 
54414,54443c54401,54408
<   ldv_53046: 
< #line 41
<   __gu_p___26 = (void *)tags;
< #line 41
<   switch (4UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___26) = (unsigned char )arg->max_buffers;
< #line 41
<   goto ldv_53053;
<   case 2UL: 
< #line 41
<   put_unaligned_le16((int )((unsigned short )arg->max_buffers), __gu_p___26);
< #line 41
<   goto ldv_53053;
<   case 4UL: 
< #line 41
<   put_unaligned_le32((unsigned int )arg->max_buffers, __gu_p___26);
< #line 41
<   goto ldv_53053;
<   case 8UL: 
< #line 41
<   put_unaligned_le64((unsigned long long )arg->max_buffers, __gu_p___26);
< #line 41
<   goto ldv_53053;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53053;
---
> #line 104
>   tmp___9 = nla_put_u32(skb, 10, s->al_extents);
> #line 104
>   if (tmp___9 != 0) {
> #line 104
>     goto nla_put_failure;
>   } else {
> 
54445,54480c54410,54417
<   ldv_53053: 
< #line 41
<   tags = tags + 4U;
< #line 41
<   tmp___21 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___27 = (void *)tmp___21;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___27) = 20U;
< #line 41
<   goto ldv_53060;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(20, __gu_p___27);
< #line 41
<   goto ldv_53060;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(20U, __gu_p___27);
< #line 41
<   goto ldv_53060;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(20ULL, __gu_p___27);
< #line 41
<   goto ldv_53060;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53060;
---
> #line 104
>   tmp___10 = nla_put_u32(skb, 11, s->c_plan_ahead);
> #line 104
>   if (tmp___10 != 0) {
> #line 104
>     goto nla_put_failure;
>   } else {
> 
54482,54515c54419,54426
<   ldv_53060: 
< #line 41
<   tmp___22 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___28 = (void *)tmp___22;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___28) = 4U;
< #line 41
<   goto ldv_53067;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(4, __gu_p___28);
< #line 41
<   goto ldv_53067;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(4U, __gu_p___28);
< #line 41
<   goto ldv_53067;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(4ULL, __gu_p___28);
< #line 41
<   goto ldv_53067;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53067;
---
> #line 104
>   tmp___11 = nla_put_u32(skb, 12, s->c_delay_target);
> #line 104
>   if (tmp___11 != 0) {
> #line 104
>     goto nla_put_failure;
>   } else {
> 
54517,54546c54428,54435
<   ldv_53067: 
< #line 41
<   __gu_p___29 = (void *)tags;
< #line 41
<   switch (4UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___29) = (unsigned char )arg->unplug_watermark;
< #line 41
<   goto ldv_53074;
<   case 2UL: 
< #line 41
<   put_unaligned_le16((int )((unsigned short )arg->unplug_watermark), __gu_p___29);
< #line 41
<   goto ldv_53074;
<   case 4UL: 
< #line 41
<   put_unaligned_le32((unsigned int )arg->unplug_watermark, __gu_p___29);
< #line 41
<   goto ldv_53074;
<   case 8UL: 
< #line 41
<   put_unaligned_le64((unsigned long long )arg->unplug_watermark, __gu_p___29);
< #line 41
<   goto ldv_53074;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53074;
---
> #line 104
>   tmp___12 = nla_put_u32(skb, 13, s->c_fill_target);
> #line 104
>   if (tmp___12 != 0) {
> #line 104
>     goto nla_put_failure;
>   } else {
> 
54548,54583c54437,54444
<   ldv_53074: 
< #line 41
<   tags = tags + 4U;
< #line 41
<   tmp___23 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___30 = (void *)tmp___23;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___30) = 21U;
< #line 41
<   goto ldv_53081;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(21, __gu_p___30);
< #line 41
<   goto ldv_53081;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(21U, __gu_p___30);
< #line 41
<   goto ldv_53081;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(21ULL, __gu_p___30);
< #line 41
<   goto ldv_53081;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53081;
---
> #line 104
>   tmp___13 = nla_put_u32(skb, 14, s->c_max_rate);
> #line 104
>   if (tmp___13 != 0) {
> #line 104
>     goto nla_put_failure;
>   } else {
> 
54585,54618c54446,54453
<   ldv_53081: 
< #line 41
<   tmp___24 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___31 = (void *)tmp___24;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___31) = 4U;
< #line 41
<   goto ldv_53088;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(4, __gu_p___31);
< #line 41
<   goto ldv_53088;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(4U, __gu_p___31);
< #line 41
<   goto ldv_53088;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(4ULL, __gu_p___31);
< #line 41
<   goto ldv_53088;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53088;
---
> #line 104
>   tmp___14 = nla_put_u32(skb, 15, s->c_min_rate);
> #line 104
>   if (tmp___14 != 0) {
> #line 104
>     goto nla_put_failure;
>   } else {
> 
54620,54649c54455,54462
<   ldv_53088: 
< #line 41
<   __gu_p___32 = (void *)tags;
< #line 41
<   switch (4UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___32) = (unsigned char )arg->sndbuf_size;
< #line 41
<   goto ldv_53095;
<   case 2UL: 
< #line 41
<   put_unaligned_le16((int )((unsigned short )arg->sndbuf_size), __gu_p___32);
< #line 41
<   goto ldv_53095;
<   case 4UL: 
< #line 41
<   put_unaligned_le32((unsigned int )arg->sndbuf_size, __gu_p___32);
< #line 41
<   goto ldv_53095;
<   case 8UL: 
< #line 41
<   put_unaligned_le64((unsigned long long )arg->sndbuf_size, __gu_p___32);
< #line 41
<   goto ldv_53095;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53095;
---
> #line 104
>   tmp___15 = nla_put_u8(skb, 16, (int )((u8 )s->disk_barrier));
> #line 104
>   if (tmp___15 != 0) {
> #line 104
>     goto nla_put_failure;
>   } else {
> 
54651,54686c54464,54471
<   ldv_53095: 
< #line 41
<   tags = tags + 4U;
< #line 41
<   tmp___25 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___33 = (void *)tmp___25;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___33) = 22U;
< #line 41
<   goto ldv_53102;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(22, __gu_p___33);
< #line 41
<   goto ldv_53102;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(22U, __gu_p___33);
< #line 41
<   goto ldv_53102;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(22ULL, __gu_p___33);
< #line 41
<   goto ldv_53102;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53102;
---
> #line 104
>   tmp___16 = nla_put_u8(skb, 17, (int )((u8 )s->disk_flushes));
> #line 104
>   if (tmp___16 != 0) {
> #line 104
>     goto nla_put_failure;
>   } else {
> 
54688,54721c54473,54480
<   ldv_53102: 
< #line 41
<   tmp___26 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___34 = (void *)tmp___26;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___34) = 4U;
< #line 41
<   goto ldv_53109;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(4, __gu_p___34);
< #line 41
<   goto ldv_53109;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(4U, __gu_p___34);
< #line 41
<   goto ldv_53109;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(4ULL, __gu_p___34);
< #line 41
<   goto ldv_53109;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53109;
---
> #line 104
>   tmp___17 = nla_put_u8(skb, 18, (int )((u8 )s->disk_drain));
> #line 104
>   if (tmp___17 != 0) {
> #line 104
>     goto nla_put_failure;
>   } else {
> 
54723,54752c54482,54489
<   ldv_53109: 
< #line 41
<   __gu_p___35 = (void *)tags;
< #line 41
<   switch (4UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___35) = (unsigned char )arg->ko_count;
< #line 41
<   goto ldv_53116;
<   case 2UL: 
< #line 41
<   put_unaligned_le16((int )((unsigned short )arg->ko_count), __gu_p___35);
< #line 41
<   goto ldv_53116;
<   case 4UL: 
< #line 41
<   put_unaligned_le32((unsigned int )arg->ko_count, __gu_p___35);
< #line 41
<   goto ldv_53116;
<   case 8UL: 
< #line 41
<   put_unaligned_le64((unsigned long long )arg->ko_count, __gu_p___35);
< #line 41
<   goto ldv_53116;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53116;
---
> #line 104
>   tmp___18 = nla_put_u8(skb, 19, (int )((u8 )s->md_flushes));
> #line 104
>   if (tmp___18 != 0) {
> #line 104
>     goto nla_put_failure;
>   } else {
> 
54754,54789c54491,54498
<   ldv_53116: 
< #line 41
<   tags = tags + 4U;
< #line 41
<   tmp___27 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___36 = (void *)tmp___27;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___36) = 24U;
< #line 41
<   goto ldv_53123;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(24, __gu_p___36);
< #line 41
<   goto ldv_53123;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(24U, __gu_p___36);
< #line 41
<   goto ldv_53123;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(24ULL, __gu_p___36);
< #line 41
<   goto ldv_53123;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53123;
---
> #line 104
>   tmp___19 = nla_put_u32(skb, 20, s->disk_timeout);
> #line 104
>   if (tmp___19 != 0) {
> #line 104
>     goto nla_put_failure;
>   } else {
> 
54791,54824c54500,54507
<   ldv_53123: 
< #line 41
<   tmp___28 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___37 = (void *)tmp___28;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___37) = 4U;
< #line 41
<   goto ldv_53130;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(4, __gu_p___37);
< #line 41
<   goto ldv_53130;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(4U, __gu_p___37);
< #line 41
<   goto ldv_53130;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(4ULL, __gu_p___37);
< #line 41
<   goto ldv_53130;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53130;
---
> #line 104
>   tmp___20 = nla_put_u32(skb, 21, s->read_balancing);
> #line 104
>   if (tmp___20 != 0) {
> #line 104
>     goto nla_put_failure;
>   } else {
> 
54826,54855c54509,54516
<   ldv_53130: 
< #line 41
<   __gu_p___38 = (void *)tags;
< #line 41
<   switch (4UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___38) = (unsigned char )arg->after_sb_0p;
< #line 41
<   goto ldv_53137;
<   case 2UL: 
< #line 41
<   put_unaligned_le16((int )((unsigned short )arg->after_sb_0p), __gu_p___38);
< #line 41
<   goto ldv_53137;
<   case 4UL: 
< #line 41
<   put_unaligned_le32((unsigned int )arg->after_sb_0p, __gu_p___38);
< #line 41
<   goto ldv_53137;
<   case 8UL: 
< #line 41
<   put_unaligned_le64((unsigned long long )arg->after_sb_0p, __gu_p___38);
< #line 41
<   goto ldv_53137;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53137;
---
> #line 104
>   tmp___21 = nla_put_u8(skb, 23, (int )((u8 )s->al_updates));
> #line 104
>   if (tmp___21 != 0) {
> #line 104
>     goto nla_put_failure;
>   } else {
> 
54857,54892c54518,54528
<   ldv_53137: 
< #line 41
<   tags = tags + 4U;
< #line 41
<   tmp___29 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___39 = (void *)tmp___29;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___39) = 25U;
< #line 41
<   goto ldv_53144;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(25, __gu_p___39);
< #line 41
<   goto ldv_53144;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(25U, __gu_p___39);
< #line 41
<   goto ldv_53144;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(25ULL, __gu_p___39);
< #line 41
<   goto ldv_53144;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53144;
---
> #line 104
>   nla_nest_end(skb, tla);
> #line 104
>   return (0);
>   nla_put_failure: ;
> #line 104
>   if ((unsigned long )tla != (unsigned long )((struct nlattr *)0)) {
> #line 104
>     nla_nest_cancel(skb, tla);
>   } else {
> 
54894,54927c54530,54554
<   ldv_53144: 
< #line 41
<   tmp___30 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___40 = (void *)tmp___30;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___40) = 4U;
< #line 41
<   goto ldv_53151;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(4, __gu_p___40);
< #line 41
<   goto ldv_53151;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(4U, __gu_p___40);
< #line 41
<   goto ldv_53151;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(4ULL, __gu_p___40);
< #line 41
<   goto ldv_53151;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53151;
---
> #line 104
>   return (-90);
> }
> }
> #line 140 "include/linux/drbd_genl.h"
> static int res_opts_to_skb(struct sk_buff *skb , struct res_opts *s , bool const   exclude_sensitive ) 
> { 
>   struct nlattr *tla ;
>   struct nlattr *tmp ;
>   int __min1 ;
>   int __min2 ;
>   int tmp___0 ;
>   int tmp___1 ;
> 
>   {
> #line 137
>   tmp = nla_nest_start(skb, 4);
> #line 137
>   tla = tmp;
> #line 137
>   if ((unsigned long )tla == (unsigned long )((struct nlattr *)0)) {
> #line 137
>     goto nla_put_failure;
>   } else {
> 
54929,54958c54556,54567
<   ldv_53151: 
< #line 41
<   __gu_p___41 = (void *)tags;
< #line 41
<   switch (4UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___41) = (unsigned char )arg->after_sb_1p;
< #line 41
<   goto ldv_53158;
<   case 2UL: 
< #line 41
<   put_unaligned_le16((int )((unsigned short )arg->after_sb_1p), __gu_p___41);
< #line 41
<   goto ldv_53158;
<   case 4UL: 
< #line 41
<   put_unaligned_le32((unsigned int )arg->after_sb_1p, __gu_p___41);
< #line 41
<   goto ldv_53158;
<   case 8UL: 
< #line 41
<   put_unaligned_le64((unsigned long long )arg->after_sb_1p, __gu_p___41);
< #line 41
<   goto ldv_53158;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53158;
---
> #line 137
>   __min1 = 32;
> #line 137
>   __min2 = (int )(s->cpu_mask_len + 1U);
> #line 137
>   tmp___0 = nla_put(skb, 1, __min1 < __min2 ? __min1 : __min2, (void const   *)(& s->cpu_mask));
> #line 137
>   if (tmp___0 != 0) {
> #line 137
>     goto nla_put_failure;
>   } else {
> 
54960,54995c54569,54576
<   ldv_53158: 
< #line 41
<   tags = tags + 4U;
< #line 41
<   tmp___31 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___42 = (void *)tmp___31;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___42) = 26U;
< #line 41
<   goto ldv_53165;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(26, __gu_p___42);
< #line 41
<   goto ldv_53165;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(26U, __gu_p___42);
< #line 41
<   goto ldv_53165;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(26ULL, __gu_p___42);
< #line 41
<   goto ldv_53165;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53165;
---
> #line 137
>   tmp___1 = nla_put_u32(skb, 2, s->on_no_data);
> #line 137
>   if (tmp___1 != 0) {
> #line 137
>     goto nla_put_failure;
>   } else {
> 
54997,55030c54578,54588
<   ldv_53165: 
< #line 41
<   tmp___32 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___43 = (void *)tmp___32;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___43) = 4U;
< #line 41
<   goto ldv_53172;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(4, __gu_p___43);
< #line 41
<   goto ldv_53172;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(4U, __gu_p___43);
< #line 41
<   goto ldv_53172;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(4ULL, __gu_p___43);
< #line 41
<   goto ldv_53172;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53172;
---
> #line 137
>   nla_nest_end(skb, tla);
> #line 137
>   return (0);
>   nla_put_failure: ;
> #line 137
>   if ((unsigned long )tla != (unsigned long )((struct nlattr *)0)) {
> #line 137
>     nla_nest_cancel(skb, tla);
>   } else {
> 
55032,55061c54590,54649
<   ldv_53172: 
< #line 41
<   __gu_p___44 = (void *)tags;
< #line 41
<   switch (4UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___44) = (unsigned char )arg->after_sb_2p;
< #line 41
<   goto ldv_53179;
<   case 2UL: 
< #line 41
<   put_unaligned_le16((int )((unsigned short )arg->after_sb_2p), __gu_p___44);
< #line 41
<   goto ldv_53179;
<   case 4UL: 
< #line 41
<   put_unaligned_le32((unsigned int )arg->after_sb_2p, __gu_p___44);
< #line 41
<   goto ldv_53179;
<   case 8UL: 
< #line 41
<   put_unaligned_le64((unsigned long long )arg->after_sb_2p, __gu_p___44);
< #line 41
<   goto ldv_53179;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53179;
---
> #line 137
>   return (-90);
> }
> }
> #line 174 "include/linux/drbd_genl.h"
> static int net_conf_to_skb(struct sk_buff *skb , struct net_conf *s , bool const   exclude_sensitive ) 
> { 
>   struct nlattr *tla ;
>   struct nlattr *tmp ;
>   int __min1 ;
>   int __min2 ;
>   int tmp___0 ;
>   int __min1___0 ;
>   int __min2___0 ;
>   int tmp___1 ;
>   int __min1___1 ;
>   int __min2___1 ;
>   int tmp___2 ;
>   int __min1___2 ;
>   int __min2___2 ;
>   int tmp___3 ;
>   int __min1___3 ;
>   int __min2___3 ;
>   int tmp___4 ;
>   int tmp___5 ;
>   int tmp___6 ;
>   int tmp___7 ;
>   int tmp___8 ;
>   int tmp___9 ;
>   int tmp___10 ;
>   int tmp___11 ;
>   int tmp___12 ;
>   int tmp___13 ;
>   int tmp___14 ;
>   int tmp___15 ;
>   int tmp___16 ;
>   int tmp___17 ;
>   int tmp___18 ;
>   int tmp___19 ;
>   int tmp___20 ;
>   int tmp___21 ;
>   int tmp___22 ;
>   int tmp___23 ;
>   int tmp___24 ;
>   int tmp___25 ;
>   int tmp___26 ;
>   int tmp___27 ;
>   int tmp___28 ;
> 
>   {
> #line 142
>   tmp = nla_nest_start(skb, 5);
> #line 142
>   tla = tmp;
> #line 142
>   if ((unsigned long )tla == (unsigned long )((struct nlattr *)0)) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
55063,55098c54651,54667
<   ldv_53179: 
< #line 41
<   tags = tags + 4U;
< #line 41
<   tmp___33 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___45 = (void *)tmp___33;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___45) = 39U;
< #line 41
<   goto ldv_53186;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(39, __gu_p___45);
< #line 41
<   goto ldv_53186;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(39U, __gu_p___45);
< #line 41
<   goto ldv_53186;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(39ULL, __gu_p___45);
< #line 41
<   goto ldv_53186;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53186;
---
> #line 142
>   if (! ((_Bool )exclude_sensitive)) {
> #line 142
>     __min1 = 64;
> #line 142
>     __min2 = (int )(s->shared_secret_len + 1U);
> #line 142
>     tmp___0 = nla_put(skb, 1, __min1 < __min2 ? __min1 : __min2, (void const   *)(& s->shared_secret));
> #line 142
>     if (tmp___0 != 0) {
> #line 142
>       goto nla_put_failure;
>     } else {
> 
>     }
>   } else {
> 
55100,55133c54669,54680
<   ldv_53186: 
< #line 41
<   tmp___34 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___46 = (void *)tmp___34;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___46) = 4U;
< #line 41
<   goto ldv_53193;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(4, __gu_p___46);
< #line 41
<   goto ldv_53193;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(4U, __gu_p___46);
< #line 41
<   goto ldv_53193;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(4ULL, __gu_p___46);
< #line 41
<   goto ldv_53193;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53193;
---
> #line 142
>   __min1___0 = 64;
> #line 142
>   __min2___0 = (int )(s->cram_hmac_alg_len + 1U);
> #line 142
>   tmp___1 = nla_put(skb, 2, __min1___0 < __min2___0 ? __min1___0 : __min2___0, (void const   *)(& s->cram_hmac_alg));
> #line 142
>   if (tmp___1 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
55135,55164c54682,54693
<   ldv_53193: 
< #line 41
<   __gu_p___47 = (void *)tags;
< #line 41
<   switch (4UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___47) = (unsigned char )arg->rr_conflict;
< #line 41
<   goto ldv_53200;
<   case 2UL: 
< #line 41
<   put_unaligned_le16((int )((unsigned short )arg->rr_conflict), __gu_p___47);
< #line 41
<   goto ldv_53200;
<   case 4UL: 
< #line 41
<   put_unaligned_le32((unsigned int )arg->rr_conflict, __gu_p___47);
< #line 41
<   goto ldv_53200;
<   case 8UL: 
< #line 41
<   put_unaligned_le64((unsigned long long )arg->rr_conflict, __gu_p___47);
< #line 41
<   goto ldv_53200;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53200;
---
> #line 142
>   __min1___1 = 64;
> #line 142
>   __min2___1 = (int )(s->integrity_alg_len + 1U);
> #line 142
>   tmp___2 = nla_put(skb, 3, __min1___1 < __min2___1 ? __min1___1 : __min2___1, (void const   *)(& s->integrity_alg));
> #line 142
>   if (tmp___2 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
55166,55201c54695,54706
<   ldv_53200: 
< #line 41
<   tags = tags + 4U;
< #line 41
<   tmp___35 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___48 = (void *)tmp___35;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___48) = 40U;
< #line 41
<   goto ldv_53207;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(40, __gu_p___48);
< #line 41
<   goto ldv_53207;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(40U, __gu_p___48);
< #line 41
<   goto ldv_53207;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(40ULL, __gu_p___48);
< #line 41
<   goto ldv_53207;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53207;
---
> #line 142
>   __min1___2 = 64;
> #line 142
>   __min2___2 = (int )(s->verify_alg_len + 1U);
> #line 142
>   tmp___3 = nla_put(skb, 4, __min1___2 < __min2___2 ? __min1___2 : __min2___2, (void const   *)(& s->verify_alg));
> #line 142
>   if (tmp___3 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
55203,55236c54708,54719
<   ldv_53207: 
< #line 41
<   tmp___36 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___49 = (void *)tmp___36;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___49) = 4U;
< #line 41
<   goto ldv_53214;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(4, __gu_p___49);
< #line 41
<   goto ldv_53214;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(4U, __gu_p___49);
< #line 41
<   goto ldv_53214;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(4ULL, __gu_p___49);
< #line 41
<   goto ldv_53214;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53214;
---
> #line 142
>   __min1___3 = 64;
> #line 142
>   __min2___3 = (int )(s->csums_alg_len + 1U);
> #line 142
>   tmp___4 = nla_put(skb, 5, __min1___3 < __min2___3 ? __min1___3 : __min2___3, (void const   *)(& s->csums_alg));
> #line 142
>   if (tmp___4 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
55238,55267c54721,54728
<   ldv_53214: 
< #line 41
<   __gu_p___50 = (void *)tags;
< #line 41
<   switch (4UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___50) = (unsigned char )arg->ping_timeo;
< #line 41
<   goto ldv_53221;
<   case 2UL: 
< #line 41
<   put_unaligned_le16((int )((unsigned short )arg->ping_timeo), __gu_p___50);
< #line 41
<   goto ldv_53221;
<   case 4UL: 
< #line 41
<   put_unaligned_le32((unsigned int )arg->ping_timeo, __gu_p___50);
< #line 41
<   goto ldv_53221;
<   case 8UL: 
< #line 41
<   put_unaligned_le64((unsigned long long )arg->ping_timeo, __gu_p___50);
< #line 41
<   goto ldv_53221;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53221;
---
> #line 142
>   tmp___5 = nla_put_u32(skb, 6, s->wire_protocol);
> #line 142
>   if (tmp___5 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
55269,55304c54730,54737
<   ldv_53221: 
< #line 41
<   tags = tags + 4U;
< #line 41
<   tmp___37 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___51 = (void *)tmp___37;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___51) = 67U;
< #line 41
<   goto ldv_53228;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(67, __gu_p___51);
< #line 41
<   goto ldv_53228;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(67U, __gu_p___51);
< #line 41
<   goto ldv_53228;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(67ULL, __gu_p___51);
< #line 41
<   goto ldv_53228;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53228;
---
> #line 142
>   tmp___6 = nla_put_u32(skb, 7, s->connect_int);
> #line 142
>   if (tmp___6 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
55306,55339c54739,54746
<   ldv_53228: 
< #line 41
<   tmp___38 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___52 = (void *)tmp___38;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___52) = 4U;
< #line 41
<   goto ldv_53235;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(4, __gu_p___52);
< #line 41
<   goto ldv_53235;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(4U, __gu_p___52);
< #line 41
<   goto ldv_53235;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(4ULL, __gu_p___52);
< #line 41
<   goto ldv_53235;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53235;
---
> #line 142
>   tmp___7 = nla_put_u32(skb, 8, s->timeout);
> #line 142
>   if (tmp___7 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
55341,55370c54748,54755
<   ldv_53235: 
< #line 41
<   __gu_p___53 = (void *)tags;
< #line 41
<   switch (4UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___53) = (unsigned char )arg->rcvbuf_size;
< #line 41
<   goto ldv_53242;
<   case 2UL: 
< #line 41
<   put_unaligned_le16((int )((unsigned short )arg->rcvbuf_size), __gu_p___53);
< #line 41
<   goto ldv_53242;
<   case 4UL: 
< #line 41
<   put_unaligned_le32((unsigned int )arg->rcvbuf_size, __gu_p___53);
< #line 41
<   goto ldv_53242;
<   case 8UL: 
< #line 41
<   put_unaligned_le64((unsigned long long )arg->rcvbuf_size, __gu_p___53);
< #line 41
<   goto ldv_53242;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53242;
---
> #line 142
>   tmp___8 = nla_put_u32(skb, 9, s->ping_int);
> #line 142
>   if (tmp___8 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
55372,55407c54757,54764
<   ldv_53242: 
< #line 41
<   tags = tags + 4U;
< #line 41
<   tmp___39 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___54 = (void *)tmp___39;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___54) = 81U;
< #line 41
<   goto ldv_53249;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(81, __gu_p___54);
< #line 41
<   goto ldv_53249;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(81U, __gu_p___54);
< #line 41
<   goto ldv_53249;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(81ULL, __gu_p___54);
< #line 41
<   goto ldv_53249;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53249;
---
> #line 142
>   tmp___9 = nla_put_u32(skb, 10, s->ping_timeo);
> #line 142
>   if (tmp___9 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
55409,55442c54766,54773
<   ldv_53249: 
< #line 41
<   tmp___40 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___55 = (void *)tmp___40;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___55) = 4U;
< #line 41
<   goto ldv_53256;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(4, __gu_p___55);
< #line 41
<   goto ldv_53256;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(4U, __gu_p___55);
< #line 41
<   goto ldv_53256;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(4ULL, __gu_p___55);
< #line 41
<   goto ldv_53256;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53256;
---
> #line 142
>   tmp___10 = nla_put_u32(skb, 11, s->sndbuf_size);
> #line 142
>   if (tmp___10 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
55444,55473c54775,54782
<   ldv_53256: 
< #line 41
<   __gu_p___56 = (void *)tags;
< #line 41
<   switch (4UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___56) = (unsigned char )arg->on_congestion;
< #line 41
<   goto ldv_53263;
<   case 2UL: 
< #line 41
<   put_unaligned_le16((int )((unsigned short )arg->on_congestion), __gu_p___56);
< #line 41
<   goto ldv_53263;
<   case 4UL: 
< #line 41
<   put_unaligned_le32((unsigned int )arg->on_congestion, __gu_p___56);
< #line 41
<   goto ldv_53263;
<   case 8UL: 
< #line 41
<   put_unaligned_le64((unsigned long long )arg->on_congestion, __gu_p___56);
< #line 41
<   goto ldv_53263;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53263;
---
> #line 142
>   tmp___11 = nla_put_u32(skb, 12, s->rcvbuf_size);
> #line 142
>   if (tmp___11 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
55475,55510c54784,54791
<   ldv_53263: 
< #line 41
<   tags = tags + 4U;
< #line 41
<   tmp___41 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___57 = (void *)tmp___41;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___57) = 82U;
< #line 41
<   goto ldv_53270;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(82, __gu_p___57);
< #line 41
<   goto ldv_53270;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(82U, __gu_p___57);
< #line 41
<   goto ldv_53270;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(82ULL, __gu_p___57);
< #line 41
<   goto ldv_53270;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53270;
---
> #line 142
>   tmp___12 = nla_put_u32(skb, 13, s->ko_count);
> #line 142
>   if (tmp___12 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
55512,55545c54793,54800
<   ldv_53270: 
< #line 41
<   tmp___42 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___58 = (void *)tmp___42;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___58) = 4U;
< #line 41
<   goto ldv_53277;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(4, __gu_p___58);
< #line 41
<   goto ldv_53277;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(4U, __gu_p___58);
< #line 41
<   goto ldv_53277;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(4ULL, __gu_p___58);
< #line 41
<   goto ldv_53277;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53277;
---
> #line 142
>   tmp___13 = nla_put_u32(skb, 14, s->max_buffers);
> #line 142
>   if (tmp___13 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
55547,55576c54802,54809
<   ldv_53277: 
< #line 41
<   __gu_p___59 = (void *)tags;
< #line 41
<   switch (4UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___59) = (unsigned char )arg->cong_fill;
< #line 41
<   goto ldv_53284;
<   case 2UL: 
< #line 41
<   put_unaligned_le16((int )((unsigned short )arg->cong_fill), __gu_p___59);
< #line 41
<   goto ldv_53284;
<   case 4UL: 
< #line 41
<   put_unaligned_le32((unsigned int )arg->cong_fill, __gu_p___59);
< #line 41
<   goto ldv_53284;
<   case 8UL: 
< #line 41
<   put_unaligned_le64((unsigned long long )arg->cong_fill, __gu_p___59);
< #line 41
<   goto ldv_53284;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53284;
---
> #line 142
>   tmp___14 = nla_put_u32(skb, 15, s->max_epoch_size);
> #line 142
>   if (tmp___14 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
55578,55613c54811,54818
<   ldv_53284: 
< #line 41
<   tags = tags + 4U;
< #line 41
<   tmp___43 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___60 = (void *)tmp___43;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___60) = 83U;
< #line 41
<   goto ldv_53291;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(83, __gu_p___60);
< #line 41
<   goto ldv_53291;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(83U, __gu_p___60);
< #line 41
<   goto ldv_53291;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(83ULL, __gu_p___60);
< #line 41
<   goto ldv_53291;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53291;
---
> #line 142
>   tmp___15 = nla_put_u32(skb, 16, s->unplug_watermark);
> #line 142
>   if (tmp___15 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
55615,55648c54820,54827
<   ldv_53291: 
< #line 41
<   tmp___44 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___61 = (void *)tmp___44;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___61) = 4U;
< #line 41
<   goto ldv_53298;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(4, __gu_p___61);
< #line 41
<   goto ldv_53298;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(4U, __gu_p___61);
< #line 41
<   goto ldv_53298;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(4ULL, __gu_p___61);
< #line 41
<   goto ldv_53298;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53298;
---
> #line 142
>   tmp___16 = nla_put_u32(skb, 17, s->after_sb_0p);
> #line 142
>   if (tmp___16 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
55650,55679c54829,54836
<   ldv_53298: 
< #line 41
<   __gu_p___62 = (void *)tags;
< #line 41
<   switch (4UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___62) = (unsigned char )arg->cong_extents;
< #line 41
<   goto ldv_53305;
<   case 2UL: 
< #line 41
<   put_unaligned_le16((int )((unsigned short )arg->cong_extents), __gu_p___62);
< #line 41
<   goto ldv_53305;
<   case 4UL: 
< #line 41
<   put_unaligned_le32((unsigned int )arg->cong_extents, __gu_p___62);
< #line 41
<   goto ldv_53305;
<   case 8UL: 
< #line 41
<   put_unaligned_le64((unsigned long long )arg->cong_extents, __gu_p___62);
< #line 41
<   goto ldv_53305;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53305;
---
> #line 142
>   tmp___17 = nla_put_u32(skb, 18, s->after_sb_1p);
> #line 142
>   if (tmp___17 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
55681,55716c54838,54845
<   ldv_53305: 
< #line 41
<   tags = tags + 4U;
< #line 41
<   tmp___45 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___63 = (void *)tmp___45;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___63) = 60U;
< #line 41
<   goto ldv_53312;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(41020, __gu_p___63);
< #line 41
<   goto ldv_53312;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(41020U, __gu_p___63);
< #line 41
<   goto ldv_53312;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(41020ULL, __gu_p___63);
< #line 41
<   goto ldv_53312;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53312;
---
> #line 142
>   tmp___18 = nla_put_u32(skb, 19, s->after_sb_2p);
> #line 142
>   if (tmp___18 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
55718,55751c54847,54854
<   ldv_53312: 
< #line 41
<   tmp___46 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___64 = (void *)tmp___46;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___64) = 1U;
< #line 41
<   goto ldv_53319;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(1, __gu_p___64);
< #line 41
<   goto ldv_53319;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(1U, __gu_p___64);
< #line 41
<   goto ldv_53319;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(1ULL, __gu_p___64);
< #line 41
<   goto ldv_53319;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53319;
---
> #line 142
>   tmp___19 = nla_put_u32(skb, 20, s->rr_conflict);
> #line 142
>   if (tmp___19 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
55753,55790c54856,54863
<   ldv_53319: 
< #line 41
<   *((char *)tags) = (char )arg->mind_af;
< #line 41
<   tags = tags + 1U;
< #line 41
<   tmp___47 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___65 = (void *)tmp___47;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___65) = 27U;
< #line 41
<   goto ldv_53326;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(32795, __gu_p___65);
< #line 41
<   goto ldv_53326;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(32795U, __gu_p___65);
< #line 41
<   goto ldv_53326;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(32795ULL, __gu_p___65);
< #line 41
<   goto ldv_53326;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53326;
---
> #line 142
>   tmp___20 = nla_put_u32(skb, 21, s->on_congestion);
> #line 142
>   if (tmp___20 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
55792,55825c54865,54872
<   ldv_53326: 
< #line 41
<   tmp___48 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___66 = (void *)tmp___48;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___66) = 1U;
< #line 41
<   goto ldv_53333;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(1, __gu_p___66);
< #line 41
<   goto ldv_53333;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(1U, __gu_p___66);
< #line 41
<   goto ldv_53333;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(1ULL, __gu_p___66);
< #line 41
<   goto ldv_53333;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53333;
---
> #line 142
>   tmp___21 = nla_put_u32(skb, 22, s->cong_fill);
> #line 142
>   if (tmp___21 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
55827,55864c54874,54881
<   ldv_53333: 
< #line 41
<   *((char *)tags) = (char )arg->want_lose;
< #line 41
<   tags = tags + 1U;
< #line 41
<   tmp___49 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___67 = (void *)tmp___49;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___67) = 28U;
< #line 41
<   goto ldv_53340;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(32796, __gu_p___67);
< #line 41
<   goto ldv_53340;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(32796U, __gu_p___67);
< #line 41
<   goto ldv_53340;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(32796ULL, __gu_p___67);
< #line 41
<   goto ldv_53340;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53340;
---
> #line 142
>   tmp___22 = nla_put_u32(skb, 23, s->cong_extents);
> #line 142
>   if (tmp___22 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
55866,55899c54883,54890
<   ldv_53340: 
< #line 41
<   tmp___50 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___68 = (void *)tmp___50;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___68) = 1U;
< #line 41
<   goto ldv_53347;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(1, __gu_p___68);
< #line 41
<   goto ldv_53347;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(1U, __gu_p___68);
< #line 41
<   goto ldv_53347;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(1ULL, __gu_p___68);
< #line 41
<   goto ldv_53347;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53347;
---
> #line 142
>   tmp___23 = nla_put_u8(skb, 24, (int )((u8 )s->two_primaries));
> #line 142
>   if (tmp___23 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
55901,55938c54892,54899
<   ldv_53347: 
< #line 41
<   *((char *)tags) = (char )arg->two_primaries;
< #line 41
<   tags = tags + 1U;
< #line 41
<   tmp___51 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___69 = (void *)tmp___51;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___69) = 41U;
< #line 41
<   goto ldv_53354;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(32809, __gu_p___69);
< #line 41
<   goto ldv_53354;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(32809U, __gu_p___69);
< #line 41
<   goto ldv_53354;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(32809ULL, __gu_p___69);
< #line 41
<   goto ldv_53354;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53354;
---
> #line 142
>   tmp___24 = nla_put_u8(skb, 25, (int )((u8 )s->discard_my_data));
> #line 142
>   if (tmp___24 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
55940,55973c54901,54908
<   ldv_53354: 
< #line 41
<   tmp___52 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___70 = (void *)tmp___52;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___70) = 1U;
< #line 41
<   goto ldv_53361;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(1, __gu_p___70);
< #line 41
<   goto ldv_53361;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(1U, __gu_p___70);
< #line 41
<   goto ldv_53361;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(1ULL, __gu_p___70);
< #line 41
<   goto ldv_53361;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53361;
---
> #line 142
>   tmp___25 = nla_put_u8(skb, 26, (int )((u8 )s->tcp_cork));
> #line 142
>   if (tmp___25 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
55975,56012c54910,54917
<   ldv_53361: 
< #line 41
<   *((char *)tags) = (char )arg->always_asbp;
< #line 41
<   tags = tags + 1U;
< #line 41
<   tmp___53 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___71 = (void *)tmp___53;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___71) = 61U;
< #line 41
<   goto ldv_53368;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(32829, __gu_p___71);
< #line 41
<   goto ldv_53368;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(32829U, __gu_p___71);
< #line 41
<   goto ldv_53368;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(32829ULL, __gu_p___71);
< #line 41
<   goto ldv_53368;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53368;
---
> #line 142
>   tmp___26 = nla_put_u8(skb, 27, (int )((u8 )s->always_asbp));
> #line 142
>   if (tmp___26 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
56014,56047c54919,54926
<   ldv_53368: 
< #line 41
<   tmp___54 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___72 = (void *)tmp___54;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___72) = 1U;
< #line 41
<   goto ldv_53375;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(1, __gu_p___72);
< #line 41
<   goto ldv_53375;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(1U, __gu_p___72);
< #line 41
<   goto ldv_53375;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(1ULL, __gu_p___72);
< #line 41
<   goto ldv_53375;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53375;
---
> #line 142
>   tmp___27 = nla_put_u8(skb, 28, (int )((u8 )s->tentative));
> #line 142
>   if (tmp___27 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
56049,56086c54928,54935
<   ldv_53375: 
< #line 41
<   *((char *)tags) = (char )arg->no_cork;
< #line 41
<   tags = tags + 1U;
< #line 41
<   tmp___55 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___73 = (void *)tmp___55;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___73) = 62U;
< #line 41
<   goto ldv_53382;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(41022, __gu_p___73);
< #line 41
<   goto ldv_53382;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(41022U, __gu_p___73);
< #line 41
<   goto ldv_53382;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(41022ULL, __gu_p___73);
< #line 41
<   goto ldv_53382;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53382;
---
> #line 142
>   tmp___28 = nla_put_u8(skb, 29, (int )((u8 )s->use_rle));
> #line 142
>   if (tmp___28 != 0) {
> #line 142
>     goto nla_put_failure;
>   } else {
> 
56088,56121c54937,54947
<   ldv_53382: 
< #line 41
<   tmp___56 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___74 = (void *)tmp___56;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___74) = 1U;
< #line 41
<   goto ldv_53389;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(1, __gu_p___74);
< #line 41
<   goto ldv_53389;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(1U, __gu_p___74);
< #line 41
<   goto ldv_53389;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(1ULL, __gu_p___74);
< #line 41
<   goto ldv_53389;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53389;
---
> #line 142
>   nla_nest_end(skb, tla);
> #line 142
>   return (0);
>   nla_put_failure: ;
> #line 142
>   if ((unsigned long )tla != (unsigned long )((struct nlattr *)0)) {
> #line 142
>     nla_nest_cancel(skb, tla);
>   } else {
> 
56123,56160c54949,54970
<   ldv_53389: 
< #line 41
<   *((char *)tags) = (char )arg->auto_sndbuf_size;
< #line 41
<   tags = tags + 1U;
< #line 41
<   tmp___57 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___75 = (void *)tmp___57;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___75) = 70U;
< #line 41
<   goto ldv_53396;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(41030, __gu_p___75);
< #line 41
<   goto ldv_53396;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(41030U, __gu_p___75);
< #line 41
<   goto ldv_53396;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(41030ULL, __gu_p___75);
< #line 41
<   goto ldv_53396;
<   default: 
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53396;
---
> #line 142
>   return (-90);
> }
> }
> #line 237 "include/linux/drbd_genl.h"
> static int timeout_parms_to_skb(struct sk_buff *skb , struct timeout_parms *s , bool const   exclude_sensitive ) 
> { 
>   struct nlattr *tla ;
>   struct nlattr *tmp ;
>   int tmp___0 ;
> 
>   {
> #line 235
>   tmp = nla_nest_start(skb, 11);
> #line 235
>   tla = tmp;
> #line 235
>   if ((unsigned long )tla == (unsigned long )((struct nlattr *)0)) {
> #line 235
>     goto nla_put_failure;
>   } else {
> 
56162,56190c54972,55548
<   ldv_53396: 
< #line 41
<   tmp___58 = tags;
< #line 41
<   tags = tags + 1;
< #line 41
<   __gu_p___76 = (void *)tmp___58;
< #line 41
<   switch (2UL) {
<   case 1UL: 
< #line 41
<   *((u8 *)__gu_p___76) = 1U;
< #line 41
<   goto ldv_53403;
<   case 2UL: 
< #line 41
<   put_unaligned_le16(1, __gu_p___76);
< #line 41
<   goto ldv_53403;
<   case 4UL: 
< #line 41
<   put_unaligned_le32(1U, __gu_p___76);
< #line 41
<   goto ldv_53403;
<   case 8UL: 
< #line 41
<   put_unaligned_le64(1ULL, __gu_p___76);
< #line 41
<   goto ldv_53403;
---
> #line 235
>   tmp___0 = nla_put_u32(skb, 1, s->timeout_type);
> #line 235
>   if (tmp___0 != 0) {
> #line 235
>     goto nla_put_failure;
>   } else {
> 
>   }
> #line 235
>   nla_nest_end(skb, tla);
> #line 235
>   return (0);
>   nla_put_failure: ;
> #line 235
>   if ((unsigned long )tla != (unsigned long )((struct nlattr *)0)) {
> #line 235
>     nla_nest_cancel(skb, tla);
>   } else {
> 
>   }
> #line 235
>   return (-90);
> }
> }
> #line 237 "include/linux/drbd_genl.h"
> __inline static int timeout_parms_to_priv_skb(struct sk_buff *skb , struct timeout_parms *s ) 
> { 
>   int tmp ;
> 
>   {
> #line 235
>   tmp = timeout_parms_to_skb(skb, s, 0);
> #line 235
>   return (tmp);
> }
> }
> #line 135
> static void set_disk_conf_defaults(struct disk_conf *x ) ;
> #line 135 "include/linux/drbd_genl.h"
> static void set_disk_conf_defaults(struct disk_conf *x ) 
> { 
> 
> 
>   {
> #line 104
>   x->on_io_error = 2U;
> #line 104
>   x->fencing = 0U;
> #line 104
>   x->resync_rate = 250U;
> #line 104
>   x->resync_after = -1;
> #line 104
>   x->al_extents = 1237U;
> #line 104
>   x->c_plan_ahead = 20U;
> #line 104
>   x->c_delay_target = 10U;
> #line 104
>   x->c_fill_target = 100U;
> #line 104
>   x->c_max_rate = 102400U;
> #line 104
>   x->c_min_rate = 250U;
> #line 104
>   x->disk_barrier = 0;
> #line 104
>   x->disk_flushes = 1;
> #line 104
>   x->disk_drain = 1;
> #line 104
>   x->md_flushes = 1;
> #line 104
>   x->disk_timeout = 0U;
> #line 104
>   x->read_balancing = 0U;
> #line 104
>   x->al_updates = 1;
> #line 105
>   return;
> }
> }
> #line 140
> static void set_res_opts_defaults(struct res_opts *x ) ;
> #line 140 "include/linux/drbd_genl.h"
> static void set_res_opts_defaults(struct res_opts *x ) 
> { 
> 
> 
>   {
> #line 137
>   memset((void *)(& x->cpu_mask), 0, 32UL);
> #line 137
>   x->cpu_mask_len = 0U;
> #line 137
>   x->on_no_data = 0U;
> #line 138
>   return;
> }
> }
> #line 174
> static void set_net_conf_defaults(struct net_conf *x ) ;
> #line 174 "include/linux/drbd_genl.h"
> static void set_net_conf_defaults(struct net_conf *x ) 
> { 
> 
> 
>   {
> #line 142
>   memset((void *)(& x->shared_secret), 0, 64UL);
> #line 142
>   x->shared_secret_len = 0U;
> #line 142
>   memset((void *)(& x->cram_hmac_alg), 0, 64UL);
> #line 142
>   x->cram_hmac_alg_len = 0U;
> #line 142
>   memset((void *)(& x->integrity_alg), 0, 64UL);
> #line 142
>   x->integrity_alg_len = 0U;
> #line 142
>   memset((void *)(& x->verify_alg), 0, 64UL);
> #line 142
>   x->verify_alg_len = 0U;
> #line 142
>   memset((void *)(& x->csums_alg), 0, 64UL);
> #line 142
>   x->csums_alg_len = 0U;
> #line 142
>   x->wire_protocol = 3U;
> #line 142
>   x->connect_int = 10U;
> #line 142
>   x->timeout = 60U;
> #line 142
>   x->ping_int = 10U;
> #line 142
>   x->ping_timeo = 5U;
> #line 142
>   x->sndbuf_size = 0U;
> #line 142
>   x->rcvbuf_size = 0U;
> #line 142
>   x->ko_count = 7U;
> #line 142
>   x->max_buffers = 2048U;
> #line 142
>   x->max_epoch_size = 2048U;
> #line 142
>   x->unplug_watermark = 128U;
> #line 142
>   x->after_sb_0p = 0U;
> #line 142
>   x->after_sb_1p = 0U;
> #line 142
>   x->after_sb_2p = 0U;
> #line 142
>   x->rr_conflict = 0U;
> #line 142
>   x->on_congestion = 0U;
> #line 142
>   x->cong_fill = 0U;
> #line 142
>   x->cong_extents = 1237U;
> #line 142
>   x->two_primaries = 0;
> #line 142
>   x->tcp_cork = 1;
> #line 142
>   x->always_asbp = 0;
> #line 142
>   x->use_rle = 1;
> #line 143
>   return;
> }
> }
> #line 169 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> static char *drbd_m_holder  =    (char *)"Hands off! this is DRBD\'s meta data device.";
> #line 194 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> static struct drbd_config_context adm_ctx  ;
> #line 196 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> static void drbd_adm_send_reply(struct sk_buff *skb , struct genl_info *info ) 
> { 
>   struct nlmsghdr *tmp ;
>   void *tmp___0 ;
>   void *tmp___1 ;
>   int tmp___2 ;
> 
>   {
> #line 198
>   tmp = nlmsg_hdr((struct sk_buff  const  *)skb);
> #line 198
>   tmp___0 = nlmsg_data((struct nlmsghdr  const  *)tmp);
> #line 198
>   tmp___1 = genlmsg_data((struct genlmsghdr  const  *)tmp___0);
> #line 198
>   genlmsg_end(skb, tmp___1);
> #line 199
>   tmp___2 = genlmsg_reply(skb, info);
> #line 199
>   if (tmp___2 != 0) {
> #line 200
>     printk("\vdrbd: error sending genl reply\n");
>   } else {
> 
>   }
> #line 201
>   return;
> }
> }
> #line 205 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_msg_put_info(char const   *info ) 
> { 
>   struct sk_buff *skb ;
>   struct nlattr *nla ;
>   int err ;
> 
>   {
> #line 207
>   skb = adm_ctx.reply_skb;
> #line 209
>   err = -90;
> #line 211
>   if ((unsigned long )info == (unsigned long )((char const   *)0) || (int )((signed char )*info) == 0) {
> #line 212
>     return (0);
>   } else {
> 
>   }
> #line 214
>   nla = nla_nest_start(skb, 1);
> #line 215
>   if ((unsigned long )nla == (unsigned long )((struct nlattr *)0)) {
> #line 216
>     return (err);
>   } else {
> 
>   }
> #line 218
>   err = nla_put_string(skb, 16385, info);
> #line 219
>   if (err != 0) {
> #line 220
>     nla_nest_cancel(skb, nla);
> #line 221
>     return (err);
>   } else {
> #line 223
>     nla_nest_end(skb, nla);
>   }
> #line 224
>   return (0);
> }
> }
> #line 235 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> static int drbd_adm_prepare(struct sk_buff *skb , struct genl_info *info , unsigned int flags ) 
> { 
>   struct drbd_genlmsghdr *d_in ;
>   u8 cmd ;
>   int err ;
>   bool tmp ;
>   int tmp___0 ;
>   void *tmp___1 ;
>   struct nlattr *nla ;
>   void *tmp___2 ;
>   int tmp___3 ;
>   int tmp___4 ;
>   int tmp___5 ;
>   void *tmp___6 ;
>   int tmp___7 ;
>   void *tmp___8 ;
> 
>   {
> #line 238
>   d_in = (struct drbd_genlmsghdr *)info->userhdr;
> #line 239
>   cmd = (info->genlhdr)->cmd;
> #line 242
>   memset((void *)(& adm_ctx), 0, 64UL);
> #line 245
>   if ((unsigned int )cmd != 2U) {
> #line 245
>     tmp = capable(12);
> #line 245
>     if (tmp) {
> #line 245
>       tmp___0 = 0;
>     } else {
> #line 245
>       tmp___0 = 1;
>     }
> #line 245
>     if (tmp___0) {
> #line 246
>       return (-1);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 248
>   adm_ctx.reply_skb = genlmsg_new(3776UL, 208U);
> #line 249
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 250
>     err = -12;
> #line 251
>     goto fail;
>   } else {
> 
>   }
> #line 254
>   tmp___1 = genlmsg_put_reply(adm_ctx.reply_skb, info, & drbd_genl_family, 0, (int )cmd);
> #line 254
>   adm_ctx.reply_dh = (struct drbd_genlmsghdr *)tmp___1;
> #line 258
>   if ((unsigned long )adm_ctx.reply_dh == (unsigned long )((struct drbd_genlmsghdr *)0)) {
> #line 259
>     err = -12;
> #line 260
>     goto fail;
>   } else {
> 
>   }
> #line 263
>   (adm_ctx.reply_dh)->minor = d_in->minor;
> #line 264
>   (adm_ctx.reply_dh)->ldv_49826.ret_code = 101;
> #line 266
>   adm_ctx.volume = 4294967295U;
> #line 267
>   if ((unsigned long )*(info->attrs + 2UL) != (unsigned long )((struct nlattr *)0)) {
> #line 270
>     err = drbd_cfg_context_from_attrs(0, info);
> #line 271
>     if (err != 0) {
> #line 272
>       goto fail;
>     } else {
> 
>     }
> #line 276
>     err = nla_put_nohdr(adm_ctx.reply_skb, (int )(*(info->attrs + 2UL))->nla_len,
>                         (void const   *)*(info->attrs + 2UL));
> #line 279
>     if (err != 0) {
> #line 280
>       goto fail;
>     } else {
> 
>     }
> #line 283
>     nla = nested_attr_tb[1];
> #line 284
>     if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 285
>       adm_ctx.volume = nla_get_u32((struct nlattr  const  *)nla);
>     } else {
> 
>     }
> #line 286
>     nla = nested_attr_tb[2];
> #line 287
>     if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 288
>       tmp___2 = nla_data((struct nlattr  const  *)nla);
> #line 288
>       adm_ctx.resource_name = (char *)tmp___2;
>     } else {
> 
>     }
> #line 289
>     adm_ctx.my_addr = nested_attr_tb[3];
> #line 290
>     adm_ctx.peer_addr = nested_attr_tb[4];
> #line 291
>     if ((unsigned long )adm_ctx.my_addr != (unsigned long )((struct nlattr *)0)) {
> #line 291
>       tmp___3 = nla_len((struct nlattr  const  *)adm_ctx.my_addr);
> #line 291
>       if ((unsigned int )tmp___3 > 128U) {
> #line 295
>         err = -22;
> #line 296
>         goto fail;
>       } else {
> #line 291
>         goto _L;
>       }
>     } else
>     _L: /* CIL Label */ 
> #line 291
>     if ((unsigned long )adm_ctx.peer_addr != (unsigned long )((struct nlattr *)0)) {
> #line 291
>       tmp___4 = nla_len((struct nlattr  const  *)adm_ctx.peer_addr);
> #line 291
>       if ((unsigned int )tmp___4 > 128U) {
> #line 295
>         err = -22;
> #line 296
>         goto fail;
>       } else {
> 
>       }
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 300
>   adm_ctx.minor = d_in->minor;
> #line 301
>   adm_ctx.mdev = minor_to_mdev(d_in->minor);
> #line 302
>   adm_ctx.tconn = conn_get_by_name((char const   *)adm_ctx.resource_name);
> #line 304
>   if ((unsigned long )adm_ctx.mdev == (unsigned long )((struct drbd_conf *)0) && (int )flags & 1) {
> #line 305
>     drbd_msg_put_info("unknown minor");
> #line 306
>     return (127);
>   } else {
> 
>   }
> #line 308
>   if ((unsigned long )adm_ctx.tconn == (unsigned long )((struct drbd_tconn *)0) && (flags & 2U) != 0U) {
> #line 309
>     drbd_msg_put_info("unknown resource");
> #line 310
>     return (162);
>   } else {
> 
>   }
> #line 313
>   if ((flags & 4U) != 0U) {
> #line 314
>     if ((unsigned long )adm_ctx.tconn != (unsigned long )((struct drbd_tconn *)0) && (flags & 2U) == 0U) {
> #line 315
>       drbd_msg_put_info("no resource name expected");
> #line 316
>       return (162);
>     } else {
> 
>     }
> #line 318
>     if ((unsigned long )adm_ctx.mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 319
>       drbd_msg_put_info("no minor number expected");
> #line 320
>       return (162);
>     } else {
> 
>     }
> #line 322
>     if ((unsigned long )adm_ctx.my_addr != (unsigned long )((struct nlattr *)0) && (unsigned long )adm_ctx.peer_addr != (unsigned long )((struct nlattr *)0)) {
> #line 323
>       tmp___5 = nla_len((struct nlattr  const  *)adm_ctx.peer_addr);
> #line 323
>       tmp___6 = nla_data((struct nlattr  const  *)adm_ctx.peer_addr);
> #line 323
>       tmp___7 = nla_len((struct nlattr  const  *)adm_ctx.my_addr);
> #line 323
>       tmp___8 = nla_data((struct nlattr  const  *)adm_ctx.my_addr);
> #line 323
>       adm_ctx.tconn = conn_get_by_addrs(tmp___8, tmp___7, tmp___6, tmp___5);
>     } else {
> 
>     }
> #line 327
>     if ((unsigned long )adm_ctx.tconn == (unsigned long )((struct drbd_tconn *)0)) {
> #line 328
>       drbd_msg_put_info("unknown connection");
> #line 329
>       return (162);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 334
>   if (((unsigned long )adm_ctx.mdev != (unsigned long )((struct drbd_conf *)0) && (unsigned long )adm_ctx.tconn != (unsigned long )((struct drbd_tconn *)0)) && (unsigned long )(adm_ctx.mdev)->tconn != (unsigned long )adm_ctx.tconn) {
> #line 336
>     printk("\frequest: minor=%u, resource=%s; but that minor belongs to connection %s\n",
>            adm_ctx.minor, adm_ctx.resource_name, ((adm_ctx.mdev)->tconn)->name);
> #line 339
>     drbd_msg_put_info("minor exists in different resource");
> #line 340
>     return (162);
>   } else {
> 
>   }
> #line 342
>   if (((unsigned long )adm_ctx.mdev != (unsigned long )((struct drbd_conf *)0) && adm_ctx.volume != 4294967295U) && adm_ctx.volume != (unsigned int )(adm_ctx.mdev)->vnr) {
> #line 345
>     printk("\frequest: minor=%u, volume=%u; but that minor is volume %u in %s\n",
>            adm_ctx.minor, adm_ctx.volume, (adm_ctx.mdev)->vnr, ((adm_ctx.mdev)->tconn)->name);
> #line 348
>     drbd_msg_put_info("minor exists as different volume");
> #line 349
>     return (162);
>   } else {
> 
>   }
> #line 352
>   return (101);
>   fail: 
> #line 355
>   nlmsg_free(adm_ctx.reply_skb);
> #line 356
>   adm_ctx.reply_skb = 0;
> #line 357
>   return (err);
> }
> }
> #line 360 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> static int drbd_adm_finish(struct genl_info *info , int retcode ) 
> { 
> 
> 
>   {
> #line 362
>   if ((unsigned long )adm_ctx.tconn != (unsigned long )((struct drbd_tconn *)0)) {
> #line 363
>     kref_put(& (adm_ctx.tconn)->kref, & conn_destroy);
> #line 364
>     adm_ctx.tconn = 0;
>   } else {
> 
>   }
> #line 367
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 368
>     return (-12);
>   } else {
> 
>   }
> #line 370
>   (adm_ctx.reply_dh)->ldv_49826.ret_code = retcode;
> #line 371
>   drbd_adm_send_reply(adm_ctx.reply_skb, info);
> #line 372
>   return (0);
> }
> }
> #line 375 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> static void setup_khelper_env(struct drbd_tconn *tconn , char **envp ) 
> { 
>   char *afs ;
> 
>   {
> #line 380
>   if (tconn->my_addr_len == 0 || tconn->peer_addr_len == 0) {
> #line 381
>     return;
>   } else {
> 
>   }
> #line 383
>   switch ((int )((struct sockaddr *)(& tconn->peer_addr))->sa_family) {
>   case 10: 
> #line 385
>   afs = (char *)"ipv6";
> #line 386
>   snprintf(*(envp + 4UL), 60UL, "DRBD_PEER_ADDRESS=%pI6", & ((struct sockaddr_in6 *)(& tconn->peer_addr))->sin6_addr);
> #line 388
>   goto ldv_53159;
>   case 2: 
> #line 390
>   afs = (char *)"ipv4";
> #line 391
>   snprintf(*(envp + 4UL), 60UL, "DRBD_PEER_ADDRESS=%pI4", & ((struct sockaddr_in *)(& tconn->peer_addr))->sin_addr);
> #line 393
>   goto ldv_53159;
56192,56195c55550,55553
< #line 41
<   __bad_unaligned_access_size();
< #line 41
<   goto ldv_53403;
---
> #line 395
>   afs = (char *)"ssocks";
> #line 396
>   snprintf(*(envp + 4UL), 60UL, "DRBD_PEER_ADDRESS=%pI4", & ((struct sockaddr_in *)(& tconn->peer_addr))->sin_addr);
56197,56203c55555,63509
<   ldv_53403: 
< #line 41
<   *((char *)tags) = (char )arg->dry_run;
< #line 41
<   tags = tags + 1U;
< #line 41
<   return (tags);
---
>   ldv_53159: 
> #line 399
>   snprintf(*(envp + 3UL), 20UL, "DRBD_PEER_AF=%s", afs);
> #line 400
>   return;
> }
> }
> #line 402 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_khelper(struct drbd_conf *mdev , char *cmd ) 
> { 
>   char *envp[6U] ;
>   char __constr_expr_0[20] ;
>   char __constr_expr_1[60] ;
>   char mb[12U] ;
>   char *argv[4U] ;
>   struct drbd_tconn *tconn ;
>   struct sib_info sib ;
>   int ret ;
>   struct task_struct *tmp ;
>   unsigned int tmp___0 ;
>   struct task_struct *tmp___1 ;
> 
>   {
> #line 404
>   __constr_expr_0[0] = (char)0;
> #line 404
>   __constr_expr_0[1] = (char)0;
> #line 404
>   __constr_expr_0[2] = (char)0;
> #line 404
>   __constr_expr_0[3] = (char)0;
> #line 404
>   __constr_expr_0[4] = (char)0;
> #line 404
>   __constr_expr_0[5] = (char)0;
> #line 404
>   __constr_expr_0[6] = (char)0;
> #line 404
>   __constr_expr_0[7] = (char)0;
> #line 404
>   __constr_expr_0[8] = (char)0;
> #line 404
>   __constr_expr_0[9] = (char)0;
> #line 404
>   __constr_expr_0[10] = (char)0;
> #line 404
>   __constr_expr_0[11] = (char)0;
> #line 404
>   __constr_expr_0[12] = (char)0;
> #line 404
>   __constr_expr_0[13] = (char)0;
> #line 404
>   __constr_expr_0[14] = (char)0;
> #line 404
>   __constr_expr_0[15] = (char)0;
> #line 404
>   __constr_expr_0[16] = (char)0;
> #line 404
>   __constr_expr_0[17] = (char)0;
> #line 404
>   __constr_expr_0[18] = (char)0;
> #line 404
>   __constr_expr_0[19] = (char)0;
> #line 404
>   __constr_expr_1[0] = (char)0;
> #line 404
>   __constr_expr_1[1] = (char)0;
> #line 404
>   __constr_expr_1[2] = (char)0;
> #line 404
>   __constr_expr_1[3] = (char)0;
> #line 404
>   __constr_expr_1[4] = (char)0;
> #line 404
>   __constr_expr_1[5] = (char)0;
> #line 404
>   __constr_expr_1[6] = (char)0;
> #line 404
>   __constr_expr_1[7] = (char)0;
> #line 404
>   __constr_expr_1[8] = (char)0;
> #line 404
>   __constr_expr_1[9] = (char)0;
> #line 404
>   __constr_expr_1[10] = (char)0;
> #line 404
>   __constr_expr_1[11] = (char)0;
> #line 404
>   __constr_expr_1[12] = (char)0;
> #line 404
>   __constr_expr_1[13] = (char)0;
> #line 404
>   __constr_expr_1[14] = (char)0;
> #line 404
>   __constr_expr_1[15] = (char)0;
> #line 404
>   __constr_expr_1[16] = (char)0;
> #line 404
>   __constr_expr_1[17] = (char)0;
> #line 404
>   __constr_expr_1[18] = (char)0;
> #line 404
>   __constr_expr_1[19] = (char)0;
> #line 404
>   __constr_expr_1[20] = (char)0;
> #line 404
>   __constr_expr_1[21] = (char)0;
> #line 404
>   __constr_expr_1[22] = (char)0;
> #line 404
>   __constr_expr_1[23] = (char)0;
> #line 404
>   __constr_expr_1[24] = (char)0;
> #line 404
>   __constr_expr_1[25] = (char)0;
> #line 404
>   __constr_expr_1[26] = (char)0;
> #line 404
>   __constr_expr_1[27] = (char)0;
> #line 404
>   __constr_expr_1[28] = (char)0;
> #line 404
>   __constr_expr_1[29] = (char)0;
> #line 404
>   __constr_expr_1[30] = (char)0;
> #line 404
>   __constr_expr_1[31] = (char)0;
> #line 404
>   __constr_expr_1[32] = (char)0;
> #line 404
>   __constr_expr_1[33] = (char)0;
> #line 404
>   __constr_expr_1[34] = (char)0;
> #line 404
>   __constr_expr_1[35] = (char)0;
> #line 404
>   __constr_expr_1[36] = (char)0;
> #line 404
>   __constr_expr_1[37] = (char)0;
> #line 404
>   __constr_expr_1[38] = (char)0;
> #line 404
>   __constr_expr_1[39] = (char)0;
> #line 404
>   __constr_expr_1[40] = (char)0;
> #line 404
>   __constr_expr_1[41] = (char)0;
> #line 404
>   __constr_expr_1[42] = (char)0;
> #line 404
>   __constr_expr_1[43] = (char)0;
> #line 404
>   __constr_expr_1[44] = (char)0;
> #line 404
>   __constr_expr_1[45] = (char)0;
> #line 404
>   __constr_expr_1[46] = (char)0;
> #line 404
>   __constr_expr_1[47] = (char)0;
> #line 404
>   __constr_expr_1[48] = (char)0;
> #line 404
>   __constr_expr_1[49] = (char)0;
> #line 404
>   __constr_expr_1[50] = (char)0;
> #line 404
>   __constr_expr_1[51] = (char)0;
> #line 404
>   __constr_expr_1[52] = (char)0;
> #line 404
>   __constr_expr_1[53] = (char)0;
> #line 404
>   __constr_expr_1[54] = (char)0;
> #line 404
>   __constr_expr_1[55] = (char)0;
> #line 404
>   __constr_expr_1[56] = (char)0;
> #line 404
>   __constr_expr_1[57] = (char)0;
> #line 404
>   __constr_expr_1[58] = (char)0;
> #line 404
>   __constr_expr_1[59] = (char)0;
> #line 404
>   envp[0] = (char *)"HOME=/";
> #line 404
>   envp[1] = (char *)"TERM=linux";
> #line 404
>   envp[2] = (char *)"PATH=/sbin:/usr/sbin:/bin:/usr/bin";
> #line 404
>   envp[3] = (char *)(& __constr_expr_0);
> #line 404
>   envp[4] = (char *)(& __constr_expr_1);
> #line 404
>   envp[5] = 0;
> #line 411
>   argv[0] = (char *)(& usermode_helper);
> #line 411
>   argv[1] = cmd;
> #line 411
>   argv[2] = (char *)(& mb);
> #line 411
>   argv[3] = 0;
> #line 412
>   tconn = mdev->tconn;
> #line 416
>   tmp = get_current();
> #line 416
>   if ((unsigned long )tmp == (unsigned long )tconn->worker.task) {
> #line 417
>     set_bit(11U, (unsigned long volatile   *)(& tconn->flags));
>   } else {
> 
>   }
> #line 419
>   tmp___0 = mdev_to_minor(mdev);
> #line 419
>   snprintf((char *)(& mb), 12UL, "minor-%d", tmp___0);
> #line 420
>   setup_khelper_env(tconn, (char **)(& envp));
> #line 424
>   drbd_md_sync(mdev);
> #line 426
>   _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "helper command: %s %s %s\n",
>             (char *)(& usermode_helper), cmd, (char *)(& mb));
> #line 427
>   sib.sib_reason = SIB_HELPER_PRE;
> #line 428
>   sib.ldv_50742.ldv_50737.helper_name = cmd;
> #line 429
>   drbd_bcast_event(mdev, (struct sib_info  const  *)(& sib));
> #line 430
>   ret = call_usermodehelper((char *)(& usermode_helper), (char **)(& argv), (char **)(& envp),
>                             2);
> #line 431
>   if (ret != 0) {
> #line 432
>     dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "helper command: %s %s %s exit code %u (0x%x)\n",
>              (char *)(& usermode_helper), cmd, (char *)(& mb), (ret >> 8) & 255, ret);
>   } else {
> #line 436
>     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "helper command: %s %s %s exit code %u (0x%x)\n",
>               (char *)(& usermode_helper), cmd, (char *)(& mb), (ret >> 8) & 255,
>               ret);
>   }
> #line 439
>   sib.sib_reason = SIB_HELPER_POST;
> #line 440
>   sib.ldv_50742.ldv_50737.helper_exit_code = (unsigned int )ret;
> #line 441
>   drbd_bcast_event(mdev, (struct sib_info  const  *)(& sib));
> #line 443
>   tmp___1 = get_current();
> #line 443
>   if ((unsigned long )tmp___1 == (unsigned long )tconn->worker.task) {
> #line 444
>     clear_bit(11, (unsigned long volatile   *)(& tconn->flags));
>   } else {
> 
>   }
> #line 446
>   if (ret < 0) {
> #line 447
>     ret = 0;
>   } else {
> 
>   }
> #line 449
>   return (ret);
> }
> }
> #line 452 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> int conn_khelper(struct drbd_tconn *tconn , char *cmd ) 
> { 
>   char *envp[6U] ;
>   char __constr_expr_0[20] ;
>   char __constr_expr_1[60] ;
>   char *argv[4U] ;
>   int ret ;
> 
>   {
> #line 454
>   __constr_expr_0[0] = (char)0;
> #line 454
>   __constr_expr_0[1] = (char)0;
> #line 454
>   __constr_expr_0[2] = (char)0;
> #line 454
>   __constr_expr_0[3] = (char)0;
> #line 454
>   __constr_expr_0[4] = (char)0;
> #line 454
>   __constr_expr_0[5] = (char)0;
> #line 454
>   __constr_expr_0[6] = (char)0;
> #line 454
>   __constr_expr_0[7] = (char)0;
> #line 454
>   __constr_expr_0[8] = (char)0;
> #line 454
>   __constr_expr_0[9] = (char)0;
> #line 454
>   __constr_expr_0[10] = (char)0;
> #line 454
>   __constr_expr_0[11] = (char)0;
> #line 454
>   __constr_expr_0[12] = (char)0;
> #line 454
>   __constr_expr_0[13] = (char)0;
> #line 454
>   __constr_expr_0[14] = (char)0;
> #line 454
>   __constr_expr_0[15] = (char)0;
> #line 454
>   __constr_expr_0[16] = (char)0;
> #line 454
>   __constr_expr_0[17] = (char)0;
> #line 454
>   __constr_expr_0[18] = (char)0;
> #line 454
>   __constr_expr_0[19] = (char)0;
> #line 454
>   __constr_expr_1[0] = (char)0;
> #line 454
>   __constr_expr_1[1] = (char)0;
> #line 454
>   __constr_expr_1[2] = (char)0;
> #line 454
>   __constr_expr_1[3] = (char)0;
> #line 454
>   __constr_expr_1[4] = (char)0;
> #line 454
>   __constr_expr_1[5] = (char)0;
> #line 454
>   __constr_expr_1[6] = (char)0;
> #line 454
>   __constr_expr_1[7] = (char)0;
> #line 454
>   __constr_expr_1[8] = (char)0;
> #line 454
>   __constr_expr_1[9] = (char)0;
> #line 454
>   __constr_expr_1[10] = (char)0;
> #line 454
>   __constr_expr_1[11] = (char)0;
> #line 454
>   __constr_expr_1[12] = (char)0;
> #line 454
>   __constr_expr_1[13] = (char)0;
> #line 454
>   __constr_expr_1[14] = (char)0;
> #line 454
>   __constr_expr_1[15] = (char)0;
> #line 454
>   __constr_expr_1[16] = (char)0;
> #line 454
>   __constr_expr_1[17] = (char)0;
> #line 454
>   __constr_expr_1[18] = (char)0;
> #line 454
>   __constr_expr_1[19] = (char)0;
> #line 454
>   __constr_expr_1[20] = (char)0;
> #line 454
>   __constr_expr_1[21] = (char)0;
> #line 454
>   __constr_expr_1[22] = (char)0;
> #line 454
>   __constr_expr_1[23] = (char)0;
> #line 454
>   __constr_expr_1[24] = (char)0;
> #line 454
>   __constr_expr_1[25] = (char)0;
> #line 454
>   __constr_expr_1[26] = (char)0;
> #line 454
>   __constr_expr_1[27] = (char)0;
> #line 454
>   __constr_expr_1[28] = (char)0;
> #line 454
>   __constr_expr_1[29] = (char)0;
> #line 454
>   __constr_expr_1[30] = (char)0;
> #line 454
>   __constr_expr_1[31] = (char)0;
> #line 454
>   __constr_expr_1[32] = (char)0;
> #line 454
>   __constr_expr_1[33] = (char)0;
> #line 454
>   __constr_expr_1[34] = (char)0;
> #line 454
>   __constr_expr_1[35] = (char)0;
> #line 454
>   __constr_expr_1[36] = (char)0;
> #line 454
>   __constr_expr_1[37] = (char)0;
> #line 454
>   __constr_expr_1[38] = (char)0;
> #line 454
>   __constr_expr_1[39] = (char)0;
> #line 454
>   __constr_expr_1[40] = (char)0;
> #line 454
>   __constr_expr_1[41] = (char)0;
> #line 454
>   __constr_expr_1[42] = (char)0;
> #line 454
>   __constr_expr_1[43] = (char)0;
> #line 454
>   __constr_expr_1[44] = (char)0;
> #line 454
>   __constr_expr_1[45] = (char)0;
> #line 454
>   __constr_expr_1[46] = (char)0;
> #line 454
>   __constr_expr_1[47] = (char)0;
> #line 454
>   __constr_expr_1[48] = (char)0;
> #line 454
>   __constr_expr_1[49] = (char)0;
> #line 454
>   __constr_expr_1[50] = (char)0;
> #line 454
>   __constr_expr_1[51] = (char)0;
> #line 454
>   __constr_expr_1[52] = (char)0;
> #line 454
>   __constr_expr_1[53] = (char)0;
> #line 454
>   __constr_expr_1[54] = (char)0;
> #line 454
>   __constr_expr_1[55] = (char)0;
> #line 454
>   __constr_expr_1[56] = (char)0;
> #line 454
>   __constr_expr_1[57] = (char)0;
> #line 454
>   __constr_expr_1[58] = (char)0;
> #line 454
>   __constr_expr_1[59] = (char)0;
> #line 454
>   envp[0] = (char *)"HOME=/";
> #line 454
>   envp[1] = (char *)"TERM=linux";
> #line 454
>   envp[2] = (char *)"PATH=/sbin:/usr/sbin:/bin:/usr/bin";
> #line 454
>   envp[3] = (char *)(& __constr_expr_0);
> #line 454
>   envp[4] = (char *)(& __constr_expr_1);
> #line 454
>   envp[5] = 0;
> #line 460
>   argv[0] = (char *)(& usermode_helper);
> #line 460
>   argv[1] = cmd;
> #line 460
>   argv[2] = tconn->name;
> #line 460
>   argv[3] = 0;
> #line 463
>   setup_khelper_env(tconn, (char **)(& envp));
> #line 464
>   conn_md_sync(tconn);
> #line 466
>   printk("\016d-con %s: helper command: %s %s %s\n", tconn->name, (char *)(& usermode_helper),
>          cmd, tconn->name);
> #line 469
>   ret = call_usermodehelper((char *)(& usermode_helper), (char **)(& argv), (char **)(& envp),
>                             2);
> #line 470
>   if (ret != 0) {
> #line 471
>     printk("\fd-con %s: helper command: %s %s %s exit code %u (0x%x)\n", tconn->name,
>            (char *)(& usermode_helper), cmd, tconn->name, (ret >> 8) & 255, ret);
>   } else {
> #line 475
>     printk("\016d-con %s: helper command: %s %s %s exit code %u (0x%x)\n", tconn->name,
>            (char *)(& usermode_helper), cmd, tconn->name, (ret >> 8) & 255, ret);
>   }
> #line 480
>   if (ret < 0) {
> #line 481
>     ret = 0;
>   } else {
> 
>   }
> #line 483
>   return (ret);
> }
> }
> #line 486 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> static enum drbd_fencing_p highest_fencing_policy(struct drbd_tconn *tconn ) 
> { 
>   enum drbd_fencing_p fp ;
>   struct drbd_conf *mdev ;
>   int vnr ;
>   void *tmp ;
>   enum drbd_fencing_p __max1 ;
>   enum drbd_fencing_p __max2 ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp___0 ;
>   int tmp___1 ;
>   int tmp___2 ;
>   void *tmp___3 ;
> 
>   {
> #line 488
>   fp = -1;
> #line 492
>   rcu_read_lock___6();
> #line 493
>   vnr = 0;
> #line 493
>   tmp = idr_get_next(& tconn->volumes, & vnr);
> #line 493
>   mdev = (struct drbd_conf *)tmp;
> #line 493
>   goto ldv_53196;
>   ldv_53195: 
> #line 494
>   tmp___2 = _get_ldev_if_state(mdev, D_CONSISTENT);
> #line 494
>   if (tmp___2 != 0) {
> #line 495
>     __max1 = fp;
> #line 495
>     _________p1 = *((struct disk_conf * volatile  *)(& (mdev->ldev)->disk_conf));
> #line 495
>     tmp___0 = debug_lockdep_rcu_enabled();
> #line 495
>     if (tmp___0 != 0 && ! __warned) {
> #line 495
>       tmp___1 = rcu_read_lock_held();
> #line 495
>       if (tmp___1 == 0 && 1) {
> #line 495
>         __warned = 1;
> #line 495
>         lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared",
>                                496, "suspicious rcu_dereference_check() usage");
>       } else {
> 
>       }
>     } else {
> 
>     }
> #line 495
>     __max2 = (enum drbd_fencing_p )_________p1->fencing;
> #line 495
>     fp = (enum drbd_fencing_p )((int )__max1 > (int )__max2 ? (int )__max1 : (int )__max2);
> #line 497
>     put_ldev(mdev);
>   } else {
> 
>   }
> #line 493
>   vnr = vnr + 1;
> #line 493
>   tmp___3 = idr_get_next(& tconn->volumes, & vnr);
> #line 493
>   mdev = (struct drbd_conf *)tmp___3;
>   ldv_53196: ;
> #line 493
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 494
>     goto ldv_53195;
>   } else {
> 
>   }
> #line 500
>   rcu_read_unlock___6();
> #line 502
>   return (fp);
> }
> }
> #line 505 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> bool conn_try_outdate_peer(struct drbd_tconn *tconn ) 
> { 
>   union drbd_state mask ;
>   union drbd_state val ;
>   enum drbd_fencing_p fp ;
>   char *ex_to_string ;
>   int r ;
>   enum drbd_disk_state tmp ;
>   int tmp___0 ;
>   enum drbd_disk_state tmp___1 ;
> 
>   {
> #line 507
>   mask.ldv_40024.role = (unsigned char)0;
> #line 507
>   mask.ldv_40024.peer = (unsigned char)0;
> #line 507
>   mask.ldv_40024.conn = (unsigned char)0;
> #line 507
>   mask.ldv_40024.disk = (unsigned char)0;
> #line 507
>   mask.ldv_40024.pdsk = (unsigned char)0;
> #line 507
>   mask.ldv_40024.susp = (unsigned char)0;
> #line 507
>   mask.ldv_40024.aftr_isp = (unsigned char)0;
> #line 507
>   mask.ldv_40024.peer_isp = (unsigned char)0;
> #line 507
>   mask.ldv_40024.user_isp = (unsigned char)0;
> #line 507
>   mask.ldv_40024.susp_nod = (unsigned char)0;
> #line 507
>   mask.ldv_40024.susp_fen = (unsigned char)0;
> #line 507
>   mask.ldv_40024._pad = (unsigned short)0;
> #line 508
>   val.ldv_40024.role = (unsigned char)0;
> #line 508
>   val.ldv_40024.peer = (unsigned char)0;
> #line 508
>   val.ldv_40024.conn = (unsigned char)0;
> #line 508
>   val.ldv_40024.disk = (unsigned char)0;
> #line 508
>   val.ldv_40024.pdsk = (unsigned char)0;
> #line 508
>   val.ldv_40024.susp = (unsigned char)0;
> #line 508
>   val.ldv_40024.aftr_isp = (unsigned char)0;
> #line 508
>   val.ldv_40024.peer_isp = (unsigned char)0;
> #line 508
>   val.ldv_40024.user_isp = (unsigned char)0;
> #line 508
>   val.ldv_40024.susp_nod = (unsigned char)0;
> #line 508
>   val.ldv_40024.susp_fen = (unsigned char)0;
> #line 508
>   val.ldv_40024._pad = (unsigned short)0;
> #line 513
>   if ((unsigned int )tconn->cstate > 8U) {
> #line 514
>     printk("\vd-con %s: Expected cstate < C_WF_REPORT_PARAMS\n", tconn->name);
> #line 515
>     return (0);
>   } else {
> 
>   }
> #line 518
>   fp = highest_fencing_policy(tconn);
> #line 519
>   switch ((int )fp) {
>   case -1: 
> #line 521
>   printk("\fd-con %s: Not fencing peer, I\'m not even Consistent myself.\n", tconn->name);
> #line 522
>   goto out;
>   case 0: ;
> #line 524
>   return (1);
>   default: ;
>   }
> #line 528
>   r = conn_khelper(tconn, (char *)"fence-peer");
> #line 530
>   switch ((r >> 8) & 255) {
>   case 3: 
> #line 532
>   ex_to_string = (char *)"peer is inconsistent or worse";
> #line 533
>   mask.ldv_40024.pdsk = 15U;
> #line 534
>   val.ldv_40024.pdsk = 4U;
> #line 535
>   goto ldv_53211;
>   case 4: 
> #line 537
>   ex_to_string = (char *)"peer was fenced";
> #line 538
>   mask.ldv_40024.pdsk = 15U;
> #line 539
>   val.ldv_40024.pdsk = 5U;
> #line 540
>   goto ldv_53211;
>   case 5: 
> #line 542
>   tmp = conn_highest_disk(tconn);
> #line 542
>   if ((unsigned int )tmp == 8U) {
> #line 544
>     ex_to_string = (char *)"peer is unreachable, assumed to be dead";
> #line 545
>     mask.ldv_40024.pdsk = 15U;
> #line 546
>     val.ldv_40024.pdsk = 5U;
>   } else {
> #line 548
>     ex_to_string = (char *)"peer unreachable, doing nothing since disk != UpToDate";
>   }
> #line 550
>   goto ldv_53211;
>   case 6: 
> #line 554
>   ex_to_string = (char *)"peer is active";
> #line 555
>   printk("\fd-con %s: Peer is primary, outdating myself.\n", tconn->name);
> #line 556
>   mask.ldv_40024.disk = 15U;
> #line 557
>   val.ldv_40024.disk = 5U;
> #line 558
>   goto ldv_53211;
>   case 7: ;
> #line 560
>   if ((int )fp != 2) {
> #line 561
>     printk("\vd-con %s: fence-peer() = 7 && fencing != Stonith !!!\n", tconn->name);
>   } else {
> 
>   }
> #line 562
>   ex_to_string = (char *)"peer was stonithed";
> #line 563
>   mask.ldv_40024.pdsk = 15U;
> #line 564
>   val.ldv_40024.pdsk = 5U;
> #line 565
>   goto ldv_53211;
>   default: 
> #line 568
>   printk("\vd-con %s: fence-peer helper broken, returned %d\n", tconn->name, (r >> 8) & 255);
> #line 569
>   return (0);
>   }
>   ldv_53211: 
> #line 572
>   printk("\016d-con %s: fence-peer helper returned %d (%s)\n", tconn->name, (r >> 8) & 255,
>          ex_to_string);
>   out: 
> #line 581
>   spin_lock_irq(& tconn->req_lock);
> #line 582
>   if ((unsigned int )tconn->cstate <= 8U) {
> #line 582
>     tmp___0 = constant_test_bit(10U, (unsigned long const volatile   *)(& tconn->flags));
> #line 582
>     if (tmp___0 == 0) {
> #line 583
>       _conn_request_state(tconn, mask, val, CS_VERBOSE);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 584
>   spin_unlock_irq(& tconn->req_lock);
> #line 586
>   tmp___1 = conn_highest_pdsk(tconn);
> #line 586
>   return ((unsigned int )tmp___1 <= 5U);
> }
> }
> #line 589 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> static int _try_outdate_peer_async(void *data ) 
> { 
>   struct drbd_tconn *tconn ;
> 
>   {
> #line 591
>   tconn = (struct drbd_tconn *)data;
> #line 593
>   conn_try_outdate_peer(tconn);
> #line 595
>   kref_put(& tconn->kref, & conn_destroy);
> #line 596
>   return (0);
> }
> }
> #line 599 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> void conn_try_outdate_peer_async(struct drbd_tconn *tconn ) 
> { 
>   struct task_struct *opa ;
>   struct task_struct *__k ;
>   struct task_struct *tmp ;
>   long tmp___0 ;
>   long tmp___1 ;
> 
>   {
> #line 603
>   kref_get(& tconn->kref);
> #line 604
>   tmp = kthread_create_on_node(& _try_outdate_peer_async, (void *)tconn, -1, "drbd_async_h");
> #line 604
>   __k = tmp;
> #line 604
>   tmp___0 = IS_ERR((void const   *)__k);
> #line 604
>   if (tmp___0 == 0L) {
> #line 604
>     wake_up_process(__k);
>   } else {
> 
>   }
> #line 604
>   opa = __k;
> #line 605
>   tmp___1 = IS_ERR((void const   *)opa);
> #line 605
>   if (tmp___1 != 0L) {
> #line 606
>     printk("\vd-con %s: out of mem, failed to invoke fence-peer helper\n", tconn->name);
> #line 607
>     kref_put(& tconn->kref, & conn_destroy);
>   } else {
> 
>   }
> #line 609
>   return;
> }
> }
> #line 612 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> enum drbd_state_rv drbd_set_role(struct drbd_conf *mdev , enum drbd_role new_role ,
>                                  int force ) 
> { 
>   int max_tries ;
>   enum drbd_state_rv rv ;
>   struct net_conf *nc ;
>   int try ;
>   int forced ;
>   union drbd_state mask ;
>   union drbd_state val ;
>   bool tmp ;
>   bool tmp___0 ;
>   int tmp___1 ;
>   int timeo ;
>   struct net_conf *_________p1 ;
>   bool __warned ;
>   int tmp___2 ;
>   int tmp___3 ;
>   int tmp___4 ;
>   int tmp___5 ;
>   wait_queue_t __wait ;
>   struct task_struct *tmp___6 ;
>   int tmp___7 ;
>   int tmp___8 ;
>   int tmp___9 ;
> 
>   {
> #line 614
>   max_tries = 4;
> #line 615
>   rv = 0;
> #line 617
>   try = 0;
> #line 618
>   forced = 0;
> #line 621
>   if ((unsigned int )new_role == 1U) {
> #line 622
>     request_ping(mdev->tconn);
>   } else {
> 
>   }
> #line 624
>   ldv_mutex_lock_286(mdev->state_mutex);
> #line 626
>   mask.i = 0U;
> #line 626
>   mask.ldv_40024.role = 3U;
> #line 627
>   val.i = 0U;
> #line 627
>   val.ldv_40024.role = (unsigned char )new_role;
> #line 629
>   goto ldv_53239;
>   ldv_53246: 
> #line 630
>   rv = _drbd_request_state(mdev, mask, val, CS_WAIT_COMPLETE);
> #line 634
>   if ((int )rv == -10 && *((unsigned int *)(& mask) + 0UL) != 0U) {
> #line 635
>     val.ldv_40024.pdsk = 0U;
> #line 636
>     mask.ldv_40024.pdsk = 0U;
> #line 637
>     goto ldv_53239;
>   } else {
> 
>   }
> #line 640
>   if (((int )rv == -2 && force != 0) && ((int )mdev->state.ldv_49522.disk <= 7 && (int )mdev->state.ldv_49522.disk > 3)) {
> #line 643
>     mask.ldv_40024.disk = 15U;
> #line 644
>     val.ldv_40024.disk = 8U;
> #line 645
>     forced = 1;
> #line 646
>     goto ldv_53239;
>   } else {
> 
>   }
> #line 649
>   if (((int )rv == -2 && (unsigned int )*((unsigned char *)mdev + 749UL) == 14U) && *((unsigned int *)(& mask) + 0UL) == 0U) {
> #line 651
>     if (*((unsigned int *)mdev + 187UL) != 49152U) {
> #line 651
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mdev->state.pdsk == D_UNKNOWN ) in %s:%d\n",
>               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared",
>               651);
>     } else {
> 
>     }
> #line 653
>     tmp = conn_try_outdate_peer(mdev->tconn);
> #line 653
>     if ((int )tmp) {
> #line 654
>       val.ldv_40024.disk = 8U;
> #line 655
>       mask.ldv_40024.disk = 15U;
>     } else {
> 
>     }
> #line 657
>     goto ldv_53239;
>   } else {
> 
>   }
> #line 660
>   if ((int )rv == 2) {
> #line 661
>     goto out;
>   } else {
> 
>   }
> #line 662
>   if ((int )rv == -7 && *((unsigned int *)(& mask) + 0UL) == 0U) {
> #line 663
>     tmp___0 = conn_try_outdate_peer(mdev->tconn);
> #line 663
>     if (tmp___0) {
> #line 663
>       tmp___1 = 0;
>     } else {
> #line 663
>       tmp___1 = 1;
>     }
> #line 663
>     if (tmp___1 && force != 0) {
> #line 664
>       dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Forced into split brain situation!\n");
> #line 665
>       mask.ldv_40024.pdsk = 15U;
> #line 666
>       val.ldv_40024.pdsk = 5U;
>     } else {
> 
>     }
> #line 669
>     goto ldv_53239;
>   } else {
> 
>   }
> #line 671
>   if ((int )rv == -1) {
> #line 675
>     rcu_read_lock___6();
> #line 676
>     _________p1 = *((struct net_conf * volatile  *)(& (mdev->tconn)->net_conf));
> #line 676
>     tmp___2 = debug_lockdep_rcu_enabled();
> #line 676
>     if (tmp___2 != 0 && ! __warned) {
> #line 676
>       tmp___3 = rcu_read_lock_held();
> #line 676
>       if (tmp___3 == 0 && 1) {
> #line 676
>         __warned = 1;
> #line 676
>         lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared",
>                                676, "suspicious rcu_dereference_check() usage");
>       } else {
> 
>       }
>     } else {
> 
>     }
> #line 676
>     nc = _________p1;
> #line 677
>     timeo = (unsigned long )nc != (unsigned long )((struct net_conf *)0) ? (int )(((nc->ping_timeo + 1U) * 250U) / 10U) : 1;
> #line 678
>     rcu_read_unlock___6();
> #line 679
>     schedule_timeout_interruptible((long )timeo);
> #line 680
>     if (try < max_tries) {
> #line 681
>       try = max_tries + -1;
>     } else {
> 
>     }
> #line 682
>     goto ldv_53239;
>   } else {
> 
>   }
> #line 684
>   if ((int )rv <= 0) {
> #line 685
>     rv = _drbd_request_state(mdev, mask, val, 6);
> #line 687
>     if ((int )rv <= 0) {
> #line 688
>       goto out;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 690
>   goto ldv_53245;
>   ldv_53239: 
> #line 629
>   tmp___4 = try;
> #line 629
>   try = try + 1;
> #line 629
>   if (tmp___4 < max_tries) {
> #line 630
>     goto ldv_53246;
>   } else {
> 
>   }
>   ldv_53245: ;
> #line 693
>   if ((int )rv <= 0) {
> #line 694
>     goto out;
>   } else {
> 
>   }
> #line 696
>   if (forced != 0) {
> #line 697
>     dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Forced to consider local data as UpToDate!\n");
>   } else {
> 
>   }
> #line 700
>   tmp___5 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
> #line 700
>   if (tmp___5 == 0) {
> #line 700
>     goto ldv_53247;
>   } else {
> 
>   }
> #line 700
>   tmp___6 = get_current();
> #line 700
>   __wait.flags = 0U;
> #line 700
>   __wait.private = (void *)tmp___6;
> #line 700
>   __wait.func = & autoremove_wake_function;
> #line 700
>   __wait.task_list.next = & __wait.task_list;
> #line 700
>   __wait.task_list.prev = & __wait.task_list;
>   ldv_53250: 
> #line 700
>   prepare_to_wait(& mdev->misc_wait, & __wait, 2);
> #line 700
>   tmp___7 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
> #line 700
>   if (tmp___7 == 0) {
> #line 700
>     goto ldv_53249;
>   } else {
> 
>   }
> #line 700
>   schedule();
> #line 700
>   goto ldv_53250;
>   ldv_53249: 
> #line 700
>   finish_wait(& mdev->misc_wait, & __wait);
>   ldv_53247: ;
> #line 704
>   if ((unsigned int )new_role == 2U) {
> #line 705
>     set_disk_ro(mdev->vdisk, 1);
> #line 706
>     tmp___8 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 706
>     if (tmp___8 != 0) {
> #line 707
>       (mdev->ldev)->md.uuid[0] = (mdev->ldev)->md.uuid[0] & 0xfffffffffffffffeULL;
> #line 708
>       put_ldev(mdev);
>     } else {
> 
>     }
>   } else {
> #line 711
>     ldv_mutex_lock_287(& (mdev->tconn)->conf_update);
> #line 712
>     nc = (mdev->tconn)->net_conf;
> #line 713
>     if ((unsigned long )nc != (unsigned long )((struct net_conf *)0)) {
> #line 714
>       nc->discard_my_data = 0;
>     } else {
> 
>     }
> #line 715
>     ldv_mutex_unlock_288(& (mdev->tconn)->conf_update);
> #line 717
>     set_disk_ro(mdev->vdisk, 0);
> #line 718
>     tmp___9 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 718
>     if (tmp___9 != 0) {
> #line 719
>       if ((((int )mdev->state.ldv_49522.conn <= 9 || (int )mdev->state.ldv_49522.pdsk <= 2) && (mdev->ldev)->md.uuid[1] == 0ULL) || forced != 0) {
> #line 722
>         drbd_uuid_new_current(mdev);
>       } else {
> 
>       }
> #line 724
>       (mdev->ldev)->md.uuid[0] = (mdev->ldev)->md.uuid[0] | 1ULL;
> #line 725
>       put_ldev(mdev);
>     } else {
> 
>     }
>   }
> #line 732
>   if ((int )mdev->state.ldv_49522.conn > 8) {
> #line 734
>     if (forced != 0) {
> #line 735
>       drbd_send_uuids(mdev);
>     } else {
> 
>     }
> #line 736
>     drbd_send_current_state(mdev);
>   } else {
> 
>   }
> #line 739
>   drbd_md_sync(mdev);
> #line 741
>   kobject_uevent(& (mdev->vdisk)->part0.__dev.kobj, KOBJ_CHANGE);
>   out: 
> #line 743
>   ldv_mutex_unlock_289(mdev->state_mutex);
> #line 744
>   return (rv);
> }
> }
> #line 747 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> static char const   *from_attrs_err_to_txt(int err ) 
> { 
> 
> 
>   {
> #line 749
>   return (err != -42 ? (err != -95 ? (err == -17 ? "can not change invariant setting" : "invalid attribute value") : "unknown mandatory attribute") : "required attribute missing");
> }
> }
> #line 755 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_set_role(struct sk_buff *skb , struct genl_info *info ) 
> { 
>   struct set_role_parms parms ;
>   int err ;
>   enum drbd_ret_code retcode ;
>   int tmp ;
>   char const   *tmp___0 ;
>   enum drbd_state_rv tmp___1 ;
>   enum drbd_state_rv tmp___2 ;
> 
>   {
> #line 761
>   tmp = drbd_adm_prepare(skb, info, 1U);
> #line 761
>   retcode = (enum drbd_ret_code )tmp;
> #line 762
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 763
>     return ((int )retcode);
>   } else {
> 
>   }
> #line 764
>   if ((unsigned int )retcode != 101U) {
> #line 765
>     goto out;
>   } else {
> 
>   }
> #line 767
>   memset((void *)(& parms), 0, 1UL);
> #line 768
>   if ((unsigned long )*(info->attrs + 6UL) != (unsigned long )((struct nlattr *)0)) {
> #line 769
>     err = set_role_parms_from_attrs(& parms, info);
> #line 770
>     if (err != 0) {
> #line 771
>       retcode = ERR_MANDATORY_TAG;
> #line 772
>       tmp___0 = from_attrs_err_to_txt(err);
> #line 772
>       drbd_msg_put_info(tmp___0);
> #line 773
>       goto out;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 777
>   if ((unsigned int )(info->genlhdr)->cmd == 14U) {
> #line 778
>     tmp___1 = drbd_set_role(adm_ctx.mdev, R_PRIMARY, (int )parms.assume_uptodate);
> #line 778
>     retcode = (enum drbd_ret_code )tmp___1;
>   } else {
> #line 780
>     tmp___2 = drbd_set_role(adm_ctx.mdev, R_SECONDARY, 0);
> #line 780
>     retcode = (enum drbd_ret_code )tmp___2;
>   }
>   out: 
> #line 782
>   drbd_adm_finish(info, (int )retcode);
> #line 783
>   return (0);
> }
> }
> #line 788 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> static void drbd_md_set_sector_offsets(struct drbd_conf *mdev , struct drbd_backing_dev *bdev ) 
> { 
>   sector_t md_size_sect ;
>   int meta_dev_idx ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
>   sector_t tmp___1 ;
>   sector_t tmp___2 ;
>   sector_t tmp___3 ;
> 
>   {
> #line 791
>   md_size_sect = 0UL;
> #line 794
>   rcu_read_lock___6();
> #line 795
>   _________p1 = *((struct disk_conf * volatile  *)(& bdev->disk_conf));
> #line 795
>   tmp = debug_lockdep_rcu_enabled();
> #line 795
>   if (tmp != 0 && ! __warned) {
> #line 795
>     tmp___0 = rcu_read_lock_held();
> #line 795
>     if (tmp___0 == 0 && 1) {
> #line 795
>       __warned = 1;
> #line 795
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared",
>                              795, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 795
>   meta_dev_idx = _________p1->meta_dev_idx;
> #line 797
>   switch (meta_dev_idx) {
>   default: 
> #line 800
>   bdev->md.md_size_sect = 262144U;
> #line 801
>   tmp___1 = drbd_md_ss_____0(mdev, bdev);
> #line 801
>   bdev->md.md_offset = (u64 )tmp___1;
> #line 802
>   bdev->md.al_offset = 8;
> #line 803
>   bdev->md.bm_offset = 72;
> #line 804
>   goto ldv_53272;
>   case -2: 
> #line 807
>   tmp___2 = drbd_get_capacity(bdev->md_bdev);
> #line 807
>   bdev->md.md_size_sect = (u32 )tmp___2;
> #line 808
>   bdev->md.md_offset = 0ULL;
> #line 809
>   bdev->md.al_offset = 8;
> #line 810
>   bdev->md.bm_offset = 72;
> #line 811
>   goto ldv_53272;
>   case -1: ;
>   case -3: 
> #line 814
>   tmp___3 = drbd_md_ss_____0(mdev, bdev);
> #line 814
>   bdev->md.md_offset = (u64 )tmp___3;
> #line 816
>   bdev->md.al_offset = -64;
> #line 818
>   md_size_sect = drbd_get_capacity(bdev->backing_bdev);
> #line 819
>   md_size_sect = (md_size_sect + 32767UL) & 0xffffffffffff8000UL;
> #line 820
>   md_size_sect = md_size_sect >> 15;
> #line 821
>   md_size_sect = (md_size_sect + 7UL) & 0xfffffffffffffff8UL;
> #line 825
>   md_size_sect = md_size_sect + 72UL;
> #line 827
>   bdev->md.md_size_sect = (u32 )md_size_sect;
> #line 829
>   bdev->md.bm_offset = (s32 )(8U - (unsigned int )md_size_sect);
> #line 830
>   goto ldv_53272;
>   }
>   ldv_53272: 
> #line 832
>   rcu_read_unlock___6();
> #line 833
>   return;
> }
> }
> #line 836 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> char *ppsize(char *buf , unsigned long long size ) 
> { 
>   char units[6U] ;
>   int base ;
> 
>   {
> #line 840
>   units[0] = 75;
> #line 840
>   units[1] = 77;
> #line 840
>   units[2] = 71;
> #line 840
>   units[3] = 84;
> #line 840
>   units[4] = 80;
> #line 840
>   units[5] = 69;
> #line 841
>   base = 0;
> #line 842
>   goto ldv_53283;
>   ldv_53282: 
> #line 844
>   size = (size >> 10) + (unsigned long long )((size & 512ULL) != 0ULL);
> #line 845
>   base = base + 1;
>   ldv_53283: ;
> #line 842
>   if (size > 9999ULL && (unsigned int )base <= 4U) {
> #line 843
>     goto ldv_53282;
>   } else {
> 
>   }
> #line 847
>   sprintf(buf, "%u %cB", (unsigned int )size, (int )units[base]);
> #line 849
>   return (buf);
> }
> }
> #line 871 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> void drbd_suspend_io(struct drbd_conf *mdev ) 
> { 
>   int tmp ;
>   int tmp___0 ;
>   wait_queue_t __wait ;
>   struct task_struct *tmp___1 ;
>   int tmp___2 ;
> 
>   {
> #line 873
>   set_bit(8U, (unsigned long volatile   *)(& mdev->flags));
> #line 874
>   tmp = drbd_suspended(mdev);
> #line 874
>   if (tmp != 0) {
> #line 875
>     return;
>   } else {
> 
>   }
> #line 876
>   tmp___0 = atomic_read((atomic_t const   *)(& mdev->ap_bio_cnt));
> #line 876
>   if (tmp___0 == 0) {
> #line 876
>     goto ldv_53288;
>   } else {
> 
>   }
> #line 876
>   tmp___1 = get_current();
> #line 876
>   __wait.flags = 0U;
> #line 876
>   __wait.private = (void *)tmp___1;
> #line 876
>   __wait.func = & autoremove_wake_function;
> #line 876
>   __wait.task_list.next = & __wait.task_list;
> #line 876
>   __wait.task_list.prev = & __wait.task_list;
>   ldv_53291: 
> #line 876
>   prepare_to_wait(& mdev->misc_wait, & __wait, 2);
> #line 876
>   tmp___2 = atomic_read((atomic_t const   *)(& mdev->ap_bio_cnt));
> #line 876
>   if (tmp___2 == 0) {
> #line 876
>     goto ldv_53290;
>   } else {
> 
>   }
> #line 876
>   schedule();
> #line 876
>   goto ldv_53291;
>   ldv_53290: 
> #line 876
>   finish_wait(& mdev->misc_wait, & __wait);
>   ldv_53288: ;
> #line 879
>   return;
> }
> }
> #line 879 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> void drbd_resume_io(struct drbd_conf *mdev ) 
> { 
> 
> 
>   {
> #line 881
>   clear_bit(8, (unsigned long volatile   *)(& mdev->flags));
> #line 882
>   __wake_up(& mdev->misc_wait, 3U, 1, 0);
> #line 883
>   return;
> }
> }
> #line 892 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> enum determine_dev_size drbd_determine_dev_size(struct drbd_conf *mdev , enum dds_flags flags ) 
> { 
>   sector_t prev_first_sect ;
>   sector_t prev_size ;
>   sector_t la_size ;
>   sector_t u_size ;
>   sector_t size ;
>   char ppb[10U] ;
>   int md_moved ;
>   int la_size_changed ;
>   enum determine_dev_size rv ;
>   int tmp ;
>   wait_queue_t __wait ;
>   struct task_struct *tmp___0 ;
>   int tmp___1 ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp___2 ;
>   int tmp___3 ;
>   int err ;
>   sector_t tmp___4 ;
>   long tmp___5 ;
>   char *tmp___6 ;
>   sector_t tmp___7 ;
>   sector_t tmp___8 ;
>   sector_t tmp___9 ;
>   int err___0 ;
> 
>   {
> #line 900
>   rv = 0;
> #line 911
>   drbd_suspend_io(mdev);
> #line 914
>   tmp = lc_try_lock(mdev->act_log);
> #line 914
>   if (tmp != 0) {
> #line 914
>     goto ldv_53308;
>   } else {
> 
>   }
> #line 914
>   tmp___0 = get_current();
> #line 914
>   __wait.flags = 0U;
> #line 914
>   __wait.private = (void *)tmp___0;
> #line 914
>   __wait.func = & autoremove_wake_function;
> #line 914
>   __wait.task_list.next = & __wait.task_list;
> #line 914
>   __wait.task_list.prev = & __wait.task_list;
>   ldv_53311: 
> #line 914
>   prepare_to_wait(& mdev->al_wait, & __wait, 2);
> #line 914
>   tmp___1 = lc_try_lock(mdev->act_log);
> #line 914
>   if (tmp___1 != 0) {
> #line 914
>     goto ldv_53310;
>   } else {
> 
>   }
> #line 914
>   schedule();
> #line 914
>   goto ldv_53311;
>   ldv_53310: 
> #line 914
>   finish_wait(& mdev->al_wait, & __wait);
>   ldv_53308: 
> #line 916
>   prev_first_sect = drbd_md_first_sector___0(mdev->ldev);
> #line 917
>   prev_size = (sector_t )(mdev->ldev)->md.md_size_sect;
> #line 918
>   la_size = (sector_t )(mdev->ldev)->md.la_size_sect;
> #line 921
>   drbd_md_set_sector_offsets(mdev, mdev->ldev);
> #line 923
>   rcu_read_lock___6();
> #line 924
>   _________p1 = *((struct disk_conf * volatile  *)(& (mdev->ldev)->disk_conf));
> #line 924
>   tmp___2 = debug_lockdep_rcu_enabled();
> #line 924
>   if (tmp___2 != 0 && ! __warned) {
> #line 924
>     tmp___3 = rcu_read_lock_held();
> #line 924
>     if (tmp___3 == 0 && 1) {
> #line 924
>       __warned = 1;
> #line 924
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared",
>                              924, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 924
>   u_size = (sector_t )_________p1->disk_size;
> #line 925
>   rcu_read_unlock___6();
> #line 926
>   size = drbd_new_dev_size(mdev, mdev->ldev, u_size, (int )flags & 1);
> #line 928
>   tmp___7 = drbd_get_capacity(mdev->this_bdev);
> #line 928
>   if (tmp___7 != size) {
> #line 928
>     goto _L;
>   } else {
> #line 928
>     tmp___8 = drbd_bm_capacity(mdev);
> #line 928
>     if (tmp___8 != size) {
>       _L: /* CIL Label */ 
> #line 931
>       err = drbd_bm_resize(mdev, size, ((unsigned int )flags & 2U) == 0U);
> #line 932
>       tmp___5 = __builtin_expect(err != 0, 0L);
> #line 932
>       if (tmp___5 != 0L) {
> #line 934
>         tmp___4 = drbd_bm_capacity(mdev);
> #line 934
>         size = tmp___4 >> 1;
> #line 935
>         if (size == 0UL) {
> #line 936
>           dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "OUT OF MEMORY! Could not allocate bitmap!\n");
>         } else {
> #line 939
>           dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "BM resizing failed. Leaving size unchanged at size = %lu KB\n",
>                   size);
>         }
> #line 943
>         rv = dev_size_error;
>       } else {
> 
>       }
> #line 946
>       drbd_set_my_capacity(mdev, size);
> #line 947
>       (mdev->ldev)->md.la_size_sect = (u64 )size;
> #line 948
>       tmp___6 = ppsize((char *)(& ppb), (unsigned long long )(size >> 1));
> #line 948
>       _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "size = %s (%llu KB)\n",
>                 tmp___6, (unsigned long long )size >> 1);
>     } else {
> 
>     }
>   }
> #line 951
>   if ((int )rv == -1) {
> #line 952
>     goto out;
>   } else {
> 
>   }
> #line 954
>   la_size_changed = (mdev->ldev)->md.la_size_sect != (unsigned long long )la_size;
> #line 956
>   tmp___9 = drbd_md_first_sector___0(mdev->ldev);
> #line 956
>   md_moved = tmp___9 != prev_first_sect || (sector_t )(mdev->ldev)->md.md_size_sect != prev_size;
> #line 959
>   if (la_size_changed != 0 || md_moved != 0) {
> #line 962
>     drbd_al_shrink(mdev);
> #line 963
>     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Writing the whole bitmap, %s\n",
>               la_size_changed == 0 || md_moved == 0 ? (la_size_changed != 0 ? (char *)"size changed" : (char *)"md moved") : (char *)"size changed and md moved");
> #line 967
>     err___0 = drbd_bitmap_io(mdev, md_moved != 0 ? & drbd_bm_write_all : & drbd_bm_write,
>                              (char *)"size changed", BM_LOCKED_MASK);
> #line 969
>     if (err___0 != 0) {
> #line 970
>       rv = dev_size_error;
> #line 971
>       goto out;
>     } else {
> 
>     }
> #line 973
>     drbd_md_mark_dirty(mdev);
>   } else {
> 
>   }
> #line 976
>   if (size > la_size) {
> #line 977
>     rv = grew;
>   } else {
> 
>   }
> #line 978
>   if (size < la_size) {
> #line 979
>     rv = shrunk;
>   } else {
> 
>   }
>   out: 
> #line 981
>   lc_unlock(mdev->act_log);
> #line 982
>   __wake_up(& mdev->al_wait, 3U, 1, 0);
> #line 983
>   drbd_resume_io(mdev);
> #line 985
>   return (rv);
> }
> }
> #line 989 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> sector_t drbd_new_dev_size(struct drbd_conf *mdev , struct drbd_backing_dev *bdev ,
>                            sector_t u_size , int assume_peer_has_space ) 
> { 
>   sector_t p_size ;
>   sector_t la_size ;
>   sector_t m_size ;
>   sector_t size ;
>   sector_t __min1 ;
>   sector_t __min2 ;
> 
>   {
> #line 992
>   p_size = mdev->p_size;
> #line 993
>   la_size = (sector_t )bdev->md.la_size_sect;
> #line 995
>   size = 0UL;
> #line 997
>   m_size = drbd_get_max_capacity___1(bdev);
> #line 999
>   if ((int )mdev->state.ldv_49522.conn <= 9 && assume_peer_has_space != 0) {
> #line 1000
>     dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Resize while not connected was forced by the user!\n");
> #line 1001
>     p_size = m_size;
>   } else {
> 
>   }
> #line 1004
>   if (p_size != 0UL && m_size != 0UL) {
> #line 1005
>     __min1 = p_size;
> #line 1005
>     __min2 = m_size;
> #line 1005
>     size = __min1 < __min2 ? __min1 : __min2;
>   } else
> #line 1007
>   if (la_size != 0UL) {
> #line 1008
>     size = la_size;
> #line 1009
>     if (m_size != 0UL && m_size < size) {
> #line 1010
>       size = m_size;
>     } else {
> 
>     }
> #line 1011
>     if (p_size != 0UL && p_size < size) {
> #line 1012
>       size = p_size;
>     } else {
> 
>     }
>   } else {
> #line 1014
>     if (m_size != 0UL) {
> #line 1015
>       size = m_size;
>     } else {
> 
>     }
> #line 1016
>     if (p_size != 0UL) {
> #line 1017
>       size = p_size;
>     } else {
> 
>     }
>   }
> #line 1021
>   if (size == 0UL) {
> #line 1022
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Both nodes diskless!\n");
>   } else {
> 
>   }
> #line 1024
>   if (u_size != 0UL) {
> #line 1025
>     if (u_size > size) {
> #line 1026
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Requested disk size is too big (%lu > %lu)\n",
>               u_size >> 1, size >> 1);
>     } else {
> #line 1029
>       size = u_size;
>     }
>   } else {
> 
>   }
> #line 1032
>   return (size);
> }
> }
> #line 1043 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> static int drbd_check_al_size(struct drbd_conf *mdev , struct disk_conf *dc ) 
> { 
>   struct lru_cache *n ;
>   struct lru_cache *t ;
>   struct lc_element *e ;
>   unsigned int in_use ;
>   int i ;
> 
>   {
> #line 1050
>   if ((unsigned long )mdev->act_log != (unsigned long )((struct lru_cache *)0) && (mdev->act_log)->nr_elements == dc->al_extents) {
> #line 1052
>     return (0);
>   } else {
> 
>   }
> #line 1054
>   in_use = 0U;
> #line 1055
>   t = mdev->act_log;
> #line 1056
>   n = lc_create("act_log", drbd_al_ext_cache, 64U, dc->al_extents, 48UL, 0UL);
> #line 1059
>   if ((unsigned long )n == (unsigned long )((struct lru_cache *)0)) {
> #line 1060
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Cannot allocate act_log lru!\n");
> #line 1061
>     return (-12);
>   } else {
> 
>   }
> #line 1063
>   spin_lock_irq(& mdev->al_lock);
> #line 1064
>   if ((unsigned long )t != (unsigned long )((struct lru_cache *)0)) {
> #line 1065
>     i = 0;
> #line 1065
>     goto ldv_53341;
>     ldv_53340: 
> #line 1066
>     e = lc_element_by_index(t, (unsigned int )i);
> #line 1067
>     if (e->refcnt != 0U) {
> #line 1068
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "refcnt(%d)==%d\n",
>               e->lc_number, e->refcnt);
>     } else {
> 
>     }
> #line 1070
>     in_use = e->refcnt + in_use;
> #line 1065
>     i = i + 1;
>     ldv_53341: ;
> #line 1065
>     if ((unsigned int )i < t->nr_elements) {
> #line 1066
>       goto ldv_53340;
>     } else {
> 
>     }
> 
>   } else {
> 
>   }
> #line 1073
>   if (in_use == 0U) {
> #line 1074
>     mdev->act_log = n;
>   } else {
> 
>   }
> #line 1075
>   spin_unlock_irq(& mdev->al_lock);
> #line 1076
>   if (in_use != 0U) {
> #line 1077
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Activity log still in use!\n");
> #line 1078
>     lc_destroy(n);
> #line 1079
>     return (-16);
>   } else
> #line 1081
>   if ((unsigned long )t != (unsigned long )((struct lru_cache *)0)) {
> #line 1082
>     lc_destroy(t);
>   } else {
> 
>   }
> #line 1084
>   drbd_md_mark_dirty(mdev);
> #line 1085
>   return (0);
> }
> }
> #line 1088 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> static void drbd_setup_queue_param(struct drbd_conf *mdev , unsigned int max_bio_size ) 
> { 
>   struct request_queue *q ;
>   unsigned int max_hw_sectors ;
>   unsigned int max_segments ;
>   struct request_queue *b ;
>   unsigned int _min1 ;
>   unsigned int tmp ;
>   unsigned int _min2 ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp___0 ;
>   int tmp___1 ;
>   int tmp___2 ;
>   struct request_queue *b___0 ;
>   int tmp___3 ;
> 
>   {
> #line 1090
>   q = mdev->rq_queue;
> #line 1091
>   max_hw_sectors = max_bio_size >> 9;
> #line 1092
>   max_segments = 0U;
> #line 1094
>   tmp___2 = _get_ldev_if_state(mdev, D_ATTACHING);
> #line 1094
>   if (tmp___2 != 0) {
> #line 1095
>     b = (((mdev->ldev)->backing_bdev)->bd_disk)->queue;
> #line 1097
>     tmp = queue_max_hw_sectors(b);
> #line 1097
>     _min1 = tmp;
> #line 1097
>     _min2 = max_bio_size >> 9;
> #line 1097
>     max_hw_sectors = _min1 < _min2 ? _min1 : _min2;
> #line 1098
>     rcu_read_lock___6();
> #line 1099
>     _________p1 = *((struct disk_conf * volatile  *)(& (mdev->ldev)->disk_conf));
> #line 1099
>     tmp___0 = debug_lockdep_rcu_enabled();
> #line 1099
>     if (tmp___0 != 0 && ! __warned) {
> #line 1099
>       tmp___1 = rcu_read_lock_held();
> #line 1099
>       if (tmp___1 == 0 && 1) {
> #line 1099
>         __warned = 1;
> #line 1099
>         lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared",
>                                1099, "suspicious rcu_dereference_check() usage");
>       } else {
> 
>       }
>     } else {
> 
>     }
> #line 1099
>     max_segments = _________p1->max_bio_bvecs;
> #line 1100
>     rcu_read_unlock___6();
> #line 1101
>     put_ldev(mdev);
>   } else {
> 
>   }
> #line 1104
>   blk_queue_logical_block_size(q, 512);
> #line 1105
>   blk_queue_max_hw_sectors(q, max_hw_sectors);
> #line 1107
>   blk_queue_max_segments(q, max_segments != 0U ? (int )((unsigned short )max_segments) : 128);
> #line 1108
>   blk_queue_segment_boundary(q, 4095UL);
> #line 1110
>   tmp___3 = _get_ldev_if_state(mdev, D_ATTACHING);
> #line 1110
>   if (tmp___3 != 0) {
> #line 1111
>     b___0 = (((mdev->ldev)->backing_bdev)->bd_disk)->queue;
> #line 1113
>     blk_queue_stack_limits(q, b___0);
> #line 1115
>     if (q->backing_dev_info.ra_pages != b___0->backing_dev_info.ra_pages) {
> #line 1116
>       _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Adjusting my ra_pages to backing device\'s (%lu -> %lu)\n",
>                 q->backing_dev_info.ra_pages, b___0->backing_dev_info.ra_pages);
> #line 1119
>       q->backing_dev_info.ra_pages = b___0->backing_dev_info.ra_pages;
>     } else {
> 
>     }
> #line 1121
>     put_ldev(mdev);
>   } else {
> 
>   }
> #line 1123
>   return;
> }
> }
> #line 1125 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> void drbd_reconsider_max_bio_size(struct drbd_conf *mdev ) 
> { 
>   unsigned int now ;
>   unsigned int new ;
>   unsigned int local ;
>   unsigned int peer ;
>   unsigned int tmp ;
>   unsigned int tmp___0 ;
>   int tmp___1 ;
>   unsigned int _min1 ;
>   unsigned int _min2 ;
>   unsigned int _min1___0 ;
>   unsigned int _min2___0 ;
>   unsigned int _min1___1 ;
>   unsigned int _min2___1 ;
> 
>   {
> #line 1129
>   tmp = queue_max_hw_sectors(mdev->rq_queue);
> #line 1129
>   now = tmp << 9;
> #line 1130
>   local = mdev->local_max_bio_size;
> #line 1131
>   peer = mdev->peer_max_bio_size;
> #line 1133
>   tmp___1 = _get_ldev_if_state(mdev, D_ATTACHING);
> #line 1133
>   if (tmp___1 != 0) {
> #line 1134
>     tmp___0 = queue_max_hw_sectors((((mdev->ldev)->backing_bdev)->bd_disk)->queue);
> #line 1134
>     local = tmp___0 << 9;
> #line 1135
>     mdev->local_max_bio_size = local;
> #line 1136
>     put_ldev(mdev);
>   } else {
> 
>   }
> #line 1138
>   _min1 = local;
> #line 1138
>   _min2 = 1048576U;
> #line 1138
>   local = _min1 < _min2 ? _min1 : _min2;
> #line 1143
>   if ((int )mdev->state.ldv_49522.conn > 9) {
> #line 1144
>     if ((mdev->tconn)->agreed_pro_version <= 93) {
> #line 1145
>       _min1___0 = mdev->peer_max_bio_size;
> #line 1145
>       _min2___0 = 32768U;
> #line 1145
>       peer = _min1___0 < _min2___0 ? _min1___0 : _min2___0;
>     } else
> #line 1147
>     if ((mdev->tconn)->agreed_pro_version == 94) {
> #line 1148
>       peer = 32768U;
>     } else
> #line 1149
>     if ((mdev->tconn)->agreed_pro_version <= 99) {
> #line 1150
>       peer = 131072U;
>     } else {
> #line 1152
>       peer = 1048576U;
>     }
>   } else {
> 
>   }
> #line 1155
>   _min1___1 = local;
> #line 1155
>   _min2___1 = peer;
> #line 1155
>   new = _min1___1 < _min2___1 ? _min1___1 : _min2___1;
> #line 1157
>   if ((unsigned int )*((unsigned char *)mdev + 748UL) == 1U && new < now) {
> #line 1158
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED new < now; (%u < %u)\n",
>             new, now);
>   } else {
> 
>   }
> #line 1160
>   if (new != now) {
> #line 1161
>     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "max BIO size = %u\n",
>               new);
>   } else {
> 
>   }
> #line 1163
>   drbd_setup_queue_param(mdev, new);
> #line 1164
>   return;
> }
> }
> #line 1167 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> static void conn_reconfig_start(struct drbd_tconn *tconn ) 
> { 
> 
> 
>   {
> #line 1169
>   drbd_thread_start(& tconn->worker);
> #line 1170
>   conn_flush_workqueue(tconn);
> #line 1171
>   return;
> }
> }
> #line 1174 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> static void conn_reconfig_done(struct drbd_tconn *tconn ) 
> { 
>   bool stop_threads ;
>   bool tmp ;
> 
>   {
> #line 1177
>   spin_lock_irq(& tconn->req_lock);
> #line 1178
>   tmp = conn_all_vols_unconf(tconn);
> #line 1178
>   stop_threads = (bool )((int )tmp && (unsigned int )tconn->cstate == 0U);
> #line 1180
>   spin_unlock_irq(& tconn->req_lock);
> #line 1181
>   if ((int )stop_threads) {
> #line 1184
>     drbd_thread_stop(& tconn->receiver);
> #line 1185
>     drbd_thread_stop(& tconn->worker);
>   } else {
> 
>   }
> #line 1187
>   return;
> }
> }
> #line 1190 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> static void drbd_suspend_al(struct drbd_conf *mdev ) 
> { 
>   int s ;
>   int tmp ;
>   int tmp___0 ;
> 
>   {
> #line 1192
>   s = 0;
> #line 1194
>   tmp = lc_try_lock(mdev->act_log);
> #line 1194
>   if (tmp == 0) {
> #line 1195
>     dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Failed to lock al in drbd_suspend_al()\n");
> #line 1196
>     return;
>   } else {
> 
>   }
> #line 1199
>   drbd_al_shrink(mdev);
> #line 1200
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 1201
>   if ((int )mdev->state.ldv_49522.conn <= 9) {
> #line 1202
>     tmp___0 = test_and_set_bit(18, (unsigned long volatile   *)(& mdev->flags));
> #line 1202
>     s = tmp___0 == 0;
>   } else {
> 
>   }
> #line 1203
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 1204
>   lc_unlock(mdev->act_log);
> #line 1206
>   if (s != 0) {
> #line 1207
>     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Suspended AL updates\n");
>   } else {
> 
>   }
> #line 1208
>   return;
> }
> }
> #line 1211 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> static bool should_set_defaults(struct genl_info *info ) 
> { 
>   unsigned int flags ;
> 
>   {
> #line 1213
>   flags = ((struct drbd_genlmsghdr *)info->userhdr)->ldv_49826.flags;
> #line 1214
>   return (((int )flags & 1) != 0);
> }
> }
> #line 1217 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> static void enforce_disk_conf_limits(struct disk_conf *dc ) 
> { 
> 
> 
>   {
> #line 1219
>   if (dc->al_extents <= 6U) {
> #line 1220
>     dc->al_extents = 7U;
>   } else {
> 
>   }
> #line 1221
>   if (dc->al_extents > 6433U) {
> #line 1222
>     dc->al_extents = 6433U;
>   } else {
> 
>   }
> #line 1224
>   if (dc->c_plan_ahead > 300U) {
> #line 1225
>     dc->c_plan_ahead = 300U;
>   } else {
> 
>   }
> #line 1226
>   return;
> }
> }
> #line 1228 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_disk_opts(struct sk_buff *skb , struct genl_info *info ) 
> { 
>   enum drbd_ret_code retcode ;
>   struct drbd_conf *mdev ;
>   struct disk_conf *new_disk_conf ;
>   struct disk_conf *old_disk_conf ;
>   struct fifo_buffer *old_plan ;
>   struct fifo_buffer *new_plan ;
>   int err ;
>   int fifo_size ;
>   int tmp ;
>   int tmp___0 ;
>   void *tmp___1 ;
>   bool tmp___2 ;
>   char const   *tmp___3 ;
>   bool _bool ;
>   int tmp___4 ;
>   int tmp___5 ;
>   wait_queue_t __wait ;
>   struct task_struct *tmp___6 ;
>   int tmp___7 ;
> 
>   {
> #line 1233
>   old_plan = 0;
> #line 1233
>   new_plan = 0;
> #line 1236
>   tmp = drbd_adm_prepare(skb, info, 1U);
> #line 1236
>   retcode = (enum drbd_ret_code )tmp;
> #line 1237
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 1238
>     return ((int )retcode);
>   } else {
> 
>   }
> #line 1239
>   if ((unsigned int )retcode != 101U) {
> #line 1240
>     goto out;
>   } else {
> 
>   }
> #line 1242
>   mdev = adm_ctx.mdev;
> #line 1246
>   tmp___0 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 1246
>   if (tmp___0 == 0) {
> #line 1247
>     retcode = ERR_NO_DISK;
> #line 1248
>     goto out;
>   } else {
> 
>   }
> #line 1251
>   tmp___1 = kmalloc(344UL, 208U);
> #line 1251
>   new_disk_conf = (struct disk_conf *)tmp___1;
> #line 1252
>   if ((unsigned long )new_disk_conf == (unsigned long )((struct disk_conf *)0)) {
> #line 1253
>     retcode = ERR_NOMEM;
> #line 1254
>     goto fail;
>   } else {
> 
>   }
> #line 1257
>   ldv_mutex_lock_290(& (mdev->tconn)->conf_update);
> #line 1258
>   old_disk_conf = (mdev->ldev)->disk_conf;
> #line 1259
>   *new_disk_conf = *old_disk_conf;
> #line 1260
>   tmp___2 = should_set_defaults(info);
> #line 1260
>   if ((int )tmp___2) {
> #line 1261
>     set_disk_conf_defaults(new_disk_conf);
>   } else {
> 
>   }
> #line 1263
>   err = disk_conf_from_attrs_for_change(new_disk_conf, info);
> #line 1264
>   if (err != 0 && err != -42) {
> #line 1265
>     retcode = ERR_MANDATORY_TAG;
> #line 1266
>     tmp___3 = from_attrs_err_to_txt(err);
> #line 1266
>     drbd_msg_put_info(tmp___3);
>   } else {
> 
>   }
> #line 1269
>   _bool = new_disk_conf->resync_rate != 0U;
> #line 1269
>   if (! _bool) {
> #line 1269
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERTION %s FAILED in %s\n",
>             (char *)"new_disk_conf->resync_rate >= 1", "drbd_adm_disk_opts");
>   } else {
> 
>   }
> #line 1269
>   if (_bool) {
> #line 1269
>     tmp___4 = 0;
>   } else {
> #line 1269
>     tmp___4 = 1;
>   }
> #line 1269
>   if (tmp___4) {
> #line 1270
>     new_disk_conf->resync_rate = 1U;
>   } else {
> 
>   }
> #line 1272
>   enforce_disk_conf_limits(new_disk_conf);
> #line 1274
>   fifo_size = (int )((new_disk_conf->c_plan_ahead * 250U) / 250U);
> #line 1275
>   if ((unsigned int )fifo_size != (mdev->rs_plan_s)->size) {
> #line 1276
>     new_plan = fifo_alloc(fifo_size);
> #line 1277
>     if ((unsigned long )new_plan == (unsigned long )((struct fifo_buffer *)0)) {
> #line 1278
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "kmalloc of fifo_buffer failed");
> #line 1279
>       retcode = ERR_NOMEM;
> #line 1280
>       goto fail_unlock;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1284
>   drbd_suspend_io(mdev);
> #line 1285
>   tmp___5 = lc_try_lock(mdev->act_log);
> #line 1285
>   if (tmp___5 != 0) {
> #line 1285
>     goto ldv_53410;
>   } else {
> 
>   }
> #line 1285
>   tmp___6 = get_current();
> #line 1285
>   __wait.flags = 0U;
> #line 1285
>   __wait.private = (void *)tmp___6;
> #line 1285
>   __wait.func = & autoremove_wake_function;
> #line 1285
>   __wait.task_list.next = & __wait.task_list;
> #line 1285
>   __wait.task_list.prev = & __wait.task_list;
>   ldv_53413: 
> #line 1285
>   prepare_to_wait(& mdev->al_wait, & __wait, 2);
> #line 1285
>   tmp___7 = lc_try_lock(mdev->act_log);
> #line 1285
>   if (tmp___7 != 0) {
> #line 1285
>     goto ldv_53412;
>   } else {
> 
>   }
> #line 1285
>   schedule();
> #line 1285
>   goto ldv_53413;
>   ldv_53412: 
> #line 1285
>   finish_wait(& mdev->al_wait, & __wait);
>   ldv_53410: 
> #line 1286
>   drbd_al_shrink(mdev);
> #line 1287
>   err = drbd_check_al_size(mdev, new_disk_conf);
> #line 1288
>   lc_unlock(mdev->act_log);
> #line 1289
>   __wake_up(& mdev->al_wait, 3U, 1, 0);
> #line 1290
>   drbd_resume_io(mdev);
> #line 1292
>   if (err != 0) {
> #line 1293
>     retcode = ERR_NOMEM;
> #line 1294
>     goto fail_unlock;
>   } else {
> 
>   }
> #line 1297
>   _raw_write_lock_irq(& global_state_lock);
> #line 1298
>   retcode = drbd_resync_after_valid(mdev, new_disk_conf->resync_after);
> #line 1299
>   if ((unsigned int )retcode == 101U) {
> #line 1300
>     __asm__  volatile   ("": : : "memory");
> #line 1300
>     (mdev->ldev)->disk_conf = new_disk_conf;
> #line 1301
>     drbd_resync_after_changed(mdev);
>   } else {
> 
>   }
> #line 1303
>   _raw_write_unlock_irq(& global_state_lock);
> #line 1305
>   if ((unsigned int )retcode != 101U) {
> #line 1306
>     goto fail_unlock;
>   } else {
> 
>   }
> #line 1308
>   if ((unsigned long )new_plan != (unsigned long )((struct fifo_buffer *)0)) {
> #line 1309
>     old_plan = mdev->rs_plan_s;
> #line 1310
>     __asm__  volatile   ("": : : "memory");
> #line 1310
>     mdev->rs_plan_s = new_plan;
>   } else {
> 
>   }
> #line 1313
>   ldv_mutex_unlock_291(& (mdev->tconn)->conf_update);
> #line 1315
>   if ((int )((signed char )new_disk_conf->al_updates) != 0) {
> #line 1316
>     (mdev->ldev)->md.flags = (mdev->ldev)->md.flags & 4294967039U;
>   } else {
> #line 1318
>     (mdev->ldev)->md.flags = (mdev->ldev)->md.flags | 256U;
>   }
> #line 1320
>   drbd_bump_write_ordering(mdev->tconn, WO_bdev_flush);
> #line 1322
>   drbd_md_sync(mdev);
> #line 1324
>   if ((int )mdev->state.ldv_49522.conn > 9) {
> #line 1325
>     drbd_send_sync_param(mdev);
>   } else {
> 
>   }
> #line 1327
>   synchronize_rcu();
> #line 1328
>   kfree((void const   *)old_disk_conf);
> #line 1329
>   kfree((void const   *)old_plan);
> #line 1330
>   mod_timer(& mdev->request_timer, (unsigned long )jiffies + 250UL);
> #line 1331
>   goto success;
>   fail_unlock: 
> #line 1334
>   ldv_mutex_unlock_292(& (mdev->tconn)->conf_update);
>   fail: 
> #line 1336
>   kfree((void const   *)new_disk_conf);
> #line 1337
>   kfree((void const   *)new_plan);
>   success: 
> #line 1339
>   put_ldev(mdev);
>   out: 
> #line 1341
>   drbd_adm_finish(info, (int )retcode);
> #line 1342
>   return (0);
> }
> }
> #line 1345 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_attach(struct sk_buff *skb , struct genl_info *info ) 
> { 
>   struct drbd_conf *mdev ;
>   int err ;
>   enum drbd_ret_code retcode ;
>   enum determine_dev_size dd ;
>   sector_t max_possible_sectors ;
>   sector_t min_md_device_sectors ;
>   struct drbd_backing_dev *nbc ;
>   struct disk_conf *new_disk_conf ;
>   struct block_device *bdev ;
>   struct lru_cache *resync_lru ;
>   struct fifo_buffer *new_plan ;
>   union drbd_state ns ;
>   union drbd_state os ;
>   enum drbd_state_rv rv ;
>   struct net_conf *nc ;
>   int tmp ;
>   int tmp___0 ;
>   wait_queue_t __wait ;
>   struct task_struct *tmp___1 ;
>   int tmp___2 ;
>   void *tmp___3 ;
>   struct lock_class_key __key ;
>   void *tmp___4 ;
>   char const   *tmp___5 ;
>   struct net_conf *_________p1 ;
>   bool __warned ;
>   int tmp___6 ;
>   int tmp___7 ;
>   long tmp___8 ;
>   long tmp___9 ;
>   long tmp___10 ;
>   long tmp___11 ;
>   sector_t tmp___12 ;
>   sector_t tmp___13 ;
>   sector_t tmp___14 ;
>   sector_t tmp___15 ;
>   sector_t tmp___16 ;
>   int tmp___17 ;
>   int tmp___18 ;
>   wait_queue_t __wait___0 ;
>   struct task_struct *tmp___19 ;
>   int tmp___20 ;
>   int tmp___21 ;
>   union drbd_state val ;
>   union drbd_state mask ;
>   int tmp___22 ;
>   int tmp___23 ;
>   int tmp___24 ;
>   int tmp___25 ;
>   int tmp___26 ;
>   sector_t tmp___27 ;
>   int tmp___28 ;
>   int tmp___29 ;
>   int tmp___30 ;
>   int tmp___31 ;
>   int tmp___32 ;
>   int tmp___33 ;
>   int tmp___34 ;
>   int tmp___35 ;
>   int tmp___36 ;
>   unsigned long tmp___37 ;
>   unsigned long tmp___38 ;
>   int tmp___39 ;
>   int tmp___40 ;
>   int tmp___41 ;
>   struct disk_conf *_________p1___0 ;
>   bool __warned___0 ;
>   int tmp___42 ;
>   int tmp___43 ;
>   struct disk_conf *_________p1___1 ;
>   bool __warned___1 ;
>   int tmp___44 ;
>   int tmp___45 ;
>   union drbd_state val___0 ;
>   union drbd_state mask___0 ;
> 
>   {
> #line 1353
>   nbc = 0;
> #line 1354
>   new_disk_conf = 0;
> #line 1356
>   resync_lru = 0;
> #line 1357
>   new_plan = 0;
> #line 1362
>   tmp = drbd_adm_prepare(skb, info, 1U);
> #line 1362
>   retcode = (enum drbd_ret_code )tmp;
> #line 1363
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 1364
>     return ((int )retcode);
>   } else {
> 
>   }
> #line 1365
>   if ((unsigned int )retcode != 101U) {
> #line 1366
>     goto finish;
>   } else {
> 
>   }
> #line 1368
>   mdev = adm_ctx.mdev;
> #line 1369
>   conn_reconfig_start(mdev->tconn);
> #line 1372
>   if ((int )mdev->state.ldv_49522.disk > 0) {
> #line 1373
>     retcode = ERR_DISK_CONFIGURED;
> #line 1374
>     goto fail;
>   } else {
> 
>   }
> #line 1380
>   tmp___0 = atomic_read((atomic_t const   *)(& mdev->local_cnt));
> #line 1380
>   if (tmp___0 == 0) {
> #line 1380
>     goto ldv_53436;
>   } else {
> 
>   }
> #line 1380
>   tmp___1 = get_current();
> #line 1380
>   __wait.flags = 0U;
> #line 1380
>   __wait.private = (void *)tmp___1;
> #line 1380
>   __wait.func = & autoremove_wake_function;
> #line 1380
>   __wait.task_list.next = & __wait.task_list;
> #line 1380
>   __wait.task_list.prev = & __wait.task_list;
>   ldv_53439: 
> #line 1380
>   prepare_to_wait(& mdev->misc_wait, & __wait, 2);
> #line 1380
>   tmp___2 = atomic_read((atomic_t const   *)(& mdev->local_cnt));
> #line 1380
>   if (tmp___2 == 0) {
> #line 1380
>     goto ldv_53438;
>   } else {
> 
>   }
> #line 1380
>   schedule();
> #line 1380
>   goto ldv_53439;
>   ldv_53438: 
> #line 1380
>   finish_wait(& mdev->misc_wait, & __wait);
>   ldv_53436: 
> #line 1383
>   clear_bit(14, (unsigned long volatile   *)(& mdev->flags));
> #line 1384
>   clear_bit(12, (unsigned long volatile   *)(& mdev->flags));
> #line 1385
>   clear_bit(13, (unsigned long volatile   *)(& mdev->flags));
> #line 1388
>   mdev->rs_total = 0UL;
> #line 1389
>   mdev->rs_failed = 0UL;
> #line 1390
>   atomic_set(& mdev->rs_pending_cnt, 0);
> #line 1393
>   tmp___3 = kzalloc(176UL, 208U);
> #line 1393
>   nbc = (struct drbd_backing_dev *)tmp___3;
> #line 1394
>   if ((unsigned long )nbc == (unsigned long )((struct drbd_backing_dev *)0)) {
> #line 1395
>     retcode = ERR_NOMEM;
> #line 1396
>     goto fail;
>   } else {
> 
>   }
> #line 1398
>   spinlock_check(& nbc->md.uuid_lock);
> #line 1398
>   __raw_spin_lock_init(& nbc->md.uuid_lock.ldv_5957.rlock, "&(&nbc->md.uuid_lock)->rlock",
>                        & __key);
> #line 1400
>   tmp___4 = kzalloc(344UL, 208U);
> #line 1400
>   new_disk_conf = (struct disk_conf *)tmp___4;
> #line 1401
>   if ((unsigned long )new_disk_conf == (unsigned long )((struct disk_conf *)0)) {
> #line 1402
>     retcode = ERR_NOMEM;
> #line 1403
>     goto fail;
>   } else {
> 
>   }
> #line 1405
>   nbc->disk_conf = new_disk_conf;
> #line 1407
>   set_disk_conf_defaults(new_disk_conf);
> #line 1408
>   err = disk_conf_from_attrs(new_disk_conf, info);
> #line 1409
>   if (err != 0) {
> #line 1410
>     retcode = ERR_MANDATORY_TAG;
> #line 1411
>     tmp___5 = from_attrs_err_to_txt(err);
> #line 1411
>     drbd_msg_put_info(tmp___5);
> #line 1412
>     goto fail;
>   } else {
> 
>   }
> #line 1415
>   enforce_disk_conf_limits(new_disk_conf);
> #line 1417
>   new_plan = fifo_alloc((int )((new_disk_conf->c_plan_ahead * 250U) / 250U));
> #line 1418
>   if ((unsigned long )new_plan == (unsigned long )((struct fifo_buffer *)0)) {
> #line 1419
>     retcode = ERR_NOMEM;
> #line 1420
>     goto fail;
>   } else {
> 
>   }
> #line 1423
>   if (new_disk_conf->meta_dev_idx < -3) {
> #line 1424
>     retcode = ERR_MD_IDX_INVALID;
> #line 1425
>     goto fail;
>   } else {
> 
>   }
> #line 1428
>   rcu_read_lock___6();
> #line 1429
>   _________p1 = *((struct net_conf * volatile  *)(& (mdev->tconn)->net_conf));
> #line 1429
>   tmp___6 = debug_lockdep_rcu_enabled();
> #line 1429
>   if (tmp___6 != 0 && ! __warned) {
> #line 1429
>     tmp___7 = rcu_read_lock_held();
> #line 1429
>     if (tmp___7 == 0 && 1) {
> #line 1429
>       __warned = 1;
> #line 1429
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared",
>                              1429, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1429
>   nc = _________p1;
> #line 1430
>   if ((unsigned long )nc != (unsigned long )((struct net_conf *)0)) {
> #line 1431
>     if (new_disk_conf->fencing == 2U && nc->wire_protocol == 1U) {
> #line 1432
>       rcu_read_unlock___6();
> #line 1433
>       retcode = ERR_STONITH_AND_PROT_A;
> #line 1434
>       goto fail;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1437
>   rcu_read_unlock___6();
> #line 1439
>   bdev = blkdev_get_by_path((char const   *)(& new_disk_conf->backing_dev), 131U,
>                             (void *)mdev);
> #line 1441
>   tmp___9 = IS_ERR((void const   *)bdev);
> #line 1441
>   if (tmp___9 != 0L) {
> #line 1442
>     tmp___8 = PTR_ERR((void const   *)bdev);
> #line 1442
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "open(\"%s\") failed with %ld\n",
>             (char *)(& new_disk_conf->backing_dev), tmp___8);
> #line 1444
>     retcode = ERR_OPEN_DISK;
> #line 1445
>     goto fail;
>   } else {
> 
>   }
> #line 1447
>   nbc->backing_bdev = bdev;
> #line 1457
>   bdev = blkdev_get_by_path((char const   *)(& new_disk_conf->meta_dev), 131U, new_disk_conf->meta_dev_idx < 0 ? (void *)mdev : (void *)drbd_m_holder);
> #line 1461
>   tmp___11 = IS_ERR((void const   *)bdev);
> #line 1461
>   if (tmp___11 != 0L) {
> #line 1462
>     tmp___10 = PTR_ERR((void const   *)bdev);
> #line 1462
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "open(\"%s\") failed with %ld\n",
>             (char *)(& new_disk_conf->meta_dev), tmp___10);
> #line 1464
>     retcode = ERR_OPEN_MD_DISK;
> #line 1465
>     goto fail;
>   } else {
> 
>   }
> #line 1467
>   nbc->md_bdev = bdev;
> #line 1469
>   if (((unsigned long )nbc->backing_bdev == (unsigned long )nbc->md_bdev) ^ (int )((_Bool )(new_disk_conf->meta_dev_idx == -1 || new_disk_conf->meta_dev_idx == -3))) {
> #line 1472
>     retcode = ERR_MD_IDX_INVALID;
> #line 1473
>     goto fail;
>   } else {
> 
>   }
> #line 1476
>   resync_lru = lc_create("resync", drbd_bm_ext_cache, 1U, 61U, 64UL, 16UL);
> #line 1479
>   if ((unsigned long )resync_lru == (unsigned long )((struct lru_cache *)0)) {
> #line 1480
>     retcode = ERR_NOMEM;
> #line 1481
>     goto fail;
>   } else {
> 
>   }
> #line 1485
>   drbd_md_set_sector_offsets(mdev, nbc);
> #line 1487
>   tmp___13 = drbd_get_max_capacity___1(nbc);
> #line 1487
>   if ((unsigned long long )tmp___13 < new_disk_conf->disk_size) {
> #line 1488
>     tmp___12 = drbd_get_max_capacity___1(nbc);
> #line 1488
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "max capacity %llu smaller than disk size %llu\n",
>             (unsigned long long )tmp___12, new_disk_conf->disk_size);
> #line 1491
>     retcode = ERR_DISK_TOO_SMALL;
> #line 1492
>     goto fail;
>   } else {
> 
>   }
> #line 1495
>   if (new_disk_conf->meta_dev_idx < 0) {
> #line 1496
>     max_possible_sectors = 2251799813685248UL;
> #line 1498
>     min_md_device_sectors = 2048UL;
>   } else {
> #line 1500
>     max_possible_sectors = 8587575296UL;
> #line 1501
>     min_md_device_sectors = (unsigned long )(new_disk_conf->meta_dev_idx + 1) * 262144UL;
>   }
> #line 1504
>   tmp___14 = drbd_get_capacity(nbc->md_bdev);
> #line 1504
>   if (tmp___14 < min_md_device_sectors) {
> #line 1505
>     retcode = ERR_MD_DISK_TOO_SMALL;
> #line 1506
>     dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "refusing attach: md-device too small, at least %llu sectors needed for this meta-disk type\n",
>              (unsigned long long )min_md_device_sectors);
> #line 1509
>     goto fail;
>   } else {
> 
>   }
> #line 1514
>   tmp___15 = drbd_get_max_capacity___1(nbc);
> #line 1514
>   tmp___16 = drbd_get_capacity(mdev->this_bdev);
> #line 1514
>   if (tmp___15 < tmp___16) {
> #line 1516
>     retcode = ERR_DISK_TOO_SMALL;
> #line 1517
>     goto fail;
>   } else {
> 
>   }
> #line 1520
>   nbc->known_size = drbd_get_capacity(nbc->backing_bdev);
> #line 1522
>   if (nbc->known_size > max_possible_sectors) {
> #line 1523
>     dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "==> truncating very big lower level device to currently maximum possible %llu sectors <==\n",
>              (unsigned long long )max_possible_sectors);
> #line 1526
>     if (new_disk_conf->meta_dev_idx >= 0) {
> #line 1527
>       dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "==>> using internal or flexible meta data may help <<==\n");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1531
>   drbd_suspend_io(mdev);
> #line 1539
>   tmp___17 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
> #line 1539
>   if (tmp___17 == 0) {
> #line 1539
>     goto ldv_53444;
>   } else {
> #line 1539
>     tmp___18 = drbd_suspended(mdev);
> #line 1539
>     if (tmp___18 != 0) {
> #line 1539
>       goto ldv_53444;
>     } else {
> 
>     }
>   }
> #line 1539
>   tmp___19 = get_current();
> #line 1539
>   __wait___0.flags = 0U;
> #line 1539
>   __wait___0.private = (void *)tmp___19;
> #line 1539
>   __wait___0.func = & autoremove_wake_function;
> #line 1539
>   __wait___0.task_list.next = & __wait___0.task_list;
> #line 1539
>   __wait___0.task_list.prev = & __wait___0.task_list;
>   ldv_53447: 
> #line 1539
>   prepare_to_wait(& mdev->misc_wait, & __wait___0, 2);
> #line 1539
>   tmp___20 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
> #line 1539
>   if (tmp___20 == 0) {
> #line 1539
>     goto ldv_53446;
>   } else {
> #line 1539
>     tmp___21 = drbd_suspended(mdev);
> #line 1539
>     if (tmp___21 != 0) {
> #line 1539
>       goto ldv_53446;
>     } else {
> 
>     }
>   }
> #line 1539
>   schedule();
> #line 1539
>   goto ldv_53447;
>   ldv_53446: 
> #line 1539
>   finish_wait(& mdev->misc_wait, & __wait___0);
>   ldv_53444: 
> #line 1541
>   drbd_flush_workqueue(mdev);
> #line 1543
>   val.i = 0U;
> #line 1543
>   val.ldv_40024.disk = 1U;
> #line 1543
>   mask.i = 0U;
> #line 1543
>   mask.ldv_40024.disk = 15U;
> #line 1543
>   rv = _drbd_request_state(mdev, mask, val, CS_VERBOSE);
> #line 1544
>   retcode = (enum drbd_ret_code )rv;
> #line 1545
>   drbd_resume_io(mdev);
> #line 1546
>   if ((int )rv <= 0) {
> #line 1547
>     goto fail;
>   } else {
> 
>   }
> #line 1549
>   tmp___22 = _get_ldev_if_state(mdev, D_ATTACHING);
> #line 1549
>   if (tmp___22 == 0) {
> #line 1550
>     goto force_diskless;
>   } else {
> 
>   }
> #line 1552
>   drbd_md_set_sector_offsets(mdev, nbc);
> #line 1554
>   if ((unsigned long )mdev->bitmap == (unsigned long )((struct drbd_bitmap *)0)) {
> #line 1555
>     tmp___23 = drbd_bm_init(mdev);
> #line 1555
>     if (tmp___23 != 0) {
> #line 1556
>       retcode = ERR_NOMEM;
> #line 1557
>       goto force_diskless_dec;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1561
>   tmp___24 = drbd_md_read(mdev, nbc);
> #line 1561
>   retcode = (enum drbd_ret_code )tmp___24;
> #line 1562
>   if ((unsigned int )retcode != 101U) {
> #line 1563
>     goto force_diskless_dec;
>   } else {
> 
>   }
> #line 1565
>   if (((int )mdev->state.ldv_49522.conn <= 9 && (unsigned int )*((unsigned char *)mdev + 748UL) == 1U) && ((mdev->ed_uuid ^ nbc->md.uuid[0]) & 0xfffffffffffffffeULL) != 0ULL) {
> #line 1568
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Can only attach to data with current UUID=%016llX\n",
>             mdev->ed_uuid);
> #line 1570
>     retcode = ERR_DATA_NOT_CURRENT;
> #line 1571
>     goto force_diskless_dec;
>   } else {
> 
>   }
> #line 1575
>   tmp___25 = drbd_check_al_size(mdev, new_disk_conf);
> #line 1575
>   if (tmp___25 != 0) {
> #line 1576
>     retcode = ERR_NOMEM;
> #line 1577
>     goto force_diskless_dec;
>   } else {
> 
>   }
> #line 1581
>   tmp___26 = drbd_md_test_flag(nbc, 1);
> #line 1581
>   if (tmp___26 != 0) {
> #line 1581
>     tmp___27 = drbd_new_dev_size(mdev, nbc, (sector_t )(nbc->disk_conf)->disk_size,
>                                  0);
> #line 1581
>     if ((unsigned long long )tmp___27 < nbc->md.la_size_sect) {
> #line 1583
>       dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "refusing to truncate a consistent device\n");
> #line 1584
>       retcode = ERR_DISK_TOO_SMALL;
> #line 1585
>       goto force_diskless_dec;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1590
>   if ((int )((signed char )new_disk_conf->md_flushes) != 0) {
> #line 1591
>     clear_bit(7, (unsigned long volatile   *)(& mdev->flags));
>   } else {
> #line 1593
>     set_bit(7U, (unsigned long volatile   *)(& mdev->flags));
>   }
> #line 1599
>   if ((unsigned long )mdev->ldev != (unsigned long )((struct drbd_backing_dev *)0)) {
> #line 1599
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mdev->ldev == NULL ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared",
>             1599);
>   } else {
> 
>   }
> #line 1600
>   mdev->ldev = nbc;
> #line 1601
>   mdev->resync = resync_lru;
> #line 1602
>   mdev->rs_plan_s = new_plan;
> #line 1603
>   nbc = 0;
> #line 1604
>   resync_lru = 0;
> #line 1605
>   new_disk_conf = 0;
> #line 1606
>   new_plan = 0;
> #line 1608
>   drbd_bump_write_ordering(mdev->tconn, WO_bdev_flush);
> #line 1610
>   tmp___28 = drbd_md_test_flag(mdev->ldev, 64);
> #line 1610
>   if (tmp___28 != 0) {
> #line 1611
>     set_bit(5U, (unsigned long volatile   *)(& mdev->flags));
>   } else {
> #line 1613
>     clear_bit(5, (unsigned long volatile   *)(& mdev->flags));
>   }
> #line 1615
>   tmp___29 = drbd_md_test_flag(mdev->ldev, 2);
> #line 1615
>   if (tmp___29 != 0 && ((unsigned int )*((unsigned char *)mdev + 748UL) != 1U || (unsigned int )*((unsigned char *)mdev->tconn + 132UL) == 0U)) {
> #line 1617
>     set_bit(5U, (unsigned long volatile   *)(& mdev->flags));
>   } else {
> 
>   }
> #line 1619
>   mdev->send_cnt = 0U;
> #line 1620
>   mdev->recv_cnt = 0U;
> #line 1621
>   mdev->read_cnt = 0U;
> #line 1622
>   mdev->writ_cnt = 0U;
> #line 1624
>   drbd_reconsider_max_bio_size(mdev);
> #line 1640
>   clear_bit(2, (unsigned long volatile   *)(& mdev->flags));
> #line 1641
>   if ((unsigned int )*((unsigned char *)mdev + 748UL) != 1U) {
> #line 1641
>     tmp___30 = drbd_md_test_flag(mdev->ldev, 2);
> #line 1641
>     if (tmp___30 != 0) {
> #line 1641
>       tmp___31 = drbd_md_test_flag(mdev->ldev, 4);
> #line 1641
>       if (tmp___31 == 0) {
> #line 1644
>         set_bit(2U, (unsigned long volatile   *)(& mdev->flags));
>       } else {
> 
>       }
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1646
>   dd = drbd_determine_dev_size(mdev, 0);
> #line 1647
>   if ((int )dd == -1) {
> #line 1648
>     retcode = ERR_NOMEM_BITMAP;
> #line 1649
>     goto force_diskless_dec;
>   } else
> #line 1650
>   if ((int )dd == 2) {
> #line 1651
>     set_bit(15U, (unsigned long volatile   *)(& mdev->flags));
>   } else {
> 
>   }
> #line 1653
>   tmp___34 = drbd_md_test_flag(mdev->ldev, 8);
> #line 1653
>   if (tmp___34 != 0) {
> #line 1653
>     goto _L;
>   } else {
> #line 1653
>     tmp___35 = constant_test_bit(5U, (unsigned long const volatile   *)(& mdev->flags));
> #line 1653
>     if (tmp___35 != 0) {
> #line 1653
>       tmp___36 = drbd_md_test_flag(mdev->ldev, 256);
> #line 1653
>       if (tmp___36 != 0) {
>         _L: /* CIL Label */ 
> #line 1656
>         _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Assuming that all blocks are out of sync (aka FullSync)\n");
> #line 1658
>         tmp___32 = drbd_bitmap_io(mdev, & drbd_bmio_set_n_write, (char *)"set_n_write from attaching",
>                                   BM_LOCKED_MASK);
> #line 1658
>         if (tmp___32 != 0) {
> #line 1660
>           retcode = ERR_IO_MD_DISK;
> #line 1661
>           goto force_diskless_dec;
>         } else {
> 
>         }
>       } else {
> #line 1653
>         goto _L___0;
>       }
>     } else {
>       _L___0: /* CIL Label */ 
> #line 1664
>       tmp___33 = drbd_bitmap_io(mdev, & drbd_bm_read, (char *)"read from attaching",
>                                 BM_LOCKED_MASK);
> #line 1664
>       if (tmp___33 != 0) {
> #line 1666
>         retcode = ERR_IO_MD_DISK;
> #line 1667
>         goto force_diskless_dec;
>       } else {
> 
>       }
>     }
>   }
> #line 1671
>   tmp___37 = _drbd_bm_total_weight(mdev);
> #line 1671
>   tmp___38 = drbd_bm_bits(mdev);
> #line 1671
>   if (tmp___37 == tmp___38) {
> #line 1672
>     drbd_suspend_al(mdev);
>   } else {
> 
>   }
> #line 1674
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 1675
>   os = drbd_read_state(mdev);
> #line 1676
>   ns = os;
> #line 1682
>   tmp___40 = drbd_md_test_flag(mdev->ldev, 1);
> #line 1682
>   if (tmp___40 != 0) {
> #line 1683
>     tmp___39 = drbd_md_test_flag(mdev->ldev, 16);
> #line 1683
>     if (tmp___39 != 0) {
> #line 1684
>       ns.ldv_40024.disk = 7U;
>     } else {
> #line 1686
>       ns.ldv_40024.disk = 5U;
>     }
>   } else {
> #line 1688
>     ns.ldv_40024.disk = 4U;
>   }
> #line 1691
>   tmp___41 = drbd_md_test_flag(mdev->ldev, 32);
> #line 1691
>   if (tmp___41 != 0) {
> #line 1692
>     ns.ldv_40024.pdsk = 5U;
>   } else {
> 
>   }
> #line 1694
>   rcu_read_lock___6();
> #line 1696
>   if ((unsigned int )*((unsigned char *)(& ns) + 1UL) == 14U) {
> #line 1696
>     if (*((unsigned int *)(& ns) + 0UL) == 40960U) {
> #line 1697
>       ns.ldv_40024.disk = 8U;
>     } else {
> #line 1696
>       _________p1___0 = *((struct disk_conf * volatile  *)(& (mdev->ldev)->disk_conf));
> #line 1696
>       tmp___42 = debug_lockdep_rcu_enabled();
> #line 1696
>       if (tmp___42 != 0 && ! __warned___0) {
> #line 1696
>         tmp___43 = rcu_read_lock_held();
> #line 1696
>         if (tmp___43 == 0 && 1) {
> #line 1696
>           __warned___0 = 1;
> #line 1696
>           lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared",
>                                  1696, "suspicious rcu_dereference_check() usage");
>         } else {
> 
>         }
>       } else {
> 
>       }
> #line 1696
>       if (_________p1___0->fencing == 0U) {
> #line 1697
>         ns.ldv_40024.disk = 8U;
>       } else {
> 
>       }
>     }
>   } else {
> 
>   }
> #line 1704
>   _________p1___1 = *((struct disk_conf * volatile  *)(& (mdev->ldev)->disk_conf));
> #line 1704
>   tmp___44 = debug_lockdep_rcu_enabled();
> #line 1704
>   if (tmp___44 != 0 && ! __warned___1) {
> #line 1704
>     tmp___45 = rcu_read_lock_held();
> #line 1704
>     if (tmp___45 == 0 && 1) {
> #line 1704
>       __warned___1 = 1;
> #line 1704
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared",
>                              1704, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1704
>   if ((int )((signed char )_________p1___1->al_updates) != 0) {
> #line 1705
>     (mdev->ldev)->md.flags = (mdev->ldev)->md.flags & 4294967039U;
>   } else {
> #line 1707
>     (mdev->ldev)->md.flags = (mdev->ldev)->md.flags | 256U;
>   }
> #line 1709
>   rcu_read_unlock___6();
> #line 1713
>   if ((unsigned int )*((unsigned short *)mdev + 374UL) == 160U) {
> #line 1714
>     mdev->new_state_tmp.i = ns.i;
> #line 1715
>     ns.i = os.i;
> #line 1716
>     ns.ldv_40024.disk = 3U;
> #line 1721
>     kfree((void const   *)mdev->p_uuid);
> #line 1722
>     mdev->p_uuid = 0;
>   } else {
> 
>   }
> #line 1725
>   rv = _drbd_set_state(mdev, ns, CS_VERBOSE, 0);
> #line 1726
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 1728
>   if ((int )rv <= 0) {
> #line 1729
>     goto force_diskless_dec;
>   } else {
> 
>   }
> #line 1731
>   mod_timer(& mdev->request_timer, (unsigned long )jiffies + 250UL);
> #line 1733
>   if ((unsigned int )*((unsigned char *)mdev + 748UL) == 1U) {
> #line 1734
>     (mdev->ldev)->md.uuid[0] = (mdev->ldev)->md.uuid[0] | 1ULL;
>   } else {
> #line 1736
>     (mdev->ldev)->md.uuid[0] = (mdev->ldev)->md.uuid[0] & 0xfffffffffffffffeULL;
>   }
> #line 1738
>   drbd_md_mark_dirty(mdev);
> #line 1739
>   drbd_md_sync(mdev);
> #line 1741
>   kobject_uevent(& (mdev->vdisk)->part0.__dev.kobj, KOBJ_CHANGE);
> #line 1742
>   put_ldev(mdev);
> #line 1743
>   conn_reconfig_done(mdev->tconn);
> #line 1744
>   drbd_adm_finish(info, (int )retcode);
> #line 1745
>   return (0);
>   force_diskless_dec: 
> #line 1748
>   put_ldev(mdev);
>   force_diskless: 
> #line 1750
>   val___0.i = 0U;
> #line 1750
>   val___0.ldv_40024.disk = 0U;
> #line 1750
>   mask___0.i = 0U;
> #line 1750
>   mask___0.ldv_40024.disk = 15U;
> #line 1750
>   drbd_force_state(mdev, mask___0, val___0);
> #line 1751
>   drbd_md_sync(mdev);
>   fail: 
> #line 1753
>   conn_reconfig_done(mdev->tconn);
> #line 1754
>   if ((unsigned long )nbc != (unsigned long )((struct drbd_backing_dev *)0)) {
> #line 1755
>     if ((unsigned long )nbc->backing_bdev != (unsigned long )((struct block_device *)0)) {
> #line 1756
>       blkdev_put(nbc->backing_bdev, 131U);
>     } else {
> 
>     }
> #line 1758
>     if ((unsigned long )nbc->md_bdev != (unsigned long )((struct block_device *)0)) {
> #line 1759
>       blkdev_put(nbc->md_bdev, 131U);
>     } else {
> 
>     }
> #line 1761
>     kfree((void const   *)nbc);
>   } else {
> 
>   }
> #line 1763
>   kfree((void const   *)new_disk_conf);
> #line 1764
>   lc_destroy(resync_lru);
> #line 1765
>   kfree((void const   *)new_plan);
>   finish: 
> #line 1768
>   drbd_adm_finish(info, (int )retcode);
> #line 1769
>   return (0);
> }
> }
> #line 1772 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> static int adm_detach(struct drbd_conf *mdev , int force ) 
> { 
>   enum drbd_state_rv retcode ;
>   int ret ;
>   union drbd_state val ;
>   union drbd_state mask ;
>   union drbd_state val___0 ;
>   union drbd_state mask___0 ;
>   int tmp ;
>   int __ret ;
>   wait_queue_t __wait ;
>   struct task_struct *tmp___0 ;
>   struct task_struct *tmp___1 ;
>   int tmp___2 ;
> 
>   {
> #line 1777
>   if (force != 0) {
> #line 1778
>     set_bit(14U, (unsigned long volatile   *)(& mdev->flags));
> #line 1779
>     val.i = 0U;
> #line 1779
>     val.ldv_40024.disk = 2U;
> #line 1779
>     mask.i = 0U;
> #line 1779
>     mask.ldv_40024.disk = 15U;
> #line 1779
>     drbd_force_state(mdev, mask, val);
> #line 1780
>     retcode = SS_SUCCESS;
> #line 1781
>     goto out;
>   } else {
> 
>   }
> #line 1784
>   drbd_suspend_io(mdev);
> #line 1785
>   drbd_md_get_buffer(mdev);
> #line 1786
>   val___0.i = 0U;
> #line 1786
>   val___0.ldv_40024.disk = 2U;
> #line 1786
>   mask___0.i = 0U;
> #line 1786
>   mask___0.ldv_40024.disk = 15U;
> #line 1786
>   tmp = drbd_request_state(mdev, mask___0, val___0);
> #line 1786
>   retcode = (enum drbd_state_rv )tmp;
> #line 1787
>   drbd_md_put_buffer(mdev);
> #line 1789
>   __ret = 0;
> #line 1789
>   if ((unsigned int )*((unsigned char *)mdev + 749UL) == 4U) {
> #line 1789
>     tmp___0 = get_current();
> #line 1789
>     __wait.flags = 0U;
> #line 1789
>     __wait.private = (void *)tmp___0;
> #line 1789
>     __wait.func = & autoremove_wake_function;
> #line 1789
>     __wait.task_list.next = & __wait.task_list;
> #line 1789
>     __wait.task_list.prev = & __wait.task_list;
>     ldv_53483: 
> #line 1789
>     prepare_to_wait(& mdev->misc_wait, & __wait, 1);
> #line 1789
>     if ((unsigned int )*((unsigned char *)mdev + 749UL) != 4U) {
> #line 1789
>       goto ldv_53481;
>     } else {
> 
>     }
> #line 1789
>     tmp___1 = get_current();
> #line 1789
>     tmp___2 = signal_pending(tmp___1);
> #line 1789
>     if (tmp___2 == 0) {
> #line 1789
>       schedule();
> #line 1789
>       goto ldv_53482;
>     } else {
> 
>     }
> #line 1789
>     __ret = -512;
> #line 1789
>     goto ldv_53481;
>     ldv_53482: ;
> #line 1789
>     goto ldv_53483;
>     ldv_53481: 
> #line 1789
>     finish_wait(& mdev->misc_wait, & __wait);
>   } else {
> 
>   }
> #line 1789
>   ret = __ret;
> #line 1791
>   drbd_resume_io(mdev);
> #line 1792
>   if ((int )retcode == -11) {
> #line 1793
>     retcode = SS_NOTHING_TO_DO;
>   } else {
> 
>   }
> #line 1794
>   if (ret != 0) {
> #line 1795
>     retcode = 129;
>   } else {
> 
>   }
>   out: ;
> #line 1797
>   return ((int )retcode);
> }
> }
> #line 1805 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_detach(struct sk_buff *skb , struct genl_info *info ) 
> { 
>   enum drbd_ret_code retcode ;
>   struct detach_parms parms ;
>   int err ;
>   int tmp ;
>   char const   *tmp___0 ;
>   int tmp___1 ;
> 
>   {
> #line 1808
>   parms.force_detach = (char)0;
> #line 1811
>   tmp = drbd_adm_prepare(skb, info, 1U);
> #line 1811
>   retcode = (enum drbd_ret_code )tmp;
> #line 1812
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 1813
>     return ((int )retcode);
>   } else {
> 
>   }
> #line 1814
>   if ((unsigned int )retcode != 101U) {
> #line 1815
>     goto out;
>   } else {
> 
>   }
> #line 1817
>   if ((unsigned long )*(info->attrs + 13UL) != (unsigned long )((struct nlattr *)0)) {
> #line 1818
>     err = detach_parms_from_attrs(& parms, info);
> #line 1819
>     if (err != 0) {
> #line 1820
>       retcode = ERR_MANDATORY_TAG;
> #line 1821
>       tmp___0 = from_attrs_err_to_txt(err);
> #line 1821
>       drbd_msg_put_info(tmp___0);
> #line 1822
>       goto out;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1826
>   tmp___1 = adm_detach(adm_ctx.mdev, (int )parms.force_detach);
> #line 1826
>   retcode = (enum drbd_ret_code )tmp___1;
>   out: 
> #line 1828
>   drbd_adm_finish(info, (int )retcode);
> #line 1829
>   return (0);
> }
> }
> #line 1832 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> static bool conn_resync_running(struct drbd_tconn *tconn ) 
> { 
>   struct drbd_conf *mdev ;
>   bool rv ;
>   int vnr ;
>   void *tmp ;
>   void *tmp___0 ;
> 
>   {
> #line 1835
>   rv = 0;
> #line 1838
>   rcu_read_lock___6();
> #line 1839
>   vnr = 0;
> #line 1839
>   tmp = idr_get_next(& tconn->volumes, & vnr);
> #line 1839
>   mdev = (struct drbd_conf *)tmp;
> #line 1839
>   goto ldv_53501;
>   ldv_53500: ;
> #line 1840
>   if ((((unsigned int )*((unsigned short *)mdev + 374UL) == 256U || (unsigned int )*((unsigned short *)mdev + 374UL) == 272U) || (unsigned int )*((unsigned short *)mdev + 374UL) == 320U) || (unsigned int )*((unsigned short *)mdev + 374UL) == 336U) {
> #line 1844
>     rv = 1;
> #line 1845
>     goto ldv_53499;
>   } else {
> 
>   }
> #line 1839
>   vnr = vnr + 1;
> #line 1839
>   tmp___0 = idr_get_next(& tconn->volumes, & vnr);
> #line 1839
>   mdev = (struct drbd_conf *)tmp___0;
>   ldv_53501: ;
> #line 1839
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 1840
>     goto ldv_53500;
>   } else {
> 
>   }
>   ldv_53499: 
> #line 1848
>   rcu_read_unlock___6();
> #line 1850
>   return (rv);
> }
> }
> #line 1853 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> static bool conn_ov_running(struct drbd_tconn *tconn ) 
> { 
>   struct drbd_conf *mdev ;
>   bool rv ;
>   int vnr ;
>   void *tmp ;
>   void *tmp___0 ;
> 
>   {
> #line 1856
>   rv = 0;
> #line 1859
>   rcu_read_lock___6();
> #line 1860
>   vnr = 0;
> #line 1860
>   tmp = idr_get_next(& tconn->volumes, & vnr);
> #line 1860
>   mdev = (struct drbd_conf *)tmp;
> #line 1860
>   goto ldv_53510;
>   ldv_53509: ;
> #line 1861
>   if ((unsigned int )*((unsigned short *)mdev + 374UL) == 288U || (unsigned int )*((unsigned short *)mdev + 374UL) == 304U) {
> #line 1863
>     rv = 1;
> #line 1864
>     goto ldv_53508;
>   } else {
> 
>   }
> #line 1860
>   vnr = vnr + 1;
> #line 1860
>   tmp___0 = idr_get_next(& tconn->volumes, & vnr);
> #line 1860
>   mdev = (struct drbd_conf *)tmp___0;
>   ldv_53510: ;
> #line 1860
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 1861
>     goto ldv_53509;
>   } else {
> 
>   }
>   ldv_53508: 
> #line 1867
>   rcu_read_unlock___6();
> #line 1869
>   return (rv);
> }
> }
> #line 1873 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> static enum drbd_ret_code _check_net_options(struct drbd_tconn *tconn , struct net_conf *old_conf ,
>                                              struct net_conf *new_conf ) 
> { 
>   struct drbd_conf *mdev ;
>   int i ;
>   int tmp ;
>   enum drbd_role tmp___0 ;
>   enum drbd_role tmp___1 ;
>   void *tmp___2 ;
>   enum drbd_fencing_p fp ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp___3 ;
>   int tmp___4 ;
>   int tmp___5 ;
>   void *tmp___6 ;
> 
>   {
> #line 1878
>   if (((unsigned long )old_conf != (unsigned long )((struct net_conf *)0) && (unsigned int )tconn->cstate == 9U) && tconn->agreed_pro_version <= 99) {
> #line 1879
>     if (new_conf->wire_protocol != old_conf->wire_protocol) {
> #line 1880
>       return (ERR_NEED_APV_100);
>     } else {
> 
>     }
> #line 1882
>     if ((int )((signed char )new_conf->two_primaries) != (int )((signed char )old_conf->two_primaries)) {
> #line 1883
>       return (ERR_NEED_APV_100);
>     } else {
> 
>     }
> #line 1885
>     tmp = strcmp((char const   *)(& new_conf->integrity_alg), (char const   *)(& old_conf->integrity_alg));
> #line 1885
>     if (tmp != 0) {
> #line 1886
>       return (ERR_NEED_APV_100);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1889
>   if ((int )((signed char )new_conf->two_primaries) == 0) {
> #line 1889
>     tmp___0 = conn_highest_role(tconn);
> #line 1889
>     if ((unsigned int )tmp___0 == 1U) {
> #line 1889
>       tmp___1 = conn_highest_peer(tconn);
> #line 1889
>       if ((unsigned int )tmp___1 == 1U) {
> #line 1892
>         return (ERR_NEED_ALLOW_TWO_PRI);
>       } else {
> 
>       }
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1894
>   if ((int )((signed char )new_conf->two_primaries) != 0 && new_conf->wire_protocol != 3U) {
> #line 1896
>     return (ERR_NOT_PROTO_C);
>   } else {
> 
>   }
> #line 1898
>   i = 0;
> #line 1898
>   tmp___2 = idr_get_next(& tconn->volumes, & i);
> #line 1898
>   mdev = (struct drbd_conf *)tmp___2;
> #line 1898
>   goto ldv_53523;
>   ldv_53522: 
> #line 1899
>   tmp___5 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 1899
>   if (tmp___5 != 0) {
> #line 1900
>     _________p1 = *((struct disk_conf * volatile  *)(& (mdev->ldev)->disk_conf));
> #line 1900
>     tmp___3 = debug_lockdep_rcu_enabled();
> #line 1900
>     if (tmp___3 != 0 && ! __warned) {
> #line 1900
>       tmp___4 = rcu_read_lock_held();
> #line 1900
>       if (tmp___4 == 0 && 1) {
> #line 1900
>         __warned = 1;
> #line 1900
>         lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared",
>                                1900, "suspicious rcu_dereference_check() usage");
>       } else {
> 
>       }
>     } else {
> 
>     }
> #line 1900
>     fp = (enum drbd_fencing_p )_________p1->fencing;
> #line 1901
>     put_ldev(mdev);
> #line 1902
>     if (new_conf->wire_protocol == 1U && (int )fp == 2) {
> #line 1903
>       return (ERR_STONITH_AND_PROT_A);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1905
>   if ((unsigned int )*((unsigned char *)mdev + 748UL) == 1U && (int )((signed char )new_conf->discard_my_data) != 0) {
> #line 1906
>     return (ERR_DISCARD_IMPOSSIBLE);
>   } else {
> 
>   }
> #line 1898
>   i = i + 1;
> #line 1898
>   tmp___6 = idr_get_next(& tconn->volumes, & i);
> #line 1898
>   mdev = (struct drbd_conf *)tmp___6;
>   ldv_53523: ;
> #line 1898
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 1899
>     goto ldv_53522;
>   } else {
> 
>   }
> 
> #line 1909
>   if (new_conf->on_congestion != 0U && new_conf->wire_protocol != 1U) {
> #line 1910
>     return (ERR_CONG_NOT_PROTO_A);
>   } else {
> 
>   }
> #line 1912
>   return (NO_ERROR);
> }
> }
> #line 1916 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> static enum drbd_ret_code check_net_options(struct drbd_tconn *tconn , struct net_conf *new_conf ) 
> { 
>   enum drbd_ret_code rv ;
>   struct drbd_conf *mdev ;
>   int i ;
>   struct net_conf *_________p1 ;
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
>   void *tmp___1 ;
>   int tmp___2 ;
>   void *tmp___3 ;
> 
>   {
> #line 1922
>   rcu_read_lock___6();
> #line 1923
>   _________p1 = *((struct net_conf * volatile  *)(& tconn->net_conf));
> #line 1923
>   tmp = debug_lockdep_rcu_enabled();
> #line 1923
>   if (tmp != 0 && ! __warned) {
> #line 1923
>     tmp___0 = rcu_read_lock_held();
> #line 1923
>     if (tmp___0 == 0 && 1) {
> #line 1923
>       __warned = 1;
> #line 1923
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared",
>                              1923, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1923
>   rv = _check_net_options(tconn, _________p1, new_conf);
> #line 1924
>   rcu_read_unlock___6();
> #line 1927
>   i = 0;
> #line 1927
>   tmp___1 = idr_get_next(& tconn->volumes, & i);
> #line 1927
>   mdev = (struct drbd_conf *)tmp___1;
> #line 1927
>   goto ldv_53536;
>   ldv_53535: ;
> #line 1928
>   if ((unsigned long )mdev->bitmap == (unsigned long )((struct drbd_bitmap *)0)) {
> #line 1929
>     tmp___2 = drbd_bm_init(mdev);
> #line 1929
>     if (tmp___2 != 0) {
> #line 1930
>       return (ERR_NOMEM);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 1927
>   i = i + 1;
> #line 1927
>   tmp___3 = idr_get_next(& tconn->volumes, & i);
> #line 1927
>   mdev = (struct drbd_conf *)tmp___3;
>   ldv_53536: ;
> #line 1927
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 1928
>     goto ldv_53535;
>   } else {
> 
>   }
> 
> #line 1934
>   return (rv);
> }
> }
> #line 1945 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> static int alloc_hash(struct crypto_hash **tfm , char *tfm_name , int err_alg ) 
> { 
>   long tmp ;
> 
>   {
> #line 1947
>   if ((int )((signed char )*tfm_name) == 0) {
> #line 1948
>     return (101);
>   } else {
> 
>   }
> #line 1950
>   *tfm = crypto_alloc_hash((char const   *)tfm_name, 0U, 128U);
> #line 1951
>   tmp = IS_ERR((void const   *)*tfm);
> #line 1951
>   if (tmp != 0L) {
> #line 1952
>     *tfm = 0;
> #line 1953
>     return (err_alg);
>   } else {
> 
>   }
> #line 1956
>   return (101);
> }
> }
> #line 1960 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> static enum drbd_ret_code alloc_crypto(struct crypto *crypto , struct net_conf *new_conf ) 
> { 
>   char hmac_name[64U] ;
>   enum drbd_ret_code rv ;
>   int tmp ;
>   int tmp___0 ;
>   int tmp___1 ;
>   int tmp___2 ;
> 
>   {
> #line 1965
>   tmp = alloc_hash(& crypto->csums_tfm, (char *)(& new_conf->csums_alg), 144);
> #line 1965
>   rv = (enum drbd_ret_code )tmp;
> #line 1967
>   if ((unsigned int )rv != 101U) {
> #line 1968
>     return (rv);
>   } else {
> 
>   }
> #line 1969
>   tmp___0 = alloc_hash(& crypto->verify_tfm, (char *)(& new_conf->verify_alg), 146);
> #line 1969
>   rv = (enum drbd_ret_code )tmp___0;
> #line 1971
>   if ((unsigned int )rv != 101U) {
> #line 1972
>     return (rv);
>   } else {
> 
>   }
> #line 1973
>   tmp___1 = alloc_hash(& crypto->integrity_tfm, (char *)(& new_conf->integrity_alg),
>                        141);
> #line 1973
>   rv = (enum drbd_ret_code )tmp___1;
> #line 1975
>   if ((unsigned int )rv != 101U) {
> #line 1976
>     return (rv);
>   } else {
> 
>   }
> #line 1977
>   if ((int )((signed char )new_conf->cram_hmac_alg[0]) != 0) {
> #line 1978
>     snprintf((char *)(& hmac_name), 64UL, "hmac(%s)", (char *)(& new_conf->cram_hmac_alg));
> #line 1981
>     tmp___2 = alloc_hash(& crypto->cram_hmac_tfm, (char *)(& hmac_name), 120);
> #line 1981
>     rv = (enum drbd_ret_code )tmp___2;
>   } else {
> 
>   }
> #line 1985
>   return (rv);
> }
> }
> #line 1988 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> static void free_crypto(struct crypto *crypto ) 
> { 
> 
> 
>   {
> #line 1990
>   crypto_free_hash(crypto->cram_hmac_tfm);
> #line 1991
>   crypto_free_hash(crypto->integrity_tfm);
> #line 1992
>   crypto_free_hash(crypto->csums_tfm);
> #line 1993
>   crypto_free_hash(crypto->verify_tfm);
> #line 1994
>   return;
> }
> }
> #line 1996 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_net_opts(struct sk_buff *skb , struct genl_info *info ) 
> { 
>   enum drbd_ret_code retcode ;
>   struct drbd_tconn *tconn ;
>   struct net_conf *old_conf ;
>   struct net_conf *new_conf ;
>   int err ;
>   int ovr ;
>   int rsr ;
>   struct crypto crypto ;
>   int tmp ;
>   void *tmp___0 ;
>   bool tmp___1 ;
>   char const   *tmp___2 ;
>   bool tmp___3 ;
>   int tmp___4 ;
>   bool tmp___5 ;
>   int tmp___6 ;
>   int tmp___7 ;
>   struct drbd_conf *tmp___8 ;
> 
>   {
> #line 2000
>   new_conf = 0;
> #line 2004
>   crypto.verify_tfm = 0;
> #line 2004
>   crypto.csums_tfm = 0;
> #line 2004
>   crypto.cram_hmac_tfm = 0;
> #line 2004
>   crypto.integrity_tfm = 0;
> #line 2006
>   tmp = drbd_adm_prepare(skb, info, 4U);
> #line 2006
>   retcode = (enum drbd_ret_code )tmp;
> #line 2007
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 2008
>     return ((int )retcode);
>   } else {
> 
>   }
> #line 2009
>   if ((unsigned int )retcode != 101U) {
> #line 2010
>     goto out;
>   } else {
> 
>   }
> #line 2012
>   tconn = adm_ctx.tconn;
> #line 2014
>   tmp___0 = kzalloc(420UL, 208U);
> #line 2014
>   new_conf = (struct net_conf *)tmp___0;
> #line 2015
>   if ((unsigned long )new_conf == (unsigned long )((struct net_conf *)0)) {
> #line 2016
>     retcode = ERR_NOMEM;
> #line 2017
>     goto out;
>   } else {
> 
>   }
> #line 2020
>   conn_reconfig_start(tconn);
> #line 2022
>   ldv_mutex_lock_293(& tconn->data.mutex);
> #line 2023
>   ldv_mutex_lock_294(& tconn->conf_update);
> #line 2024
>   old_conf = tconn->net_conf;
> #line 2026
>   if ((unsigned long )old_conf == (unsigned long )((struct net_conf *)0)) {
> #line 2027
>     drbd_msg_put_info("net conf missing, try connect");
> #line 2028
>     retcode = ERR_INVALID_REQUEST;
> #line 2029
>     goto fail;
>   } else {
> 
>   }
> #line 2032
>   *new_conf = *old_conf;
> #line 2033
>   tmp___1 = should_set_defaults(info);
> #line 2033
>   if ((int )tmp___1) {
> #line 2034
>     set_net_conf_defaults(new_conf);
>   } else {
> 
>   }
> #line 2036
>   err = net_conf_from_attrs_for_change(new_conf, info);
> #line 2037
>   if (err != 0 && err != -42) {
> #line 2038
>     retcode = ERR_MANDATORY_TAG;
> #line 2039
>     tmp___2 = from_attrs_err_to_txt(err);
> #line 2039
>     drbd_msg_put_info(tmp___2);
> #line 2040
>     goto fail;
>   } else {
> 
>   }
> #line 2043
>   retcode = check_net_options(tconn, new_conf);
> #line 2044
>   if ((unsigned int )retcode != 101U) {
> #line 2045
>     goto fail;
>   } else {
> 
>   }
> #line 2048
>   tmp___3 = conn_resync_running(tconn);
> #line 2048
>   rsr = (int )tmp___3;
> #line 2049
>   if (rsr != 0) {
> #line 2049
>     tmp___4 = strcmp((char const   *)(& new_conf->csums_alg), (char const   *)(& old_conf->csums_alg));
> #line 2049
>     if (tmp___4 != 0) {
> #line 2050
>       retcode = ERR_CSUMS_RESYNC_RUNNING;
> #line 2051
>       goto fail;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 2055
>   tmp___5 = conn_ov_running(tconn);
> #line 2055
>   ovr = (int )tmp___5;
> #line 2056
>   if (ovr != 0) {
> #line 2056
>     tmp___6 = strcmp((char const   *)(& new_conf->verify_alg), (char const   *)(& old_conf->verify_alg));
> #line 2056
>     if (tmp___6 != 0) {
> #line 2057
>       retcode = ERR_VERIFY_RUNNING;
> #line 2058
>       goto fail;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 2061
>   retcode = alloc_crypto(& crypto, new_conf);
> #line 2062
>   if ((unsigned int )retcode != 101U) {
> #line 2063
>     goto fail;
>   } else {
> 
>   }
> #line 2065
>   __asm__  volatile   ("": : : "memory");
> #line 2065
>   tconn->net_conf = new_conf;
> #line 2067
>   if (rsr == 0) {
> #line 2068
>     crypto_free_hash(tconn->csums_tfm);
> #line 2069
>     tconn->csums_tfm = crypto.csums_tfm;
> #line 2070
>     crypto.csums_tfm = 0;
>   } else {
> 
>   }
> #line 2072
>   if (ovr == 0) {
> #line 2073
>     crypto_free_hash(tconn->verify_tfm);
> #line 2074
>     tconn->verify_tfm = crypto.verify_tfm;
> #line 2075
>     crypto.verify_tfm = 0;
>   } else {
> 
>   }
> #line 2078
>   crypto_free_hash(tconn->integrity_tfm);
> #line 2079
>   tconn->integrity_tfm = crypto.integrity_tfm;
> #line 2080
>   if ((unsigned int )tconn->cstate > 8U && tconn->agreed_pro_version > 99) {
> #line 2082
>     __drbd_send_protocol(tconn, P_PROTOCOL_UPDATE);
>   } else {
> 
>   }
> #line 2084
>   crypto_free_hash(tconn->cram_hmac_tfm);
> #line 2085
>   tconn->cram_hmac_tfm = crypto.cram_hmac_tfm;
> #line 2087
>   ldv_mutex_unlock_295(& tconn->conf_update);
> #line 2088
>   ldv_mutex_unlock_296(& tconn->data.mutex);
> #line 2089
>   synchronize_rcu();
> #line 2090
>   kfree((void const   *)old_conf);
> #line 2092
>   if ((unsigned int )tconn->cstate > 8U) {
> #line 2093
>     tmp___7 = conn_lowest_minor(tconn);
> #line 2093
>     tmp___8 = minor_to_mdev((unsigned int )tmp___7);
> #line 2093
>     drbd_send_sync_param(tmp___8);
>   } else {
> 
>   }
> #line 2095
>   goto done;
>   fail: 
> #line 2098
>   ldv_mutex_unlock_297(& tconn->conf_update);
> #line 2099
>   ldv_mutex_unlock_298(& tconn->data.mutex);
> #line 2100
>   free_crypto(& crypto);
> #line 2101
>   kfree((void const   *)new_conf);
>   done: 
> #line 2103
>   conn_reconfig_done(tconn);
>   out: 
> #line 2105
>   drbd_adm_finish(info, (int )retcode);
> #line 2106
>   return (0);
> }
> }
> #line 2109 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_connect(struct sk_buff *skb , struct genl_info *info ) 
> { 
>   struct drbd_conf *mdev ;
>   struct net_conf *old_conf ;
>   struct net_conf *new_conf ;
>   struct crypto crypto ;
>   struct drbd_tconn *tconn ;
>   enum drbd_ret_code retcode ;
>   int i ;
>   int err ;
>   int tmp ;
>   struct list_head  const  *__mptr ;
>   int tmp___0 ;
>   void *tmp___1 ;
>   int tmp___2 ;
>   int tmp___3 ;
>   void *tmp___4 ;
>   int tmp___5 ;
>   struct list_head  const  *__mptr___0 ;
>   void *tmp___6 ;
>   char const   *tmp___7 ;
>   size_t __len ;
>   void *__ret ;
>   void *tmp___9 ;
>   size_t __len___0 ;
>   void *__ret___0 ;
>   void *tmp___11 ;
>   void *tmp___12 ;
>   void *tmp___13 ;
>   union drbd_state val ;
>   union drbd_state mask ;
>   enum drbd_state_rv tmp___14 ;
> 
>   {
> #line 2112
>   new_conf = 0;
> #line 2113
>   crypto.verify_tfm = 0;
> #line 2113
>   crypto.csums_tfm = 0;
> #line 2113
>   crypto.cram_hmac_tfm = 0;
> #line 2113
>   crypto.integrity_tfm = 0;
> #line 2119
>   tmp = drbd_adm_prepare(skb, info, 2U);
> #line 2119
>   retcode = (enum drbd_ret_code )tmp;
> #line 2121
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 2122
>     return ((int )retcode);
>   } else {
> 
>   }
> #line 2123
>   if ((unsigned int )retcode != 101U) {
> #line 2124
>     goto out;
>   } else {
> 
>   }
> #line 2125
>   if ((unsigned long )adm_ctx.my_addr == (unsigned long )((struct nlattr *)0) || (unsigned long )adm_ctx.peer_addr == (unsigned long )((struct nlattr *)0)) {
> #line 2126
>     drbd_msg_put_info("connection endpoint(s) missing");
> #line 2127
>     retcode = ERR_INVALID_REQUEST;
> #line 2128
>     goto out;
>   } else {
> 
>   }
> #line 2134
>   __mptr = (struct list_head  const  *)drbd_tconns.next;
> #line 2134
>   tconn = (struct drbd_tconn *)__mptr + 0xfffffffffffffff8UL;
> #line 2134
>   goto ldv_53590;
>   ldv_53589: 
> #line 2135
>   tmp___0 = nla_len((struct nlattr  const  *)adm_ctx.my_addr);
> #line 2135
>   if (tmp___0 == tconn->my_addr_len) {
> #line 2135
>     tmp___1 = nla_data((struct nlattr  const  *)adm_ctx.my_addr);
> #line 2135
>     tmp___2 = memcmp((void const   *)tmp___1, (void const   *)(& tconn->my_addr),
>                      (size_t )tconn->my_addr_len);
> #line 2135
>     if (tmp___2 == 0) {
> #line 2137
>       retcode = ERR_LOCAL_ADDR;
> #line 2138
>       goto out;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 2141
>   tmp___3 = nla_len((struct nlattr  const  *)adm_ctx.peer_addr);
> #line 2141
>   if (tmp___3 == tconn->peer_addr_len) {
> #line 2141
>     tmp___4 = nla_data((struct nlattr  const  *)adm_ctx.peer_addr);
> #line 2141
>     tmp___5 = memcmp((void const   *)tmp___4, (void const   *)(& tconn->peer_addr),
>                      (size_t )tconn->peer_addr_len);
> #line 2141
>     if (tmp___5 == 0) {
> #line 2143
>       retcode = ERR_PEER_ADDR;
> #line 2144
>       goto out;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 2134
>   __mptr___0 = (struct list_head  const  *)tconn->all_tconn.next;
> #line 2134
>   tconn = (struct drbd_tconn *)__mptr___0 + 0xfffffffffffffff8UL;
>   ldv_53590: ;
> #line 2134
>   if ((unsigned long )(& tconn->all_tconn) != (unsigned long )(& drbd_tconns)) {
> #line 2135
>     goto ldv_53589;
>   } else {
> 
>   }
> #line 2148
>   tconn = adm_ctx.tconn;
> #line 2149
>   conn_reconfig_start(tconn);
> #line 2151
>   if ((unsigned int )tconn->cstate != 0U) {
> #line 2152
>     retcode = ERR_NET_CONFIGURED;
> #line 2153
>     goto fail;
>   } else {
> 
>   }
> #line 2157
>   tmp___6 = kzalloc(420UL, 208U);
> #line 2157
>   new_conf = (struct net_conf *)tmp___6;
> #line 2158
>   if ((unsigned long )new_conf == (unsigned long )((struct net_conf *)0)) {
> #line 2159
>     retcode = ERR_NOMEM;
> #line 2160
>     goto fail;
>   } else {
> 
>   }
> #line 2163
>   set_net_conf_defaults(new_conf);
> #line 2165
>   err = net_conf_from_attrs(new_conf, info);
> #line 2166
>   if (err != 0 && err != -42) {
> #line 2167
>     retcode = ERR_MANDATORY_TAG;
> #line 2168
>     tmp___7 = from_attrs_err_to_txt(err);
> #line 2168
>     drbd_msg_put_info(tmp___7);
> #line 2169
>     goto fail;
>   } else {
> 
>   }
> #line 2172
>   retcode = check_net_options(tconn, new_conf);
> #line 2173
>   if ((unsigned int )retcode != 101U) {
> #line 2174
>     goto fail;
>   } else {
> 
>   }
> #line 2176
>   retcode = alloc_crypto(& crypto, new_conf);
> #line 2177
>   if ((unsigned int )retcode != 101U) {
> #line 2178
>     goto fail;
>   } else {
> 
>   }
> #line 2180
>   *((char *)(& new_conf->shared_secret) + 63UL) = 0;
> #line 2182
>   conn_flush_workqueue(tconn);
> #line 2184
>   ldv_mutex_lock_299(& tconn->conf_update);
> #line 2185
>   old_conf = tconn->net_conf;
> #line 2186
>   if ((unsigned long )old_conf != (unsigned long )((struct net_conf *)0)) {
> #line 2187
>     retcode = ERR_NET_CONFIGURED;
> #line 2188
>     ldv_mutex_unlock_300(& tconn->conf_update);
> #line 2189
>     goto fail;
>   } else {
> 
>   }
> #line 2191
>   __asm__  volatile   ("": : : "memory");
> #line 2191
>   tconn->net_conf = new_conf;
> #line 2193
>   conn_free_crypto(tconn);
> #line 2194
>   tconn->cram_hmac_tfm = crypto.cram_hmac_tfm;
> #line 2195
>   tconn->integrity_tfm = crypto.integrity_tfm;
> #line 2196
>   tconn->csums_tfm = crypto.csums_tfm;
> #line 2197
>   tconn->verify_tfm = crypto.verify_tfm;
> #line 2199
>   tconn->my_addr_len = nla_len((struct nlattr  const  *)adm_ctx.my_addr);
> #line 2200
>   __len = (size_t )tconn->my_addr_len;
> #line 2200
>   tmp___9 = nla_data((struct nlattr  const  *)adm_ctx.my_addr);
> #line 2200
>   __ret = __builtin_memcpy((void *)(& tconn->my_addr), (void const   *)tmp___9, __len);
> #line 2201
>   tconn->peer_addr_len = nla_len((struct nlattr  const  *)adm_ctx.peer_addr);
> #line 2202
>   __len___0 = (size_t )tconn->peer_addr_len;
> #line 2202
>   tmp___11 = nla_data((struct nlattr  const  *)adm_ctx.peer_addr);
> #line 2202
>   __ret___0 = __builtin_memcpy((void *)(& tconn->peer_addr), (void const   *)tmp___11,
>                                __len___0);
> #line 2204
>   ldv_mutex_unlock_301(& tconn->conf_update);
> #line 2206
>   rcu_read_lock___6();
> #line 2207
>   i = 0;
> #line 2207
>   tmp___12 = idr_get_next(& tconn->volumes, & i);
> #line 2207
>   mdev = (struct drbd_conf *)tmp___12;
> #line 2207
>   goto ldv_53600;
>   ldv_53599: 
> #line 2208
>   mdev->send_cnt = 0U;
> #line 2209
>   mdev->recv_cnt = 0U;
> #line 2207
>   i = i + 1;
> #line 2207
>   tmp___13 = idr_get_next(& tconn->volumes, & i);
> #line 2207
>   mdev = (struct drbd_conf *)tmp___13;
>   ldv_53600: ;
> #line 2207
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 2208
>     goto ldv_53599;
>   } else {
> 
>   }
> #line 2211
>   rcu_read_unlock___6();
> #line 2213
>   val.i = 0U;
> #line 2213
>   val.ldv_40024.conn = 2U;
> #line 2213
>   mask.i = 0U;
> #line 2213
>   mask.ldv_40024.conn = 31U;
> #line 2213
>   tmp___14 = conn_request_state(tconn, mask, val, CS_VERBOSE);
> #line 2213
>   retcode = (enum drbd_ret_code )tmp___14;
> #line 2215
>   conn_reconfig_done(tconn);
> #line 2216
>   drbd_adm_finish(info, (int )retcode);
> #line 2217
>   return (0);
>   fail: 
> #line 2220
>   free_crypto(& crypto);
> #line 2221
>   kfree((void const   *)new_conf);
> #line 2223
>   conn_reconfig_done(tconn);
>   out: 
> #line 2225
>   drbd_adm_finish(info, (int )retcode);
> #line 2226
>   return (0);
> }
> }
> #line 2229 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> static enum drbd_state_rv conn_try_disconnect(struct drbd_tconn *tconn , bool force ) 
> { 
>   enum drbd_state_rv rv ;
>   union drbd_state val ;
>   union drbd_state mask ;
>   union drbd_state val___0 ;
>   union drbd_state mask___0 ;
>   union drbd_state val___1 ;
>   union drbd_state mask___1 ;
>   union drbd_state val___2 ;
>   union drbd_state mask___2 ;
>   enum drbd_state_rv rv2 ;
>   union drbd_state val___3 ;
>   union drbd_state mask___3 ;
> 
>   {
> #line 2233
>   val.i = 0U;
> #line 2233
>   val.ldv_40024.conn = 1U;
> #line 2233
>   mask.i = 0U;
> #line 2233
>   mask.ldv_40024.conn = 31U;
> #line 2233
>   rv = conn_request_state(tconn, mask, val, (enum chg_state_flags )force);
> #line 2236
>   switch ((int )rv) {
>   case 2: ;
> #line 2238
>   goto ldv_53616;
>   case -9: ;
> #line 2240
>   return (SS_SUCCESS);
>   case -7: 
> #line 2244
>   val___0.i = 0U;
> #line 2244
>   val___0.ldv_40024.conn = 1U;
> #line 2244
>   val___0.ldv_40024.pdsk = 5U;
> #line 2243
>   mask___0.i = 0U;
> #line 2243
>   mask___0.ldv_40024.conn = 31U;
> #line 2244
>   mask___0.ldv_40024.pdsk = 15U;
> #line 2244
>   rv = conn_request_state(tconn, mask___0, val___0, CS_VERBOSE);
> #line 2245
>   goto ldv_53616;
>   case -10: 
> #line 2249
>   val___1.i = 0U;
> #line 2249
>   val___1.ldv_40024.conn = 1U;
> #line 2249
>   val___1.ldv_40024.disk = 5U;
> #line 2248
>   mask___1.i = 0U;
> #line 2248
>   mask___1.ldv_40024.conn = 31U;
> #line 2249
>   mask___1.ldv_40024.disk = 15U;
> #line 2249
>   rv = conn_request_state(tconn, mask___1, val___1, 0);
> #line 2250
>   if ((int )rv == -11 || (int )rv == -16) {
> #line 2251
>     val___2.i = 0U;
> #line 2251
>     val___2.ldv_40024.conn = 1U;
> #line 2251
>     mask___2.i = 0U;
> #line 2251
>     mask___2.ldv_40024.conn = 31U;
> #line 2251
>     rv = conn_request_state(tconn, mask___2, val___2, CS_HARD);
>   } else {
> 
>   }
> #line 2254
>   goto ldv_53616;
>   default: ;
>   }
>   ldv_53616: ;
> #line 2259
>   if ((int )rv > 0) {
> #line 2265
>     drbd_thread_stop(& (adm_ctx.tconn)->receiver);
> #line 2273
>     val___3.i = 0U;
> #line 2273
>     val___3.ldv_40024.conn = 0U;
> #line 2273
>     mask___3.i = 0U;
> #line 2273
>     mask___3.ldv_40024.conn = 31U;
> #line 2273
>     rv2 = conn_request_state(tconn, mask___3, val___3, 3);
> #line 2275
>     if ((int )rv2 <= 0) {
> #line 2276
>       printk("\vd-con %s: unexpected rv2=%d in conn_try_disconnect()\n", tconn->name,
>              (int )rv2);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 2280
>   return (rv);
> }
> }
> #line 2283 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_disconnect(struct sk_buff *skb , struct genl_info *info ) 
> { 
>   struct disconnect_parms parms ;
>   struct drbd_tconn *tconn ;
>   enum drbd_state_rv rv ;
>   enum drbd_ret_code retcode ;
>   int err ;
>   int tmp ;
>   char const   *tmp___0 ;
> 
>   {
> #line 2291
>   tmp = drbd_adm_prepare(skb, info, 4U);
> #line 2291
>   retcode = (enum drbd_ret_code )tmp;
> #line 2292
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 2293
>     return ((int )retcode);
>   } else {
> 
>   }
> #line 2294
>   if ((unsigned int )retcode != 101U) {
> #line 2295
>     goto fail;
>   } else {
> 
>   }
> #line 2297
>   tconn = adm_ctx.tconn;
> #line 2298
>   memset((void *)(& parms), 0, 1UL);
> #line 2299
>   if ((unsigned long )*(info->attrs + 12UL) != (unsigned long )((struct nlattr *)0)) {
> #line 2300
>     err = disconnect_parms_from_attrs(& parms, info);
> #line 2301
>     if (err != 0) {
> #line 2302
>       retcode = ERR_MANDATORY_TAG;
> #line 2303
>       tmp___0 = from_attrs_err_to_txt(err);
> #line 2303
>       drbd_msg_put_info(tmp___0);
> #line 2304
>       goto fail;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 2308
>   rv = conn_try_disconnect(tconn, (int )((signed char )parms.force_disconnect) != 0);
> #line 2309
>   if ((int )rv <= 0) {
> #line 2310
>     retcode = (enum drbd_ret_code )rv;
>   } else {
> #line 2312
>     retcode = NO_ERROR;
>   }
>   fail: 
> #line 2314
>   drbd_adm_finish(info, (int )retcode);
> #line 2315
>   return (0);
> }
> }
> #line 2318 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> void resync_after_online_grow(struct drbd_conf *mdev ) 
> { 
>   int iass ;
>   union drbd_state val ;
>   union drbd_state mask ;
> 
>   {
> #line 2322
>   _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Resync of new storage after online grow\n");
> #line 2323
>   if ((int )mdev->state.ldv_49522.role != (int )mdev->state.ldv_49522.peer) {
> #line 2324
>     iass = (unsigned int )*((unsigned char *)mdev + 748UL) == 1U;
>   } else {
> #line 2326
>     iass = constant_test_bit(1U, (unsigned long const volatile   *)(& (mdev->tconn)->flags));
>   }
> #line 2328
>   if (iass != 0) {
> #line 2329
>     drbd_start_resync(mdev, C_SYNC_SOURCE);
>   } else {
> #line 2331
>     val.i = 0U;
> #line 2331
>     val.ldv_40024.conn = 15U;
> #line 2331
>     mask.i = 0U;
> #line 2331
>     mask.ldv_40024.conn = 31U;
> #line 2331
>     _drbd_request_state(mdev, mask, val, 10);
>   }
> #line 2333
>   return;
> }
> }
> #line 2334 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_resize(struct sk_buff *skb , struct genl_info *info ) 
> { 
>   struct disk_conf *old_disk_conf ;
>   struct disk_conf *new_disk_conf ;
>   struct resize_parms rs ;
>   struct drbd_conf *mdev ;
>   enum drbd_ret_code retcode ;
>   enum determine_dev_size dd ;
>   enum dds_flags ddsf ;
>   sector_t u_size ;
>   int err ;
>   int tmp ;
>   char const   *tmp___0 ;
>   int tmp___1 ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp___2 ;
>   int tmp___3 ;
>   void *tmp___4 ;
>   sector_t tmp___5 ;
> 
>   {
> #line 2336
>   new_disk_conf = 0;
> #line 2345
>   tmp = drbd_adm_prepare(skb, info, 1U);
> #line 2345
>   retcode = (enum drbd_ret_code )tmp;
> #line 2346
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 2347
>     return ((int )retcode);
>   } else {
> 
>   }
> #line 2348
>   if ((unsigned int )retcode != 101U) {
> #line 2349
>     goto fail;
>   } else {
> 
>   }
> #line 2351
>   memset((void *)(& rs), 0, 16UL);
> #line 2352
>   if ((unsigned long )*(info->attrs + 7UL) != (unsigned long )((struct nlattr *)0)) {
> #line 2353
>     err = resize_parms_from_attrs(& rs, info);
> #line 2354
>     if (err != 0) {
> #line 2355
>       retcode = ERR_MANDATORY_TAG;
> #line 2356
>       tmp___0 = from_attrs_err_to_txt(err);
> #line 2356
>       drbd_msg_put_info(tmp___0);
> #line 2357
>       goto fail;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 2361
>   mdev = adm_ctx.mdev;
> #line 2362
>   if ((int )mdev->state.ldv_49522.conn > 10) {
> #line 2363
>     retcode = ERR_RESIZE_RESYNC;
> #line 2364
>     goto fail;
>   } else {
> 
>   }
> #line 2367
>   if ((unsigned int )*((unsigned char *)mdev + 748UL) == 2U && (unsigned int )*((unsigned char *)mdev + 748UL) == 8U) {
> #line 2369
>     retcode = ERR_NO_PRIMARY;
> #line 2370
>     goto fail;
>   } else {
> 
>   }
> #line 2373
>   tmp___1 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 2373
>   if (tmp___1 == 0) {
> #line 2374
>     retcode = ERR_NO_DISK;
> #line 2375
>     goto fail;
>   } else {
> 
>   }
> #line 2378
>   if ((int )((signed char )rs.no_resync) != 0 && (mdev->tconn)->agreed_pro_version <= 92) {
> #line 2379
>     retcode = ERR_NEED_APV_93;
> #line 2380
>     goto fail_ldev;
>   } else {
> 
>   }
> #line 2383
>   rcu_read_lock___6();
> #line 2384
>   _________p1 = *((struct disk_conf * volatile  *)(& (mdev->ldev)->disk_conf));
> #line 2384
>   tmp___2 = debug_lockdep_rcu_enabled();
> #line 2384
>   if (tmp___2 != 0 && ! __warned) {
> #line 2384
>     tmp___3 = rcu_read_lock_held();
> #line 2384
>     if (tmp___3 == 0 && 1) {
> #line 2384
>       __warned = 1;
> #line 2384
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared",
>                              2384, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 2384
>   u_size = (sector_t )_________p1->disk_size;
> #line 2385
>   rcu_read_unlock___6();
> #line 2386
>   if ((unsigned long )rs.resize_size != u_size) {
> #line 2387
>     tmp___4 = kmalloc(344UL, 208U);
> #line 2387
>     new_disk_conf = (struct disk_conf *)tmp___4;
> #line 2388
>     if ((unsigned long )new_disk_conf == (unsigned long )((struct disk_conf *)0)) {
> #line 2389
>       retcode = ERR_NOMEM;
> #line 2390
>       goto fail_ldev;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 2394
>   tmp___5 = drbd_get_capacity((mdev->ldev)->backing_bdev);
> #line 2394
>   if ((mdev->ldev)->known_size != tmp___5) {
> #line 2395
>     (mdev->ldev)->known_size = drbd_get_capacity((mdev->ldev)->backing_bdev);
>   } else {
> 
>   }
> #line 2397
>   if ((unsigned long )new_disk_conf != (unsigned long )((struct disk_conf *)0)) {
> #line 2398
>     ldv_mutex_lock_302(& (mdev->tconn)->conf_update);
> #line 2399
>     old_disk_conf = (mdev->ldev)->disk_conf;
> #line 2400
>     *new_disk_conf = *old_disk_conf;
> #line 2401
>     new_disk_conf->disk_size = rs.resize_size;
> #line 2402
>     __asm__  volatile   ("": : : "memory");
> #line 2402
>     (mdev->ldev)->disk_conf = new_disk_conf;
> #line 2403
>     ldv_mutex_unlock_303(& (mdev->tconn)->conf_update);
> #line 2404
>     synchronize_rcu();
> #line 2405
>     kfree((void const   *)old_disk_conf);
>   } else {
> 
>   }
> #line 2408
>   ddsf = (enum dds_flags )(((int )((signed char )rs.resize_force) != 0) | ((int )((signed char )rs.no_resync) != 0 ? 2 : 0));
> #line 2409
>   dd = drbd_determine_dev_size(mdev, ddsf);
> #line 2410
>   drbd_md_sync(mdev);
> #line 2411
>   put_ldev(mdev);
> #line 2412
>   if ((int )dd == -1) {
> #line 2413
>     retcode = ERR_NOMEM_BITMAP;
> #line 2414
>     goto fail;
>   } else {
> 
>   }
> #line 2417
>   if ((unsigned int )*((unsigned short *)mdev + 374UL) == 160U) {
> #line 2418
>     if ((int )dd == 2) {
> #line 2419
>       set_bit(16U, (unsigned long volatile   *)(& mdev->flags));
>     } else {
> 
>     }
> #line 2421
>     drbd_send_uuids(mdev);
> #line 2422
>     drbd_send_sizes(mdev, 1, ddsf);
>   } else {
> 
>   }
>   fail: 
> #line 2426
>   drbd_adm_finish(info, (int )retcode);
> #line 2427
>   return (0);
>   fail_ldev: 
> #line 2430
>   put_ldev(mdev);
> #line 2431
>   goto fail;
> }
> }
> #line 2434 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_resource_opts(struct sk_buff *skb , struct genl_info *info ) 
> { 
>   enum drbd_ret_code retcode ;
>   struct drbd_tconn *tconn ;
>   struct res_opts res_opts ;
>   int err ;
>   int tmp ;
>   bool tmp___0 ;
>   char const   *tmp___1 ;
> 
>   {
> #line 2441
>   tmp = drbd_adm_prepare(skb, info, 2U);
> #line 2441
>   retcode = (enum drbd_ret_code )tmp;
> #line 2442
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 2443
>     return ((int )retcode);
>   } else {
> 
>   }
> #line 2444
>   if ((unsigned int )retcode != 101U) {
> #line 2445
>     goto fail;
>   } else {
> 
>   }
> #line 2446
>   tconn = adm_ctx.tconn;
> #line 2448
>   res_opts = tconn->res_opts;
> #line 2449
>   tmp___0 = should_set_defaults(info);
> #line 2449
>   if ((int )tmp___0) {
> #line 2450
>     set_res_opts_defaults(& res_opts);
>   } else {
> 
>   }
> #line 2452
>   err = res_opts_from_attrs(& res_opts, info);
> #line 2453
>   if (err != 0 && err != -42) {
> #line 2454
>     retcode = ERR_MANDATORY_TAG;
> #line 2455
>     tmp___1 = from_attrs_err_to_txt(err);
> #line 2455
>     drbd_msg_put_info(tmp___1);
> #line 2456
>     goto fail;
>   } else {
> 
>   }
> #line 2459
>   err = set_resource_options(tconn, & res_opts);
> #line 2460
>   if (err != 0) {
> #line 2461
>     retcode = ERR_INVALID_REQUEST;
> #line 2462
>     if (err == -12) {
> #line 2463
>       retcode = ERR_NOMEM;
>     } else {
> 
>     }
>   } else {
> 
>   }
>   fail: 
> #line 2467
>   drbd_adm_finish(info, (int )retcode);
> #line 2468
>   return (0);
> }
> }
> #line 2471 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_invalidate(struct sk_buff *skb , struct genl_info *info ) 
> { 
>   struct drbd_conf *mdev ;
>   int retcode ;
>   int tmp ;
>   wait_queue_t __wait ;
>   struct task_struct *tmp___0 ;
>   int tmp___1 ;
>   union drbd_state val ;
>   union drbd_state mask ;
>   enum drbd_state_rv tmp___2 ;
>   union drbd_state val___0 ;
>   union drbd_state mask___0 ;
>   union drbd_state __ns ;
>   enum drbd_state_rv tmp___3 ;
>   union drbd_state val___1 ;
>   union drbd_state mask___1 ;
> 
>   {
> #line 2476
>   retcode = drbd_adm_prepare(skb, info, 1U);
> #line 2477
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 2478
>     return (retcode);
>   } else {
> 
>   }
> #line 2479
>   if (retcode != 101) {
> #line 2480
>     goto out;
>   } else {
> 
>   }
> #line 2482
>   mdev = adm_ctx.mdev;
> #line 2487
>   drbd_suspend_io(mdev);
> #line 2488
>   tmp = constant_test_bit(9U, (unsigned long const volatile   *)(& mdev->flags));
> #line 2488
>   if (tmp == 0) {
> #line 2488
>     goto ldv_53690;
>   } else {
> 
>   }
> #line 2488
>   tmp___0 = get_current();
> #line 2488
>   __wait.flags = 0U;
> #line 2488
>   __wait.private = (void *)tmp___0;
> #line 2488
>   __wait.func = & autoremove_wake_function;
> #line 2488
>   __wait.task_list.next = & __wait.task_list;
> #line 2488
>   __wait.task_list.prev = & __wait.task_list;
>   ldv_53693: 
> #line 2488
>   prepare_to_wait(& mdev->misc_wait, & __wait, 2);
> #line 2488
>   tmp___1 = constant_test_bit(9U, (unsigned long const volatile   *)(& mdev->flags));
> #line 2488
>   if (tmp___1 == 0) {
> #line 2488
>     goto ldv_53692;
>   } else {
> 
>   }
> #line 2488
>   schedule();
> #line 2488
>   goto ldv_53693;
>   ldv_53692: 
> #line 2488
>   finish_wait(& mdev->misc_wait, & __wait);
>   ldv_53690: 
> #line 2489
>   drbd_flush_workqueue(mdev);
> #line 2491
>   val.i = 0U;
> #line 2491
>   val.ldv_40024.conn = 12U;
> #line 2491
>   mask.i = 0U;
> #line 2491
>   mask.ldv_40024.conn = 31U;
> #line 2491
>   tmp___2 = _drbd_request_state(mdev, mask, val, CS_ORDERED);
> #line 2491
>   retcode = (int )tmp___2;
> #line 2493
>   if (retcode <= 0 && retcode != -15) {
> #line 2494
>     val___0.i = 0U;
> #line 2494
>     val___0.ldv_40024.conn = 12U;
> #line 2494
>     mask___0.i = 0U;
> #line 2494
>     mask___0.ldv_40024.conn = 31U;
> #line 2494
>     retcode = drbd_request_state(mdev, mask___0, val___0);
>   } else {
> 
>   }
> #line 2496
>   goto ldv_53710;
>   ldv_53709: 
> #line 2497
>   spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 2498
>   if ((int )mdev->state.ldv_49522.conn <= 9) {
> #line 2499
>     __ns = drbd_read_state(mdev);
> #line 2499
>     __ns.ldv_40024.disk = 4U;
> #line 2499
>     tmp___3 = _drbd_set_state(mdev, __ns, CS_VERBOSE, 0);
> #line 2499
>     retcode = (int )tmp___3;
>   } else {
> 
>   }
> #line 2500
>   spin_unlock_irq(& (mdev->tconn)->req_lock);
> #line 2502
>   if (retcode != -15) {
> #line 2503
>     goto ldv_53704;
>   } else {
> 
>   }
> #line 2505
>   val___1.i = 0U;
> #line 2505
>   val___1.ldv_40024.conn = 12U;
> #line 2505
>   mask___1.i = 0U;
> #line 2505
>   mask___1.ldv_40024.conn = 31U;
> #line 2505
>   retcode = drbd_request_state(mdev, mask___1, val___1);
>   ldv_53710: ;
> #line 2496
>   if (retcode == -15) {
> #line 2497
>     goto ldv_53709;
>   } else {
> 
>   }
>   ldv_53704: 
> #line 2507
>   drbd_resume_io(mdev);
>   out: 
> #line 2510
>   drbd_adm_finish(info, retcode);
> #line 2511
>   return (0);
> }
> }
> #line 2514 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> static int drbd_adm_simple_request_state(struct sk_buff *skb , struct genl_info *info ,
>                                          union drbd_state mask , union drbd_state val ) 
> { 
>   enum drbd_ret_code retcode ;
>   int tmp ;
>   int tmp___0 ;
> 
>   {
> #line 2519
>   tmp = drbd_adm_prepare(skb, info, 1U);
> #line 2519
>   retcode = (enum drbd_ret_code )tmp;
> #line 2520
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 2521
>     return ((int )retcode);
>   } else {
> 
>   }
> #line 2522
>   if ((unsigned int )retcode != 101U) {
> #line 2523
>     goto out;
>   } else {
> 
>   }
> #line 2525
>   tmp___0 = drbd_request_state(adm_ctx.mdev, mask, val);
> #line 2525
>   retcode = (enum drbd_ret_code )tmp___0;
>   out: 
> #line 2527
>   drbd_adm_finish(info, (int )retcode);
> #line 2528
>   return (0);
> }
> }
> #line 2531 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> static int drbd_bmio_set_susp_al(struct drbd_conf *mdev ) 
> { 
>   int rv ;
> 
>   {
> #line 2535
>   rv = drbd_bmio_set_n_write(mdev);
> #line 2536
>   drbd_suspend_al(mdev);
> #line 2537
>   return (rv);
> }
> }
> #line 2540 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_invalidate_peer(struct sk_buff *skb , struct genl_info *info ) 
> { 
>   int retcode ;
>   struct drbd_conf *mdev ;
>   int tmp ;
>   wait_queue_t __wait ;
>   struct task_struct *tmp___0 ;
>   int tmp___1 ;
>   union drbd_state val ;
>   union drbd_state mask ;
>   enum drbd_state_rv tmp___2 ;
>   union drbd_state val___0 ;
>   union drbd_state mask___0 ;
>   int tmp___3 ;
>   union drbd_state val___1 ;
>   union drbd_state mask___1 ;
> 
>   {
> #line 2545
>   retcode = drbd_adm_prepare(skb, info, 1U);
> #line 2546
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 2547
>     return (retcode);
>   } else {
> 
>   }
> #line 2548
>   if (retcode != 101) {
> #line 2549
>     goto out;
>   } else {
> 
>   }
> #line 2551
>   mdev = adm_ctx.mdev;
> #line 2556
>   drbd_suspend_io(mdev);
> #line 2557
>   tmp = constant_test_bit(9U, (unsigned long const volatile   *)(& mdev->flags));
> #line 2557
>   if (tmp == 0) {
> #line 2557
>     goto ldv_53730;
>   } else {
> 
>   }
> #line 2557
>   tmp___0 = get_current();
> #line 2557
>   __wait.flags = 0U;
> #line 2557
>   __wait.private = (void *)tmp___0;
> #line 2557
>   __wait.func = & autoremove_wake_function;
> #line 2557
>   __wait.task_list.next = & __wait.task_list;
> #line 2557
>   __wait.task_list.prev = & __wait.task_list;
>   ldv_53733: 
> #line 2557
>   prepare_to_wait(& mdev->misc_wait, & __wait, 2);
> #line 2557
>   tmp___1 = constant_test_bit(9U, (unsigned long const volatile   *)(& mdev->flags));
> #line 2557
>   if (tmp___1 == 0) {
> #line 2557
>     goto ldv_53732;
>   } else {
> 
>   }
> #line 2557
>   schedule();
> #line 2557
>   goto ldv_53733;
>   ldv_53732: 
> #line 2557
>   finish_wait(& mdev->misc_wait, & __wait);
>   ldv_53730: 
> #line 2558
>   drbd_flush_workqueue(mdev);
> #line 2560
>   val.i = 0U;
> #line 2560
>   val.ldv_40024.conn = 11U;
> #line 2560
>   mask.i = 0U;
> #line 2560
>   mask.ldv_40024.conn = 31U;
> #line 2560
>   tmp___2 = _drbd_request_state(mdev, mask, val, CS_ORDERED);
> #line 2560
>   retcode = (int )tmp___2;
> #line 2561
>   if (retcode <= 0) {
> #line 2562
>     if (retcode == -15 && (unsigned int )*((unsigned char *)mdev + 748UL) == 1U) {
> #line 2565
>       val___0.i = 0U;
> #line 2565
>       val___0.ldv_40024.pdsk = 4U;
> #line 2565
>       mask___0.i = 0U;
> #line 2565
>       mask___0.ldv_40024.pdsk = 15U;
> #line 2565
>       retcode = drbd_request_state(mdev, mask___0, val___0);
> #line 2566
>       if (retcode > 0) {
> #line 2567
>         tmp___3 = drbd_bitmap_io(mdev, & drbd_bmio_set_susp_al, (char *)"set_n_write from invalidate_peer",
>                                  BM_LOCKED_SET_ALLOWED);
> #line 2567
>         if (tmp___3 != 0) {
> #line 2570
>           retcode = 118;
>         } else {
> 
>         }
>       } else {
> 
>       }
>     } else {
> #line 2573
>       val___1.i = 0U;
> #line 2573
>       val___1.ldv_40024.conn = 11U;
> #line 2573
>       mask___1.i = 0U;
> #line 2573
>       mask___1.ldv_40024.conn = 31U;
> #line 2573
>       retcode = drbd_request_state(mdev, mask___1, val___1);
>     }
>   } else {
> 
>   }
> #line 2575
>   drbd_resume_io(mdev);
>   out: 
> #line 2578
>   drbd_adm_finish(info, retcode);
> #line 2579
>   return (0);
> }
> }
> #line 2582 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_pause_sync(struct sk_buff *skb , struct genl_info *info ) 
> { 
>   enum drbd_ret_code retcode ;
>   int tmp ;
>   union drbd_state val ;
>   union drbd_state mask ;
>   int tmp___0 ;
> 
>   {
> #line 2586
>   tmp = drbd_adm_prepare(skb, info, 1U);
> #line 2586
>   retcode = (enum drbd_ret_code )tmp;
> #line 2587
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 2588
>     return ((int )retcode);
>   } else {
> 
>   }
> #line 2589
>   if ((unsigned int )retcode != 101U) {
> #line 2590
>     goto out;
>   } else {
> 
>   }
> #line 2592
>   val.i = 0U;
> #line 2592
>   val.ldv_40024.user_isp = 1U;
> #line 2592
>   mask.i = 0U;
> #line 2592
>   mask.ldv_40024.user_isp = 1U;
> #line 2592
>   tmp___0 = drbd_request_state(adm_ctx.mdev, mask, val);
> #line 2592
>   if (tmp___0 == 2) {
> #line 2593
>     retcode = ERR_PAUSE_IS_SET;
>   } else {
> 
>   }
>   out: 
> #line 2595
>   drbd_adm_finish(info, (int )retcode);
> #line 2596
>   return (0);
> }
> }
> #line 2599 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_resume_sync(struct sk_buff *skb , struct genl_info *info ) 
> { 
>   union drbd_dev_state s ;
>   enum drbd_ret_code retcode ;
>   int tmp ;
>   union drbd_state val ;
>   union drbd_state mask ;
>   int tmp___0 ;
> 
>   {
> #line 2604
>   tmp = drbd_adm_prepare(skb, info, 1U);
> #line 2604
>   retcode = (enum drbd_ret_code )tmp;
> #line 2605
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 2606
>     return ((int )retcode);
>   } else {
> 
>   }
> #line 2607
>   if ((unsigned int )retcode != 101U) {
> #line 2608
>     goto out;
>   } else {
> 
>   }
> #line 2610
>   val.i = 0U;
> #line 2610
>   val.ldv_40024.user_isp = 0U;
> #line 2610
>   mask.i = 0U;
> #line 2610
>   mask.ldv_40024.user_isp = 1U;
> #line 2610
>   tmp___0 = drbd_request_state(adm_ctx.mdev, mask, val);
> #line 2610
>   if (tmp___0 == 2) {
> #line 2611
>     s = (adm_ctx.mdev)->state;
> #line 2612
>     if ((unsigned int )*((unsigned short *)(& s) + 0UL) == 320U || (unsigned int )*((unsigned short *)(& s) + 0UL) == 336U) {
> #line 2613
>       retcode = (unsigned int )*((unsigned char *)(& s) + 2UL) == 0U ? ((unsigned int )*((unsigned char *)(& s) + 2UL) != 0U ? ERR_PIC_PEER_DEP : ERR_PAUSE_IS_CLEAR) : ERR_PIC_AFTER_DEP;
>     } else {
> #line 2616
>       retcode = ERR_PAUSE_IS_CLEAR;
>     }
>   } else {
> 
>   }
>   out: 
> #line 2621
>   drbd_adm_finish(info, (int )retcode);
> #line 2622
>   return (0);
> }
> }
> #line 2625 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_suspend_io(struct sk_buff *skb , struct genl_info *info ) 
> { 
>   union drbd_state val ;
>   union drbd_state mask ;
>   int tmp ;
> 
>   {
> #line 2627
>   val.i = 0U;
> #line 2627
>   val.ldv_40024.susp = 1U;
> #line 2627
>   mask.i = 0U;
> #line 2627
>   mask.ldv_40024.susp = 1U;
> #line 2627
>   tmp = drbd_adm_simple_request_state(skb, info, mask, val);
> #line 2627
>   return (tmp);
> }
> }
> #line 2630 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_resume_io(struct sk_buff *skb , struct genl_info *info ) 
> { 
>   struct drbd_conf *mdev ;
>   int retcode ;
>   int tmp ;
>   union drbd_state val ;
>   union drbd_state mask ;
> 
>   {
> #line 2635
>   retcode = drbd_adm_prepare(skb, info, 1U);
> #line 2636
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 2637
>     return (retcode);
>   } else {
> 
>   }
> #line 2638
>   if (retcode != 101) {
> #line 2639
>     goto out;
>   } else {
> 
>   }
> #line 2641
>   mdev = adm_ctx.mdev;
> #line 2642
>   tmp = constant_test_bit(17U, (unsigned long const volatile   *)(& mdev->flags));
> #line 2642
>   if (tmp != 0) {
> #line 2643
>     drbd_uuid_new_current(mdev);
> #line 2644
>     clear_bit(17, (unsigned long volatile   *)(& mdev->flags));
>   } else {
> 
>   }
> #line 2646
>   drbd_suspend_io(mdev);
> #line 2647
>   val.i = 0U;
> #line 2647
>   val.ldv_40024.susp = 0U;
> #line 2647
>   val.ldv_40024.susp_nod = 0U;
> #line 2647
>   val.ldv_40024.susp_fen = 0U;
> #line 2647
>   mask.i = 0U;
> #line 2647
>   mask.ldv_40024.susp = 1U;
> #line 2647
>   mask.ldv_40024.susp_nod = 1U;
> #line 2647
>   mask.ldv_40024.susp_fen = 1U;
> #line 2647
>   retcode = drbd_request_state(mdev, mask, val);
> #line 2648
>   if (retcode == 1) {
> #line 2649
>     if ((int )mdev->state.ldv_49522.conn <= 9) {
> #line 2650
>       tl_clear(mdev->tconn);
>     } else {
> 
>     }
> #line 2651
>     if ((unsigned int )*((unsigned char *)mdev + 749UL) == 0U || (unsigned int )*((unsigned char *)mdev + 749UL) == 4U) {
> #line 2652
>       tl_restart(mdev->tconn, FAIL_FROZEN_DISK_IO);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 2654
>   drbd_resume_io(mdev);
>   out: 
> #line 2657
>   drbd_adm_finish(info, retcode);
> #line 2658
>   return (0);
> }
> }
> #line 2661 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_outdate(struct sk_buff *skb , struct genl_info *info ) 
> { 
>   union drbd_state val ;
>   union drbd_state mask ;
>   int tmp ;
> 
>   {
> #line 2663
>   val.i = 0U;
> #line 2663
>   val.ldv_40024.disk = 5U;
> #line 2663
>   mask.i = 0U;
> #line 2663
>   mask.ldv_40024.disk = 15U;
> #line 2663
>   tmp = drbd_adm_simple_request_state(skb, info, mask, val);
> #line 2663
>   return (tmp);
> }
> }
> #line 2666 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> int nla_put_drbd_cfg_context(struct sk_buff *skb , struct drbd_tconn *tconn , unsigned int vnr ) 
> { 
>   struct nlattr *nla ;
>   int tmp ;
>   int tmp___0 ;
>   int tmp___1 ;
>   int tmp___2 ;
> 
>   {
> #line 2669
>   nla = nla_nest_start(skb, 2);
> #line 2670
>   if ((unsigned long )nla == (unsigned long )((struct nlattr *)0)) {
> #line 2671
>     goto nla_put_failure;
>   } else {
> 
>   }
> #line 2672
>   if (vnr != 4294967295U) {
> #line 2672
>     tmp = nla_put_u32(skb, 16385, vnr);
> #line 2672
>     if (tmp != 0) {
> #line 2674
>       goto nla_put_failure;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 2675
>   tmp___0 = nla_put_string(skb, 16386, (char const   *)tconn->name);
> #line 2675
>   if (tmp___0 != 0) {
> #line 2676
>     goto nla_put_failure;
>   } else {
> 
>   }
> #line 2677
>   if (tconn->my_addr_len != 0) {
> #line 2677
>     tmp___1 = nla_put(skb, 16387, tconn->my_addr_len, (void const   *)(& tconn->my_addr));
> #line 2677
>     if (tmp___1 != 0) {
> #line 2679
>       goto nla_put_failure;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 2680
>   if (tconn->peer_addr_len != 0) {
> #line 2680
>     tmp___2 = nla_put(skb, 16388, tconn->peer_addr_len, (void const   *)(& tconn->peer_addr));
> #line 2680
>     if (tmp___2 != 0) {
> #line 2682
>       goto nla_put_failure;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 2683
>   nla_nest_end(skb, nla);
> #line 2684
>   return (0);
>   nla_put_failure: ;
> #line 2687
>   if ((unsigned long )nla != (unsigned long )((struct nlattr *)0)) {
> #line 2688
>     nla_nest_cancel(skb, nla);
>   } else {
> 
>   }
> #line 2689
>   return (-90);
> }
> }
> #line 2692 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> int nla_put_status_info(struct sk_buff *skb , struct drbd_conf *mdev , struct sib_info  const  *sib ) 
> { 
>   struct state_info *si ;
>   struct net_conf *nc ;
>   struct nlattr *nla ;
>   int got_ldev ;
>   int err ;
>   int exclude_sensitive ;
>   bool tmp ;
>   int tmp___0 ;
>   int tmp___1 ;
>   int tmp___2 ;
>   int tmp___3 ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp___4 ;
>   int tmp___5 ;
>   int tmp___6 ;
>   struct net_conf *_________p1___0 ;
>   bool __warned___0 ;
>   int tmp___7 ;
>   int tmp___8 ;
>   int tmp___9 ;
>   int tmp___10 ;
>   int tmp___11 ;
>   sector_t tmp___12 ;
>   int tmp___13 ;
>   int tmp___14 ;
>   int tmp___15 ;
>   int tmp___16 ;
>   int tmp___17 ;
>   int tmp___18 ;
>   int tmp___19 ;
>   int tmp___20 ;
>   int tmp___21 ;
>   int tmp___22 ;
>   int tmp___23 ;
>   int tmp___24 ;
>   int tmp___25 ;
>   int err___0 ;
>   int tmp___26 ;
>   unsigned long tmp___27 ;
>   int tmp___28 ;
>   unsigned long tmp___29 ;
>   int tmp___30 ;
>   int tmp___31 ;
>   int tmp___32 ;
>   int tmp___33 ;
>   int tmp___34 ;
>   int tmp___35 ;
>   int tmp___36 ;
> 
>   {
> #line 2695
>   si = 0;
> #line 2699
>   err = 0;
> #line 2713
>   if ((unsigned long )sib != (unsigned long )((struct sib_info  const  *)0)) {
> #line 2713
>     tmp___1 = 1;
>   } else {
> #line 2713
>     tmp = capable(21);
> #line 2713
>     if (tmp) {
> #line 2713
>       tmp___0 = 0;
>     } else {
> #line 2713
>       tmp___0 = 1;
>     }
> #line 2713
>     if (tmp___0) {
> #line 2713
>       tmp___1 = 1;
>     } else {
> #line 2713
>       tmp___1 = 0;
>     }
>   }
> #line 2713
>   exclude_sensitive = tmp___1;
> #line 2715
>   got_ldev = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 2719
>   tmp___2 = nla_put_drbd_cfg_context(skb, mdev->tconn, (unsigned int )mdev->vnr);
> #line 2719
>   if (tmp___2 != 0) {
> #line 2720
>     goto nla_put_failure;
>   } else {
> 
>   }
> #line 2722
>   tmp___3 = res_opts_to_skb(skb, & (mdev->tconn)->res_opts, exclude_sensitive != 0);
> #line 2722
>   if (tmp___3 != 0) {
> #line 2723
>     goto nla_put_failure;
>   } else {
> 
>   }
> #line 2725
>   rcu_read_lock___6();
> #line 2726
>   if (got_ldev != 0) {
> #line 2727
>     _________p1 = *((struct disk_conf * volatile  *)(& (mdev->ldev)->disk_conf));
> #line 2727
>     tmp___4 = debug_lockdep_rcu_enabled();
> #line 2727
>     if (tmp___4 != 0 && ! __warned) {
> #line 2727
>       tmp___5 = rcu_read_lock_held();
> #line 2727
>       if (tmp___5 == 0 && 1) {
> #line 2727
>         __warned = 1;
> #line 2727
>         lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared",
>                                2727, "suspicious rcu_dereference_check() usage");
>       } else {
> 
>       }
>     } else {
> 
>     }
> #line 2727
>     tmp___6 = disk_conf_to_skb(skb, _________p1, exclude_sensitive != 0);
> #line 2727
>     if (tmp___6 != 0) {
> #line 2728
>       goto nla_put_failure;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 2730
>   _________p1___0 = *((struct net_conf * volatile  *)(& (mdev->tconn)->net_conf));
> #line 2730
>   tmp___7 = debug_lockdep_rcu_enabled();
> #line 2730
>   if (tmp___7 != 0 && ! __warned___0) {
> #line 2730
>     tmp___8 = rcu_read_lock_held();
> #line 2730
>     if (tmp___8 == 0 && 1) {
> #line 2730
>       __warned___0 = 1;
> #line 2730
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared",
>                              2730, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 2730
>   nc = _________p1___0;
> #line 2731
>   if ((unsigned long )nc != (unsigned long )((struct net_conf *)0)) {
> #line 2732
>     err = net_conf_to_skb(skb, nc, exclude_sensitive != 0);
>   } else {
> 
>   }
> #line 2733
>   rcu_read_unlock___6();
> #line 2734
>   if (err != 0) {
> #line 2735
>     goto nla_put_failure;
>   } else {
> 
>   }
> #line 2737
>   nla = nla_nest_start(skb, 8);
> #line 2738
>   if ((unsigned long )nla == (unsigned long )((struct nlattr *)0)) {
> #line 2739
>     goto nla_put_failure;
>   } else {
> 
>   }
> #line 2740
>   tmp___9 = nla_put_u32(skb, 16385, (unsigned long )sib != (unsigned long )((struct sib_info  const  *)0) ? (unsigned int )sib->sib_reason : 1U);
> #line 2740
>   if (tmp___9 != 0) {
> #line 2753
>     goto nla_put_failure;
>   } else {
> #line 2740
>     tmp___10 = nla_put_u32(skb, 2, mdev->state.i);
> #line 2740
>     if (tmp___10 != 0) {
> #line 2753
>       goto nla_put_failure;
>     } else {
> #line 2740
>       tmp___11 = nla_put_u64(skb, 16388, mdev->ed_uuid);
> #line 2740
>       if (tmp___11 != 0) {
> #line 2753
>         goto nla_put_failure;
>       } else {
> #line 2740
>         tmp___12 = drbd_get_capacity(mdev->this_bdev);
> #line 2740
>         tmp___13 = nla_put_u64(skb, 16387, (u64 )tmp___12);
> #line 2740
>         if (tmp___13 != 0) {
> #line 2753
>           goto nla_put_failure;
>         } else {
> #line 2740
>           tmp___14 = nla_put_u64(skb, 15, (u64 )mdev->send_cnt);
> #line 2740
>           if (tmp___14 != 0) {
> #line 2753
>             goto nla_put_failure;
>           } else {
> #line 2740
>             tmp___15 = nla_put_u64(skb, 16, (u64 )mdev->recv_cnt);
> #line 2740
>             if (tmp___15 != 0) {
> #line 2753
>               goto nla_put_failure;
>             } else {
> #line 2740
>               tmp___16 = nla_put_u64(skb, 17, (u64 )mdev->read_cnt);
> #line 2740
>               if (tmp___16 != 0) {
> #line 2753
>                 goto nla_put_failure;
>               } else {
> #line 2740
>                 tmp___17 = nla_put_u64(skb, 18, (u64 )mdev->writ_cnt);
> #line 2740
>                 if (tmp___17 != 0) {
> #line 2753
>                   goto nla_put_failure;
>                 } else {
> #line 2740
>                   tmp___18 = nla_put_u64(skb, 19, (u64 )mdev->al_writ_cnt);
> #line 2740
>                   if (tmp___18 != 0) {
> #line 2753
>                     goto nla_put_failure;
>                   } else {
> #line 2740
>                     tmp___19 = nla_put_u64(skb, 20, (u64 )mdev->bm_writ_cnt);
> #line 2740
>                     if (tmp___19 != 0) {
> #line 2753
>                       goto nla_put_failure;
>                     } else {
> #line 2740
>                       tmp___20 = atomic_read((atomic_t const   *)(& mdev->ap_bio_cnt));
> #line 2740
>                       tmp___21 = nla_put_u32(skb, 21, (u32 )tmp___20);
> #line 2740
>                       if (tmp___21 != 0) {
> #line 2753
>                         goto nla_put_failure;
>                       } else {
> #line 2740
>                         tmp___22 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
> #line 2740
>                         tmp___23 = nla_put_u32(skb, 22, (u32 )tmp___22);
> #line 2740
>                         if (tmp___23 != 0) {
> #line 2753
>                           goto nla_put_failure;
>                         } else {
> #line 2740
>                           tmp___24 = atomic_read((atomic_t const   *)(& mdev->rs_pending_cnt));
> #line 2740
>                           tmp___25 = nla_put_u32(skb, 23, (u32 )tmp___24);
> #line 2740
>                           if (tmp___25 != 0) {
> #line 2753
>                             goto nla_put_failure;
>                           } else {
> 
>                           }
>                         }
>                       }
>                     }
>                   }
>                 }
>               }
>             }
>           }
>         }
>       }
>     }
>   }
> #line 2755
>   if (got_ldev != 0) {
> #line 2758
>     spin_lock_irq(& (mdev->ldev)->md.uuid_lock);
> #line 2759
>     err___0 = nla_put(skb, 16391, 32, (void const   *)(& (mdev->ldev)->md.uuid));
> #line 2760
>     spin_unlock_irq(& (mdev->ldev)->md.uuid_lock);
> #line 2762
>     if (err___0 != 0) {
> #line 2763
>       goto nla_put_failure;
>     } else {
> 
>     }
> #line 2765
>     tmp___26 = nla_put_u32(skb, 16392, (mdev->ldev)->md.flags);
> #line 2765
>     if (tmp___26 != 0) {
> #line 2768
>       goto nla_put_failure;
>     } else {
> #line 2765
>       tmp___27 = drbd_bm_bits(mdev);
> #line 2765
>       tmp___28 = nla_put_u64(skb, 16393, (u64 )tmp___27);
> #line 2765
>       if (tmp___28 != 0) {
> #line 2768
>         goto nla_put_failure;
>       } else {
> #line 2765
>         tmp___29 = drbd_bm_total_weight(mdev);
> #line 2765
>         tmp___30 = nla_put_u64(skb, 16394, (u64 )tmp___29);
> #line 2765
>         if (tmp___30 != 0) {
> #line 2768
>           goto nla_put_failure;
>         } else {
> 
>         }
>       }
>     }
> #line 2769
>     if ((int )mdev->state.ldv_49522.conn > 15 && (int )mdev->state.ldv_49522.conn <= 21) {
> #line 2771
>       tmp___31 = nla_put_u64(skb, 16395, (u64 )mdev->rs_total);
> #line 2771
>       if (tmp___31 != 0) {
> #line 2773
>         goto nla_put_failure;
>       } else {
> #line 2771
>         tmp___32 = nla_put_u64(skb, 16396, (u64 )mdev->rs_failed);
> #line 2771
>         if (tmp___32 != 0) {
> #line 2773
>           goto nla_put_failure;
>         } else {
> 
>         }
>       }
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 2777
>   if ((unsigned long )sib != (unsigned long )((struct sib_info  const  *)0)) {
> #line 2778
>     switch ((unsigned int )sib->sib_reason) {
>     case 5U: ;
>     case 1U: ;
> #line 2781
>     goto ldv_53822;
>     case 2U: 
> #line 2783
>     tmp___33 = nla_put_u32(skb, 16389, sib->ldv_50742.ldv_50741.os.i);
> #line 2783
>     if (tmp___33 != 0) {
> #line 2785
>       goto nla_put_failure;
>     } else {
> #line 2783
>       tmp___34 = nla_put_u32(skb, 16390, sib->ldv_50742.ldv_50741.ns.i);
> #line 2783
>       if (tmp___34 != 0) {
> #line 2785
>         goto nla_put_failure;
>       } else {
> 
>       }
>     }
> #line 2786
>     goto ldv_53822;
>     case 4U: 
> #line 2788
>     tmp___35 = nla_put_u32(skb, 16398, sib->ldv_50742.ldv_50737.helper_exit_code);
> #line 2788
>     if (tmp___35 != 0) {
> #line 2790
>       goto nla_put_failure;
>     } else {
> 
>     }
>     case 3U: 
> #line 2793
>     tmp___36 = nla_put_string(skb, 16397, (char const   *)sib->ldv_50742.ldv_50737.helper_name);
> #line 2793
>     if (tmp___36 != 0) {
> #line 2794
>       goto nla_put_failure;
>     } else {
> 
>     }
> #line 2795
>     goto ldv_53822;
>     }
>     ldv_53822: ;
>   } else {
> 
>   }
> #line 2798
>   nla_nest_end(skb, nla);
> #line 2800
>   if (0) {
>     nla_put_failure: 
> #line 2802
>     err = -90;
>   } else {
> 
>   }
> #line 2803
>   if (got_ldev != 0) {
> #line 2804
>     put_ldev(mdev);
>   } else {
> 
>   }
> #line 2805
>   return (err);
> }
> }
> #line 2808 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_get_status(struct sk_buff *skb , struct genl_info *info ) 
> { 
>   enum drbd_ret_code retcode ;
>   int err ;
>   int tmp ;
> 
>   {
> #line 2813
>   tmp = drbd_adm_prepare(skb, info, 1U);
> #line 2813
>   retcode = (enum drbd_ret_code )tmp;
> #line 2814
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 2815
>     return ((int )retcode);
>   } else {
> 
>   }
> #line 2816
>   if ((unsigned int )retcode != 101U) {
> #line 2817
>     goto out;
>   } else {
> 
>   }
> #line 2819
>   err = nla_put_status_info(adm_ctx.reply_skb, adm_ctx.mdev, 0);
> #line 2820
>   if (err != 0) {
> #line 2821
>     nlmsg_free(adm_ctx.reply_skb);
> #line 2822
>     return (err);
>   } else {
> 
>   }
>   out: 
> #line 2825
>   drbd_adm_finish(info, (int )retcode);
> #line 2826
>   return (0);
> }
> }
> #line 2829 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> int get_one_status(struct sk_buff *skb , struct netlink_callback *cb ) 
> { 
>   struct drbd_conf *mdev ;
>   struct drbd_genlmsghdr *dh ;
>   struct drbd_tconn *pos ;
>   struct drbd_tconn *tconn ;
>   struct drbd_tconn *tmp ;
>   unsigned int volume ;
>   struct list_head *__ptr ;
>   struct list_head  const  *__mptr ;
>   struct list_head *_________p1 ;
>   bool __warned ;
>   int tmp___0 ;
>   struct list_head *__ptr___0 ;
>   struct list_head  const  *__mptr___0 ;
>   struct list_head *_________p1___0 ;
>   bool __warned___0 ;
>   int tmp___1 ;
>   void *tmp___2 ;
>   struct list_head *__ptr___1 ;
>   struct list_head  const  *__mptr___1 ;
>   struct list_head *_________p1___1 ;
>   bool __warned___1 ;
>   int tmp___3 ;
>   void *tmp___4 ;
>   struct net_conf *nc ;
>   int tmp___5 ;
>   struct net_conf *_________p1___2 ;
>   bool __warned___2 ;
>   int tmp___6 ;
>   int tmp___7 ;
>   int tmp___8 ;
>   int tmp___9 ;
> 
>   {
> #line 2833
>   pos = (struct drbd_tconn *)cb->args[0];
> #line 2834
>   tconn = 0;
> #line 2836
>   volume = (unsigned int )cb->args[1];
> #line 2859
>   rcu_read_lock___6();
> #line 2861
>   __ptr = drbd_tconns.next;
> #line 2861
>   _________p1 = *((struct list_head * volatile  *)(& __ptr));
> #line 2861
>   tmp___0 = debug_lockdep_rcu_enabled();
> #line 2861
>   if (tmp___0 != 0 && ! __warned) {
> #line 2861
>     rcu_read_lock_held();
>   } else {
> 
>   }
> #line 2861
>   __mptr = (struct list_head  const  *)_________p1;
> #line 2861
>   tmp = (struct drbd_tconn *)__mptr + 0xfffffffffffffff8UL;
> #line 2861
>   goto ldv_53859;
>   ldv_53858: ;
> #line 2862
>   if ((unsigned long )pos == (unsigned long )((struct drbd_tconn *)0)) {
> #line 2864
>     pos = tmp;
> #line 2865
>     tconn = pos;
> #line 2866
>     goto ldv_53857;
>   } else {
> 
>   }
> #line 2868
>   if ((unsigned long )tmp == (unsigned long )pos) {
> #line 2869
>     tconn = pos;
> #line 2870
>     goto ldv_53857;
>   } else {
> 
>   }
> #line 2861
>   __ptr___0 = tmp->all_tconn.next;
> #line 2861
>   _________p1___0 = *((struct list_head * volatile  *)(& __ptr___0));
> #line 2861
>   tmp___1 = debug_lockdep_rcu_enabled();
> #line 2861
>   if (tmp___1 != 0 && ! __warned___0) {
> #line 2861
>     rcu_read_lock_held();
>   } else {
> 
>   }
> #line 2861
>   __mptr___0 = (struct list_head  const  *)_________p1___0;
> #line 2861
>   tmp = (struct drbd_tconn *)__mptr___0 + 0xfffffffffffffff8UL;
>   ldv_53859: ;
> #line 2861
>   if ((unsigned long )(& tmp->all_tconn) != (unsigned long )(& drbd_tconns)) {
> #line 2862
>     goto ldv_53858;
>   } else {
> 
>   }
>   ldv_53857: ;
> #line 2873
>   if ((unsigned long )tconn != (unsigned long )((struct drbd_tconn *)0)) {
>     next_tconn: 
> #line 2875
>     tmp___2 = idr_get_next(& tconn->volumes, (int *)(& volume));
> #line 2875
>     mdev = (struct drbd_conf *)tmp___2;
> #line 2876
>     if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
> #line 2879
>       __ptr___1 = tconn->all_tconn.next;
> #line 2879
>       _________p1___1 = *((struct list_head * volatile  *)(& __ptr___1));
> #line 2879
>       tmp___3 = debug_lockdep_rcu_enabled();
> #line 2879
>       if (tmp___3 != 0 && ! __warned___1) {
> #line 2879
>         rcu_read_lock_held();
>       } else {
> 
>       }
> #line 2879
>       __mptr___1 = (struct list_head  const  *)_________p1___1;
> #line 2879
>       pos = (struct drbd_tconn *)__mptr___1 + 0xfffffffffffffff8UL;
> #line 2882
>       if (volume != 0U) {
> #line 2886
>         if ((unsigned long )(& pos->all_tconn) == (unsigned long )(& drbd_tconns) || cb->args[2] != 0L) {
> #line 2887
>           goto out;
>         } else {
> 
>         }
> #line 2888
>         volume = 0U;
> #line 2889
>         tconn = pos;
> #line 2890
>         goto next_tconn;
>       } else {
> 
>       }
>     } else {
> 
>     }
> #line 2894
>     tmp___4 = genlmsg_put(skb, ((struct netlink_skb_parms *)(& (cb->skb)->cb))->portid,
>                           (cb->nlh)->nlmsg_seq, & drbd_genl_family, 2, 2);
> #line 2894
>     dh = (struct drbd_genlmsghdr *)tmp___4;
> #line 2897
>     if ((unsigned long )dh == (unsigned long )((struct drbd_genlmsghdr *)0)) {
> #line 2898
>       goto out;
>     } else {
> 
>     }
> #line 2900
>     if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
> #line 2905
>       dh->minor = 4294967295U;
> #line 2906
>       dh->ldv_49826.ret_code = 101;
> #line 2907
>       tmp___5 = nla_put_drbd_cfg_context(skb, tconn, 4294967295U);
> #line 2907
>       if (tmp___5 != 0) {
> #line 2908
>         goto cancel;
>       } else {
> 
>       }
> #line 2909
>       _________p1___2 = *((struct net_conf * volatile  *)(& tconn->net_conf));
> #line 2909
>       tmp___6 = debug_lockdep_rcu_enabled();
> #line 2909
>       if (tmp___6 != 0 && ! __warned___2) {
> #line 2909
>         tmp___7 = rcu_read_lock_held();
> #line 2909
>         if (tmp___7 == 0 && 1) {
> #line 2909
>           __warned___2 = 1;
> #line 2909
>           lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared",
>                                  2909, "suspicious rcu_dereference_check() usage");
>         } else {
> 
>         }
>       } else {
> 
>       }
> #line 2909
>       nc = _________p1___2;
> #line 2910
>       if ((unsigned long )nc != (unsigned long )((struct net_conf *)0)) {
> #line 2910
>         tmp___8 = net_conf_to_skb(skb, nc, 1);
> #line 2910
>         if (tmp___8 != 0) {
> #line 2911
>           goto cancel;
>         } else {
> 
>         }
>       } else {
> 
>       }
> #line 2912
>       goto done;
>     } else {
> 
>     }
> #line 2915
>     if ((unsigned int )mdev->vnr != volume) {
> #line 2915
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mdev->vnr == volume ) in %s:%d\n",
>               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared",
>               2915);
>     } else {
> 
>     }
> #line 2916
>     if ((unsigned long )mdev->tconn != (unsigned long )tconn) {
> #line 2916
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mdev->tconn == tconn ) in %s:%d\n",
>               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared",
>               2916);
>     } else {
> 
>     }
> #line 2918
>     dh->minor = mdev_to_minor(mdev);
> #line 2919
>     dh->ldv_49826.ret_code = 101;
> #line 2921
>     tmp___9 = nla_put_status_info(skb, mdev, 0);
> #line 2921
>     if (tmp___9 != 0) {
>       cancel: 
> #line 2923
>       genlmsg_cancel(skb, (void *)dh);
> #line 2924
>       goto out;
>     } else {
> 
>     }
>     done: 
> #line 2927
>     genlmsg_end(skb, (void *)dh);
>   } else {
> 
>   }
>   out: 
> #line 2931
>   rcu_read_unlock___6();
> #line 2933
>   cb->args[0] = (long )pos;
> #line 2934
>   cb->args[1] = (unsigned long )pos == (unsigned long )tconn ? (long )(volume + 1U) : 0L;
> #line 2938
>   return ((int )skb->len);
> }
> }
> #line 2951 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_get_status_all(struct sk_buff *skb , struct netlink_callback *cb ) 
> { 
>   unsigned int hdrlen ;
>   struct nlattr *nla ;
>   char const   *resource_name ;
>   struct drbd_tconn *tconn ;
>   int maxtype ;
>   int tmp ;
>   struct nlattr *tmp___0 ;
>   long tmp___1 ;
>   long tmp___2 ;
>   void *tmp___3 ;
>   int tmp___4 ;
> 
>   {
> #line 2953
>   hdrlen = 12U;
> #line 2960
>   if (cb->args[0] != 0L) {
> #line 2963
>     if (cb->args[2] != 0L && cb->args[2] != cb->args[0]) {
> #line 2964
>       return (0);
>     } else {
> 
>     }
> #line 2965
>     goto dump;
>   } else {
> 
>   }
> #line 2970
>   tmp = nlmsg_attrlen(cb->nlh, (int )hdrlen);
> #line 2970
>   tmp___0 = nlmsg_attrdata(cb->nlh, (int )hdrlen);
> #line 2970
>   nla = nla_find((struct nlattr  const  *)tmp___0, tmp, 2);
> #line 2975
>   if ((unsigned long )nla == (unsigned long )((struct nlattr *)0)) {
> #line 2976
>     goto dump;
>   } else {
> 
>   }
> #line 2977
>   maxtype = 4;
> #line 2978
>   nla = drbd_nla_find_nested(maxtype, nla, 2);
> #line 2979
>   tmp___2 = IS_ERR((void const   *)nla);
> #line 2979
>   if (tmp___2 != 0L) {
> #line 2980
>     tmp___1 = PTR_ERR((void const   *)nla);
> #line 2980
>     return ((int )tmp___1);
>   } else {
> 
>   }
> #line 2982
>   if ((unsigned long )nla == (unsigned long )((struct nlattr *)0)) {
> #line 2983
>     return (-22);
>   } else {
> 
>   }
> #line 2984
>   tmp___3 = nla_data((struct nlattr  const  *)nla);
> #line 2984
>   resource_name = (char const   *)tmp___3;
> #line 2985
>   tconn = conn_get_by_name(resource_name);
> #line 2987
>   if ((unsigned long )tconn == (unsigned long )((struct drbd_tconn *)0)) {
> #line 2988
>     return (-19);
>   } else {
> 
>   }
> #line 2990
>   kref_put(& tconn->kref, & conn_destroy);
> #line 2994
>   cb->args[0] = (long )tconn;
> #line 2996
>   cb->args[2] = (long )tconn;
>   dump: 
> #line 2999
>   tmp___4 = get_one_status(skb, cb);
> #line 2999
>   return (tmp___4);
> }
> }
> #line 3002 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_get_timeout_type(struct sk_buff *skb , struct genl_info *info ) 
> { 
>   enum drbd_ret_code retcode ;
>   struct timeout_parms tp ;
>   int err ;
>   int tmp ;
>   int tmp___0 ;
> 
>   {
> #line 3008
>   tmp = drbd_adm_prepare(skb, info, 1U);
> #line 3008
>   retcode = (enum drbd_ret_code )tmp;
> #line 3009
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 3010
>     return ((int )retcode);
>   } else {
> 
>   }
> #line 3011
>   if ((unsigned int )retcode != 101U) {
> #line 3012
>     goto out;
>   } else {
> 
>   }
> #line 3014
>   if (*((unsigned int *)adm_ctx.mdev + 187UL) != 40960U) {
> #line 3014
>     tmp___0 = constant_test_bit(2U, (unsigned long const volatile   *)(& (adm_ctx.mdev)->flags));
> #line 3014
>     tp.timeout_type = tmp___0 != 0;
>   } else {
> #line 3014
>     tp.timeout_type = 2U;
>   }
> #line 3019
>   err = timeout_parms_to_priv_skb(adm_ctx.reply_skb, & tp);
> #line 3020
>   if (err != 0) {
> #line 3021
>     nlmsg_free(adm_ctx.reply_skb);
> #line 3022
>     return (err);
>   } else {
> 
>   }
>   out: 
> #line 3025
>   drbd_adm_finish(info, (int )retcode);
> #line 3026
>   return (0);
> }
> }
> #line 3029 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_start_ov(struct sk_buff *skb , struct genl_info *info ) 
> { 
>   struct drbd_conf *mdev ;
>   enum drbd_ret_code retcode ;
>   struct start_ov_parms parms ;
>   int tmp ;
>   int err ;
>   int tmp___0 ;
>   char const   *tmp___1 ;
>   int tmp___2 ;
>   wait_queue_t __wait ;
>   struct task_struct *tmp___3 ;
>   int tmp___4 ;
>   union drbd_state val ;
>   union drbd_state mask ;
>   int tmp___5 ;
> 
>   {
> #line 3035
>   tmp = drbd_adm_prepare(skb, info, 1U);
> #line 3035
>   retcode = (enum drbd_ret_code )tmp;
> #line 3036
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 3037
>     return ((int )retcode);
>   } else {
> 
>   }
> #line 3038
>   if ((unsigned int )retcode != 101U) {
> #line 3039
>     goto out;
>   } else {
> 
>   }
> #line 3041
>   mdev = adm_ctx.mdev;
> #line 3044
>   parms.ov_start_sector = (__u64 )mdev->ov_start_sector;
> #line 3045
>   parms.ov_stop_sector = 0xffffffffffffffffULL;
> #line 3046
>   if ((unsigned long )*(info->attrs + 9UL) != (unsigned long )((struct nlattr *)0)) {
> #line 3047
>     tmp___0 = start_ov_parms_from_attrs(& parms, info);
> #line 3047
>     err = tmp___0;
> #line 3048
>     if (err != 0) {
> #line 3049
>       retcode = ERR_MANDATORY_TAG;
> #line 3050
>       tmp___1 = from_attrs_err_to_txt(err);
> #line 3050
>       drbd_msg_put_info(tmp___1);
> #line 3051
>       goto out;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 3055
>   mdev->ov_start_sector = (sector_t )parms.ov_start_sector & 0xfffffffffffffff8UL;
> #line 3056
>   mdev->ov_stop_sector = (sector_t )parms.ov_stop_sector;
> #line 3060
>   drbd_suspend_io(mdev);
> #line 3061
>   tmp___2 = constant_test_bit(9U, (unsigned long const volatile   *)(& mdev->flags));
> #line 3061
>   if (tmp___2 == 0) {
> #line 3061
>     goto ldv_53904;
>   } else {
> 
>   }
> #line 3061
>   tmp___3 = get_current();
> #line 3061
>   __wait.flags = 0U;
> #line 3061
>   __wait.private = (void *)tmp___3;
> #line 3061
>   __wait.func = & autoremove_wake_function;
> #line 3061
>   __wait.task_list.next = & __wait.task_list;
> #line 3061
>   __wait.task_list.prev = & __wait.task_list;
>   ldv_53907: 
> #line 3061
>   prepare_to_wait(& mdev->misc_wait, & __wait, 2);
> #line 3061
>   tmp___4 = constant_test_bit(9U, (unsigned long const volatile   *)(& mdev->flags));
> #line 3061
>   if (tmp___4 == 0) {
> #line 3061
>     goto ldv_53906;
>   } else {
> 
>   }
> #line 3061
>   schedule();
> #line 3061
>   goto ldv_53907;
>   ldv_53906: 
> #line 3061
>   finish_wait(& mdev->misc_wait, & __wait);
>   ldv_53904: 
> #line 3062
>   val.i = 0U;
> #line 3062
>   val.ldv_40024.conn = 18U;
> #line 3062
>   mask.i = 0U;
> #line 3062
>   mask.ldv_40024.conn = 31U;
> #line 3062
>   tmp___5 = drbd_request_state(mdev, mask, val);
> #line 3062
>   retcode = (enum drbd_ret_code )tmp___5;
> #line 3063
>   drbd_resume_io(mdev);
>   out: 
> #line 3065
>   drbd_adm_finish(info, (int )retcode);
> #line 3066
>   return (0);
> }
> }
> #line 3070 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_new_c_uuid(struct sk_buff *skb , struct genl_info *info ) 
> { 
>   struct drbd_conf *mdev ;
>   enum drbd_ret_code retcode ;
>   int skip_initial_sync ;
>   int err ;
>   struct new_c_uuid_parms args ;
>   int tmp ;
>   char const   *tmp___0 ;
>   int tmp___1 ;
>   union drbd_state __ns ;
> 
>   {
> #line 3074
>   skip_initial_sync = 0;
> #line 3078
>   tmp = drbd_adm_prepare(skb, info, 1U);
> #line 3078
>   retcode = (enum drbd_ret_code )tmp;
> #line 3079
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 3080
>     return ((int )retcode);
>   } else {
> 
>   }
> #line 3081
>   if ((unsigned int )retcode != 101U) {
> #line 3082
>     goto out_nolock;
>   } else {
> 
>   }
> #line 3084
>   mdev = adm_ctx.mdev;
> #line 3085
>   memset((void *)(& args), 0, 1UL);
> #line 3086
>   if ((unsigned long )*(info->attrs + 10UL) != (unsigned long )((struct nlattr *)0)) {
> #line 3087
>     err = new_c_uuid_parms_from_attrs(& args, info);
> #line 3088
>     if (err != 0) {
> #line 3089
>       retcode = ERR_MANDATORY_TAG;
> #line 3090
>       tmp___0 = from_attrs_err_to_txt(err);
> #line 3090
>       drbd_msg_put_info(tmp___0);
> #line 3091
>       goto out_nolock;
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 3095
>   ldv_mutex_lock_304(mdev->state_mutex);
> #line 3097
>   tmp___1 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 3097
>   if (tmp___1 == 0) {
> #line 3098
>     retcode = ERR_NO_DISK;
> #line 3099
>     goto out;
>   } else {
> 
>   }
> #line 3103
>   if ((((unsigned int )*((unsigned short *)mdev + 374UL) == 160U && (mdev->tconn)->agreed_pro_version > 89) && (mdev->ldev)->md.uuid[0] == 4ULL) && (int )((signed char )args.clear_bm) != 0) {
> #line 3105
>     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Preparing to skip initial sync\n");
> #line 3106
>     skip_initial_sync = 1;
>   } else
> #line 3107
>   if ((unsigned int )*((unsigned short *)mdev + 374UL) != 0U) {
> #line 3108
>     retcode = ERR_CONNECTED;
> #line 3109
>     goto out_dec;
>   } else {
> 
>   }
> #line 3112
>   drbd_uuid_set(mdev, 1, 0ULL);
> #line 3113
>   drbd_uuid_new_current(mdev);
> #line 3115
>   if ((int )((signed char )args.clear_bm) != 0) {
> #line 3116
>     err = drbd_bitmap_io(mdev, & drbd_bmio_clear_n_write, (char *)"clear_n_write from new_c_uuid",
>                          BM_LOCKED_MASK);
> #line 3118
>     if (err != 0) {
> #line 3119
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Writing bitmap failed with %d\n",
>               err);
> #line 3120
>       retcode = ERR_IO_MD_DISK;
>     } else {
> 
>     }
> #line 3122
>     if (skip_initial_sync != 0) {
> #line 3123
>       drbd_send_uuids_skip_initial_sync(mdev);
> #line 3124
>       _drbd_uuid_set(mdev, 1, 0ULL);
> #line 3125
>       drbd_print_uuids(mdev, "cleared bitmap UUID");
> #line 3126
>       spin_lock_irq(& (mdev->tconn)->req_lock);
> #line 3127
>       __ns = drbd_read_state(mdev);
> #line 3127
>       __ns.ldv_40024.disk = 8U;
> #line 3127
>       __ns.ldv_40024.pdsk = 8U;
> #line 3127
>       _drbd_set_state(mdev, __ns, CS_VERBOSE, 0);
> #line 3129
>       spin_unlock_irq(& (mdev->tconn)->req_lock);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 3133
>   drbd_md_sync(mdev);
>   out_dec: 
> #line 3135
>   put_ldev(mdev);
>   out: 
> #line 3137
>   ldv_mutex_unlock_305(mdev->state_mutex);
>   out_nolock: 
> #line 3139
>   drbd_adm_finish(info, (int )retcode);
> #line 3140
>   return (0);
> }
> }
> #line 3144 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> static enum drbd_ret_code drbd_check_resource_name(char const   *name ) 
> { 
>   char *tmp ;
> 
>   {
> #line 3146
>   if ((unsigned long )name == (unsigned long )((char const   *)0) || (int )((signed char )*name) == 0) {
> #line 3147
>     drbd_msg_put_info("resource name missing");
> #line 3148
>     return (ERR_MANDATORY_TAG);
>   } else {
> 
>   }
> #line 3152
>   tmp = strchr(name, 47);
> #line 3152
>   if ((unsigned long )tmp != (unsigned long )((char *)0)) {
> #line 3153
>     drbd_msg_put_info("invalid resource name");
> #line 3154
>     return (ERR_INVALID_REQUEST);
>   } else {
> 
>   }
> #line 3156
>   return (NO_ERROR);
> }
> }
> #line 3159 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_new_resource(struct sk_buff *skb , struct genl_info *info ) 
> { 
>   enum drbd_ret_code retcode ;
>   struct res_opts res_opts ;
>   int err ;
>   int tmp ;
>   char const   *tmp___0 ;
>   struct drbd_tconn *tmp___1 ;
> 
>   {
> #line 3165
>   tmp = drbd_adm_prepare(skb, info, 0U);
> #line 3165
>   retcode = (enum drbd_ret_code )tmp;
> #line 3166
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 3167
>     return ((int )retcode);
>   } else {
> 
>   }
> #line 3168
>   if ((unsigned int )retcode != 101U) {
> #line 3169
>     goto out;
>   } else {
> 
>   }
> #line 3171
>   set_res_opts_defaults(& res_opts);
> #line 3172
>   err = res_opts_from_attrs(& res_opts, info);
> #line 3173
>   if (err != 0 && err != -42) {
> #line 3174
>     retcode = ERR_MANDATORY_TAG;
> #line 3175
>     tmp___0 = from_attrs_err_to_txt(err);
> #line 3175
>     drbd_msg_put_info(tmp___0);
> #line 3176
>     goto out;
>   } else {
> 
>   }
> #line 3179
>   retcode = drbd_check_resource_name((char const   *)adm_ctx.resource_name);
> #line 3180
>   if ((unsigned int )retcode != 101U) {
> #line 3181
>     goto out;
>   } else {
> 
>   }
> #line 3183
>   if ((unsigned long )adm_ctx.tconn != (unsigned long )((struct drbd_tconn *)0)) {
> #line 3184
>     if (((int )(info->nlhdr)->nlmsg_flags & 512) != 0) {
> #line 3185
>       retcode = ERR_INVALID_REQUEST;
> #line 3186
>       drbd_msg_put_info("resource exists");
>     } else {
> 
>     }
> #line 3189
>     goto out;
>   } else {
> 
>   }
> #line 3192
>   tmp___1 = conn_create((char const   *)adm_ctx.resource_name, & res_opts);
> #line 3192
>   if ((unsigned long )tmp___1 == (unsigned long )((struct drbd_tconn *)0)) {
> #line 3193
>     retcode = ERR_NOMEM;
>   } else {
> 
>   }
>   out: 
> #line 3195
>   drbd_adm_finish(info, (int )retcode);
> #line 3196
>   return (0);
> }
> }
> #line 3199 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_add_minor(struct sk_buff *skb , struct genl_info *info ) 
> { 
>   struct drbd_genlmsghdr *dh ;
>   enum drbd_ret_code retcode ;
>   int tmp ;
> 
>   {
> #line 3201
>   dh = (struct drbd_genlmsghdr *)info->userhdr;
> #line 3204
>   tmp = drbd_adm_prepare(skb, info, 2U);
> #line 3204
>   retcode = (enum drbd_ret_code )tmp;
> #line 3205
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 3206
>     return ((int )retcode);
>   } else {
> 
>   }
> #line 3207
>   if ((unsigned int )retcode != 101U) {
> #line 3208
>     goto out;
>   } else {
> 
>   }
> #line 3210
>   if (dh->minor > 1048575U) {
> #line 3211
>     drbd_msg_put_info("requested minor out of range");
> #line 3212
>     retcode = ERR_INVALID_REQUEST;
> #line 3213
>     goto out;
>   } else {
> 
>   }
> #line 3215
>   if (adm_ctx.volume > 65535U) {
> #line 3216
>     drbd_msg_put_info("requested volume id out of range");
> #line 3217
>     retcode = ERR_INVALID_REQUEST;
> #line 3218
>     goto out;
>   } else {
> 
>   }
> #line 3223
>   if ((unsigned long )adm_ctx.mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 3224
>     if (((int )(info->nlhdr)->nlmsg_flags & 512) != 0) {
> #line 3225
>       retcode = ERR_MINOR_EXISTS;
>     } else {
> 
>     }
> #line 3227
>     goto out;
>   } else {
> 
>   }
> #line 3230
>   retcode = conn_new_minor(adm_ctx.tconn, dh->minor, (int )adm_ctx.volume);
>   out: 
> #line 3232
>   drbd_adm_finish(info, (int )retcode);
> #line 3233
>   return (0);
> }
> }
> #line 3236 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> static enum drbd_ret_code adm_delete_minor(struct drbd_conf *mdev ) 
> { 
>   union drbd_state val ;
>   union drbd_state mask ;
>   unsigned int tmp ;
> 
>   {
> #line 3238
>   if ((unsigned int )*((unsigned char *)mdev + 749UL) == 0U && (unsigned int )*((unsigned char *)mdev + 748UL) == 2U) {
> #line 3243
>     val.i = 0U;
> #line 3243
>     val.ldv_40024.conn = 9U;
> #line 3243
>     mask.i = 0U;
> #line 3243
>     mask.ldv_40024.conn = 31U;
> #line 3243
>     _drbd_request_state(mdev, mask, val, 6);
> #line 3245
>     idr_remove(& (mdev->tconn)->volumes, mdev->vnr);
> #line 3246
>     tmp = mdev_to_minor(mdev);
> #line 3246
>     idr_remove(& minors, (int )tmp);
> #line 3247
>     del_gendisk(mdev->vdisk);
> #line 3248
>     synchronize_rcu();
> #line 3249
>     kref_put(& mdev->kref, & drbd_minor_destroy);
> #line 3250
>     return (NO_ERROR);
>   } else {
> #line 3252
>     return (ERR_MINOR_CONFIGURED);
>   }
> }
> }
> #line 3255 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_delete_minor(struct sk_buff *skb , struct genl_info *info ) 
> { 
>   enum drbd_ret_code retcode ;
>   int tmp ;
> 
>   {
> #line 3259
>   tmp = drbd_adm_prepare(skb, info, 1U);
> #line 3259
>   retcode = (enum drbd_ret_code )tmp;
> #line 3260
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 3261
>     return ((int )retcode);
>   } else {
> 
>   }
> #line 3262
>   if ((unsigned int )retcode != 101U) {
> #line 3263
>     goto out;
>   } else {
> 
>   }
> #line 3265
>   retcode = adm_delete_minor(adm_ctx.mdev);
>   out: 
> #line 3267
>   drbd_adm_finish(info, (int )retcode);
> #line 3268
>   return (0);
> }
> }
> #line 3271 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_down(struct sk_buff *skb , struct genl_info *info ) 
> { 
>   int retcode ;
>   struct drbd_conf *mdev ;
>   unsigned int i ;
>   void *tmp ;
>   enum drbd_state_rv tmp___0 ;
>   void *tmp___1 ;
>   enum drbd_state_rv tmp___2 ;
>   void *tmp___3 ;
>   void *tmp___4 ;
>   void *tmp___5 ;
>   enum drbd_ret_code tmp___6 ;
>   void *tmp___7 ;
>   int tmp___8 ;
> 
>   {
> #line 3277
>   retcode = drbd_adm_prepare(skb, info, 0U);
> #line 3278
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 3279
>     return (retcode);
>   } else {
> 
>   }
> #line 3280
>   if (retcode != 101) {
> #line 3281
>     goto out;
>   } else {
> 
>   }
> #line 3283
>   if ((unsigned long )adm_ctx.tconn == (unsigned long )((struct drbd_tconn *)0)) {
> #line 3284
>     retcode = 158;
> #line 3285
>     goto out;
>   } else {
> 
>   }
> #line 3289
>   i = 0U;
> #line 3289
>   tmp = idr_get_next(& (adm_ctx.tconn)->volumes, (int *)(& i));
> #line 3289
>   mdev = (struct drbd_conf *)tmp;
> #line 3289
>   goto ldv_53966;
>   ldv_53965: 
> #line 3290
>   tmp___0 = drbd_set_role(mdev, R_SECONDARY, 0);
> #line 3290
>   retcode = (int )tmp___0;
> #line 3291
>   if (retcode <= 0) {
> #line 3292
>     drbd_msg_put_info("failed to demote");
> #line 3293
>     goto out;
>   } else {
> 
>   }
> #line 3289
>   i = i + 1U;
> #line 3289
>   tmp___1 = idr_get_next(& (adm_ctx.tconn)->volumes, (int *)(& i));
> #line 3289
>   mdev = (struct drbd_conf *)tmp___1;
>   ldv_53966: ;
> #line 3289
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 3290
>     goto ldv_53965;
>   } else {
> 
>   }
> #line 3297
>   tmp___2 = conn_try_disconnect(adm_ctx.tconn, 0);
> #line 3297
>   retcode = (int )tmp___2;
> #line 3298
>   if (retcode <= 0) {
> #line 3299
>     drbd_msg_put_info("failed to disconnect");
> #line 3300
>     goto out;
>   } else {
> 
>   }
> #line 3304
>   i = 0U;
> #line 3304
>   tmp___3 = idr_get_next(& (adm_ctx.tconn)->volumes, (int *)(& i));
> #line 3304
>   mdev = (struct drbd_conf *)tmp___3;
> #line 3304
>   goto ldv_53969;
>   ldv_53968: 
> #line 3305
>   retcode = adm_detach(mdev, 0);
> #line 3306
>   if (retcode <= 0 || retcode > 101) {
> #line 3307
>     drbd_msg_put_info("failed to detach");
> #line 3308
>     goto out;
>   } else {
> 
>   }
> #line 3304
>   i = i + 1U;
> #line 3304
>   tmp___4 = idr_get_next(& (adm_ctx.tconn)->volumes, (int *)(& i));
> #line 3304
>   mdev = (struct drbd_conf *)tmp___4;
>   ldv_53969: ;
> #line 3304
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 3305
>     goto ldv_53968;
>   } else {
> 
>   }
> #line 3315
>   drbd_thread_stop(& (adm_ctx.tconn)->worker);
> #line 3320
>   i = 0U;
> #line 3320
>   tmp___5 = idr_get_next(& (adm_ctx.tconn)->volumes, (int *)(& i));
> #line 3320
>   mdev = (struct drbd_conf *)tmp___5;
> #line 3320
>   goto ldv_53972;
>   ldv_53971: 
> #line 3321
>   tmp___6 = adm_delete_minor(mdev);
> #line 3321
>   retcode = (int )tmp___6;
> #line 3322
>   if (retcode != 101) {
> #line 3324
>     drbd_msg_put_info("failed to delete volume");
> #line 3325
>     goto out;
>   } else {
> 
>   }
> #line 3320
>   i = i + 1U;
> #line 3320
>   tmp___7 = idr_get_next(& (adm_ctx.tconn)->volumes, (int *)(& i));
> #line 3320
>   mdev = (struct drbd_conf *)tmp___7;
>   ldv_53972: ;
> #line 3320
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 3321
>     goto ldv_53971;
>   } else {
> 
>   }
> #line 3330
>   tmp___8 = conn_lowest_minor(adm_ctx.tconn);
> #line 3330
>   if (tmp___8 < 0) {
> #line 3331
>     list_del_rcu(& (adm_ctx.tconn)->all_tconn);
> #line 3332
>     synchronize_rcu();
> #line 3333
>     kref_put(& (adm_ctx.tconn)->kref, & conn_destroy);
> #line 3335
>     retcode = 101;
>   } else {
> #line 3338
>     retcode = 159;
> #line 3339
>     drbd_msg_put_info("failed to delete connection");
>   }
> #line 3341
>   goto out;
>   out: 
> #line 3343
>   drbd_adm_finish(info, retcode);
> #line 3344
>   return (0);
> }
> }
> #line 3347 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> int drbd_adm_del_resource(struct sk_buff *skb , struct genl_info *info ) 
> { 
>   enum drbd_ret_code retcode ;
>   int tmp ;
>   int tmp___0 ;
> 
>   {
> #line 3351
>   tmp = drbd_adm_prepare(skb, info, 2U);
> #line 3351
>   retcode = (enum drbd_ret_code )tmp;
> #line 3352
>   if ((unsigned long )adm_ctx.reply_skb == (unsigned long )((struct sk_buff *)0)) {
> #line 3353
>     return ((int )retcode);
>   } else {
> 
>   }
> #line 3354
>   if ((unsigned int )retcode != 101U) {
> #line 3355
>     goto out;
>   } else {
> 
>   }
> #line 3357
>   tmp___0 = conn_lowest_minor(adm_ctx.tconn);
> #line 3357
>   if (tmp___0 < 0) {
> #line 3358
>     list_del_rcu(& (adm_ctx.tconn)->all_tconn);
> #line 3359
>     synchronize_rcu();
> #line 3360
>     kref_put(& (adm_ctx.tconn)->kref, & conn_destroy);
> #line 3362
>     retcode = NO_ERROR;
>   } else {
> #line 3364
>     retcode = ERR_RES_IN_USE;
>   }
> #line 3367
>   if ((unsigned int )retcode == 101U) {
> #line 3368
>     drbd_thread_stop(& (adm_ctx.tconn)->worker);
>   } else {
> 
>   }
>   out: 
> #line 3370
>   drbd_adm_finish(info, (int )retcode);
> #line 3371
>   return (0);
> }
> }
> #line 3374 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> void drbd_bcast_event(struct drbd_conf *mdev , struct sib_info  const  *sib ) 
> { 
>   atomic_t drbd_genl_seq ;
>   struct sk_buff *msg ;
>   struct drbd_genlmsghdr *d_out ;
>   unsigned int seq ;
>   int err ;
>   int tmp ;
>   void *tmp___0 ;
>   int tmp___1 ;
> 
>   {
> #line 3376
>   drbd_genl_seq.counter = 2;
> #line 3380
>   err = -12;
> #line 3383
>   if ((unsigned int )sib->sib_reason == 5U && ((1 != 0 && 1 != 0) && (long )(mdev->rs_last_bcast + 250UL) - (long )jiffies < 0L)) {
> #line 3384
>     mdev->rs_last_bcast = jiffies;
>   } else {
> #line 3386
>     return;
>   }
> #line 3388
>   tmp = atomic_add_return(1, & drbd_genl_seq);
> #line 3388
>   seq = (unsigned int )tmp;
> #line 3389
>   msg = genlmsg_new(3776UL, 16U);
> #line 3390
>   if ((unsigned long )msg == (unsigned long )((struct sk_buff *)0)) {
> #line 3391
>     goto failed;
>   } else {
> 
>   }
> #line 3393
>   err = -90;
> #line 3394
>   tmp___0 = genlmsg_put(msg, 0U, seq, & drbd_genl_family, 0, 1);
> #line 3394
>   d_out = (struct drbd_genlmsghdr *)tmp___0;
> #line 3395
>   if ((unsigned long )d_out == (unsigned long )((struct drbd_genlmsghdr *)0)) {
> #line 3396
>     goto nla_put_failure;
>   } else {
> 
>   }
> #line 3397
>   d_out->minor = mdev_to_minor(mdev);
> #line 3398
>   d_out->ldv_49826.ret_code = 101;
> #line 3400
>   tmp___1 = nla_put_status_info(msg, mdev, sib);
> #line 3400
>   if (tmp___1 != 0) {
> #line 3401
>     goto nla_put_failure;
>   } else {
> 
>   }
> #line 3402
>   genlmsg_end(msg, (void *)d_out);
> #line 3403
>   err = drbd_genl_multicast_events(msg, 0U);
> #line 3405
>   if (err != 0 && err != -3) {
> #line 3406
>     goto failed;
>   } else {
> 
>   }
> #line 3408
>   return;
>   nla_put_failure: 
> #line 3411
>   nlmsg_free(msg);
>   failed: 
> #line 3413
>   dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Error %d while broadcasting event. Event seq:%u sib_reason:%u\n",
>           err, seq, (unsigned int )sib->sib_reason);
> #line 3416
>   return;
> }
> }
> #line 3418 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> void ldv_mutex_lock_275(struct mutex *ldv_func_arg1 ) 
> { 
> 
> 
>   {
> #line 3423
>   ldv_mutex_lock_lock(ldv_func_arg1);
> #line 3425
>   mutex_lock(ldv_func_arg1);
> #line 3426
>   return;
> }
> }
> #line 3428 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> void ldv_mutex_unlock_276(struct mutex *ldv_func_arg1 ) 
> { 
> 
> 
>   {
> #line 3433
>   ldv_mutex_unlock_lock(ldv_func_arg1);
> #line 3435
>   mutex_unlock(ldv_func_arg1);
> #line 3436
>   return;
> }
> }
> #line 3438 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> void ldv_mutex_lock_277(struct mutex *ldv_func_arg1 ) 
> { 
> 
> 
>   {
> #line 3443
>   ldv_mutex_lock_mutex_of_device(ldv_func_arg1);
> #line 3445
>   mutex_lock(ldv_func_arg1);
> #line 3446
>   return;
> }
> }
> #line 3448 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> int ldv_mutex_trylock_278(struct mutex *ldv_func_arg1 ) 
> { 
>   ldv_func_ret_type___2 ldv_func_res ;
>   int tmp ;
>   int tmp___0 ;
> 
>   {
> #line 3453
>   tmp = mutex_trylock(ldv_func_arg1);
> #line 3453
>   ldv_func_res = tmp;
> #line 3455
>   tmp___0 = ldv_mutex_trylock_mutex_of_device(ldv_func_arg1);
> #line 3455
>   return (tmp___0);
> #line 3457
>   return (ldv_func_res);
> }
> }
> #line 3460 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> void ldv_mutex_unlock_279(struct mutex *ldv_func_arg1 ) 
> { 
> 
> 
>   {
> #line 3465
>   ldv_mutex_unlock_mutex_of_device(ldv_func_arg1);
> #line 3467
>   mutex_unlock(ldv_func_arg1);
> #line 3468
>   return;
> }
> }
> #line 3470 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> void ldv_mutex_lock_280(struct mutex *ldv_func_arg1 ) 
> { 
> 
> 
>   {
> #line 3475
>   ldv_mutex_lock_mtx_of_percpu_rw_semaphore(ldv_func_arg1);
> #line 3477
>   mutex_lock(ldv_func_arg1);
> #line 3478
>   return;
> }
> }
> #line 3480 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> void ldv_mutex_unlock_281(struct mutex *ldv_func_arg1 ) 
> { 
> 
> 
>   {
> #line 3485
>   ldv_mutex_unlock_mtx_of_percpu_rw_semaphore(ldv_func_arg1);
> #line 3487
>   mutex_unlock(ldv_func_arg1);
> #line 3488
>   return;
> }
> }
> #line 3490 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> void ldv_mutex_lock_282(struct mutex *ldv_func_arg1 ) 
> { 
> 
> 
>   {
> #line 3495
>   ldv_mutex_lock_mtx_of_percpu_rw_semaphore(ldv_func_arg1);
> #line 3497
>   mutex_lock(ldv_func_arg1);
> #line 3498
>   return;
> }
> }
> #line 3500 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> void ldv_mutex_unlock_283(struct mutex *ldv_func_arg1 ) 
> { 
> 
> 
>   {
> #line 3505
>   ldv_mutex_unlock_mtx_of_percpu_rw_semaphore(ldv_func_arg1);
> #line 3507
>   mutex_unlock(ldv_func_arg1);
> #line 3508
>   return;
> }
> }
> #line 3510 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> void ldv_mutex_lock_284(struct mutex *ldv_func_arg1 ) 
> { 
> 
> 
>   {
> #line 3515
>   ldv_mutex_lock_cred_guard_mutex_of_signal_struct(ldv_func_arg1);
> #line 3517
>   mutex_lock(ldv_func_arg1);
> #line 3518
>   return;
> }
> }
> #line 3520 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> void ldv_mutex_unlock_285(struct mutex *ldv_func_arg1 ) 
> { 
> 
> 
>   {
> #line 3525
>   ldv_mutex_unlock_cred_guard_mutex_of_signal_struct(ldv_func_arg1);
> #line 3527
>   mutex_unlock(ldv_func_arg1);
> #line 3528
>   return;
> }
> }
> #line 3530 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> void ldv_mutex_lock_286(struct mutex *ldv_func_arg1 ) 
> { 
> 
> 
>   {
> #line 3535
>   ldv_mutex_lock_state_mutex_of_drbd_conf(ldv_func_arg1);
> #line 3537
>   mutex_lock(ldv_func_arg1);
> #line 3538
>   return;
> }
> }
> #line 3540 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> void ldv_mutex_lock_287(struct mutex *ldv_func_arg1 ) 
> { 
> 
> 
>   {
> #line 3545
>   ldv_mutex_lock_conf_update_of_drbd_tconn(ldv_func_arg1);
> #line 3547
>   mutex_lock(ldv_func_arg1);
> #line 3548
>   return;
> }
> }
> #line 3550 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> void ldv_mutex_unlock_288(struct mutex *ldv_func_arg1 ) 
> { 
> 
> 
>   {
> #line 3555
>   ldv_mutex_unlock_conf_update_of_drbd_tconn(ldv_func_arg1);
> #line 3557
>   mutex_unlock(ldv_func_arg1);
> #line 3558
>   return;
> }
> }
> #line 3560 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> void ldv_mutex_unlock_289(struct mutex *ldv_func_arg1 ) 
> { 
> 
> 
>   {
> #line 3565
>   ldv_mutex_unlock_state_mutex_of_drbd_conf(ldv_func_arg1);
> #line 3567
>   mutex_unlock(ldv_func_arg1);
> #line 3568
>   return;
> }
> }
> #line 3570 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> void ldv_mutex_lock_290(struct mutex *ldv_func_arg1 ) 
> { 
> 
> 
>   {
> #line 3575
>   ldv_mutex_lock_conf_update_of_drbd_tconn(ldv_func_arg1);
> #line 3577
>   mutex_lock(ldv_func_arg1);
> #line 3578
>   return;
> }
> }
> #line 3580 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> void ldv_mutex_unlock_291(struct mutex *ldv_func_arg1 ) 
> { 
> 
> 
>   {
> #line 3585
>   ldv_mutex_unlock_conf_update_of_drbd_tconn(ldv_func_arg1);
> #line 3587
>   mutex_unlock(ldv_func_arg1);
> #line 3588
>   return;
56206,56279c63512,63515
< #line 104
< static unsigned short *syncer_conf_to_tags(struct drbd_conf *mdev , struct syncer_conf *arg ,
<                                            unsigned short *tags ) ;
< #line 104 "include/linux/drbd_nl.h"
< static unsigned short *syncer_conf_to_tags(struct drbd_conf *mdev , struct syncer_conf *arg ,
<                                            unsigned short *tags ) 
< { 
<   void *__gu_p ;
<   unsigned short *tmp ;
<   void *__gu_p___0 ;
<   unsigned short *tmp___0 ;
<   void *__gu_p___1 ;
<   void *__gu_p___2 ;
<   unsigned short *tmp___1 ;
<   void *__gu_p___3 ;
<   unsigned short *tmp___2 ;
<   void *__gu_p___4 ;
<   void *__gu_p___5 ;
<   unsigned short *tmp___3 ;
<   void *__gu_p___6 ;
<   unsigned short *tmp___4 ;
<   void *__gu_p___7 ;
<   void *__gu_p___8 ;
<   unsigned short *tmp___5 ;
<   void *__gu_p___9 ;
<   unsigned short *tmp___6 ;
<   size_t __len ;
<   void *__ret ;
<   void *__gu_p___10 ;
<   unsigned short *tmp___7 ;
<   void *__gu_p___11 ;
<   unsigned short *tmp___8 ;
<   size_t __len___0 ;
<   void *__ret___0 ;
<   void *__gu_p___12 ;
<   unsigned short *tmp___9 ;
<   void *__gu_p___13 ;
<   unsigned short *tmp___10 ;
<   size_t __len___1 ;
<   void *__ret___1 ;
<   void *__gu_p___14 ;
<   unsigned short *tmp___11 ;
<   void *__gu_p___15 ;
<   unsigned short *tmp___12 ;
<   void *__gu_p___16 ;
<   unsigned short *tmp___13 ;
<   void *__gu_p___17 ;
<   unsigned short *tmp___14 ;
<   void *__gu_p___18 ;
<   void *__gu_p___19 ;
<   unsigned short *tmp___15 ;
<   void *__gu_p___20 ;
<   unsigned short *tmp___16 ;
<   void *__gu_p___21 ;
<   void *__gu_p___22 ;
<   unsigned short *tmp___17 ;
<   void *__gu_p___23 ;
<   unsigned short *tmp___18 ;
<   void *__gu_p___24 ;
<   void *__gu_p___25 ;
<   unsigned short *tmp___19 ;
<   void *__gu_p___26 ;
<   unsigned short *tmp___20 ;
<   void *__gu_p___27 ;
<   void *__gu_p___28 ;
<   unsigned short *tmp___21 ;
<   void *__gu_p___29 ;
<   unsigned short *tmp___22 ;
<   void *__gu_p___30 ;
<   void *__gu_p___31 ;
<   unsigned short *tmp___23 ;
<   void *__gu_p___32 ;
<   unsigned short *tmp___24 ;
<   void *__gu_p___33 ;
---
> #line 3590 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> void ldv_mutex_unlock_292(struct mutex *ldv_func_arg1 ) 
> { 
> 
56282,56658c63518,63791
< #line 85
<   tmp = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p = (void *)tmp;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p) = 30U;
< #line 85
<   goto ldv_53500;
<   case 2UL: 
< #line 85
<   put_unaligned_le16(30, __gu_p);
< #line 85
<   goto ldv_53500;
<   case 4UL: 
< #line 85
<   put_unaligned_le32(30U, __gu_p);
< #line 85
<   goto ldv_53500;
<   case 8UL: 
< #line 85
<   put_unaligned_le64(30ULL, __gu_p);
< #line 85
<   goto ldv_53500;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53500;
<   }
<   ldv_53500: 
< #line 85
<   tmp___0 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p___0 = (void *)tmp___0;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___0) = 4U;
< #line 85
<   goto ldv_53507;
<   case 2UL: 
< #line 85
<   put_unaligned_le16(4, __gu_p___0);
< #line 85
<   goto ldv_53507;
<   case 4UL: 
< #line 85
<   put_unaligned_le32(4U, __gu_p___0);
< #line 85
<   goto ldv_53507;
<   case 8UL: 
< #line 85
<   put_unaligned_le64(4ULL, __gu_p___0);
< #line 85
<   goto ldv_53507;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53507;
<   }
<   ldv_53507: 
< #line 85
<   __gu_p___1 = (void *)tags;
< #line 85
<   switch (4UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___1) = (unsigned char )arg->rate;
< #line 85
<   goto ldv_53514;
<   case 2UL: 
< #line 85
<   put_unaligned_le16((int )((unsigned short )arg->rate), __gu_p___1);
< #line 85
<   goto ldv_53514;
<   case 4UL: 
< #line 85
<   put_unaligned_le32((unsigned int )arg->rate, __gu_p___1);
< #line 85
<   goto ldv_53514;
<   case 8UL: 
< #line 85
<   put_unaligned_le64((unsigned long long )arg->rate, __gu_p___1);
< #line 85
<   goto ldv_53514;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53514;
<   }
<   ldv_53514: 
< #line 85
<   tags = tags + 4U;
< #line 85
<   tmp___1 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p___2 = (void *)tmp___1;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___2) = 31U;
< #line 85
<   goto ldv_53521;
<   case 2UL: 
< #line 85
<   put_unaligned_le16(31, __gu_p___2);
< #line 85
<   goto ldv_53521;
<   case 4UL: 
< #line 85
<   put_unaligned_le32(31U, __gu_p___2);
< #line 85
<   goto ldv_53521;
<   case 8UL: 
< #line 85
<   put_unaligned_le64(31ULL, __gu_p___2);
< #line 85
<   goto ldv_53521;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53521;
<   }
<   ldv_53521: 
< #line 85
<   tmp___2 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p___3 = (void *)tmp___2;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___3) = 4U;
< #line 85
<   goto ldv_53528;
<   case 2UL: 
< #line 85
<   put_unaligned_le16(4, __gu_p___3);
< #line 85
<   goto ldv_53528;
<   case 4UL: 
< #line 85
<   put_unaligned_le32(4U, __gu_p___3);
< #line 85
<   goto ldv_53528;
<   case 8UL: 
< #line 85
<   put_unaligned_le64(4ULL, __gu_p___3);
< #line 85
<   goto ldv_53528;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53528;
<   }
<   ldv_53528: 
< #line 85
<   __gu_p___4 = (void *)tags;
< #line 85
<   switch (4UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___4) = (unsigned char )arg->after;
< #line 85
<   goto ldv_53535;
<   case 2UL: 
< #line 85
<   put_unaligned_le16((int )((unsigned short )arg->after), __gu_p___4);
< #line 85
<   goto ldv_53535;
<   case 4UL: 
< #line 85
<   put_unaligned_le32((unsigned int )arg->after, __gu_p___4);
< #line 85
<   goto ldv_53535;
<   case 8UL: 
< #line 85
<   put_unaligned_le64((unsigned long long )arg->after, __gu_p___4);
< #line 85
<   goto ldv_53535;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53535;
<   }
<   ldv_53535: 
< #line 85
<   tags = tags + 4U;
< #line 85
<   tmp___3 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p___5 = (void *)tmp___3;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___5) = 32U;
< #line 85
<   goto ldv_53542;
<   case 2UL: 
< #line 85
<   put_unaligned_le16(32, __gu_p___5);
< #line 85
<   goto ldv_53542;
<   case 4UL: 
< #line 85
<   put_unaligned_le32(32U, __gu_p___5);
< #line 85
<   goto ldv_53542;
<   case 8UL: 
< #line 85
<   put_unaligned_le64(32ULL, __gu_p___5);
< #line 85
<   goto ldv_53542;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53542;
<   }
<   ldv_53542: 
< #line 85
<   tmp___4 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p___6 = (void *)tmp___4;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___6) = 4U;
< #line 85
<   goto ldv_53549;
<   case 2UL: 
< #line 85
<   put_unaligned_le16(4, __gu_p___6);
< #line 85
<   goto ldv_53549;
<   case 4UL: 
< #line 85
<   put_unaligned_le32(4U, __gu_p___6);
< #line 85
<   goto ldv_53549;
<   case 8UL: 
< #line 85
<   put_unaligned_le64(4ULL, __gu_p___6);
< #line 85
<   goto ldv_53549;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53549;
<   }
<   ldv_53549: 
< #line 85
<   __gu_p___7 = (void *)tags;
< #line 85
<   switch (4UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___7) = (unsigned char )arg->al_extents;
< #line 85
<   goto ldv_53556;
<   case 2UL: 
< #line 85
<   put_unaligned_le16((int )((unsigned short )arg->al_extents), __gu_p___7);
< #line 85
<   goto ldv_53556;
<   case 4UL: 
< #line 85
<   put_unaligned_le32((unsigned int )arg->al_extents, __gu_p___7);
< #line 85
<   goto ldv_53556;
<   case 8UL: 
< #line 85
<   put_unaligned_le64((unsigned long long )arg->al_extents, __gu_p___7);
< #line 85
<   goto ldv_53556;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53556;
<   }
<   ldv_53556: 
< #line 85
<   tags = tags + 4U;
< #line 85
<   tmp___5 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p___8 = (void *)tmp___5;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___8) = 52U;
< #line 85
<   goto ldv_53563;
<   case 2UL: 
< #line 85
<   put_unaligned_le16(49204, __gu_p___8);
< #line 85
<   goto ldv_53563;
<   case 4UL: 
< #line 85
<   put_unaligned_le32(49204U, __gu_p___8);
< #line 85
<   goto ldv_53563;
<   case 8UL: 
< #line 85
<   put_unaligned_le64(49204ULL, __gu_p___8);
< #line 85
<   goto ldv_53563;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53563;
<   }
<   ldv_53563: 
< #line 85
<   tmp___6 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p___9 = (void *)tmp___6;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___9) = (unsigned char )arg->verify_alg_len;
< #line 85
<   goto ldv_53570;
<   case 2UL: 
< #line 85
<   put_unaligned_le16((int )((unsigned short )arg->verify_alg_len), __gu_p___9);
< #line 85
<   goto ldv_53570;
<   case 4UL: 
< #line 85
<   put_unaligned_le32((unsigned int )arg->verify_alg_len, __gu_p___9);
< #line 85
<   goto ldv_53570;
<   case 8UL: 
< #line 85
<   put_unaligned_le64((unsigned long long )arg->verify_alg_len, __gu_p___9);
< #line 85
<   goto ldv_53570;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53570;
---
> #line 3595
>   ldv_mutex_unlock_conf_update_of_drbd_tconn(ldv_func_arg1);
> #line 3597
>   mutex_unlock(ldv_func_arg1);
> #line 3598
>   return;
> }
> }
> #line 3600 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> void ldv_mutex_lock_293(struct mutex *ldv_func_arg1 ) 
> { 
> 
> 
>   {
> #line 3605
>   ldv_mutex_lock_mutex_of_drbd_socket(ldv_func_arg1);
> #line 3607
>   mutex_lock(ldv_func_arg1);
> #line 3608
>   return;
> }
> }
> #line 3610 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> void ldv_mutex_lock_294(struct mutex *ldv_func_arg1 ) 
> { 
> 
> 
>   {
> #line 3615
>   ldv_mutex_lock_conf_update_of_drbd_tconn(ldv_func_arg1);
> #line 3617
>   mutex_lock(ldv_func_arg1);
> #line 3618
>   return;
> }
> }
> #line 3620 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> void ldv_mutex_unlock_295(struct mutex *ldv_func_arg1 ) 
> { 
> 
> 
>   {
> #line 3625
>   ldv_mutex_unlock_conf_update_of_drbd_tconn(ldv_func_arg1);
> #line 3627
>   mutex_unlock(ldv_func_arg1);
> #line 3628
>   return;
> }
> }
> #line 3630 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> void ldv_mutex_unlock_296(struct mutex *ldv_func_arg1 ) 
> { 
> 
> 
>   {
> #line 3635
>   ldv_mutex_unlock_mutex_of_drbd_socket(ldv_func_arg1);
> #line 3637
>   mutex_unlock(ldv_func_arg1);
> #line 3638
>   return;
> }
> }
> #line 3640 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> void ldv_mutex_unlock_297(struct mutex *ldv_func_arg1 ) 
> { 
> 
> 
>   {
> #line 3645
>   ldv_mutex_unlock_conf_update_of_drbd_tconn(ldv_func_arg1);
> #line 3647
>   mutex_unlock(ldv_func_arg1);
> #line 3648
>   return;
> }
> }
> #line 3650 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> void ldv_mutex_unlock_298(struct mutex *ldv_func_arg1 ) 
> { 
> 
> 
>   {
> #line 3655
>   ldv_mutex_unlock_mutex_of_drbd_socket(ldv_func_arg1);
> #line 3657
>   mutex_unlock(ldv_func_arg1);
> #line 3658
>   return;
> }
> }
> #line 3660 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> void ldv_mutex_lock_299(struct mutex *ldv_func_arg1 ) 
> { 
> 
> 
>   {
> #line 3665
>   ldv_mutex_lock_conf_update_of_drbd_tconn(ldv_func_arg1);
> #line 3667
>   mutex_lock(ldv_func_arg1);
> #line 3668
>   return;
> }
> }
> #line 3670 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> void ldv_mutex_unlock_300(struct mutex *ldv_func_arg1 ) 
> { 
> 
> 
>   {
> #line 3675
>   ldv_mutex_unlock_conf_update_of_drbd_tconn(ldv_func_arg1);
> #line 3677
>   mutex_unlock(ldv_func_arg1);
> #line 3678
>   return;
> }
> }
> #line 3680 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> void ldv_mutex_unlock_301(struct mutex *ldv_func_arg1 ) 
> { 
> 
> 
>   {
> #line 3685
>   ldv_mutex_unlock_conf_update_of_drbd_tconn(ldv_func_arg1);
> #line 3687
>   mutex_unlock(ldv_func_arg1);
> #line 3688
>   return;
> }
> }
> #line 3690 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> void ldv_mutex_lock_302(struct mutex *ldv_func_arg1 ) 
> { 
> 
> 
>   {
> #line 3695
>   ldv_mutex_lock_conf_update_of_drbd_tconn(ldv_func_arg1);
> #line 3697
>   mutex_lock(ldv_func_arg1);
> #line 3698
>   return;
> }
> }
> #line 3700 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> void ldv_mutex_unlock_303(struct mutex *ldv_func_arg1 ) 
> { 
> 
> 
>   {
> #line 3705
>   ldv_mutex_unlock_conf_update_of_drbd_tconn(ldv_func_arg1);
> #line 3707
>   mutex_unlock(ldv_func_arg1);
> #line 3708
>   return;
> }
> }
> #line 3710 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> void ldv_mutex_lock_304(struct mutex *ldv_func_arg1 ) 
> { 
> 
> 
>   {
> #line 3715
>   ldv_mutex_lock_state_mutex_of_drbd_conf(ldv_func_arg1);
> #line 3717
>   mutex_lock(ldv_func_arg1);
> #line 3718
>   return;
> }
> }
> #line 3720 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
> void ldv_mutex_unlock_305(struct mutex *ldv_func_arg1 ) 
> { 
> 
> 
>   {
> #line 3725
>   ldv_mutex_unlock_state_mutex_of_drbd_conf(ldv_func_arg1);
> #line 3727
>   mutex_unlock(ldv_func_arg1);
> #line 3728
>   return;
> }
> }
> #line 66 "include/linux/rbtree.h"
> extern struct rb_node *rb_next(struct rb_node  const  * ) ;
> #line 75 "include/linux/rbtree.h"
> __inline static void rb_link_node(struct rb_node *node , struct rb_node *parent ,
>                                   struct rb_node **rb_link ) 
> { 
>   struct rb_node *tmp ;
> 
>   {
> #line 78
>   node->__rb_parent_color = (unsigned long )parent;
> #line 79
>   tmp = 0;
> #line 79
>   node->rb_right = tmp;
> #line 79
>   node->rb_left = tmp;
> #line 81
>   *rb_link = node;
> #line 82
>   return;
> }
> }
> #line 44 "include/linux/rbtree_augmented.h"
> extern void __rb_insert_augmented(struct rb_node * , struct rb_root * , void (*)(struct rb_node * ,
>                                                                                  struct rb_node * ) ) ;
> #line 47 "include/linux/rbtree_augmented.h"
> __inline static void rb_insert_augmented(struct rb_node *node , struct rb_root *root ,
>                                          struct rb_augment_callbacks  const  *augment ) 
> { 
> 
> 
>   {
> #line 50
>   __rb_insert_augmented(node, root, augment->rotate);
> #line 51
>   return;
> }
> }
> #line 99 "include/linux/rbtree_augmented.h"
> __inline static void rb_set_parent(struct rb_node *rb , struct rb_node *p ) 
> { 
> 
> 
>   {
> #line 101
>   rb->__rb_parent_color = (rb->__rb_parent_color & 1UL) | (unsigned long )p;
> #line 102
>   return;
> }
> }
> #line 104 "include/linux/rbtree_augmented.h"
> __inline static void rb_set_parent_color(struct rb_node *rb , struct rb_node *p ,
>                                          int color ) 
> { 
> 
> 
>   {
> #line 107
>   rb->__rb_parent_color = (unsigned long )color | (unsigned long )p;
> #line 108
>   return;
> }
> }
> #line 111 "include/linux/rbtree_augmented.h"
> __inline static void __rb_change_child(struct rb_node *old , struct rb_node *new ,
>                                        struct rb_node *parent , struct rb_root *root ) 
> { 
> 
> 
>   {
> #line 114
>   if ((unsigned long )parent != (unsigned long )((struct rb_node *)0)) {
> #line 115
>     if ((unsigned long )parent->rb_left == (unsigned long )old) {
> #line 116
>       parent->rb_left = new;
>     } else {
> #line 118
>       parent->rb_right = new;
>     }
>   } else {
> #line 120
>     root->rb_node = new;
56660,56699c63793,63923
<   ldv_53570: 
< #line 85
<   __len = (size_t )arg->verify_alg_len;
< #line 85
<   __ret = __builtin_memcpy((void *)tags, (void const   *)(& arg->verify_alg), __len);
< #line 85
<   tags = tags + (unsigned long )arg->verify_alg_len;
< #line 85
<   tmp___7 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p___10 = (void *)tmp___7;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___10) = 51U;
< #line 85
<   goto ldv_53580;
<   case 2UL: 
< #line 85
<   put_unaligned_le16(49203, __gu_p___10);
< #line 85
<   goto ldv_53580;
<   case 4UL: 
< #line 85
<   put_unaligned_le32(49203U, __gu_p___10);
< #line 85
<   goto ldv_53580;
<   case 8UL: 
< #line 85
<   put_unaligned_le64(49203ULL, __gu_p___10);
< #line 85
<   goto ldv_53580;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53580;
---
> #line 121
>   return;
> }
> }
> #line 123
> extern void __rb_erase_color(struct rb_node * , struct rb_root * , void (*)(struct rb_node * ,
>                                                                             struct rb_node * ) ) ;
> #line 127 "include/linux/rbtree_augmented.h"
> __inline static void rb_erase_augmented(struct rb_node *node , struct rb_root *root ,
>                                         struct rb_augment_callbacks  const  *augment ) 
> { 
>   struct rb_node *child ;
>   struct rb_node *tmp ;
>   struct rb_node *parent ;
>   struct rb_node *rebalance ;
>   unsigned long pc ;
>   struct rb_node *successor ;
>   struct rb_node *child2 ;
>   unsigned long pc2 ;
> 
>   {
> #line 130
>   child = node->rb_right;
> #line 130
>   tmp = node->rb_left;
> #line 134
>   if ((unsigned long )tmp == (unsigned long )((struct rb_node *)0)) {
> #line 142
>     pc = node->__rb_parent_color;
> #line 143
>     parent = (struct rb_node *)(pc & 0xfffffffffffffffcUL);
> #line 144
>     __rb_change_child(node, child, parent, root);
> #line 145
>     if ((unsigned long )child != (unsigned long )((struct rb_node *)0)) {
> #line 146
>       child->__rb_parent_color = pc;
> #line 147
>       rebalance = 0;
>     } else {
> #line 149
>       rebalance = (int )pc & 1 ? parent : 0;
>     }
> #line 150
>     tmp = parent;
>   } else
> #line 151
>   if ((unsigned long )child == (unsigned long )((struct rb_node *)0)) {
> #line 153
>     pc = node->__rb_parent_color;
> #line 153
>     tmp->__rb_parent_color = pc;
> #line 154
>     parent = (struct rb_node *)(pc & 0xfffffffffffffffcUL);
> #line 155
>     __rb_change_child(node, tmp, parent, root);
> #line 156
>     rebalance = 0;
> #line 157
>     tmp = parent;
>   } else {
> #line 159
>     successor = child;
> #line 160
>     tmp = child->rb_left;
> #line 161
>     if ((unsigned long )tmp == (unsigned long )((struct rb_node *)0)) {
> #line 171
>       parent = successor;
> #line 172
>       child2 = successor->rb_right;
> #line 173
>       (*(augment->copy))(node, successor);
>     } else {
>       ldv_6275: 
> #line 190
>       parent = successor;
> #line 191
>       successor = tmp;
> #line 192
>       tmp = tmp->rb_left;
> #line 193
>       if ((unsigned long )tmp != (unsigned long )((struct rb_node *)0)) {
> #line 194
>         goto ldv_6275;
>       } else {
> 
>       }
> #line 194
>       child2 = successor->rb_right;
> #line 194
>       parent->rb_left = child2;
> #line 195
>       successor->rb_right = child;
> #line 196
>       rb_set_parent(child, successor);
> #line 197
>       (*(augment->copy))(node, successor);
> #line 198
>       (*(augment->propagate))(parent, successor);
>     }
> #line 201
>     tmp = node->rb_left;
> #line 201
>     successor->rb_left = tmp;
> #line 202
>     rb_set_parent(tmp, successor);
> #line 204
>     pc = node->__rb_parent_color;
> #line 205
>     tmp = (struct rb_node *)(pc & 0xfffffffffffffffcUL);
> #line 206
>     __rb_change_child(node, successor, tmp, root);
> #line 207
>     if ((unsigned long )child2 != (unsigned long )((struct rb_node *)0)) {
> #line 208
>       successor->__rb_parent_color = pc;
> #line 209
>       rb_set_parent_color(child2, parent, 1);
> #line 210
>       rebalance = 0;
>     } else {
> #line 212
>       pc2 = successor->__rb_parent_color;
> #line 213
>       successor->__rb_parent_color = pc;
> #line 214
>       rebalance = (int )pc2 & 1 ? parent : 0;
>     }
> #line 216
>     tmp = successor;
56701,56734c63925,63932
<   ldv_53580: 
< #line 85
<   tmp___8 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p___11 = (void *)tmp___8;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___11) = (unsigned char )arg->cpu_mask_len;
< #line 85
<   goto ldv_53587;
<   case 2UL: 
< #line 85
<   put_unaligned_le16((int )((unsigned short )arg->cpu_mask_len), __gu_p___11);
< #line 85
<   goto ldv_53587;
<   case 4UL: 
< #line 85
<   put_unaligned_le32((unsigned int )arg->cpu_mask_len, __gu_p___11);
< #line 85
<   goto ldv_53587;
<   case 8UL: 
< #line 85
<   put_unaligned_le64((unsigned long long )arg->cpu_mask_len, __gu_p___11);
< #line 85
<   goto ldv_53587;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53587;
---
> #line 219
>   (*(augment->propagate))(tmp, 0);
> #line 220
>   if ((unsigned long )rebalance != (unsigned long )((struct rb_node *)0)) {
> #line 221
>     __rb_erase_color(rebalance, root, augment->rotate);
>   } else {
> 
56736,56775c63934,63979
<   ldv_53587: 
< #line 85
<   __len___0 = (size_t )arg->cpu_mask_len;
< #line 85
<   __ret___0 = __builtin_memcpy((void *)tags, (void const   *)(& arg->cpu_mask), __len___0);
< #line 85
<   tags = tags + (unsigned long )arg->cpu_mask_len;
< #line 85
<   tmp___9 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p___12 = (void *)tmp___9;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___12) = 64U;
< #line 85
<   goto ldv_53597;
<   case 2UL: 
< #line 85
<   put_unaligned_le16(49216, __gu_p___12);
< #line 85
<   goto ldv_53597;
<   case 4UL: 
< #line 85
<   put_unaligned_le32(49216U, __gu_p___12);
< #line 85
<   goto ldv_53597;
<   case 8UL: 
< #line 85
<   put_unaligned_le64(49216ULL, __gu_p___12);
< #line 85
<   goto ldv_53597;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53597;
---
> #line 222
>   return;
> }
> }
> #line 96 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_interval.c.prepared"
> __inline static sector_t interval_end(struct rb_node *node ) 
> { 
>   struct drbd_interval *this ;
>   struct rb_node  const  *__mptr ;
> 
>   {
> #line 98
>   __mptr = (struct rb_node  const  *)node;
> #line 98
>   this = (struct drbd_interval *)__mptr;
> #line 99
>   return (this->end);
> }
> }
> #line 110 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_interval.c.prepared"
> __inline static sector_t compute_subtree_last(struct drbd_interval *node ) 
> { 
>   sector_t max ;
>   sector_t left ;
>   sector_t tmp ;
>   sector_t right ;
>   sector_t tmp___0 ;
> 
>   {
> #line 112
>   max = node->sector + (sector_t )(node->size >> 9);
> #line 114
>   if ((unsigned long )node->rb.rb_left != (unsigned long )((struct rb_node *)0)) {
> #line 115
>     tmp = interval_end(node->rb.rb_left);
> #line 115
>     left = tmp;
> #line 116
>     if (left > max) {
> #line 117
>       max = left;
>     } else {
> 
>     }
>   } else {
> 
56777,56810c63981,63995
<   ldv_53597: 
< #line 85
<   tmp___10 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p___13 = (void *)tmp___10;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___13) = (unsigned char )arg->csums_alg_len;
< #line 85
<   goto ldv_53604;
<   case 2UL: 
< #line 85
<   put_unaligned_le16((int )((unsigned short )arg->csums_alg_len), __gu_p___13);
< #line 85
<   goto ldv_53604;
<   case 4UL: 
< #line 85
<   put_unaligned_le32((unsigned int )arg->csums_alg_len, __gu_p___13);
< #line 85
<   goto ldv_53604;
<   case 8UL: 
< #line 85
<   put_unaligned_le64((unsigned long long )arg->csums_alg_len, __gu_p___13);
< #line 85
<   goto ldv_53604;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53604;
---
> #line 119
>   if ((unsigned long )node->rb.rb_right != (unsigned long )((struct rb_node *)0)) {
> #line 120
>     tmp___0 = interval_end(node->rb.rb_right);
> #line 120
>     right = tmp___0;
> #line 121
>     if (right > max) {
> #line 122
>       max = right;
>     } else {
> 
>     }
>   } else {
> 
56812,56851c63997,64026
<   ldv_53604: 
< #line 85
<   __len___1 = (size_t )arg->csums_alg_len;
< #line 85
<   __ret___1 = __builtin_memcpy((void *)tags, (void const   *)(& arg->csums_alg), __len___1);
< #line 85
<   tags = tags + (unsigned long )arg->csums_alg_len;
< #line 85
<   tmp___11 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p___14 = (void *)tmp___11;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___14) = 65U;
< #line 85
<   goto ldv_53614;
<   case 2UL: 
< #line 85
<   put_unaligned_le16(32833, __gu_p___14);
< #line 85
<   goto ldv_53614;
<   case 4UL: 
< #line 85
<   put_unaligned_le32(32833U, __gu_p___14);
< #line 85
<   goto ldv_53614;
<   case 8UL: 
< #line 85
<   put_unaligned_le64(32833ULL, __gu_p___14);
< #line 85
<   goto ldv_53614;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53614;
---
> #line 124
>   return (max);
> }
> }
> #line 127 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_interval.c.prepared"
> static void augment_propagate(struct rb_node *rb , struct rb_node *stop ) 
> { 
>   struct drbd_interval *node ;
>   struct rb_node  const  *__mptr ;
>   sector_t subtree_last ;
>   sector_t tmp ;
> 
>   {
> #line 129
>   goto ldv_6331;
>   ldv_6330: 
> #line 130
>   __mptr = (struct rb_node  const  *)rb;
> #line 130
>   node = (struct drbd_interval *)__mptr;
> #line 131
>   tmp = compute_subtree_last(node);
> #line 131
>   subtree_last = tmp;
> #line 132
>   if (node->end == subtree_last) {
> #line 133
>     goto ldv_6329;
>   } else {
> 
56853,56886c64028,64038
<   ldv_53614: 
< #line 85
<   tmp___12 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p___15 = (void *)tmp___12;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___15) = 1U;
< #line 85
<   goto ldv_53621;
<   case 2UL: 
< #line 85
<   put_unaligned_le16(1, __gu_p___15);
< #line 85
<   goto ldv_53621;
<   case 4UL: 
< #line 85
<   put_unaligned_le32(1U, __gu_p___15);
< #line 85
<   goto ldv_53621;
<   case 8UL: 
< #line 85
<   put_unaligned_le64(1ULL, __gu_p___15);
< #line 85
<   goto ldv_53621;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53621;
---
> #line 134
>   node->end = subtree_last;
> #line 135
>   rb = (struct rb_node *)(node->rb.__rb_parent_color & 0xfffffffffffffffcUL);
>   ldv_6331: ;
> #line 129
>   if ((unsigned long )rb != (unsigned long )stop) {
> #line 130
>     goto ldv_6330;
>   } else {
> 
56888,56925c64040,64120
<   ldv_53621: 
< #line 85
<   *((char *)tags) = (char )arg->use_rle;
< #line 85
<   tags = tags + 1U;
< #line 85
<   tmp___13 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p___16 = (void *)tmp___13;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___16) = 75U;
< #line 85
<   goto ldv_53628;
<   case 2UL: 
< #line 85
<   put_unaligned_le16(75, __gu_p___16);
< #line 85
<   goto ldv_53628;
<   case 4UL: 
< #line 85
<   put_unaligned_le32(75U, __gu_p___16);
< #line 85
<   goto ldv_53628;
<   case 8UL: 
< #line 85
<   put_unaligned_le64(75ULL, __gu_p___16);
< #line 85
<   goto ldv_53628;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53628;
---
>   ldv_6329: ;
> #line 134
>   return;
> }
> }
> #line 139 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_interval.c.prepared"
> static void augment_copy(struct rb_node *rb_old , struct rb_node *rb_new ) 
> { 
>   struct drbd_interval *old ;
>   struct rb_node  const  *__mptr ;
>   struct drbd_interval *new ;
>   struct rb_node  const  *__mptr___0 ;
> 
>   {
> #line 141
>   __mptr = (struct rb_node  const  *)rb_old;
> #line 141
>   old = (struct drbd_interval *)__mptr;
> #line 142
>   __mptr___0 = (struct rb_node  const  *)rb_new;
> #line 142
>   new = (struct drbd_interval *)__mptr___0;
> #line 144
>   new->end = old->end;
> #line 145
>   return;
> }
> }
> #line 147 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_interval.c.prepared"
> static void augment_rotate(struct rb_node *rb_old , struct rb_node *rb_new ) 
> { 
>   struct drbd_interval *old ;
>   struct rb_node  const  *__mptr ;
>   struct drbd_interval *new ;
>   struct rb_node  const  *__mptr___0 ;
> 
>   {
> #line 149
>   __mptr = (struct rb_node  const  *)rb_old;
> #line 149
>   old = (struct drbd_interval *)__mptr;
> #line 150
>   __mptr___0 = (struct rb_node  const  *)rb_new;
> #line 150
>   new = (struct drbd_interval *)__mptr___0;
> #line 152
>   new->end = old->end;
> #line 153
>   old->end = compute_subtree_last(old);
> #line 154
>   return;
> }
> }
> #line 156 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_interval.c.prepared"
> static struct rb_augment_callbacks  const  augment_callbacks  =    {& augment_propagate, & augment_copy, & augment_rotate};
> #line 166 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_interval.c.prepared"
> bool drbd_insert_interval(struct rb_root *root , struct drbd_interval *this ) 
> { 
>   struct rb_node **new ;
>   struct rb_node *parent ;
>   long tmp ;
>   struct drbd_interval *here ;
>   struct rb_node  const  *__mptr ;
> 
>   {
> #line 168
>   new = & root->rb_node;
> #line 168
>   parent = 0;
> #line 170
>   tmp = __builtin_expect((this->size & 511U) != 0U, 0L);
> #line 170
>   if (tmp != 0L) {
> #line 170
>     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_interval.c.prepared"),
>                          "i" (170), "i" (12UL));
>     ldv_6359: ;
> #line 170
>     goto ldv_6359;
>   } else {
> 
56927,56960c64122,64152
<   ldv_53628: 
< #line 85
<   tmp___14 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p___17 = (void *)tmp___14;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___17) = 4U;
< #line 85
<   goto ldv_53635;
<   case 2UL: 
< #line 85
<   put_unaligned_le16(4, __gu_p___17);
< #line 85
<   goto ldv_53635;
<   case 4UL: 
< #line 85
<   put_unaligned_le32(4U, __gu_p___17);
< #line 85
<   goto ldv_53635;
<   case 8UL: 
< #line 85
<   put_unaligned_le64(4ULL, __gu_p___17);
< #line 85
<   goto ldv_53635;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53635;
---
> #line 172
>   goto ldv_6364;
>   ldv_6363: 
> #line 174
>   __mptr = (struct rb_node  const  *)*new;
> #line 174
>   here = (struct drbd_interval *)__mptr;
> #line 176
>   parent = *new;
> #line 177
>   if (this->sector < here->sector) {
> #line 178
>     new = & (*new)->rb_left;
>   } else
> #line 179
>   if (this->sector > here->sector) {
> #line 180
>     new = & (*new)->rb_right;
>   } else
> #line 181
>   if ((unsigned long )this < (unsigned long )here) {
> #line 182
>     new = & (*new)->rb_left;
>   } else
> #line 183
>   if ((unsigned long )this > (unsigned long )here) {
> #line 184
>     new = & (*new)->rb_right;
>   } else {
> #line 186
>     return (0);
56962,56991c64154,64160
<   ldv_53635: 
< #line 85
<   __gu_p___18 = (void *)tags;
< #line 85
<   switch (4UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___18) = (unsigned char )arg->on_no_data;
< #line 85
<   goto ldv_53642;
<   case 2UL: 
< #line 85
<   put_unaligned_le16((int )((unsigned short )arg->on_no_data), __gu_p___18);
< #line 85
<   goto ldv_53642;
<   case 4UL: 
< #line 85
<   put_unaligned_le32((unsigned int )arg->on_no_data, __gu_p___18);
< #line 85
<   goto ldv_53642;
<   case 8UL: 
< #line 85
<   put_unaligned_le64((unsigned long long )arg->on_no_data, __gu_p___18);
< #line 85
<   goto ldv_53642;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53642;
---
>   ldv_6364: ;
> #line 172
>   if ((unsigned long )*new != (unsigned long )((struct rb_node *)0)) {
> #line 173
>     goto ldv_6363;
>   } else {
> 
56993,57028c64162,64208
<   ldv_53642: 
< #line 85
<   tags = tags + 4U;
< #line 85
<   tmp___15 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p___19 = (void *)tmp___15;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___19) = 76U;
< #line 85
<   goto ldv_53649;
<   case 2UL: 
< #line 85
<   put_unaligned_le16(76, __gu_p___19);
< #line 85
<   goto ldv_53649;
<   case 4UL: 
< #line 85
<   put_unaligned_le32(76U, __gu_p___19);
< #line 85
<   goto ldv_53649;
<   case 8UL: 
< #line 85
<   put_unaligned_le64(76ULL, __gu_p___19);
< #line 85
<   goto ldv_53649;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53649;
---
> #line 189
>   rb_link_node(& this->rb, parent, new);
> #line 190
>   rb_insert_augmented(& this->rb, root, & augment_callbacks);
> #line 191
>   return (1);
> }
> }
> #line 205 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_interval.c.prepared"
> bool drbd_contains_interval(struct rb_root *root , sector_t sector , struct drbd_interval *interval ) 
> { 
>   struct rb_node *node ;
>   struct drbd_interval *here ;
>   struct rb_node  const  *__mptr ;
> 
>   {
> #line 208
>   node = root->rb_node;
> #line 210
>   goto ldv_6376;
>   ldv_6375: 
> #line 212
>   __mptr = (struct rb_node  const  *)node;
> #line 212
>   here = (struct drbd_interval *)__mptr;
> #line 214
>   if (here->sector > sector) {
> #line 215
>     node = node->rb_left;
>   } else
> #line 216
>   if (here->sector < sector) {
> #line 217
>     node = node->rb_right;
>   } else
> #line 218
>   if ((unsigned long )interval < (unsigned long )here) {
> #line 219
>     node = node->rb_left;
>   } else
> #line 220
>   if ((unsigned long )interval > (unsigned long )here) {
> #line 221
>     node = node->rb_right;
>   } else {
> #line 223
>     return (1);
57030,57063c64210,64216
<   ldv_53649: 
< #line 85
<   tmp___16 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p___20 = (void *)tmp___16;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___20) = 4U;
< #line 85
<   goto ldv_53656;
<   case 2UL: 
< #line 85
<   put_unaligned_le16(4, __gu_p___20);
< #line 85
<   goto ldv_53656;
<   case 4UL: 
< #line 85
<   put_unaligned_le32(4U, __gu_p___20);
< #line 85
<   goto ldv_53656;
<   case 8UL: 
< #line 85
<   put_unaligned_le64(4ULL, __gu_p___20);
< #line 85
<   goto ldv_53656;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53656;
---
>   ldv_6376: ;
> #line 210
>   if ((unsigned long )node != (unsigned long )((struct rb_node *)0)) {
> #line 211
>     goto ldv_6375;
>   } else {
> 
57065,57094c64218,64264
<   ldv_53656: 
< #line 85
<   __gu_p___21 = (void *)tags;
< #line 85
<   switch (4UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___21) = (unsigned char )arg->c_plan_ahead;
< #line 85
<   goto ldv_53663;
<   case 2UL: 
< #line 85
<   put_unaligned_le16((int )((unsigned short )arg->c_plan_ahead), __gu_p___21);
< #line 85
<   goto ldv_53663;
<   case 4UL: 
< #line 85
<   put_unaligned_le32((unsigned int )arg->c_plan_ahead, __gu_p___21);
< #line 85
<   goto ldv_53663;
<   case 8UL: 
< #line 85
<   put_unaligned_le64((unsigned long long )arg->c_plan_ahead, __gu_p___21);
< #line 85
<   goto ldv_53663;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53663;
---
> 
> #line 225
>   return (0);
> }
> }
> #line 232 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_interval.c.prepared"
> void drbd_remove_interval(struct rb_root *root , struct drbd_interval *this ) 
> { 
> 
> 
>   {
> #line 234
>   rb_erase_augmented(& this->rb, root, & augment_callbacks);
> #line 235
>   return;
> }
> }
> #line 249 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_interval.c.prepared"
> struct drbd_interval *drbd_find_overlap(struct rb_root *root , sector_t sector , unsigned int size ) 
> { 
>   struct rb_node *node ;
>   struct drbd_interval *overlap ;
>   sector_t end ;
>   long tmp ;
>   struct drbd_interval *here ;
>   struct rb_node  const  *__mptr ;
>   sector_t tmp___0 ;
> 
>   {
> #line 251
>   node = root->rb_node;
> #line 252
>   overlap = 0;
> #line 253
>   end = (sector_t )(size >> 9) + sector;
> #line 255
>   tmp = __builtin_expect((size & 511U) != 0U, 0L);
> #line 255
>   if (tmp != 0L) {
> #line 255
>     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_interval.c.prepared"),
>                          "i" (255), "i" (12UL));
>     ldv_6390: ;
> #line 255
>     goto ldv_6390;
>   } else {
> 
57096,57131c64266,64300
<   ldv_53663: 
< #line 85
<   tags = tags + 4U;
< #line 85
<   tmp___17 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p___22 = (void *)tmp___17;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___22) = 77U;
< #line 85
<   goto ldv_53670;
<   case 2UL: 
< #line 85
<   put_unaligned_le16(77, __gu_p___22);
< #line 85
<   goto ldv_53670;
<   case 4UL: 
< #line 85
<   put_unaligned_le32(77U, __gu_p___22);
< #line 85
<   goto ldv_53670;
<   case 8UL: 
< #line 85
<   put_unaligned_le64(77ULL, __gu_p___22);
< #line 85
<   goto ldv_53670;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53670;
---
> #line 257
>   goto ldv_6396;
>   ldv_6395: 
> #line 259
>   __mptr = (struct rb_node  const  *)node;
> #line 259
>   here = (struct drbd_interval *)__mptr;
> #line 261
>   if ((unsigned long )node->rb_left != (unsigned long )((struct rb_node *)0)) {
> #line 261
>     tmp___0 = interval_end(node->rb_left);
> #line 261
>     if (tmp___0 > sector) {
> #line 264
>       node = node->rb_left;
>     } else {
> #line 261
>       goto _L;
>     }
>   } else
>   _L: /* CIL Label */ 
> #line 265
>   if (here->sector < end && here->sector + (sector_t )(here->size >> 9) > sector) {
> #line 267
>     overlap = here;
> #line 268
>     goto ldv_6394;
>   } else
> #line 269
>   if (here->sector <= sector) {
> #line 271
>     node = node->rb_right;
>   } else {
> #line 273
>     goto ldv_6394;
57133,57166c64302,64308
<   ldv_53670: 
< #line 85
<   tmp___18 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p___23 = (void *)tmp___18;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___23) = 4U;
< #line 85
<   goto ldv_53677;
<   case 2UL: 
< #line 85
<   put_unaligned_le16(4, __gu_p___23);
< #line 85
<   goto ldv_53677;
<   case 4UL: 
< #line 85
<   put_unaligned_le32(4U, __gu_p___23);
< #line 85
<   goto ldv_53677;
<   case 8UL: 
< #line 85
<   put_unaligned_le64(4ULL, __gu_p___23);
< #line 85
<   goto ldv_53677;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53677;
---
>   ldv_6396: ;
> #line 257
>   if ((unsigned long )node != (unsigned long )((struct rb_node *)0)) {
> #line 258
>     goto ldv_6395;
>   } else {
> 
57168,57197c64310,64334
<   ldv_53677: 
< #line 85
<   __gu_p___24 = (void *)tags;
< #line 85
<   switch (4UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___24) = (unsigned char )arg->c_delay_target;
< #line 85
<   goto ldv_53684;
<   case 2UL: 
< #line 85
<   put_unaligned_le16((int )((unsigned short )arg->c_delay_target), __gu_p___24);
< #line 85
<   goto ldv_53684;
<   case 4UL: 
< #line 85
<   put_unaligned_le32((unsigned int )arg->c_delay_target, __gu_p___24);
< #line 85
<   goto ldv_53684;
<   case 8UL: 
< #line 85
<   put_unaligned_le64((unsigned long long )arg->c_delay_target, __gu_p___24);
< #line 85
<   goto ldv_53684;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53684;
---
>   ldv_6394: ;
> #line 275
>   return (overlap);
> }
> }
> #line 279 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_interval.c.prepared"
> struct drbd_interval *drbd_next_overlap(struct drbd_interval *i , sector_t sector ,
>                                         unsigned int size ) 
> { 
>   sector_t end ;
>   struct rb_node *node ;
>   struct rb_node  const  *__mptr ;
> 
>   {
> #line 281
>   end = (sector_t )(size >> 9) + sector;
>   ldv_6406: 
> #line 285
>   node = rb_next((struct rb_node  const  *)(& i->rb));
> #line 286
>   if ((unsigned long )node == (unsigned long )((struct rb_node *)0)) {
> #line 287
>     return (0);
>   } else {
> 
57199,57234c64336,64345
<   ldv_53684: 
< #line 85
<   tags = tags + 4U;
< #line 85
<   tmp___19 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p___25 = (void *)tmp___19;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___25) = 78U;
< #line 85
<   goto ldv_53691;
<   case 2UL: 
< #line 85
<   put_unaligned_le16(78, __gu_p___25);
< #line 85
<   goto ldv_53691;
<   case 4UL: 
< #line 85
<   put_unaligned_le32(78U, __gu_p___25);
< #line 85
<   goto ldv_53691;
<   case 8UL: 
< #line 85
<   put_unaligned_le64(78ULL, __gu_p___25);
< #line 85
<   goto ldv_53691;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53691;
---
> #line 288
>   __mptr = (struct rb_node  const  *)node;
> #line 288
>   i = (struct drbd_interval *)__mptr;
> #line 289
>   if (i->sector >= end) {
> #line 290
>     return (0);
>   } else {
> 
57236,57269c64347,64352
<   ldv_53691: 
< #line 85
<   tmp___20 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p___26 = (void *)tmp___20;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___26) = 4U;
< #line 85
<   goto ldv_53698;
<   case 2UL: 
< #line 85
<   put_unaligned_le16(4, __gu_p___26);
< #line 85
<   goto ldv_53698;
<   case 4UL: 
< #line 85
<   put_unaligned_le32(4U, __gu_p___26);
< #line 85
<   goto ldv_53698;
<   case 8UL: 
< #line 85
<   put_unaligned_le64(4ULL, __gu_p___26);
< #line 85
<   goto ldv_53698;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53698;
---
> #line 291
>   if (i->sector + (sector_t )(i->size >> 9) > sector) {
> #line 292
>     return (i);
>   } else {
> 
57271,57275c64354,64404
<   ldv_53698: 
< #line 85
<   __gu_p___27 = (void *)tags;
< #line 85
<   switch (4UL) {
---
> #line 293
>   goto ldv_6406;
> }
> }
> #line 171 "include/linux/mutex.h"
> int ldv_mutex_trylock_342(struct mutex *ldv_func_arg1 ) ;
> #line 176
> void ldv_mutex_unlock_338(struct mutex *ldv_func_arg1 ) ;
> #line 180
> void ldv_mutex_unlock_340(struct mutex *ldv_func_arg1 ) ;
> #line 184
> void ldv_mutex_unlock_343(struct mutex *ldv_func_arg1 ) ;
> #line 188
> void ldv_mutex_unlock_345(struct mutex *ldv_func_arg1 ) ;
> #line 192
> void ldv_mutex_unlock_347(struct mutex *ldv_func_arg1 ) ;
> #line 196
> void ldv_mutex_unlock_349(struct mutex *ldv_func_arg1 ) ;
> #line 200
> void ldv_mutex_unlock_351(struct mutex *ldv_func_arg1 ) ;
> #line 204
> void ldv_mutex_unlock_353(struct mutex *ldv_func_arg1 ) ;
> #line 10 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> void ldv_mutex_lock_337(struct mutex *ldv_func_arg1 ) ;
> #line 14
> void ldv_mutex_lock_339(struct mutex *ldv_func_arg1 ) ;
> #line 18
> void ldv_mutex_lock_341(struct mutex *ldv_func_arg1 ) ;
> #line 22
> void ldv_mutex_lock_344(struct mutex *ldv_func_arg1 ) ;
> #line 26
> void ldv_mutex_lock_346(struct mutex *ldv_func_arg1 ) ;
> #line 30
> void ldv_mutex_lock_348(struct mutex *ldv_func_arg1 ) ;
> #line 34
> void ldv_mutex_lock_350(struct mutex *ldv_func_arg1 ) ;
> #line 38
> void ldv_mutex_lock_352(struct mutex *ldv_func_arg1 ) ;
> #line 67
> void ldv_mutex_lock_cstate_mutex_of_drbd_tconn(struct mutex *lock ) ;
> #line 71
> void ldv_mutex_unlock_cstate_mutex_of_drbd_tconn(struct mutex *lock ) ;
> #line 208 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/thread_info.h"
> __inline static struct thread_info *current_thread_info___7(void) 
> { 
>   struct thread_info *ti ;
>   unsigned long pfo_ret__ ;
> 
>   {
> #line 211
>   switch (8UL) {
57277,57280c64406,64409
< #line 85
<   *((u8 *)__gu_p___27) = (unsigned char )arg->c_fill_target;
< #line 85
<   goto ldv_53705;
---
> #line 211
>   __asm__  ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
> #line 211
>   goto ldv_6444;
57282,57285c64411,64414
< #line 85
<   put_unaligned_le16((int )((unsigned short )arg->c_fill_target), __gu_p___27);
< #line 85
<   goto ldv_53705;
---
> #line 211
>   __asm__  ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
> #line 211
>   goto ldv_6444;
57287,57290c64416,64419
< #line 85
<   put_unaligned_le32((unsigned int )arg->c_fill_target, __gu_p___27);
< #line 85
<   goto ldv_53705;
---
> #line 211
>   __asm__  ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
> #line 211
>   goto ldv_6444;
57292,57295c64421,64424
< #line 85
<   put_unaligned_le64((unsigned long long )arg->c_fill_target, __gu_p___27);
< #line 85
<   goto ldv_53705;
---
> #line 211
>   __asm__  ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
> #line 211
>   goto ldv_6444;
57297,57300c64426,64427
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53705;
---
> #line 211
>   __bad_percpu_size();
57302,57335c64429,64447
<   ldv_53705: 
< #line 85
<   tags = tags + 4U;
< #line 85
<   tmp___21 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p___28 = (void *)tmp___21;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___28) = 79U;
< #line 85
<   goto ldv_53712;
<   case 2UL: 
< #line 85
<   put_unaligned_le16(79, __gu_p___28);
< #line 85
<   goto ldv_53712;
<   case 4UL: 
< #line 85
<   put_unaligned_le32(79U, __gu_p___28);
< #line 85
<   goto ldv_53712;
<   case 8UL: 
< #line 85
<   put_unaligned_le64(79ULL, __gu_p___28);
< #line 85
<   goto ldv_53712;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
---
>   ldv_6444: 
> #line 211
>   ti = (struct thread_info *)(pfo_ret__ - 8152UL);
> #line 213
>   return (ti);
> }
> }
> #line 13 "include/linux/wait.h"
> extern int default_wake_function(wait_queue_t * , unsigned int  , int  , void * ) ;
> #line 81 "include/linux/wait.h"
> __inline static void init_waitqueue_entry(wait_queue_t *q , struct task_struct *p ) 
> { 
> 
> 
>   {
> #line 83
>   q->flags = 0U;
> #line 84
>   q->private = (void *)p;
57337c64449,64520
<   goto ldv_53712;
---
>   q->func = & default_wake_function;
> #line 86
>   return;
> }
> }
> #line 101
> extern void add_wait_queue(wait_queue_head_t * , wait_queue_t * ) ;
> #line 103
> extern void remove_wait_queue(wait_queue_head_t * , wait_queue_t * ) ;
> #line 163 "include/linux/rcupdate.h"
> __inline static void __rcu_read_lock___7(void) 
> { 
>   struct thread_info *tmp ;
> 
>   {
> #line 165
>   tmp = current_thread_info___7();
> #line 165
>   tmp->preempt_count = tmp->preempt_count + 1;
> #line 165
>   __asm__  volatile   ("": : : "memory");
> #line 166
>   return;
> }
> }
> #line 168 "include/linux/rcupdate.h"
> __inline static void __rcu_read_unlock___7(void) 
> { 
>   struct thread_info *tmp ;
> 
>   {
> #line 170
>   __asm__  volatile   ("": : : "memory");
> #line 170
>   tmp = current_thread_info___7();
> #line 170
>   tmp->preempt_count = tmp->preempt_count + -1;
> #line 170
>   __asm__  volatile   ("": : : "memory");
> #line 171
>   return;
> }
> }
> #line 732 "include/linux/rcupdate.h"
> __inline static void rcu_read_lock___7(void) 
> { 
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
> 
>   {
> #line 734
>   __rcu_read_lock___7();
> #line 736
>   rcu_lock_acquire(& rcu_lock_map);
> #line 737
>   tmp = debug_lockdep_rcu_enabled();
> #line 737
>   if (tmp != 0 && ! __warned) {
> #line 737
>     tmp___0 = rcu_is_cpu_idle();
> #line 737
>     if (tmp___0 != 0) {
> #line 737
>       __warned = 1;
> #line 737
>       lockdep_rcu_suspicious("include/linux/rcupdate.h", 738, "rcu_read_lock() used illegally while idle");
>     } else {
> 
>     }
>   } else {
> 
57339,57372c64522,64550
<   ldv_53712: 
< #line 85
<   tmp___22 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p___29 = (void *)tmp___22;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___29) = 4U;
< #line 85
<   goto ldv_53719;
<   case 2UL: 
< #line 85
<   put_unaligned_le16(4, __gu_p___29);
< #line 85
<   goto ldv_53719;
<   case 4UL: 
< #line 85
<   put_unaligned_le32(4U, __gu_p___29);
< #line 85
<   goto ldv_53719;
<   case 8UL: 
< #line 85
<   put_unaligned_le64(4ULL, __gu_p___29);
< #line 85
<   goto ldv_53719;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53719;
---
> #line 740
>   return;
> }
> }
> #line 756 "include/linux/rcupdate.h"
> __inline static void rcu_read_unlock___7(void) 
> { 
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
> 
>   {
> #line 758
>   tmp = debug_lockdep_rcu_enabled();
> #line 758
>   if (tmp != 0 && ! __warned) {
> #line 758
>     tmp___0 = rcu_is_cpu_idle();
> #line 758
>     if (tmp___0 != 0) {
> #line 758
>       __warned = 1;
> #line 758
>       lockdep_rcu_suspicious("include/linux/rcupdate.h", 759, "rcu_read_unlock() used illegally while idle");
>     } else {
> 
>     }
>   } else {
> 
57374,57403c64552,64646
<   ldv_53719: 
< #line 85
<   __gu_p___30 = (void *)tags;
< #line 85
<   switch (4UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___30) = (unsigned char )arg->c_max_rate;
< #line 85
<   goto ldv_53726;
<   case 2UL: 
< #line 85
<   put_unaligned_le16((int )((unsigned short )arg->c_max_rate), __gu_p___30);
< #line 85
<   goto ldv_53726;
<   case 4UL: 
< #line 85
<   put_unaligned_le32((unsigned int )arg->c_max_rate, __gu_p___30);
< #line 85
<   goto ldv_53726;
<   case 8UL: 
< #line 85
<   put_unaligned_le64((unsigned long long )arg->c_max_rate, __gu_p___30);
< #line 85
<   goto ldv_53726;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53726;
---
> #line 760
>   rcu_lock_release(& rcu_lock_map);
> #line 762
>   __rcu_read_unlock___7();
> #line 763
>   return;
> }
> }
> #line 123 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_state.h"
> void print_st_err(struct drbd_conf *mdev , union drbd_state os , union drbd_state ns ,
>                   enum drbd_state_rv err ) ;
> #line 157
> enum drbd_disk_state conn_lowest_disk(struct drbd_tconn *tconn ) ;
> #line 159
> enum drbd_conns conn_lowest_conn(struct drbd_tconn *tconn ) ;
> #line 1937 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static void drbd_thread_stop_nowait(struct drbd_thread *thi ) 
> { 
> 
> 
>   {
> #line 1939
>   _drbd_thread_stop(thi, 0, 0);
> #line 1940
>   return;
> }
> }
> #line 1942 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/block/drbd/drbd_int.h"
> __inline static void drbd_thread_restart_nowait(struct drbd_thread *thi ) 
> { 
> 
> 
>   {
> #line 1944
>   _drbd_thread_stop(thi, 1, 0);
> #line 1945
>   return;
> }
> }
> #line 139 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> static int w_after_state_ch(struct drbd_work *w , int unused ) ;
> #line 140
> static void after_state_ch(struct drbd_conf *mdev , union drbd_state os , union drbd_state ns ,
>                            enum chg_state_flags flags ) ;
> #line 142
> static enum drbd_state_rv is_valid_state(struct drbd_conf *mdev , union drbd_state ns ) ;
> #line 143
> static enum drbd_state_rv is_valid_soft_transition(union drbd_state os , union drbd_state ns ,
>                                                    struct drbd_tconn *tconn ) ;
> #line 144
> static enum drbd_state_rv is_valid_transition(union drbd_state os , union drbd_state ns ) ;
> #line 145
> static union drbd_state sanitize_state(struct drbd_conf *mdev , union drbd_state ns ,
>                                        enum sanitize_state_warnings *warn ) ;
> #line 148 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> __inline static bool is_susp(union drbd_state s ) 
> { 
> 
> 
>   {
> #line 150
>   return ((bool )(((unsigned int )*((unsigned char *)(& s) + 2UL) != 0U || (unsigned int )*((unsigned char *)(& s) + 2UL) != 0U) || (unsigned int )*((unsigned char *)(& s) + 2UL) != 0U));
> }
> }
> #line 153 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> bool conn_all_vols_unconf(struct drbd_tconn *tconn ) 
> { 
>   struct drbd_conf *mdev ;
>   bool rv ;
>   int vnr ;
>   void *tmp ;
>   void *tmp___0 ;
> 
>   {
> #line 156
>   rv = 1;
> #line 159
>   rcu_read_lock___7();
> #line 160
>   vnr = 0;
> #line 160
>   tmp = idr_get_next(& tconn->volumes, & vnr);
> #line 160
>   mdev = (struct drbd_conf *)tmp;
> #line 160
>   goto ldv_52059;
>   ldv_52058: ;
> #line 161
>   if (((unsigned int )*((unsigned char *)mdev + 749UL) != 0U || (unsigned int )*((unsigned short *)mdev + 374UL) != 0U) || (unsigned int )*((unsigned char *)mdev + 748UL) != 2U) {
> #line 164
>     rv = 0;
> #line 165
>     goto ldv_52057;
>   } else {
> 
57405,57440c64648,64660
<   ldv_53726: 
< #line 85
<   tags = tags + 4U;
< #line 85
<   tmp___23 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p___31 = (void *)tmp___23;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___31) = 80U;
< #line 85
<   goto ldv_53733;
<   case 2UL: 
< #line 85
<   put_unaligned_le16(80, __gu_p___31);
< #line 85
<   goto ldv_53733;
<   case 4UL: 
< #line 85
<   put_unaligned_le32(80U, __gu_p___31);
< #line 85
<   goto ldv_53733;
<   case 8UL: 
< #line 85
<   put_unaligned_le64(80ULL, __gu_p___31);
< #line 85
<   goto ldv_53733;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53733;
---
> #line 160
>   vnr = vnr + 1;
> #line 160
>   tmp___0 = idr_get_next(& tconn->volumes, & vnr);
> #line 160
>   mdev = (struct drbd_conf *)tmp___0;
>   ldv_52059: ;
> #line 160
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 161
>     goto ldv_52058;
>   } else {
> 
57442,57475c64662,64680
<   ldv_53733: 
< #line 85
<   tmp___24 = tags;
< #line 85
<   tags = tags + 1;
< #line 85
<   __gu_p___32 = (void *)tmp___24;
< #line 85
<   switch (2UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___32) = 4U;
< #line 85
<   goto ldv_53740;
<   case 2UL: 
< #line 85
<   put_unaligned_le16(4, __gu_p___32);
< #line 85
<   goto ldv_53740;
<   case 4UL: 
< #line 85
<   put_unaligned_le32(4U, __gu_p___32);
< #line 85
<   goto ldv_53740;
<   case 8UL: 
< #line 85
<   put_unaligned_le64(4ULL, __gu_p___32);
< #line 85
<   goto ldv_53740;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53740;
---
>   ldv_52057: 
> #line 168
>   rcu_read_unlock___7();
> #line 170
>   return (rv);
> }
> }
> #line 175 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> static enum drbd_role max_role(enum drbd_role role1 , enum drbd_role role2 ) 
> { 
> 
> 
>   {
> #line 177
>   if ((unsigned int )role1 == 1U || (unsigned int )role2 == 1U) {
> #line 178
>     return (R_PRIMARY);
>   } else {
> 
57477,57506c64682,64687
<   ldv_53740: 
< #line 85
<   __gu_p___33 = (void *)tags;
< #line 85
<   switch (4UL) {
<   case 1UL: 
< #line 85
<   *((u8 *)__gu_p___33) = (unsigned char )arg->c_min_rate;
< #line 85
<   goto ldv_53747;
<   case 2UL: 
< #line 85
<   put_unaligned_le16((int )((unsigned short )arg->c_min_rate), __gu_p___33);
< #line 85
<   goto ldv_53747;
<   case 4UL: 
< #line 85
<   put_unaligned_le32((unsigned int )arg->c_min_rate, __gu_p___33);
< #line 85
<   goto ldv_53747;
<   case 8UL: 
< #line 85
<   put_unaligned_le64((unsigned long long )arg->c_min_rate, __gu_p___33);
< #line 85
<   goto ldv_53747;
<   default: 
< #line 85
<   __bad_unaligned_access_size();
< #line 85
<   goto ldv_53747;
---
> #line 179
>   if ((unsigned int )role1 == 2U || (unsigned int )role2 == 2U) {
> #line 180
>     return (R_SECONDARY);
>   } else {
> 
57508,57512c64689,64690
<   ldv_53747: 
< #line 85
<   tags = tags + 4U;
< #line 85
<   return (tags);
---
> #line 181
>   return (R_UNKNOWN);
57515,57526c64693,64696
< #line 116
< static unsigned short *get_state_to_tags(struct drbd_conf *mdev , struct get_state *arg ,
<                                          unsigned short *tags ) ;
< #line 116 "include/linux/drbd_nl.h"
< static unsigned short *get_state_to_tags(struct drbd_conf *mdev , struct get_state *arg ,
<                                          unsigned short *tags ) 
< { 
<   void *__gu_p ;
<   unsigned short *tmp ;
<   void *__gu_p___0 ;
<   unsigned short *tmp___0 ;
<   void *__gu_p___1 ;
---
> #line 183 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> static enum drbd_role min_role(enum drbd_role role1 , enum drbd_role role2 ) 
> { 
> 
57529,57561c64699,64704
< #line 114
<   tmp = tags;
< #line 114
<   tags = tags + 1;
< #line 114
<   __gu_p = (void *)tmp;
< #line 114
<   switch (2UL) {
<   case 1UL: 
< #line 114
<   *((u8 *)__gu_p) = 33U;
< #line 114
<   goto ldv_53835;
<   case 2UL: 
< #line 114
<   put_unaligned_le16(33, __gu_p);
< #line 114
<   goto ldv_53835;
<   case 4UL: 
< #line 114
<   put_unaligned_le32(33U, __gu_p);
< #line 114
<   goto ldv_53835;
<   case 8UL: 
< #line 114
<   put_unaligned_le64(33ULL, __gu_p);
< #line 114
<   goto ldv_53835;
<   default: 
< #line 114
<   __bad_unaligned_access_size();
< #line 114
<   goto ldv_53835;
---
> #line 185
>   if ((unsigned int )role1 == 0U || (unsigned int )role2 == 0U) {
> #line 186
>     return (R_UNKNOWN);
>   } else {
> 
57563,57596c64706,64711
<   ldv_53835: 
< #line 114
<   tmp___0 = tags;
< #line 114
<   tags = tags + 1;
< #line 114
<   __gu_p___0 = (void *)tmp___0;
< #line 114
<   switch (2UL) {
<   case 1UL: 
< #line 114
<   *((u8 *)__gu_p___0) = 4U;
< #line 114
<   goto ldv_53842;
<   case 2UL: 
< #line 114
<   put_unaligned_le16(4, __gu_p___0);
< #line 114
<   goto ldv_53842;
<   case 4UL: 
< #line 114
<   put_unaligned_le32(4U, __gu_p___0);
< #line 114
<   goto ldv_53842;
<   case 8UL: 
< #line 114
<   put_unaligned_le64(4ULL, __gu_p___0);
< #line 114
<   goto ldv_53842;
<   default: 
< #line 114
<   __bad_unaligned_access_size();
< #line 114
<   goto ldv_53842;
---
> #line 187
>   if ((unsigned int )role1 == 2U || (unsigned int )role2 == 2U) {
> #line 188
>     return (R_SECONDARY);
>   } else {
> 
57598,57627c64713,64754
<   ldv_53842: 
< #line 114
<   __gu_p___1 = (void *)tags;
< #line 114
<   switch (4UL) {
<   case 1UL: 
< #line 114
<   *((u8 *)__gu_p___1) = (unsigned char )arg->state_i;
< #line 114
<   goto ldv_53849;
<   case 2UL: 
< #line 114
<   put_unaligned_le16((int )((unsigned short )arg->state_i), __gu_p___1);
< #line 114
<   goto ldv_53849;
<   case 4UL: 
< #line 114
<   put_unaligned_le32((unsigned int )arg->state_i, __gu_p___1);
< #line 114
<   goto ldv_53849;
<   case 8UL: 
< #line 114
<   put_unaligned_le64((unsigned long long )arg->state_i, __gu_p___1);
< #line 114
<   goto ldv_53849;
<   default: 
< #line 114
<   __bad_unaligned_access_size();
< #line 114
<   goto ldv_53849;
---
> #line 189
>   return (R_PRIMARY);
> }
> }
> #line 192 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> enum drbd_role conn_highest_role(struct drbd_tconn *tconn ) 
> { 
>   enum drbd_role role ;
>   struct drbd_conf *mdev ;
>   int vnr ;
>   void *tmp ;
>   void *tmp___0 ;
> 
>   {
> #line 194
>   role = R_UNKNOWN;
> #line 198
>   rcu_read_lock___7();
> #line 199
>   vnr = 0;
> #line 199
>   tmp = idr_get_next(& tconn->volumes, & vnr);
> #line 199
>   mdev = (struct drbd_conf *)tmp;
> #line 199
>   goto ldv_52075;
>   ldv_52074: 
> #line 200
>   role = max_role(role, (enum drbd_role )mdev->state.ldv_49522.role);
> #line 199
>   vnr = vnr + 1;
> #line 199
>   tmp___0 = idr_get_next(& tconn->volumes, & vnr);
> #line 199
>   mdev = (struct drbd_conf *)tmp___0;
>   ldv_52075: ;
> #line 199
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 200
>     goto ldv_52074;
>   } else {
> 
57629,57633c64756,64759
<   ldv_53849: 
< #line 114
<   tags = tags + 4U;
< #line 114
<   return (tags);
---
> #line 201
>   rcu_read_unlock___7();
> #line 203
>   return (role);
57636,57641c64762,64763
< #line 206 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void drbd_bcast_ev_helper(struct drbd_conf *mdev , char *helper_name ) ;
< #line 207
< void drbd_nl_send_reply(struct cn_msg *req , int ret_code ) ;
< #line 209 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< int drbd_khelper(struct drbd_conf *mdev , char *cmd ) 
---
> #line 206 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> enum drbd_role conn_highest_peer(struct drbd_tconn *tconn ) 
57643,57653c64765,64769
<   char *envp[6U] ;
<   char mb[12U] ;
<   char af[20U] ;
<   char ad[60U] ;
<   char *afs ;
<   char *argv[4U] ;
<   int ret ;
<   struct task_struct *tmp ;
<   unsigned int tmp___0 ;
<   int tmp___1 ;
<   struct task_struct *tmp___2 ;
---
>   enum drbd_role peer ;
>   struct drbd_conf *mdev ;
>   int vnr ;
>   void *tmp ;
>   void *tmp___0 ;
57656,57681c64772,64797
< #line 211
<   envp[0] = (char *)"HOME=/";
< #line 211
<   envp[1] = (char *)"TERM=linux";
< #line 211
<   envp[2] = (char *)"PATH=/sbin:/usr/sbin:/bin:/usr/bin";
< #line 211
<   envp[3] = 0;
< #line 211
<   envp[4] = 0;
< #line 211
<   envp[5] = 0;
< #line 219
<   argv[0] = (char *)(& usermode_helper);
< #line 219
<   argv[1] = cmd;
< #line 219
<   argv[2] = (char *)(& mb);
< #line 219
<   argv[3] = 0;
< #line 222
<   tmp = get_current();
< #line 222
<   if ((unsigned long )tmp == (unsigned long )mdev->worker.task) {
< #line 223
<     drbd_set_flag(mdev, CALLBACK_PENDING);
---
> #line 208
>   peer = R_UNKNOWN;
> #line 212
>   rcu_read_lock___7();
> #line 213
>   vnr = 0;
> #line 213
>   tmp = idr_get_next(& tconn->volumes, & vnr);
> #line 213
>   mdev = (struct drbd_conf *)tmp;
> #line 213
>   goto ldv_52084;
>   ldv_52083: 
> #line 214
>   peer = max_role(peer, (enum drbd_role )mdev->state.ldv_49522.peer);
> #line 213
>   vnr = vnr + 1;
> #line 213
>   tmp___0 = idr_get_next(& tconn->volumes, & vnr);
> #line 213
>   mdev = (struct drbd_conf *)tmp___0;
>   ldv_52084: ;
> #line 213
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 214
>     goto ldv_52083;
57685,57688c64801,64822
< #line 225
<   tmp___0 = mdev_to_minor(mdev);
< #line 225
<   snprintf((char *)(& mb), 12UL, "minor-%d", tmp___0);
---
> #line 215
>   rcu_read_unlock___7();
> #line 217
>   return (peer);
> }
> }
> #line 220 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> enum drbd_disk_state conn_highest_disk(struct drbd_tconn *tconn ) 
> { 
>   enum drbd_disk_state ds ;
>   struct drbd_conf *mdev ;
>   int vnr ;
>   void *tmp ;
>   enum drbd_disk_state __max1 ;
>   enum drbd_disk_state __max2 ;
>   void *tmp___0 ;
> 
>   {
> #line 222
>   ds = D_DISKLESS;
> #line 226
>   rcu_read_lock___7();
57690c64824
<   tmp___1 = get_net_conf(mdev);
---
>   vnr = 0;
57692c64826,64831
<   if (tmp___1 != 0) {
---
>   tmp = idr_get_next(& tconn->volumes, & vnr);
> #line 227
>   mdev = (struct drbd_conf *)tmp;
> #line 227
>   goto ldv_52096;
>   ldv_52095: 
57694,57697c64833,64853
<     switch ((int )((struct sockaddr *)(& (mdev->net_conf)->peer_addr))->sa_family) {
<     case 10: 
< #line 230
<     afs = (char *)"ipv6";
---
>   __max1 = ds;
> #line 228
>   __max2 = (enum drbd_disk_state )mdev->state.ldv_49522.disk;
> #line 228
>   ds = (enum drbd_disk_state )((unsigned int )__max1 > (unsigned int )__max2 ? (unsigned int )__max1 : (unsigned int )__max2);
> #line 227
>   vnr = vnr + 1;
> #line 227
>   tmp___0 = idr_get_next(& tconn->volumes, & vnr);
> #line 227
>   mdev = (struct drbd_conf *)tmp___0;
>   ldv_52096: ;
> #line 227
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 228
>     goto ldv_52095;
>   } else {
> 
>   }
> #line 229
>   rcu_read_unlock___7();
57699,57704c64855,64869
<     snprintf((char *)(& ad), 60UL, "DRBD_PEER_ADDRESS=%pI6", & ((struct sockaddr_in6 *)(& (mdev->net_conf)->peer_addr))->sin6_addr);
< #line 233
<     goto ldv_54191;
<     case 2: 
< #line 235
<     afs = (char *)"ipv4";
---
>   return (ds);
> }
> }
> #line 234 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> enum drbd_disk_state conn_lowest_disk(struct drbd_tconn *tconn ) 
> { 
>   enum drbd_disk_state ds ;
>   struct drbd_conf *mdev ;
>   int vnr ;
>   void *tmp ;
>   enum drbd_disk_state __min1 ;
>   enum drbd_disk_state __min2 ;
>   void *tmp___0 ;
> 
>   {
57706,57709c64871
<     snprintf((char *)(& ad), 60UL, "DRBD_PEER_ADDRESS=%pI4", & ((struct sockaddr_in *)(& (mdev->net_conf)->peer_addr))->sin_addr);
< #line 238
<     goto ldv_54191;
<     default: 
---
>   ds = D_MASK;
57711c64873
<     afs = (char *)"ssocks";
---
>   rcu_read_lock___7();
57713,57723c64875,64899
<     snprintf((char *)(& ad), 60UL, "DRBD_PEER_ADDRESS=%pI4", & ((struct sockaddr_in *)(& (mdev->net_conf)->peer_addr))->sin_addr);
<     }
<     ldv_54191: 
< #line 244
<     snprintf((char *)(& af), 20UL, "DRBD_PEER_AF=%s", afs);
< #line 245
<     envp[3] = (char *)(& af);
< #line 246
<     envp[4] = (char *)(& ad);
< #line 247
<     put_net_conf(mdev);
---
>   vnr = 0;
> #line 241
>   tmp = idr_get_next(& tconn->volumes, & vnr);
> #line 241
>   mdev = (struct drbd_conf *)tmp;
> #line 241
>   goto ldv_52108;
>   ldv_52107: 
> #line 242
>   __min1 = ds;
> #line 242
>   __min2 = (enum drbd_disk_state )mdev->state.ldv_49522.disk;
> #line 242
>   ds = (enum drbd_disk_state )((unsigned int )__min1 < (unsigned int )__min2 ? (unsigned int )__min1 : (unsigned int )__min2);
> #line 241
>   vnr = vnr + 1;
> #line 241
>   tmp___0 = idr_get_next(& tconn->volumes, & vnr);
> #line 241
>   mdev = (struct drbd_conf *)tmp___0;
>   ldv_52108: ;
> #line 241
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 242
>     goto ldv_52107;
57727,57728c64903,64922
< #line 252
<   drbd_md_sync(mdev);
---
> #line 243
>   rcu_read_unlock___7();
> #line 245
>   return (ds);
> }
> }
> #line 248 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> enum drbd_disk_state conn_highest_pdsk(struct drbd_tconn *tconn ) 
> { 
>   enum drbd_disk_state ds ;
>   struct drbd_conf *mdev ;
>   int vnr ;
>   void *tmp ;
>   enum drbd_disk_state __max1 ;
>   enum drbd_disk_state __max2 ;
>   void *tmp___0 ;
> 
>   {
> #line 250
>   ds = D_DISKLESS;
57730,57731c64924,64933
<   _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "helper command: %s %s %s\n",
<             (char *)(& usermode_helper), cmd, (char *)(& mb));
---
>   rcu_read_lock___7();
> #line 255
>   vnr = 0;
> #line 255
>   tmp = idr_get_next(& tconn->volumes, & vnr);
> #line 255
>   mdev = (struct drbd_conf *)tmp;
> #line 255
>   goto ldv_52120;
>   ldv_52119: 
57733,57753c64935,64950
<   drbd_bcast_ev_helper(mdev, cmd);
< #line 257
<   ret = call_usermodehelper((char *)(& usermode_helper), (char **)(& argv), (char **)(& envp),
<                             2);
< #line 258
<   if (ret != 0) {
< #line 259
<     dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "helper command: %s %s %s exit code %u (0x%x)\n",
<              (char *)(& usermode_helper), cmd, (char *)(& mb), (ret >> 8) & 255, ret);
<   } else {
< #line 263
<     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "helper command: %s %s %s exit code %u (0x%x)\n",
<               (char *)(& usermode_helper), cmd, (char *)(& mb), (ret >> 8) & 255,
<               ret);
<   }
< #line 267
<   tmp___2 = get_current();
< #line 267
<   if ((unsigned long )tmp___2 == (unsigned long )mdev->worker.task) {
< #line 268
<     drbd_clear_flag(mdev, CALLBACK_PENDING);
---
>   __max1 = ds;
> #line 256
>   __max2 = (enum drbd_disk_state )mdev->state.ldv_49522.pdsk;
> #line 256
>   ds = (enum drbd_disk_state )((unsigned int )__max1 > (unsigned int )__max2 ? (unsigned int )__max1 : (unsigned int )__max2);
> #line 255
>   vnr = vnr + 1;
> #line 255
>   tmp___0 = idr_get_next(& tconn->volumes, & vnr);
> #line 255
>   mdev = (struct drbd_conf *)tmp___0;
>   ldv_52120: ;
> #line 255
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 256
>     goto ldv_52119;
57756a64954,64984
> #line 257
>   rcu_read_unlock___7();
> #line 259
>   return (ds);
> }
> }
> #line 262 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> enum drbd_conns conn_lowest_conn(struct drbd_tconn *tconn ) 
> { 
>   enum drbd_conns conn ;
>   struct drbd_conf *mdev ;
>   int vnr ;
>   void *tmp ;
>   enum drbd_conns __min1 ;
>   enum drbd_conns __min2 ;
>   void *tmp___0 ;
> 
>   {
> #line 264
>   conn = C_MASK;
> #line 268
>   rcu_read_lock___7();
> #line 269
>   vnr = 0;
> #line 269
>   tmp = idr_get_next(& tconn->volumes, & vnr);
> #line 269
>   mdev = (struct drbd_conf *)tmp;
> #line 269
>   goto ldv_52132;
>   ldv_52131: 
57758,57760c64986,65001
<   if (ret < 0) {
< #line 271
<     ret = 0;
---
>   __min1 = conn;
> #line 270
>   __min2 = (enum drbd_conns )mdev->state.ldv_49522.conn;
> #line 270
>   conn = (enum drbd_conns )((unsigned int )__min1 < (unsigned int )__min2 ? (unsigned int )__min1 : (unsigned int )__min2);
> #line 269
>   vnr = vnr + 1;
> #line 269
>   tmp___0 = idr_get_next(& tconn->volumes, & vnr);
> #line 269
>   mdev = (struct drbd_conf *)tmp___0;
>   ldv_52132: ;
> #line 269
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 270
>     goto ldv_52131;
57763a65005,65006
> #line 271
>   rcu_read_unlock___7();
57765c65008
<   return (ret);
---
>   return (conn);
57768,57769c65011,65012
< #line 276 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< enum drbd_disk_state drbd_try_outdate_peer(struct drbd_conf *mdev ) 
---
> #line 276 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> static bool no_peer_wf_report_params(struct drbd_tconn *tconn ) 
57771,57779c65014,65018
<   char *ex_to_string ;
<   int r ;
<   enum drbd_disk_state nps ;
<   enum drbd_fencing_p fp ;
<   int tmp ;
<   union drbd_state val ;
<   union drbd_state mask ;
<   union drbd_state val___0 ;
<   union drbd_state mask___0 ;
---
>   struct drbd_conf *mdev ;
>   int vnr ;
>   bool rv ;
>   void *tmp ;
>   void *tmp___0 ;
57781a65021,65024
> #line 280
>   rv = 1;
> #line 282
>   rcu_read_lock___7();
57783c65026
<   if (*((unsigned int *)mdev + 569UL) != 49152U) {
---
>   vnr = 0;
57785,57792c65028,65035
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mdev->state.pdsk == D_UNKNOWN ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared",
<             283);
<   } else {
< 
<   }
< #line 285
<   tmp = _get_ldev_if_state(mdev, D_CONSISTENT);
---
>   tmp = idr_get_next(& tconn->volumes, & vnr);
> #line 283
>   mdev = (struct drbd_conf *)tmp;
> #line 283
>   goto ldv_52142;
>   ldv_52141: ;
> #line 284
>   if ((unsigned int )*((unsigned short *)mdev + 374UL) == 144U) {
57794c65037
<   if (tmp != 0) {
---
>     rv = 0;
57796,57798c65039
<     fp = (enum drbd_fencing_p )(mdev->ldev)->dc.fencing;
< #line 287
<     put_ldev(mdev);
---
>     goto ldv_52140;
57800,57805c65041
< #line 289
<     dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Not fencing peer, I\'m not even Consistent myself.\n");
< #line 290
<     nps = (enum drbd_disk_state )mdev->state.ldv_39979.pdsk;
< #line 291
<     goto out;
---
> 
57807,57831c65043,65053
< #line 294
<   r = drbd_khelper(mdev, (char *)"fence-peer");
< #line 296
<   switch ((r >> 8) & 255) {
<   case 3: 
< #line 298
<   ex_to_string = (char *)"peer is inconsistent or worse";
< #line 299
<   nps = D_INCONSISTENT;
< #line 300
<   goto ldv_54203;
<   case 4: 
< #line 302
<   ex_to_string = (char *)"peer was fenced";
< #line 303
<   nps = D_OUTDATED;
< #line 304
<   goto ldv_54203;
<   case 5: ;
< #line 306
<   if ((unsigned int )*((unsigned char *)mdev + 2277UL) == 16U) {
< #line 308
<     ex_to_string = (char *)"peer is unreachable, assumed to be dead";
< #line 309
<     nps = D_OUTDATED;
---
> #line 283
>   vnr = vnr + 1;
> #line 283
>   tmp___0 = idr_get_next(& tconn->volumes, & vnr);
> #line 283
>   mdev = (struct drbd_conf *)tmp___0;
>   ldv_52142: ;
> #line 283
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 284
>     goto ldv_52141;
57833,57836c65055
< #line 311
<     ex_to_string = (char *)"peer unreachable, doing nothing since disk != UpToDate";
< #line 312
<     nps = (enum drbd_disk_state )mdev->state.ldv_39979.pdsk;
---
> 
57838,57840c65057,65082
< #line 314
<   goto ldv_54203;
<   case 6: 
---
>   ldv_52140: 
> #line 288
>   rcu_read_unlock___7();
> #line 290
>   return (rv);
> }
> }
> #line 300 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> static int cl_wide_st_chg(struct drbd_conf *mdev , union drbd_state os , union drbd_state ns ) 
> { 
> 
> 
>   {
> #line 303
>   return ((((((int )os.ldv_40024.conn > 9 && (int )ns.ldv_40024.conn > 9) && (((((unsigned int )*((unsigned char *)(& os) + 0UL) != 1U && (unsigned int )*((unsigned char *)(& ns) + 0UL) == 1U) || ((unsigned int )*((unsigned short *)(& os) + 0UL) != 192U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 192U)) || ((unsigned int )*((unsigned short *)(& os) + 0UL) != 176U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 176U)) || ((unsigned int )*((unsigned char *)(& os) + 1UL) != 4U && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 4U))) || ((int )os.ldv_40024.conn > 9 && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 16U)) || ((unsigned int )*((unsigned short *)(& os) + 0UL) == 160U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 288U)) || ((unsigned int )*((unsigned short *)(& os) + 0UL) == 160U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 144U));
> }
> }
> #line 314 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> static union drbd_state apply_mask_val(union drbd_state os , union drbd_state mask ,
>                                        union drbd_state val ) 
> { 
>   union drbd_state ns ;
> 
>   {
> #line 317
>   ns.i = (os.i & ~ mask.i) | val.i;
57842,57864c65084,65095
<   ex_to_string = (char *)"peer is active";
< #line 319
<   dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Peer is primary, outdating myself.\n");
< #line 320
<   nps = D_UNKNOWN;
< #line 321
<   val.i = 0U;
< #line 321
<   val.ldv_39979.disk = 5U;
< #line 321
<   mask.i = 0U;
< #line 321
<   mask.ldv_39979.disk = 15U;
< #line 321
<   _drbd_request_state(mdev, mask, val, CS_WAIT_COMPLETE);
< #line 322
<   goto ldv_54203;
<   case 7: ;
< #line 324
<   if ((unsigned int )fp != 2U) {
< #line 325
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "fence-peer() = 7 && fencing != Stonith !!!\n");
<   } else {
---
>   return (ns);
> }
> }
> #line 322 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> enum drbd_state_rv drbd_change_state(struct drbd_conf *mdev , enum chg_state_flags f ,
>                                      union drbd_state mask , union drbd_state val ) 
> { 
>   unsigned long flags ;
>   union drbd_state ns ;
>   enum drbd_state_rv rv ;
>   raw_spinlock_t *tmp ;
>   union drbd_state tmp___0 ;
57866,57873c65097,65105
<   }
< #line 326
<   ex_to_string = (char *)"peer was stonithed";
< #line 327
<   nps = D_OUTDATED;
< #line 328
<   goto ldv_54203;
<   default: 
---
>   {
> #line 329
>   tmp = spinlock_check(& (mdev->tconn)->req_lock);
> #line 329
>   flags = _raw_spin_lock_irqsave(tmp);
> #line 330
>   tmp___0 = drbd_read_state(mdev);
> #line 330
>   ns = apply_mask_val(tmp___0, mask, val);
57875c65107
<   nps = D_UNKNOWN;
---
>   rv = _drbd_set_state(mdev, ns, f, 0);
57877,57899c65109,65116
<   dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "fence-peer helper broken, returned %d\n",
<           (r >> 8) & 255);
< #line 333
<   return (nps);
<   }
<   ldv_54203: 
< #line 336
<   _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "fence-peer helper returned %d (%s)\n",
<             (r >> 8) & 255, ex_to_string);
<   out: ;
< #line 340
<   if ((unsigned int )*((unsigned char *)mdev + 2278UL) != 0U && (unsigned int )nps > 5U) {
< #line 343
<     val___0.i = 0U;
< #line 343
<     val___0.ldv_39979.susp_fen = 0U;
< #line 343
<     mask___0.i = 0U;
< #line 343
<     mask___0.ldv_39979.susp_fen = 1U;
< #line 343
<     _drbd_request_state(mdev, mask___0, val___0, CS_VERBOSE);
<   } else {
---
>   spin_unlock_irqrestore(& (mdev->tconn)->req_lock, flags);
> #line 334
>   return (rv);
> }
> }
> #line 343 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> void drbd_force_state(struct drbd_conf *mdev , union drbd_state mask , union drbd_state val ) 
> { 
57901c65118,65119
<   }
---
> 
>   {
57903c65121,65123
<   return (nps);
---
>   drbd_change_state(mdev, CS_HARD, mask, val);
> #line 347
>   return;
57906,57907c65126,65128
< #line 349 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static int _try_outdate_peer_async(void *data ) 
---
> #line 350 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> static enum drbd_state_rv _req_st_cond(struct drbd_conf *mdev , union drbd_state mask ,
>                                        union drbd_state val ) 
57909,57910c65130
<   struct drbd_conf *mdev ;
<   enum drbd_disk_state nps ;
---
>   union drbd_state os ;
57911a65132,65133
>   unsigned long flags ;
>   enum drbd_state_rv rv ;
57912a65135,65138
>   int tmp___0 ;
>   raw_spinlock_t *tmp___1 ;
>   union drbd_state tmp___2 ;
>   int tmp___3 ;
57915,57918c65141,65172
< #line 351
<   mdev = (struct drbd_conf *)data;
< #line 355
<   nps = drbd_try_outdate_peer(mdev);
---
> #line 357
>   tmp = test_and_clear_bit(3, (unsigned long volatile   *)(& mdev->flags));
> #line 357
>   if (tmp != 0) {
> #line 358
>     return (SS_CW_SUCCESS);
>   } else {
> 
>   }
> #line 360
>   tmp___0 = test_and_clear_bit(4, (unsigned long volatile   *)(& mdev->flags));
> #line 360
>   if (tmp___0 != 0) {
> #line 361
>     return (SS_CW_FAILED_BY_PEER);
>   } else {
> 
>   }
> #line 363
>   tmp___1 = spinlock_check(& (mdev->tconn)->req_lock);
> #line 363
>   flags = _raw_spin_lock_irqsave(tmp___1);
> #line 364
>   os = drbd_read_state(mdev);
> #line 365
>   tmp___2 = apply_mask_val(os, mask, val);
> #line 365
>   ns = sanitize_state(mdev, tmp___2, 0);
> #line 366
>   rv = is_valid_transition(os, ns);
> #line 367
>   if ((int )rv > 0) {
57920,57924c65174,65177
<   spin_lock_irq(& mdev->req_lock);
< #line 369
<   ns = mdev->state;
< #line 370
<   if ((int )ns.ldv_39979.conn <= 8) {
---
>     rv = SS_UNKNOWN_ERROR;
>   } else {
> 
>   }
57926c65179
<     tmp = drbd_test_flag(mdev, STATE_SENT);
---
>   tmp___3 = cl_wide_st_chg(mdev, os, ns);
57928c65181
<     if (tmp == 0) {
---
>   if (tmp___3 == 0) {
57930,57935c65183
<       ns.ldv_39979.pdsk = (unsigned char )nps;
< #line 372
<       _drbd_set_state(mdev, ns, CS_VERBOSE, 0);
<     } else {
< 
<     }
---
>     rv = SS_CW_NO_NEED;
57938a65187,65190
> #line 372
>   if ((int )rv == 0) {
> #line 373
>     rv = is_valid_state(mdev, ns);
57940c65192,65194
<   spin_unlock_irq(& mdev->req_lock);
---
>     if ((int )rv > 0) {
> #line 375
>       rv = is_valid_soft_transition(os, ns, mdev->tconn);
57942,57953c65196,65199
<   return (0);
< }
< }
< #line 379 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void drbd_try_outdate_peer_async(struct drbd_conf *mdev ) 
< { 
<   struct task_struct *opa ;
<   struct task_struct *__k ;
<   unsigned int tmp ;
<   struct task_struct *tmp___0 ;
<   long tmp___1 ;
<   long tmp___2 ;
---
>       if ((int )rv > 0) {
> #line 377
>         rv = SS_UNKNOWN_ERROR;
>       } else {
57955,57969c65201,65202
<   {
< #line 383
<   tmp = mdev_to_minor(mdev);
< #line 383
<   tmp___0 = kthread_create_on_node(& _try_outdate_peer_async, (void *)mdev, -1, "drbd%d_a_helper",
<                                    tmp);
< #line 383
<   __k = tmp___0;
< #line 383
<   tmp___1 = IS_ERR((void const   *)__k);
< #line 383
<   if (tmp___1 == 0L) {
< #line 383
<     wake_up_process(__k);
<   } else {
---
>       }
>     } else {
57971,57979c65204
<   }
< #line 383
<   opa = __k;
< #line 384
<   tmp___2 = IS_ERR((void const   *)opa);
< #line 384
<   if (tmp___2 != 0L) {
< #line 385
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "out of mem, failed to invoke fence-peer helper\n");
---
>     }
57983,57984c65208,65211
< #line 386
<   return;
---
> #line 380
>   spin_unlock_irqrestore(& (mdev->tconn)->req_lock, flags);
> #line 382
>   return (rv);
57987,57989c65214,65216
< #line 389 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< enum drbd_state_rv drbd_set_role(struct drbd_conf *mdev , enum drbd_role new_role ,
<                                  int force ) 
---
> #line 396 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> static enum drbd_state_rv drbd_req_state(struct drbd_conf *mdev , union drbd_state mask ,
>                                          union drbd_state val , enum chg_state_flags f ) 
57991c65218,65221
<   int max_tries ;
---
>   struct completion done ;
>   unsigned long flags ;
>   union drbd_state os ;
>   union drbd_state ns ;
57993,57999c65223,65225
<   int try ;
<   int forced ;
<   union drbd_state mask ;
<   union drbd_state val ;
<   enum drbd_disk_state nps ;
<   int tmp ;
<   int tmp___0 ;
---
>   raw_spinlock_t *tmp ;
>   union drbd_state tmp___0 ;
>   int tmp___1 ;
58001,58004c65227,65229
<   struct task_struct *tmp___1 ;
<   int tmp___2 ;
<   int tmp___3 ;
<   int tmp___4 ;
---
>   struct task_struct *tmp___2 ;
>   raw_spinlock_t *tmp___3 ;
>   union drbd_state tmp___4 ;
58005a65231
>   struct task_struct *tmp___6 ;
58008,58030d65233
< #line 391
<   max_tries = 4;
< #line 392
<   rv = 0;
< #line 393
<   try = 0;
< #line 394
<   forced = 0;
< #line 398
<   if ((unsigned int )new_role == 1U) {
< #line 399
<     request_ping(mdev);
<   } else {
< 
<   }
< #line 401
<   ldv_mutex_lock_301(& mdev->state_mutex);
< #line 403
<   mask.i = 0U;
< #line 403
<   mask.ldv_39979.role = 3U;
< #line 404
<   val.i = 0U;
58032c65235
<   val.ldv_39979.role = (unsigned char )new_role;
---
>   init_completion(& done);
58034,58035c65237
<   goto ldv_54241;
<   ldv_54244: 
---
>   if (((unsigned int )f & 8U) != 0U) {
58037c65239,65248
<   rv = _drbd_request_state(mdev, mask, val, CS_WAIT_COMPLETE);
---
>     ldv_mutex_lock_348(mdev->state_mutex);
>   } else {
> 
>   }
> #line 409
>   tmp = spinlock_check(& (mdev->tconn)->req_lock);
> #line 409
>   flags = _raw_spin_lock_irqsave(tmp);
> #line 410
>   os = drbd_read_state(mdev);
58039c65250,65252
<   if ((int )rv == -10 && *((unsigned int *)(& mask) + 0UL) != 0U) {
---
>   tmp___0 = apply_mask_val(os, mask, val);
> #line 411
>   ns = sanitize_state(mdev, tmp___0, 0);
58041c65254
<     val.ldv_39979.pdsk = 0U;
---
>   rv = is_valid_transition(os, ns);
58043c65256
<     mask.ldv_39979.pdsk = 0U;
---
>   if ((int )rv <= 0) {
58045c65258,65260
<     goto ldv_54241;
---
>     spin_unlock_irqrestore(& (mdev->tconn)->req_lock, flags);
> #line 415
>     goto abort;
58049,58050c65264,65269
< #line 417
<   if (((int )rv == -2 && force != 0) && ((int )mdev->state.ldv_39979.disk <= 7 && (int )mdev->state.ldv_39979.disk > 3)) {
---
> #line 418
>   tmp___5 = cl_wide_st_chg(mdev, os, ns);
> #line 418
>   if (tmp___5 != 0) {
> #line 419
>     rv = is_valid_state(mdev, ns);
58052c65271
<     mask.ldv_39979.disk = 15U;
---
>     if ((int )rv == 1) {
58054,58059c65273,65274
<     val.ldv_39979.disk = 8U;
< #line 422
<     forced = 1;
< #line 423
<     goto ldv_54241;
<   } else {
---
>       rv = is_valid_soft_transition(os, ns, mdev->tconn);
>     } else {
58061c65276,65282
<   }
---
>     }
> #line 422
>     spin_unlock_irqrestore(& (mdev->tconn)->req_lock, flags);
> #line 424
>     if ((int )rv <= 0) {
> #line 425
>       if (((unsigned int )f & 2U) != 0U) {
58063,58069c65284,65289
<   if (((int )rv == -2 && (unsigned int )*((unsigned char *)mdev + 2277UL) == 14U) && *((unsigned int *)(& mask) + 0UL) == 0U) {
< #line 428
<     if (*((unsigned int *)mdev + 569UL) != 49152U) {
< #line 428
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mdev->state.pdsk == D_UNKNOWN ) in %s:%d\n",
<               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared",
<               428);
---
>         print_st_err(mdev, os, ns, (int )rv);
>       } else {
> 
>       }
> #line 427
>       goto abort;
58073,58074c65293,65296
< #line 429
<     nps = drbd_try_outdate_peer(mdev);
---
> #line 430
>     tmp___1 = drbd_send_state_req(mdev, mask, val);
> #line 430
>     if (tmp___1 != 0) {
58076c65298
<     if ((unsigned int )nps == 5U || (unsigned int )nps == 4U) {
---
>       rv = SS_CW_FAILED_BY_PEER;
58078c65300
<       val.ldv_39979.disk = 8U;
---
>       if (((unsigned int )f & 2U) != 0U) {
58080c65302,65307
<       mask.ldv_39979.disk = 15U;
---
>         print_st_err(mdev, os, ns, (int )rv);
>       } else {
> 
>       }
> #line 434
>       goto abort;
58084,58085d65310
< #line 436
<     val.ldv_39979.pdsk = (unsigned char )nps;
58087,58097c65312,65317
<     mask.ldv_39979.pdsk = 15U;
< #line 439
<     goto ldv_54241;
<   } else {
< 
<   }
< #line 442
<   if ((int )rv == 2) {
< #line 443
<     goto fail;
<   } else {
---
>     rv = _req_st_cond(mdev, mask, val);
> #line 437
>     if ((int )rv != 0) {
> #line 437
>       goto ldv_52198;
>     } else {
58099,58109c65319,65340
<   }
< #line 444
<   if ((int )rv == -7 && *((unsigned int *)(& mask) + 0UL) == 0U) {
< #line 445
<     nps = drbd_try_outdate_peer(mdev);
< #line 447
<     if (force != 0 && (unsigned int )nps > 5U) {
< #line 448
<       dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Forced into split brain situation!\n");
< #line 449
<       nps = D_OUTDATED;
---
>     }
> #line 437
>     tmp___2 = get_current();
> #line 437
>     __wait.flags = 0U;
> #line 437
>     __wait.private = (void *)tmp___2;
> #line 437
>     __wait.func = & autoremove_wake_function;
> #line 437
>     __wait.task_list.next = & __wait.task_list;
> #line 437
>     __wait.task_list.prev = & __wait.task_list;
>     ldv_52201: 
> #line 437
>     prepare_to_wait(& mdev->state_wait, & __wait, 2);
> #line 437
>     rv = _req_st_cond(mdev, mask, val);
> #line 437
>     if ((int )rv != 0) {
> #line 437
>       goto ldv_52200;
58113,58119c65344,65358
< #line 452
<     mask.ldv_39979.pdsk = 15U;
< #line 453
<     val.ldv_39979.pdsk = (unsigned char )nps;
< #line 455
<     goto ldv_54241;
<   } else {
---
> #line 437
>     schedule();
> #line 437
>     goto ldv_52201;
>     ldv_52200: 
> #line 437
>     finish_wait(& mdev->state_wait, & __wait);
>     ldv_52198: ;
> #line 440
>     if ((int )rv <= 0) {
> #line 441
>       if (((unsigned int )f & 2U) != 0U) {
> #line 442
>         print_st_err(mdev, os, ns, (int )rv);
>       } else {
58121,58129c65360,65362
<   }
< #line 457
<   if ((int )rv == -1) {
< #line 460
<     schedule_timeout_interruptible((long )((((mdev->net_conf)->ping_timeo + 1) * 250) / 10));
< #line 461
<     if (try < max_tries) {
< #line 462
<       try = max_tries + -1;
---
>       }
> #line 443
>       goto abort;
58133,58134c65366,65375
< #line 463
<     goto ldv_54241;
---
> #line 445
>     tmp___3 = spinlock_check(& (mdev->tconn)->req_lock);
> #line 445
>     flags = _raw_spin_lock_irqsave(tmp___3);
> #line 446
>     tmp___4 = drbd_read_state(mdev);
> #line 446
>     ns = apply_mask_val(tmp___4, mask, val);
> #line 447
>     rv = _drbd_set_state(mdev, ns, f, & done);
58136c65377,65378
< 
---
> #line 449
>     rv = _drbd_set_state(mdev, ns, f, & done);
58138,58145c65380,65391
< #line 465
<   if ((int )rv <= 0) {
< #line 466
<     rv = _drbd_request_state(mdev, mask, val, 6);
< #line 468
<     if ((int )rv <= 0) {
< #line 469
<       goto fail;
---
> #line 452
>   spin_unlock_irqrestore(& (mdev->tconn)->req_lock, flags);
> #line 454
>   if (((unsigned int )f & 4U) != 0U && (int )rv == 1) {
> #line 455
>     tmp___6 = get_current();
> #line 455
>     if ((unsigned long )tmp___6 == (unsigned long )(mdev->tconn)->worker.task) {
> #line 455
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( current != mdev->tconn->worker.task ) in %s:%d\n",
>               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared",
>               455);
58148a65395,65396
> #line 456
>     wait_for_completion(& done);
58152,58170c65400,65404
< #line 471
<   goto ldv_54243;
<   ldv_54241: 
< #line 406
<   tmp = try;
< #line 406
<   try = try + 1;
< #line 406
<   if (tmp < max_tries) {
< #line 407
<     goto ldv_54244;
<   } else {
< 
<   }
<   ldv_54243: ;
< #line 474
<   if ((int )rv <= 0) {
< #line 475
<     goto fail;
---
>   abort: ;
> #line 460
>   if (((unsigned int )f & 8U) != 0U) {
> #line 461
>     ldv_mutex_unlock_349(mdev->state_mutex);
58174,58178c65408,65418
< #line 477
<   if (forced != 0) {
< #line 478
<     dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Forced to consider local data as UpToDate!\n");
<   } else {
---
> #line 463
>   return (rv);
> }
> }
> #line 477 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> enum drbd_state_rv _drbd_request_state(struct drbd_conf *mdev , union drbd_state mask ,
>                                        union drbd_state val , enum chg_state_flags f ) 
> { 
>   enum drbd_state_rv rv ;
>   wait_queue_t __wait ;
>   struct task_struct *tmp ;
58180,58186c65420,65426
<   }
< #line 481
<   tmp___0 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
< #line 481
<   if (tmp___0 == 0) {
< #line 481
<     goto ldv_54245;
---
>   {
> #line 482
>   rv = drbd_req_state(mdev, mask, val, f);
> #line 482
>   if ((int )rv != -18) {
> #line 482
>     goto ldv_52212;
58190,58192c65430,65432
< #line 481
<   tmp___1 = get_current();
< #line 481
---
> #line 482
>   tmp = get_current();
> #line 482
58194,58196c65434,65436
< #line 481
<   __wait.private = (void *)tmp___1;
< #line 481
---
> #line 482
>   __wait.private = (void *)tmp;
> #line 482
58198c65438
< #line 481
---
> #line 482
58200c65440
< #line 481
---
> #line 482
58202,58210c65442,65450
<   ldv_54248: 
< #line 481
<   prepare_to_wait(& mdev->misc_wait, & __wait, 2);
< #line 481
<   tmp___2 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
< #line 481
<   if (tmp___2 == 0) {
< #line 481
<     goto ldv_54247;
---
>   ldv_52215: 
> #line 482
>   prepare_to_wait(& mdev->state_wait, & __wait, 2);
> #line 482
>   rv = drbd_req_state(mdev, mask, val, f);
> #line 482
>   if ((int )rv != -18) {
> #line 482
>     goto ldv_52214;
58214c65454
< #line 481
---
> #line 482
58216,58227c65456,65461
< #line 481
<   goto ldv_54248;
<   ldv_54247: 
< #line 481
<   finish_wait(& mdev->misc_wait, & __wait);
<   ldv_54245: ;
< #line 483
<   if ((unsigned int )new_role == 2U) {
< #line 484
<     set_disk_ro(mdev->vdisk, 1);
< #line 485
<     tmp___3 = _get_ldev_if_state(mdev, D_INCONSISTENT);
---
> #line 482
>   goto ldv_52215;
>   ldv_52214: 
> #line 482
>   finish_wait(& mdev->state_wait, & __wait);
>   ldv_52212: ;
58229,58234c65463,65474
<     if (tmp___3 != 0) {
< #line 486
<       (mdev->ldev)->md.uuid[0] = (mdev->ldev)->md.uuid[0] & 0xfffffffffffffffeULL;
< #line 487
<       put_ldev(mdev);
<     } else {
---
>   return (rv);
> }
> }
> #line 488 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> static void print_st(struct drbd_conf *mdev , char *name , union drbd_state ns ) 
> { 
>   bool tmp ;
>   char const   *tmp___0 ;
>   char const   *tmp___1 ;
>   char const   *tmp___2 ;
>   char const   *tmp___3 ;
>   char const   *tmp___4 ;
58236,58237c65476
<     }
<   } else {
---
>   {
58239c65478
<     tmp___4 = get_net_conf(mdev);
---
>   tmp = is_susp(ns);
58241,58259c65480,65503
<     if (tmp___4 != 0) {
< #line 491
<       (mdev->net_conf)->want_lose = 0U;
< #line 492
<       put_net_conf(mdev);
<     } else {
< 
<     }
< #line 494
<     set_disk_ro(mdev->vdisk, 0);
< #line 495
<     tmp___5 = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 495
<     if (tmp___5 != 0) {
< #line 496
<       if ((((int )mdev->state.ldv_39979.conn <= 9 || (int )mdev->state.ldv_39979.pdsk <= 2) && (mdev->ldev)->md.uuid[1] == 0ULL) || forced != 0) {
< #line 499
<         drbd_uuid_new_current(mdev);
<       } else {
---
>   tmp___0 = drbd_disk_str((enum drbd_disk_state )ns.ldv_40024.pdsk);
> #line 490
>   tmp___1 = drbd_disk_str((enum drbd_disk_state )ns.ldv_40024.disk);
> #line 490
>   tmp___2 = drbd_role_str((enum drbd_role )ns.ldv_40024.peer);
> #line 490
>   tmp___3 = drbd_role_str((enum drbd_role )ns.ldv_40024.role);
> #line 490
>   tmp___4 = drbd_conn_str((enum drbd_conns )ns.ldv_40024.conn);
> #line 490
>   dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), " %s = { cs:%s ro:%s/%s ds:%s/%s %c%c%c%c%c%c }\n",
>           name, tmp___4, tmp___3, tmp___2, tmp___1, tmp___0, (int )tmp ? 115 : 114,
>           (unsigned int )*((unsigned char *)(& ns) + 2UL) != 0U ? 97 : 45, (unsigned int )*((unsigned char *)(& ns) + 2UL) != 0U ? 112 : 45,
>           (unsigned int )*((unsigned char *)(& ns) + 2UL) != 0U ? 117 : 45, (unsigned int )*((unsigned char *)(& ns) + 2UL) != 0U ? 70 : 45,
>           (unsigned int )*((unsigned char *)(& ns) + 2UL) != 0U ? 78 : 45);
> #line 503
>   return;
> }
> }
> #line 506 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> void print_st_err(struct drbd_conf *mdev , union drbd_state os , union drbd_state ns ,
>                   enum drbd_state_rv err ) 
> { 
>   char const   *tmp ;
58261,58266c65505,65510
<       }
< #line 501
<       (mdev->ldev)->md.uuid[0] = (mdev->ldev)->md.uuid[0] | 1ULL;
< #line 502
<       put_ldev(mdev);
<     } else {
---
>   {
> #line 509
>   if ((int )err == -18) {
> #line 510
>     return;
>   } else {
58268d65511
<     }
58270,58271d65512
< #line 509
<   if ((int )mdev->state.ldv_39979.conn > 8) {
58273c65514,65517
<     if (forced != 0) {
---
>   tmp = drbd_set_st_err_str(err);
> #line 511
>   dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "State change failed: %s\n",
>           tmp);
58275,58278c65519
<       drbd_send_uuids(mdev);
<     } else {
< 
<     }
---
>   print_st(mdev, (char *)" state", os);
58280,58292c65521,65523
<     drbd_send_current_state(mdev);
<   } else {
< 
<   }
< #line 516
<   drbd_md_sync(mdev);
< #line 518
<   kobject_uevent(& (mdev->vdisk)->part0.__dev.kobj, KOBJ_CHANGE);
<   fail: 
< #line 520
<   ldv_mutex_unlock_302(& mdev->state_mutex);
< #line 521
<   return (rv);
---
>   print_st(mdev, (char *)"wanted", ns);
> #line 514
>   return;
58295,58296c65526,65528
< #line 524 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static struct drbd_conf *ensure_mdev(int minor , int create ) 
---
> #line 516 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> static long print_state_change(char *pb , union drbd_state os , union drbd_state ns ,
>                                enum chg_state_flags flags ) 
58298,58299c65530,65545
<   struct drbd_conf *mdev ;
<   struct gendisk *disk ;
---
>   char *pbp ;
>   char const   *tmp ;
>   char const   *tmp___0 ;
>   int tmp___1 ;
>   char const   *tmp___2 ;
>   char const   *tmp___3 ;
>   int tmp___4 ;
>   char const   *tmp___5 ;
>   char const   *tmp___6 ;
>   int tmp___7 ;
>   char const   *tmp___8 ;
>   char const   *tmp___9 ;
>   int tmp___10 ;
>   char const   *tmp___11 ;
>   char const   *tmp___12 ;
>   int tmp___13 ;
58301a65548,65566
> #line 520
>   pbp = pb;
> #line 521
>   *pbp = 0;
> #line 523
>   if ((int )ns.ldv_40024.role != (int )os.ldv_40024.role && ((unsigned int )flags & 32U) != 0U) {
> #line 524
>     tmp = drbd_role_str((enum drbd_role )ns.ldv_40024.role);
> #line 524
>     tmp___0 = drbd_role_str((enum drbd_role )os.ldv_40024.role);
> #line 524
>     tmp___1 = sprintf(pbp, "role( %s -> %s ) ", tmp___0, tmp);
> #line 524
>     pbp = pbp + (unsigned long )tmp___1;
>   } else {
> 
>   }
> #line 527
>   if ((int )ns.ldv_40024.peer != (int )os.ldv_40024.peer && ((unsigned int )flags & 64U) != 0U) {
58303,58305c65568,65574
<   if ((unsigned int )minor >= minor_count) {
< #line 529
<     return (0);
---
>     tmp___2 = drbd_role_str((enum drbd_role )ns.ldv_40024.peer);
> #line 528
>     tmp___3 = drbd_role_str((enum drbd_role )os.ldv_40024.peer);
> #line 528
>     tmp___4 = sprintf(pbp, "peer( %s -> %s ) ", tmp___3, tmp___2);
> #line 528
>     pbp = pbp + (unsigned long )tmp___4;
58310,58314c65579,65590
<   mdev = minor_to_mdev((unsigned int )minor);
< #line 533
<   if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0) && create != 0) {
< #line 534
<     disk = 0;
---
>   if ((int )ns.ldv_40024.conn != (int )os.ldv_40024.conn && ((unsigned int )flags & 128U) != 0U) {
> #line 532
>     tmp___5 = drbd_conn_str((enum drbd_conns )ns.ldv_40024.conn);
> #line 532
>     tmp___6 = drbd_conn_str((enum drbd_conns )os.ldv_40024.conn);
> #line 532
>     tmp___7 = sprintf(pbp, "conn( %s -> %s ) ", tmp___6, tmp___5);
> #line 532
>     pbp = pbp + (unsigned long )tmp___7;
>   } else {
> 
>   }
58316,58320c65592,65603
<     mdev = drbd_new_device((unsigned int )minor);
< #line 537
<     spin_lock_irq(& drbd_pp_lock);
< #line 538
<     if ((unsigned long )*(minor_table + (unsigned long )minor) == (unsigned long )((struct drbd_conf *)0)) {
---
>   if ((int )ns.ldv_40024.disk != (int )os.ldv_40024.disk && ((unsigned int )flags & 256U) != 0U) {
> #line 536
>     tmp___8 = drbd_disk_str((enum drbd_disk_state )ns.ldv_40024.disk);
> #line 536
>     tmp___9 = drbd_disk_str((enum drbd_disk_state )os.ldv_40024.disk);
> #line 536
>     tmp___10 = sprintf(pbp, "disk( %s -> %s ) ", tmp___9, tmp___8);
> #line 536
>     pbp = pbp + (unsigned long )tmp___10;
>   } else {
> 
>   }
58322c65605
<       *(minor_table + (unsigned long )minor) = mdev;
---
>   if ((int )ns.ldv_40024.pdsk != (int )os.ldv_40024.pdsk && ((unsigned int )flags & 512U) != 0U) {
58324,58341c65607,65613
<       disk = mdev->vdisk;
< #line 541
<       mdev = 0;
<     } else {
< 
<     }
< #line 543
<     spin_unlock_irq(& drbd_pp_lock);
< #line 545
<     if ((unsigned long )disk != (unsigned long )((struct gendisk *)0)) {
< #line 548
<       add_disk(disk);
<     } else {
< #line 550
<       drbd_free_mdev(mdev);
<     }
< #line 552
<     mdev = minor_to_mdev((unsigned int )minor);
---
>     tmp___11 = drbd_disk_str((enum drbd_disk_state )ns.ldv_40024.pdsk);
> #line 540
>     tmp___12 = drbd_disk_str((enum drbd_disk_state )os.ldv_40024.pdsk);
> #line 540
>     tmp___13 = sprintf(pbp, "pdsk( %s -> %s ) ", tmp___12, tmp___11);
> #line 540
>     pbp = pbp + (unsigned long )tmp___13;
58345,58346c65617,65618
< #line 555
<   return (mdev);
---
> #line 544
>   return ((long )pbp - (long )pb);
58349,58351c65621,65623
< #line 558 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static int drbd_nl_primary(struct drbd_conf *mdev , struct drbd_nl_cfg_req *nlp ,
<                            struct drbd_nl_cfg_reply *reply ) 
---
> #line 547 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> static void drbd_pr_state_change(struct drbd_conf *mdev , union drbd_state os , union drbd_state ns ,
>                                  enum chg_state_flags flags ) 
58353,58355c65625,65630
<   struct primary primary_args ;
<   int tmp ;
<   enum drbd_state_rv tmp___0 ;
---
>   char pb[300U] ;
>   char *pbp ;
>   long tmp ;
>   int tmp___0 ;
>   int tmp___1 ;
>   int tmp___2 ;
58357a65633,65656
> #line 551
>   pbp = (char *)(& pb);
> #line 553
>   tmp = print_state_change(pbp, os, ns, (enum chg_state_flags )((unsigned int )flags ^ 992U));
> #line 553
>   pbp = pbp + (unsigned long )tmp;
> #line 555
>   if ((int )ns.ldv_40024.aftr_isp != (int )os.ldv_40024.aftr_isp) {
> #line 556
>     tmp___0 = sprintf(pbp, "aftr_isp( %d -> %d ) ", (int )os.ldv_40024.aftr_isp, (int )ns.ldv_40024.aftr_isp);
> #line 556
>     pbp = pbp + (unsigned long )tmp___0;
>   } else {
> 
>   }
> #line 559
>   if ((int )ns.ldv_40024.peer_isp != (int )os.ldv_40024.peer_isp) {
> #line 560
>     tmp___1 = sprintf(pbp, "peer_isp( %d -> %d ) ", (int )os.ldv_40024.peer_isp, (int )ns.ldv_40024.peer_isp);
> #line 560
>     pbp = pbp + (unsigned long )tmp___1;
>   } else {
> 
>   }
58359c65658
<   memset((void *)(& primary_args), 0, 4UL);
---
>   if ((int )ns.ldv_40024.user_isp != (int )os.ldv_40024.user_isp) {
58361c65660
<   tmp = primary_from_tags(mdev, (unsigned short *)(& nlp->tag_list), & primary_args);
---
>     tmp___2 = sprintf(pbp, "user_isp( %d -> %d ) ", (int )os.ldv_40024.user_isp, (int )ns.ldv_40024.user_isp);
58363,58367c65662
<   if (tmp == 0) {
< #line 565
<     reply->ret_code = 126;
< #line 566
<     return (0);
---
>     pbp = pbp + (unsigned long )tmp___2;
58370a65666,65667
> #line 568
>   if ((unsigned long )((char *)(& pb)) != (unsigned long )pbp) {
58372,58376c65669,65674
<   tmp___0 = drbd_set_role(mdev, R_PRIMARY, (int )primary_args.primary_force);
< #line 569
<   reply->ret_code = (int )tmp___0;
< #line 572
<   return (0);
---
>     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "%s\n", (char *)(& pb));
>   } else {
> 
>   }
> #line 570
>   return;
58379,58381c65677,65679
< #line 575 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static int drbd_nl_secondary(struct drbd_conf *mdev , struct drbd_nl_cfg_req *nlp ,
<                              struct drbd_nl_cfg_reply *reply ) 
---
> #line 572 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> static void conn_pr_state_change(struct drbd_tconn *tconn , union drbd_state os ,
>                                  union drbd_state ns , enum chg_state_flags flags ) 
58383c65681,65688
<   enum drbd_state_rv tmp ;
---
>   char pb[300U] ;
>   char *pbp ;
>   long tmp ;
>   bool tmp___0 ;
>   bool tmp___1 ;
>   int tmp___2 ;
>   bool tmp___3 ;
>   bool tmp___4 ;
58385a65691,65692
> #line 576
>   pbp = (char *)(& pb);
58387c65694
<   tmp = drbd_set_role(mdev, R_SECONDARY, 0);
---
>   tmp = print_state_change(pbp, os, ns, flags);
58389c65696
<   reply->ret_code = (int )tmp;
---
>   pbp = pbp + (unsigned long )tmp;
58391c65698,65722
<   return (0);
---
>   tmp___3 = is_susp(ns);
> #line 580
>   tmp___4 = is_susp(os);
> #line 580
>   if ((int )tmp___3 != (int )tmp___4 && ((unsigned int )flags & 1024U) != 0U) {
> #line 581
>     tmp___0 = is_susp(ns);
> #line 581
>     tmp___1 = is_susp(os);
> #line 581
>     tmp___2 = sprintf(pbp, "susp( %d -> %d ) ", (int )tmp___1, (int )tmp___0);
> #line 581
>     pbp = pbp + (unsigned long )tmp___2;
>   } else {
> 
>   }
> #line 585
>   if ((unsigned long )((char *)(& pb)) != (unsigned long )pbp) {
> #line 586
>     printk("\016d-con %s: %s\n", tconn->name, (char *)(& pb));
>   } else {
> 
>   }
> #line 587
>   return;
58394,58395c65725,65726
< #line 585 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static void drbd_md_set_sector_offsets(struct drbd_conf *mdev , struct drbd_backing_dev *bdev ) 
---
> #line 596 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> static enum drbd_state_rv is_valid_state(struct drbd_conf *mdev , union drbd_state ns ) 
58397,58400c65728,65740
<   sector_t md_size_sect ;
<   sector_t tmp ;
<   sector_t tmp___0 ;
<   sector_t tmp___1 ;
---
>   enum drbd_fencing_p fp ;
>   enum drbd_state_rv rv ;
>   struct net_conf *nc ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
>   int tmp___1 ;
>   struct net_conf *_________p1___0 ;
>   bool __warned___0 ;
>   int tmp___2 ;
>   int tmp___3 ;
>   enum drbd_role tmp___4 ;
58403,58426d65742
< #line 588
<   md_size_sect = 0UL;
< #line 589
<   switch (bdev->dc.meta_dev_idx) {
<   default: 
< #line 592
<   bdev->md.md_size_sect = 262144U;
< #line 593
<   tmp = drbd_md_ss__(mdev, bdev);
< #line 593
<   bdev->md.md_offset = (u64 )tmp;
< #line 594
<   bdev->md.al_offset = 8;
< #line 595
<   bdev->md.bm_offset = 72;
< #line 596
<   goto ldv_54272;
<   case -2: 
< #line 599
<   tmp___0 = drbd_get_capacity(bdev->md_bdev);
< #line 599
<   bdev->md.md_size_sect = (u32 )tmp___0;
< #line 600
<   bdev->md.md_offset = 0ULL;
58428,58434c65744,65748
<   bdev->md.al_offset = 8;
< #line 602
<   bdev->md.bm_offset = 72;
< #line 603
<   goto ldv_54272;
<   case -1: ;
<   case -3: 
---
>   rv = 1;
> #line 604
>   rcu_read_lock___7();
> #line 605
>   fp = FP_DONT_CARE;
58436c65750
<   tmp___1 = drbd_md_ss__(mdev, bdev);
---
>   tmp___1 = _get_ldev_if_state(mdev, D_INCONSISTENT);
58438c65752,65775
<   bdev->md.md_offset = (u64 )tmp___1;
---
>   if (tmp___1 != 0) {
> #line 607
>     _________p1 = *((struct disk_conf * volatile  *)(& (mdev->ldev)->disk_conf));
> #line 607
>     tmp = debug_lockdep_rcu_enabled();
> #line 607
>     if (tmp != 0 && ! __warned) {
> #line 607
>       tmp___0 = rcu_read_lock_held();
> #line 607
>       if (tmp___0 == 0 && 1) {
> #line 607
>         __warned = 1;
> #line 607
>         lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared",
>                                607, "suspicious rcu_dereference_check() usage");
>       } else {
> 
>       }
>     } else {
> 
>     }
> #line 607
>     fp = (enum drbd_fencing_p )_________p1->fencing;
58440,58442c65777,65780
<   bdev->md.al_offset = -64;
< #line 610
<   md_size_sect = drbd_get_capacity(bdev->backing_bdev);
---
>     put_ldev(mdev);
>   } else {
> 
>   }
58444c65782,65803
<   md_size_sect = (md_size_sect + 32767UL) & 0xffffffffffff8000UL;
---
>   _________p1___0 = *((struct net_conf * volatile  *)(& (mdev->tconn)->net_conf));
> #line 611
>   tmp___2 = debug_lockdep_rcu_enabled();
> #line 611
>   if (tmp___2 != 0 && ! __warned___0) {
> #line 611
>     tmp___3 = rcu_read_lock_held();
> #line 611
>     if (tmp___3 == 0 && 1) {
> #line 611
>       __warned___0 = 1;
> #line 611
>       lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared",
>                              611, "suspicious rcu_dereference_check() usage");
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 611
>   nc = _________p1___0;
58446c65805
<   md_size_sect = md_size_sect >> 15;
---
>   if ((unsigned long )nc != (unsigned long )((struct net_conf *)0)) {
58448c65807,65816
<   md_size_sect = (md_size_sect + 7UL) & 0xfffffffffffffff8UL;
---
>     if ((int )((signed char )nc->two_primaries) == 0 && (unsigned int )*((unsigned char *)(& ns) + 0UL) == 1U) {
> #line 614
>       if ((unsigned int )*((unsigned char *)(& ns) + 0UL) == 4U) {
> #line 615
>         rv = SS_TWO_PRIMARIES;
>       } else {
> #line 616
>         tmp___4 = conn_highest_peer(mdev->tconn);
> #line 616
>         if ((unsigned int )tmp___4 == 1U) {
58450,58456c65818,65827
<   md_size_sect = md_size_sect + 72UL;
< #line 619
<   bdev->md.md_size_sect = (u32 )md_size_sect;
< #line 621
<   bdev->md.bm_offset = (s32 )(8U - (unsigned int )md_size_sect);
< #line 622
<   goto ldv_54272;
---
>           rv = SS_O_VOL_PEER_PRI;
>         } else {
> 
>         }
>       }
>     } else {
> 
>     }
>   } else {
> 
58458,58467c65829,65830
<   ldv_54272: ;
< #line 625
<   return;
< }
< }
< #line 627 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< char *ppsize(char *buf , unsigned long long size ) 
< { 
<   char units[6U] ;
<   int base ;
---
> #line 621
>   if ((int )rv <= 0) {
58469,58479c65832,65844
<   {
< #line 631
<   units[0] = 75;
< #line 631
<   units[1] = 77;
< #line 631
<   units[2] = 71;
< #line 631
<   units[3] = 84;
< #line 631
<   units[4] = 80;
---
>   } else
> #line 623
>   if ((unsigned int )*((unsigned char *)(& ns) + 0UL) == 2U && mdev->open_cnt != 0) {
> #line 624
>     rv = SS_DEVICE_IN_USE;
>   } else
> #line 626
>   if (((unsigned int )*((unsigned char *)(& ns) + 0UL) == 1U && (int )ns.ldv_40024.conn <= 9) && (int )ns.ldv_40024.disk <= 7) {
> #line 627
>     rv = SS_NO_UP_TO_DATE_DISK;
>   } else
> #line 629
>   if ((((int )fp > 0 && (unsigned int )*((unsigned char *)(& ns) + 0UL) == 1U) && (int )ns.ldv_40024.conn <= 9) && (int )ns.ldv_40024.pdsk > 5) {
58481,58491c65846,65847
<   units[5] = 69;
< #line 632
<   base = 0;
< #line 633
<   goto ldv_54283;
<   ldv_54282: 
< #line 635
<   size = (size >> 10) + (unsigned long long )((size & 512ULL) != 0ULL);
< #line 636
<   base = base + 1;
<   ldv_54283: ;
---
>     rv = SS_PRIMARY_NOP;
>   } else
58493c65849
<   if (size > 9999ULL && (unsigned int )base <= 4U) {
---
>   if (((unsigned int )*((unsigned char *)(& ns) + 0UL) == 1U && (int )ns.ldv_40024.disk <= 4) && (int )ns.ldv_40024.pdsk <= 4) {
58495c65851,65886
<     goto ldv_54282;
---
>     rv = SS_NO_UP_TO_DATE_DISK;
>   } else
> #line 636
>   if ((int )ns.ldv_40024.conn > 10 && (int )ns.ldv_40024.disk <= 3) {
> #line 637
>     rv = SS_NO_LOCAL_DISK;
>   } else
> #line 639
>   if ((int )ns.ldv_40024.conn > 10 && (int )ns.ldv_40024.pdsk <= 3) {
> #line 640
>     rv = SS_NO_REMOTE_DISK;
>   } else
> #line 642
>   if (((int )ns.ldv_40024.conn > 10 && (int )ns.ldv_40024.disk <= 7) && (int )ns.ldv_40024.pdsk <= 7) {
> #line 643
>     rv = SS_NO_UP_TO_DATE_DISK;
>   } else
> #line 645
>   if (((((unsigned int )*((unsigned short *)(& ns) + 0UL) == 160U || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 208U) || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 256U) || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 320U) && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 10U) {
> #line 650
>     rv = SS_CONNECTED_OUTDATES;
>   } else
> #line 652
>   if (((unsigned int )*((unsigned short *)(& ns) + 0UL) == 288U || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 304U) && (int )((signed char )nc->verify_alg[0]) == 0) {
> #line 654
>     rv = SS_NO_VERIFY_ALG;
>   } else
> #line 656
>   if (((unsigned int )*((unsigned short *)(& ns) + 0UL) == 288U || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 304U) && (mdev->tconn)->agreed_pro_version <= 87) {
> #line 658
>     rv = SS_NOT_SUPPORTED;
>   } else
> #line 660
>   if ((int )ns.ldv_40024.conn > 9 && *((unsigned int *)(& ns) + 0UL) == 49152U) {
> #line 661
>     rv = SS_CONNECTED_OUTDATES;
58499,58502c65890,65893
< #line 638
<   sprintf(buf, "%u %cB", (unsigned int )size, (int )units[base]);
< #line 640
<   return (buf);
---
> #line 663
>   rcu_read_unlock___7();
> #line 665
>   return (rv);
58505,58506c65896,65898
< #line 656 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void drbd_suspend_io(struct drbd_conf *mdev ) 
---
> #line 677 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> static enum drbd_state_rv is_valid_soft_transition(union drbd_state os , union drbd_state ns ,
>                                                    struct drbd_tconn *tconn ) 
58507a65900
>   enum drbd_state_rv rv ;
58509,58512d65901
<   int tmp___0 ;
<   wait_queue_t __wait ;
<   struct task_struct *tmp___1 ;
<   int tmp___2 ;
58515,58522c65904,65909
< #line 658
<   drbd_set_flag(mdev, SUSPEND_IO);
< #line 659
<   tmp = is_susp(mdev->state);
< #line 659
<   if (tmp != 0) {
< #line 660
<     return;
---
> #line 679
>   rv = 1;
> #line 681
>   if (((unsigned int )*((unsigned short *)(& ns) + 0UL) == 192U || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 176U) && (int )os.ldv_40024.conn > 10) {
> #line 683
>     rv = SS_RESYNC_RUNNING;
58526,58531c65913,65916
< #line 661
<   tmp___0 = atomic_read((atomic_t const   *)(& mdev->ap_bio_cnt));
< #line 661
<   if (tmp___0 == 0) {
< #line 661
<     goto ldv_54288;
---
> #line 685
>   if ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 16U && (unsigned int )*((unsigned short *)(& os) + 0UL) == 0U) {
> #line 686
>     rv = SS_ALREADY_STANDALONE;
58535,58555c65920,65923
< #line 661
<   tmp___1 = get_current();
< #line 661
<   __wait.flags = 0U;
< #line 661
<   __wait.private = (void *)tmp___1;
< #line 661
<   __wait.func = & autoremove_wake_function;
< #line 661
<   __wait.task_list.next = & __wait.task_list;
< #line 661
<   __wait.task_list.prev = & __wait.task_list;
<   ldv_54291: 
< #line 661
<   prepare_to_wait(& mdev->misc_wait, & __wait, 2);
< #line 661
<   tmp___2 = atomic_read((atomic_t const   *)(& mdev->ap_bio_cnt));
< #line 661
<   if (tmp___2 == 0) {
< #line 661
<     goto ldv_54290;
---
> #line 688
>   if ((int )ns.ldv_40024.disk > 1 && (unsigned int )*((unsigned char *)(& os) + 1UL) == 0U) {
> #line 689
>     rv = SS_IS_DISKLESS;
58559,58607c65927,65931
< #line 661
<   schedule();
< #line 661
<   goto ldv_54291;
<   ldv_54290: 
< #line 661
<   finish_wait(& mdev->misc_wait, & __wait);
<   ldv_54288: ;
< #line 664
<   return;
< }
< }
< #line 664 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void drbd_resume_io(struct drbd_conf *mdev ) 
< { 
< 
< 
<   {
< #line 666
<   drbd_clear_flag(mdev, SUSPEND_IO);
< #line 667
<   __wake_up(& mdev->misc_wait, 3U, 1, 0);
< #line 668
<   return;
< }
< }
< #line 677 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< enum determine_dev_size drbd_determine_dev_size(struct drbd_conf *mdev , enum dds_flags flags ) 
< { 
<   sector_t prev_first_sect ;
<   sector_t prev_size ;
<   sector_t la_size ;
<   sector_t size ;
<   char ppb[10U] ;
<   int md_moved ;
<   int la_size_changed ;
<   enum determine_dev_size rv ;
<   int tmp ;
<   wait_queue_t __wait ;
<   struct task_struct *tmp___0 ;
<   int tmp___1 ;
<   int err ;
<   sector_t tmp___2 ;
<   long tmp___3 ;
<   char *tmp___4 ;
<   sector_t tmp___5 ;
<   sector_t tmp___6 ;
<   sector_t tmp___7 ;
<   int err___0 ;
---
> #line 691
>   if ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 128U && (int )os.ldv_40024.conn <= 1) {
> #line 692
>     rv = SS_NO_NET_CONFIG;
>   } else {
58609,58619c65933,65937
<   {
< #line 685
<   rv = 0;
< #line 696
<   drbd_suspend_io(mdev);
< #line 699
<   tmp = lc_try_lock(mdev->act_log);
< #line 699
<   if (tmp != 0) {
< #line 699
<     goto ldv_54307;
---
>   }
> #line 694
>   if (((unsigned int )*((unsigned char *)(& ns) + 1UL) == 10U && (int )os.ldv_40024.disk <= 4) && (unsigned int )*((unsigned char *)(& os) + 1UL) != 2U) {
> #line 695
>     rv = SS_LOWER_THAN_OUTDATED;
58623,58643c65941,65944
< #line 699
<   tmp___0 = get_current();
< #line 699
<   __wait.flags = 0U;
< #line 699
<   __wait.private = (void *)tmp___0;
< #line 699
<   __wait.func = & autoremove_wake_function;
< #line 699
<   __wait.task_list.next = & __wait.task_list;
< #line 699
<   __wait.task_list.prev = & __wait.task_list;
<   ldv_54310: 
< #line 699
<   prepare_to_wait(& mdev->al_wait, & __wait, 2);
< #line 699
<   tmp___1 = lc_try_lock(mdev->act_log);
< #line 699
<   if (tmp___1 != 0) {
< #line 699
<     goto ldv_54309;
---
> #line 697
>   if ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 16U && (unsigned int )*((unsigned short *)(& os) + 0UL) == 32U) {
> #line 698
>     rv = SS_IN_TRANSIENT_STATE;
58647,58662c65948,65951
< #line 699
<   schedule();
< #line 699
<   goto ldv_54310;
<   ldv_54309: 
< #line 699
<   finish_wait(& mdev->al_wait, & __wait);
<   ldv_54307: 
< #line 701
<   prev_first_sect = drbd_md_first_sector(mdev->ldev);
< #line 702
<   prev_size = (sector_t )(mdev->ldev)->md.md_size_sect;
< #line 703
<   la_size = (sector_t )(mdev->ldev)->md.la_size_sect;
< #line 706
<   drbd_md_set_sector_offsets(mdev, mdev->ldev);
---
> #line 705
>   tmp = constant_test_bit(10U, (unsigned long const volatile   *)(& tconn->flags));
> #line 705
>   if (tmp != 0 && ((unsigned int )*((unsigned short *)(& os) + 0UL) != 144U && ((unsigned int )*((unsigned short *)(& ns) + 0UL) != 144U || (unsigned int )*((unsigned short *)(& os) + 0UL) != 128U))) {
58664,58670c65953
<   size = drbd_new_dev_size(mdev, mdev->ldev, (int )flags & 1);
< #line 710
<   tmp___5 = drbd_get_capacity(mdev->this_bdev);
< #line 710
<   if (tmp___5 != size) {
< #line 710
<     goto _L;
---
>     rv = SS_IN_TRANSIENT_STATE;
58671a65955,65956
> 
>   }
58673,58676c65958,65963
<     tmp___6 = drbd_bm_capacity(mdev);
< #line 710
<     if (tmp___6 != size) {
<       _L: /* CIL Label */ 
---
>   if (((unsigned int )*((unsigned short *)(& ns) + 0UL) == 288U || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 304U) && (int )os.ldv_40024.conn <= 9) {
> #line 711
>     rv = SS_NEED_CONNECTION;
>   } else {
> 
>   }
58678,58686c65965,65970
<       err = drbd_bm_resize(mdev, size, ((unsigned int )flags & 2U) == 0U);
< #line 714
<       tmp___3 = __builtin_expect(err != 0, 0L);
< #line 714
<       if (tmp___3 != 0L) {
< #line 716
<         tmp___2 = drbd_bm_capacity(mdev);
< #line 716
<         size = tmp___2 >> 1;
---
>   if ((((unsigned int )*((unsigned short *)(& ns) + 0UL) == 288U || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 304U) && (int )ns.ldv_40024.conn != (int )os.ldv_40024.conn) && (int )os.ldv_40024.conn > 10) {
> #line 715
>     rv = SS_RESYNC_RUNNING;
>   } else {
> 
>   }
58688,58691c65972,65977
<         if (size == 0UL) {
< #line 718
<           dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "OUT OF MEMORY! Could not allocate bitmap!\n");
<         } else {
---
>   if (((unsigned int )*((unsigned short *)(& ns) + 0UL) == 176U || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 192U) && (int )os.ldv_40024.conn <= 9) {
> #line 719
>     rv = SS_NEED_CONNECTION;
>   } else {
> 
>   }
58693,58695c65979,65984
<           dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "BM resizing failed. Leaving size unchanged at size = %lu KB\n",
<                   size);
<         }
---
>   if (((unsigned int )*((unsigned short *)(& ns) + 0UL) == 272U || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 256U) && (int )os.ldv_40024.conn <= 8) {
> #line 723
>     rv = SS_NEED_CONNECTION;
>   } else {
> 
>   }
58697,58698c65986,65991
<         rv = dev_size_error;
<       } else {
---
>   return (rv);
> }
> }
> #line 729 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> static enum drbd_state_rv is_valid_conn_transition(enum drbd_conns oc , enum drbd_conns nc ) 
> { 
58700,58710d65992
<       }
< #line 728
<       drbd_set_my_capacity(mdev, size);
< #line 729
<       (mdev->ldev)->md.la_size_sect = (u64 )size;
< #line 730
<       tmp___4 = ppsize((char *)(& ppb), (unsigned long long )(size >> 1));
< #line 730
<       _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "size = %s (%llu KB)\n",
<                 tmp___4, (unsigned long long )size >> 1);
<     } else {
58712,58713c65994,65996
<     }
<   }
---
>   {
> #line 732
>   if ((unsigned int )oc == (unsigned int )nc) {
58715,58717c65998
<   if ((int )rv == -1) {
< #line 734
<     goto out;
---
>     return (SS_NOTHING_TO_DO);
58722,58726c66003,66010
<   la_size_changed = (mdev->ldev)->md.la_size_sect != (unsigned long long )la_size;
< #line 738
<   tmp___7 = drbd_md_first_sector(mdev->ldev);
< #line 738
<   md_moved = tmp___7 != prev_first_sect || (sector_t )(mdev->ldev)->md.md_size_sect != prev_size;
---
>   if ((unsigned int )oc == 0U && (unsigned int )nc == 1U) {
> #line 737
>     return (SS_ALREADY_STANDALONE);
>   } else {
> 
>   }
> #line 740
>   if ((unsigned int )oc == 0U && (unsigned int )nc != 2U) {
58728,58743c66012,66013
<   if (la_size_changed != 0 || md_moved != 0) {
< #line 744
<     drbd_al_shrink(mdev);
< #line 745
<     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Writing the whole bitmap, %s\n",
<               la_size_changed == 0 || md_moved == 0 ? (la_size_changed != 0 ? (char *)"size changed" : (char *)"md moved") : (char *)"size changed and md moved");
< #line 749
<     err___0 = drbd_bitmap_io(mdev, md_moved != 0 ? & drbd_bm_write_all : & drbd_bm_write,
<                              (char *)"size changed", BM_LOCKED_MASK);
< #line 751
<     if (err___0 != 0) {
< #line 752
<       rv = dev_size_error;
< #line 753
<       goto out;
<     } else {
---
>     return (SS_NEED_CONNECTION);
>   } else {
58745,58747c66015,66019
<     }
< #line 755
<     drbd_md_mark_dirty(mdev);
---
>   }
> #line 745
>   if ((unsigned int )oc <= 8U && (unsigned int )nc > 9U) {
> #line 746
>     return (SS_NEED_CONNECTION);
58751,58754c66023,66026
< #line 758
<   if (size > la_size) {
< #line 759
<     rv = grew;
---
> #line 749
>   if ((((unsigned int )oc > 2U && (unsigned int )oc <= 7U) && (unsigned int )nc != 2U) && (unsigned int )nc != 1U) {
> #line 750
>     return (SS_IN_TRANSIENT_STATE);
58758,58761c66030,66033
< #line 760
<   if (size < la_size) {
< #line 761
<     rv = shrunk;
---
> #line 753
>   if ((unsigned int )oc == 1U && (unsigned int )nc != 0U) {
> #line 754
>     return (SS_IN_TRANSIENT_STATE);
58765,58773c66037,66038
<   out: 
< #line 763
<   lc_unlock(mdev->act_log);
< #line 764
<   __wake_up(& mdev->al_wait, 3U, 1, 0);
< #line 765
<   drbd_resume_io(mdev);
< #line 767
<   return (rv);
---
> #line 756
>   return (SS_SUCCESS);
58776,58778c66041,66042
< #line 771 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< sector_t drbd_new_dev_size(struct drbd_conf *mdev , struct drbd_backing_dev *bdev ,
<                            int assume_peer_has_space ) 
---
> #line 769 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> static enum drbd_state_rv is_valid_transition(union drbd_state os , union drbd_state ns ) 
58780,58786c66044
<   sector_t p_size ;
<   sector_t la_size ;
<   sector_t m_size ;
<   sector_t u_size ;
<   sector_t size ;
<   sector_t __min1 ;
<   sector_t __min2 ;
---
>   enum drbd_state_rv rv ;
58790,58792c66048
<   p_size = mdev->p_size;
< #line 774
<   la_size = (sector_t )bdev->md.la_size_sect;
---
>   rv = is_valid_conn_transition((enum drbd_conns )os.ldv_40024.conn, (enum drbd_conns )ns.ldv_40024.conn);
58794c66050
<   u_size = (sector_t )bdev->dc.disk_size;
---
>   if ((unsigned int )*((unsigned char *)(& ns) + 1UL) == 4U && (unsigned int )*((unsigned char *)(& os) + 1UL) == 0U) {
58796,58804c66052
<   size = 0UL;
< #line 779
<   m_size = drbd_get_max_capacity___1(bdev);
< #line 781
<   if ((int )mdev->state.ldv_39979.conn <= 9 && assume_peer_has_space != 0) {
< #line 782
<     dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Resize while not connected was forced by the user!\n");
< #line 783
<     p_size = m_size;
---
>     rv = SS_IS_DISKLESS;
58808,58825c66056,66063
< #line 786
<   if (p_size != 0UL && m_size != 0UL) {
< #line 787
<     __min1 = p_size;
< #line 787
<     __min2 = m_size;
< #line 787
<     size = __min1 < __min2 ? __min1 : __min2;
<   } else
< #line 789
<   if (la_size != 0UL) {
< #line 790
<     size = la_size;
< #line 791
<     if (m_size != 0UL && m_size < size) {
< #line 792
<       size = m_size;
<     } else {
---
> #line 779
>   return (rv);
> }
> }
> #line 782 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> static void print_sanitize_warnings(struct drbd_conf *mdev , enum sanitize_state_warnings warn ) 
> { 
>   char const   *msg_table[6U] ;
58827c66065,66077
<     }
---
>   {
> #line 784
>   msg_table[0] = "";
> #line 784
>   msg_table[1] = "Online-verify aborted.";
> #line 784
>   msg_table[2] = "Resync aborted.";
> #line 784
>   msg_table[3] = "Connection lost while negotiating, no data!";
> #line 784
>   msg_table[4] = "Implicitly upgraded disk";
> #line 784
>   msg_table[5] = "Implicitly upgraded pdsk";
58829c66079
<     if (p_size != 0UL && p_size < size) {
---
>   if ((unsigned int )warn != 0U) {
58831,58834c66081
<       size = p_size;
<     } else {
< 
<     }
---
>     dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "%s\n", msg_table[(unsigned int )warn]);
58836,58840d66082
< #line 796
<     if (m_size != 0UL) {
< #line 797
<       size = m_size;
<     } else {
58842,58849d66083
<     }
< #line 798
<     if (p_size != 0UL) {
< #line 799
<       size = p_size;
<     } else {
< 
<     }
58851,58854c66085,66109
< #line 803
<   if (size == 0UL) {
< #line 804
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Both nodes diskless!\n");
---
> #line 795
>   return;
> }
> }
> #line 807 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> static union drbd_state sanitize_state(struct drbd_conf *mdev , union drbd_state ns ,
>                                        enum sanitize_state_warnings *warn ) 
> { 
>   enum drbd_fencing_p fp ;
>   enum drbd_disk_state disk_min ;
>   enum drbd_disk_state disk_max ;
>   enum drbd_disk_state pdsk_min ;
>   enum drbd_disk_state pdsk_max ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp ;
>   int tmp___0 ;
>   int tmp___1 ;
>   int tmp___2 ;
> 
>   {
> #line 813
>   if ((unsigned long )warn != (unsigned long )((enum sanitize_state_warnings *)0)) {
> #line 814
>     *warn = NO_WARNING;
58858,58864c66113,66138
< #line 806
<   if (u_size != 0UL) {
< #line 807
<     if (u_size > size) {
< #line 808
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Requested disk size is too big (%lu > %lu)\n",
<               u_size >> 1, size >> 1);
---
> #line 816
>   fp = FP_DONT_CARE;
> #line 817
>   tmp___1 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 817
>   if (tmp___1 != 0) {
> #line 818
>     rcu_read_lock___7();
> #line 819
>     _________p1 = *((struct disk_conf * volatile  *)(& (mdev->ldev)->disk_conf));
> #line 819
>     tmp = debug_lockdep_rcu_enabled();
> #line 819
>     if (tmp != 0 && ! __warned) {
> #line 819
>       tmp___0 = rcu_read_lock_held();
> #line 819
>       if (tmp___0 == 0 && 1) {
> #line 819
>         __warned = 1;
> #line 819
>         lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared",
>                                819, "suspicious rcu_dereference_check() usage");
>       } else {
> 
>       }
58866,58867c66140
< #line 811
<       size = u_size;
---
> 
58868a66142,66147
> #line 819
>     fp = (enum drbd_fencing_p )_________p1->fencing;
> #line 820
>     rcu_read_unlock___7();
> #line 821
>     put_ldev(mdev);
58872,58884c66151,66161
< #line 814
<   return (size);
< }
< }
< #line 825 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static int drbd_check_al_size(struct drbd_conf *mdev ) 
< { 
<   struct lru_cache *n ;
<   struct lru_cache *t ;
<   struct lc_element *e ;
<   unsigned int in_use ;
<   int i ;
<   int _b ;
---
> #line 825
>   if ((int )ns.ldv_40024.conn <= 9) {
> #line 826
>     ns.ldv_40024.peer_isp = 0U;
> #line 827
>     ns.ldv_40024.peer = 0U;
> #line 828
>     if ((int )ns.ldv_40024.pdsk > 6 || (int )ns.ldv_40024.pdsk <= 3) {
> #line 829
>       ns.ldv_40024.pdsk = 6U;
>     } else {
58886,58894c66163
<   {
< #line 832
<   _b = mdev->sync_conf.al_extents <= 6;
< #line 832
<   if (_b != 0) {
< #line 832
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_check_al_size", (char *)"mdev->sync_conf.al_extents < 7", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared",
<             832);
---
>     }
58898,58899d66166
< #line 832
<   if (_b != 0) {
58901,58908c66168,66170
<     mdev->sync_conf.al_extents = 127;
<   } else {
< 
<   }
< #line 835
<   if ((unsigned long )mdev->act_log != (unsigned long )((struct lru_cache *)0) && (mdev->act_log)->nr_elements == (unsigned int )mdev->sync_conf.al_extents) {
< #line 837
<     return (0);
---
>   if (((unsigned int )*((unsigned short *)(& ns) + 0UL) == 0U && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 0U) && (unsigned int )*((unsigned char *)(& ns) + 0UL) == 2U) {
> #line 834
>     ns.ldv_40024.aftr_isp = 0U;
58911a66174,66175
> #line 838
>   if ((int )ns.ldv_40024.conn > 10 && ((int )ns.ldv_40024.disk <= 2 || (int )ns.ldv_40024.pdsk <= 2)) {
58913c66177
<   in_use = 0U;
---
>     if ((unsigned long )warn != (unsigned long )((enum sanitize_state_warnings *)0)) {
58915,58924c66179,66184
<   t = mdev->act_log;
< #line 841
<   n = lc_create("act_log", drbd_al_ext_cache, (unsigned int )mdev->sync_conf.al_extents,
<                 48UL, 0UL);
< #line 844
<   if ((unsigned long )n == (unsigned long )((struct lru_cache *)0)) {
< #line 845
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Cannot allocate act_log lru!\n");
< #line 846
<     return (-12);
---
>       *warn = (unsigned int )*((unsigned short *)(& ns) + 0UL) == 288U || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 304U ? ABORTED_ONLINE_VERIFY : ABORTED_RESYNC;
>     } else {
> 
>     }
> #line 842
>     ns.ldv_40024.conn = 10U;
58927a66188,66193
> #line 846
>   if ((int )ns.ldv_40024.conn <= 9 && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 6U) {
> #line 846
>     tmp___2 = _get_ldev_if_state(mdev, D_NEGOTIATING);
> #line 846
>     if (tmp___2 != 0) {
58929c66195
<   spin_lock_irq(& mdev->al_lock);
---
>       if (mdev->ed_uuid == (mdev->ldev)->md.uuid[0]) {
58931c66197
<   if ((unsigned long )t != (unsigned long )((struct lru_cache *)0)) {
---
>         ns.ldv_40024.disk = mdev->new_state_tmp.ldv_40024.disk;
58933,58938c66199,66200
<     i = 0;
< #line 850
<     goto ldv_54339;
<     ldv_54338: 
< #line 851
<     e = lc_element_by_index(t, (unsigned int )i);
---
>         ns.ldv_40024.pdsk = mdev->new_state_tmp.ldv_40024.pdsk;
>       } else {
58940c66202
<     if (e->refcnt != 0U) {
---
>         if ((unsigned long )warn != (unsigned long )((enum sanitize_state_warnings *)0)) {
58942,58944c66204,66205
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "refcnt(%d)==%d\n",
<               e->lc_number, e->refcnt);
<     } else {
---
>           *warn = CONNECTION_LOST_NEGOTIATING;
>         } else {
58946c66207,66209
<     }
---
>         }
> #line 854
>         ns.ldv_40024.disk = 0U;
58948,58955c66211,66214
<     in_use = e->refcnt + in_use;
< #line 850
<     i = i + 1;
<     ldv_54339: ;
< #line 850
<     if ((unsigned int )i < t->nr_elements) {
< #line 851
<       goto ldv_54338;
---
>         ns.ldv_40024.pdsk = 6U;
>       }
> #line 857
>       put_ldev(mdev);
58959,58966d66217
< 
<   } else {
< 
<   }
< #line 858
<   if (in_use == 0U) {
< #line 859
<     mdev->act_log = n;
58970,58971d66220
< #line 860
<   spin_unlock_irq(& mdev->al_lock);
58973c66222
<   if (in_use != 0U) {
---
>   if ((int )ns.ldv_40024.conn > 9 && (int )ns.ldv_40024.conn <= 21) {
58975c66224
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Activity log still in use!\n");
---
>     if ((unsigned int )*((unsigned char *)(& ns) + 1UL) == 14U || (unsigned int )*((unsigned char *)(& ns) + 1UL) == 10U) {
58977c66226,66229
<     lc_destroy(n);
---
>       ns.ldv_40024.disk = 8U;
>     } else {
> 
>     }
58979,58984c66231,66236
<     return (-16);
<   } else
< #line 866
<   if ((unsigned long )t != (unsigned long )((struct lru_cache *)0)) {
< #line 867
<     lc_destroy(t);
---
>     if (*((unsigned int *)(& ns) + 0UL) == 57344U || *((unsigned int *)(& ns) + 0UL) == 40960U) {
> #line 865
>       ns.ldv_40024.pdsk = 8U;
>     } else {
> 
>     }
58989c66241
<   drbd_md_mark_dirty(mdev);
---
>   disk_min = D_DISKLESS;
58991,59016c66243,66254
<   return (0);
< }
< }
< #line 873 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static void drbd_setup_queue_param(struct drbd_conf *mdev , unsigned int max_bio_size ) 
< { 
<   struct request_queue *q ;
<   unsigned int max_hw_sectors ;
<   unsigned int max_segments ;
<   struct request_queue *b ;
<   unsigned int _min1 ;
<   unsigned int tmp ;
<   unsigned int _min2 ;
<   int tmp___0 ;
<   struct request_queue *b___0 ;
<   int tmp___1 ;
< 
<   {
< #line 875
<   q = mdev->rq_queue;
< #line 876
<   max_hw_sectors = max_bio_size >> 9;
< #line 877
<   max_segments = 0U;
< #line 879
<   tmp___0 = _get_ldev_if_state(mdev, D_ATTACHING);
---
>   disk_max = D_UP_TO_DATE;
> #line 871
>   pdsk_min = D_INCONSISTENT;
> #line 872
>   pdsk_max = D_UNKNOWN;
> #line 873
>   switch ((unsigned int )ns.ldv_40024.conn) {
>   case 14U: ;
>   case 21U: ;
>   case 12U: ;
>   case 15U: ;
>   case 23U: 
59018c66256
<   if (tmp___0 != 0) {
---
>   disk_min = D_INCONSISTENT;
59020,59026c66258,66260
<     b = (((mdev->ldev)->backing_bdev)->bd_disk)->queue;
< #line 882
<     tmp = queue_max_hw_sectors(b);
< #line 882
<     _min1 = tmp;
< #line 882
<     _min2 = max_bio_size >> 9;
---
>   disk_max = D_OUTDATED;
> #line 881
>   pdsk_min = D_UP_TO_DATE;
59028c66262
<     max_hw_sectors = _min1 < _min2 ? _min1 : _min2;
---
>   pdsk_max = D_UP_TO_DATE;
59030,59035c66264,66268
<     max_segments = (unsigned int )(mdev->ldev)->dc.max_bio_bvecs;
< #line 884
<     put_ldev(mdev);
<   } else {
< 
<   }
---
>   goto ldv_52301;
>   case 18U: ;
>   case 19U: 
> #line 886
>   disk_min = D_UP_TO_DATE;
59037c66270
<   blk_queue_logical_block_size(q, 512);
---
>   disk_max = D_UP_TO_DATE;
59039c66272,66274
<   blk_queue_max_hw_sectors(q, max_hw_sectors);
---
>   pdsk_min = D_UP_TO_DATE;
> #line 889
>   pdsk_max = D_UP_TO_DATE;
59041,59045c66276,66279
<   blk_queue_max_segments(q, max_segments != 0U ? (int )((unsigned short )max_segments) : 128);
< #line 891
<   blk_queue_segment_boundary(q, 4095UL);
< #line 893
<   tmp___1 = _get_ldev_if_state(mdev, D_ATTACHING);
---
>   goto ldv_52301;
>   case 10U: 
> #line 892
>   disk_min = D_DISKLESS;
59047c66281
<   if (tmp___1 != 0) {
---
>   disk_max = D_UP_TO_DATE;
59049c66283,66285
<     b___0 = (((mdev->ldev)->backing_bdev)->bd_disk)->queue;
---
>   pdsk_min = D_DISKLESS;
> #line 895
>   pdsk_max = D_UP_TO_DATE;
59051,59056c66287,66293
<     blk_queue_stack_limits(q, b___0);
< #line 898
<     if (q->backing_dev_info.ra_pages != b___0->backing_dev_info.ra_pages) {
< #line 899
<       _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Adjusting my ra_pages to backing device\'s (%lu -> %lu)\n",
<                 q->backing_dev_info.ra_pages, b___0->backing_dev_info.ra_pages);
---
>   goto ldv_52301;
>   case 13U: ;
>   case 20U: ;
>   case 11U: ;
>   case 22U: 
> #line 901
>   disk_min = D_UP_TO_DATE;
59058,59061c66295,66297
<       q->backing_dev_info.ra_pages = b___0->backing_dev_info.ra_pages;
<     } else {
< 
<     }
---
>   disk_max = D_UP_TO_DATE;
> #line 903
>   pdsk_min = D_INCONSISTENT;
59063,59092c66299,66313
<     put_ldev(mdev);
<   } else {
< 
<   }
< #line 906
<   return;
< }
< }
< #line 908 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void drbd_reconsider_max_bio_size(struct drbd_conf *mdev ) 
< { 
<   unsigned int now ;
<   unsigned int new ;
<   unsigned int local ;
<   unsigned int peer ;
<   unsigned int tmp ;
<   unsigned int tmp___0 ;
<   int tmp___1 ;
<   unsigned int _min1 ;
<   unsigned int _min2 ;
<   unsigned int _min1___0 ;
<   unsigned int _min2___0 ;
<   unsigned int _min1___1 ;
<   unsigned int _min2___1 ;
< 
<   {
< #line 912
<   tmp = queue_max_hw_sectors(mdev->rq_queue);
< #line 912
<   now = tmp << 9;
---
>   pdsk_max = D_CONSISTENT;
> #line 905
>   goto ldv_52301;
>   case 17U: 
> #line 907
>   disk_min = D_INCONSISTENT;
> #line 908
>   disk_max = D_INCONSISTENT;
> #line 909
>   pdsk_min = D_UP_TO_DATE;
> #line 910
>   pdsk_max = D_UP_TO_DATE;
> #line 911
>   goto ldv_52301;
>   case 16U: 
59094c66315
<   local = mdev->local_max_bio_size;
---
>   disk_min = D_UP_TO_DATE;
59096,59098c66317,66319
<   peer = mdev->peer_max_bio_size;
< #line 916
<   tmp___1 = _get_ldev_if_state(mdev, D_ATTACHING);
---
>   disk_max = D_UP_TO_DATE;
> #line 915
>   pdsk_min = D_INCONSISTENT;
59100,59102c66321
<   if (tmp___1 != 0) {
< #line 917
<     tmp___0 = queue_max_hw_sectors((((mdev->ldev)->backing_bdev)->bd_disk)->queue);
---
>   pdsk_max = D_INCONSISTENT;
59104,59108c66323,66342
<     local = tmp___0 << 9;
< #line 918
<     mdev->local_max_bio_size = local;
< #line 919
<     put_ldev(mdev);
---
>   goto ldv_52301;
>   case 0U: ;
>   case 1U: ;
>   case 2U: ;
>   case 3U: ;
>   case 4U: ;
>   case 5U: ;
>   case 6U: ;
>   case 7U: ;
>   case 8U: ;
>   case 9U: ;
>   case 31U: ;
> #line 929
>   goto ldv_52301;
>   }
>   ldv_52301: ;
> #line 931
>   if ((unsigned int )ns.ldv_40024.disk > (unsigned int )disk_max) {
> #line 932
>     ns.ldv_40024.disk = (unsigned char )disk_max;
59112,59132c66346,66351
< #line 921
<   _min1 = local;
< #line 921
<   _min2 = 131072U;
< #line 921
<   local = _min1 < _min2 ? _min1 : _min2;
< #line 926
<   if ((int )mdev->state.ldv_39979.conn > 9) {
< #line 927
<     if (mdev->agreed_pro_version <= 93) {
< #line 928
<       _min1___0 = mdev->peer_max_bio_size;
< #line 928
<       _min2___0 = 32768U;
< #line 928
<       peer = _min1___0 < _min2___0 ? _min1___0 : _min2___0;
<     } else
< #line 930
<     if (mdev->agreed_pro_version == 94) {
< #line 931
<       peer = 32768U;
---
> #line 934
>   if ((unsigned int )ns.ldv_40024.disk < (unsigned int )disk_min) {
> #line 935
>     if ((unsigned long )warn != (unsigned long )((enum sanitize_state_warnings *)0)) {
> #line 936
>       *warn = IMPLICITLY_UPGRADED_DISK;
59134,59135c66353
< #line 933
<       peer = 131072U;
---
> 
59136a66355,66356
> #line 937
>     ns.ldv_40024.disk = (unsigned char )disk_min;
59140,59147d66359
< #line 936
<   _min1___1 = local;
< #line 936
<   _min2___1 = peer;
< #line 936
<   new = _min1___1 < _min2___1 ? _min1___1 : _min2___1;
< #line 938
<   if ((unsigned int )*((unsigned char *)mdev + 2276UL) == 1U && new < now) {
59149,59150c66361,66363
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED new < now; (%u < %u)\n",
<             new, now);
---
>   if ((unsigned int )ns.ldv_40024.pdsk > (unsigned int )pdsk_max) {
> #line 940
>     ns.ldv_40024.pdsk = (unsigned char )pdsk_max;
59154,59155d66366
< #line 941
<   if (new != now) {
59157,59161c66368,66370
<     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "max BIO size = %u\n",
<               new);
<   } else {
< 
<   }
---
>   if ((unsigned int )ns.ldv_40024.pdsk < (unsigned int )pdsk_min) {
> #line 943
>     if ((unsigned long )warn != (unsigned long )((enum sanitize_state_warnings *)0)) {
59163,59187c66372,66373
<   drbd_setup_queue_param(mdev, new);
< #line 945
<   return;
< }
< }
< #line 954 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static void drbd_reconfig_start(struct drbd_conf *mdev ) 
< { 
<   int tmp ;
<   wait_queue_t __wait ;
<   struct task_struct *tmp___0 ;
<   int tmp___1 ;
<   int tmp___2 ;
<   wait_queue_t __wait___0 ;
<   struct task_struct *tmp___3 ;
<   int tmp___4 ;
< 
<   {
< #line 956
<   tmp = drbd_test_and_set_flag(mdev, CONFIG_PENDING);
< #line 956
<   if (tmp == 0) {
< #line 956
<     goto ldv_54372;
<   } else {
---
>       *warn = IMPLICITLY_UPGRADED_PDSK;
>     } else {
59189,59210c66375,66377
<   }
< #line 956
<   tmp___0 = get_current();
< #line 956
<   __wait.flags = 0U;
< #line 956
<   __wait.private = (void *)tmp___0;
< #line 956
<   __wait.func = & autoremove_wake_function;
< #line 956
<   __wait.task_list.next = & __wait.task_list;
< #line 956
<   __wait.task_list.prev = & __wait.task_list;
<   ldv_54375: 
< #line 956
<   prepare_to_wait(& mdev->state_wait, & __wait, 2);
< #line 956
<   tmp___1 = drbd_test_and_set_flag(mdev, CONFIG_PENDING);
< #line 956
<   if (tmp___1 == 0) {
< #line 956
<     goto ldv_54374;
---
>     }
> #line 945
>     ns.ldv_40024.pdsk = (unsigned char )pdsk_min;
59214,59227c66381,66384
< #line 956
<   schedule();
< #line 956
<   goto ldv_54375;
<   ldv_54374: 
< #line 956
<   finish_wait(& mdev->state_wait, & __wait);
<   ldv_54372: 
< #line 957
<   tmp___2 = drbd_test_flag(mdev, DEVICE_DYING);
< #line 957
<   if (tmp___2 == 0) {
< #line 957
<     goto ldv_54376;
---
> #line 948
>   if ((int )fp == 2 && (((unsigned int )*((unsigned char *)(& ns) + 0UL) == 1U && (int )ns.ldv_40024.conn <= 9) && (int )ns.ldv_40024.pdsk > 5)) {
> #line 950
>     ns.ldv_40024.susp_fen = 1U;
59231,59251c66388,66391
< #line 957
<   tmp___3 = get_current();
< #line 957
<   __wait___0.flags = 0U;
< #line 957
<   __wait___0.private = (void *)tmp___3;
< #line 957
<   __wait___0.func = & autoremove_wake_function;
< #line 957
<   __wait___0.task_list.next = & __wait___0.task_list;
< #line 957
<   __wait___0.task_list.prev = & __wait___0.task_list;
<   ldv_54379: 
< #line 957
<   prepare_to_wait(& mdev->state_wait, & __wait___0, 2);
< #line 957
<   tmp___4 = drbd_test_flag(mdev, DEVICE_DYING);
< #line 957
<   if (tmp___4 == 0) {
< #line 957
<     goto ldv_54378;
---
> #line 952
>   if ((mdev->tconn)->res_opts.on_no_data == 1U && (((unsigned int )*((unsigned char *)(& ns) + 0UL) == 1U && (int )ns.ldv_40024.disk <= 7) && (int )ns.ldv_40024.pdsk <= 7)) {
> #line 954
>     ns.ldv_40024.susp_nod = 1U;
59254a66395,66396
> #line 956
>   if (((unsigned int )*((unsigned char *)(& ns) + 2UL) != 0U || (unsigned int )*((unsigned char *)(& ns) + 2UL) != 0U) || (unsigned int )*((unsigned char *)(& ns) + 2UL) != 0U) {
59256,59262c66398
<   schedule();
< #line 957
<   goto ldv_54379;
<   ldv_54378: 
< #line 957
<   finish_wait(& mdev->state_wait, & __wait___0);
<   ldv_54376: 
---
>     if ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 256U) {
59264c66400,66403
<   drbd_thread_start(& mdev->worker);
---
>       ns.ldv_40024.conn = 20U;
>     } else {
> 
>     }
59266c66405
<   drbd_flush_workqueue(mdev);
---
>     if ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 272U) {
59268c66407,66428
<   return;
---
>       ns.ldv_40024.conn = 21U;
>     } else {
> 
>     }
>   } else {
> #line 962
>     if ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 320U) {
> #line 963
>       ns.ldv_40024.conn = 16U;
>     } else {
> 
>     }
> #line 964
>     if ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 336U) {
> #line 965
>       ns.ldv_40024.conn = 17U;
>     } else {
> 
>     }
>   }
> #line 968
>   return (ns);
59271,59272c66431,66432
< #line 965 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static void drbd_reconfig_done(struct drbd_conf *mdev ) 
---
> #line 971 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> void drbd_resume_al(struct drbd_conf *mdev ) 
59274c66434
< 
---
>   int tmp ;
59277,59285c66437,66440
< #line 967
<   spin_lock_irq(& mdev->req_lock);
< #line 968
<   if (((unsigned int )*((unsigned char *)mdev + 2277UL) == 0U && (unsigned int )*((unsigned short *)mdev + 1138UL) == 0U) && (unsigned int )*((unsigned char *)mdev + 2276UL) == 2U) {
< #line 971
<     drbd_set_flag(mdev, DEVICE_DYING);
< #line 972
<     drbd_thread_stop_nowait(& mdev->worker);
<   } else {
---
> #line 973
>   tmp = test_and_clear_bit(18, (unsigned long volatile   *)(& mdev->flags));
> #line 973
>   if (tmp != 0) {
59287c66442,66444
<     drbd_clear_flag(mdev, CONFIG_PENDING);
---
>     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Resumed AL updates\n");
>   } else {
> 
59290,59293d66446
<   spin_unlock_irq(& mdev->req_lock);
< #line 976
<   __wake_up(& mdev->state_wait, 3U, 1, 0);
< #line 977
59297,59298c66450,66451
< #line 980 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static void drbd_suspend_al(struct drbd_conf *mdev ) 
---
> #line 978 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> static void set_ov_position(struct drbd_conf *mdev , enum drbd_conns cs ) 
59300,59302c66453
<   int s ;
<   int tmp ;
<   int tmp___0 ;
---
>   unsigned long bit ;
59304a66456,66462
> #line 980
>   if ((mdev->tconn)->agreed_pro_version <= 89) {
> #line 981
>     mdev->ov_start_sector = 0UL;
>   } else {
> 
>   }
59306,59308c66464,66466
<   s = 0;
< #line 984
<   tmp = lc_try_lock(mdev->act_log);
---
>   mdev->rs_total = drbd_bm_bits(mdev);
> #line 983
>   mdev->ov_position = 0UL;
59310,59314c66468,66470
<   if (tmp != 0) {
< #line 985
<     drbd_al_shrink(mdev);
< #line 986
<     lc_unlock(mdev->act_log);
---
>   if ((unsigned int )cs == 19U) {
> #line 990
>     mdev->ov_start_sector = 0xffffffffffffffffUL;
59316,59320d66471
< #line 988
<     dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Failed to lock al in drbd_suspend_al()\n");
< #line 989
<     return;
<   }
59322c66473
<   spin_lock_irq(& mdev->req_lock);
---
>     bit = mdev->ov_start_sector >> 3;
59324,59326c66475
<   if ((int )mdev->state.ldv_39979.conn <= 9) {
< #line 994
<     tmp___0 = drbd_test_and_set_flag(mdev, AL_SUSPENDED);
---
>     if (mdev->rs_total <= bit) {
59328,59331c66477
<     s = tmp___0 == 0;
<   } else {
< 
<   }
---
>       mdev->ov_start_sector = (mdev->rs_total - 1UL) << 3;
59333c66479,66480
<   spin_unlock_irq(& mdev->req_lock);
---
>       mdev->rs_total = 1UL;
>     } else {
59335c66482,66483
<   if (s != 0) {
---
>       mdev->rs_total = mdev->rs_total - bit;
>     }
59337,59339c66485
<     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Suspended AL updates\n");
<   } else {
< 
---
>     mdev->ov_position = mdev->ov_start_sector;
59341c66487,66489
< #line 1000
---
> #line 1001
>   mdev->ov_left = mdev->rs_total;
> #line 1002
59345,59347c66493,66495
< #line 1004 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static int drbd_nl_disk_conf(struct drbd_conf *mdev , struct drbd_nl_cfg_req *nlp ,
<                              struct drbd_nl_cfg_reply *reply ) 
---
> #line 1014 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> enum drbd_state_rv __drbd_set_state(struct drbd_conf *mdev , union drbd_state ns ,
>                                     enum chg_state_flags flags , struct completion *done ) 
59349,59356d66496
<   enum drbd_ret_code retcode ;
<   enum determine_dev_size dd ;
<   sector_t max_possible_sectors ;
<   sector_t min_md_device_sectors ;
<   struct drbd_backing_dev *nbc ;
<   struct block_device *bdev ;
<   struct lru_cache *resync_lru ;
<   union drbd_state ns ;
59359,59366c66499,66507
<   int cp_discovered ;
<   int logical_block_size ;
<   int tmp ;
<   wait_queue_t __wait ;
<   struct task_struct *tmp___0 ;
<   int tmp___1 ;
<   void *tmp___2 ;
<   struct lock_class_key __key ;
---
>   enum sanitize_state_warnings ssw ;
>   struct after_state_chg_work *ascw ;
>   enum drbd_state_rv tmp ;
>   bool tmp___0 ;
>   unsigned long tmp___1 ;
>   unsigned long now ;
>   int i ;
>   u32 mdf ;
>   int tmp___2 ;
59368,59411c66509
<   int prot ;
<   int tmp___4 ;
<   long tmp___5 ;
<   long tmp___6 ;
<   long tmp___7 ;
<   long tmp___8 ;
<   sector_t tmp___9 ;
<   sector_t tmp___10 ;
<   sector_t tmp___11 ;
<   sector_t tmp___12 ;
<   sector_t tmp___13 ;
<   int tmp___14 ;
<   int tmp___15 ;
<   wait_queue_t __wait___0 ;
<   struct task_struct *tmp___16 ;
<   int tmp___17 ;
<   int tmp___18 ;
<   union drbd_state val ;
<   union drbd_state mask ;
<   int tmp___19 ;
<   unsigned short tmp___20 ;
<   struct page *page ;
<   struct page *tmp___21 ;
<   int tmp___22 ;
<   int tmp___23 ;
<   int tmp___24 ;
<   int tmp___25 ;
<   sector_t tmp___26 ;
<   int tmp___27 ;
<   int tmp___28 ;
<   int tmp___29 ;
<   int tmp___30 ;
<   int tmp___31 ;
<   int tmp___32 ;
<   int tmp___33 ;
<   int tmp___34 ;
<   int tmp___35 ;
<   unsigned long tmp___36 ;
<   unsigned long tmp___37 ;
<   int tmp___38 ;
<   int tmp___39 ;
<   int tmp___40 ;
<   union drbd_state val___0 ;
<   union drbd_state mask___0 ;
---
>   void *tmp___4 ;
59414,59421c66512,66513
< #line 1011
<   nbc = 0;
< #line 1013
<   resync_lru = 0;
< #line 1016
<   cp_discovered = 0;
< #line 1019
<   drbd_reconfig_start(mdev);
---
> #line 1018
>   rv = 1;
59423,59425c66515
<   if ((int )mdev->state.ldv_39979.disk > 0) {
< #line 1023
<     retcode = ERR_DISK_CONFIGURED;
---
>   os = drbd_read_state(mdev);
59427,59436c66517,66521
<     goto fail;
<   } else {
< 
<   }
< #line 1030
<   tmp = atomic_read((atomic_t const   *)(& mdev->local_cnt));
< #line 1030
<   if (tmp == 0) {
< #line 1030
<     goto ldv_54405;
---
>   ns = sanitize_state(mdev, ns, & ssw);
> #line 1025
>   if (ns.i == os.i) {
> #line 1026
>     return (SS_NOTHING_TO_DO);
59439a66525,66528
> #line 1028
>   rv = is_valid_transition(os, ns);
> #line 1029
>   if ((int )rv <= 0) {
59441,59460c66530
<   tmp___0 = get_current();
< #line 1030
<   __wait.flags = 0U;
< #line 1030
<   __wait.private = (void *)tmp___0;
< #line 1030
<   __wait.func = & autoremove_wake_function;
< #line 1030
<   __wait.task_list.next = & __wait.task_list;
< #line 1030
<   __wait.task_list.prev = & __wait.task_list;
<   ldv_54408: 
< #line 1030
<   prepare_to_wait(& mdev->misc_wait, & __wait, 2);
< #line 1030
<   tmp___1 = atomic_read((atomic_t const   *)(& mdev->local_cnt));
< #line 1030
<   if (tmp___1 == 0) {
< #line 1030
<     goto ldv_54407;
---
>     return (rv);
59464,59487c66534,66546
< #line 1030
<   schedule();
< #line 1030
<   goto ldv_54408;
<   ldv_54407: 
< #line 1030
<   finish_wait(& mdev->misc_wait, & __wait);
<   ldv_54405: 
< #line 1033
<   drbd_clear_flag(mdev, FORCE_DETACH);
< #line 1034
<   drbd_clear_flag(mdev, WAS_IO_ERROR);
< #line 1035
<   drbd_clear_flag(mdev, WAS_READ_ERROR);
< #line 1038
<   mdev->rs_total = 0UL;
< #line 1039
<   mdev->rs_failed = 0UL;
< #line 1040
<   atomic_set(& mdev->rs_pending_cnt, 0);
< #line 1043
<   tmp___2 = kzalloc(472UL, 208U);
< #line 1043
<   nbc = (struct drbd_backing_dev *)tmp___2;
---
> #line 1032
>   if (((unsigned int )flags & 1U) == 0U) {
> #line 1036
>     rv = is_valid_state(mdev, ns);
> #line 1037
>     if ((int )rv <= 0) {
> #line 1041
>       tmp = is_valid_state(mdev, os);
> #line 1041
>       if ((int )tmp == (int )rv) {
> #line 1042
>         rv = is_valid_soft_transition(os, ns, mdev->tconn);
>       } else {
59489,59493c66548,66552
<   if ((unsigned long )nbc == (unsigned long )((struct drbd_backing_dev *)0)) {
< #line 1045
<     retcode = ERR_NOMEM;
< #line 1046
<     goto fail;
---
>         rv = is_valid_soft_transition(os, ns, mdev->tconn);
>       }
>     } else {
> 
>     }
59496a66556,66559
> #line 1047
>   if ((int )rv <= 0) {
> #line 1048
>     if (((unsigned int )flags & 2U) != 0U) {
59498c66561,66564
<   nbc->dc.disk_size = 0ULL;
---
>       print_st_err(mdev, os, ns, rv);
>     } else {
> 
>     }
59500,59517c66566
<   nbc->dc.on_io_error = 0;
< #line 1051
<   nbc->dc.fencing = 0;
< #line 1052
<   nbc->dc.max_bio_bvecs = 0;
< #line 1054
<   spinlock_check(& nbc->md.uuid_lock);
< #line 1054
<   __raw_spin_lock_init(& nbc->md.uuid_lock.ldv_5957.rlock, "&(&nbc->md.uuid_lock)->rlock",
<                        & __key);
< #line 1056
<   tmp___3 = disk_conf_from_tags(mdev, (unsigned short *)(& nlp->tag_list), & nbc->dc);
< #line 1056
<   if (tmp___3 == 0) {
< #line 1057
<     retcode = ERR_MANDATORY_TAG;
< #line 1058
<     goto fail;
---
>     return (rv);
59520a66570,66575
> #line 1053
>   print_sanitize_warnings(mdev, ssw);
> #line 1055
>   drbd_pr_state_change(mdev, os, ns, flags);
> #line 1060
>   if (((unsigned int )flags & 1024U) == 0U) {
59522,59526c66577
<   if (nbc->dc.meta_dev_idx < -3) {
< #line 1062
<     retcode = ERR_MD_IDX_INVALID;
< #line 1063
<     goto fail;
---
>     conn_pr_state_change(mdev->tconn, os, ns, (enum chg_state_flags )(((unsigned int )flags & 4294965279U) | 1024U));
59530,59533d66580
< #line 1066
<   tmp___4 = get_net_conf(mdev);
< #line 1066
<   if (tmp___4 != 0) {
59535,59537c66582
<     prot = (mdev->net_conf)->wire_protocol;
< #line 1068
<     put_net_conf(mdev);
---
>   if (((unsigned int )*((unsigned char *)(& os) + 1UL) != 4U && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 4U) || ((unsigned int )*((unsigned char *)(& os) + 1UL) != 0U && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 0U)) {
59539,59541c66584,66587
<     if (nbc->dc.fencing == 2 && prot == 1) {
< #line 1070
<       retcode = ERR_STONITH_AND_PROT_A;
---
>     atomic_inc(& mdev->local_cnt);
>   } else {
> 
>   }
59543c66589,66610
<       goto fail;
---
>   mdev->state.i = ns.i;
> #line 1072
>   (mdev->tconn)->susp = ns.ldv_40024.susp;
> #line 1073
>   (mdev->tconn)->susp_nod = ns.ldv_40024.susp_nod;
> #line 1074
>   (mdev->tconn)->susp_fen = ns.ldv_40024.susp_fen;
> #line 1076
>   if ((unsigned int )*((unsigned char *)(& os) + 1UL) == 2U && (int )ns.ldv_40024.disk > 2) {
> #line 1077
>     drbd_print_uuids(mdev, "attached to UUIDs");
>   } else {
> 
>   }
> #line 1080
>   if ((unsigned int )*((unsigned short *)(& os) + 0UL) == 144U && (unsigned int )*((unsigned short *)(& ns) + 0UL) != 144U) {
> #line 1080
>     tmp___0 = no_peer_wf_report_params(mdev->tconn);
> #line 1080
>     if ((int )tmp___0) {
> #line 1082
>       clear_bit(10, (unsigned long volatile   *)(& (mdev->tconn)->flags));
59550,59564c66617,66636
< #line 1075
<   bdev = blkdev_get_by_path((char const   *)(& nbc->dc.backing_dev), 131U, (void *)mdev);
< #line 1077
<   tmp___6 = IS_ERR((void const   *)bdev);
< #line 1077
<   if (tmp___6 != 0L) {
< #line 1078
<     tmp___5 = PTR_ERR((void const   *)bdev);
< #line 1078
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "open(\"%s\") failed with %ld\n",
<             (unsigned char *)(& nbc->dc.backing_dev), tmp___5);
< #line 1080
<     retcode = ERR_OPEN_DISK;
< #line 1081
<     goto fail;
---
> #line 1084
>   __wake_up(& mdev->misc_wait, 3U, 1, 0);
> #line 1085
>   __wake_up(& mdev->state_wait, 3U, 1, 0);
> #line 1086
>   __wake_up(& (mdev->tconn)->ping_wait, 3U, 1, 0);
> #line 1090
>   if (((unsigned int )*((unsigned short *)(& os) + 0UL) == 288U || (unsigned int )*((unsigned short *)(& os) + 0UL) == 304U) && (int )ns.ldv_40024.conn <= 10) {
> #line 1092
>     tmp___1 = drbd_bm_bits(mdev);
> #line 1092
>     mdev->ov_start_sector = (tmp___1 - mdev->ov_left) << 3;
> #line 1094
>     if (mdev->ov_left != 0UL) {
> #line 1095
>       _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Online Verify reached sector %llu\n",
>                 (unsigned long long )mdev->ov_start_sector);
>     } else {
> 
>     }
59568,59582c66640,66641
< #line 1083
<   nbc->backing_bdev = bdev;
< #line 1093
<   bdev = blkdev_get_by_path((char const   *)(& nbc->dc.meta_dev), 131U, nbc->dc.meta_dev_idx < 0 ? (void *)mdev : (void *)drbd_m_holder);
< #line 1097
<   tmp___8 = IS_ERR((void const   *)bdev);
< #line 1097
<   if (tmp___8 != 0L) {
< #line 1098
<     tmp___7 = PTR_ERR((void const   *)bdev);
< #line 1098
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "open(\"%s\") failed with %ld\n",
<             (unsigned char *)(& nbc->dc.meta_dev), tmp___7);
< #line 1100
<     retcode = ERR_OPEN_MD_DISK;
---
> #line 1099
>   if (((unsigned int )*((unsigned short *)(& os) + 0UL) == 336U || (unsigned int )*((unsigned short *)(& os) + 0UL) == 320U) && ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 272U || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 256U)) {
59584c66643,66652
<     goto fail;
---
>     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Syncer continues.\n");
> #line 1102
>     mdev->rs_paused = mdev->rs_paused + (unsigned long )((long )jiffies - (long )mdev->rs_mark_time[mdev->rs_last_mark]);
> #line 1104
>     if ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 272U) {
> #line 1105
>       mod_timer(& mdev->resync_timer, jiffies);
>     } else {
> 
>     }
59588,59591d66655
< #line 1103
<   nbc->md_bdev = bdev;
< #line 1105
<   if (((unsigned long )nbc->backing_bdev == (unsigned long )nbc->md_bdev) ^ (int )((_Bool )(nbc->dc.meta_dev_idx == -1 || nbc->dc.meta_dev_idx == -3))) {
59593,59595c66657,66661
<     retcode = ERR_MD_IDX_INVALID;
< #line 1109
<     goto fail;
---
>   if (((unsigned int )*((unsigned short *)(& os) + 0UL) == 272U || (unsigned int )*((unsigned short *)(& os) + 0UL) == 256U) && ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 336U || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 320U)) {
> #line 1110
>     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Resync suspended\n");
> #line 1111
>     mdev->rs_mark_time[mdev->rs_last_mark] = jiffies;
59599,59602c66665,66666
< #line 1112
<   resync_lru = lc_create("resync", drbd_bm_ext_cache, 61U, 64UL, 16UL);
< #line 1115
<   if ((unsigned long )resync_lru == (unsigned long )((struct lru_cache *)0)) {
---
> #line 1114
>   if ((unsigned int )*((unsigned short *)(& os) + 0UL) == 160U && ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 288U || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 304U)) {
59604,59609c66668,66672
<     retcode = ERR_NOMEM;
< #line 1117
<     goto fail;
<   } else {
< 
<   }
---
>     now = jiffies;
> #line 1119
>     set_ov_position(mdev, (enum drbd_conns )ns.ldv_40024.conn);
> #line 1120
>     mdev->rs_start = now;
59611,59613c66674,66676
<   drbd_md_set_sector_offsets(mdev, nbc);
< #line 1123
<   tmp___10 = drbd_get_max_capacity___1(nbc);
---
>     mdev->rs_last_events = 0;
> #line 1122
>     mdev->rs_last_sect_ev = 0;
59615,59617c66678
<   if ((unsigned long long )tmp___10 < nbc->dc.disk_size) {
< #line 1124
<     tmp___9 = drbd_get_max_capacity___1(nbc);
---
>     mdev->ov_last_oos_size = 0UL;
59619,59620c66680,66685
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "max capacity %llu smaller than disk size %llu\n",
<             (unsigned long long )tmp___9, nbc->dc.disk_size);
---
>     mdev->ov_last_oos_start = 0UL;
> #line 1126
>     i = 0;
> #line 1126
>     goto ldv_52343;
>     ldv_52342: 
59622c66687
<     retcode = ERR_DISK_TOO_SMALL;
---
>     mdev->rs_mark_left[i] = mdev->ov_left;
59624,59625c66689,66697
<     goto fail;
<   } else {
---
>     mdev->rs_mark_time[i] = now;
> #line 1126
>     i = i + 1;
>     ldv_52343: ;
> #line 1126
>     if (i <= 7) {
> #line 1127
>       goto ldv_52342;
>     } else {
59627c66699
<   }
---
>     }
59629,59631c66701,66703
<   if (nbc->dc.meta_dev_idx < 0) {
< #line 1132
<     max_possible_sectors = 2251799813685248UL;
---
>     drbd_rs_controller_reset(mdev);
> #line 1133
>     if ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 288U) {
59633,59634c66705,66706
<     min_md_device_sectors = 2048UL;
<   } else {
---
>       _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Starting Online Verify from sector %llu\n",
>                 (unsigned long long )mdev->ov_position);
59636,59638c66708,66713
<     max_possible_sectors = 8587575296UL;
< #line 1137
<     min_md_device_sectors = (unsigned long )(nbc->dc.meta_dev_idx + 1) * 262144UL;
---
>       mod_timer(& mdev->resync_timer, jiffies);
>     } else {
> 
>     }
>   } else {
> 
59641c66716
<   tmp___11 = drbd_get_capacity(nbc->md_bdev);
---
>   tmp___3 = _get_ldev_if_state(mdev, D_INCONSISTENT);
59643c66718
<   if (tmp___11 < min_md_device_sectors) {
---
>   if (tmp___3 != 0) {
59645,59648c66720
<     retcode = ERR_MD_DISK_TOO_SMALL;
< #line 1142
<     dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "refusing attach: md-device too small, at least %llu sectors needed for this meta-disk type\n",
<              (unsigned long long )min_md_device_sectors);
---
>     mdf = (mdev->ldev)->md.flags & 4294967176U;
59650,59651c66722,66729
<     goto fail;
<   } else {
---
>     mdf = mdf & 4294967167U;
> #line 1146
>     tmp___2 = constant_test_bit(5U, (unsigned long const volatile   *)(& mdev->flags));
> #line 1146
>     if (tmp___2 != 0) {
> #line 1147
>       mdf = mdf | 64U;
>     } else {
59653,59657c66731,66733
<   }
< #line 1150
<   tmp___12 = drbd_get_max_capacity___1(nbc);
< #line 1150
<   tmp___13 = drbd_get_capacity(mdev->this_bdev);
---
>     }
> #line 1148
>     if ((unsigned int )*((unsigned char *)mdev + 748UL) == 1U || ((int )mdev->state.ldv_49522.pdsk <= 3 && (unsigned int )*((unsigned char *)mdev + 748UL) == 4U)) {
59659c66735,66740
<   if (tmp___12 < tmp___13) {
---
>       mdf = mdf | 2U;
>     } else {
> 
>     }
> #line 1151
>     if ((int )mdev->state.ldv_49522.conn > 9) {
59661c66742,66745
<     retcode = ERR_DISK_TOO_SMALL;
---
>       mdf = mdf | 4U;
>     } else {
> 
>     }
59663,59664c66747,66750
<     goto fail;
<   } else {
---
>     if ((int )mdev->state.ldv_49522.disk > 4) {
> #line 1154
>       mdf = mdf | 1U;
>     } else {
59666c66752,66754
<   }
---
>     }
> #line 1155
>     if ((int )mdev->state.ldv_49522.disk > 5) {
59668,59677c66756
<   nbc->known_size = drbd_get_capacity(nbc->backing_bdev);
< #line 1158
<   if (nbc->known_size > max_possible_sectors) {
< #line 1159
<     dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "==> truncating very big lower level device to currently maximum possible %llu sectors <==\n",
<              (unsigned long long )max_possible_sectors);
< #line 1162
<     if (nbc->dc.meta_dev_idx >= 0) {
< #line 1163
<       dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "==>> using internal or flexible meta data may help <<==\n");
---
>       mdf = mdf | 16U;
59681c66760,66764
<   } else {
---
> #line 1157
>     if ((int )mdev->state.ldv_49522.pdsk <= 5 && (int )mdev->state.ldv_49522.pdsk > 3) {
> #line 1158
>       mdf = mdf | 32U;
>     } else {
59683,59698c66766,66772
<   }
< #line 1167
<   drbd_suspend_io(mdev);
< #line 1169
<   tmp___14 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
< #line 1169
<   if (tmp___14 == 0) {
< #line 1169
<     goto ldv_54411;
<   } else {
< #line 1169
<     tmp___15 = is_susp(mdev->state);
< #line 1169
<     if (tmp___15 != 0) {
< #line 1169
<       goto ldv_54411;
---
>     }
> #line 1159
>     if ((mdev->ldev)->md.flags != mdf) {
> #line 1160
>       (mdev->ldev)->md.flags = mdf;
> #line 1161
>       drbd_md_mark_dirty(mdev);
59702,59730c66776,66779
<   }
< #line 1169
<   tmp___16 = get_current();
< #line 1169
<   __wait___0.flags = 0U;
< #line 1169
<   __wait___0.private = (void *)tmp___16;
< #line 1169
<   __wait___0.func = & autoremove_wake_function;
< #line 1169
<   __wait___0.task_list.next = & __wait___0.task_list;
< #line 1169
<   __wait___0.task_list.prev = & __wait___0.task_list;
<   ldv_54414: 
< #line 1169
<   prepare_to_wait(& mdev->misc_wait, & __wait___0, 2);
< #line 1169
<   tmp___17 = atomic_read((atomic_t const   *)(& mdev->ap_pending_cnt));
< #line 1169
<   if (tmp___17 == 0) {
< #line 1169
<     goto ldv_54413;
<   } else {
< #line 1169
<     tmp___18 = is_susp(mdev->state);
< #line 1169
<     if (tmp___18 != 0) {
< #line 1169
<       goto ldv_54413;
---
> #line 1163
>     if ((int )os.ldv_40024.disk <= 6 && (int )ns.ldv_40024.disk > 6) {
> #line 1164
>       drbd_set_ed_uuid(mdev, (mdev->ldev)->md.uuid[0]);
59733a66783,66786
> #line 1165
>     put_ldev(mdev);
>   } else {
> 
59736,59742c66789
<   schedule();
< #line 1169
<   goto ldv_54414;
<   ldv_54413: 
< #line 1169
<   finish_wait(& mdev->misc_wait, & __wait___0);
<   ldv_54411: 
---
>   if ((((unsigned int )*((unsigned char *)(& os) + 1UL) == 8U && *((unsigned int *)(& os) + 0UL) == 32768U) && (unsigned int )*((unsigned char *)(& os) + 0UL) == 8U) && (unsigned int )*((unsigned char *)(& ns) + 0UL) == 4U) {
59744,59754c66791,66794
<   drbd_flush_workqueue(mdev);
< #line 1173
<   val.i = 0U;
< #line 1173
<   val.ldv_39979.disk = 1U;
< #line 1173
<   mask.i = 0U;
< #line 1173
<   mask.ldv_39979.disk = 15U;
< #line 1173
<   rv = _drbd_request_state(mdev, mask, val, CS_VERBOSE);
---
>     set_bit(6U, (unsigned long volatile   *)(& mdev->flags));
>   } else {
> 
>   }
59756c66796
<   retcode = (enum drbd_ret_code )rv;
---
>   if ((unsigned int )*((unsigned short *)(& os) + 0UL) != 16U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 16U) {
59758,59762c66798
<   drbd_resume_io(mdev);
< #line 1176
<   if ((int )rv <= 0) {
< #line 1177
<     goto fail;
---
>     drbd_thread_stop_nowait(& (mdev->tconn)->receiver);
59765a66802,66803
> #line 1178
>   if ((unsigned int )*((unsigned short *)(& os) + 0UL) != 0U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 0U) {
59767,59771c66805
<   tmp___19 = _get_ldev_if_state(mdev, D_ATTACHING);
< #line 1179
<   if (tmp___19 == 0) {
< #line 1180
<     goto force_diskless;
---
>     drbd_thread_stop_nowait(& (mdev->tconn)->receiver);
59776,59782c66810,66815
<   drbd_md_set_sector_offsets(mdev, nbc);
< #line 1185
<   tmp___20 = bdev_logical_block_size(nbc->md_bdev);
< #line 1185
<   logical_block_size = (int )tmp___20;
< #line 1186
<   if (logical_block_size == 0) {
---
>   if (((int )os.ldv_40024.conn > 8 && (int )ns.ldv_40024.conn <= 7) && (int )ns.ldv_40024.conn > 2) {
> #line 1184
>     drbd_thread_restart_nowait(& (mdev->tconn)->receiver);
>   } else {
> 
>   }
59784c66817,66819
<     logical_block_size = 512;
---
>   if ((int )os.ldv_40024.conn <= 9 && (int )ns.ldv_40024.conn > 9) {
> #line 1188
>     drbd_resume_al(mdev);
59788,59797d66822
< #line 1189
<   if (logical_block_size != 512) {
< #line 1190
<     if ((unsigned long )mdev->md_io_tmpp == (unsigned long )((struct page *)0)) {
< #line 1191
<       tmp___21 = alloc_pages(16U, 0U);
< #line 1191
<       page = tmp___21;
< #line 1192
<       if ((unsigned long )page == (unsigned long )((struct page *)0)) {
59799,59802c66824
<         goto force_diskless_dec;
<       } else {
< 
<       }
---
>   if (((unsigned int )*((unsigned char *)(& os) + 1UL) == 2U || (unsigned int )*((unsigned char *)(& os) + 1UL) == 6U) && (int )ns.ldv_40024.disk > 3) {
59804,59812c66826
<       dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Meta data\'s bdev logical_block_size = %d != %d\n",
<                logical_block_size, 512);
< #line 1197
<       dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Workaround engaged (has performance impact).\n");
< #line 1199
<       mdev->md_io_tmpp = page;
<     } else {
< 
<     }
---
>     mdev->last_reattach_jif = jiffies;
59815a66830,66843
> #line 1197
>   tmp___4 = kmalloc(56UL, 32U);
> #line 1197
>   ascw = (struct after_state_chg_work *)tmp___4;
> #line 1198
>   if ((unsigned long )ascw != (unsigned long )((struct after_state_chg_work *)0)) {
> #line 1199
>     ascw->os = os;
> #line 1200
>     ascw->ns = ns;
> #line 1201
>     ascw->flags = flags;
> #line 1202
>     ascw->w.cb = & w_after_state_ch;
59817c66845
<   if ((unsigned long )mdev->bitmap == (unsigned long )((struct drbd_bitmap *)0)) {
---
>     ascw->w.ldv_49807.mdev = mdev;
59819,59821c66847
<     tmp___22 = drbd_bm_init(mdev);
< #line 1204
<     if (tmp___22 != 0) {
---
>     ascw->done = done;
59823,59828c66849
<       retcode = ERR_NOMEM;
< #line 1206
<       goto force_diskless_dec;
<     } else {
< 
<     }
---
>     drbd_queue_work(& (mdev->tconn)->sender_work, & ascw->w);
59830c66851,66852
< 
---
> #line 1207
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Could not kmalloc an ascw\n");
59833,59840c66855,66863
<   tmp___23 = drbd_md_read(mdev, nbc);
< #line 1210
<   retcode = (enum drbd_ret_code )tmp___23;
< #line 1211
<   if ((unsigned int )retcode != 101U) {
< #line 1212
<     goto force_diskless_dec;
<   } else {
---
>   return (rv);
> }
> }
> #line 1213 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> static int w_after_state_ch(struct drbd_work *w , int unused ) 
> { 
>   struct after_state_chg_work *ascw ;
>   struct drbd_work  const  *__mptr ;
>   struct drbd_conf *mdev ;
59842,59844c66865,66869
<   }
< #line 1214
<   if (((int )mdev->state.ldv_39979.conn <= 9 && (unsigned int )*((unsigned char *)mdev + 2276UL) == 1U) && ((mdev->ed_uuid ^ nbc->md.uuid[0]) & 0xfffffffffffffffeULL) != 0ULL) {
---
>   {
> #line 1216
>   __mptr = (struct drbd_work  const  *)w;
> #line 1216
>   ascw = (struct after_state_chg_work *)__mptr;
59846,59847c66871
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Can only attach to data with current UUID=%016llX\n",
<             mdev->ed_uuid);
---
>   mdev = w->ldv_49807.mdev;
59849c66873
<     retcode = ERR_DATA_NOT_CURRENT;
---
>   after_state_ch(mdev, ascw->os, ascw->ns, ascw->flags);
59851c66875,66886
<     goto force_diskless_dec;
---
>   if (((unsigned int )ascw->flags & 4U) != 0U) {
> #line 1221
>     if ((unsigned long )ascw->done == (unsigned long )((struct completion *)0)) {
> #line 1221
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( ascw->done != NULL ) in %s:%d\n",
>               (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared",
>               1221);
>     } else {
> 
>     }
> #line 1222
>     complete(ascw->done);
59856,59860c66891
<   tmp___24 = drbd_check_al_size(mdev);
< #line 1224
<   if (tmp___24 != 0) {
< #line 1225
<     retcode = ERR_NOMEM;
---
>   kfree((void const   *)ascw);
59862,59863c66893,66902
<     goto force_diskless_dec;
<   } else {
---
>   return (0);
> }
> }
> #line 1229 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> static void abw_start_sync(struct drbd_conf *mdev , int rv ) 
> { 
>   union drbd_state val ;
>   union drbd_state mask ;
>   union drbd_state val___0 ;
>   union drbd_state mask___0 ;
59865,59873c66904,66906
<   }
< #line 1230
<   tmp___25 = drbd_md_test_flag(nbc, 1);
< #line 1230
<   if (tmp___25 != 0) {
< #line 1230
<     tmp___26 = drbd_new_dev_size(mdev, nbc, 0);
< #line 1230
<     if ((unsigned long long )tmp___26 < nbc->md.la_size_sect) {
---
>   {
> #line 1231
>   if (rv != 0) {
59875c66908,66914
<       dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "refusing to truncate a consistent device\n");
---
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Writing the bitmap failed not starting resync.\n");
> #line 1233
>     val.i = 0U;
> #line 1233
>     val.ldv_40024.conn = 10U;
> #line 1233
>     mask.i = 0U;
59877c66916,66918
<       retcode = ERR_DISK_TOO_SMALL;
---
>     mask.ldv_40024.conn = 31U;
> #line 1233
>     _drbd_request_state(mdev, mask, val, CS_VERBOSE);
59879,59882c66920
<       goto force_diskless_dec;
<     } else {
< 
<     }
---
>     return;
59887,59891c66925,66926
<   tmp___27 = drbd_al_read_log(mdev, nbc);
< #line 1237
<   if (tmp___27 == 0) {
< #line 1238
<     retcode = ERR_IO_MD_DISK;
---
>   switch ((int )mdev->state.ldv_49522.conn) {
>   case 12: 
59893,59903c66928,66943
<     goto force_diskless_dec;
<   } else {
< 
<   }
< #line 1244
<   if ((unsigned int )*((unsigned char *)nbc + 444UL) != 0U) {
< #line 1245
<     drbd_set_flag(mdev, MD_NO_FUA);
<   } else {
< #line 1247
<     drbd_clear_flag(mdev, MD_NO_FUA);
---
>   val___0.i = 0U;
> #line 1239
>   val___0.ldv_40024.conn = 15U;
> #line 1239
>   mask___0.i = 0U;
> #line 1239
>   mask___0.ldv_40024.conn = 31U;
> #line 1239
>   _drbd_request_state(mdev, mask___0, val___0, CS_VERBOSE);
> #line 1240
>   goto ldv_52367;
>   case 11: 
> #line 1242
>   drbd_start_resync(mdev, C_SYNC_SOURCE);
> #line 1243
>   goto ldv_52367;
59904a66945,66957
>   ldv_52367: ;
> #line 1246
>   return;
> }
> }
> #line 1247 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> int drbd_bitmap_io_from_worker(struct drbd_conf *mdev , int (*io_fn)(struct drbd_conf * ) ,
>                                char *why , enum bm_flag flags ) 
> { 
>   int rv ;
>   struct task_struct *tmp ;
> 
>   {
59906c66959
<   if ((unsigned long )mdev->ldev != (unsigned long )((struct drbd_backing_dev *)0)) {
---
>   tmp = get_current();
59908,59909c66961,66964
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( mdev->ldev == NULL ) in %s:%d\n",
<             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared",
---
>   if ((unsigned long )tmp != (unsigned long )(mdev->tconn)->worker.task) {
> #line 1253
>     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT( current == mdev->tconn->worker.task ) in %s:%d\n",
>             (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared",
59914,59917d66968
< #line 1254
<   mdev->ldev = nbc;
< #line 1255
<   mdev->resync = resync_lru;
59919,59921c66970,66972
<   nbc = 0;
< #line 1257
<   resync_lru = 0;
---
>   set_bit(8U, (unsigned long volatile   *)(& mdev->flags));
> #line 1258
>   drbd_bm_lock(mdev, why, flags);
59923c66974
<   mdev->write_ordering = WO_bdev_flush;
---
>   rv = (*io_fn)(mdev);
59925,59927c66976
<   drbd_bump_write_ordering(mdev, WO_bdev_flush);
< #line 1262
<   tmp___28 = drbd_md_test_flag(mdev->ldev, 64);
---
>   drbd_bm_unlock(mdev);
59929,59971c66978,67018
<   if (tmp___28 != 0) {
< #line 1263
<     drbd_set_flag(mdev, CRASHED_PRIMARY);
<   } else {
< #line 1265
<     drbd_clear_flag(mdev, CRASHED_PRIMARY);
<   }
< #line 1267
<   tmp___29 = drbd_md_test_flag(mdev->ldev, 2);
< #line 1267
<   if (tmp___29 != 0 && ((unsigned int )*((unsigned char *)mdev + 2276UL) != 1U || (unsigned int )*((unsigned char *)mdev + 2278UL) == 0U)) {
< #line 1269
<     drbd_set_flag(mdev, CRASHED_PRIMARY);
< #line 1270
<     cp_discovered = 1;
<   } else {
< 
<   }
< #line 1273
<   mdev->send_cnt = 0U;
< #line 1274
<   mdev->recv_cnt = 0U;
< #line 1275
<   mdev->read_cnt = 0U;
< #line 1276
<   mdev->writ_cnt = 0U;
< #line 1278
<   drbd_reconsider_max_bio_size(mdev);
< #line 1294
<   drbd_clear_flag(mdev, USE_DEGR_WFC_T);
< #line 1295
<   if ((unsigned int )*((unsigned char *)mdev + 2276UL) != 1U) {
< #line 1295
<     tmp___30 = drbd_md_test_flag(mdev->ldev, 2);
< #line 1295
<     if (tmp___30 != 0) {
< #line 1295
<       tmp___31 = drbd_md_test_flag(mdev->ldev, 4);
< #line 1295
<       if (tmp___31 == 0) {
< #line 1298
<         drbd_set_flag(mdev, USE_DEGR_WFC_T);
<       } else {
---
>   drbd_resume_io(mdev);
> #line 1264
>   return (rv);
> }
> }
> #line 1274 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> static void after_state_ch(struct drbd_conf *mdev , union drbd_state os , union drbd_state ns ,
>                            enum chg_state_flags flags ) 
> { 
>   struct sib_info sib ;
>   struct drbd_tconn *tconn ;
>   enum drbd_req_event what ;
>   enum drbd_conns tmp ;
>   enum drbd_disk_state tmp___0 ;
>   union drbd_state __constr_expr_0 ;
>   union drbd_state __constr_expr_1 ;
>   struct drbd_tconn *tconn___0 ;
>   struct drbd_conf *odev ;
>   int vnr ;
>   void *tmp___1 ;
>   void *tmp___2 ;
>   union drbd_state __constr_expr_2 ;
>   union drbd_state __constr_expr_3 ;
>   enum drbd_conns tmp___3 ;
>   int tmp___4 ;
>   int tmp___5 ;
>   int tmp___6 ;
>   int tmp___7 ;
>   int tmp___8 ;
>   enum drbd_io_error_p eh ;
>   int was_io_error ;
>   struct disk_conf *_________p1 ;
>   bool __warned ;
>   int tmp___9 ;
>   int tmp___10 ;
>   int tmp___11 ;
>   char const   *tmp___12 ;
>   char const   *tmp___13 ;
>   int tmp___14 ;
>   bool tmp___15 ;
>   int tmp___16 ;
59973c67020,67034
<       }
---
>   {
> #line 1279
>   sib.sib_reason = SIB_STATE_CHANGE;
> #line 1280
>   sib.ldv_50742.ldv_50741.os = os;
> #line 1281
>   sib.ldv_50742.ldv_50741.ns = ns;
> #line 1283
>   if ((unsigned int )*((unsigned short *)(& os) + 0UL) != 160U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 160U) {
> #line 1284
>     clear_bit(5, (unsigned long volatile   *)(& mdev->flags));
> #line 1285
>     if ((unsigned long )mdev->p_uuid != (unsigned long )((u64 *)0)) {
> #line 1286
>       *(mdev->p_uuid + 5UL) = *(mdev->p_uuid + 5UL) & 0xfffffffffffffffdULL;
59979a67041,67051
> #line 1290
>   drbd_bcast_event(mdev, (struct sib_info  const  *)(& sib));
> #line 1292
>   if ((((unsigned int )*((unsigned char *)(& os) + 0UL) != 1U || (int )os.ldv_40024.disk > 7) || (int )os.ldv_40024.pdsk > 7) && (((unsigned int )*((unsigned char *)(& ns) + 0UL) == 1U && (int )ns.ldv_40024.disk <= 7) && (int )ns.ldv_40024.pdsk <= 7)) {
> #line 1294
>     drbd_khelper(mdev, (char *)"pri-on-incon-degr");
>   } else {
> 
>   }
> #line 1299
>   if ((unsigned int )*((unsigned char *)(& ns) + 2UL) != 0U) {
59981c67053
<   dd = drbd_determine_dev_size(mdev, 0);
---
>     tconn = mdev->tconn;
59983,59985c67055
<   if ((int )dd == -1) {
< #line 1302
<     retcode = ERR_NOMEM_BITMAP;
---
>     what = NOTHING;
59987,59988c67057
<     goto force_diskless_dec;
<   } else
---
>     spin_lock_irq(& tconn->req_lock);
59990c67059,67063
<   if ((int )dd == 2) {
---
>     if ((int )os.ldv_40024.conn <= 9) {
> #line 1304
>       tmp = conn_lowest_conn(tconn);
> #line 1304
>       if ((unsigned int )tmp > 9U) {
59992,59993c67065,67066
<     drbd_set_flag(mdev, RESYNC_AFTER_NEG);
<   } else {
---
>         what = RESEND;
>       } else {
59995c67068,67071
<   }
---
>       }
>     } else {
> 
>     }
59997c67073
<   tmp___34 = drbd_md_test_flag(mdev->ldev, 8);
---
>     if ((unsigned int )*((unsigned char *)(& os) + 1UL) == 2U || (unsigned int )*((unsigned char *)(& os) + 1UL) == 6U) {
59999,60006c67075,67087
<   if (tmp___34 != 0) {
< #line 1308
<     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Assuming that all blocks are out of sync (aka FullSync)\n");
< #line 1310
<     tmp___32 = drbd_bitmap_io(mdev, & drbd_bmio_set_n_write, (char *)"set_n_write from attaching",
<                               BM_LOCKED_MASK);
< #line 1310
<     if (tmp___32 != 0) {
---
>       tmp___0 = conn_lowest_disk(tconn);
> #line 1307
>       if ((unsigned int )tmp___0 > 3U) {
> #line 1309
>         what = RESTART_FROZEN_DISK_IO;
>       } else {
> 
>       }
>     } else {
> 
>     }
> #line 1311
>     if ((unsigned int )*((unsigned char *)tconn + 132UL) != 0U && (unsigned int )what != 28U) {
60008c67089
<       retcode = ERR_IO_MD_DISK;
---
>       _tl_restart(tconn, what);
60010c67091,67139
<       goto force_diskless_dec;
---
>       __constr_expr_0.ldv_40024.role = (unsigned char)0;
> #line 1313
>       __constr_expr_0.ldv_40024.peer = (unsigned char)0;
> #line 1313
>       __constr_expr_0.ldv_40024.conn = (unsigned char)0;
> #line 1313
>       __constr_expr_0.ldv_40024.disk = (unsigned char)0;
> #line 1313
>       __constr_expr_0.ldv_40024.pdsk = (unsigned char)0;
> #line 1313
>       __constr_expr_0.ldv_40024.susp = (unsigned char)0;
> #line 1313
>       __constr_expr_0.ldv_40024.aftr_isp = (unsigned char)0;
> #line 1313
>       __constr_expr_0.ldv_40024.peer_isp = (unsigned char)0;
> #line 1313
>       __constr_expr_0.ldv_40024.user_isp = (unsigned char)0;
> #line 1313
>       __constr_expr_0.ldv_40024.susp_nod = 0U;
> #line 1313
>       __constr_expr_0.ldv_40024.susp_fen = (unsigned char)0;
> #line 1313
>       __constr_expr_0.ldv_40024._pad = (unsigned short)0;
> #line 1313
>       __constr_expr_1.ldv_40024.role = (unsigned char)0;
> #line 1313
>       __constr_expr_1.ldv_40024.peer = (unsigned char)0;
> #line 1313
>       __constr_expr_1.ldv_40024.conn = (unsigned char)0;
> #line 1313
>       __constr_expr_1.ldv_40024.disk = (unsigned char)0;
> #line 1313
>       __constr_expr_1.ldv_40024.pdsk = (unsigned char)0;
> #line 1313
>       __constr_expr_1.ldv_40024.susp = (unsigned char)0;
> #line 1313
>       __constr_expr_1.ldv_40024.aftr_isp = (unsigned char)0;
> #line 1313
>       __constr_expr_1.ldv_40024.peer_isp = (unsigned char)0;
> #line 1313
>       __constr_expr_1.ldv_40024.user_isp = (unsigned char)0;
> #line 1313
>       __constr_expr_1.ldv_40024.susp_nod = 1U;
> #line 1313
>       __constr_expr_1.ldv_40024.susp_fen = (unsigned char)0;
> #line 1313
>       __constr_expr_1.ldv_40024._pad = (unsigned short)0;
> #line 1313
>       _conn_request_state(tconn, __constr_expr_1, __constr_expr_0, CS_VERBOSE);
60014,60019d67142
<   } else {
< #line 1316
<     tmp___33 = drbd_bitmap_io(mdev, & drbd_bm_read, (char *)"read from attaching",
<                               BM_LOCKED_MASK);
< #line 1316
<     if (tmp___33 < 0) {
60021,60024c67144,67145
<       retcode = ERR_IO_MD_DISK;
< #line 1319
<       goto force_diskless_dec;
<     } else {
---
>     spin_unlock_irq(& tconn->req_lock);
>   } else {
60026d67146
<     }
60028,60029c67148,67151
< #line 1323
<   if (cp_discovered != 0) {
---
> #line 1321
>   if ((unsigned int )*((unsigned char *)(& ns) + 2UL) != 0U) {
> #line 1322
>     tconn___0 = mdev->tconn;
60031c67153
<     drbd_al_apply_to_bm(mdev);
---
>     spin_lock_irq(& tconn___0->req_lock);
60033,60034c67155
<     tmp___35 = drbd_bitmap_io(mdev, & drbd_bm_write, (char *)"crashed primary apply AL",
<                               BM_LOCKED_MASK);
---
>     if ((unsigned int )*((unsigned char *)tconn___0 + 132UL) != 0U) {
60036,60048c67157,67170
<     if (tmp___35 != 0) {
< #line 1327
<       retcode = ERR_IO_MD_DISK;
< #line 1328
<       goto force_diskless_dec;
<     } else {
< 
<     }
<   } else {
< 
<   }
< #line 1332
<   tmp___36 = _drbd_bm_total_weight(mdev);
---
>       tmp___3 = conn_lowest_conn(tconn___0);
> #line 1325
>       if ((unsigned int )tmp___3 > 9U) {
> #line 1330
>         rcu_read_lock___7();
> #line 1331
>         vnr = 0;
> #line 1331
>         tmp___1 = idr_get_next(& tconn___0->volumes, & vnr);
> #line 1331
>         odev = (struct drbd_conf *)tmp___1;
> #line 1331
>         goto ldv_52392;
>         ldv_52391: 
60050c67172,67181
<   tmp___37 = drbd_bm_bits(mdev);
---
>         clear_bit(17, (unsigned long volatile   *)(& odev->flags));
> #line 1331
>         vnr = vnr + 1;
> #line 1331
>         tmp___2 = idr_get_next(& tconn___0->volumes, & vnr);
> #line 1331
>         odev = (struct drbd_conf *)tmp___2;
>         ldv_52392: ;
> #line 1331
>         if ((unsigned long )odev != (unsigned long )((struct drbd_conf *)0)) {
60052,60055c67183,67184
<   if (tmp___36 == tmp___37) {
< #line 1333
<     drbd_suspend_al(mdev);
<   } else {
---
>           goto ldv_52391;
>         } else {
60057c67186,67190
<   }
---
>         }
> #line 1333
>         rcu_read_unlock___7();
> #line 1334
>         _tl_restart(tconn___0, RESEND);
60059,60073c67192,67243
<   spin_lock_irq(& mdev->req_lock);
< #line 1336
<   os = mdev->state;
< #line 1337
<   ns.i = os.i;
< #line 1343
<   tmp___39 = drbd_md_test_flag(mdev->ldev, 1);
< #line 1343
<   if (tmp___39 != 0) {
< #line 1344
<     tmp___38 = drbd_md_test_flag(mdev->ldev, 16);
< #line 1344
<     if (tmp___38 != 0) {
< #line 1345
<       ns.ldv_39979.disk = 7U;
---
>         __constr_expr_2.ldv_40024.role = (unsigned char)0;
> #line 1335
>         __constr_expr_2.ldv_40024.peer = (unsigned char)0;
> #line 1335
>         __constr_expr_2.ldv_40024.conn = (unsigned char)0;
> #line 1335
>         __constr_expr_2.ldv_40024.disk = (unsigned char)0;
> #line 1335
>         __constr_expr_2.ldv_40024.pdsk = (unsigned char)0;
> #line 1335
>         __constr_expr_2.ldv_40024.susp = (unsigned char)0;
> #line 1335
>         __constr_expr_2.ldv_40024.aftr_isp = (unsigned char)0;
> #line 1335
>         __constr_expr_2.ldv_40024.peer_isp = (unsigned char)0;
> #line 1335
>         __constr_expr_2.ldv_40024.user_isp = (unsigned char)0;
> #line 1335
>         __constr_expr_2.ldv_40024.susp_nod = (unsigned char)0;
> #line 1335
>         __constr_expr_2.ldv_40024.susp_fen = 0U;
> #line 1335
>         __constr_expr_2.ldv_40024._pad = (unsigned short)0;
> #line 1335
>         __constr_expr_3.ldv_40024.role = (unsigned char)0;
> #line 1335
>         __constr_expr_3.ldv_40024.peer = (unsigned char)0;
> #line 1335
>         __constr_expr_3.ldv_40024.conn = (unsigned char)0;
> #line 1335
>         __constr_expr_3.ldv_40024.disk = (unsigned char)0;
> #line 1335
>         __constr_expr_3.ldv_40024.pdsk = (unsigned char)0;
> #line 1335
>         __constr_expr_3.ldv_40024.susp = (unsigned char)0;
> #line 1335
>         __constr_expr_3.ldv_40024.aftr_isp = (unsigned char)0;
> #line 1335
>         __constr_expr_3.ldv_40024.peer_isp = (unsigned char)0;
> #line 1335
>         __constr_expr_3.ldv_40024.user_isp = (unsigned char)0;
> #line 1335
>         __constr_expr_3.ldv_40024.susp_nod = (unsigned char)0;
> #line 1335
>         __constr_expr_3.ldv_40024.susp_fen = 1U;
> #line 1335
>         __constr_expr_3.ldv_40024._pad = (unsigned short)0;
> #line 1335
>         _conn_request_state(tconn___0, __constr_expr_3, __constr_expr_2, CS_VERBOSE);
>       } else {
> 
>       }
60075,60076c67245
< #line 1347
<       ns.ldv_39979.disk = 5U;
---
> 
60077a67247,67248
> #line 1340
>     spin_unlock_irq(& tconn___0->req_lock);
60079,60080c67250
< #line 1349
<     ns.ldv_39979.disk = 4U;
---
> 
60082,60087c67252,67264
< #line 1352
<   tmp___40 = drbd_md_test_flag(mdev->ldev, 32);
< #line 1352
<   if (tmp___40 != 0) {
< #line 1353
<     ns.ldv_39979.pdsk = 5U;
---
> #line 1347
>   if ((((unsigned int )*((unsigned short *)(& os) + 0UL) != 256U && (unsigned int )*((unsigned short *)(& os) + 0UL) != 320U) && ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 256U || (unsigned int )*((unsigned short *)(& ns) + 0UL) == 320U)) && (mdev->tconn)->agreed_pro_version > 95) {
> #line 1347
>     tmp___4 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 1347
>     if (tmp___4 != 0) {
> #line 1350
>       drbd_gen_and_send_sync_uuid(mdev);
> #line 1351
>       put_ldev(mdev);
>     } else {
> 
>     }
60092,60094c67269,67281
<   if ((unsigned int )*((unsigned char *)(& ns) + 1UL) == 14U && (*((unsigned int *)(& ns) + 0UL) == 40960U || (mdev->ldev)->dc.fencing == 0)) {
< #line 1357
<     ns.ldv_39979.disk = 8U;
---
>   if ((*((unsigned int *)(& os) + 0UL) == 0U && (int )ns.ldv_40024.pdsk > 0) && *((unsigned int *)(& ns) + 0UL) != 49152U) {
> #line 1359
>     mdev->rs_total = 0UL;
> #line 1360
>     mdev->rs_failed = 0UL;
> #line 1361
>     atomic_set(& mdev->rs_pending_cnt, 0);
> #line 1362
>     drbd_rs_cancel_all(mdev);
> #line 1364
>     drbd_send_uuids(mdev);
> #line 1365
>     drbd_send_state(mdev, ns);
60098,60109c67285,67289
< #line 1366
<   if ((unsigned int )*((unsigned short *)mdev + 1138UL) == 160U) {
< #line 1367
<     mdev->new_state_tmp.i = ns.i;
< #line 1368
<     ns.i = os.i;
< #line 1369
<     ns.ldv_39979.disk = 3U;
< #line 1374
<     kfree((void const   *)mdev->p_uuid);
< #line 1375
<     mdev->p_uuid = 0;
---
> #line 1370
>   if (((unsigned int )*((unsigned short *)(& os) + 0UL) != 208U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 208U) && (unsigned int )*((unsigned short *)mdev + 374UL) == 208U) {
> #line 1372
>     drbd_queue_bitmap_io(mdev, & drbd_send_bitmap, 0, (char *)"send_bitmap (WFBitMapS)",
>                          BM_LOCKED_TEST_ALLOWED);
60113,60120c67293,67294
< #line 1378
<   rv = _drbd_set_state(mdev, ns, CS_VERBOSE, 0);
< #line 1379
<   ns = mdev->state;
< #line 1380
<   spin_unlock_irq(& mdev->req_lock);
< #line 1382
<   if ((int )rv <= 0) {
---
> #line 1377
>   if ((((int )os.ldv_40024.pdsk > 3 && *((unsigned int *)(& os) + 0UL) != 49152U) && *((unsigned int *)(& os) + 0UL) != 40960U) && (((int )ns.ldv_40024.pdsk <= 3 || *((unsigned int *)(& ns) + 0UL) == 49152U) || *((unsigned int *)(& ns) + 0UL) == 40960U)) {
60122,60127c67296,67300
<     goto force_diskless_dec;
<   } else {
< 
<   }
< #line 1385
<   if ((unsigned int )*((unsigned char *)mdev + 2276UL) == 1U) {
---
>     tmp___6 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 1383
>     if (tmp___6 != 0) {
> #line 1384
>       if ((((unsigned int )*((unsigned char *)(& ns) + 0UL) == 1U || (unsigned int )*((unsigned char *)(& ns) + 0UL) == 4U) && (mdev->ldev)->md.uuid[1] == 0ULL) && (int )ns.ldv_40024.disk > 7) {
60129,60133c67302,67309
<     (mdev->ldev)->md.uuid[0] = (mdev->ldev)->md.uuid[0] | 1ULL;
<   } else {
< #line 1388
<     (mdev->ldev)->md.uuid[0] = (mdev->ldev)->md.uuid[0] & 0xfffffffffffffffeULL;
<   }
---
>         tmp___5 = drbd_suspended(mdev);
> #line 1386
>         if (tmp___5 != 0) {
> #line 1387
>           set_bit(17U, (unsigned long volatile   *)(& mdev->flags));
>         } else {
> #line 1389
>           drbd_uuid_new_current(mdev);
60135,60137c67311,67315
<   drbd_md_mark_dirty(mdev);
< #line 1391
<   drbd_md_sync(mdev);
---
>           drbd_send_uuids(mdev);
>         }
>       } else {
> 
>       }
60139,60170c67317
<   kobject_uevent(& (mdev->vdisk)->part0.__dev.kobj, KOBJ_CHANGE);
< #line 1394
<   put_ldev(mdev);
< #line 1395
<   reply->ret_code = (int )retcode;
< #line 1396
<   drbd_reconfig_done(mdev);
< #line 1397
<   return (0);
<   force_diskless_dec: 
< #line 1400
<   put_ldev(mdev);
<   force_diskless: 
< #line 1402
<   val___0.i = 0U;
< #line 1402
<   val___0.ldv_39979.disk = 2U;
< #line 1402
<   mask___0.i = 0U;
< #line 1402
<   mask___0.ldv_39979.disk = 15U;
< #line 1402
<   drbd_force_state(mdev, mask___0, val___0);
< #line 1403
<   drbd_md_sync(mdev);
<   fail: ;
< #line 1405
<   if ((unsigned long )nbc != (unsigned long )((struct drbd_backing_dev *)0)) {
< #line 1406
<     if ((unsigned long )nbc->backing_bdev != (unsigned long )((struct block_device *)0)) {
< #line 1407
<       blkdev_put(nbc->backing_bdev, 131U);
---
>       put_ldev(mdev);
60174,60175c67321,67346
< #line 1409
<     if ((unsigned long )nbc->md_bdev != (unsigned long )((struct block_device *)0)) {
---
>   } else {
> 
>   }
> #line 1397
>   if ((int )ns.ldv_40024.pdsk <= 3) {
> #line 1397
>     tmp___7 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 1397
>     if (tmp___7 != 0) {
> #line 1398
>       if ((((unsigned int )*((unsigned char *)(& os) + 0UL) == 8U && (unsigned int )*((unsigned char *)(& ns) + 0UL) == 4U) && (mdev->ldev)->md.uuid[1] == 0ULL) && (int )ns.ldv_40024.disk > 7) {
> #line 1400
>         drbd_uuid_new_current(mdev);
> #line 1401
>         drbd_send_uuids(mdev);
>       } else {
> 
>       }
> #line 1404
>       if ((unsigned int )*((unsigned char *)(& os) + 0UL) == 4U && (unsigned int )*((unsigned char *)(& ns) + 0UL) == 8U) {
> #line 1408
>         drbd_bitmap_io_from_worker(mdev, & drbd_bm_write, (char *)"demote diskless peer",
>                                    BM_LOCKED_SET_ALLOWED);
>       } else {
> 
>       }
60177c67348
<       blkdev_put(nbc->md_bdev, 131U);
---
>       put_ldev(mdev);
60181,60182d67351
< #line 1412
<     kfree((void const   *)nbc);
60186,60187d67354
< #line 1414
<   lc_destroy(resync_lru);
60189,60212c67356,67365
<   reply->ret_code = (int )retcode;
< #line 1417
<   drbd_reconfig_done(mdev);
< #line 1418
<   return (0);
< }
< }
< #line 1426 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static int drbd_nl_detach(struct drbd_conf *mdev , struct drbd_nl_cfg_req *nlp , struct drbd_nl_cfg_reply *reply ) 
< { 
<   enum drbd_ret_code retcode ;
<   int ret ;
<   struct detach dt ;
<   int tmp ;
<   union drbd_state val ;
<   union drbd_state mask ;
<   union drbd_state val___0 ;
<   union drbd_state mask___0 ;
<   int tmp___0 ;
<   int __ret ;
<   wait_queue_t __wait ;
<   struct task_struct *tmp___1 ;
<   struct task_struct *tmp___2 ;
<   int tmp___3 ;
---
>   if (((unsigned int )*((unsigned char *)(& os) + 0UL) == 1U && (unsigned int )*((unsigned char *)(& ns) + 0UL) == 2U) && (int )mdev->state.ldv_49522.conn <= 10) {
> #line 1416
>     tmp___8 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 1416
>     if (tmp___8 != 0) {
> #line 1420
>       drbd_bitmap_io_from_worker(mdev, & drbd_bm_write, (char *)"demote", BM_LOCKED_TEST_ALLOWED);
> #line 1422
>       put_ldev(mdev);
>     } else {
60214,60220c67367,67381
<   {
< #line 1431
<   dt.detach_force = (unsigned char)0;
< #line 1433
<   tmp = detach_from_tags(mdev, (unsigned short *)(& nlp->tag_list), & dt);
< #line 1433
<   if (tmp == 0) {
---
>     }
>   } else {
> 
>   }
> #line 1426
>   if (((int )ns.ldv_40024.conn > 9 && (unsigned int )*((unsigned char *)(& os) + 1UL) == 2U) && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 6U) {
> #line 1428
>     drbd_send_sizes(mdev, 0, 0);
> #line 1429
>     drbd_send_uuids(mdev);
> #line 1430
>     drbd_send_state(mdev, ns);
>   } else {
> 
>   }
60222,60224c67383,67385
<     reply->ret_code = 126;
< #line 1435
<     goto out;
---
>   if ((int )ns.ldv_40024.conn > 9 && ((int )os.ldv_40024.aftr_isp != (int )ns.ldv_40024.aftr_isp || (int )os.ldv_40024.user_isp != (int )ns.ldv_40024.user_isp)) {
> #line 1437
>     drbd_send_state(mdev, ns);
60228,60235d67388
< #line 1438
<   if ((unsigned int )*((unsigned char *)(& dt) + 0UL) != 0U) {
< #line 1439
<     drbd_set_flag(mdev, FORCE_DETACH);
< #line 1440
<     val.i = 0U;
< #line 1440
<     val.ldv_39979.disk = 2U;
60237,60243c67390
<     mask.i = 0U;
< #line 1440
<     mask.ldv_39979.disk = 15U;
< #line 1440
<     drbd_force_state(mdev, mask, val);
< #line 1441
<     reply->ret_code = 1;
---
>   if ((((unsigned int )*((unsigned char *)(& os) + 2UL) == 0U && (unsigned int )*((unsigned char *)(& os) + 2UL) == 0U) && (unsigned int )*((unsigned char *)(& os) + 2UL) == 0U) && (((unsigned int )*((unsigned char *)(& ns) + 2UL) != 0U || (unsigned int )*((unsigned char *)(& ns) + 2UL) != 0U) || (unsigned int )*((unsigned char *)(& ns) + 2UL) != 0U)) {
60245c67392
<     goto out;
---
>     suspend_other_sg(mdev);
60249,60250d67395
< #line 1445
<   drbd_suspend_io(mdev);
60252,60258c67397
<   drbd_md_get_buffer(mdev);
< #line 1447
<   val___0.i = 0U;
< #line 1447
<   val___0.ldv_39979.disk = 2U;
< #line 1447
<   mask___0.i = 0U;
---
>   if ((unsigned int )*((unsigned short *)(& os) + 0UL) == 144U && (int )ns.ldv_40024.conn > 9) {
60260,60315c67399
<   mask___0.ldv_39979.disk = 15U;
< #line 1447
<   tmp___0 = drbd_request_state(mdev, mask___0, val___0);
< #line 1447
<   retcode = (enum drbd_ret_code )tmp___0;
< #line 1448
<   drbd_md_put_buffer(mdev);
< #line 1450
<   __ret = 0;
< #line 1450
<   if ((unsigned int )*((unsigned char *)mdev + 2277UL) == 4U) {
< #line 1450
<     tmp___1 = get_current();
< #line 1450
<     __wait.flags = 0U;
< #line 1450
<     __wait.private = (void *)tmp___1;
< #line 1450
<     __wait.func = & autoremove_wake_function;
< #line 1450
<     __wait.task_list.next = & __wait.task_list;
< #line 1450
<     __wait.task_list.prev = & __wait.task_list;
<     ldv_54447: 
< #line 1450
<     prepare_to_wait(& mdev->misc_wait, & __wait, 1);
< #line 1450
<     if ((unsigned int )*((unsigned char *)mdev + 2277UL) != 4U) {
< #line 1450
<       goto ldv_54445;
<     } else {
< 
<     }
< #line 1450
<     tmp___2 = get_current();
< #line 1450
<     tmp___3 = signal_pending(tmp___2);
< #line 1450
<     if (tmp___3 == 0) {
< #line 1450
<       schedule();
< #line 1450
<       goto ldv_54446;
<     } else {
< 
<     }
< #line 1450
<     __ret = -512;
< #line 1450
<     goto ldv_54445;
<     ldv_54446: ;
< #line 1450
<     goto ldv_54447;
<     ldv_54445: 
< #line 1450
<     finish_wait(& mdev->misc_wait, & __wait);
---
>     drbd_send_state(mdev, ns);
60318a67403,67404
> #line 1449
>   if ((unsigned int )*((unsigned short *)(& os) + 0UL) != 352U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 352U) {
60320,60326c67406
<   ret = __ret;
< #line 1452
<   drbd_resume_io(mdev);
< #line 1454
<   if ((long )retcode == 4294967285L) {
< #line 1455
<     retcode = 2;
---
>     drbd_send_state(mdev, ns);
60329a67410,67411
> #line 1453
>   if (((unsigned int )*((unsigned short *)(& os) + 0UL) != 192U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 192U) || ((unsigned int )*((unsigned short *)(& os) + 0UL) != 176U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 176U)) {
60331,60333c67413,67414
<   if (ret != 0) {
< #line 1457
<     retcode = ERR_INTR;
---
>     drbd_queue_bitmap_io(mdev, & drbd_bmio_set_n_write, & abw_start_sync, (char *)"set_n_write from StartingSync",
>                          BM_LOCKED_TEST_ALLOWED);
60337,60384c67418,67423
< #line 1458
<   reply->ret_code = (int )retcode;
<   out: ;
< #line 1460
<   return (0);
< }
< }
< #line 1463 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static int drbd_nl_net_conf(struct drbd_conf *mdev , struct drbd_nl_cfg_req *nlp ,
<                             struct drbd_nl_cfg_reply *reply ) 
< { 
<   int i ;
<   int ns ;
<   enum drbd_ret_code retcode ;
<   struct net_conf *new_conf ;
<   struct crypto_hash *tfm ;
<   struct crypto_hash *integrity_w_tfm ;
<   struct crypto_hash *integrity_r_tfm ;
<   struct hlist_head *new_tl_hash ;
<   struct hlist_head *new_ee_hash ;
<   struct drbd_conf *odev ;
<   char hmac_name[64U] ;
<   void *int_dig_out ;
<   void *int_dig_in ;
<   void *int_dig_vv ;
<   struct sockaddr *new_my_addr ;
<   struct sockaddr *new_peer_addr ;
<   struct sockaddr *taken_addr ;
<   void *tmp ;
<   int tmp___0 ;
<   enum drbd_fencing_p fp ;
<   int tmp___1 ;
<   int tmp___2 ;
<   int tmp___3 ;
<   int tmp___4 ;
<   long tmp___5 ;
<   struct crypto_tfm *tmp___6 ;
<   int tmp___7 ;
<   long tmp___8 ;
<   struct crypto_tfm *tmp___9 ;
<   int tmp___10 ;
<   long tmp___11 ;
<   void *tmp___12 ;
<   void *tmp___13 ;
<   unsigned int tmp___14 ;
<   int tmp___15 ;
<   union drbd_state __ns ;
<   enum drbd_state_rv tmp___16 ;
---
> #line 1461
>   if ((((int )os.ldv_40024.conn <= 9 && (int )ns.ldv_40024.conn <= 9) && (int )os.ldv_40024.disk > 4) && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 8U) {
> #line 1464
>     drbd_queue_bitmap_io(mdev, & drbd_bmio_set_n_write, 0, (char *)"set_n_write from invalidate",
>                          BM_LOCKED_MASK);
>   } else {
60386,60388c67425
<   {
< #line 1468
<   new_conf = 0;
---
>   }
60390c67427
<   tfm = 0;
---
>   if ((unsigned int )*((unsigned char *)(& os) + 1UL) != 4U && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 4U) {
60392c67429
<   integrity_w_tfm = 0;
---
>     eh = EP_PASS_ON;
60394,60398c67431
<   integrity_r_tfm = 0;
< #line 1472
<   new_tl_hash = 0;
< #line 1473
<   new_ee_hash = 0;
---
>     was_io_error = 0;
60400c67433
<   int_dig_out = 0;
---
>     if ((unsigned long )mdev->ldev != (unsigned long )((struct drbd_backing_dev *)0)) {
60402c67435
<   int_dig_in = 0;
---
>       rcu_read_lock___7();
60404c67437,67460
<   int_dig_vv = 0;
---
>       _________p1 = *((struct disk_conf * volatile  *)(& (mdev->ldev)->disk_conf));
> #line 1478
>       tmp___9 = debug_lockdep_rcu_enabled();
> #line 1478
>       if (tmp___9 != 0 && ! __warned) {
> #line 1478
>         tmp___10 = rcu_read_lock_held();
> #line 1478
>         if (tmp___10 == 0 && 1) {
> #line 1478
>           __warned = 1;
> #line 1478
>           lockdep_rcu_suspicious("/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared",
>                                  1478, "suspicious rcu_dereference_check() usage");
>         } else {
> 
>         }
>       } else {
> 
>       }
> #line 1478
>       eh = (enum drbd_io_error_p )_________p1->on_io_error;
> #line 1479
>       rcu_read_unlock___7();
60406c67462
<   drbd_reconfig_start(mdev);
---
>       was_io_error = test_and_clear_bit(12, (unsigned long volatile   *)(& mdev->flags));
60408c67464
<   if ((int )mdev->state.ldv_39979.conn > 0) {
---
>       if (was_io_error != 0 && (unsigned int )eh == 1U) {
60410,60426c67466,67467
<     retcode = ERR_NET_CONFIGURED;
< #line 1485
<     goto fail;
<   } else {
< 
<   }
< #line 1489
<   tmp = kzalloc(544UL, 208U);
< #line 1489
<   new_conf = (struct net_conf *)tmp;
< #line 1490
<   if ((unsigned long )new_conf == (unsigned long )((struct net_conf *)0)) {
< #line 1491
<     retcode = ERR_NOMEM;
< #line 1492
<     goto fail;
<   } else {
---
>         drbd_khelper(mdev, (char *)"local-io-error");
>       } else {
60428,60436c67469,67471
<   }
< #line 1495
<   new_conf->timeout = 60;
< #line 1496
<   new_conf->try_connect_int = 10;
< #line 1497
<   new_conf->ping_int = 10;
< #line 1498
<   new_conf->max_epoch_size = 2048;
---
>       }
> #line 1499
>       tmp___11 = test_and_clear_bit(14, (unsigned long volatile   *)(& mdev->flags));
60438c67473
<   new_conf->max_buffers = 2048;
---
>       if (tmp___11 != 0) {
60440,60448c67475,67478
<   new_conf->unplug_watermark = 128;
< #line 1501
<   new_conf->sndbuf_size = 0;
< #line 1502
<   new_conf->rcvbuf_size = 0;
< #line 1503
<   new_conf->ko_count = 0;
< #line 1504
<   new_conf->after_sb_0p = 0;
---
>         tl_abort_disk_io(mdev);
>       } else {
> 
>       }
60450c67480
<   new_conf->after_sb_1p = 0;
---
>       if ((unsigned int )*((unsigned char *)mdev + 749UL) != 4U) {
60452,60458c67482,67488
<   new_conf->after_sb_2p = 0;
< #line 1507
<   new_conf->want_lose = 0U;
< #line 1508
<   new_conf->two_primaries = 0U;
< #line 1509
<   new_conf->wire_protocol = 3;
---
>         tmp___12 = drbd_disk_str((enum drbd_disk_state )mdev->state.ldv_49522.disk);
> #line 1506
>         dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: disk is %s during detach\n",
>                 tmp___12);
>       } else {
> 
>       }
60460c67490
<   new_conf->ping_timeo = 5;
---
>       if ((int )ns.ldv_40024.conn > 9) {
60462,60464c67492,67495
<   new_conf->rr_conflict = 0;
< #line 1512
<   new_conf->on_congestion = 0;
---
>         drbd_send_state(mdev, ns);
>       } else {
> 
>       }
60466,60475c67497,67500
<   new_conf->cong_extents = 127;
< #line 1515
<   tmp___0 = net_conf_from_tags(mdev, (unsigned short *)(& nlp->tag_list), new_conf);
< #line 1515
<   if (tmp___0 == 0) {
< #line 1516
<     retcode = ERR_MANDATORY_TAG;
< #line 1517
<     goto fail;
<   } else {
---
>       drbd_rs_cancel_all(mdev);
> #line 1518
>       drbd_md_sync(mdev);
>     } else {
60477c67502
<   }
---
>     }
60479,60483c67504
<   if ((unsigned int )*((unsigned char *)new_conf + 540UL) != 0U && new_conf->wire_protocol != 3) {
< #line 1522
<     retcode = ERR_NOT_PROTO_C;
< #line 1523
<     goto fail;
---
>     put_ldev(mdev);
60488,60494c67509
<   tmp___1 = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 1526
<   if (tmp___1 != 0) {
< #line 1527
<     fp = (enum drbd_fencing_p )(mdev->ldev)->dc.fencing;
< #line 1528
<     put_ldev(mdev);
---
>   if ((unsigned int )*((unsigned char *)(& os) + 1UL) != 0U && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 0U) {
60496c67511
<     if (new_conf->wire_protocol == 1 && (unsigned int )fp == 2U) {
---
>     if ((unsigned int )*((unsigned char *)mdev + 749UL) != 0U) {
60498,60500c67513,67516
<       retcode = ERR_STONITH_AND_PROT_A;
< #line 1531
<       goto fail;
---
>       tmp___13 = drbd_disk_str((enum drbd_disk_state )mdev->state.ldv_49522.disk);
> #line 1530
>       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: disk is %s while going diskless\n",
>               tmp___13);
60504,60506c67520,67521
<   } else {
< 
<   }
---
> #line 1534
>     if ((int )ns.ldv_40024.conn > 9) {
60508,60512c67523,67528
<   if (new_conf->on_congestion != 0 && new_conf->wire_protocol != 1) {
< #line 1536
<     retcode = ERR_CONG_NOT_PROTO_A;
< #line 1537
<     goto fail;
---
>       drbd_send_state(mdev, ns);
>     } else {
> 
>     }
> #line 1538
>     put_ldev(mdev);
60516,60519d67531
< #line 1540
<   if ((unsigned int )*((unsigned char *)mdev + 2276UL) == 1U && (unsigned int )*((unsigned char *)new_conf + 540UL) != 0U) {
< #line 1541
<     retcode = ERR_DISCARD;
60521c67533,67535
<     goto fail;
---
>   if (((unsigned int )*((unsigned char *)(& os) + 1UL) == 16U && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 8U) && (int )ns.ldv_40024.conn > 9) {
> #line 1543
>     drbd_send_state(mdev, ns);
60525,60528c67539,67544
< #line 1545
<   retcode = NO_ERROR;
< #line 1547
<   new_my_addr = (struct sockaddr *)(& new_conf->my_addr);
---
> #line 1546
>   if ((int )ns.ldv_40024.disk > 3 && (int )ns.ldv_40024.pdsk > 3) {
> #line 1546
>     tmp___14 = test_and_clear_bit(15, (unsigned long volatile   *)(& mdev->flags));
> #line 1546
>     if (tmp___14 != 0) {
60530,60532c67546
<   new_peer_addr = (struct sockaddr *)(& new_conf->peer_addr);
< #line 1549
<   i = 0;
---
>       if ((unsigned int )*((unsigned short *)(& ns) + 0UL) == 160U) {
60534,60575c67548
<   goto ldv_54475;
<   ldv_54474: 
< #line 1550
<   odev = minor_to_mdev((unsigned int )i);
< #line 1551
<   if ((unsigned long )odev == (unsigned long )((struct drbd_conf *)0) || (unsigned long )odev == (unsigned long )mdev) {
< #line 1552
<     goto ldv_54473;
<   } else {
< 
<   }
< #line 1553
<   tmp___4 = get_net_conf(odev);
< #line 1553
<   if (tmp___4 != 0) {
< #line 1554
<     taken_addr = (struct sockaddr *)(& (odev->net_conf)->my_addr);
< #line 1555
<     if (new_conf->my_addr_len == (odev->net_conf)->my_addr_len) {
< #line 1555
<       tmp___2 = memcmp((void const   *)new_my_addr, (void const   *)taken_addr, (size_t )new_conf->my_addr_len);
< #line 1555
<       if (tmp___2 == 0) {
< #line 1557
<         retcode = ERR_LOCAL_ADDR;
<       } else {
< 
<       }
<     } else {
< 
<     }
< #line 1559
<     taken_addr = (struct sockaddr *)(& (odev->net_conf)->peer_addr);
< #line 1560
<     if (new_conf->peer_addr_len == (odev->net_conf)->peer_addr_len) {
< #line 1560
<       tmp___3 = memcmp((void const   *)new_peer_addr, (void const   *)taken_addr,
<                        (size_t )new_conf->peer_addr_len);
< #line 1560
<       if (tmp___3 == 0) {
< #line 1562
<         retcode = ERR_PEER_ADDR;
---
>         resync_after_online_grow(mdev);
60582,60590d67554
< #line 1564
<     put_net_conf(odev);
< #line 1565
<     if ((unsigned int )retcode != 101U) {
< #line 1566
<       goto fail;
<     } else {
< 
<     }
60594,60601c67558,67561
<   ldv_54473: 
< #line 1549
<   i = i + 1;
<   ldv_54475: ;
< #line 1549
<   if ((unsigned int )i < minor_count) {
< #line 1550
<     goto ldv_54474;
---
> #line 1553
>   if ((((int )os.ldv_40024.conn > 10 && (int )ns.ldv_40024.conn <= 10) || ((unsigned int )*((unsigned char *)(& os) + 2UL) != 0U && (unsigned int )*((unsigned char *)(& ns) + 2UL) == 0U)) || ((unsigned int )*((unsigned char *)(& os) + 2UL) != 0U && (unsigned int )*((unsigned char *)(& ns) + 2UL) == 0U)) {
> #line 1556
>     resume_next_sg(mdev);
60604a67565,67569
> #line 1560
>   if (((int )os.ldv_40024.disk <= 7 && (int )os.ldv_40024.conn > 15) && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 160U) {
> #line 1561
>     drbd_send_state(mdev, ns);
>   } else {
60606,60621c67571,67579
< #line 1570
<   if ((unsigned int )new_conf->cram_hmac_alg[0] != 0U) {
< #line 1571
<     snprintf((char *)(& hmac_name), 64UL, "hmac(%s)", (unsigned char *)(& new_conf->cram_hmac_alg));
< #line 1573
<     tfm = crypto_alloc_hash((char const   *)(& hmac_name), 0U, 128U);
< #line 1574
<     tmp___5 = IS_ERR((void const   *)tfm);
< #line 1574
<     if (tmp___5 != 0L) {
< #line 1575
<       tfm = 0;
< #line 1576
<       retcode = ERR_AUTH_ALG;
< #line 1577
<       goto fail;
---
>   }
> #line 1566
>   if ((unsigned int )*((unsigned short *)(& os) + 0UL) == 288U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 160U) {
> #line 1566
>     tmp___15 = verify_can_do_stop_sector(mdev);
> #line 1566
>     if ((int )tmp___15) {
> #line 1568
>       drbd_send_state(mdev, ns);
60624a67583,67594
>   } else {
> 
>   }
> #line 1577
>   if ((int )os.ldv_40024.conn > 10 && (int )ns.ldv_40024.conn <= 10) {
> #line 1577
>     tmp___16 = _get_ldev_if_state(mdev, D_INCONSISTENT);
> #line 1577
>     if (tmp___16 != 0) {
> #line 1578
>       drbd_queue_bitmap_io(mdev, & drbd_bm_write_copy_pages, 0, (char *)"write from resync_finished",
>                            BM_IS_LOCKED);
60626,60634c67596
<     tmp___6 = crypto_hash_tfm(tfm);
< #line 1580
<     tmp___7 = drbd_crypto_is_hash(tmp___6);
< #line 1580
<     if (tmp___7 == 0) {
< #line 1581
<       retcode = ERR_AUTH_ALG_ND;
< #line 1582
<       goto fail;
---
>       put_ldev(mdev);
60640a67603,67604
> #line 1583
>   if (((unsigned int )*((unsigned char *)(& ns) + 1UL) == 0U && (unsigned int )*((unsigned short *)(& ns) + 0UL) == 0U) && (unsigned int )*((unsigned char *)(& ns) + 0UL) == 2U) {
60642c67606
<   if ((unsigned int )new_conf->integrity_alg[0] != 0U) {
---
>     if ((int )os.ldv_40024.aftr_isp != (int )ns.ldv_40024.aftr_isp) {
60644,60684c67608
<     integrity_w_tfm = crypto_alloc_hash((char const   *)(& new_conf->integrity_alg),
<                                         0U, 128U);
< #line 1588
<     tmp___8 = IS_ERR((void const   *)integrity_w_tfm);
< #line 1588
<     if (tmp___8 != 0L) {
< #line 1589
<       integrity_w_tfm = 0;
< #line 1590
<       retcode = ERR_INTEGRITY_ALG;
< #line 1591
<       goto fail;
<     } else {
< 
<     }
< #line 1594
<     tmp___9 = crypto_hash_tfm(integrity_w_tfm);
< #line 1594
<     tmp___10 = drbd_crypto_is_hash(tmp___9);
< #line 1594
<     if (tmp___10 == 0) {
< #line 1595
<       retcode = ERR_INTEGRITY_ALG_ND;
< #line 1596
<       goto fail;
<     } else {
< 
<     }
< #line 1599
<     integrity_r_tfm = crypto_alloc_hash((char const   *)(& new_conf->integrity_alg),
<                                         0U, 128U);
< #line 1600
<     tmp___11 = IS_ERR((void const   *)integrity_r_tfm);
< #line 1600
<     if (tmp___11 != 0L) {
< #line 1601
<       integrity_r_tfm = 0;
< #line 1602
<       retcode = ERR_INTEGRITY_ALG;
< #line 1603
<       goto fail;
---
>       resume_next_sg(mdev);
60690a67615,67646
> #line 1590
>   drbd_md_sync(mdev);
> #line 1591
>   return;
> }
> }
> #line 1601 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> static int w_after_conn_state_ch(struct drbd_work *w , int unused ) 
> { 
>   struct after_conn_state_chg_work *acscw ;
>   struct drbd_work  const  *__mptr ;
>   struct drbd_tconn *tconn ;
>   enum drbd_conns oc ;
>   union drbd_state ns_max ;
>   struct drbd_conf *mdev ;
>   int vnr ;
>   struct net_conf *old_conf ;
>   void *tmp ;
>   int tmp___0 ;
>   void *tmp___1 ;
>   union drbd_state __constr_expr_0 ;
>   union drbd_state __constr_expr_1 ;
> 
>   {
> #line 1604
>   __mptr = (struct drbd_work  const  *)w;
> #line 1604
>   acscw = (struct after_conn_state_chg_work *)__mptr;
> #line 1605
>   tconn = w->ldv_49807.tconn;
> #line 1606
>   oc = acscw->oc;
60692,60700c67648
<   ns = new_conf->max_epoch_size / 8;
< #line 1608
<   if (mdev->tl_hash_s != (unsigned int )ns) {
< #line 1609
<     tmp___12 = kzalloc((unsigned long )ns * 8UL, 208U);
< #line 1609
<     new_tl_hash = (struct hlist_head *)tmp___12;
< #line 1610
<     if ((unsigned long )new_tl_hash == (unsigned long )((struct hlist_head *)0)) {
---
>   ns_max = acscw->ns_max;
60702,60707c67650,67654
<       retcode = ERR_NOMEM;
< #line 1612
<       goto fail;
<     } else {
< 
<     }
---
>   kfree((void const   *)acscw);
> #line 1614
>   if ((unsigned int )oc == 0U && (unsigned int )*((unsigned short *)(& ns_max) + 0UL) == 32U) {
> #line 1615
>     drbd_thread_start(& tconn->receiver);
60711,60712d67657
< #line 1616
<   ns = new_conf->max_buffers / 8;
60714,60720c67659
<   if ((unsigned int )*((unsigned char *)new_conf + 540UL) != 0U && mdev->ee_hash_s != (unsigned int )ns) {
< #line 1618
<     tmp___13 = kzalloc((unsigned long )ns * 8UL, 208U);
< #line 1618
<     new_ee_hash = (struct hlist_head *)tmp___13;
< #line 1619
<     if ((unsigned long )new_ee_hash == (unsigned long )((struct hlist_head *)0)) {
---
>   if ((unsigned int )oc == 1U && (unsigned int )*((unsigned short *)(& ns_max) + 0UL) == 0U) {
60722c67661
<       retcode = ERR_NOMEM;
---
>     ldv_mutex_lock_350(& tconn->conf_update);
60724,60730c67663,67671
<       goto fail;
<     } else {
< 
<     }
<   } else {
< 
<   }
---
>     old_conf = tconn->net_conf;
> #line 1622
>     tconn->my_addr_len = 0;
> #line 1623
>     tconn->peer_addr_len = 0;
> #line 1624
>     __asm__  volatile   ("": : : "memory");
> #line 1624
>     tconn->net_conf = 0;
60732,60736c67673,67675
<   *((char *)(& new_conf->shared_secret) + 63UL) = 0;
< #line 1627
<   if ((unsigned long )integrity_w_tfm != (unsigned long )((struct crypto_hash *)0)) {
< #line 1628
<     tmp___14 = crypto_hash_digestsize(integrity_w_tfm);
---
>     conn_free_crypto(tconn);
> #line 1626
>     ldv_mutex_unlock_351(& tconn->conf_update);
60738c67677
<     i = (int )tmp___14;
---
>     synchronize_rcu();
60740,60747c67679,67680
<     int_dig_out = kmalloc((size_t )i, 208U);
< #line 1630
<     if ((unsigned long )int_dig_out == (unsigned long )((void *)0)) {
< #line 1631
<       retcode = ERR_NOMEM;
< #line 1632
<       goto fail;
<     } else {
---
>     kfree((void const   *)old_conf);
>   } else {
60749c67682,67684
<     }
---
>   }
> #line 1632
>   if ((unsigned int )*((unsigned char *)(& ns_max) + 2UL) != 0U) {
60751c67686
<     int_dig_in = kmalloc((size_t )i, 208U);
---
>     if ((int )ns_max.ldv_40024.pdsk <= 5) {
60753c67688
<     if ((unsigned long )int_dig_in == (unsigned long )((void *)0)) {
---
>       rcu_read_lock___7();
60755c67690,67697
<       retcode = ERR_NOMEM;
---
>       vnr = 0;
> #line 1636
>       tmp = idr_get_next(& tconn->volumes, & vnr);
> #line 1636
>       mdev = (struct drbd_conf *)tmp;
> #line 1636
>       goto ldv_52421;
>       ldv_52420: 
60757,60760c67699,67703
<       goto fail;
<     } else {
< 
<     }
---
>       tmp___0 = constant_test_bit(17U, (unsigned long const volatile   *)(& mdev->flags));
> #line 1637
>       if (tmp___0 != 0) {
> #line 1638
>         drbd_uuid_new_current(mdev);
60762,60769c67705,67706
<     int_dig_vv = kmalloc((size_t )i, 208U);
< #line 1640
<     if ((unsigned long )int_dig_vv == (unsigned long )((void *)0)) {
< #line 1641
<       retcode = ERR_NOMEM;
< #line 1642
<       goto fail;
<     } else {
---
>         clear_bit(17, (unsigned long volatile   *)(& mdev->flags));
>       } else {
60771,60772c67708,67720
<     }
<   } else {
---
>       }
> #line 1636
>       vnr = vnr + 1;
> #line 1636
>       tmp___1 = idr_get_next(& tconn->volumes, & vnr);
> #line 1636
>       mdev = (struct drbd_conf *)tmp___1;
>       ldv_52421: ;
> #line 1636
>       if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 1637
>         goto ldv_52420;
>       } else {
60774,60782c67722,67778
<   }
< #line 1646
<   if ((unsigned long )mdev->bitmap == (unsigned long )((struct drbd_bitmap *)0)) {
< #line 1647
<     tmp___15 = drbd_bm_init(mdev);
< #line 1647
<     if (tmp___15 != 0) {
< #line 1648
<       retcode = ERR_NOMEM;
---
>       }
> #line 1642
>       rcu_read_unlock___7();
> #line 1643
>       spin_lock_irq(& tconn->req_lock);
> #line 1644
>       _tl_restart(tconn, CONNECTION_LOST_WHILE_PENDING);
> #line 1645
>       __constr_expr_0.ldv_40024.role = (unsigned char)0;
> #line 1645
>       __constr_expr_0.ldv_40024.peer = (unsigned char)0;
> #line 1645
>       __constr_expr_0.ldv_40024.conn = (unsigned char)0;
> #line 1645
>       __constr_expr_0.ldv_40024.disk = (unsigned char)0;
> #line 1645
>       __constr_expr_0.ldv_40024.pdsk = (unsigned char)0;
> #line 1645
>       __constr_expr_0.ldv_40024.susp = (unsigned char)0;
> #line 1645
>       __constr_expr_0.ldv_40024.aftr_isp = (unsigned char)0;
> #line 1645
>       __constr_expr_0.ldv_40024.peer_isp = (unsigned char)0;
> #line 1645
>       __constr_expr_0.ldv_40024.user_isp = (unsigned char)0;
> #line 1645
>       __constr_expr_0.ldv_40024.susp_nod = (unsigned char)0;
> #line 1645
>       __constr_expr_0.ldv_40024.susp_fen = 0U;
> #line 1645
>       __constr_expr_0.ldv_40024._pad = (unsigned short)0;
> #line 1645
>       __constr_expr_1.ldv_40024.role = (unsigned char)0;
> #line 1645
>       __constr_expr_1.ldv_40024.peer = (unsigned char)0;
> #line 1645
>       __constr_expr_1.ldv_40024.conn = (unsigned char)0;
> #line 1645
>       __constr_expr_1.ldv_40024.disk = (unsigned char)0;
> #line 1645
>       __constr_expr_1.ldv_40024.pdsk = (unsigned char)0;
> #line 1645
>       __constr_expr_1.ldv_40024.susp = (unsigned char)0;
> #line 1645
>       __constr_expr_1.ldv_40024.aftr_isp = (unsigned char)0;
> #line 1645
>       __constr_expr_1.ldv_40024.peer_isp = (unsigned char)0;
> #line 1645
>       __constr_expr_1.ldv_40024.user_isp = (unsigned char)0;
> #line 1645
>       __constr_expr_1.ldv_40024.susp_nod = (unsigned char)0;
> #line 1645
>       __constr_expr_1.ldv_40024.susp_fen = 1U;
> #line 1645
>       __constr_expr_1.ldv_40024._pad = (unsigned short)0;
> #line 1645
>       _conn_request_state(tconn, __constr_expr_1, __constr_expr_0, CS_VERBOSE);
60784c67780
<       goto fail;
---
>       spin_unlock_irq(& tconn->req_lock);
60791,60792c67787,67788
< #line 1653
<   drbd_flush_workqueue(mdev);
---
> #line 1652
>   kref_put(& tconn->kref, & conn_destroy);
60794,60796c67790
<   spin_lock_irq(& mdev->req_lock);
< #line 1655
<   if ((unsigned long )mdev->net_conf != (unsigned long )((struct net_conf *)0)) {
---
>   conn_md_sync(tconn);
60798,60803c67792,67805
<     retcode = ERR_NET_CONFIGURED;
< #line 1657
<     spin_unlock_irq(& mdev->req_lock);
< #line 1658
<     goto fail;
<   } else {
---
>   return (0);
> }
> }
> #line 1659 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> void conn_old_common_state(struct drbd_tconn *tconn , union drbd_state *pcs , enum chg_state_flags *pf ) 
> { 
>   enum chg_state_flags flags ;
>   struct drbd_conf *mdev ;
>   int vnr ;
>   int first_vol ;
>   union drbd_dev_state os ;
>   union drbd_dev_state cs ;
>   void *tmp ;
>   void *tmp___0 ;
60805,60809c67807,67809
<   }
< #line 1660
<   mdev->net_conf = new_conf;
< #line 1662
<   mdev->send_cnt = 0U;
---
>   {
> #line 1661
>   flags = 4294967295L;
60811,60824c67811,67831
<   mdev->recv_cnt = 0U;
< #line 1665
<   if ((unsigned long )new_tl_hash != (unsigned long )((struct hlist_head *)0)) {
< #line 1666
<     kfree((void const   *)mdev->tl_hash);
< #line 1667
<     mdev->tl_hash_s = (unsigned int )((mdev->net_conf)->max_epoch_size / 8);
< #line 1668
<     mdev->tl_hash = new_tl_hash;
<   } else {
< 
<   }
< #line 1671
<   if ((unsigned long )new_ee_hash != (unsigned long )((struct hlist_head *)0)) {
---
>   first_vol = 1;
> #line 1664
>   cs.ldv_49522.role = 2U;
> #line 1664
>   cs.ldv_49522.peer = 0U;
> #line 1664
>   cs.ldv_49522.conn = (unsigned char )tconn->cstate;
> #line 1664
>   cs.ldv_49522.disk = 0U;
> #line 1664
>   cs.ldv_49522.pdsk = 6U;
> #line 1664
>   cs.ldv_49522._unused = (unsigned char)0;
> #line 1664
>   cs.ldv_49522.aftr_isp = (unsigned char)0;
> #line 1664
>   cs.ldv_49522.peer_isp = (unsigned char)0;
> #line 1664
>   cs.ldv_49522.user_isp = (unsigned char)0;
> #line 1664
>   cs.ldv_49522._pad = (unsigned short)0;
60826c67833,67835
<     kfree((void const   *)mdev->ee_hash);
---
>   rcu_read_lock___7();
> #line 1673
>   vnr = 0;
60828c67837,67842
<     mdev->ee_hash_s = (unsigned int )((mdev->net_conf)->max_buffers / 8);
---
>   tmp = idr_get_next(& tconn->volumes, & vnr);
> #line 1673
>   mdev = (struct drbd_conf *)tmp;
> #line 1673
>   goto ldv_52438;
>   ldv_52437: 
60830c67844,67852
<     mdev->ee_hash = new_ee_hash;
---
>   os = mdev->state;
> #line 1676
>   if (first_vol != 0) {
> #line 1677
>     cs = os;
> #line 1678
>     first_vol = 0;
> #line 1679
>     goto ldv_52436;
60834,60841c67856,67857
< #line 1677
<   crypto_free_hash(mdev->cram_hmac_tfm);
< #line 1678
<   mdev->cram_hmac_tfm = tfm;
< #line 1680
<   crypto_free_hash(mdev->integrity_w_tfm);
< #line 1681
<   mdev->integrity_w_tfm = integrity_w_tfm;
---
> #line 1682
>   if ((int )cs.ldv_49522.role != (int )os.ldv_49522.role) {
60843,60845c67859,67864
<   crypto_free_hash(mdev->integrity_r_tfm);
< #line 1684
<   mdev->integrity_r_tfm = integrity_r_tfm;
---
>     flags = (enum chg_state_flags )((unsigned int )flags & 4294967263U);
>   } else {
> 
>   }
> #line 1685
>   if ((int )cs.ldv_49522.peer != (int )os.ldv_49522.peer) {
60847,60849c67866,67869
<   kfree((void const   *)mdev->int_dig_out);
< #line 1687
<   kfree((void const   *)mdev->int_dig_in);
---
>     flags = (enum chg_state_flags )((unsigned int )flags & 4294967231U);
>   } else {
> 
>   }
60851c67871
<   kfree((void const   *)mdev->int_dig_vv);
---
>   if ((int )cs.ldv_49522.conn != (int )os.ldv_49522.conn) {
60853,60855c67873,67876
<   mdev->int_dig_out = int_dig_out;
< #line 1690
<   mdev->int_dig_in = int_dig_in;
---
>     flags = (enum chg_state_flags )((unsigned int )flags & 4294967167U);
>   } else {
> 
>   }
60857,60861c67878
<   mdev->int_dig_vv = int_dig_vv;
< #line 1692
<   __ns.i = mdev->state.i;
< #line 1692
<   __ns.ldv_39979.conn = 2U;
---
>   if ((int )cs.ldv_49522.disk != (int )os.ldv_49522.disk) {
60863,60867c67880,67885
<   tmp___16 = _drbd_set_state(mdev, __ns, CS_VERBOSE, 0);
< #line 1692
<   retcode = (enum drbd_ret_code )tmp___16;
< #line 1693
<   spin_unlock_irq(& mdev->req_lock);
---
>     flags = (enum chg_state_flags )((unsigned int )flags & 4294967039U);
>   } else {
> 
>   }
> #line 1694
>   if ((int )cs.ldv_49522.pdsk != (int )os.ldv_49522.pdsk) {
60869,60871c67887,67905
<   kobject_uevent(& (mdev->vdisk)->part0.__dev.kobj, KOBJ_CHANGE);
< #line 1696
<   reply->ret_code = (int )retcode;
---
>     flags = (enum chg_state_flags )((unsigned int )flags & 4294966783U);
>   } else {
> 
>   }
>   ldv_52436: 
> #line 1673
>   vnr = vnr + 1;
> #line 1673
>   tmp___0 = idr_get_next(& tconn->volumes, & vnr);
> #line 1673
>   mdev = (struct drbd_conf *)tmp___0;
>   ldv_52438: ;
> #line 1673
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 1674
>     goto ldv_52437;
>   } else {
> 
>   }
60873,60876c67907,67911
<   drbd_reconfig_done(mdev);
< #line 1698
<   return (0);
<   fail: 
---
>   rcu_read_unlock___7();
> #line 1699
>   *pf = (enum chg_state_flags )((unsigned int )*pf | 992U);
> #line 1700
>   *pf = (enum chg_state_flags )((unsigned int )*pf & (unsigned int )flags);
60878c67913
<   kfree((void const   *)int_dig_out);
---
>   pcs->i = cs.i;
60880,60900c67915
<   kfree((void const   *)int_dig_in);
< #line 1703
<   kfree((void const   *)int_dig_vv);
< #line 1704
<   crypto_free_hash(tfm);
< #line 1705
<   crypto_free_hash(integrity_w_tfm);
< #line 1706
<   crypto_free_hash(integrity_r_tfm);
< #line 1707
<   kfree((void const   *)new_tl_hash);
< #line 1708
<   kfree((void const   *)new_ee_hash);
< #line 1709
<   kfree((void const   *)new_conf);
< #line 1711
<   reply->ret_code = (int )retcode;
< #line 1712
<   drbd_reconfig_done(mdev);
< #line 1713
<   return (0);
---
>   return;
60903,60905c67918,67920
< #line 1716 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static int drbd_nl_disconnect(struct drbd_conf *mdev , struct drbd_nl_cfg_req *nlp ,
<                               struct drbd_nl_cfg_reply *reply ) 
---
> #line 1705 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> static enum drbd_state_rv conn_is_valid_transition(struct drbd_tconn *tconn , union drbd_state mask ,
>                                                    union drbd_state val , enum chg_state_flags flags ) 
60907,60917c67922,67928
<   int retcode ;
<   struct disconnect dc ;
<   int tmp ;
<   union drbd_state __ns ;
<   union drbd_state val ;
<   union drbd_state mask ;
<   enum drbd_state_rv tmp___0 ;
<   union drbd_state val___0 ;
<   union drbd_state mask___0 ;
<   union drbd_state val___1 ;
<   union drbd_state mask___1 ;
---
>   enum drbd_state_rv rv ;
>   union drbd_state ns ;
>   union drbd_state os ;
>   struct drbd_conf *mdev ;
>   int vnr ;
>   void *tmp ;
>   union drbd_state tmp___0 ;
60919,60925c67930
<   union drbd_state val___2 ;
<   union drbd_state mask___2 ;
<   int __ret ;
<   wait_queue_t __wait ;
<   struct task_struct *tmp___2 ;
<   struct task_struct *tmp___3 ;
<   int tmp___4 ;
---
>   void *tmp___2 ;
60927a67933,67960
> #line 1708
>   rv = 1;
> #line 1713
>   rcu_read_lock___7();
> #line 1714
>   vnr = 0;
> #line 1714
>   tmp = idr_get_next(& tconn->volumes, & vnr);
> #line 1714
>   mdev = (struct drbd_conf *)tmp;
> #line 1714
>   goto ldv_52454;
>   ldv_52453: 
> #line 1715
>   os = drbd_read_state(mdev);
> #line 1716
>   tmp___0 = apply_mask_val(os, mask, val);
> #line 1716
>   ns = sanitize_state(mdev, tmp___0, 0);
> #line 1718
>   if ((((unsigned int )flags & 2048U) != 0U && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 10U) && (int )os.ldv_40024.disk <= 4) {
> #line 1719
>     ns.ldv_40024.disk = os.ldv_40024.disk;
>   } else {
> 
>   }
> #line 1721
>   if (ns.i == os.i) {
60929,60933c67962,67965
<   memset((void *)(& dc), 0, 4UL);
< #line 1723
<   tmp = disconnect_from_tags(mdev, (unsigned short *)(& nlp->tag_list), & dc);
< #line 1723
<   if (tmp == 0) {
---
>     goto ldv_52451;
>   } else {
> 
>   }
60935c67967
<     retcode = 126;
---
>   rv = is_valid_transition(os, ns);
60937c67969,67971
<     goto fail;
---
>   if ((int )rv <= 0) {
> #line 1726
>     goto ldv_52452;
60942c67976
<   if ((unsigned int )*((unsigned char *)(& dc) + 0UL) != 0U) {
---
>   if (((unsigned int )flags & 1U) == 0U) {
60944c67978
<     spin_lock_irq(& mdev->req_lock);
---
>     rv = is_valid_state(mdev, ns);
60946,60948c67980
<     if ((int )mdev->state.ldv_39979.conn > 7) {
< #line 1731
<       __ns.i = mdev->state.i;
---
>     if ((int )rv <= 0) {
60950c67982
<       __ns.ldv_39979.conn = 1U;
---
>       tmp___1 = is_valid_state(mdev, os);
60952c67984,67990
<       _drbd_set_state(mdev, __ns, CS_HARD, 0);
---
>       if ((int )tmp___1 == (int )rv) {
> #line 1732
>         rv = is_valid_soft_transition(os, ns, tconn);
>       } else {
> #line 1734
>         rv = is_valid_soft_transition(os, ns, tconn);
>       }
60956,60959d67993
< #line 1732
<     spin_unlock_irq(& mdev->req_lock);
< #line 1733
<     goto done;
60964,60976c67998,68019
<   val.i = 0U;
< #line 1736
<   val.ldv_39979.conn = 1U;
< #line 1736
<   mask.i = 0U;
< #line 1736
<   mask.ldv_39979.conn = 31U;
< #line 1736
<   tmp___0 = _drbd_request_state(mdev, mask, val, CS_ORDERED);
< #line 1736
<   retcode = (int )tmp___0;
< #line 1738
<   if (retcode == 2) {
---
>   if ((int )rv <= 0) {
> #line 1737
>     goto ldv_52452;
>   } else {
> 
>   }
>   ldv_52451: 
> #line 1714
>   vnr = vnr + 1;
> #line 1714
>   tmp___2 = idr_get_next(& tconn->volumes, & vnr);
> #line 1714
>   mdev = (struct drbd_conf *)tmp___2;
>   ldv_52454: ;
> #line 1714
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 1715
>     goto ldv_52453;
>   } else {
> 
>   }
>   ldv_52452: 
60978,60981c68021
<     goto done;
<   } else
< #line 1740
<   if (retcode == -9) {
---
>   rcu_read_unlock___7();
60983,60984c68023
<     goto done;
<   } else
---
>   if ((int )rv <= 0 && ((unsigned int )flags & 2U) != 0U) {
60986,60994c68025,68028
<   if (retcode == -7) {
< #line 1745
<     val___0.i = 0U;
< #line 1745
<     val___0.ldv_39979.conn = 1U;
< #line 1745
<     val___0.ldv_39979.pdsk = 5U;
< #line 1744
<     mask___0.i = 0U;
---
>     print_st_err(mdev, os, ns, rv);
>   } else {
> 
>   }
60996,61019c68030,68079
<     mask___0.ldv_39979.conn = 31U;
< #line 1745
<     mask___0.ldv_39979.pdsk = 15U;
< #line 1745
<     retcode = drbd_request_state(mdev, mask___0, val___0);
<   } else
< #line 1746
<   if (retcode == -10) {
< #line 1749
<     val___1.i = 0U;
< #line 1749
<     val___1.ldv_39979.conn = 1U;
< #line 1749
<     val___1.ldv_39979.disk = 5U;
< #line 1748
<     mask___1.i = 0U;
< #line 1748
<     mask___1.ldv_39979.conn = 31U;
< #line 1749
<     mask___1.ldv_39979.disk = 15U;
< #line 1749
<     tmp___1 = _drbd_request_state(mdev, mask___1, val___1, CS_ORDERED);
< #line 1749
<     retcode = (int )tmp___1;
---
>   return (rv);
> }
> }
> #line 1748 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> void conn_set_state(struct drbd_tconn *tconn , union drbd_state mask , union drbd_state val ,
>                     union drbd_state *pns_min , union drbd_state *pns_max , enum chg_state_flags flags ) 
> { 
>   union drbd_state ns ;
>   union drbd_state os ;
>   union drbd_state ns_max ;
>   union drbd_state ns_min ;
>   struct drbd_conf *mdev ;
>   enum drbd_state_rv rv ;
>   int vnr ;
>   int number_of_volumes ;
>   void *tmp ;
>   enum drbd_role tmp___0 ;
>   enum drbd_role tmp___1 ;
>   enum drbd_conns __max1 ;
>   enum drbd_conns __max2 ;
>   enum drbd_disk_state __max1___0 ;
>   enum drbd_disk_state __max2___0 ;
>   enum drbd_disk_state __max1___1 ;
>   enum drbd_disk_state __max2___1 ;
>   enum drbd_role tmp___2 ;
>   enum drbd_role tmp___3 ;
>   enum drbd_conns __min1 ;
>   enum drbd_conns __min2 ;
>   enum drbd_disk_state __min1___0 ;
>   enum drbd_disk_state __min2___0 ;
>   enum drbd_disk_state __min1___1 ;
>   enum drbd_disk_state __min2___1 ;
>   void *tmp___4 ;
>   union drbd_state __constr_expr_0 ;
> 
>   {
> #line 1751
>   ns_max.ldv_40024.role = (unsigned char)0;
> #line 1751
>   ns_max.ldv_40024.peer = (unsigned char)0;
> #line 1751
>   ns_max.ldv_40024.conn = (unsigned char)0;
> #line 1751
>   ns_max.ldv_40024.disk = (unsigned char)0;
> #line 1751
>   ns_max.ldv_40024.pdsk = (unsigned char)0;
> #line 1751
>   ns_max.ldv_40024.susp = (unsigned char)0;
> #line 1751
>   ns_max.ldv_40024.aftr_isp = (unsigned char)0;
61021c68081,68089
<     if (retcode == -11 || retcode == -16) {
---
>   ns_max.ldv_40024.peer_isp = (unsigned char)0;
> #line 1751
>   ns_max.ldv_40024.user_isp = (unsigned char)0;
> #line 1751
>   ns_max.ldv_40024.susp_nod = (unsigned char)0;
> #line 1751
>   ns_max.ldv_40024.susp_fen = (unsigned char)0;
> #line 1751
>   ns_max.ldv_40024._pad = (unsigned short)0;
61023c68091
<       val___2.i = 0U;
---
>   ns_min.ldv_40024.role = 3U;
61025c68093
<       val___2.ldv_39979.conn = 1U;
---
>   ns_min.ldv_40024.peer = 3U;
61027c68095
<       mask___2.i = 0U;
---
>   ns_min.ldv_40024.conn = val.ldv_40024.conn;
61029c68097
<       mask___2.ldv_39979.conn = 31U;
---
>   ns_min.ldv_40024.disk = 15U;
61031,61082c68099,68121
<       drbd_force_state(mdev, mask___2, val___2);
< #line 1753
<       retcode = 1;
<     } else {
< 
<     }
<   } else {
< 
<   }
< #line 1757
<   if (retcode <= 0) {
< #line 1758
<     goto fail;
<   } else {
< 
<   }
< #line 1760
<   __ret = 0;
< #line 1760
<   if ((unsigned int )*((unsigned short *)mdev + 1138UL) == 16U) {
< #line 1760
<     tmp___2 = get_current();
< #line 1760
<     __wait.flags = 0U;
< #line 1760
<     __wait.private = (void *)tmp___2;
< #line 1760
<     __wait.func = & autoremove_wake_function;
< #line 1760
<     __wait.task_list.next = & __wait.task_list;
< #line 1760
<     __wait.task_list.prev = & __wait.task_list;
<     ldv_54510: 
< #line 1760
<     prepare_to_wait(& mdev->state_wait, & __wait, 1);
< #line 1760
<     if ((unsigned int )*((unsigned short *)mdev + 1138UL) != 16U) {
< #line 1760
<       goto ldv_54508;
<     } else {
< 
<     }
< #line 1760
<     tmp___3 = get_current();
< #line 1760
<     tmp___4 = signal_pending(tmp___3);
< #line 1760
<     if (tmp___4 == 0) {
< #line 1760
<       schedule();
< #line 1760
<       goto ldv_54509;
---
>   ns_min.ldv_40024.pdsk = 15U;
> #line 1752
>   ns_min.ldv_40024.susp = (unsigned char)0;
> #line 1752
>   ns_min.ldv_40024.aftr_isp = (unsigned char)0;
> #line 1752
>   ns_min.ldv_40024.peer_isp = (unsigned char)0;
> #line 1752
>   ns_min.ldv_40024.user_isp = (unsigned char)0;
> #line 1752
>   ns_min.ldv_40024.susp_nod = (unsigned char)0;
> #line 1752
>   ns_min.ldv_40024.susp_fen = (unsigned char)0;
> #line 1752
>   ns_min.ldv_40024._pad = (unsigned short)0;
> #line 1761
>   number_of_volumes = 0;
> #line 1763
>   if ((unsigned int )*((unsigned short *)(& mask) + 0UL) == 496U) {
> #line 1767
>     if ((unsigned int )tconn->cstate != 9U && (unsigned int )*((unsigned short *)(& val) + 0UL) == 144U) {
> #line 1768
>       tconn->last_reconnect_jif = jiffies;
61086,61104c68125,68126
< #line 1760
<     __ret = -512;
< #line 1760
<     goto ldv_54508;
<     ldv_54509: ;
< #line 1760
<     goto ldv_54510;
<     ldv_54508: 
< #line 1760
<     finish_wait(& mdev->state_wait, & __wait);
<   } else {
< 
<   }
< #line 1760
<   if (__ret != 0) {
< #line 1764
<     retcode = 129;
< #line 1765
<     goto fail;
---
> #line 1770
>     tconn->cstate = (enum drbd_conns )val.ldv_40024.conn;
61108,61115d68129
<   done: 
< #line 1769
<   retcode = 101;
<   fail: 
< #line 1771
<   drbd_md_sync(mdev);
< #line 1772
<   reply->ret_code = retcode;
61117,61127c68131,68148
<   return (0);
< }
< }
< #line 1776 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void resync_after_online_grow(struct drbd_conf *mdev ) 
< { 
<   int iass ;
<   union drbd_state val ;
<   union drbd_state mask ;
< 
<   {
---
>   rcu_read_lock___7();
> #line 1774
>   vnr = 0;
> #line 1774
>   tmp = idr_get_next(& tconn->volumes, & vnr);
> #line 1774
>   mdev = (struct drbd_conf *)tmp;
> #line 1774
>   goto ldv_52491;
>   ldv_52490: 
> #line 1775
>   number_of_volumes = number_of_volumes + 1;
> #line 1776
>   os = drbd_read_state(mdev);
> #line 1777
>   ns = apply_mask_val(os, mask, val);
> #line 1778
>   ns = sanitize_state(mdev, ns, 0);
61129c68150
<   _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Resync of new storage after online grow\n");
---
>   if ((((unsigned int )flags & 2048U) != 0U && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 10U) && (int )os.ldv_40024.disk <= 4) {
61131,61133c68152
<   if ((int )mdev->state.ldv_39979.role != (int )mdev->state.ldv_39979.peer) {
< #line 1782
<     iass = (unsigned int )*((unsigned char *)mdev + 2276UL) == 1U;
---
>     ns.ldv_40024.disk = os.ldv_40024.disk;
61134a68154,68157
> 
>   }
> #line 1783
>   rv = __drbd_set_state(mdev, ns, flags, 0);
61136c68159,68167
<     iass = drbd_test_flag(mdev, DISCARD_CONCURRENT);
---
>   if ((int )rv <= 0) {
> #line 1785
>     __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"),
>                          "i" (1785), "i" (12UL));
>     ldv_52471: ;
> #line 1785
>     goto ldv_52471;
>   } else {
> 
61138,61139d68168
< #line 1786
<   if (iass != 0) {
61141,61148c68170,68174
<     drbd_start_resync(mdev, C_SYNC_SOURCE);
<   } else {
< #line 1789
<     val.i = 0U;
< #line 1789
<     val.ldv_39979.conn = 15U;
< #line 1789
<     mask.i = 0U;
---
>   ns.i = mdev->state.i;
> #line 1788
>   tmp___0 = max_role((enum drbd_role )ns.ldv_40024.role, (enum drbd_role )ns_max.ldv_40024.role);
> #line 1788
>   ns_max.ldv_40024.role = (unsigned char )tmp___0;
61150c68176
<     mask.ldv_39979.conn = 31U;
---
>   tmp___1 = max_role((enum drbd_role )ns.ldv_40024.peer, (enum drbd_role )ns_max.ldv_40024.peer);
61152,61153c68178,68184
<     _drbd_request_state(mdev, mask, val, 10);
<   }
---
>   ns_max.ldv_40024.peer = (unsigned char )tmp___1;
> #line 1790
>   __max1 = (enum drbd_conns )ns.ldv_40024.conn;
> #line 1790
>   __max2 = (enum drbd_conns )ns_max.ldv_40024.conn;
> #line 1790
>   ns_max.ldv_40024.conn = (unsigned char )((unsigned int )__max1 > (unsigned int )__max2 ? (unsigned int )__max1 : (unsigned int )__max2);
61155,61169c68186,68204
<   return;
< }
< }
< #line 1792 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static int drbd_nl_resize(struct drbd_conf *mdev , struct drbd_nl_cfg_req *nlp , struct drbd_nl_cfg_reply *reply ) 
< { 
<   struct resize rs ;
<   int retcode ;
<   enum determine_dev_size dd ;
<   enum dds_flags ddsf ;
<   int tmp ;
<   int tmp___0 ;
<   sector_t tmp___1 ;
< 
<   {
---
>   __max1___0 = (enum drbd_disk_state )ns.ldv_40024.disk;
> #line 1791
>   __max2___0 = (enum drbd_disk_state )ns_max.ldv_40024.disk;
> #line 1791
>   ns_max.ldv_40024.disk = (unsigned char )((unsigned int )__max1___0 > (unsigned int )__max2___0 ? (unsigned int )__max1___0 : (unsigned int )__max2___0);
> #line 1792
>   __max1___1 = (enum drbd_disk_state )ns.ldv_40024.pdsk;
> #line 1792
>   __max2___1 = (enum drbd_disk_state )ns_max.ldv_40024.pdsk;
> #line 1792
>   ns_max.ldv_40024.pdsk = (unsigned char )((unsigned int )__max1___1 > (unsigned int )__max2___1 ? (unsigned int )__max1___1 : (unsigned int )__max2___1);
> #line 1794
>   tmp___2 = min_role((enum drbd_role )ns.ldv_40024.role, (enum drbd_role )ns_min.ldv_40024.role);
> #line 1794
>   ns_min.ldv_40024.role = (unsigned char )tmp___2;
> #line 1795
>   tmp___3 = min_role((enum drbd_role )ns.ldv_40024.peer, (enum drbd_role )ns_min.ldv_40024.peer);
> #line 1795
>   ns_min.ldv_40024.peer = (unsigned char )tmp___3;
61171,61181c68206,68233
<   retcode = 101;
< #line 1800
<   memset((void *)(& rs), 0, 16UL);
< #line 1801
<   tmp = resize_from_tags(mdev, (unsigned short *)(& nlp->tag_list), & rs);
< #line 1801
<   if (tmp == 0) {
< #line 1802
<     retcode = 126;
< #line 1803
<     goto fail;
---
>   __min1 = (enum drbd_conns )ns.ldv_40024.conn;
> #line 1796
>   __min2 = (enum drbd_conns )ns_min.ldv_40024.conn;
> #line 1796
>   ns_min.ldv_40024.conn = (unsigned char )((unsigned int )__min1 < (unsigned int )__min2 ? (unsigned int )__min1 : (unsigned int )__min2);
> #line 1797
>   __min1___0 = (enum drbd_disk_state )ns.ldv_40024.disk;
> #line 1797
>   __min2___0 = (enum drbd_disk_state )ns_min.ldv_40024.disk;
> #line 1797
>   ns_min.ldv_40024.disk = (unsigned char )((unsigned int )__min1___0 < (unsigned int )__min2___0 ? (unsigned int )__min1___0 : (unsigned int )__min2___0);
> #line 1798
>   __min1___1 = (enum drbd_disk_state )ns.ldv_40024.pdsk;
> #line 1798
>   __min2___1 = (enum drbd_disk_state )ns_min.ldv_40024.pdsk;
> #line 1798
>   ns_min.ldv_40024.pdsk = (unsigned char )((unsigned int )__min1___1 < (unsigned int )__min2___1 ? (unsigned int )__min1___1 : (unsigned int )__min2___1);
> #line 1774
>   vnr = vnr + 1;
> #line 1774
>   tmp___4 = idr_get_next(& tconn->volumes, & vnr);
> #line 1774
>   mdev = (struct drbd_conf *)tmp___4;
>   ldv_52491: ;
> #line 1774
>   if ((unsigned long )mdev != (unsigned long )((struct drbd_conf *)0)) {
> #line 1775
>     goto ldv_52490;
61185,61190c68237,68268
< #line 1806
<   if ((int )mdev->state.ldv_39979.conn > 10) {
< #line 1807
<     retcode = 130;
< #line 1808
<     goto fail;
---
> #line 1800
>   rcu_read_unlock___7();
> #line 1802
>   if (number_of_volumes == 0) {
> #line 1803
>     __constr_expr_0.ldv_40024.role = 2U;
> #line 1803
>     __constr_expr_0.ldv_40024.peer = 0U;
> #line 1803
>     __constr_expr_0.ldv_40024.conn = val.ldv_40024.conn;
> #line 1803
>     __constr_expr_0.ldv_40024.disk = 0U;
> #line 1803
>     __constr_expr_0.ldv_40024.pdsk = 6U;
> #line 1803
>     __constr_expr_0.ldv_40024.susp = (unsigned char)0;
> #line 1803
>     __constr_expr_0.ldv_40024.aftr_isp = (unsigned char)0;
> #line 1803
>     __constr_expr_0.ldv_40024.peer_isp = (unsigned char)0;
> #line 1803
>     __constr_expr_0.ldv_40024.user_isp = (unsigned char)0;
> #line 1803
>     __constr_expr_0.ldv_40024.susp_nod = (unsigned char)0;
> #line 1803
>     __constr_expr_0.ldv_40024.susp_fen = (unsigned char)0;
> #line 1803
>     __constr_expr_0.ldv_40024._pad = (unsigned short)0;
> #line 1803
>     ns_max = __constr_expr_0;
> #line 1803
>     ns_min = ns_max;
61194,61195c68272,68277
< #line 1811
<   if ((unsigned int )*((unsigned char *)mdev + 2276UL) == 2U && (unsigned int )*((unsigned char *)mdev + 2276UL) == 8U) {
---
> #line 1812
>   ns_max.ldv_40024.susp = tconn->susp;
> #line 1812
>   ns_min.ldv_40024.susp = ns_max.ldv_40024.susp;
> #line 1813
>   ns_max.ldv_40024.susp_nod = tconn->susp_nod;
61197c68279
<     retcode = 131;
---
>   ns_min.ldv_40024.susp_nod = ns_max.ldv_40024.susp_nod;
61199,61204c68281,68285
<     goto fail;
<   } else {
< 
<   }
< #line 1817
<   tmp___0 = _get_ldev_if_state(mdev, D_INCONSISTENT);
---
>   ns_max.ldv_40024.susp_fen = tconn->susp_fen;
> #line 1814
>   ns_min.ldv_40024.susp_fen = ns_max.ldv_40024.susp_fen;
> #line 1816
>   *pns_min = ns_min;
61206c68287
<   if (tmp___0 == 0) {
---
>   *pns_max = ns_max;
61208,61211c68289,68298
<     retcode = 138;
< #line 1819
<     goto fail;
<   } else {
---
>   return;
> }
> }
> #line 1821 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> static enum drbd_state_rv _conn_rq_cond(struct drbd_tconn *tconn , union drbd_state mask ,
>                                         union drbd_state val ) 
> { 
>   enum drbd_state_rv rv ;
>   int tmp ;
>   int tmp___0 ;
61213,61219c68300,68306
<   }
< #line 1822
<   if ((unsigned int )*((unsigned char *)(& rs) + 8UL) != 0U && mdev->agreed_pro_version <= 92) {
< #line 1823
<     retcode = 153;
< #line 1824
<     goto fail_ldev;
---
>   {
> #line 1825
>   tmp = test_and_clear_bit(6, (unsigned long volatile   *)(& tconn->flags));
> #line 1825
>   if (tmp != 0) {
> #line 1826
>     return (SS_CW_SUCCESS);
61223,61226d68309
< #line 1827
<   tmp___1 = drbd_get_capacity((mdev->ldev)->backing_bdev);
< #line 1827
<   if ((mdev->ldev)->known_size != tmp___1) {
61228c68311,68315
<     (mdev->ldev)->known_size = drbd_get_capacity((mdev->ldev)->backing_bdev);
---
>   tmp___0 = test_and_clear_bit(7, (unsigned long volatile   *)(& tconn->flags));
> #line 1828
>   if (tmp___0 != 0) {
> #line 1829
>     return (SS_CW_FAILED_BY_PEER);
61232,61233d68318
< #line 1830
<   (mdev->ldev)->dc.disk_size = rs.resize_size;
61235,61237c68320
<   ddsf = (enum dds_flags )(((unsigned int )*((unsigned char *)(& rs) + 8UL) != 0U) | ((int )*((unsigned char *)(& rs) + 8UL) & 2));
< #line 1832
<   dd = drbd_determine_dev_size(mdev, ddsf);
---
>   rv = (unsigned int )tconn->cstate != 9U ? SS_CW_NO_NEED : SS_UNKNOWN_ERROR;
61239c68322
<   drbd_md_sync(mdev);
---
>   if ((int )rv == 0) {
61241,61247c68324
<   put_ldev(mdev);
< #line 1835
<   if ((int )dd == -1) {
< #line 1836
<     retcode = 140;
< #line 1837
<     goto fail;
---
>     rv = conn_is_valid_transition(tconn, mask, val, 0);
61251,61263c68328,68331
< #line 1840
<   if ((unsigned int )*((unsigned short *)mdev + 1138UL) == 160U) {
< #line 1841
<     if ((int )dd == 2) {
< #line 1842
<       drbd_set_flag(mdev, RESIZE_PENDING);
<     } else {
< 
<     }
< #line 1844
<     drbd_send_uuids(mdev);
< #line 1845
<     drbd_send_sizes(mdev, 1, ddsf);
---
> #line 1836
>   if ((int )rv == 1) {
> #line 1837
>     rv = SS_UNKNOWN_ERROR;
61267,61276c68335,68336
<   fail: 
< #line 1849
<   reply->ret_code = retcode;
< #line 1850
<   return (0);
<   fail_ldev: 
< #line 1853
<   put_ldev(mdev);
< #line 1854
<   goto fail;
---
> #line 1839
>   return (rv);
61279,61281c68339,68341
< #line 1857 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static int drbd_nl_syncer_conf(struct drbd_conf *mdev , struct drbd_nl_cfg_req *nlp ,
<                                struct drbd_nl_cfg_reply *reply ) 
---
> #line 1843 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> enum drbd_state_rv _conn_request_state(struct drbd_tconn *tconn , union drbd_state mask ,
>                                        union drbd_state val , enum chg_state_flags flags ) 
61283,61309c68343,68350
<   int retcode ;
<   int err ;
<   int ovr ;
<   int rsr ;
<   struct crypto_hash *verify_tfm ;
<   struct crypto_hash *csums_tfm ;
<   struct syncer_conf sc ;
<   cpumask_var_t new_cpu_mask ;
<   int *rs_plan_s ;
<   int fifo_size ;
<   bool tmp ;
<   int tmp___0 ;
<   size_t __len ;
<   void *__ret ;
<   int tmp___1 ;
<   int tmp___2 ;
<   long tmp___3 ;
<   struct crypto_tfm *tmp___4 ;
<   int tmp___5 ;
<   int tmp___6 ;
<   long tmp___7 ;
<   struct crypto_tfm *tmp___8 ;
<   int tmp___9 ;
<   int _b ;
<   int _b___0 ;
<   void *tmp___10 ;
<   int tmp___11 ;
---
>   enum drbd_state_rv rv ;
>   struct after_conn_state_chg_work *acscw ;
>   enum drbd_conns oc ;
>   union drbd_state ns_max ;
>   union drbd_state ns_min ;
>   union drbd_state os ;
>   bool have_mutex ;
>   int tmp ;
61311,61315c68352,68362
<   struct task_struct *tmp___12 ;
<   int tmp___13 ;
<   int tmp___14 ;
<   bool tmp___15 ;
<   int tmp___16 ;
---
>   struct task_struct *tmp___0 ;
>   long volatile   __ret ;
>   struct task_struct *tmp___1 ;
>   struct task_struct *tmp___2 ;
>   struct task_struct *tmp___3 ;
>   struct task_struct *tmp___4 ;
>   struct task_struct *tmp___5 ;
>   void *tmp___6 ;
>   char const   *tmp___7 ;
>   char const   *tmp___8 ;
>   char const   *tmp___9 ;
61318,61331c68365,68381
< #line 1860
<   retcode = 101;
< #line 1864
<   verify_tfm = 0;
< #line 1865
<   csums_tfm = 0;
< #line 1868
<   rs_plan_s = 0;
< #line 1871
<   tmp = zalloc_cpumask_var(& new_cpu_mask, 208U);
< #line 1871
<   if (tmp) {
< #line 1871
<     tmp___0 = 0;
---
> #line 1846
>   rv = 1;
> #line 1848
>   oc = tconn->cstate;
> #line 1850
>   have_mutex = 0;
> #line 1852
>   if ((unsigned int )*((unsigned short *)(& mask) + 0UL) != 0U) {
> #line 1853
>     rv = is_valid_conn_transition(oc, (enum drbd_conns )val.ldv_40024.conn);
> #line 1854
>     if ((int )rv <= 0) {
> #line 1855
>       goto abort;
>     } else {
> 
>     }
61333,61334c68383
< #line 1871
<     tmp___0 = 1;
---
> 
61336,61341c68385,68390
< #line 1871
<   if (tmp___0) {
< #line 1872
<     retcode = 122;
< #line 1873
<     goto fail;
---
> #line 1858
>   rv = conn_is_valid_transition(tconn, mask, val, flags);
> #line 1859
>   if ((int )rv <= 0) {
> #line 1860
>     goto abort;
61344a68394,68409
> #line 1862
>   if (((unsigned int )oc == 9U && (unsigned int )*((unsigned short *)(& val) + 0UL) == 16U) && ((unsigned int )flags & 17U) == 0U) {
> #line 1868
>     spin_unlock_irq(& tconn->req_lock);
> #line 1869
>     ldv_mutex_lock_352(& tconn->cstate_mutex);
> #line 1870
>     have_mutex = 1;
> #line 1872
>     set_bit(5U, (unsigned long volatile   *)(& tconn->flags));
> #line 1873
>     tmp = conn_send_state_req(tconn, mask, val);
> #line 1873
>     if (tmp != 0) {
> #line 1875
>       clear_bit(5, (unsigned long volatile   *)(& tconn->flags));
61346,61348c68411
<   if ((nlp->flags & 2) != 0) {
< #line 1877
<     memset((void *)(& sc), 0, 212UL);
---
>       rv = SS_CW_FAILED_BY_PEER;
61350,61354c68413,68416
<     sc.rate = 250;
< #line 1879
<     sc.after = -1;
< #line 1880
<     sc.al_extents = 127;
---
>       goto abort_unlocked;
>     } else {
> 
>     }
61356c68418
<     sc.on_no_data = 0;
---
>     if ((unsigned int )*((unsigned short *)(& val) + 0UL) == 16U) {
61358,61367c68420,68425
<     sc.c_plan_ahead = 0;
< #line 1883
<     sc.c_delay_target = 10;
< #line 1884
<     sc.c_fill_target = 0;
< #line 1885
<     sc.c_max_rate = 102400;
< #line 1886
<     sc.c_min_rate = 4096;
<   } else {
---
>       set_bit(12U, (unsigned long volatile   *)(& tconn->flags));
>     } else {
> 
>     }
> #line 1887
>     spin_lock_irq(& tconn->req_lock);
61369c68427
<     __len = 212UL;
---
>     rv = _conn_rq_cond(tconn, mask, val);
61371c68429
<     if (__len > 63UL) {
---
>     if ((int )rv != 0) {
61373c68431
<       __ret = __memcpy((void *)(& sc), (void const   *)(& mdev->sync_conf), __len);
---
>       goto ldv_52515;
61374a68433,68467
> 
>     }
> #line 1888
>     tmp___0 = get_current();
> #line 1888
>     init_waitqueue_entry(& __wait, tmp___0);
> #line 1888
>     add_wait_queue(& tconn->ping_wait, & __wait);
>     ldv_52526: 
> #line 1888
>     __ret = 2L;
> #line 1888
>     switch (8UL) {
>     case 1UL: 
> #line 1888
>     tmp___1 = get_current();
> #line 1888
>     __asm__  volatile   ("xchgb %b0, %1\n": "+q" (__ret), "+m" (tmp___1->state): : "memory",
>                          "cc");
> #line 1888
>     goto ldv_52519;
>     case 2UL: 
> #line 1888
>     tmp___2 = get_current();
> #line 1888
>     __asm__  volatile   ("xchgw %w0, %1\n": "+r" (__ret), "+m" (tmp___2->state): : "memory",
>                          "cc");
> #line 1888
>     goto ldv_52519;
>     case 4UL: 
> #line 1888
>     tmp___3 = get_current();
> #line 1888
>     __asm__  volatile   ("xchgl %0, %1\n": "+r" (__ret), "+m" (tmp___3->state): : "memory",
>                          "cc");
61376,61377c68469,68480
<       __ret = __builtin_memcpy((void *)(& sc), (void const   *)(& mdev->sync_conf),
<                                __len);
---
>     goto ldv_52519;
>     case 8UL: 
> #line 1888
>     tmp___4 = get_current();
> #line 1888
>     __asm__  volatile   ("xchgq %q0, %1\n": "+r" (__ret), "+m" (tmp___4->state): : "memory",
>                          "cc");
> #line 1888
>     goto ldv_52519;
>     default: 
> #line 1888
>     __xchg_wrong_size();
61379,61388c68482,68489
<   }
< #line 1890
<   tmp___1 = syncer_conf_from_tags(mdev, (unsigned short *)(& nlp->tag_list), & sc);
< #line 1890
<   if (tmp___1 == 0) {
< #line 1891
<     retcode = 126;
< #line 1892
<     goto fail;
<   } else {
---
>     ldv_52519: 
> #line 1888
>     rv = _conn_rq_cond(tconn, mask, val);
> #line 1888
>     if ((int )rv != 0) {
> #line 1888
>       goto ldv_52525;
>     } else {
61390,61402c68491,68513
<   }
< #line 1896
<   rsr = (((unsigned int )*((unsigned short *)mdev + 1138UL) == 256U || (unsigned int )*((unsigned short *)mdev + 1138UL) == 272U) || (unsigned int )*((unsigned short *)mdev + 1138UL) == 320U) || (unsigned int )*((unsigned short *)mdev + 1138UL) == 336U;
< #line 1901
<   if (rsr != 0) {
< #line 1901
<     tmp___2 = strcmp((char const   *)(& sc.csums_alg), (char const   *)(& mdev->sync_conf.csums_alg));
< #line 1901
<     if (tmp___2 != 0) {
< #line 1902
<       retcode = 148;
< #line 1903
<       goto fail;
---
>     }
> #line 1888
>     spin_unlock_irq(& tconn->req_lock);
> #line 1888
>     schedule();
> #line 1888
>     spin_lock_irq(& tconn->req_lock);
> #line 1888
>     goto ldv_52526;
>     ldv_52525: 
> #line 1888
>     tmp___5 = get_current();
> #line 1888
>     tmp___5->state = 0L;
> #line 1888
>     remove_wait_queue(& tconn->ping_wait, & __wait);
>     ldv_52515: 
> #line 1892
>     clear_bit(5, (unsigned long volatile   *)(& tconn->flags));
> #line 1893
>     if ((int )rv <= 0) {
> #line 1894
>       goto abort;
61408a68520,68537
> #line 1897
>   conn_old_common_state(tconn, & os, & flags);
> #line 1898
>   flags = (enum chg_state_flags )((unsigned int )flags | 1024U);
> #line 1899
>   conn_set_state(tconn, mask, val, & ns_min, & ns_max, flags);
> #line 1900
>   conn_pr_state_change(tconn, os, ns_max, flags);
> #line 1902
>   tmp___6 = kmalloc(48UL, 32U);
> #line 1902
>   acscw = (struct after_conn_state_chg_work *)tmp___6;
> #line 1903
>   if ((unsigned long )acscw != (unsigned long )((struct after_conn_state_chg_work *)0)) {
> #line 1904
>     acscw->oc = (enum drbd_conns )os.ldv_40024.conn;
> #line 1905
>     acscw->ns_min = ns_min;
61410c68539
<   if (rsr == 0 && (unsigned int )sc.csums_alg[0] != 0U) {
---
>     acscw->ns_max = ns_max;
61412,61414c68541
<     csums_tfm = crypto_alloc_hash((char const   *)(& sc.csums_alg), 0U, 128U);
< #line 1908
<     tmp___3 = IS_ERR((void const   *)csums_tfm);
---
>     acscw->flags = flags;
61416c68543
<     if (tmp___3 != 0L) {
---
>     acscw->w.cb = & w_after_conn_state_ch;
61418c68545
<       csums_tfm = 0;
---
>     kref_get(& tconn->kref);
61420c68547
<       retcode = 144;
---
>     acscw->w.ldv_49807.tconn = tconn;
61422,61438c68549
<       goto fail;
<     } else {
< 
<     }
< #line 1914
<     tmp___4 = crypto_hash_tfm(csums_tfm);
< #line 1914
<     tmp___5 = drbd_crypto_is_hash(tmp___4);
< #line 1914
<     if (tmp___5 == 0) {
< #line 1915
<       retcode = 145;
< #line 1916
<       goto fail;
<     } else {
< 
<     }
---
>     drbd_queue_work(& tconn->sender_work, & acscw->w);
61440c68551,68552
< 
---
> #line 1913
>     printk("\vd-con %s: Could not kmalloc an acscw\n", tconn->name);
61442,61443c68554,68561
< #line 1921
<   ovr = (unsigned int )*((unsigned short *)mdev + 1138UL) == 288U || (unsigned int )*((unsigned short *)mdev + 1138UL) == 304U;
---
>   abort: ;
> #line 1917
>   if ((int )have_mutex) {
> #line 1920
>     spin_unlock_irq(& tconn->req_lock);
>     abort_unlocked: 
> #line 1922
>     ldv_mutex_unlock_353(& tconn->cstate_mutex);
61445,61449c68563,68566
<   if (ovr != 0) {
< #line 1924
<     tmp___6 = strcmp((char const   *)(& sc.verify_alg), (char const   *)(& mdev->sync_conf.verify_alg));
< #line 1924
<     if (tmp___6 != 0) {
---
>     spin_lock_irq(& tconn->req_lock);
>   } else {
> 
>   }
61451c68568
<       retcode = 149;
---
>   if ((int )rv <= 0 && ((unsigned int )flags & 2U) != 0U) {
61453,61456c68570,68580
<       goto fail;
<     } else {
< 
<     }
---
>     tmp___7 = drbd_set_st_err_str(rv);
> #line 1926
>     printk("\vd-con %s: State change failed: %s\n", tconn->name, tmp___7);
> #line 1927
>     printk("\vd-con %s:  mask = 0x%x val = 0x%x\n", tconn->name, mask.i, val.i);
> #line 1928
>     tmp___8 = drbd_conn_str((enum drbd_conns )val.ldv_40024.conn);
> #line 1928
>     tmp___9 = drbd_conn_str(oc);
> #line 1928
>     printk("\vd-con %s:  old_conn:%s wanted_conn:%s\n", tconn->name, tmp___9, tmp___8);
61461,61474c68585,68592
<   if (ovr == 0 && (unsigned int )sc.verify_alg[0] != 0U) {
< #line 1931
<     verify_tfm = crypto_alloc_hash((char const   *)(& sc.verify_alg), 0U, 128U);
< #line 1932
<     tmp___7 = IS_ERR((void const   *)verify_tfm);
< #line 1932
<     if (tmp___7 != 0L) {
< #line 1933
<       verify_tfm = 0;
< #line 1934
<       retcode = 146;
< #line 1935
<       goto fail;
<     } else {
---
>   return (rv);
> }
> }
> #line 1934 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> enum drbd_state_rv conn_request_state(struct drbd_tconn *tconn , union drbd_state mask ,
>                                       union drbd_state val , enum chg_state_flags flags ) 
> { 
>   enum drbd_state_rv rv ;
61476,61482c68594
<     }
< #line 1938
<     tmp___8 = crypto_hash_tfm(verify_tfm);
< #line 1938
<     tmp___9 = drbd_crypto_is_hash(tmp___8);
< #line 1938
<     if (tmp___9 == 0) {
---
>   {
61484c68596
<       retcode = 147;
---
>   spin_lock_irq(& tconn->req_lock);
61486,61487c68598,68607
<       goto fail;
<     } else {
---
>   rv = _conn_request_state(tconn, mask, val, flags);
> #line 1941
>   spin_unlock_irq(& tconn->req_lock);
> #line 1943
>   return (rv);
> }
> }
> #line 1946 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> void ldv_mutex_lock_337(struct mutex *ldv_func_arg1 ) 
> { 
61489,61490d68608
<     }
<   } else {
61492,61504c68610
<   }
< #line 1945
<   if (nr_cpu_ids > 1 && (unsigned int )sc.cpu_mask[0] != 0U) {
< #line 1946
<     err = bitmap_parse((char const   *)(& sc.cpu_mask), 32U, (unsigned long *)(& new_cpu_mask->bits),
<                        nr_cpu_ids);
< #line 1948
<     if (err != 0) {
< #line 1949
<       dev_warn((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "bitmap_parse() failed with %d\n",
<                err);
< #line 1950
<       retcode = 143;
---
>   {
61506,61755c68612,68616
<       goto fail;
<     } else {
< 
<     }
<   } else {
< 
<   }
< #line 1955
<   _b = sc.rate <= 0;
< #line 1955
<   if (_b != 0) {
< #line 1955
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_nl_syncer_conf", (char *)"sc.rate < 1", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared",
<             1955);
<   } else {
< 
<   }
< #line 1955
<   if (_b != 0) {
< #line 1955
<     sc.rate = 1;
<   } else {
< 
<   }
< #line 1956
<   _b___0 = sc.al_extents <= 6;
< #line 1956
<   if (_b___0 != 0) {
< #line 1956
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "ASSERT FAILED: %s: (%s) in %s:%d\n",
<             "drbd_nl_syncer_conf", (char *)"sc.al_extents < 7", (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared",
<             1956);
<   } else {
< 
<   }
< #line 1956
<   if (_b___0 != 0) {
< #line 1956
<     sc.al_extents = 127;
<   } else {
< 
<   }
< #line 1958
<   if (sc.al_extents > 3843) {
< #line 1959
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "sc.al_extents > %d\n",
<             3843);
< #line 1960
<     sc.al_extents = 3843;
<   } else {
< 
<   }
< #line 1967
<   if (sc.after >= 0) {
< #line 1968
<     ensure_mdev(sc.after, 1);
<   } else {
< 
<   }
< #line 1973
<   retcode = drbd_alter_sa(mdev, sc.after);
< #line 1974
<   if (retcode != 101) {
< #line 1975
<     goto fail;
<   } else {
< 
<   }
< #line 1977
<   fifo_size = (sc.c_plan_ahead * 250) / 250;
< #line 1978
<   if ((unsigned int )fifo_size != mdev->rs_plan_s.size && fifo_size > 0) {
< #line 1979
<     tmp___10 = kzalloc((unsigned long )fifo_size * 4UL, 208U);
< #line 1979
<     rs_plan_s = (int *)tmp___10;
< #line 1980
<     if ((unsigned long )rs_plan_s == (unsigned long )((int *)0)) {
< #line 1981
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "kmalloc of fifo_buffer failed");
< #line 1982
<       retcode = 122;
< #line 1983
<       goto fail;
<     } else {
< 
<     }
<   } else {
< 
<   }
< #line 1989
<   spin_lock(& mdev->peer_seq_lock);
< #line 1990
<   mdev->sync_conf = sc;
< #line 1992
<   if (rsr == 0) {
< #line 1993
<     crypto_free_hash(mdev->csums_tfm);
< #line 1994
<     mdev->csums_tfm = csums_tfm;
< #line 1995
<     csums_tfm = 0;
<   } else {
< 
<   }
< #line 1998
<   if (ovr == 0) {
< #line 1999
<     crypto_free_hash(mdev->verify_tfm);
< #line 2000
<     mdev->verify_tfm = verify_tfm;
< #line 2001
<     verify_tfm = 0;
<   } else {
< 
<   }
< #line 2004
<   if ((unsigned int )fifo_size != mdev->rs_plan_s.size) {
< #line 2005
<     kfree((void const   *)mdev->rs_plan_s.values);
< #line 2006
<     mdev->rs_plan_s.values = rs_plan_s;
< #line 2007
<     mdev->rs_plan_s.size = (unsigned int )fifo_size;
< #line 2008
<     mdev->rs_planed = 0;
< #line 2009
<     rs_plan_s = 0;
<   } else {
< 
<   }
< #line 2012
<   spin_unlock(& mdev->peer_seq_lock);
< #line 2014
<   tmp___14 = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 2014
<   if (tmp___14 != 0) {
< #line 2015
<     tmp___11 = lc_try_lock(mdev->act_log);
< #line 2015
<     if (tmp___11 != 0) {
< #line 2015
<       goto ldv_54555;
<     } else {
< 
<     }
< #line 2015
<     tmp___12 = get_current();
< #line 2015
<     __wait.flags = 0U;
< #line 2015
<     __wait.private = (void *)tmp___12;
< #line 2015
<     __wait.func = & autoremove_wake_function;
< #line 2015
<     __wait.task_list.next = & __wait.task_list;
< #line 2015
<     __wait.task_list.prev = & __wait.task_list;
<     ldv_54558: 
< #line 2015
<     prepare_to_wait(& mdev->al_wait, & __wait, 2);
< #line 2015
<     tmp___13 = lc_try_lock(mdev->act_log);
< #line 2015
<     if (tmp___13 != 0) {
< #line 2015
<       goto ldv_54557;
<     } else {
< 
<     }
< #line 2015
<     schedule();
< #line 2015
<     goto ldv_54558;
<     ldv_54557: 
< #line 2015
<     finish_wait(& mdev->al_wait, & __wait);
<     ldv_54555: 
< #line 2016
<     drbd_al_shrink(mdev);
< #line 2017
<     err = drbd_check_al_size(mdev);
< #line 2018
<     lc_unlock(mdev->act_log);
< #line 2019
<     __wake_up(& mdev->al_wait, 3U, 1, 0);
< #line 2021
<     put_ldev(mdev);
< #line 2022
<     drbd_md_sync(mdev);
< #line 2024
<     if (err != 0) {
< #line 2025
<       retcode = 122;
< #line 2026
<       goto fail;
<     } else {
< 
<     }
<   } else {
< 
<   }
< #line 2030
<   if ((int )mdev->state.ldv_39979.conn > 9) {
< #line 2031
<     drbd_send_sync_param(mdev, & sc);
<   } else {
< 
<   }
< #line 2033
<   tmp___15 = cpumask_equal((struct cpumask  const  *)mdev->cpu_mask, (struct cpumask  const  *)new_cpu_mask);
< #line 2033
<   if (tmp___15) {
< #line 2033
<     tmp___16 = 0;
<   } else {
< #line 2033
<     tmp___16 = 1;
<   }
< #line 2033
<   if (tmp___16) {
< #line 2034
<     cpumask_copy(mdev->cpu_mask, (struct cpumask  const  *)new_cpu_mask);
< #line 2035
<     drbd_calc_cpu_mask(mdev);
< #line 2036
<     mdev->receiver.reset_cpu_mask = 1;
< #line 2037
<     mdev->asender.reset_cpu_mask = 1;
< #line 2038
<     mdev->worker.reset_cpu_mask = 1;
<   } else {
< 
<   }
< #line 2041
<   kobject_uevent(& (mdev->vdisk)->part0.__dev.kobj, KOBJ_CHANGE);
<   fail: 
< #line 2043
<   kfree((void const   *)rs_plan_s);
< #line 2044
<   free_cpumask_var(new_cpu_mask);
< #line 2045
<   crypto_free_hash(csums_tfm);
< #line 2046
<   crypto_free_hash(verify_tfm);
< #line 2047
<   reply->ret_code = retcode;
< #line 2048
<   return (0);
---
>   ldv_mutex_lock_cred_guard_mutex_of_signal_struct(ldv_func_arg1);
> #line 1953
>   mutex_lock(ldv_func_arg1);
> #line 1954
>   return;
61758,61760c68619,68620
< #line 2051 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static int drbd_nl_invalidate(struct drbd_conf *mdev , struct drbd_nl_cfg_req *nlp ,
<                               struct drbd_nl_cfg_reply *reply ) 
---
> #line 1956 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> void ldv_mutex_unlock_338(struct mutex *ldv_func_arg1 ) 
61762,61874d68621
<   int retcode ;
<   int tmp ;
<   wait_queue_t __wait ;
<   struct task_struct *tmp___0 ;
<   int tmp___1 ;
<   union drbd_state val ;
<   union drbd_state mask ;
<   enum drbd_state_rv tmp___2 ;
<   union drbd_state val___0 ;
<   union drbd_state mask___0 ;
<   union drbd_state __ns ;
<   enum drbd_state_rv tmp___3 ;
<   union drbd_state val___1 ;
<   union drbd_state mask___1 ;
< 
<   {
< #line 2059
<   drbd_suspend_io(mdev);
< #line 2060
<   tmp = drbd_test_flag(mdev, BITMAP_IO);
< #line 2060
<   if (tmp == 0) {
< #line 2060
<     goto ldv_54565;
<   } else {
< 
<   }
< #line 2060
<   tmp___0 = get_current();
< #line 2060
<   __wait.flags = 0U;
< #line 2060
<   __wait.private = (void *)tmp___0;
< #line 2060
<   __wait.func = & autoremove_wake_function;
< #line 2060
<   __wait.task_list.next = & __wait.task_list;
< #line 2060
<   __wait.task_list.prev = & __wait.task_list;
<   ldv_54568: 
< #line 2060
<   prepare_to_wait(& mdev->misc_wait, & __wait, 2);
< #line 2060
<   tmp___1 = drbd_test_flag(mdev, BITMAP_IO);
< #line 2060
<   if (tmp___1 == 0) {
< #line 2060
<     goto ldv_54567;
<   } else {
< 
<   }
< #line 2060
<   schedule();
< #line 2060
<   goto ldv_54568;
<   ldv_54567: 
< #line 2060
<   finish_wait(& mdev->misc_wait, & __wait);
<   ldv_54565: 
< #line 2061
<   drbd_flush_workqueue(mdev);
< #line 2063
<   val.i = 0U;
< #line 2063
<   val.ldv_39979.conn = 12U;
< #line 2063
<   mask.i = 0U;
< #line 2063
<   mask.ldv_39979.conn = 31U;
< #line 2063
<   tmp___2 = _drbd_request_state(mdev, mask, val, CS_ORDERED);
< #line 2063
<   retcode = (int )tmp___2;
< #line 2065
<   if (retcode <= 0 && retcode != -15) {
< #line 2066
<     val___0.i = 0U;
< #line 2066
<     val___0.ldv_39979.conn = 12U;
< #line 2066
<     mask___0.i = 0U;
< #line 2066
<     mask___0.ldv_39979.conn = 31U;
< #line 2066
<     retcode = drbd_request_state(mdev, mask___0, val___0);
<   } else {
< 
<   }
< #line 2068
<   goto ldv_54585;
<   ldv_54584: 
< #line 2069
<   spin_lock_irq(& mdev->req_lock);
< #line 2070
<   if ((int )mdev->state.ldv_39979.conn <= 9) {
< #line 2071
<     __ns.i = mdev->state.i;
< #line 2071
<     __ns.ldv_39979.disk = 4U;
< #line 2071
<     tmp___3 = _drbd_set_state(mdev, __ns, CS_VERBOSE, 0);
< #line 2071
<     retcode = (int )tmp___3;
<   } else {
< 
<   }
< #line 2072
<   spin_unlock_irq(& mdev->req_lock);
< #line 2074
<   if (retcode != -15) {
< #line 2075
<     goto ldv_54579;
<   } else {
61876,61892d68622
<   }
< #line 2077
<   val___1.i = 0U;
< #line 2077
<   val___1.ldv_39979.conn = 12U;
< #line 2077
<   mask___1.i = 0U;
< #line 2077
<   mask___1.ldv_39979.conn = 31U;
< #line 2077
<   retcode = drbd_request_state(mdev, mask___1, val___1);
<   ldv_54585: ;
< #line 2068
<   if (retcode == -15) {
< #line 2069
<     goto ldv_54584;
<   } else {
61894,61901c68624,68630
<   }
<   ldv_54579: 
< #line 2079
<   drbd_resume_io(mdev);
< #line 2081
<   reply->ret_code = retcode;
< #line 2082
<   return (0);
---
>   {
> #line 1961
>   ldv_mutex_unlock_cred_guard_mutex_of_signal_struct(ldv_func_arg1);
> #line 1963
>   mutex_unlock(ldv_func_arg1);
> #line 1964
>   return;
61904,61905c68633,68634
< #line 2085 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static int drbd_bmio_set_susp_al(struct drbd_conf *mdev ) 
---
> #line 1966 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> void ldv_mutex_lock_339(struct mutex *ldv_func_arg1 ) 
61907c68636
<   int rv ;
---
> 
61910,61915c68639,68644
< #line 2089
<   rv = drbd_bmio_set_n_write(mdev);
< #line 2090
<   drbd_suspend_al(mdev);
< #line 2091
<   return (rv);
---
> #line 1971
>   ldv_mutex_lock_lock(ldv_func_arg1);
> #line 1973
>   mutex_lock(ldv_func_arg1);
> #line 1974
>   return;
61918,61920c68647,68648
< #line 2094 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static int drbd_nl_invalidate_peer(struct drbd_conf *mdev , struct drbd_nl_cfg_req *nlp ,
<                                    struct drbd_nl_cfg_reply *reply ) 
---
> #line 1976 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> void ldv_mutex_unlock_340(struct mutex *ldv_func_arg1 ) 
61922,62020d68649
<   int retcode ;
<   int tmp ;
<   wait_queue_t __wait ;
<   struct task_struct *tmp___0 ;
<   int tmp___1 ;
<   union drbd_state val ;
<   union drbd_state mask ;
<   enum drbd_state_rv tmp___2 ;
<   union drbd_state val___0 ;
<   union drbd_state mask___0 ;
<   int tmp___3 ;
<   union drbd_state val___1 ;
<   union drbd_state mask___1 ;
< 
<   {
< #line 2102
<   drbd_suspend_io(mdev);
< #line 2103
<   tmp = drbd_test_flag(mdev, BITMAP_IO);
< #line 2103
<   if (tmp == 0) {
< #line 2103
<     goto ldv_54596;
<   } else {
< 
<   }
< #line 2103
<   tmp___0 = get_current();
< #line 2103
<   __wait.flags = 0U;
< #line 2103
<   __wait.private = (void *)tmp___0;
< #line 2103
<   __wait.func = & autoremove_wake_function;
< #line 2103
<   __wait.task_list.next = & __wait.task_list;
< #line 2103
<   __wait.task_list.prev = & __wait.task_list;
<   ldv_54599: 
< #line 2103
<   prepare_to_wait(& mdev->misc_wait, & __wait, 2);
< #line 2103
<   tmp___1 = drbd_test_flag(mdev, BITMAP_IO);
< #line 2103
<   if (tmp___1 == 0) {
< #line 2103
<     goto ldv_54598;
<   } else {
< 
<   }
< #line 2103
<   schedule();
< #line 2103
<   goto ldv_54599;
<   ldv_54598: 
< #line 2103
<   finish_wait(& mdev->misc_wait, & __wait);
<   ldv_54596: 
< #line 2104
<   drbd_flush_workqueue(mdev);
< #line 2106
<   val.i = 0U;
< #line 2106
<   val.ldv_39979.conn = 11U;
< #line 2106
<   mask.i = 0U;
< #line 2106
<   mask.ldv_39979.conn = 31U;
< #line 2106
<   tmp___2 = _drbd_request_state(mdev, mask, val, CS_ORDERED);
< #line 2106
<   retcode = (int )tmp___2;
< #line 2108
<   if (retcode <= 0) {
< #line 2109
<     if (retcode == -15 && (unsigned int )*((unsigned char *)mdev + 2276UL) == 1U) {
< #line 2112
<       val___0.i = 0U;
< #line 2112
<       val___0.ldv_39979.pdsk = 4U;
< #line 2112
<       mask___0.i = 0U;
< #line 2112
<       mask___0.ldv_39979.pdsk = 15U;
< #line 2112
<       retcode = drbd_request_state(mdev, mask___0, val___0);
< #line 2113
<       if (retcode > 0) {
< #line 2114
<         tmp___3 = drbd_bitmap_io(mdev, & drbd_bmio_set_susp_al, (char *)"set_n_write from invalidate_peer",
<                                  BM_LOCKED_SET_ALLOWED);
< #line 2114
<         if (tmp___3 != 0) {
< #line 2117
<           retcode = 118;
<         } else {
< 
<         }
<       } else {
62022,62035d68650
<       }
<     } else {
< #line 2120
<       val___1.i = 0U;
< #line 2120
<       val___1.ldv_39979.conn = 11U;
< #line 2120
<       mask___1.i = 0U;
< #line 2120
<       mask___1.ldv_39979.conn = 31U;
< #line 2120
<       retcode = drbd_request_state(mdev, mask___1, val___1);
<     }
<   } else {
62037,62043c68652,68658
<   }
< #line 2122
<   drbd_resume_io(mdev);
< #line 2124
<   reply->ret_code = retcode;
< #line 2125
<   return (0);
---
>   {
> #line 1981
>   ldv_mutex_unlock_lock(ldv_func_arg1);
> #line 1983
>   mutex_unlock(ldv_func_arg1);
> #line 1984
>   return;
62046,62048c68661,68662
< #line 2128 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static int drbd_nl_pause_sync(struct drbd_conf *mdev , struct drbd_nl_cfg_req *nlp ,
<                               struct drbd_nl_cfg_reply *reply ) 
---
> #line 1986 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> void ldv_mutex_lock_341(struct mutex *ldv_func_arg1 ) 
62050,62053d68663
<   int retcode ;
<   union drbd_state val ;
<   union drbd_state mask ;
<   int tmp ;
62055,62072d68664
<   {
< #line 2131
<   retcode = 101;
< #line 2133
<   val.i = 0U;
< #line 2133
<   val.ldv_39979.user_isp = 1U;
< #line 2133
<   mask.i = 0U;
< #line 2133
<   mask.ldv_39979.user_isp = 1U;
< #line 2133
<   tmp = drbd_request_state(mdev, mask, val);
< #line 2133
<   if (tmp == 2) {
< #line 2134
<     retcode = 134;
<   } else {
62074,62078c68666,68672
<   }
< #line 2136
<   reply->ret_code = retcode;
< #line 2137
<   return (0);
---
>   {
> #line 1991
>   ldv_mutex_lock_mutex_of_device(ldv_func_arg1);
> #line 1993
>   mutex_lock(ldv_func_arg1);
> #line 1994
>   return;
62081,62083c68675,68676
< #line 2140 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static int drbd_nl_resume_sync(struct drbd_conf *mdev , struct drbd_nl_cfg_req *nlp ,
<                                struct drbd_nl_cfg_reply *reply ) 
---
> #line 1996 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> int ldv_mutex_trylock_342(struct mutex *ldv_func_arg1 ) 
62085,62088c68678
<   int retcode ;
<   union drbd_state s ;
<   union drbd_state val ;
<   union drbd_state mask ;
---
>   ldv_func_ret_type___4 ldv_func_res ;
62089a68680
>   int tmp___0 ;
62092,62122c68683,68692
< #line 2143
<   retcode = 101;
< #line 2146
<   val.i = 0U;
< #line 2146
<   val.ldv_39979.user_isp = 0U;
< #line 2146
<   mask.i = 0U;
< #line 2146
<   mask.ldv_39979.user_isp = 1U;
< #line 2146
<   tmp = drbd_request_state(mdev, mask, val);
< #line 2146
<   if (tmp == 2) {
< #line 2147
<     s = mdev->state;
< #line 2148
<     if ((unsigned int )*((unsigned short *)(& s) + 0UL) == 320U || (unsigned int )*((unsigned short *)(& s) + 0UL) == 336U) {
< #line 2149
<       retcode = (unsigned int )*((unsigned char *)(& s) + 2UL) == 0U ? ((unsigned int )*((unsigned char *)(& s) + 2UL) != 0U ? 157 : 135) : 156;
<     } else {
< #line 2152
<       retcode = 135;
<     }
<   } else {
< 
<   }
< #line 2156
<   reply->ret_code = retcode;
< #line 2157
<   return (0);
---
> #line 2001
>   tmp = mutex_trylock(ldv_func_arg1);
> #line 2001
>   ldv_func_res = tmp;
> #line 2003
>   tmp___0 = ldv_mutex_trylock_mutex_of_device(ldv_func_arg1);
> #line 2003
>   return (tmp___0);
> #line 2005
>   return (ldv_func_res);
62125,62127c68695,68696
< #line 2160 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static int drbd_nl_suspend_io(struct drbd_conf *mdev , struct drbd_nl_cfg_req *nlp ,
<                               struct drbd_nl_cfg_reply *reply ) 
---
> #line 2008 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> void ldv_mutex_unlock_343(struct mutex *ldv_func_arg1 ) 
62129,62130c68698
<   union drbd_state val ;
<   union drbd_state mask ;
---
> 
62133,62144c68701,68706
< #line 2163
<   val.i = 0U;
< #line 2163
<   val.ldv_39979.susp = 1U;
< #line 2163
<   mask.i = 0U;
< #line 2163
<   mask.ldv_39979.susp = 1U;
< #line 2163
<   reply->ret_code = drbd_request_state(mdev, mask, val);
< #line 2165
<   return (0);
---
> #line 2013
>   ldv_mutex_unlock_mutex_of_device(ldv_func_arg1);
> #line 2015
>   mutex_unlock(ldv_func_arg1);
> #line 2016
>   return;
62147,62149c68709,68710
< #line 2168 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static int drbd_nl_resume_io(struct drbd_conf *mdev , struct drbd_nl_cfg_req *nlp ,
<                              struct drbd_nl_cfg_reply *reply ) 
---
> #line 2018 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> void ldv_mutex_lock_344(struct mutex *ldv_func_arg1 ) 
62151,62193d68711
<   int tmp ;
<   union drbd_state val ;
<   union drbd_state mask ;
< 
<   {
< #line 2171
<   tmp = drbd_test_flag(mdev, NEW_CUR_UUID);
< #line 2171
<   if (tmp != 0) {
< #line 2172
<     drbd_uuid_new_current(mdev);
< #line 2173
<     drbd_clear_flag(mdev, NEW_CUR_UUID);
<   } else {
< 
<   }
< #line 2175
<   drbd_suspend_io(mdev);
< #line 2176
<   val.i = 0U;
< #line 2176
<   val.ldv_39979.susp = 0U;
< #line 2176
<   val.ldv_39979.susp_nod = 0U;
< #line 2176
<   val.ldv_39979.susp_fen = 0U;
< #line 2176
<   mask.i = 0U;
< #line 2176
<   mask.ldv_39979.susp = 1U;
< #line 2176
<   mask.ldv_39979.susp_nod = 1U;
< #line 2176
<   mask.ldv_39979.susp_fen = 1U;
< #line 2176
<   reply->ret_code = drbd_request_state(mdev, mask, val);
< #line 2177
<   if (reply->ret_code == 1) {
< #line 2178
<     if ((int )mdev->state.ldv_39979.conn <= 9) {
< #line 2179
<       tl_clear(mdev);
<     } else {
62195,62200d68712
<     }
< #line 2180
<     if ((unsigned int )*((unsigned char *)mdev + 2277UL) == 0U || (unsigned int )*((unsigned char *)mdev + 2277UL) == 4U) {
< #line 2181
<       tl_restart(mdev, fail_frozen_disk_io);
<     } else {
62202,62209c68714,68720
<     }
<   } else {
< 
<   }
< #line 2183
<   drbd_resume_io(mdev);
< #line 2185
<   return (0);
---
>   {
> #line 2023
>   ldv_mutex_lock_mtx_of_percpu_rw_semaphore(ldv_func_arg1);
> #line 2025
>   mutex_lock(ldv_func_arg1);
> #line 2026
>   return;
62212,62214c68723,68724
< #line 2188 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static int drbd_nl_outdate(struct drbd_conf *mdev , struct drbd_nl_cfg_req *nlp ,
<                            struct drbd_nl_cfg_reply *reply ) 
---
> #line 2028 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> void ldv_mutex_unlock_345(struct mutex *ldv_func_arg1 ) 
62216,62217c68726
<   union drbd_state val ;
<   union drbd_state mask ;
---
> 
62220,62231c68729,68734
< #line 2191
<   val.i = 0U;
< #line 2191
<   val.ldv_39979.disk = 5U;
< #line 2191
<   mask.i = 0U;
< #line 2191
<   mask.ldv_39979.disk = 15U;
< #line 2191
<   reply->ret_code = drbd_request_state(mdev, mask, val);
< #line 2192
<   return (0);
---
> #line 2033
>   ldv_mutex_unlock_mtx_of_percpu_rw_semaphore(ldv_func_arg1);
> #line 2035
>   mutex_unlock(ldv_func_arg1);
> #line 2036
>   return;
62234,62236c68737,68738
< #line 2195 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static int drbd_nl_get_config(struct drbd_conf *mdev , struct drbd_nl_cfg_req *nlp ,
<                               struct drbd_nl_cfg_reply *reply ) 
---
> #line 2038 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> void ldv_mutex_lock_346(struct mutex *ldv_func_arg1 ) 
62238,62255d68739
<   unsigned short *tl ;
<   int tmp ;
<   int tmp___0 ;
<   void *__gu_p ;
<   unsigned short *tmp___1 ;
< 
<   {
< #line 2200
<   tl = (unsigned short *)(& reply->tag_list);
< #line 2202
<   tmp = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 2202
<   if (tmp != 0) {
< #line 2203
<     tl = disk_conf_to_tags(mdev, & (mdev->ldev)->dc, tl);
< #line 2204
<     put_ldev(mdev);
<   } else {
62257,62266d68740
<   }
< #line 2207
<   tmp___0 = get_net_conf(mdev);
< #line 2207
<   if (tmp___0 != 0) {
< #line 2208
<     tl = net_conf_to_tags(mdev, mdev->net_conf, tl);
< #line 2209
<     put_net_conf(mdev);
<   } else {
62268,62307c68742,68748
<   }
< #line 2211
<   tl = syncer_conf_to_tags(mdev, & mdev->sync_conf, tl);
< #line 2213
<   tmp___1 = tl;
< #line 2213
<   tl = tl + 1;
< #line 2213
<   __gu_p = (void *)tmp___1;
< #line 2213
<   switch (2UL) {
<   case 1UL: 
< #line 2213
<   *((u8 *)__gu_p) = 0U;
< #line 2213
<   goto ldv_54668;
<   case 2UL: 
< #line 2213
<   put_unaligned_le16(0, __gu_p);
< #line 2213
<   goto ldv_54668;
<   case 4UL: 
< #line 2213
<   put_unaligned_le32(0U, __gu_p);
< #line 2213
<   goto ldv_54668;
<   case 8UL: 
< #line 2213
<   put_unaligned_le64(0ULL, __gu_p);
< #line 2213
<   goto ldv_54668;
<   default: 
< #line 2213
<   __bad_unaligned_access_size();
< #line 2213
<   goto ldv_54668;
<   }
<   ldv_54668: ;
< #line 2215
<   return ((int )((unsigned int )((long )tl) - (unsigned int )((long )(& reply->tag_list))));
---
>   {
> #line 2043
>   ldv_mutex_lock_mtx_of_percpu_rw_semaphore(ldv_func_arg1);
> #line 2045
>   mutex_lock(ldv_func_arg1);
> #line 2046
>   return;
62310,62312c68751,68752
< #line 2218 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static int drbd_nl_get_state(struct drbd_conf *mdev , struct drbd_nl_cfg_req *nlp ,
<                              struct drbd_nl_cfg_reply *reply ) 
---
> #line 2048 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> void ldv_mutex_unlock_347(struct mutex *ldv_func_arg1 ) 
62314,62341d68753
<   unsigned short *tl ;
<   union drbd_state s ;
<   unsigned long rs_left ;
<   unsigned int res ;
<   int tmp ;
<   void *__gu_p ;
<   unsigned short *tmp___0 ;
< 
<   {
< #line 2221
<   tl = (unsigned short *)(& reply->tag_list);
< #line 2222
<   s = mdev->state;
< #line 2226
<   tl = get_state_to_tags(mdev, (struct get_state *)(& s), tl);
< #line 2229
<   if ((int )s.ldv_39979.conn > 15 && (int )s.ldv_39979.conn <= 21) {
< #line 2230
<     tmp = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 2230
<     if (tmp != 0) {
< #line 2231
<       drbd_get_syncer_progress(mdev, & rs_left, & res);
< #line 2232
<       tl = tl_add_int(tl, T_sync_progress, (void const   *)(& res));
< #line 2233
<       put_ldev(mdev);
<     } else {
62343,62344d68754
<     }
<   } else {
62346,62383c68756,68762
<   }
< #line 2236
<   tmp___0 = tl;
< #line 2236
<   tl = tl + 1;
< #line 2236
<   __gu_p = (void *)tmp___0;
< #line 2236
<   switch (2UL) {
<   case 1UL: 
< #line 2236
<   *((u8 *)__gu_p) = 0U;
< #line 2236
<   goto ldv_54684;
<   case 2UL: 
< #line 2236
<   put_unaligned_le16(0, __gu_p);
< #line 2236
<   goto ldv_54684;
<   case 4UL: 
< #line 2236
<   put_unaligned_le32(0U, __gu_p);
< #line 2236
<   goto ldv_54684;
<   case 8UL: 
< #line 2236
<   put_unaligned_le64(0ULL, __gu_p);
< #line 2236
<   goto ldv_54684;
<   default: 
< #line 2236
<   __bad_unaligned_access_size();
< #line 2236
<   goto ldv_54684;
<   }
<   ldv_54684: ;
< #line 2238
<   return ((int )((unsigned int )((long )tl) - (unsigned int )((long )(& reply->tag_list))));
---
>   {
> #line 2053
>   ldv_mutex_unlock_mtx_of_percpu_rw_semaphore(ldv_func_arg1);
> #line 2055
>   mutex_unlock(ldv_func_arg1);
> #line 2056
>   return;
62386,62388c68765,68766
< #line 2241 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static int drbd_nl_get_uuids(struct drbd_conf *mdev , struct drbd_nl_cfg_req *nlp ,
<                              struct drbd_nl_cfg_reply *reply ) 
---
> #line 2058 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> void ldv_mutex_lock_348(struct mutex *ldv_func_arg1 ) 
62390,62395d68767
<   unsigned short *tl ;
<   unsigned long flags ;
<   raw_spinlock_t *tmp ;
<   int tmp___0 ;
<   void *__gu_p ;
<   unsigned short *tmp___1 ;
62397,62416d68768
<   {
< #line 2246
<   tl = (unsigned short *)(& reply->tag_list);
< #line 2248
<   tmp___0 = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 2248
<   if (tmp___0 != 0) {
< #line 2250
<     tmp = spinlock_check(& (mdev->ldev)->md.uuid_lock);
< #line 2250
<     flags = _raw_spin_lock_irqsave(tmp);
< #line 2251
<     tl = tl_add_blob(tl, T_uuids, (void const   *)(& (mdev->ldev)->md.uuid), 32);
< #line 2252
<     tl = tl_add_int(tl, T_uuids_flags, (void const   *)(& (mdev->ldev)->md.flags));
< #line 2253
<     spin_unlock_irqrestore(& (mdev->ldev)->md.uuid_lock, flags);
< #line 2254
<     put_ldev(mdev);
<   } else {
62418,62455c68770,68776
<   }
< #line 2256
<   tmp___1 = tl;
< #line 2256
<   tl = tl + 1;
< #line 2256
<   __gu_p = (void *)tmp___1;
< #line 2256
<   switch (2UL) {
<   case 1UL: 
< #line 2256
<   *((u8 *)__gu_p) = 0U;
< #line 2256
<   goto ldv_54701;
<   case 2UL: 
< #line 2256
<   put_unaligned_le16(0, __gu_p);
< #line 2256
<   goto ldv_54701;
<   case 4UL: 
< #line 2256
<   put_unaligned_le32(0U, __gu_p);
< #line 2256
<   goto ldv_54701;
<   case 8UL: 
< #line 2256
<   put_unaligned_le64(0ULL, __gu_p);
< #line 2256
<   goto ldv_54701;
<   default: 
< #line 2256
<   __bad_unaligned_access_size();
< #line 2256
<   goto ldv_54701;
<   }
<   ldv_54701: ;
< #line 2258
<   return ((int )((unsigned int )((long )tl) - (unsigned int )((long )(& reply->tag_list))));
---
>   {
> #line 2063
>   ldv_mutex_lock_state_mutex_of_drbd_conf(ldv_func_arg1);
> #line 2065
>   mutex_lock(ldv_func_arg1);
> #line 2066
>   return;
62458,62460c68779,68780
< #line 2267 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static int drbd_nl_get_timeout_flag(struct drbd_conf *mdev , struct drbd_nl_cfg_req *nlp ,
<                                     struct drbd_nl_cfg_reply *reply ) 
---
> #line 2068 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> void ldv_mutex_unlock_349(struct mutex *ldv_func_arg1 ) 
62462,62466c68782
<   unsigned short *tl ;
<   char rv ;
<   int tmp ;
<   void *__gu_p ;
<   unsigned short *tmp___0 ;
---
> 
62469,62519c68785,68790
< #line 2273
<   tl = (unsigned short *)(& reply->tag_list);
< #line 2275
<   if (*((unsigned int *)mdev + 569UL) != 40960U) {
< #line 2275
<     tmp = drbd_test_flag(mdev, USE_DEGR_WFC_T);
< #line 2275
<     rv = tmp != 0;
<   } else {
< #line 2275
<     rv = 2;
<   }
< #line 2278
<   tl = tl_add_blob(tl, T_use_degraded, (void const   *)(& rv), 1);
< #line 2279
<   tmp___0 = tl;
< #line 2279
<   tl = tl + 1;
< #line 2279
<   __gu_p = (void *)tmp___0;
< #line 2279
<   switch (2UL) {
<   case 1UL: 
< #line 2279
<   *((u8 *)__gu_p) = 0U;
< #line 2279
<   goto ldv_54715;
<   case 2UL: 
< #line 2279
<   put_unaligned_le16(0, __gu_p);
< #line 2279
<   goto ldv_54715;
<   case 4UL: 
< #line 2279
<   put_unaligned_le32(0U, __gu_p);
< #line 2279
<   goto ldv_54715;
<   case 8UL: 
< #line 2279
<   put_unaligned_le64(0ULL, __gu_p);
< #line 2279
<   goto ldv_54715;
<   default: 
< #line 2279
<   __bad_unaligned_access_size();
< #line 2279
<   goto ldv_54715;
<   }
<   ldv_54715: ;
< #line 2281
<   return ((int )((unsigned int )((long )tl) - (unsigned int )((long )(& reply->tag_list))));
---
> #line 2073
>   ldv_mutex_unlock_state_mutex_of_drbd_conf(ldv_func_arg1);
> #line 2075
>   mutex_unlock(ldv_func_arg1);
> #line 2076
>   return;
62522,62524c68793,68794
< #line 2284 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static int drbd_nl_start_ov(struct drbd_conf *mdev , struct drbd_nl_cfg_req *nlp ,
<                             struct drbd_nl_cfg_reply *reply ) 
---
> #line 2078 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> void ldv_mutex_lock_350(struct mutex *ldv_func_arg1 ) 
62526,62559d68795
<   struct start_ov args ;
<   int tmp ;
<   int tmp___0 ;
<   wait_queue_t __wait ;
<   struct task_struct *tmp___1 ;
<   int tmp___2 ;
<   union drbd_state val ;
<   union drbd_state mask ;
< 
<   {
< #line 2288
<   args.start_sector = (unsigned long long )mdev->ov_start_sector;
< #line 2288
<   args.stop_sector = 0xffffffffffffffffULL;
< #line 2293
<   tmp = start_ov_from_tags(mdev, (unsigned short *)(& nlp->tag_list), & args);
< #line 2293
<   if (tmp == 0) {
< #line 2294
<     reply->ret_code = 126;
< #line 2295
<     return (0);
<   } else {
< 
<   }
< #line 2300
<   drbd_suspend_io(mdev);
< #line 2301
<   tmp___0 = drbd_test_flag(mdev, BITMAP_IO);
< #line 2301
<   if (tmp___0 == 0) {
< #line 2301
<     goto ldv_54726;
<   } else {
62561,62583d68796
<   }
< #line 2301
<   tmp___1 = get_current();
< #line 2301
<   __wait.flags = 0U;
< #line 2301
<   __wait.private = (void *)tmp___1;
< #line 2301
<   __wait.func = & autoremove_wake_function;
< #line 2301
<   __wait.task_list.next = & __wait.task_list;
< #line 2301
<   __wait.task_list.prev = & __wait.task_list;
<   ldv_54729: 
< #line 2301
<   prepare_to_wait(& mdev->misc_wait, & __wait, 2);
< #line 2301
<   tmp___2 = drbd_test_flag(mdev, BITMAP_IO);
< #line 2301
<   if (tmp___2 == 0) {
< #line 2301
<     goto ldv_54728;
<   } else {
62585,62611c68798,68804
<   }
< #line 2301
<   schedule();
< #line 2301
<   goto ldv_54729;
<   ldv_54728: 
< #line 2301
<   finish_wait(& mdev->misc_wait, & __wait);
<   ldv_54726: 
< #line 2304
<   mdev->ov_start_sector = (sector_t )args.start_sector & 0xfffffffffffffff8UL;
< #line 2305
<   mdev->ov_stop_sector = (sector_t )args.stop_sector;
< #line 2306
<   val.i = 0U;
< #line 2306
<   val.ldv_39979.conn = 18U;
< #line 2306
<   mask.i = 0U;
< #line 2306
<   mask.ldv_39979.conn = 31U;
< #line 2306
<   reply->ret_code = drbd_request_state(mdev, mask, val);
< #line 2307
<   drbd_resume_io(mdev);
< #line 2308
<   return (0);
---
>   {
> #line 2083
>   ldv_mutex_lock_conf_update_of_drbd_tconn(ldv_func_arg1);
> #line 2085
>   mutex_lock(ldv_func_arg1);
> #line 2086
>   return;
62614,62616c68807,68808
< #line 2312 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static int drbd_nl_new_c_uuid(struct drbd_conf *mdev , struct drbd_nl_cfg_req *nlp ,
<                               struct drbd_nl_cfg_reply *reply ) 
---
> #line 2088 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> void ldv_mutex_unlock_351(struct mutex *ldv_func_arg1 ) 
62618,62712d68809
<   int retcode ;
<   int skip_initial_sync ;
<   int err ;
<   struct new_c_uuid args ;
<   int tmp ;
<   int tmp___0 ;
<   union drbd_state __ns ;
< 
<   {
< #line 2315
<   retcode = 101;
< #line 2316
<   skip_initial_sync = 0;
< #line 2321
<   memset((void *)(& args), 0, 4UL);
< #line 2322
<   tmp = new_c_uuid_from_tags(mdev, (unsigned short *)(& nlp->tag_list), & args);
< #line 2322
<   if (tmp == 0) {
< #line 2323
<     reply->ret_code = 126;
< #line 2324
<     return (0);
<   } else {
< 
<   }
< #line 2327
<   ldv_mutex_lock_303(& mdev->state_mutex);
< #line 2329
<   tmp___0 = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 2329
<   if (tmp___0 == 0) {
< #line 2330
<     retcode = 138;
< #line 2331
<     goto out;
<   } else {
< 
<   }
< #line 2335
<   if ((((unsigned int )*((unsigned short *)mdev + 1138UL) == 160U && mdev->agreed_pro_version > 89) && (mdev->ldev)->md.uuid[0] == 4ULL) && (unsigned int )*((unsigned char *)(& args) + 0UL) != 0U) {
< #line 2337
<     _dev_info((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Preparing to skip initial sync\n");
< #line 2338
<     skip_initial_sync = 1;
<   } else
< #line 2339
<   if ((unsigned int )*((unsigned short *)mdev + 1138UL) != 0U) {
< #line 2340
<     retcode = 151;
< #line 2341
<     goto out_dec;
<   } else {
< 
<   }
< #line 2344
<   drbd_uuid_set(mdev, 1, 0ULL);
< #line 2345
<   drbd_uuid_new_current(mdev);
< #line 2347
<   if ((unsigned int )*((unsigned char *)(& args) + 0UL) != 0U) {
< #line 2348
<     err = drbd_bitmap_io(mdev, & drbd_bmio_clear_n_write, (char *)"clear_n_write from new_c_uuid",
<                          BM_LOCKED_MASK);
< #line 2350
<     if (err != 0) {
< #line 2351
<       dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "Writing bitmap failed with %d\n",
<               err);
< #line 2352
<       retcode = 118;
<     } else {
< 
<     }
< #line 2354
<     if (skip_initial_sync != 0) {
< #line 2355
<       drbd_send_uuids_skip_initial_sync(mdev);
< #line 2356
<       _drbd_uuid_set(mdev, 1, 0ULL);
< #line 2357
<       drbd_print_uuids(mdev, "cleared bitmap UUID");
< #line 2358
<       spin_lock_irq(& mdev->req_lock);
< #line 2359
<       __ns.i = mdev->state.i;
< #line 2359
<       __ns.ldv_39979.disk = 8U;
< #line 2359
<       __ns.ldv_39979.pdsk = 8U;
< #line 2359
<       _drbd_set_state(mdev, __ns, CS_VERBOSE, 0);
< #line 2361
<       spin_unlock_irq(& mdev->req_lock);
<     } else {
62714,62715d68810
<     }
<   } else {
62717,62729c68812,68818
<   }
< #line 2365
<   drbd_md_sync(mdev);
<   out_dec: 
< #line 2367
<   put_ldev(mdev);
<   out: 
< #line 2369
<   ldv_mutex_unlock_304(& mdev->state_mutex);
< #line 2371
<   reply->ret_code = retcode;
< #line 2372
<   return (0);
---
>   {
> #line 2093
>   ldv_mutex_unlock_conf_update_of_drbd_tconn(ldv_func_arg1);
> #line 2095
>   mutex_unlock(ldv_func_arg1);
> #line 2096
>   return;
62732,62867c68821,68823
< #line 2382 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static struct cn_handler_struct cnd_table[27U]  = 
< #line 2382
<   {      {0, 0}, 
<         {& drbd_nl_primary, 0}, 
<         {& drbd_nl_secondary, 0}, 
<         {& drbd_nl_disk_conf, 0}, 
<         {& drbd_nl_detach, 0}, 
<         {& drbd_nl_net_conf, 0}, 
<         {& drbd_nl_disconnect, 0}, 
<         {& drbd_nl_resize, 0}, 
<         {& drbd_nl_syncer_conf, 0}, 
<         {& drbd_nl_invalidate, 0}, 
<         {& drbd_nl_invalidate_peer, 0}, 
<         {& drbd_nl_pause_sync, 0}, 
<         {& drbd_nl_resume_sync, 0}, 
<         {& drbd_nl_suspend_io, 0}, 
<         {& drbd_nl_resume_io, 0}, 
<         {& drbd_nl_outdate, 0}, 
<         {& drbd_nl_get_config, 1320}, 
<         {& drbd_nl_get_state, 16}, 
<         {& drbd_nl_get_uuids, 48}, 
<         {& drbd_nl_get_timeout_flag, 8}, 
<         {0, 0}, 
<         {0, 0}, 
<         {0, 0}, 
<         {0, 0}, 
<         {0, 0}, 
<         {& drbd_nl_start_ov, 0}, 
<         {& drbd_nl_new_c_uuid, 0}};
< #line 2413 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static void drbd_connector_callback(struct cn_msg *req , struct netlink_skb_parms *nsp ) 
< { 
<   struct drbd_nl_cfg_req *nlp ;
<   struct cn_handler_struct *cm ;
<   struct cn_msg *cn_reply ;
<   struct drbd_nl_cfg_reply *reply ;
<   struct drbd_conf *mdev ;
<   int retcode ;
<   int rr ;
<   int reply_size ;
<   bool tmp ;
<   int tmp___0 ;
<   bool tmp___1 ;
<   int tmp___2 ;
<   void *tmp___3 ;
< 
<   {
< #line 2415
<   nlp = (struct drbd_nl_cfg_req *)(& req->data);
< #line 2421
<   reply_size = 34;
< #line 2425
<   tmp = try_module_get(& __this_module);
< #line 2425
<   if (tmp) {
< #line 2425
<     tmp___0 = 0;
<   } else {
< #line 2425
<     tmp___0 = 1;
<   }
< #line 2425
<   if (tmp___0) {
< #line 2426
<     printk("\vdrbd: try_module_get() failed!\n");
< #line 2427
<     return;
<   } else {
< 
<   }
< #line 2430
<   tmp___1 = capable(21);
< #line 2430
<   if (tmp___1) {
< #line 2430
<     tmp___2 = 0;
<   } else {
< #line 2430
<     tmp___2 = 1;
<   }
< #line 2430
<   if (tmp___2) {
< #line 2431
<     retcode = 152;
< #line 2432
<     goto fail;
<   } else {
< 
<   }
< #line 2435
<   mdev = ensure_mdev((int )nlp->drbd_minor, nlp->flags & 1);
< #line 2437
<   if ((unsigned long )mdev == (unsigned long )((struct drbd_conf *)0)) {
< #line 2438
<     retcode = 127;
< #line 2439
<     goto fail;
<   } else {
< 
<   }
< #line 2442
<   if (nlp->packet_type > 27 || nlp->packet_type == 27) {
< #line 2444
<     retcode = 137;
< #line 2445
<     goto fail;
<   } else {
< 
<   }
< #line 2448
<   cm = (struct cn_handler_struct *)(& cnd_table) + (unsigned long )nlp->packet_type;
< #line 2451
<   if ((unsigned long )cm->function == (unsigned long )((int (*)(struct drbd_conf * ,
<                                                                 struct drbd_nl_cfg_req * ,
<                                                                 struct drbd_nl_cfg_reply * ))0)) {
< #line 2452
<     retcode = 137;
< #line 2453
<     goto fail;
<   } else {
< 
<   }
< #line 2456
<   reply_size = cm->reply_body_size + reply_size;
< #line 2459
<   tmp___3 = kzalloc((size_t )reply_size, 208U);
< #line 2459
<   cn_reply = (struct cn_msg *)tmp___3;
< #line 2460
<   if ((unsigned long )cn_reply == (unsigned long )((struct cn_msg *)0)) {
< #line 2461
<     retcode = 122;
< #line 2462
<     goto fail;
<   } else {
---
> #line 2098 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> void ldv_mutex_lock_352(struct mutex *ldv_func_arg1 ) 
> { 
62869,62896d68824
<   }
< #line 2464
<   reply = (struct drbd_nl_cfg_reply *)(& cn_reply->data);
< #line 2466
<   reply->packet_type = cm->reply_body_size != 0 ? nlp->packet_type : 27;
< #line 2468
<   reply->minor = nlp->drbd_minor;
< #line 2469
<   reply->ret_code = 101;
< #line 2472
<   rr = (*(cm->function))(mdev, nlp, reply);
< #line 2474
<   cn_reply->id = req->id;
< #line 2475
<   cn_reply->seq = req->seq;
< #line 2476
<   cn_reply->ack = req->ack + 1U;
< #line 2477
<   cn_reply->len = (unsigned int )((__u16 )rr) + 12U;
< #line 2478
<   cn_reply->flags = 0U;
< #line 2480
<   rr = cn_netlink_send(cn_reply, 8U, 208U);
< #line 2481
<   if (rr != 0 && rr != -3) {
< #line 2482
<     printk("\016drbd: cn_netlink_send()=%d\n", rr);
<   } else {
62898,62910c68826,68831
<   }
< #line 2484
<   kfree((void const   *)cn_reply);
< #line 2485
<   module_put(& __this_module);
< #line 2486
<   return;
<   fail: 
< #line 2488
<   drbd_nl_send_reply(req, retcode);
< #line 2489
<   module_put(& __this_module);
< #line 2490
---
>   {
> #line 2103
>   ldv_mutex_lock_cstate_mutex_of_drbd_tconn(ldv_func_arg1);
> #line 2105
>   mutex_lock(ldv_func_arg1);
> #line 2106
62914,62926c68835,68837
< #line 2492 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static atomic_t drbd_nl_seq  =    {2};
< #line 2495 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static unsigned short *__tl_add_blob(unsigned short *tl , enum drbd_tags tag , void const   *data ,
<                                      unsigned short len , int nul_terminated ) 
< { 
<   unsigned short l ;
<   void *__gu_p ;
<   unsigned short *tmp ;
<   void *__gu_p___0 ;
<   unsigned short *tmp___0 ;
<   size_t __len ;
<   void *__ret ;
---
> #line 2108 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_state.c.prepared"
> void ldv_mutex_unlock_353(struct mutex *ldv_func_arg1 ) 
> { 
62928,63013d68838
<   {
< #line 2498
<   l = (unsigned short )tag_descriptions[(unsigned int )tag & 8191U].max_len;
< #line 2499
<   len = (int )len < (int )l ? len : l;
< #line 2500
<   tmp = tl;
< #line 2500
<   tl = tl + 1;
< #line 2500
<   __gu_p = (void *)tmp;
< #line 2500
<   switch (2UL) {
<   case 1UL: 
< #line 2500
<   *((u8 *)__gu_p) = (unsigned char )tag;
< #line 2500
<   goto ldv_54778;
<   case 2UL: 
< #line 2500
<   put_unaligned_le16((int )((unsigned short )tag), __gu_p);
< #line 2500
<   goto ldv_54778;
<   case 4UL: 
< #line 2500
<   put_unaligned_le32((unsigned int )tag, __gu_p);
< #line 2500
<   goto ldv_54778;
<   case 8UL: 
< #line 2500
<   put_unaligned_le64((unsigned long long )tag, __gu_p);
< #line 2500
<   goto ldv_54778;
<   default: 
< #line 2500
<   __bad_unaligned_access_size();
< #line 2500
<   goto ldv_54778;
<   }
<   ldv_54778: 
< #line 2501
<   tmp___0 = tl;
< #line 2501
<   tl = tl + 1;
< #line 2501
<   __gu_p___0 = (void *)tmp___0;
< #line 2501
<   switch (2UL) {
<   case 1UL: 
< #line 2501
<   *((u8 *)__gu_p___0) = (unsigned char )len;
< #line 2501
<   goto ldv_54785;
<   case 2UL: 
< #line 2501
<   put_unaligned_le16((int )len, __gu_p___0);
< #line 2501
<   goto ldv_54785;
<   case 4UL: 
< #line 2501
<   put_unaligned_le32((unsigned int )len, __gu_p___0);
< #line 2501
<   goto ldv_54785;
<   case 8UL: 
< #line 2501
<   put_unaligned_le64((unsigned long long )len, __gu_p___0);
< #line 2501
<   goto ldv_54785;
<   default: 
< #line 2501
<   __bad_unaligned_access_size();
< #line 2501
<   goto ldv_54785;
<   }
<   ldv_54785: 
< #line 2502
<   __len = (size_t )len;
< #line 2502
<   __ret = __builtin_memcpy((void *)tl, data, __len);
< #line 2503
<   tl = tl + (unsigned long )len;
< #line 2504
<   if (nul_terminated != 0) {
< #line 2505
<     *((char *)tl + 0xffffffffffffffffUL) = 0;
<   } else {
63015,63017c68840,68846
<   }
< #line 2506
<   return (tl);
---
>   {
> #line 2113
>   ldv_mutex_unlock_cstate_mutex_of_drbd_tconn(ldv_func_arg1);
> #line 2115
>   mutex_unlock(ldv_func_arg1);
> #line 2116
>   return;
63020,63022c68849,68874
< #line 2510 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static unsigned short *tl_add_blob(unsigned short *tl , enum drbd_tags tag , void const   *data ,
<                                    int len ) 
---
> #line 171 "include/linux/mutex.h"
> int ldv_mutex_trylock_376(struct mutex *ldv_func_arg1 ) ;
> #line 176
> void ldv_mutex_unlock_372(struct mutex *ldv_func_arg1 ) ;
> #line 180
> void ldv_mutex_unlock_374(struct mutex *ldv_func_arg1 ) ;
> #line 184
> void ldv_mutex_unlock_377(struct mutex *ldv_func_arg1 ) ;
> #line 188
> void ldv_mutex_unlock_379(struct mutex *ldv_func_arg1 ) ;
> #line 192
> void ldv_mutex_unlock_381(struct mutex *ldv_func_arg1 ) ;
> #line 10 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nla.c.prepared"
> void ldv_mutex_lock_371(struct mutex *ldv_func_arg1 ) ;
> #line 14
> void ldv_mutex_lock_373(struct mutex *ldv_func_arg1 ) ;
> #line 18
> void ldv_mutex_lock_375(struct mutex *ldv_func_arg1 ) ;
> #line 22
> void ldv_mutex_lock_378(struct mutex *ldv_func_arg1 ) ;
> #line 26
> void ldv_mutex_lock_380(struct mutex *ldv_func_arg1 ) ;
> #line 238 "include/net/netlink.h"
> extern int nla_parse(struct nlattr ** , int  , struct nlattr  const  * , int  , struct nla_policy  const  * ) ;
> #line 672 "include/net/netlink.h"
> __inline static int nla_type(struct nlattr  const  *nla ) 
63024c68876
<   unsigned short *tmp ;
---
> 
63027,63030c68879,68880
< #line 2512
<   tmp = __tl_add_blob(tl, tag, data, (int )((unsigned short )len), 0);
< #line 2512
<   return (tmp);
---
> #line 674
>   return ((int )nla->nla_type & -49153);
63033,63034c68883,68884
< #line 2516 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static unsigned short *tl_add_str(unsigned short *tl , enum drbd_tags tag , char const   *str ) 
---
> #line 700 "include/net/netlink.h"
> __inline static int nla_ok(struct nlattr  const  *nla , int remaining ) 
63036,63037c68886
<   size_t tmp ;
<   unsigned short *tmp___0 ;
---
> 
63040,63046c68889,68890
< #line 2518
<   tmp = strlen(str);
< #line 2518
<   tmp___0 = __tl_add_blob(tl, tag, (void const   *)str, (int )((unsigned int )((unsigned short )tmp) + 1U),
<                           0);
< #line 2518
<   return (tmp___0);
---
> #line 702
>   return ((remaining > 3 && (unsigned int )((unsigned short )nla->nla_len) > 3U) && (int )nla->nla_len <= remaining);
63049,63050c68893,68894
< #line 2522 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< static unsigned short *tl_add_int(unsigned short *tl , enum drbd_tags tag , void const   *val ) 
---
> #line 715 "include/net/netlink.h"
> __inline static struct nlattr *nla_next(struct nlattr  const  *nla , int *remaining ) 
63052,63059c68896
<   void *__gu_p ;
<   unsigned short *tmp ;
<   void *__gu_p___0 ;
<   unsigned short *tmp___0 ;
<   void *__gu_p___1 ;
<   void *__gu_p___2 ;
<   unsigned short *tmp___1 ;
<   void *__gu_p___3 ;
---
>   int totlen ;
63062,63245c68899,68904
< #line 2524
<   tmp = tl;
< #line 2524
<   tl = tl + 1;
< #line 2524
<   __gu_p = (void *)tmp;
< #line 2524
<   switch (2UL) {
<   case 1UL: 
< #line 2524
<   *((u8 *)__gu_p) = (unsigned char )tag;
< #line 2524
<   goto ldv_54811;
<   case 2UL: 
< #line 2524
<   put_unaligned_le16((int )((unsigned short )tag), __gu_p);
< #line 2524
<   goto ldv_54811;
<   case 4UL: 
< #line 2524
<   put_unaligned_le32((unsigned int )tag, __gu_p);
< #line 2524
<   goto ldv_54811;
<   case 8UL: 
< #line 2524
<   put_unaligned_le64((unsigned long long )tag, __gu_p);
< #line 2524
<   goto ldv_54811;
<   default: 
< #line 2524
<   __bad_unaligned_access_size();
< #line 2524
<   goto ldv_54811;
<   }
<   ldv_54811: ;
< #line 2525
<   switch ((unsigned int )tag & 49152U) {
<   case 0U: 
< #line 2527
<   tmp___0 = tl;
< #line 2527
<   tl = tl + 1;
< #line 2527
<   __gu_p___0 = (void *)tmp___0;
< #line 2527
<   switch (2UL) {
<   case 1UL: 
< #line 2527
<   *((u8 *)__gu_p___0) = 4U;
< #line 2527
<   goto ldv_54819;
<   case 2UL: 
< #line 2527
<   put_unaligned_le16(4, __gu_p___0);
< #line 2527
<   goto ldv_54819;
<   case 4UL: 
< #line 2527
<   put_unaligned_le32(4U, __gu_p___0);
< #line 2527
<   goto ldv_54819;
<   case 8UL: 
< #line 2527
<   put_unaligned_le64(4ULL, __gu_p___0);
< #line 2527
<   goto ldv_54819;
<   default: 
< #line 2527
<   __bad_unaligned_access_size();
< #line 2527
<   goto ldv_54819;
<   }
<   ldv_54819: 
< #line 2528
<   __gu_p___1 = (void *)tl;
< #line 2528
<   switch (4UL) {
<   case 1UL: 
< #line 2528
<   *((u8 *)__gu_p___1) = (unsigned char )*((int *)val);
< #line 2528
<   goto ldv_54826;
<   case 2UL: 
< #line 2528
<   put_unaligned_le16((int )((unsigned short )*((int *)val)), __gu_p___1);
< #line 2528
<   goto ldv_54826;
<   case 4UL: 
< #line 2528
<   put_unaligned_le32((unsigned int )*((int *)val), __gu_p___1);
< #line 2528
<   goto ldv_54826;
<   case 8UL: 
< #line 2528
<   put_unaligned_le64((unsigned long long )*((int *)val), __gu_p___1);
< #line 2528
<   goto ldv_54826;
<   default: 
< #line 2528
<   __bad_unaligned_access_size();
< #line 2528
<   goto ldv_54826;
<   }
<   ldv_54826: 
< #line 2529
<   tl = tl + 4U;
< #line 2530
<   goto ldv_54831;
<   case 16384U: 
< #line 2532
<   tmp___1 = tl;
< #line 2532
<   tl = tl + 1;
< #line 2532
<   __gu_p___2 = (void *)tmp___1;
< #line 2532
<   switch (2UL) {
<   case 1UL: 
< #line 2532
<   *((u8 *)__gu_p___2) = 8U;
< #line 2532
<   goto ldv_54835;
<   case 2UL: 
< #line 2532
<   put_unaligned_le16(8, __gu_p___2);
< #line 2532
<   goto ldv_54835;
<   case 4UL: 
< #line 2532
<   put_unaligned_le32(8U, __gu_p___2);
< #line 2532
<   goto ldv_54835;
<   case 8UL: 
< #line 2532
<   put_unaligned_le64(8ULL, __gu_p___2);
< #line 2532
<   goto ldv_54835;
<   default: 
< #line 2532
<   __bad_unaligned_access_size();
< #line 2532
<   goto ldv_54835;
<   }
<   ldv_54835: 
< #line 2533
<   __gu_p___3 = (void *)tl;
< #line 2533
<   switch (8UL) {
<   case 1UL: 
< #line 2533
<   *((u8 *)__gu_p___3) = (unsigned char )*((u64 *)val);
< #line 2533
<   goto ldv_54842;
<   case 2UL: 
< #line 2533
<   put_unaligned_le16((int )((unsigned short )*((u64 *)val)), __gu_p___3);
< #line 2533
<   goto ldv_54842;
<   case 4UL: 
< #line 2533
<   put_unaligned_le32((unsigned int )*((u64 *)val), __gu_p___3);
< #line 2533
<   goto ldv_54842;
<   case 8UL: 
< #line 2533
<   put_unaligned_le64(*((u64 *)val), __gu_p___3);
< #line 2533
<   goto ldv_54842;
<   default: 
< #line 2533
<   __bad_unaligned_access_size();
< #line 2533
<   goto ldv_54842;
<   }
<   ldv_54842: 
< #line 2534
<   tl = tl + 8U;
< #line 2535
<   goto ldv_54831;
<   default: ;
<   }
<   ldv_54831: ;
< #line 2540
<   return (tl);
---
> #line 717
>   totlen = ((int )nla->nla_len + 3) & -4;
> #line 719
>   *remaining = *remaining - totlen;
> #line 720
>   return ((struct nlattr *)nla + (unsigned long )totlen);
63248,63249c68907,68908
< #line 2543 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void drbd_bcast_state(struct drbd_conf *mdev , union drbd_state state ) 
---
> #line 731 "include/net/netlink.h"
> __inline static struct nlattr *nla_find_nested(struct nlattr  const  *nla , int attrtype ) 
63251,63257c68910,68912
<   char buffer[42U] ;
<   struct cn_msg *cn_reply ;
<   struct drbd_nl_cfg_reply *reply ;
<   unsigned short *tl ;
<   void *__gu_p ;
<   unsigned short *tmp ;
<   int tmp___0 ;
---
>   int tmp ;
>   void *tmp___0 ;
>   struct nlattr *tmp___1 ;
63260,63326c68915,68922
< #line 2549
<   cn_reply = (struct cn_msg *)(& buffer);
< #line 2550
<   reply = (struct drbd_nl_cfg_reply *)(& cn_reply->data);
< #line 2552
<   tl = (unsigned short *)(& reply->tag_list);
< #line 2556
<   tl = get_state_to_tags(mdev, (struct get_state *)(& state), tl);
< #line 2558
<   tmp = tl;
< #line 2558
<   tl = tl + 1;
< #line 2558
<   __gu_p = (void *)tmp;
< #line 2558
<   switch (2UL) {
<   case 1UL: 
< #line 2558
<   *((u8 *)__gu_p) = 0U;
< #line 2558
<   goto ldv_54858;
<   case 2UL: 
< #line 2558
<   put_unaligned_le16(0, __gu_p);
< #line 2558
<   goto ldv_54858;
<   case 4UL: 
< #line 2558
<   put_unaligned_le32(0U, __gu_p);
< #line 2558
<   goto ldv_54858;
<   case 8UL: 
< #line 2558
<   put_unaligned_le64(0ULL, __gu_p);
< #line 2558
<   goto ldv_54858;
<   default: 
< #line 2558
<   __bad_unaligned_access_size();
< #line 2558
<   goto ldv_54858;
<   }
<   ldv_54858: 
< #line 2560
<   cn_reply->id.idx = 8U;
< #line 2561
<   cn_reply->id.val = 1U;
< #line 2563
<   tmp___0 = atomic_add_return(1, & drbd_nl_seq);
< #line 2563
<   cn_reply->seq = (__u32 )tmp___0;
< #line 2564
<   cn_reply->ack = 0U;
< #line 2565
<   cn_reply->len = (unsigned int )((int )((__u16 )((long )tl)) - (int )((__u16 )((long )(& reply->tag_list)))) + 12U;
< #line 2567
<   cn_reply->flags = 0U;
< #line 2569
<   reply->packet_type = 17;
< #line 2570
<   reply->minor = mdev_to_minor(mdev);
< #line 2571
<   reply->ret_code = 101;
< #line 2573
<   cn_netlink_send(cn_reply, 8U, 16U);
< #line 2574
<   return;
---
> #line 733
>   tmp = nla_len(nla);
> #line 733
>   tmp___0 = nla_data(nla);
> #line 733
>   tmp___1 = nla_find((struct nlattr  const  *)tmp___0, tmp, attrtype);
> #line 733
>   return (tmp___1);
63329,63330c68925,68927
< #line 2576 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void drbd_bcast_ev_helper(struct drbd_conf *mdev , char *helper_name ) 
---
> #line 745 "include/net/netlink.h"
> __inline static int nla_parse_nested(struct nlattr **tb , int maxtype , struct nlattr  const  *nla ,
>                                      struct nla_policy  const  *policy ) 
63332,63338c68929,68931
<   char buffer[74U] ;
<   struct cn_msg *cn_reply ;
<   struct drbd_nl_cfg_reply *reply ;
<   unsigned short *tl ;
<   void *__gu_p ;
<   unsigned short *tmp ;
<   int tmp___0 ;
---
>   int tmp ;
>   void *tmp___0 ;
>   int tmp___1 ;
63341,63407c68934,68941
< #line 2582
<   cn_reply = (struct cn_msg *)(& buffer);
< #line 2583
<   reply = (struct drbd_nl_cfg_reply *)(& cn_reply->data);
< #line 2585
<   tl = (unsigned short *)(& reply->tag_list);
< #line 2589
<   tl = tl_add_str(tl, T_helper, (char const   *)helper_name);
< #line 2590
<   tmp = tl;
< #line 2590
<   tl = tl + 1;
< #line 2590
<   __gu_p = (void *)tmp;
< #line 2590
<   switch (2UL) {
<   case 1UL: 
< #line 2590
<   *((u8 *)__gu_p) = 0U;
< #line 2590
<   goto ldv_54873;
<   case 2UL: 
< #line 2590
<   put_unaligned_le16(0, __gu_p);
< #line 2590
<   goto ldv_54873;
<   case 4UL: 
< #line 2590
<   put_unaligned_le32(0U, __gu_p);
< #line 2590
<   goto ldv_54873;
<   case 8UL: 
< #line 2590
<   put_unaligned_le64(0ULL, __gu_p);
< #line 2590
<   goto ldv_54873;
<   default: 
< #line 2590
<   __bad_unaligned_access_size();
< #line 2590
<   goto ldv_54873;
<   }
<   ldv_54873: 
< #line 2592
<   cn_reply->id.idx = 8U;
< #line 2593
<   cn_reply->id.val = 1U;
< #line 2595
<   tmp___0 = atomic_add_return(1, & drbd_nl_seq);
< #line 2595
<   cn_reply->seq = (__u32 )tmp___0;
< #line 2596
<   cn_reply->ack = 0U;
< #line 2597
<   cn_reply->len = (unsigned int )((int )((__u16 )((long )tl)) - (int )((__u16 )((long )(& reply->tag_list)))) + 12U;
< #line 2599
<   cn_reply->flags = 0U;
< #line 2601
<   reply->packet_type = 20;
< #line 2602
<   reply->minor = mdev_to_minor(mdev);
< #line 2603
<   reply->ret_code = 101;
< #line 2605
<   cn_netlink_send(cn_reply, 8U, 16U);
< #line 2606
<   return;
---
> #line 749
>   tmp = nla_len(nla);
> #line 749
>   tmp___0 = nla_data(nla);
> #line 749
>   tmp___1 = nla_parse(tb, maxtype, (struct nlattr  const  *)tmp___0, tmp, policy);
> #line 749
>   return (tmp___1);
63410,63418c68944,68947
< #line 2608 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void drbd_bcast_ee(struct drbd_conf *mdev , char const   *reason , int const   dgs ,
<                    char const   *seen_hash , char const   *calc_hash , struct drbd_epoch_entry  const  *e ) 
< { 
<   struct cn_msg *cn_reply ;
<   struct drbd_nl_cfg_reply *reply ;
<   unsigned short *tl ;
<   struct page *page ;
<   unsigned int len ;
---
> #line 94 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nla.c.prepared"
> static int drbd_nla_check_mandatory(int maxtype , struct nlattr *nla ) 
> { 
>   struct nlattr *head ;
63420,63436c68949,68953
<   unsigned int __min1 ;
<   unsigned int __min2 ;
<   void *__gu_p ;
<   unsigned short *tmp___0 ;
<   void *__gu_p___0 ;
<   unsigned short *tmp___1 ;
<   void *d ;
<   void *tmp___2 ;
<   unsigned int l ;
<   unsigned int __min1___0 ;
<   unsigned int __min2___0 ;
<   size_t __len ;
<   void *__ret ;
<   struct page *tmp___3 ;
<   void *__gu_p___1 ;
<   unsigned short *tmp___4 ;
<   int tmp___5 ;
---
>   int len ;
>   int tmp___0 ;
>   int rem ;
>   int tmp___1 ;
>   int tmp___2 ;
63439,63450c68956,68981
< #line 2619
<   if ((unsigned long )e == (unsigned long )((struct drbd_epoch_entry  const  *)0)) {
< #line 2620
<     return;
<   } else {
< 
<   }
< #line 2621
<   if ((unsigned long )reason == (unsigned long )((char const   *)0) || (int )((signed char )*reason) == 0) {
< #line 2622
<     return;
<   } else {
---
> #line 96
>   tmp = nla_data((struct nlattr  const  *)nla);
> #line 96
>   head = (struct nlattr *)tmp;
> #line 97
>   tmp___0 = nla_len((struct nlattr  const  *)nla);
> #line 97
>   len = tmp___0;
> #line 108
>   nla = head;
> #line 108
>   rem = len;
> #line 108
>   goto ldv_51112;
>   ldv_51111: ;
> #line 109
>   if (((int )nla->nla_type & 16384) != 0) {
> #line 110
>     nla->nla_type = (unsigned int )nla->nla_type & 49151U;
> #line 111
>     tmp___1 = nla_type((struct nlattr  const  *)nla);
> #line 111
>     if (tmp___1 > maxtype) {
> #line 112
>       return (-95);
>     } else {
63452,63463c68983
<   }
< #line 2630
<   tmp = kzalloc(33026UL, 16U);
< #line 2630
<   cn_reply = (struct cn_msg *)tmp;
< #line 2637
<   if ((unsigned long )cn_reply == (unsigned long )((struct cn_msg *)0)) {
< #line 2638
<     dev_err((struct device  const  *)(& (mdev->vdisk)->part0.__dev), "could not kmalloc buffer for drbd_bcast_ee, sector %llu, size %u\n",
<             (unsigned long long )e->sector, e->size);
< #line 2640
<     return;
---
>     }
63467,63585c68987,68995
< #line 2643
<   reply = (struct drbd_nl_cfg_reply *)(& cn_reply->data);
< #line 2644
<   tl = (unsigned short *)(& reply->tag_list);
< #line 2646
<   tl = tl_add_str(tl, T_dump_ee_reason, reason);
< #line 2647
<   tl = tl_add_blob(tl, T_seen_digest, (void const   *)seen_hash, dgs);
< #line 2648
<   tl = tl_add_blob(tl, T_calc_digest, (void const   *)calc_hash, dgs);
< #line 2649
<   tl = tl_add_int(tl, T_ee_sector, (void const   *)(& e->sector));
< #line 2650
<   tl = tl_add_int(tl, T_ee_block_id, (void const   *)(& e->ldv_49189.block_id));
< #line 2653
<   __min1 = e->size;
< #line 2653
<   __min2 = 32768U;
< #line 2653
<   len = __min1 < __min2 ? __min1 : __min2;
< #line 2654
<   tmp___0 = tl;
< #line 2654
<   tl = tl + 1;
< #line 2654
<   __gu_p = (void *)tmp___0;
< #line 2654
<   switch (2UL) {
<   case 1UL: 
< #line 2654
<   *((u8 *)__gu_p) = 50U;
< #line 2654
<   goto ldv_54896;
<   case 2UL: 
< #line 2654
<   put_unaligned_le16(49202, __gu_p);
< #line 2654
<   goto ldv_54896;
<   case 4UL: 
< #line 2654
<   put_unaligned_le32(49202U, __gu_p);
< #line 2654
<   goto ldv_54896;
<   case 8UL: 
< #line 2654
<   put_unaligned_le64(49202ULL, __gu_p);
< #line 2654
<   goto ldv_54896;
<   default: 
< #line 2654
<   __bad_unaligned_access_size();
< #line 2654
<   goto ldv_54896;
<   }
<   ldv_54896: 
< #line 2655
<   tmp___1 = tl;
< #line 2655
<   tl = tl + 1;
< #line 2655
<   __gu_p___0 = (void *)tmp___1;
< #line 2655
<   switch (2UL) {
<   case 1UL: 
< #line 2655
<   *((u8 *)__gu_p___0) = (unsigned char )len;
< #line 2655
<   goto ldv_54903;
<   case 2UL: 
< #line 2655
<   put_unaligned_le16((int )((unsigned short )len), __gu_p___0);
< #line 2655
<   goto ldv_54903;
<   case 4UL: 
< #line 2655
<   put_unaligned_le32(len, __gu_p___0);
< #line 2655
<   goto ldv_54903;
<   case 8UL: 
< #line 2655
<   put_unaligned_le64((unsigned long long )len, __gu_p___0);
< #line 2655
<   goto ldv_54903;
<   default: 
< #line 2655
<   __bad_unaligned_access_size();
< #line 2655
<   goto ldv_54903;
<   }
<   ldv_54903: 
< #line 2657
<   page = e->pages;
< #line 2658
<   goto ldv_54919;
<   ldv_54918: 
< #line 2659
<   tmp___2 = kmap_atomic___0(page);
< #line 2659
<   d = tmp___2;
< #line 2660
<   __min1___0 = len;
< #line 2660
<   __min2___0 = 4096U;
< #line 2660
<   l = __min1___0 < __min2___0 ? __min1___0 : __min2___0;
< #line 2661
<   __len = (size_t )l;
< #line 2661
<   __ret = __builtin_memcpy((void *)tl, (void const   *)d, __len);
< #line 2662
<   __kunmap_atomic___0(d);
< #line 2663
<   tl = tl + (unsigned long )l;
< #line 2664
<   len = len - l;
< #line 2665
<   if (len == 0U) {
< #line 2666
<     goto ldv_54917;
---
> #line 108
>   nla = nla_next((struct nlattr  const  *)nla, & rem);
>   ldv_51112: 
> #line 108
>   tmp___2 = nla_ok((struct nlattr  const  *)nla, rem);
> #line 108
>   if (tmp___2 != 0) {
> #line 109
>     goto ldv_51111;
63589,63606d68998
< #line 2658
<   page = page_chain_next(page);
<   ldv_54919: ;
< #line 2658
<   if ((unsigned long )page != (unsigned long )((struct page *)0)) {
< #line 2658
<     tmp___3 = page_chain_next(page);
< #line 2658
<     __builtin_prefetch((void const   *)tmp___3);
< #line 2658
<     if (1 != 0) {
< #line 2659
<       goto ldv_54918;
<     } else {
< #line 2661
<       goto ldv_54917;
<     }
<   } else {
63608,63670c69000,69001
<   }
<   ldv_54917: 
< #line 2668
<   tmp___4 = tl;
< #line 2668
<   tl = tl + 1;
< #line 2668
<   __gu_p___1 = (void *)tmp___4;
< #line 2668
<   switch (2UL) {
<   case 1UL: 
< #line 2668
<   *((u8 *)__gu_p___1) = 0U;
< #line 2668
<   goto ldv_54922;
<   case 2UL: 
< #line 2668
<   put_unaligned_le16(0, __gu_p___1);
< #line 2668
<   goto ldv_54922;
<   case 4UL: 
< #line 2668
<   put_unaligned_le32(0U, __gu_p___1);
< #line 2668
<   goto ldv_54922;
<   case 8UL: 
< #line 2668
<   put_unaligned_le64(0ULL, __gu_p___1);
< #line 2668
<   goto ldv_54922;
<   default: 
< #line 2668
<   __bad_unaligned_access_size();
< #line 2668
<   goto ldv_54922;
<   }
<   ldv_54922: 
< #line 2670
<   cn_reply->id.idx = 8U;
< #line 2671
<   cn_reply->id.val = 1U;
< #line 2673
<   tmp___5 = atomic_add_return(1, & drbd_nl_seq);
< #line 2673
<   cn_reply->seq = (__u32 )tmp___5;
< #line 2674
<   cn_reply->ack = 0U;
< #line 2675
<   cn_reply->len = (unsigned int )((int )((__u16 )((long )tl)) - (int )((__u16 )((long )(& reply->tag_list)))) + 12U;
< #line 2677
<   cn_reply->flags = 0U;
< #line 2679
<   reply->packet_type = 24;
< #line 2680
<   reply->minor = mdev_to_minor(mdev);
< #line 2681
<   reply->ret_code = 101;
< #line 2683
<   cn_netlink_send(cn_reply, 8U, 16U);
< #line 2684
<   kfree((void const   *)cn_reply);
< #line 2685
<   return;
---
> #line 115
>   return (0);
63673,63674c69004,69006
< #line 2687 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void drbd_bcast_sync_progress(struct drbd_conf *mdev ) 
---
> #line 118 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nla.c.prepared"
> int drbd_nla_parse_nested(struct nlattr **tb , int maxtype , struct nlattr *nla ,
>                           struct nla_policy  const  *policy ) 
63676,63685c69008
<   char buffer[42U] ;
<   struct cn_msg *cn_reply ;
<   struct drbd_nl_cfg_reply *reply ;
<   unsigned short *tl ;
<   unsigned long rs_left ;
<   unsigned int res ;
<   int tmp ;
<   void *__gu_p ;
<   unsigned short *tmp___0 ;
<   int tmp___1 ;
---
>   int err ;
63688,63699c69011,69016
< #line 2693
<   cn_reply = (struct cn_msg *)(& buffer);
< #line 2694
<   reply = (struct drbd_nl_cfg_reply *)(& cn_reply->data);
< #line 2696
<   tl = (unsigned short *)(& reply->tag_list);
< #line 2701
<   tmp = _get_ldev_if_state(mdev, D_INCONSISTENT);
< #line 2701
<   if (tmp == 0) {
< #line 2702
<     return;
---
> #line 123
>   err = drbd_nla_check_mandatory(maxtype, nla);
> #line 124
>   if (err == 0) {
> #line 125
>     err = nla_parse_nested(tb, maxtype, (struct nlattr  const  *)nla, policy);
63703,63767c69020,69021
< #line 2703
<   drbd_get_syncer_progress(mdev, & rs_left, & res);
< #line 2704
<   put_ldev(mdev);
< #line 2706
<   tl = tl_add_int(tl, T_sync_progress, (void const   *)(& res));
< #line 2707
<   tmp___0 = tl;
< #line 2707
<   tl = tl + 1;
< #line 2707
<   __gu_p = (void *)tmp___0;
< #line 2707
<   switch (2UL) {
<   case 1UL: 
< #line 2707
<   *((u8 *)__gu_p) = 0U;
< #line 2707
<   goto ldv_54938;
<   case 2UL: 
< #line 2707
<   put_unaligned_le16(0, __gu_p);
< #line 2707
<   goto ldv_54938;
<   case 4UL: 
< #line 2707
<   put_unaligned_le32(0U, __gu_p);
< #line 2707
<   goto ldv_54938;
<   case 8UL: 
< #line 2707
<   put_unaligned_le64(0ULL, __gu_p);
< #line 2707
<   goto ldv_54938;
<   default: 
< #line 2707
<   __bad_unaligned_access_size();
< #line 2707
<   goto ldv_54938;
<   }
<   ldv_54938: 
< #line 2709
<   cn_reply->id.idx = 8U;
< #line 2710
<   cn_reply->id.val = 1U;
< #line 2712
<   tmp___1 = atomic_add_return(1, & drbd_nl_seq);
< #line 2712
<   cn_reply->seq = (__u32 )tmp___1;
< #line 2713
<   cn_reply->ack = 0U;
< #line 2714
<   cn_reply->len = (unsigned int )((int )((__u16 )((long )tl)) - (int )((__u16 )((long )(& reply->tag_list)))) + 12U;
< #line 2716
<   cn_reply->flags = 0U;
< #line 2718
<   reply->packet_type = 23;
< #line 2719
<   reply->minor = mdev_to_minor(mdev);
< #line 2720
<   reply->ret_code = 101;
< #line 2722
<   cn_netlink_send(cn_reply, 8U, 16U);
< #line 2723
<   return;
---
> #line 127
>   return (err);
63770,63771c69024,69025
< #line 2725 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< int drbd_nl_init(void) 
---
> #line 130 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nla.c.prepared"
> struct nlattr *drbd_nla_find_nested(int maxtype , struct nlattr *nla , int attrtype ) 
63773d69026
<   struct cb_id cn_id_drbd ;
63775,63776c69028,69029
<   int try ;
<   int tmp ;
---
>   void *tmp ;
>   struct nlattr *tmp___0 ;
63779,63809c69032,69034
< #line 2728
<   try = 10;
< #line 2730
<   cn_id_drbd.val = 1U;
<   ldv_54950: 
< #line 2732
<   cn_id_drbd.idx = cn_idx;
< #line 2733
<   err = cn_add_callback(& cn_id_drbd, "cn_drbd", & drbd_connector_callback);
< #line 2734
<   if (err == 0) {
< #line 2735
<     goto ldv_54949;
<   } else {
< 
<   }
< #line 2736
<   cn_idx = cn_idx + 6977U;
< #line 2737
<   tmp = try;
< #line 2737
<   try = try - 1;
< #line 2737
<   if (tmp != 0) {
< #line 2738
<     goto ldv_54950;
<   } else {
< 
<   }
<   ldv_54949: ;
< #line 2739
---
> #line 138
>   err = drbd_nla_check_mandatory(maxtype, nla);
> #line 139
63811,63814c69036,69039
< #line 2740
<     printk("\vdrbd: cn_drbd failed to register\n");
< #line 2741
<     return (err);
---
> #line 140
>     tmp = ERR_PTR((long )err);
> #line 140
>     return ((struct nlattr *)tmp);
63818,63819c69043,69046
< #line 2744
<   return (0);
---
> #line 141
>   tmp___0 = nla_find_nested((struct nlattr  const  *)nla, attrtype);
> #line 141
>   return (tmp___0);
63822,63823c69049,69050
< #line 2747 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void drbd_nl_cleanup(void) 
---
> #line 144 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nla.c.prepared"
> void ldv_mutex_lock_371(struct mutex *ldv_func_arg1 ) 
63825d69051
<   struct cb_id cn_id_drbd ;
63827,63844d69052
<   {
< #line 2751
<   cn_id_drbd.idx = cn_idx;
< #line 2752
<   cn_id_drbd.val = 1U;
< #line 2754
<   cn_del_callback(& cn_id_drbd);
< #line 2755
<   return;
< }
< }
< #line 2757 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void drbd_nl_send_reply(struct cn_msg *req , int ret_code ) 
< { 
<   char buffer[32U] ;
<   struct cn_msg *cn_reply ;
<   struct drbd_nl_cfg_reply *reply ;
<   int rr ;
63847,63878c69055,69059
< #line 2760
<   cn_reply = (struct cn_msg *)(& buffer);
< #line 2761
<   reply = (struct drbd_nl_cfg_reply *)(& cn_reply->data);
< #line 2765
<   memset((void *)(& buffer), 0, 32UL);
< #line 2766
<   cn_reply->id = req->id;
< #line 2768
<   cn_reply->seq = req->seq;
< #line 2769
<   cn_reply->ack = req->ack + 1U;
< #line 2770
<   cn_reply->len = 12U;
< #line 2771
<   cn_reply->flags = 0U;
< #line 2773
<   reply->packet_type = 27;
< #line 2774
<   reply->minor = ((struct drbd_nl_cfg_req *)(& req->data))->drbd_minor;
< #line 2775
<   reply->ret_code = ret_code;
< #line 2777
<   rr = cn_netlink_send(cn_reply, 8U, 16U);
< #line 2778
<   if (rr != 0 && rr != -3) {
< #line 2779
<     printk("\016drbd: cn_netlink_send()=%d\n", rr);
<   } else {
< 
<   }
< #line 2780
---
> #line 149
>   ldv_mutex_lock_cred_guard_mutex_of_signal_struct(ldv_func_arg1);
> #line 151
>   mutex_lock(ldv_func_arg1);
> #line 152
63882,63883c69063,69064
< #line 2820 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void ldv_main8_sequence_infinite_withcheck_stateful(void) 
---
> #line 154 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nla.c.prepared"
> void ldv_mutex_unlock_372(struct mutex *ldv_func_arg1 ) 
63885,63914d69065
<   int tmp ;
<   int tmp___0 ;
< 
<   {
< #line 2832
<   LDV_IN_INTERRUPT = 1;
< #line 2841
<   ldv_initialize();
< #line 2843
<   goto ldv_54982;
<   ldv_54981: 
< #line 2846
<   tmp = nondet_int();
< #line 2846
<   switch (tmp) {
<   default: ;
< #line 2848
<   goto ldv_54980;
<   }
<   ldv_54980: ;
<   ldv_54982: 
< #line 2843
<   tmp___0 = nondet_int();
< #line 2843
<   if (tmp___0 != 0) {
< #line 2844
<     goto ldv_54981;
<   } else {
< 
<   }
63917,63919c69068,69073
< #line 2857
<   ldv_check_final_state();
< #line 2860
---
>   {
> #line 159
>   ldv_mutex_unlock_cred_guard_mutex_of_signal_struct(ldv_func_arg1);
> #line 161
>   mutex_unlock(ldv_func_arg1);
> #line 162
63923,63924c69077,69078
< #line 2864 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void ldv_mutex_lock_287(struct mutex *ldv_func_arg1 ) 
---
> #line 164 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nla.c.prepared"
> void ldv_mutex_lock_373(struct mutex *ldv_func_arg1 ) 
63929c69083
< #line 2869
---
> #line 169
63931c69085
< #line 2871
---
> #line 171
63933c69087
< #line 2872
---
> #line 172
63937,63938c69091,69092
< #line 2874 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void ldv_mutex_unlock_288(struct mutex *ldv_func_arg1 ) 
---
> #line 174 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nla.c.prepared"
> void ldv_mutex_unlock_374(struct mutex *ldv_func_arg1 ) 
63943c69097
< #line 2879
---
> #line 179
63945c69099
< #line 2881
---
> #line 181
63947c69101
< #line 2882
---
> #line 182
63951,63952c69105,69106
< #line 2884 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void ldv_mutex_lock_289(struct mutex *ldv_func_arg1 ) 
---
> #line 184 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nla.c.prepared"
> void ldv_mutex_lock_375(struct mutex *ldv_func_arg1 ) 
63957c69111
< #line 2889
---
> #line 189
63959c69113
< #line 2891
---
> #line 191
63961c69115
< #line 2892
---
> #line 192
63965,63966c69119,69120
< #line 2894 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< int ldv_mutex_trylock_290(struct mutex *ldv_func_arg1 ) 
---
> #line 194 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nla.c.prepared"
> int ldv_mutex_trylock_376(struct mutex *ldv_func_arg1 ) 
63968c69122
<   ldv_func_ret_type___2 ldv_func_res ;
---
>   ldv_func_ret_type___4 ldv_func_res ;
63973c69127
< #line 2899
---
> #line 199
63975c69129
< #line 2899
---
> #line 199
63977c69131
< #line 2901
---
> #line 201
63979c69133
< #line 2901
---
> #line 201
63981c69135
< #line 2903
---
> #line 203
63985,63986c69139,69140
< #line 2906 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void ldv_mutex_unlock_291(struct mutex *ldv_func_arg1 ) 
---
> #line 206 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nla.c.prepared"
> void ldv_mutex_unlock_377(struct mutex *ldv_func_arg1 ) 
63991c69145
< #line 2911
---
> #line 211
63993c69147
< #line 2913
---
> #line 213
63995c69149
< #line 2914
---
> #line 214
63999,64000c69153,69154
< #line 2916 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void ldv_mutex_lock_292(struct mutex *ldv_func_arg1 ) 
---
> #line 216 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nla.c.prepared"
> void ldv_mutex_lock_378(struct mutex *ldv_func_arg1 ) 
64005c69159
< #line 2921
---
> #line 221
64007c69161
< #line 2923
---
> #line 223
64009c69163
< #line 2924
---
> #line 224
64013,64014c69167,69168
< #line 2926 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void ldv_mutex_unlock_293(struct mutex *ldv_func_arg1 ) 
---
> #line 226 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nla.c.prepared"
> void ldv_mutex_unlock_379(struct mutex *ldv_func_arg1 ) 
64019c69173
< #line 2931
---
> #line 231
64021c69175
< #line 2933
---
> #line 233
64023c69177
< #line 2934
---
> #line 234
64027,64028c69181,69182
< #line 2936 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void ldv_mutex_lock_294(struct mutex *ldv_func_arg1 ) 
---
> #line 236 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nla.c.prepared"
> void ldv_mutex_lock_380(struct mutex *ldv_func_arg1 ) 
64033c69187
< #line 2941
---
> #line 241
64035c69189
< #line 2943
---
> #line 243
64037c69191
< #line 2944
---
> #line 244
64041,64042c69195,69196
< #line 2946 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void ldv_mutex_unlock_295(struct mutex *ldv_func_arg1 ) 
---
> #line 246 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nla.c.prepared"
> void ldv_mutex_unlock_381(struct mutex *ldv_func_arg1 ) 
64047c69201
< #line 2951
---
> #line 251
64049,64175c69203
< #line 2953
<   mutex_unlock(ldv_func_arg1);
< #line 2954
<   return;
< }
< }
< #line 2956 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void ldv_mutex_lock_296(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 2961
<   ldv_mutex_lock_cred_guard_mutex_of_signal_struct(ldv_func_arg1);
< #line 2963
<   mutex_lock(ldv_func_arg1);
< #line 2964
<   return;
< }
< }
< #line 2966 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void ldv_mutex_unlock_297(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 2971
<   ldv_mutex_unlock_cred_guard_mutex_of_signal_struct(ldv_func_arg1);
< #line 2973
<   mutex_unlock(ldv_func_arg1);
< #line 2974
<   return;
< }
< }
< #line 2976 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void ldv_mutex_lock_298(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 2981
<   ldv_mutex_lock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 2983
<   mutex_lock(ldv_func_arg1);
< #line 2984
<   return;
< }
< }
< #line 2986 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void ldv_mutex_unlock_299(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 2991
<   ldv_mutex_unlock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 2993
<   mutex_unlock(ldv_func_arg1);
< #line 2994
<   return;
< }
< }
< #line 2996 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void ldv_mutex_unlock_300(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 3001
<   ldv_mutex_unlock_mutex_of_drbd_socket(ldv_func_arg1);
< #line 3003
<   mutex_unlock(ldv_func_arg1);
< #line 3004
<   return;
< }
< }
< #line 3006 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void ldv_mutex_lock_301(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 3011
<   ldv_mutex_lock_state_mutex_of_drbd_conf(ldv_func_arg1);
< #line 3013
<   mutex_lock(ldv_func_arg1);
< #line 3014
<   return;
< }
< }
< #line 3016 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void ldv_mutex_unlock_302(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 3021
<   ldv_mutex_unlock_state_mutex_of_drbd_conf(ldv_func_arg1);
< #line 3023
<   mutex_unlock(ldv_func_arg1);
< #line 3024
<   return;
< }
< }
< #line 3026 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void ldv_mutex_lock_303(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 3031
<   ldv_mutex_lock_state_mutex_of_drbd_conf(ldv_func_arg1);
< #line 3033
<   mutex_lock(ldv_func_arg1);
< #line 3034
<   return;
< }
< }
< #line 3036 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/dscv/ri/32_7a/drivers/block/drbd/drbd_nl.c.prepared"
< void ldv_mutex_unlock_304(struct mutex *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 3041
<   ldv_mutex_unlock_state_mutex_of_drbd_conf(ldv_func_arg1);
< #line 3043
---
> #line 253
64177c69205
< #line 3044
---
> #line 254
64206c69234
< #line 8 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
---
> #line 8 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
64208c69236
< #line 11 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
---
> #line 11 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
64235c69263
< #line 37 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
---
> #line 37 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
64262c69290
< #line 63 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
---
> #line 63 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
64281c69309
< #line 72 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
---
> #line 72 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
64308c69336
< #line 98 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
---
> #line 98 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
64336c69364
< #line 123 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
---
> #line 123 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
64360c69388
< #line 152 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
---
> #line 152 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
64379,64382c69407,69410
< #line 160 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< static int ldv_mutex_cred_guard_mutex_of_signal_struct  ;
< #line 163 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_lock_interruptible_cred_guard_mutex_of_signal_struct(struct mutex *lock ) 
---
> #line 160 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> static int ldv_mutex_conf_update_of_drbd_tconn  ;
> #line 163 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_mutex_lock_interruptible_conf_update_of_drbd_tconn(struct mutex *lock ) 
64388c69416
<   if (ldv_mutex_cred_guard_mutex_of_signal_struct == 1) {
---
>   if (ldv_mutex_conf_update_of_drbd_tconn == 1) {
64399c69427
<     ldv_mutex_cred_guard_mutex_of_signal_struct = 2;
---
>     ldv_mutex_conf_update_of_drbd_tconn = 2;
64408,64409c69436,69437
< #line 189 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_lock_killable_cred_guard_mutex_of_signal_struct(struct mutex *lock ) 
---
> #line 189 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_mutex_lock_killable_conf_update_of_drbd_tconn(struct mutex *lock ) 
64415c69443
<   if (ldv_mutex_cred_guard_mutex_of_signal_struct == 1) {
---
>   if (ldv_mutex_conf_update_of_drbd_tconn == 1) {
64426c69454
<     ldv_mutex_cred_guard_mutex_of_signal_struct = 2;
---
>     ldv_mutex_conf_update_of_drbd_tconn = 2;
64435,64436c69463,69464
< #line 215 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< void ldv_mutex_lock_cred_guard_mutex_of_signal_struct(struct mutex *lock ) 
---
> #line 215 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> void ldv_mutex_lock_conf_update_of_drbd_tconn(struct mutex *lock ) 
64442c69470
<   if (ldv_mutex_cred_guard_mutex_of_signal_struct == 1) {
---
>   if (ldv_mutex_conf_update_of_drbd_tconn == 1) {
64449c69477
<   ldv_mutex_cred_guard_mutex_of_signal_struct = 2;
---
>   ldv_mutex_conf_update_of_drbd_tconn = 2;
64454,64455c69482,69483
< #line 224 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_trylock_cred_guard_mutex_of_signal_struct(struct mutex *lock ) 
---
> #line 224 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_mutex_trylock_conf_update_of_drbd_tconn(struct mutex *lock ) 
64461c69489
<   if (ldv_mutex_cred_guard_mutex_of_signal_struct == 1) {
---
>   if (ldv_mutex_conf_update_of_drbd_tconn == 1) {
64475c69503
<     ldv_mutex_cred_guard_mutex_of_signal_struct = 2;
---
>     ldv_mutex_conf_update_of_drbd_tconn = 2;
64481,64483c69509,69510
< #line 250 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_atomic_dec_and_mutex_lock_cred_guard_mutex_of_signal_struct(atomic_t *cnt ,
<                                                                     struct mutex *lock ) 
---
> #line 250 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_atomic_dec_and_mutex_lock_conf_update_of_drbd_tconn(atomic_t *cnt , struct mutex *lock ) 
64489c69516
<   if (ldv_mutex_cred_guard_mutex_of_signal_struct == 1) {
---
>   if (ldv_mutex_conf_update_of_drbd_tconn == 1) {
64500c69527
<     ldv_mutex_cred_guard_mutex_of_signal_struct = 2;
---
>     ldv_mutex_conf_update_of_drbd_tconn = 2;
64510,64511c69537,69538
< #line 275 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_is_locked_cred_guard_mutex_of_signal_struct(struct mutex *lock ) 
---
> #line 275 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_mutex_is_locked_conf_update_of_drbd_tconn(struct mutex *lock ) 
64517c69544
<   if (ldv_mutex_cred_guard_mutex_of_signal_struct == 1) {
---
>   if (ldv_mutex_conf_update_of_drbd_tconn == 1) {
64534,64535c69561,69562
< #line 304 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< void ldv_mutex_unlock_cred_guard_mutex_of_signal_struct(struct mutex *lock ) 
---
> #line 304 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> void ldv_mutex_unlock_conf_update_of_drbd_tconn(struct mutex *lock ) 
64541c69568
<   if (ldv_mutex_cred_guard_mutex_of_signal_struct == 2) {
---
>   if (ldv_mutex_conf_update_of_drbd_tconn == 2) {
64548c69575
<   ldv_mutex_cred_guard_mutex_of_signal_struct = 1;
---
>   ldv_mutex_conf_update_of_drbd_tconn = 1;
64553,64556c69580,69583
< #line 312 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< static int ldv_mutex_drbd_main_mutex  ;
< #line 315 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_lock_interruptible_drbd_main_mutex(struct mutex *lock ) 
---
> #line 312 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> static int ldv_mutex_cred_guard_mutex_of_signal_struct  ;
> #line 315 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_mutex_lock_interruptible_cred_guard_mutex_of_signal_struct(struct mutex *lock ) 
64562c69589
<   if (ldv_mutex_drbd_main_mutex == 1) {
---
>   if (ldv_mutex_cred_guard_mutex_of_signal_struct == 1) {
64573c69600
<     ldv_mutex_drbd_main_mutex = 2;
---
>     ldv_mutex_cred_guard_mutex_of_signal_struct = 2;
64582,64583c69609,69610
< #line 341 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_lock_killable_drbd_main_mutex(struct mutex *lock ) 
---
> #line 341 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_mutex_lock_killable_cred_guard_mutex_of_signal_struct(struct mutex *lock ) 
64589c69616
<   if (ldv_mutex_drbd_main_mutex == 1) {
---
>   if (ldv_mutex_cred_guard_mutex_of_signal_struct == 1) {
64600c69627
<     ldv_mutex_drbd_main_mutex = 2;
---
>     ldv_mutex_cred_guard_mutex_of_signal_struct = 2;
64609,64610c69636,69637
< #line 367 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< void ldv_mutex_lock_drbd_main_mutex(struct mutex *lock ) 
---
> #line 367 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> void ldv_mutex_lock_cred_guard_mutex_of_signal_struct(struct mutex *lock ) 
64616c69643
<   if (ldv_mutex_drbd_main_mutex == 1) {
---
>   if (ldv_mutex_cred_guard_mutex_of_signal_struct == 1) {
64623c69650
<   ldv_mutex_drbd_main_mutex = 2;
---
>   ldv_mutex_cred_guard_mutex_of_signal_struct = 2;
64628,64629c69655,69656
< #line 376 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_trylock_drbd_main_mutex(struct mutex *lock ) 
---
> #line 376 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_mutex_trylock_cred_guard_mutex_of_signal_struct(struct mutex *lock ) 
64635c69662
<   if (ldv_mutex_drbd_main_mutex == 1) {
---
>   if (ldv_mutex_cred_guard_mutex_of_signal_struct == 1) {
64649c69676
<     ldv_mutex_drbd_main_mutex = 2;
---
>     ldv_mutex_cred_guard_mutex_of_signal_struct = 2;
64655,64656c69682,69684
< #line 402 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_atomic_dec_and_mutex_lock_drbd_main_mutex(atomic_t *cnt , struct mutex *lock ) 
---
> #line 402 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_atomic_dec_and_mutex_lock_cred_guard_mutex_of_signal_struct(atomic_t *cnt ,
>                                                                     struct mutex *lock ) 
64662c69690
<   if (ldv_mutex_drbd_main_mutex == 1) {
---
>   if (ldv_mutex_cred_guard_mutex_of_signal_struct == 1) {
64673c69701
<     ldv_mutex_drbd_main_mutex = 2;
---
>     ldv_mutex_cred_guard_mutex_of_signal_struct = 2;
64683,64684c69711,69712
< #line 427 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_is_locked_drbd_main_mutex(struct mutex *lock ) 
---
> #line 427 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_mutex_is_locked_cred_guard_mutex_of_signal_struct(struct mutex *lock ) 
64690c69718
<   if (ldv_mutex_drbd_main_mutex == 1) {
---
>   if (ldv_mutex_cred_guard_mutex_of_signal_struct == 1) {
64707,64708c69735,69736
< #line 456 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< void ldv_mutex_unlock_drbd_main_mutex(struct mutex *lock ) 
---
> #line 456 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> void ldv_mutex_unlock_cred_guard_mutex_of_signal_struct(struct mutex *lock ) 
64714c69742
<   if (ldv_mutex_drbd_main_mutex == 2) {
---
>   if (ldv_mutex_cred_guard_mutex_of_signal_struct == 2) {
64721c69749
<   ldv_mutex_drbd_main_mutex = 1;
---
>   ldv_mutex_cred_guard_mutex_of_signal_struct = 1;
64726,64729c69754,69757
< #line 464 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< static int ldv_mutex_lock  ;
< #line 467 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_lock_interruptible_lock(struct mutex *lock ) 
---
> #line 464 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> static int ldv_mutex_cstate_mutex_of_drbd_tconn  ;
> #line 467 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_mutex_lock_interruptible_cstate_mutex_of_drbd_tconn(struct mutex *lock ) 
64735c69763
<   if (ldv_mutex_lock == 1) {
---
>   if (ldv_mutex_cstate_mutex_of_drbd_tconn == 1) {
64746c69774
<     ldv_mutex_lock = 2;
---
>     ldv_mutex_cstate_mutex_of_drbd_tconn = 2;
64755,64756c69783,69784
< #line 493 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_lock_killable_lock(struct mutex *lock ) 
---
> #line 493 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_mutex_lock_killable_cstate_mutex_of_drbd_tconn(struct mutex *lock ) 
64762c69790
<   if (ldv_mutex_lock == 1) {
---
>   if (ldv_mutex_cstate_mutex_of_drbd_tconn == 1) {
64773c69801
<     ldv_mutex_lock = 2;
---
>     ldv_mutex_cstate_mutex_of_drbd_tconn = 2;
64782,64783c69810,69811
< #line 519 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< void ldv_mutex_lock_lock(struct mutex *lock ) 
---
> #line 519 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> void ldv_mutex_lock_cstate_mutex_of_drbd_tconn(struct mutex *lock ) 
64789c69817
<   if (ldv_mutex_lock == 1) {
---
>   if (ldv_mutex_cstate_mutex_of_drbd_tconn == 1) {
64796c69824
<   ldv_mutex_lock = 2;
---
>   ldv_mutex_cstate_mutex_of_drbd_tconn = 2;
64801,64802c69829,69830
< #line 528 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_trylock_lock(struct mutex *lock ) 
---
> #line 528 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_mutex_trylock_cstate_mutex_of_drbd_tconn(struct mutex *lock ) 
64808c69836
<   if (ldv_mutex_lock == 1) {
---
>   if (ldv_mutex_cstate_mutex_of_drbd_tconn == 1) {
64822c69850
<     ldv_mutex_lock = 2;
---
>     ldv_mutex_cstate_mutex_of_drbd_tconn = 2;
64828,64829c69856,69857
< #line 554 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_atomic_dec_and_mutex_lock_lock(atomic_t *cnt , struct mutex *lock ) 
---
> #line 554 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_atomic_dec_and_mutex_lock_cstate_mutex_of_drbd_tconn(atomic_t *cnt , struct mutex *lock ) 
64835c69863
<   if (ldv_mutex_lock == 1) {
---
>   if (ldv_mutex_cstate_mutex_of_drbd_tconn == 1) {
64846c69874
<     ldv_mutex_lock = 2;
---
>     ldv_mutex_cstate_mutex_of_drbd_tconn = 2;
64856,64857c69884,69885
< #line 579 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_is_locked_lock(struct mutex *lock ) 
---
> #line 579 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_mutex_is_locked_cstate_mutex_of_drbd_tconn(struct mutex *lock ) 
64863c69891
<   if (ldv_mutex_lock == 1) {
---
>   if (ldv_mutex_cstate_mutex_of_drbd_tconn == 1) {
64880,64881c69908,69909
< #line 608 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< void ldv_mutex_unlock_lock(struct mutex *lock ) 
---
> #line 608 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> void ldv_mutex_unlock_cstate_mutex_of_drbd_tconn(struct mutex *lock ) 
64887c69915
<   if (ldv_mutex_lock == 2) {
---
>   if (ldv_mutex_cstate_mutex_of_drbd_tconn == 2) {
64894c69922
<   ldv_mutex_lock = 1;
---
>   ldv_mutex_cstate_mutex_of_drbd_tconn = 1;
64899,64902c69927,69930
< #line 616 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< static int ldv_mutex_mtx_of_percpu_rw_semaphore  ;
< #line 619 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_lock_interruptible_mtx_of_percpu_rw_semaphore(struct mutex *lock ) 
---
> #line 616 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> static int ldv_mutex_drbd_main_mutex  ;
> #line 619 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_mutex_lock_interruptible_drbd_main_mutex(struct mutex *lock ) 
64908c69936
<   if (ldv_mutex_mtx_of_percpu_rw_semaphore == 1) {
---
>   if (ldv_mutex_drbd_main_mutex == 1) {
64919c69947
<     ldv_mutex_mtx_of_percpu_rw_semaphore = 2;
---
>     ldv_mutex_drbd_main_mutex = 2;
64928,64929c69956,69957
< #line 645 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_lock_killable_mtx_of_percpu_rw_semaphore(struct mutex *lock ) 
---
> #line 645 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_mutex_lock_killable_drbd_main_mutex(struct mutex *lock ) 
64935c69963
<   if (ldv_mutex_mtx_of_percpu_rw_semaphore == 1) {
---
>   if (ldv_mutex_drbd_main_mutex == 1) {
64946c69974
<     ldv_mutex_mtx_of_percpu_rw_semaphore = 2;
---
>     ldv_mutex_drbd_main_mutex = 2;
64955,64956c69983,69984
< #line 671 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< void ldv_mutex_lock_mtx_of_percpu_rw_semaphore(struct mutex *lock ) 
---
> #line 671 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> void ldv_mutex_lock_drbd_main_mutex(struct mutex *lock ) 
64962c69990
<   if (ldv_mutex_mtx_of_percpu_rw_semaphore == 1) {
---
>   if (ldv_mutex_drbd_main_mutex == 1) {
64969c69997
<   ldv_mutex_mtx_of_percpu_rw_semaphore = 2;
---
>   ldv_mutex_drbd_main_mutex = 2;
64974,64975c70002,70003
< #line 680 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_trylock_mtx_of_percpu_rw_semaphore(struct mutex *lock ) 
---
> #line 680 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_mutex_trylock_drbd_main_mutex(struct mutex *lock ) 
64981c70009
<   if (ldv_mutex_mtx_of_percpu_rw_semaphore == 1) {
---
>   if (ldv_mutex_drbd_main_mutex == 1) {
64995c70023
<     ldv_mutex_mtx_of_percpu_rw_semaphore = 2;
---
>     ldv_mutex_drbd_main_mutex = 2;
65001,65002c70029,70030
< #line 706 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_atomic_dec_and_mutex_lock_mtx_of_percpu_rw_semaphore(atomic_t *cnt , struct mutex *lock ) 
---
> #line 706 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_atomic_dec_and_mutex_lock_drbd_main_mutex(atomic_t *cnt , struct mutex *lock ) 
65008c70036
<   if (ldv_mutex_mtx_of_percpu_rw_semaphore == 1) {
---
>   if (ldv_mutex_drbd_main_mutex == 1) {
65019c70047
<     ldv_mutex_mtx_of_percpu_rw_semaphore = 2;
---
>     ldv_mutex_drbd_main_mutex = 2;
65029,65030c70057,70058
< #line 731 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_is_locked_mtx_of_percpu_rw_semaphore(struct mutex *lock ) 
---
> #line 731 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_mutex_is_locked_drbd_main_mutex(struct mutex *lock ) 
65036c70064
<   if (ldv_mutex_mtx_of_percpu_rw_semaphore == 1) {
---
>   if (ldv_mutex_drbd_main_mutex == 1) {
65053,65054c70081,70082
< #line 760 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< void ldv_mutex_unlock_mtx_of_percpu_rw_semaphore(struct mutex *lock ) 
---
> #line 760 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> void ldv_mutex_unlock_drbd_main_mutex(struct mutex *lock ) 
65060c70088
<   if (ldv_mutex_mtx_of_percpu_rw_semaphore == 2) {
---
>   if (ldv_mutex_drbd_main_mutex == 2) {
65067c70095
<   ldv_mutex_mtx_of_percpu_rw_semaphore = 1;
---
>   ldv_mutex_drbd_main_mutex = 1;
65072,65075c70100,70103
< #line 768 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< static int ldv_mutex_mutex_of_device  ;
< #line 771 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_lock_interruptible_mutex_of_device(struct mutex *lock ) 
---
> #line 768 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> static int ldv_mutex_lock  ;
> #line 771 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_mutex_lock_interruptible_lock(struct mutex *lock ) 
65081c70109
<   if (ldv_mutex_mutex_of_device == 1) {
---
>   if (ldv_mutex_lock == 1) {
65092c70120
<     ldv_mutex_mutex_of_device = 2;
---
>     ldv_mutex_lock = 2;
65101,65102c70129,70130
< #line 797 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_lock_killable_mutex_of_device(struct mutex *lock ) 
---
> #line 797 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_mutex_lock_killable_lock(struct mutex *lock ) 
65108c70136
<   if (ldv_mutex_mutex_of_device == 1) {
---
>   if (ldv_mutex_lock == 1) {
65119c70147
<     ldv_mutex_mutex_of_device = 2;
---
>     ldv_mutex_lock = 2;
65128,65129c70156,70157
< #line 823 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< void ldv_mutex_lock_mutex_of_device(struct mutex *lock ) 
---
> #line 823 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> void ldv_mutex_lock_lock(struct mutex *lock ) 
65135c70163
<   if (ldv_mutex_mutex_of_device == 1) {
---
>   if (ldv_mutex_lock == 1) {
65142c70170
<   ldv_mutex_mutex_of_device = 2;
---
>   ldv_mutex_lock = 2;
65147,65148c70175,70176
< #line 832 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_trylock_mutex_of_device(struct mutex *lock ) 
---
> #line 832 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_mutex_trylock_lock(struct mutex *lock ) 
65154c70182
<   if (ldv_mutex_mutex_of_device == 1) {
---
>   if (ldv_mutex_lock == 1) {
65168c70196
<     ldv_mutex_mutex_of_device = 2;
---
>     ldv_mutex_lock = 2;
65174,65175c70202,70203
< #line 858 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_atomic_dec_and_mutex_lock_mutex_of_device(atomic_t *cnt , struct mutex *lock ) 
---
> #line 858 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_atomic_dec_and_mutex_lock_lock(atomic_t *cnt , struct mutex *lock ) 
65181c70209
<   if (ldv_mutex_mutex_of_device == 1) {
---
>   if (ldv_mutex_lock == 1) {
65192c70220
<     ldv_mutex_mutex_of_device = 2;
---
>     ldv_mutex_lock = 2;
65202,65203c70230,70231
< #line 883 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_is_locked_mutex_of_device(struct mutex *lock ) 
---
> #line 883 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_mutex_is_locked_lock(struct mutex *lock ) 
65209c70237
<   if (ldv_mutex_mutex_of_device == 1) {
---
>   if (ldv_mutex_lock == 1) {
65226,65227c70254,70255
< #line 912 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< void ldv_mutex_unlock_mutex_of_device(struct mutex *lock ) 
---
> #line 912 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> void ldv_mutex_unlock_lock(struct mutex *lock ) 
65233c70261
<   if (ldv_mutex_mutex_of_device == 2) {
---
>   if (ldv_mutex_lock == 2) {
65240c70268
<   ldv_mutex_mutex_of_device = 1;
---
>   ldv_mutex_lock = 1;
65245,65248c70273,70276
< #line 920 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< static int ldv_mutex_mutex_of_drbd_socket  ;
< #line 923 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_lock_interruptible_mutex_of_drbd_socket(struct mutex *lock ) 
---
> #line 920 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> static int ldv_mutex_mtx_of_percpu_rw_semaphore  ;
> #line 923 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_mutex_lock_interruptible_mtx_of_percpu_rw_semaphore(struct mutex *lock ) 
65254c70282
<   if (ldv_mutex_mutex_of_drbd_socket == 1) {
---
>   if (ldv_mutex_mtx_of_percpu_rw_semaphore == 1) {
65265c70293
<     ldv_mutex_mutex_of_drbd_socket = 2;
---
>     ldv_mutex_mtx_of_percpu_rw_semaphore = 2;
65274,65275c70302,70303
< #line 949 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_lock_killable_mutex_of_drbd_socket(struct mutex *lock ) 
---
> #line 949 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_mutex_lock_killable_mtx_of_percpu_rw_semaphore(struct mutex *lock ) 
65281c70309
<   if (ldv_mutex_mutex_of_drbd_socket == 1) {
---
>   if (ldv_mutex_mtx_of_percpu_rw_semaphore == 1) {
65292c70320
<     ldv_mutex_mutex_of_drbd_socket = 2;
---
>     ldv_mutex_mtx_of_percpu_rw_semaphore = 2;
65301,65302c70329,70330
< #line 975 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< void ldv_mutex_lock_mutex_of_drbd_socket(struct mutex *lock ) 
---
> #line 975 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> void ldv_mutex_lock_mtx_of_percpu_rw_semaphore(struct mutex *lock ) 
65308c70336
<   if (ldv_mutex_mutex_of_drbd_socket == 1) {
---
>   if (ldv_mutex_mtx_of_percpu_rw_semaphore == 1) {
65315c70343
<   ldv_mutex_mutex_of_drbd_socket = 2;
---
>   ldv_mutex_mtx_of_percpu_rw_semaphore = 2;
65320,65321c70348,70349
< #line 984 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_trylock_mutex_of_drbd_socket(struct mutex *lock ) 
---
> #line 984 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_mutex_trylock_mtx_of_percpu_rw_semaphore(struct mutex *lock ) 
65327c70355
<   if (ldv_mutex_mutex_of_drbd_socket == 1) {
---
>   if (ldv_mutex_mtx_of_percpu_rw_semaphore == 1) {
65341c70369
<     ldv_mutex_mutex_of_drbd_socket = 2;
---
>     ldv_mutex_mtx_of_percpu_rw_semaphore = 2;
65347,65348c70375,70376
< #line 1010 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_atomic_dec_and_mutex_lock_mutex_of_drbd_socket(atomic_t *cnt , struct mutex *lock ) 
---
> #line 1010 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_atomic_dec_and_mutex_lock_mtx_of_percpu_rw_semaphore(atomic_t *cnt , struct mutex *lock ) 
65354c70382
<   if (ldv_mutex_mutex_of_drbd_socket == 1) {
---
>   if (ldv_mutex_mtx_of_percpu_rw_semaphore == 1) {
65365c70393
<     ldv_mutex_mutex_of_drbd_socket = 2;
---
>     ldv_mutex_mtx_of_percpu_rw_semaphore = 2;
65375,65376c70403,70404
< #line 1035 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_is_locked_mutex_of_drbd_socket(struct mutex *lock ) 
---
> #line 1035 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_mutex_is_locked_mtx_of_percpu_rw_semaphore(struct mutex *lock ) 
65382c70410
<   if (ldv_mutex_mutex_of_drbd_socket == 1) {
---
>   if (ldv_mutex_mtx_of_percpu_rw_semaphore == 1) {
65399,65400c70427,70428
< #line 1064 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< void ldv_mutex_unlock_mutex_of_drbd_socket(struct mutex *lock ) 
---
> #line 1064 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> void ldv_mutex_unlock_mtx_of_percpu_rw_semaphore(struct mutex *lock ) 
65406c70434
<   if (ldv_mutex_mutex_of_drbd_socket == 2) {
---
>   if (ldv_mutex_mtx_of_percpu_rw_semaphore == 2) {
65413c70441
<   ldv_mutex_mutex_of_drbd_socket = 1;
---
>   ldv_mutex_mtx_of_percpu_rw_semaphore = 1;
65418,65421c70446,70449
< #line 1072 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< static int ldv_mutex_state_mutex_of_drbd_conf  ;
< #line 1075 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_lock_interruptible_state_mutex_of_drbd_conf(struct mutex *lock ) 
---
> #line 1072 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> static int ldv_mutex_mutex_of_device  ;
> #line 1075 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_mutex_lock_interruptible_mutex_of_device(struct mutex *lock ) 
65427c70455
<   if (ldv_mutex_state_mutex_of_drbd_conf == 1) {
---
>   if (ldv_mutex_mutex_of_device == 1) {
65438c70466
<     ldv_mutex_state_mutex_of_drbd_conf = 2;
---
>     ldv_mutex_mutex_of_device = 2;
65447,65448c70475,70476
< #line 1101 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_lock_killable_state_mutex_of_drbd_conf(struct mutex *lock ) 
---
> #line 1101 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_mutex_lock_killable_mutex_of_device(struct mutex *lock ) 
65454c70482
<   if (ldv_mutex_state_mutex_of_drbd_conf == 1) {
---
>   if (ldv_mutex_mutex_of_device == 1) {
65465c70493
<     ldv_mutex_state_mutex_of_drbd_conf = 2;
---
>     ldv_mutex_mutex_of_device = 2;
65474,65475c70502,70503
< #line 1127 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< void ldv_mutex_lock_state_mutex_of_drbd_conf(struct mutex *lock ) 
---
> #line 1127 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> void ldv_mutex_lock_mutex_of_device(struct mutex *lock ) 
65481c70509
<   if (ldv_mutex_state_mutex_of_drbd_conf == 1) {
---
>   if (ldv_mutex_mutex_of_device == 1) {
65488c70516
<   ldv_mutex_state_mutex_of_drbd_conf = 2;
---
>   ldv_mutex_mutex_of_device = 2;
65493,65494c70521,70522
< #line 1136 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_trylock_state_mutex_of_drbd_conf(struct mutex *lock ) 
---
> #line 1136 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_mutex_trylock_mutex_of_device(struct mutex *lock ) 
65500c70528
<   if (ldv_mutex_state_mutex_of_drbd_conf == 1) {
---
>   if (ldv_mutex_mutex_of_device == 1) {
65514c70542
<     ldv_mutex_state_mutex_of_drbd_conf = 2;
---
>     ldv_mutex_mutex_of_device = 2;
65520,65521c70548,70549
< #line 1162 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_atomic_dec_and_mutex_lock_state_mutex_of_drbd_conf(atomic_t *cnt , struct mutex *lock ) 
---
> #line 1162 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_atomic_dec_and_mutex_lock_mutex_of_device(atomic_t *cnt , struct mutex *lock ) 
65527c70555
<   if (ldv_mutex_state_mutex_of_drbd_conf == 1) {
---
>   if (ldv_mutex_mutex_of_device == 1) {
65538c70566
<     ldv_mutex_state_mutex_of_drbd_conf = 2;
---
>     ldv_mutex_mutex_of_device = 2;
65548,65549c70576,70577
< #line 1187 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< int ldv_mutex_is_locked_state_mutex_of_drbd_conf(struct mutex *lock ) 
---
> #line 1187 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_mutex_is_locked_mutex_of_device(struct mutex *lock ) 
65555c70583
<   if (ldv_mutex_state_mutex_of_drbd_conf == 1) {
---
>   if (ldv_mutex_mutex_of_device == 1) {
65572,65573c70600,70601
< #line 1216 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
< void ldv_mutex_unlock_state_mutex_of_drbd_conf(struct mutex *lock ) 
---
> #line 1216 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> void ldv_mutex_unlock_mutex_of_device(struct mutex *lock ) 
65579c70607
<   if (ldv_mutex_state_mutex_of_drbd_conf == 2) {
---
>   if (ldv_mutex_mutex_of_device == 2) {
65586c70614
<   ldv_mutex_state_mutex_of_drbd_conf = 1;
---
>   ldv_mutex_mutex_of_device = 1;
65591c70619,70965
< #line 1226 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
---
> #line 1224 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> static int ldv_mutex_mutex_of_drbd_socket  ;
> #line 1227 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_mutex_lock_interruptible_mutex_of_drbd_socket(struct mutex *lock ) 
> { 
>   int nondetermined ;
> 
>   {
> #line 1232
>   if (ldv_mutex_mutex_of_drbd_socket == 1) {
> 
>   } else {
> #line 1232
>     ldv_error();
>   }
> #line 1235
>   nondetermined = ldv_undef_int();
> #line 1238
>   if (nondetermined) {
> #line 1241
>     ldv_mutex_mutex_of_drbd_socket = 2;
> #line 1243
>     return (0);
>   } else {
> #line 1248
>     return (-4);
>   }
> }
> }
> #line 1253 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_mutex_lock_killable_mutex_of_drbd_socket(struct mutex *lock ) 
> { 
>   int nondetermined ;
> 
>   {
> #line 1258
>   if (ldv_mutex_mutex_of_drbd_socket == 1) {
> 
>   } else {
> #line 1258
>     ldv_error();
>   }
> #line 1261
>   nondetermined = ldv_undef_int();
> #line 1264
>   if (nondetermined) {
> #line 1267
>     ldv_mutex_mutex_of_drbd_socket = 2;
> #line 1269
>     return (0);
>   } else {
> #line 1274
>     return (-4);
>   }
> }
> }
> #line 1279 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> void ldv_mutex_lock_mutex_of_drbd_socket(struct mutex *lock ) 
> { 
> 
> 
>   {
> #line 1282
>   if (ldv_mutex_mutex_of_drbd_socket == 1) {
> 
>   } else {
> #line 1282
>     ldv_error();
>   }
> #line 1284
>   ldv_mutex_mutex_of_drbd_socket = 2;
> #line 1285
>   return;
> }
> }
> #line 1288 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_mutex_trylock_mutex_of_drbd_socket(struct mutex *lock ) 
> { 
>   int is_mutex_held_by_another_thread ;
> 
>   {
> #line 1293
>   if (ldv_mutex_mutex_of_drbd_socket == 1) {
> 
>   } else {
> #line 1293
>     ldv_error();
>   }
> #line 1296
>   is_mutex_held_by_another_thread = ldv_undef_int();
> #line 1299
>   if (is_mutex_held_by_another_thread) {
> #line 1302
>     return (0);
>   } else {
> #line 1307
>     ldv_mutex_mutex_of_drbd_socket = 2;
> #line 1309
>     return (1);
>   }
> }
> }
> #line 1314 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_atomic_dec_and_mutex_lock_mutex_of_drbd_socket(atomic_t *cnt , struct mutex *lock ) 
> { 
>   int atomic_value_after_dec ;
> 
>   {
> #line 1319
>   if (ldv_mutex_mutex_of_drbd_socket == 1) {
> 
>   } else {
> #line 1319
>     ldv_error();
>   }
> #line 1322
>   atomic_value_after_dec = ldv_undef_int();
> #line 1325
>   if (atomic_value_after_dec == 0) {
> #line 1328
>     ldv_mutex_mutex_of_drbd_socket = 2;
> #line 1330
>     return (1);
>   } else {
> 
>   }
> #line 1334
>   return (0);
> }
> }
> #line 1339 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_mutex_is_locked_mutex_of_drbd_socket(struct mutex *lock ) 
> { 
>   int nondetermined ;
> 
>   {
> #line 1343
>   if (ldv_mutex_mutex_of_drbd_socket == 1) {
> #line 1346
>     nondetermined = ldv_undef_int();
> #line 1349
>     if (nondetermined) {
> #line 1352
>       return (0);
>     } else {
> #line 1357
>       return (1);
>     }
>   } else {
> #line 1363
>     return (1);
>   }
> }
> }
> #line 1368 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> void ldv_mutex_unlock_mutex_of_drbd_socket(struct mutex *lock ) 
> { 
> 
> 
>   {
> #line 1371
>   if (ldv_mutex_mutex_of_drbd_socket == 2) {
> 
>   } else {
> #line 1371
>     ldv_error();
>   }
> #line 1373
>   ldv_mutex_mutex_of_drbd_socket = 1;
> #line 1374
>   return;
> }
> }
> #line 1376 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> static int ldv_mutex_state_mutex_of_drbd_conf  ;
> #line 1379 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_mutex_lock_interruptible_state_mutex_of_drbd_conf(struct mutex *lock ) 
> { 
>   int nondetermined ;
> 
>   {
> #line 1384
>   if (ldv_mutex_state_mutex_of_drbd_conf == 1) {
> 
>   } else {
> #line 1384
>     ldv_error();
>   }
> #line 1387
>   nondetermined = ldv_undef_int();
> #line 1390
>   if (nondetermined) {
> #line 1393
>     ldv_mutex_state_mutex_of_drbd_conf = 2;
> #line 1395
>     return (0);
>   } else {
> #line 1400
>     return (-4);
>   }
> }
> }
> #line 1405 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_mutex_lock_killable_state_mutex_of_drbd_conf(struct mutex *lock ) 
> { 
>   int nondetermined ;
> 
>   {
> #line 1410
>   if (ldv_mutex_state_mutex_of_drbd_conf == 1) {
> 
>   } else {
> #line 1410
>     ldv_error();
>   }
> #line 1413
>   nondetermined = ldv_undef_int();
> #line 1416
>   if (nondetermined) {
> #line 1419
>     ldv_mutex_state_mutex_of_drbd_conf = 2;
> #line 1421
>     return (0);
>   } else {
> #line 1426
>     return (-4);
>   }
> }
> }
> #line 1431 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> void ldv_mutex_lock_state_mutex_of_drbd_conf(struct mutex *lock ) 
> { 
> 
> 
>   {
> #line 1434
>   if (ldv_mutex_state_mutex_of_drbd_conf == 1) {
> 
>   } else {
> #line 1434
>     ldv_error();
>   }
> #line 1436
>   ldv_mutex_state_mutex_of_drbd_conf = 2;
> #line 1437
>   return;
> }
> }
> #line 1440 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_mutex_trylock_state_mutex_of_drbd_conf(struct mutex *lock ) 
> { 
>   int is_mutex_held_by_another_thread ;
> 
>   {
> #line 1445
>   if (ldv_mutex_state_mutex_of_drbd_conf == 1) {
> 
>   } else {
> #line 1445
>     ldv_error();
>   }
> #line 1448
>   is_mutex_held_by_another_thread = ldv_undef_int();
> #line 1451
>   if (is_mutex_held_by_another_thread) {
> #line 1454
>     return (0);
>   } else {
> #line 1459
>     ldv_mutex_state_mutex_of_drbd_conf = 2;
> #line 1461
>     return (1);
>   }
> }
> }
> #line 1466 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_atomic_dec_and_mutex_lock_state_mutex_of_drbd_conf(atomic_t *cnt , struct mutex *lock ) 
> { 
>   int atomic_value_after_dec ;
> 
>   {
> #line 1471
>   if (ldv_mutex_state_mutex_of_drbd_conf == 1) {
> 
>   } else {
> #line 1471
>     ldv_error();
>   }
> #line 1474
>   atomic_value_after_dec = ldv_undef_int();
> #line 1477
>   if (atomic_value_after_dec == 0) {
> #line 1480
>     ldv_mutex_state_mutex_of_drbd_conf = 2;
> #line 1482
>     return (1);
>   } else {
> 
>   }
> #line 1486
>   return (0);
> }
> }
> #line 1491 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_mutex_is_locked_state_mutex_of_drbd_conf(struct mutex *lock ) 
> { 
>   int nondetermined ;
> 
>   {
> #line 1495
>   if (ldv_mutex_state_mutex_of_drbd_conf == 1) {
> #line 1498
>     nondetermined = ldv_undef_int();
> #line 1501
>     if (nondetermined) {
> #line 1504
>       return (0);
>     } else {
> #line 1509
>       return (1);
>     }
>   } else {
> #line 1515
>     return (1);
>   }
> }
> }
> #line 1520 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> void ldv_mutex_unlock_state_mutex_of_drbd_conf(struct mutex *lock ) 
> { 
> 
> 
>   {
> #line 1523
>   if (ldv_mutex_state_mutex_of_drbd_conf == 2) {
> 
>   } else {
> #line 1523
>     ldv_error();
>   }
> #line 1525
>   ldv_mutex_state_mutex_of_drbd_conf = 1;
> #line 1526
>   return;
> }
> }
> #line 1530 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
65597c70971
< #line 1229
---
> #line 1533
65599c70973,70975
< #line 1231
---
> #line 1535
>   ldv_mutex_conf_update_of_drbd_tconn = 1;
> #line 1537
65601c70977,70979
< #line 1233
---
> #line 1539
>   ldv_mutex_cstate_mutex_of_drbd_tconn = 1;
> #line 1541
65603c70981
< #line 1235
---
> #line 1543
65605c70983
< #line 1237
---
> #line 1545
65607c70985
< #line 1239
---
> #line 1547
65609c70987
< #line 1241
---
> #line 1549
65611c70989
< #line 1243
---
> #line 1551
65613c70991
< #line 1244
---
> #line 1552
65617c70995
< #line 1247 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/20/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
---
> #line 1555 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
65623c71001
< #line 1250
---
> #line 1558
65627c71005
< #line 1250
---
> #line 1558
65630c71008,71015
< #line 1252
---
> #line 1560
>   if (ldv_mutex_conf_update_of_drbd_tconn == 1) {
> 
>   } else {
> #line 1560
>     ldv_error();
>   }
> #line 1562
65634c71019
< #line 1252
---
> #line 1562
65637c71022,71029
< #line 1254
---
> #line 1564
>   if (ldv_mutex_cstate_mutex_of_drbd_tconn == 1) {
> 
>   } else {
> #line 1564
>     ldv_error();
>   }
> #line 1566
65641c71033
< #line 1254
---
> #line 1566
65644c71036
< #line 1256
---
> #line 1568
65648c71040
< #line 1256
---
> #line 1568
65651c71043
< #line 1258
---
> #line 1570
65655c71047
< #line 1258
---
> #line 1570
65658c71050
< #line 1260
---
> #line 1572
65662c71054
< #line 1260
---
> #line 1572
65665c71057
< #line 1262
---
> #line 1574
65669c71061
< #line 1262
---
> #line 1574
65672c71064
< #line 1264
---
> #line 1576
65676c71068
< #line 1264
---
> #line 1576
65679c71071
< #line 1265
---
> #line 1577
